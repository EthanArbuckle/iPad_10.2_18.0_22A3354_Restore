double sub_10022C62C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  __n128 v15;
  double result;

  v10 = swift_allocObject(&unk_1005D3D48, 104, 7);
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v10 + 80) = v11;
  *(_QWORD *)(v10 + 96) = *(_QWORD *)(a5 + 64);
  v12 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(v10 + 48) = v12;
  v13 = a4;
  v14 = a2;
  sub_1001CF3C8((_QWORD *)a5);
  static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)(a1, a2, 1, 0, a3, sub_1002323B0, v10, v15);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_10022C6D4(char a1, void *a2, void *a3, __int128 *a4)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v8 = swift_allocObject(&unk_1005D3D70, 112, 7);
  v9 = *a4;
  *(_OWORD *)(v8 + 56) = a4[1];
  v10 = a4[3];
  *(_OWORD *)(v8 + 72) = a4[2];
  *(_OWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 16) = a2;
  *(_BYTE *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 104) = *((_QWORD *)a4 + 8);
  *(_OWORD *)(v8 + 40) = v9;
  v15[4] = sub_100232420;
  v16 = v8;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10004A82C;
  v15[3] = &unk_1005D3D88;
  v11 = _Block_copy(v15);
  v12 = v16;
  v13 = a2;
  v14 = a3;
  sub_1001CF3C8(a4);
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

double sub_10022C7C4(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  os_log_type_t v19;
  uint8_t *v20;
  double result;
  _BYTE v23[24];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (void **)(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, v23, 1, 0);
  v13 = *v12;
  *v12 = 0;
  sub_1000AE638(v13);

  v15 = Logger.UI.unsafeMutableAddressor(v14);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.info.getter(v18);
  if (os_log_type_enabled(v17, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    swift_slowDealloc(v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((a2 & 1) == 0)
    return sub_10022F010(a3, a4);
  return result;
}

void _s5Files32DOCItemInfoContentViewControllerC014tagsCollectionE0_21didSelectAddTagButtonySo07DOCTagshE0C_So6UIViewCtF_0(void *a1)
{
  char *v1;
  char *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  uint64_t v21;
  objc_class *v22;
  _BYTE *v23;
  id v24;
  id v25;
  char *v26;
  Class isa;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  objc_super v35;

  v2 = v1;
  objc_msgSend(a1, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = objc_msgSend(v2, "view");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, "window");

    if (v14)
    {
      v15 = v14;
      objc_msgSend(a1, "bounds");
      objc_msgSend(v15, "convertRect:fromCoordinateSpace:", a1);
      v5 = v16;
      v7 = v17;
      v9 = v18;
      v11 = v19;

    }
    else
    {
      v15 = a1;
    }
    v20 = *(void **)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration];
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    v22 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
    v23 = objc_allocWithZone(v22);
    v23[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
    *(_QWORD *)&v23[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v20;
    v24 = objc_allocWithZone((Class)DOCItemInfoViewController);
    v25 = v20;
    swift_bridgeObjectRetain(v21);
    v26 = v23;
    sub_10006922C((uint64_t *)&unk_1006424B0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v28 = objc_msgSend(v24, "initWithNodes:configuration:actionReporting:", isa, v25, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v28;
    v29 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v28);
    *(_QWORD *)&v26[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v29;
    objc_msgSend(v29, "_setBuiltinTransitionStyle:", 1);
    v30 = v28;
    objc_msgSend(v30, "displayTagView");

    v35.receiver = v26;
    v35.super_class = v22;
    v31 = objc_msgSendSuper2(&v35, "init");

    UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
    v32 = objc_msgSend(v31, "popoverPresentationController");
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v32, "setSourceView:", v15);

    }
    v34 = objc_msgSend(v31, "popoverPresentationController");
    objc_msgSend(v34, "setSourceRect:", v5, v7, v9, v11);

    objc_msgSend(v2, "presentViewController:animated:completion:", v31, 1, 0);
    swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagViewController], v31);

  }
  else
  {
    __break(1u);
  }
}

void sub_10022CC88(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  _BYTE v37[24];

  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v17);
  v19 = &v37[-v18 - 8];
  sub_1002320B8(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100157D6C((uint64_t)v12);
    if (a2)
    {
      v20 = swift_errorRetain(a2);
      v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
      v22 = static os_log_type_t.error.getter(v21);
      v23 = sub_10006922C((uint64_t *)&unk_100644560);
      v24 = swift_allocObject(v23, 112, 7);
      *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
      v25 = objc_msgSend(a4, "description");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      *(_QWORD *)(v24 + 56) = &type metadata for String;
      *(_QWORD *)(v24 + 64) = sub_10006A638();
      *(_QWORD *)(v24 + 32) = v26;
      *(_QWORD *)(v24 + 40) = v28;
      v29 = _convertErrorToNSError(_:)(a2);
      *(_QWORD *)(v24 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v24 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v24 + 72) = v29;
      os_log(_:dso:log:type:_:)("Unable to fetch URL for node: %@ error: %@", 42, 2, &_mh_execute_header, v21, v22, v24);

      swift_bridgeObjectRelease(v24);
      swift_errorRelease(a2);
    }
  }
  else
  {
    v30 = (unint64_t *)(a5 + 16);
    v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32);
    v31(v19, v12, v13);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v16, v19, v13);
    swift_beginAccess(a5 + 16, v37, 33, 0);
    v32 = *(_QWORD *)(a5 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
    *(_QWORD *)(a5 + 16) = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v32 = sub_100153AD4(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
      *v30 = v32;
    }
    v35 = *(_QWORD *)(v32 + 16);
    v34 = *(_QWORD *)(v32 + 24);
    if (v35 >= v34 >> 1)
    {
      v32 = sub_100153AD4(v34 > 1, v35 + 1, 1, v32);
      *v30 = v32;
    }
    *(_QWORD *)(v32 + 16) = v35 + 1;
    v31((_BYTE *)(v32+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v35), v16, v13);
    swift_endAccess(v37);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  }
  dispatch_group_leave(a3);
}

void sub_10022CFA8(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  Class isa;
  unsigned int v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  _BOOL8 v111;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  Class v122;
  Class v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  NSString *v128;
  id v129;
  Class v130;
  id v131;
  void *v132;
  void *v133;
  id v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t *v147;
  uint64_t v148;
  char *v149;
  unint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  char *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  _QWORD aBlock[5];
  uint64_t v157;
  uint64_t v158[3];
  uint64_t v159;
  char v160[24];
  unint64_t v161;
  char v162[8];

  v152 = a2;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v142 - v8;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = (_QWORD *)(a1 + 16);
  swift_beginAccess(a1 + 16, v162, 0, 0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v149 = (char *)((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v15 = &v149[v13];
    v16 = *(_QWORD *)(v4 + 72);
    v151 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v147 = (uint64_t *)v13;
    swift_bridgeObjectRetain(v13);
    v146 = _swiftEmptyArrayStorage;
    v150 = (unint64_t)v6;
    v148 = v16;
    do
    {
      v151(v12, v15, v3);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v19(v12, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
      {
        v13 = (uint64_t)v147;
        goto LABEL_14;
      }
      v20 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v20(v9, v12, v3);
      if (URL.startAccessingSecurityScopedResource()())
      {
        v151(v6, v9, v3);
        if ((swift_isUniquelyReferenced_nonNull_native(v146) & 1) == 0)
          v146 = (_QWORD *)sub_100153AD4(0, v146[2] + 1, 1, (unint64_t)v146);
        v22 = v146[2];
        v21 = v146[3];
        if (v22 >= v21 >> 1)
          v146 = (_QWORD *)sub_100153AD4(v21 > 1, v22 + 1, 1, (unint64_t)v146);
        v17 = v146;
        v146[2] = v22 + 1;
        v16 = v148;
        v18 = &v149[(_QWORD)v17 + v22 * v148];
        v6 = (char *)v150;
        v20(v18, (char *)v150, v3);
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      v15 += v16;
      --v14;
    }
    while (v14);
    v13 = (uint64_t)v147;
    v19(v12, 1, 1, v3);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain(v13);
    v146 = _swiftEmptyArrayStorage;
    v23(v12, 1, 1, v3);
  }
LABEL_14:
  swift_bridgeObjectRelease(v13);
  v24 = (uint64_t)sub_10022527C;
  v25 = v152;
  v26 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
  v27 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
  objc_msgSend(v27, "bounds");
  v29 = v28;

  v30 = sub_10007EB18(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = objc_msgSend(v25, "view");
  if (!v37)
  {
    __break(1u);
    goto LABEL_95;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "window");

  if (v39)
  {

    v26 = v39;
    v40 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
    objc_msgSend(v26, "convertRect:fromCoordinateSpace:", v40, v30, v32, v34, v36);
    v30 = v41;
    v32 = v42;
    v34 = v43;
    v36 = v44;

  }
  v45 = sub_100223654();
  v143 = v26;
  if (v45)
  {
    v24 = *(_QWORD *)&v45[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout];
    v46 = *(_QWORD *)(v24 + 24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v149 = v45;
    if ((unint64_t)v46 >> 62)
    {
      if (v46 < 0)
        v141 = v46;
      else
        v141 = v46 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      swift_bridgeObjectRetain(v46);
      v47 = _CocoaArrayWrapper.endIndex.getter(v141);
    }
    else
    {
      v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain(v46);
    }
    v148 = v24;
    v151 = (void (*)(char *, char *, uint64_t))(v24 + 32);
    swift_beginAccess(v24 + 32, v160, 0, 0);
    if (v47)
    {
      v48 = 0;
      v150 = v46 & 0xC000000000000001;
      v49 = v46 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (v150)
        {
          v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v46);
        }
        else
        {
          if (v48 >= *(_QWORD *)(v49 + 16))
            goto LABEL_52;
          v50 = *(id *)(v46 + 8 * v48 + 32);
        }
        v51 = v50;
        v52 = v48 + 1;
        if (__OFADD__(v48, 1))
          goto LABEL_51;
        v53 = v46;
        v54 = *(_QWORD *)v151;
        swift_bridgeObjectRetain(*(_QWORD *)v151);
        v55 = objc_msgSend(v51, "identifier");
        v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v24 = v57;

        LOBYTE(v55) = sub_100477BFC(v56, v24, v54);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v54);
        if ((v55 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v58);
          v24 = *(_QWORD *)(aBlock[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
          v59 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v51);
          specialized ContiguousArray._endMutation()(v59);
        }
        else
        {

        }
        v46 = v53;
        ++v48;
      }
      while (v52 != v47);
      v60 = (_QWORD *)aBlock[0];
      v25 = v152;
    }
    else
    {
      v60 = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRelease(v46);
    swift_release(v148);
  }
  else
  {
    v60 = _swiftEmptyArrayStorage;
  }
  v145 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager;
  v61 = *(void **)&v25[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager];
  v161 = (unint64_t)v60;
  v151 = (void (*)(char *, char *, uint64_t))OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v62 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  v63 = *(void **)&v25[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration];
  v64 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
  v65 = v61;
  swift_bridgeObjectRetain(v62);
  v66 = v63;
  v67 = sub_10034F94C(v62, v64, 0, (uint64_t)v66, 0, 0);

  swift_bridgeObjectRelease(v62);
  sub_10012FB10(v67);
  v159 = (uint64_t)_swiftEmptyArrayStorage;
  v24 = v161;
  if (v161 >> 62)
    goto LABEL_53;
  v13 = *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10);
  v25 = v152;
  if (v13)
  {
    v68 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
    swift_bridgeObjectRetain(v161);
    while (1)
    {
      v69 = &v25[v68];
      v150 = sub_10006922C(&qword_100648440);
      v70 = 0;
      v149 = (char *)(v24 & 0xC000000000000001);
      v147 = &v153;
      v148 = v24;
      while (1)
      {
        v79 = v149
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v24)
            : *(id *)(v24 + 8 * v70 + 32);
        v24 = (uint64_t)v79;
        v80 = objc_msgSend(v79, "filteringPredicate");
        v153 = 0x7365646F4E636F64;
        v154 = 0xE800000000000000;
        v155 = *(_QWORD *)((char *)v151 + (_QWORD)v25);
        v81 = v155;
        v82 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(1);
        v83 = v153;
        v84 = v154;
        v85 = v155;
        swift_bridgeObjectRetain(v81);
        swift_bridgeObjectRetain(v84);
        swift_bridgeObjectRetain(v85);
        v86 = sub_10007EF08(v83, v84);
        if ((v87 & 1) != 0)
          break;
        v82[(v86 >> 6) + 8] |= 1 << v86;
        v88 = (uint64_t *)(v82[6] + 16 * v86);
        *v88 = v83;
        v88[1] = v84;
        *(_QWORD *)(v82[7] + 8 * v86) = v85;
        v89 = v82[2];
        v90 = __OFADD__(v89, 1);
        v91 = v89 + 1;
        if (v90)
          goto LABEL_50;
        v82[2] = v91;
        v92 = sub_10006922C(&qword_100648448);
        swift_arrayDestroy(v147, 1, v92);
        sub_10006922C((uint64_t *)&unk_100643CB0);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v94 = objc_msgSend(v80, "evaluateWithObject:", isa, swift_release(v82).n128_f64[0]);

        if (v94)
        {
          v95 = objc_msgSend((id)objc_opt_self(DOCActivity), "activityForBrowserAction:actionPerformerProxy:", v24, *(_QWORD *)&v152[v145]);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v95);
          v97 = *(_QWORD *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v96 = *(_QWORD *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v97 >= v96 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
          v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v95);
          specialized Array._endMutation()(v71);
          v72 = objc_msgSend((id)v24, "identifier");
          v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
          v75 = v74;

          swift_beginAccess(v69, aBlock, 33, 0);
          v76 = (id)v24;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v69);
          v158[0] = *(_QWORD *)v69;
          *(_QWORD *)v69 = 0x8000000000000000;
          sub_10035755C((uint64_t)v76, v73, v75, isUniquelyReferenced_nonNull_native);
          v78 = *(_QWORD *)v69;
          *(_QWORD *)v69 = v158[0];
          swift_bridgeObjectRelease(v75);
          swift_bridgeObjectRelease(v78);
          swift_endAccess(aBlock);

        }
        ++v70;

        v25 = v152;
        v24 = v148;
        if (v13 == v70)
          goto LABEL_60;
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      v98 = v24 < 0 ? v24 : v24 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v24);
      v99 = _CocoaArrayWrapper.endIndex.getter(v98);
      swift_bridgeObjectRelease(v24);
      v100 = v99 <= 0;
      v25 = v152;
      if (v100)
        break;
      swift_bridgeObjectRetain(v24);
      v101 = _CocoaArrayWrapper.endIndex.getter(v98);
      if (!v101)
        goto LABEL_60;
      v13 = v101;
      if (v101 < 1)
      {
        __break(1u);
LABEL_60:
        swift_bridgeObjectRelease(v24);
        break;
      }
LABEL_95:
      v68 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
    }
  }
  v102 = *(_QWORD *)((char *)v151 + (_QWORD)v25);
  if ((unint64_t)v102 >> 62)
    goto LABEL_76;
  v103 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v102, 2);
  if (v103)
  {
LABEL_63:
    v104 = (void *)objc_opt_self(DOCManagedPermission);
    v105 = 4;
    while (1)
    {
      v106 = v105 - 4;
      if ((v102 & 0xC000000000000001) != 0)
      {
        v107 = specialized _ArrayBuffer._getElementSlowPath(_:)(v105 - 4, v102);
        v108 = v105 - 3;
        if (__OFADD__(v106, 1))
          goto LABEL_75;
      }
      else
      {
        v107 = *(_QWORD *)(v102 + 8 * v105);
        swift_unknownObjectRetain(v107);
        v108 = v105 - 3;
        if (__OFADD__(v106, 1))
        {
LABEL_75:
          __break(1u);
LABEL_76:
          if (v102 < 0)
            v113 = v102;
          else
            v113 = v102 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v102, 2);
          v103 = _CocoaArrayWrapper.endIndex.getter(v113);
          if (!v103)
            break;
          goto LABEL_63;
        }
      }
      v109 = objc_msgSend(v104, "defaultPermission");
      v110 = objc_msgSend(v109, "dataOwnerStateForNode:", v107);
      swift_unknownObjectRelease(v107);

      v111 = v110 == (id)1;
      ++v105;
      if (v110 == (id)1 || v108 == v103)
        goto LABEL_81;
    }
  }
  v111 = 0;
LABEL_81:
  swift_bridgeObjectRelease_n(v102, 2);
  swift_bridgeObjectRelease(v161);
  v114 = v144;
  swift_beginAccess(v144, v158, 0, 0);
  v115 = *v114;
  v116 = swift_bridgeObjectRetain(*v114);
  v117 = sub_10043B7EC(v116);
  swift_bridgeObjectRelease(v115);
  v118 = v159;
  if ((unint64_t)v159 >> 62)
  {
    if (v159 < 0)
      v139 = v159;
    else
      v139 = v159 & 0xFFFFFFFFFFFFFF8;
    v140 = sub_10004F2F0(0, &qword_100648430, UIActivity_ptr);
    swift_bridgeObjectRetain(v118);
    v120 = _bridgeCocoaArray<A>(_:)(v139, v140);
    swift_bridgeObjectRelease(v118);
  }
  else
  {
    v119 = swift_bridgeObjectRetain(v159);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v119);
    sub_10004F2F0(0, &qword_100648430, UIActivity_ptr);
    v120 = v118;
  }
  swift_bridgeObjectRelease(v118);
  v121 = objc_allocWithZone((Class)UIActivityViewController);
  v122 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v117);
  sub_10004F2F0(0, &qword_100648430, UIActivity_ptr);
  v123 = Array._bridgeToObjectiveC()().super.isa;
  v124 = objc_msgSend(v121, "initWithActivityItems:applicationActivities:", v122, v123, swift_bridgeObjectRelease(v120).n128_f64[0]);

  objc_msgSend(v124, "setSharingStyle:", 1);
  objc_msgSend(v124, "setIsContentManaged:", v111);
  v125 = sub_10006922C(&qword_100648438);
  v126 = swift_allocObject(v125, 48, 7);
  *(_OWORD *)(v126 + 16) = xmmword_1004D4CE0;
  v127 = (void *)DOCSaveToFilesActivityType;
  *(_QWORD *)(v126 + 32) = UIActivityTypeCopyToPasteboard;
  *(_QWORD *)(v126 + 40) = v127;
  type metadata accessor for ActivityType(0);
  v128 = UIActivityTypeCopyToPasteboard;
  v129 = v127;
  v130 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v124, "setExcludedActivityTypes:", v130, swift_bridgeObjectRelease(v126).n128_f64[0]);

  v131 = objc_msgSend(v124, "popoverPresentationController");
  v132 = v143;
  if (v131)
  {
    v133 = v131;
    objc_msgSend(v131, "setSourceView:", v143);

  }
  v134 = objc_msgSend(v124, "popoverPresentationController");
  objc_msgSend(v134, "setSourceRect:", v30, v32, v34, v36);

  v135 = swift_allocObject(&unk_1005D3768, 24, 7);
  v136 = v152;
  swift_unknownObjectWeakInit(v135 + 16);
  v137 = swift_allocObject(&unk_1005D3A78, 32, 7);
  *(_QWORD *)(v137 + 16) = v146;
  *(_QWORD *)(v137 + 24) = v135;
  aBlock[4] = sub_1002320B0;
  v157 = v137;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10022E078;
  aBlock[3] = &unk_1005D3A90;
  v138 = _Block_copy(aBlock);
  objc_msgSend(v124, "setCompletionWithItemsHandler:", v138, swift_release(v157).n128_f64[0]);
  _Block_release(v138);
  objc_msgSend(v136, "presentViewController:animated:completion:", v124, 1, 0);

}

double sub_10022DE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t Strong;
  double result;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a5 + 16);
  v27 = a6 + 16;
  if (v15)
  {
    v16 = a5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain(a5);
    while (1)
    {
      v18(v14, v16, v8);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v19(v14, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      URL.stopAccessingSecurityScopedResource()();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v16 += v17;
      if (!--v15)
        goto LABEL_7;
    }
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain(a5);
LABEL_7:
    v19(v14, 1, 1, v8);
  }
  swift_bridgeObjectRelease(a5);
  v20 = v27;
  swift_beginAccess(v27, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v20);
  if (Strong)
  {
    v23 = (void *)Strong;
    v24 = (uint64_t *)(Strong
                    + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController, v28, 1, 0);
    v25 = *v24;
    *v24 = (uint64_t)&_swiftEmptyDictionarySingleton;

    *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_10022E078(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void DOCItemInfoContentViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCItemInfoContentViewController", 38, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void DOCItemInfoContentViewController.previewController(_:viewFor:_:)(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  sub_10023166C(a3);
}

UIView_optional __swiftcall DOCItemInfoContentViewController.viewForZooming(in:)(UIScrollView in)
{
  uint64_t v1;
  void *v2;
  id v3;
  Swift::Bool v4;
  objc_class *v5;
  UIView_optional result;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView);
  v3 = v2;
  v5 = (objc_class *)v2;
  result.value.super.super.isa = v5;
  result.is_nil = v4;
  return result;
}

void DOCItemInfoContentViewController.tagsCollectionItem(_:didDelete:)(uint64_t a1, void *a2)
{
  sub_100231730(a2);
}

double sub_10022E418(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  char v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  Class isa;
  Class v21;
  id v22;
  double result;
  uint64_t v24;
  uint64_t v25;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, "tags");
    if (!v4)
    {
LABEL_5:

      return result;
    }
    v5 = v4;
    v6 = sub_10004F2F0(0, (unint64_t *)&unk_100646CB0, FPTag_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    v25 = v7;
    swift_bridgeObjectRetain(v7);
    v8 = (id)FPTagFromDOCTag(a2);
    v9 = sub_10017471C((uint64_t)v8, v7);
    v11 = v10;
    swift_bridgeObjectRelease(v7);

    if ((v11 & 1) == 0)
    {

      v12 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v14 = swift_allocObject(v13, 40, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v14 + 32) = v3;
      v24 = v14;
      specialized Array._endMutation()(v14);
      v15 = sub_10006922C(&qword_100644AF0);
      v16 = swift_allocObject(v15, 40, 7);
      *(_OWORD *)(v16 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v16 + 32) = v25;
      v17 = (void *)objc_opt_self(DOCUndoManager);
      v3 = v3;
      v18 = objc_msgSend(v17, "shared");
      v19 = objc_allocWithZone((Class)DOCSetTagsOperation);
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v24);
      sub_10006922C(&qword_100644AF8);
      v21 = Array._bridgeToObjectiveC()().super.isa;
      v22 = objc_msgSend(v19, "initWithItems:tagsLists:isUndoable:shouldClearUndoStack:undoManager:", isa, v21, 1, 0, v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

      objc_msgSend(v12, "scheduleAction:", v22);
      goto LABEL_5;
    }

    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

void DOCItemInfoContentViewController.nodeDownloadButton(_:downloadingNode:encounteredError:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v5 = swift_allocObject(&unk_1005D3858, 32, 7);
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = v3;
  v9[4] = sub_10023186C;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004A82C;
  v9[3] = &unk_1005D3870;
  v6 = _Block_copy(v9);
  v7 = v10;
  swift_errorRetain(a3);
  v8 = v3;
  swift_release(v7);
  DOCRunInMainThread(v6);
  _Block_release(v6);
}

void sub_10022E7FC(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;

  v14 = (id)_convertErrorToNSError(_:)(a1);
  v4 = objc_msgSend(v14, "domain");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorDomain);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
      goto LABEL_10;
  }
  if (objc_msgSend(v14, "code") != (id)-1009)
  {
LABEL_10:
    v13 = (void *)_convertErrorToNSError(_:)(a1);
    DOCPresentAlertForError(v13, a2);

    goto LABEL_11;
  }
  DOCAlertUserTheNetworkIsNotReachable(a2);
LABEL_11:

}

double DOCItemInfoContentViewController.nodeDownloadButton(_:requestedOpening:)(uint64_t a1, void *a2)
{
  return sub_100231874(a2);
}

id sub_10022EB10()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCDragInteraction);
}

void sub_10022EC3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  char *Strong;
  char *v8;
  id v9;
  id v10;
  char *v11;
  unint64_t v12;
  objc_class *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void (**v19)(_QWORD, _QWORD, _QWORD);
  id v20;
  Class isa;
  objc_super v22;
  char v23[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(Strong, "effectiveAppearance");
    v10 = *(id *)&v8[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration];
    v11 = v8;
    v12 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v13 = (objc_class *)type metadata accessor for DOCActionContext();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v9;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v10;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v11;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(_QWORD *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v12;
    v22.receiver = v14;
    v22.super_class = v13;
    v15 = objc_msgSendSuper2(&v22, "init");
    v16 = *(id *)&v11[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager];
    if (objc_msgSend(a3, "requiresResolvedItems"))
    {
      v17 = a3;
      sub_10035E100(a4, v17, v15);

      v16 = v17;
    }
    else
    {
      v18 = objc_msgSend(a3, "unresolvedHandler");
      if (!v18)
      {
LABEL_7:

        return;
      }
      v19 = (void (**)(_QWORD, _QWORD, _QWORD))v18;
      v20 = v15;
      _Block_copy(v19);
      sub_10006922C((uint64_t *)&unk_1006424B0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, id))v19)[2](v19, isa, v20);

      _Block_release(v19);
      _Block_release(v19);
    }

    v16 = v15;
    goto LABEL_7;
  }
}

void sub_10022EE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v2);
    if (v11 != 1)
      return;
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return;
  }
  v3 = *(_QWORD *)(v0 + v1);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v12 = *(_QWORD *)(v0 + v1);
    else
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    if (_CocoaArrayWrapper.endIndex.getter(v12))
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease(v3);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v4)
    goto LABEL_20;
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v5 = *(_QWORD *)(v3 + 32);
    swift_unknownObjectRetain(v5);
  }
  swift_bridgeObjectRelease(v3);
  ObjectType = swift_getObjectType(v5, v6);
  v8 = DOCNode.documentAttributes.getter(ObjectType);
  if (v8)
  {
    v9 = (void *)v8;
    SYDocumentAttributes.performReturnToDocumentRequest()();

  }
  swift_unknownObjectRelease(v5);
}

uint64_t sub_10022EFCC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10022EFF0()
{
  uint64_t v0;

  sub_100229320(v0);
}

void sub_10022EFF8(void *a1)
{
  uint64_t v1;

  sub_1002293F0(a1, v1);
}

void sub_10022F000()
{
  sub_10022BCE4();
}

void sub_10022F008(void *a1)
{
  uint64_t v1;

  sub_10022BBAC(a1, *(void **)(v1 + 16));
}

double sub_10022F010(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  unsigned __int8 v26;
  char v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  __n128 v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  id v46;
  double result;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  __n128 v64;
  os_log_type_t v65;
  uint8_t *v66;
  __n128 v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  NSObject *v94;
  __n128 v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  __int128 v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  id v109[3];
  char v110[8];

  v4 = type metadata accessor for Logger(0);
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  __chkstk_darwin(v4);
  v101 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v102 = (char *)&v101 - v7;
  __chkstk_darwin(v8);
  v106 = (char *)&v101 - v9;
  v10 = sub_10006922C((uint64_t *)&unk_100646BD0);
  __chkstk_darwin(v10);
  v103 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id *)DOCLog.UI.unsafeMutableAddressor(v12);
  v14 = *v13;
  v15 = static os_log_type_t.default.getter(v14);
  v104 = sub_10006922C((uint64_t *)&unk_100644560);
  v16 = swift_allocObject(v104, 72, 7);
  v105 = xmmword_1004D9670;
  *(_OWORD *)(v16 + 16) = xmmword_1004D9670;
  v17 = objc_msgSend(a1, "displayName");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v21 = sub_10006A638();
  *(_QWORD *)(v16 + 64) = v21;
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;

  swift_bridgeObjectRelease(v16);
  v22 = swift_allocObject(&unk_1005D3DC0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = swift_allocObject(&unk_1005D3DE8, 96, 7);
  *(_QWORD *)(v23 + 16) = v22;
  v24 = *(_OWORD *)a2;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(a2 + 16);
  v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v23 + 72) = v25;
  *(_QWORD *)(v23 + 88) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(v23 + 24) = v24;
  sub_1001CF3C8((_QWORD *)a2);
  if (objc_msgSend(a1, "isDownloading") && !objc_msgSend(a1, "isDownloaded"))
    v26 = 1;
  else
    v26 = objc_msgSend(a1, "isExternalDownloadPlaceholder");
  if (objc_msgSend(a1, "isCloudItem"))
    v27 = objc_msgSend(a1, "isDownloaded") ^ 1;
  else
    v27 = 0;
  if (objc_msgSend(a1, "isFolder"))
  {
    v28 = objc_msgSend(a1, "fpfs_fpItem");
    v30 = v107;
    v29 = v108;
    v31 = v106;
    if (v28)
    {
      v32 = v28;
      v33 = qword_100640E38;
      v34 = v28;
      if (v33 != -1)
        swift_once(&qword_100640E38, sub_10009870C);
      v35 = type metadata accessor for RestorableSettings(0);
      v36 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v103, 1, 1, v35);
      swift_beginAccess(&off_100645FC0, v109, 33, 0);
      v37 = v34;
      sub_10043B2D8(v36, v32, 0);
      swift_endAccess(v109);

    }
    v38 = Logger.UI.unsafeMutableAddressor(v28);
    v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v31, v38, v29);
    v40 = Logger.logObject.getter(v39);
    v42 = static os_log_type_t.info.getter(v41);
    if (os_log_type_enabled(v40, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v42, "[TAP] [Interaction] Node is a folder, navigating to the next location.", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
    v44 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v45 = (void *)DOCNode.sourceIdentifier.getter(v44);
    v46 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v45, a1);

    sub_100232550(a2, (uint64_t)v110);
    sub_100232550((uint64_t)v110, (uint64_t)v109);
    if (v109[0])
      objc_msgSend(v109[0], "didSelectLocation:atParentLocation:", v46, *(_QWORD *)(a2 + 48));
    swift_release(v23);

    return result;
  }
  if ((*(_BYTE *)(a2 + 42) & 1) != 0 && (*(_BYTE *)(a2 + 56) & 1) == 0)
  {
    v48 = *v13;
    v49 = static os_log_type_t.default.getter(v48);
    v50 = swift_allocObject(v104, 72, 7);
    *(_OWORD *)(v50 + 16) = v105;
    v51 = objc_msgSend(a1, "displayName");
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v54 = v53;

    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = v21;
    *(_QWORD *)(v50 + 32) = v52;
    *(_QWORD *)(v50 + 40) = v54;

    swift_bridgeObjectRelease(v50);
    v55 = swift_allocObject(&unk_1005D3E60, 32, 7);
    *(_QWORD *)(v55 + 16) = sub_100232490;
    *(_QWORD *)(v55 + 24) = v23;
    v56 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_retain();
LABEL_29:
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1002324C0, v55, v56);
    v81 = v55;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a2 + 57) & 1) != 0)
  {
LABEL_28:
    v82 = *v13;
    v83 = static os_log_type_t.default.getter(v82);
    v84 = swift_allocObject(v104, 72, 7);
    *(_OWORD *)(v84 + 16) = v105;
    v85 = objc_msgSend(a1, "displayName");
    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v88 = v87;

    *(_QWORD *)(v84 + 56) = &type metadata for String;
    *(_QWORD *)(v84 + 64) = v21;
    *(_QWORD *)(v84 + 32) = v86;
    *(_QWORD *)(v84 + 40) = v88;

    swift_bridgeObjectRelease(v84);
    v55 = swift_allocObject(&unk_1005D3E10, 32, 7);
    *(_QWORD *)(v55 + 16) = sub_100232490;
    *(_QWORD *)(v55 + 24) = v23;
    v56 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_retain();
    goto LABEL_29;
  }
  if ((v26 & 1) == 0)
  {
    if ((v27 & 1) != 0)
    {
      v68 = *v13;
      LODWORD(v108) = static os_log_type_t.default.getter(v68);
      v69 = swift_allocObject(v104, 72, 7);
      *(_OWORD *)(v69 + 16) = v105;
      v70 = objc_msgSend(a1, "displayName");
      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v73 = v72;

      *(_QWORD *)(v69 + 56) = &type metadata for String;
      *(_QWORD *)(v69 + 64) = v21;
      *(_QWORD *)(v69 + 32) = v71;
      *(_QWORD *)(v69 + 40) = v73;

      swift_bridgeObjectRelease(v69);
      v74 = swift_allocObject(&unk_1005D3DC0, 24, 7);
      swift_unknownObjectWeakInit(v74 + 16);
      v75 = swift_allocObject(&unk_1005D3E38, 120, 7);
      v76 = *(_OWORD *)a2;
      *(_OWORD *)(v75 + 40) = *(_OWORD *)(a2 + 16);
      v77 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v75 + 56) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v75 + 72) = v77;
      *(_QWORD *)(v75 + 16) = v74;
      v78 = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(v75 + 24) = v76;
      *(_QWORD *)(v75 + 88) = v78;
      *(_QWORD *)(v75 + 96) = a1;
      *(_QWORD *)(v75 + 104) = sub_100232490;
      *(_QWORD *)(v75 + 112) = v23;
      sub_1001CF3C8((_QWORD *)a2);
      v79 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      swift_retain();
      swift_retain();
      v80 = a1;
      DOCNode.fpfs_fetchFPItem(completion:)(sub_100232534, v75, v79);
      swift_release(v74);
      v81 = v75;
LABEL_30:
      swift_release(v81);
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  v57 = objc_msgSend(a1, "isExternalDownloadPlaceholder");
  if ((v57 & 1) != 0)
  {
    v58 = Logger.UI.unsafeMutableAddressor(v57);
    v60 = v107;
    v59 = v108;
    v61 = v102;
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 16))(v102, v58, v108);
    v63 = Logger.logObject.getter(v62);
    v65 = static os_log_type_t.info.getter(v64);
    if (os_log_type_enabled(v63, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v65, "[TAP] [Interaction] Item is a Safari download in progress, don't cancel the D/L, but don't open either", v66, 2u);
      swift_slowDealloc(v66, -1, -1);
      swift_release(v23);

    }
    else
    {

      v67 = swift_release(v23);
    }
    (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v61, v59, v67);
    return result;
  }
  v90 = v107;
  v89 = v108;
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
LABEL_31:
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
    return result;
  }
  v91 = Logger.UI.unsafeMutableAddressor(v57);
  v92 = v101;
  v93 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 16))(v101, v91, v89);
  v94 = Logger.logObject.getter(v93);
  v96 = static os_log_type_t.info.getter(v95);
  if (os_log_type_enabled(v94, v96))
  {
    v97 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v97 = 0;
    _os_log_impl((void *)&_mh_execute_header, v94, v96, "[TAP] [Interaction] Item is a Download in progress, Cancelling D/L", v97, 2u);
    swift_slowDealloc(v97, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v89);
  v98 = swift_allocObject(&unk_1005D3DC0, 24, 7);
  swift_unknownObjectWeakInit(v98 + 16);
  v99 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  swift_retain();
  DOCNode.fpfs_fetchFPItem(completion:)(sub_100232548, v98, v99);
  swift_release_n(v98, 2, v100);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_10022FA5C(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSString v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  char *v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  void *v46;
  NSObject *v47;
  unsigned __int8 v48;
  void *v49;
  _BOOL8 v50;
  NSObject *v51;
  id v52;
  id v53;
  char *v54;
  void **v55;
  void *v56;
  id v57;
  uint64_t v58;
  id v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  __int128 v67;
  NSObject *v68;
  NSObject *v69;
  void *v70;
  uint64_t v71;
  NSObject *v72;
  NSObject *v73;
  id v74;
  uint64_t v75;
  NSObject *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char v88[24];
  _QWORD aBlock[5];
  uint64_t v90;
  char v91[24];
  char v92[24];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  char *v97;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  v10 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration], "sceneIdentifier", v6);
  v11 = _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v10);

  v12 = (Class *)((char *)&v11->isa + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  *(_QWORD *)&v14 = swift_beginAccess((char *)v11 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, v92, 0, 0).n128_u64[0];
  if (!*v12)
  {
    if ((objc_msgSend(a1, "isTrashed", v14) & 1) != 0
      && (objc_msgSend(a1, "isFolder") & 1) == 0)
    {
      v23 = objc_msgSend(a1, "displayName");
      if (!v23)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v40 = v39;
        v23 = String._bridgeToObjectiveC()();
        v38 = swift_bridgeObjectRelease(v40);
      }
      DOCAlertUserTrashedFileCanNotBeOpened(v23, a2, v38);
    }
    else
    {
      v21 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v22 = DOCNode.fpfs_syncFetchFPItem()(v21);
      if (!v22)
      {
LABEL_31:

        return;
      }
      v23 = (NSString)v22;
      v24 = *(id *)&a2[v9];
      v25 = sub_100432A2C(v23, v24, (uint64_t)a2);

      if ((v25 & 1) != 0)
      {
        if ((objc_msgSend(*(id *)&a2[v9], "useSharedQuickLook") & 1) != 0
          && (objc_msgSend(a1, "isFolder") & 1) == 0)
        {
          v26 = objc_msgSend(*(id *)&a2[v9], "sceneIdentifier");
          if (v26)
          {
            v27 = qword_1006411A8;
            v28 = v26;
            if (v27 != -1)
              swift_once(&qword_1006411A8, sub_100470A10);
            v29 = (void *)qword_100656EE0;
            v30 = (char *)objc_msgSend((id)qword_100656EE0, "objectForKey:", v28);
            if (!v30)
            {
              v31 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
              v87 = v29;
              v30 = (char *)DOCPreviewController.init()();
              objc_msgSend(v87, "setObject:forKey:", v30, v28);
            }

            v32 = &v30[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
            swift_beginAccess(&v30[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity], v88, 1, 0);
            *v32 = 1;
            v33 = &v30[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
            *((_QWORD *)v33 + 1) = &protocol witness table for DOCItemInfoContentViewController;
            swift_unknownObjectWeakAssign(v33, a2);
            v34 = sub_10006922C((uint64_t *)&unk_1006441A0);
            v35 = swift_allocObject(v34, 40, 7);
            *(_OWORD *)(v35 + 16) = xmmword_1004D9B40;
            *(_QWORD *)(v35 + 32) = v23;
            *(_QWORD *)&v93 = v35;
            specialized Array._endMutation()(v35);
            v36 = v93;
            v37 = v23;
            DOCPreviewController.set(_:defaultIndex:)(v36, 0, 0, 0, 1);

            swift_bridgeObjectRelease(v36);
          }
          else
          {
            v41 = *(id *)DOCLog.Source.unsafeMutableAddressor();
            v42 = static os_log_type_t.debug.getter(v41);
            os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v41, v42, _swiftEmptyArrayStorage);

          }
        }
        v87 = v21;
        v43 = swift_allocObject(&unk_1005D3768, 24, 7);
        swift_unknownObjectWeakInit(v43 + 16);
        v44 = swift_allocObject(&unk_1005D3E88, 32, 7);
        *(_QWORD *)(v44 + 16) = v43;
        *(_QWORD *)(v44 + 24) = v11;
        Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting]);
        v46 = *(void **)&a2[v9];
        v47 = v11;
        LOBYTE(v46) = objc_msgSend(v46, "useSharedQuickLook", swift_retain().n128_f64[0]);
        v48 = objc_msgSend(*(id *)&a2[v9], "skipDownload");
        *(_QWORD *)&v93 = Strong;
        *((_QWORD *)&v93 + 1) = sub_100232800;
        *(_QWORD *)&v95 = 0;
        v94 = (unint64_t)v44;
        BYTE8(v95) = 0;
        BYTE9(v95) = (_BYTE)v46;
        BYTE10(v95) = 1;
        *(_QWORD *)&v96 = 0;
        BYTE8(v96) = 1;
        BYTE9(v96) = v48;
        v97 = a2;
        v49 = *(void **)&a2[v9];
        v11 = a2;
        if (objc_msgSend(v49, "shouldOpenInApp"))
        {
          v86 = Strong;
          if ((objc_msgSend(v23, "doc_isCollaborationInvitation") & 1) == 0)
          {
            v53 = objc_msgSend(*(id *)&a2[v9], "sceneIdentifier");
            v54 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v53);

            v55 = (void **)&v54[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
            swift_beginAccess(&v54[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v91, 1, 0);
            v56 = *v55;
            *v55 = v23;
            v57 = v23;
            sub_1000AE638(v56);

            v59 = *(id *)DOCLog.UI.unsafeMutableAddressor(v58);
            v61 = static os_log_type_t.info.getter(v60);
            v62 = sub_10006922C((uint64_t *)&unk_100644560);
            v63 = swift_allocObject(v62, 72, 7);
            *(_OWORD *)(v63 + 16) = xmmword_1004D9670;
            *(_QWORD *)(v63 + 56) = v87;
            *(_QWORD *)(v63 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
            *(_QWORD *)(v63 + 32) = v57;
            v64 = v57;
            os_log(_:dso:log:type:_:)("[Interaction] Keeping track of last opened item in 'openSelectedItem()': %@", 75, 2, &_mh_execute_header, v59, v61, v63);

            swift_bridgeObjectRelease(v63);
            v65 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
            v66 = swift_allocObject(&unk_1005D3EB0, 112, 7);
            v67 = v95;
            *(_OWORD *)(v66 + 56) = v94;
            *(_QWORD *)(v66 + 16) = v64;
            *(_QWORD *)(v66 + 24) = v47;
            v68 = v47;
            v69 = v11;
            *(_QWORD *)(v66 + 32) = v11;
            *(_OWORD *)(v66 + 72) = v67;
            *(_OWORD *)(v66 + 88) = v96;
            *(_QWORD *)(v66 + 104) = v97;
            *(_OWORD *)(v66 + 40) = v93;
            aBlock[4] = sub_100232804;
            v90 = v66;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100175118;
            aBlock[3] = &unk_1005D3EC8;
            v70 = _Block_copy(aBlock);
            v71 = v90;
            v72 = v68;
            v73 = v69;
            v74 = v64;
            v75 = v86;
            swift_unknownObjectRetain(v86);
            sub_10008BA00((uint64_t)sub_100232800, v44);
            sub_10008BA00(0, 0);
            v76 = v73;
            objc_msgSend(v65, "fetchURLForItem:completionHandler:", v74, v70, swift_release(v71).n128_f64[0]);
            swift_unknownObjectRelease(v75);
            swift_release(v44);

            sub_100087534((uint64_t)sub_100232800, v44);
            sub_100087534(0, 0);

            _Block_release(v70);
            return;
          }
          v50 = FPItem.openInvitationIfPossible()();
          v51 = v47;
          if (v50)
          {
            swift_unknownObjectRelease(v86);
            swift_release(v44);

            sub_100087534((uint64_t)sub_100232800, v44);
            sub_100087534(0, 0);
          }
          else
          {
            v77 = *(id *)DOCLog.UI.unsafeMutableAddressor(v50);
            v78 = static os_log_type_t.error.getter(v77);
            v79 = sub_10006922C((uint64_t *)&unk_100644560);
            v80 = swift_allocObject(v79, 72, 7);
            *(_OWORD *)(v80 + 16) = xmmword_1004D9670;
            v81 = objc_msgSend(v23, "displayName");
            v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
            v84 = v83;

            *(_QWORD *)(v80 + 56) = &type metadata for String;
            *(_QWORD *)(v80 + 64) = sub_10006A638();
            *(_QWORD *)(v80 + 32) = v82;
            *(_QWORD *)(v80 + 40) = v84;
            os_log(_:dso:log:type:_:)("Could not open invitation for %@", 32, 2, &_mh_execute_header, v77, v78, v80);
            swift_unknownObjectRelease(v86);
            swift_release(v44);

            sub_100087534((uint64_t)sub_100232800, v44);
            sub_100087534(0, 0);

            swift_bridgeObjectRelease(v80);
          }

        }
        else
        {
          v52 = v23;
          sub_10022F010(v52, (uint64_t)&v93);
          swift_unknownObjectRelease(Strong);
          swift_release(v44);

          sub_100087534((uint64_t)sub_100232800, v44);
          sub_100087534(0, 0);

        }
        goto LABEL_31;
      }
    }

    return;
  }
  v15 = Logger.UI.unsafeMutableAddressor(v13);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15, v4);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Interaction] An item was selected while there is another one trying to be opened.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
    v20 = v11;
  }
  else
  {
    v20 = v17;
    v17 = v11;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_10023039C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  char *v25;
  id v26;
  char v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  char *v32;
  id v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t Strong;
  void *v49;
  NSObject *v50;
  unsigned __int8 v51;
  void *v52;
  char *v53;
  _BOOL8 v54;
  id v55;
  id v56;
  char *v57;
  void **v58;
  void *v59;
  id v60;
  uint64_t v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  __int128 v69;
  void *v70;
  uint64_t v71;
  NSObject *v72;
  char *v73;
  id v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  NSObject *v85;
  char v86[24];
  _QWORD aBlock[5];
  uint64_t v88;
  char v89[24];
  char v90[24];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char *v95;

  v84 = a1;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  v11 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration], "sceneIdentifier", v7);
  v12 = _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v11);

  v85 = v12;
  v13 = (char *)v12 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem;
  *(_QWORD *)&v15 = swift_beginAccess((char *)v12 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, v90, 0, 0).n128_u64[0];
  if (!*(_QWORD *)v13)
  {
    if ((objc_msgSend(v84, "isTrashed", v15) & 1) != 0
      && (objc_msgSend(v84, "isFolder") & 1) == 0)
    {
      v23 = objc_msgSend(v84, "displayName");
      if (!v23)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v42 = v41;
        v23 = String._bridgeToObjectiveC()();
        v40 = swift_bridgeObjectRelease(v42);
      }
      DOCAlertUserTrashedFileCanNotBeOpened(v23, a2, v40);
    }
    else
    {
      v22 = DOCNode.fpfs_syncFetchFPItem()(a3);
      if (!v22)
      {

        return;
      }
      v23 = (NSString)v22;
      v24 = v10;
      v25 = a2;
      v26 = *(id *)&a2[v24];
      v27 = sub_100432A2C(v23, v26, (uint64_t)v25);

      if ((v27 & 1) != 0)
      {
        if ((objc_msgSend(*(id *)&v25[v24], "useSharedQuickLook") & 1) != 0
          && (objc_msgSend(v84, "isFolder") & 1) == 0)
        {
          v28 = objc_msgSend(*(id *)&v25[v24], "sceneIdentifier");
          if (v28)
          {
            v29 = qword_1006411A8;
            v30 = v28;
            if (v29 != -1)
              swift_once(&qword_1006411A8, sub_100470A10);
            v31 = (void *)qword_100656EE0;
            v32 = (char *)objc_msgSend((id)qword_100656EE0, "objectForKey:", v30);
            if (!v32)
            {
              v33 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
              v32 = (char *)DOCPreviewController.init()();
              objc_msgSend(v31, "setObject:forKey:", v32, v30);
            }

            v34 = &v32[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
            swift_beginAccess(&v32[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity], v86, 1, 0);
            *v34 = 1;
            v35 = &v32[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
            *((_QWORD *)v35 + 1) = &protocol witness table for DOCItemInfoContentViewController;
            swift_unknownObjectWeakAssign(v35, v25);
            v36 = sub_10006922C((uint64_t *)&unk_1006441A0);
            v37 = swift_allocObject(v36, 40, 7);
            *(_OWORD *)(v37 + 16) = xmmword_1004D9B40;
            *(_QWORD *)(v37 + 32) = v23;
            *(_QWORD *)&v91 = v37;
            specialized Array._endMutation()(v37);
            v38 = v91;
            v39 = v23;
            DOCPreviewController.set(_:defaultIndex:)(v38, 0, 0, 0, 1);

            swift_bridgeObjectRelease(v38);
          }
          else
          {
            v43 = *(id *)DOCLog.Source.unsafeMutableAddressor();
            v44 = static os_log_type_t.debug.getter(v43);
            os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v43, v44, _swiftEmptyArrayStorage);

          }
        }
        v45 = swift_allocObject(&unk_1005D3768, 24, 7);
        swift_unknownObjectWeakInit(v45 + 16);
        v46 = swift_allocObject(&unk_1005D3C80, 32, 7);
        v47 = v85;
        *(_QWORD *)(v46 + 16) = v45;
        *(_QWORD *)(v46 + 24) = v47;
        Strong = swift_unknownObjectWeakLoadStrong(&v25[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting]);
        v49 = *(void **)&v25[v24];
        v50 = v47;
        LOBYTE(v49) = objc_msgSend(v49, "useSharedQuickLook", swift_retain().n128_f64[0]);
        v51 = objc_msgSend(*(id *)&v25[v24], "skipDownload");
        *(_QWORD *)&v91 = Strong;
        *((_QWORD *)&v91 + 1) = sub_1002321EC;
        *(_QWORD *)&v93 = 0;
        v92 = (unint64_t)v46;
        BYTE8(v93) = 0;
        BYTE9(v93) = (_BYTE)v49;
        BYTE10(v93) = 1;
        *(_QWORD *)&v94 = 0;
        BYTE8(v94) = 1;
        BYTE9(v94) = v51;
        v95 = v25;
        v52 = *(void **)&v25[v24];
        v53 = v25;
        if (!objc_msgSend(v52, "shouldOpenInApp"))
        {
          v55 = v23;
          sub_10022F010(v55, (uint64_t)&v91);
          swift_unknownObjectRelease(Strong);
          swift_release(v46);

          sub_100087534((uint64_t)sub_1002321EC, v46);
          sub_100087534(0, 0);

LABEL_30:
          return;
        }
        if ((objc_msgSend(v23, "doc_isCollaborationInvitation") & 1) != 0)
        {
          v54 = FPItem.openInvitationIfPossible()();
          if (v54)
          {
            swift_unknownObjectRelease(Strong);
            swift_release(v46);

            sub_100087534((uint64_t)sub_1002321EC, v46);
            sub_100087534(0, 0);
          }
          else
          {
            v76 = *(id *)DOCLog.UI.unsafeMutableAddressor(v54);
            LODWORD(v85) = static os_log_type_t.error.getter(v76);
            v77 = sub_10006922C((uint64_t *)&unk_100644560);
            v78 = swift_allocObject(v77, 72, 7);
            *(_OWORD *)(v78 + 16) = xmmword_1004D9670;
            v79 = objc_msgSend(v23, "displayName");
            v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
            v82 = v81;

            *(_QWORD *)(v78 + 56) = &type metadata for String;
            *(_QWORD *)(v78 + 64) = sub_10006A638();
            *(_QWORD *)(v78 + 32) = v80;
            *(_QWORD *)(v78 + 40) = v82;
            os_log(_:dso:log:type:_:)("Could not open invitation for %@", 32, 2, &_mh_execute_header, v76, v85, v78);
            swift_unknownObjectRelease(Strong);
            swift_release(v46);

            sub_100087534((uint64_t)sub_1002321EC, v46);
            sub_100087534(0, 0);

            swift_bridgeObjectRelease(v78);
          }
          goto LABEL_30;
        }
        v56 = objc_msgSend(*(id *)&v25[v24], "sceneIdentifier");
        v57 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v56);

        v58 = (void **)&v57[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess(&v57[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v89, 1, 0);
        v59 = *v58;
        *v58 = v23;
        v60 = v23;
        sub_1000AE638(v59);

        v62 = *(id *)DOCLog.UI.unsafeMutableAddressor(v61);
        v64 = static os_log_type_t.info.getter(v63);
        v65 = sub_10006922C((uint64_t *)&unk_100644560);
        v66 = swift_allocObject(v65, 72, 7);
        *(_OWORD *)(v66 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v66 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        *(_QWORD *)(v66 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        *(_QWORD *)(v66 + 32) = v60;
        v67 = v60;
        os_log(_:dso:log:type:_:)("[Interaction] Keeping track of last opened item in 'openSelectedItem()': %@", 75, 2, &_mh_execute_header, v62, v64, v66);

        swift_bridgeObjectRelease(v66);
        v23 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v68 = swift_allocObject(&unk_1005D3CA8, 112, 7);
        v69 = v93;
        *(_OWORD *)(v68 + 56) = v92;
        *(_QWORD *)(v68 + 16) = v67;
        *(_QWORD *)(v68 + 24) = v50;
        *(_QWORD *)(v68 + 32) = v53;
        *(_OWORD *)(v68 + 72) = v69;
        *(_OWORD *)(v68 + 88) = v94;
        *(_QWORD *)(v68 + 104) = v95;
        *(_OWORD *)(v68 + 40) = v91;
        aBlock[4] = sub_1002321F8;
        v88 = v68;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100175118;
        aBlock[3] = &unk_1005D3CC0;
        v70 = _Block_copy(aBlock);
        v71 = v88;
        v72 = v50;
        v73 = v53;
        v74 = v67;
        swift_unknownObjectRetain(Strong);
        sub_10008BA00((uint64_t)sub_1002321EC, v46);
        sub_10008BA00(0, 0);
        v75 = v73;
        objc_msgSend(v23, "fetchURLForItem:completionHandler:", v74, v70, swift_release(v71).n128_f64[0]);
        swift_unknownObjectRelease(Strong);
        swift_release(v46);

        sub_100087534((uint64_t)sub_1002321EC, v46);
        sub_100087534(0, 0);

        _Block_release(v70);
LABEL_23:

        return;
      }
    }

    goto LABEL_23;
  }
  v16 = Logger.UI.unsafeMutableAddressor(v14);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v16, v5);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.error.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Interaction] An item was selected while there is another one trying to be opened.", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
    v21 = v85;
  }
  else
  {
    v21 = v18;
    v18 = v85;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_100230CFC()
{
  sub_100227DA0(0);
}

void *sub_100230D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView], a2) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

id sub_100230E5C()
{
  uint64_t v0;
  uint64_t inited;
  NSString *v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString *v8;
  unint64_t v9;
  Class isa;
  id v11;
  id v12;
  double v13;
  id v14;
  _BYTE v16[72];
  _BYTE v17[48];

  v0 = sub_10006922C(&qword_100645B90);
  inited = swift_initStackObject(v0, v17);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v2 = UIFontWeightTrait;
  v3 = sub_10008B0E8(inited);
  v4 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleTitle2);
  v5 = sub_10006922C((uint64_t *)&unk_1006484A0);
  v6 = swift_initStackObject(v5, v16);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v6 + 32) = UIFontDescriptorTraitsAttribute;
  *(_QWORD *)(v6 + 64) = sub_10006922C(&qword_100645B98);
  *(_QWORD *)(v6 + 40) = v3;
  v7 = v4;
  v8 = UIFontDescriptorTraitsAttribute;
  v9 = sub_10008B0CC(v6);
  type metadata accessor for AttributeName(0);
  sub_10005A360((unint64_t *)&qword_100645BA0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004D915C);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v7, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v12 = v11;
  objc_msgSend(v12, "pointSize");
  v14 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v12, v13);

  return v14;
}

double sub_10023103C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double result;
  uint64_t v16;
  char v17;

  v2 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 1;
  v10 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v11 = static UIListContentConfiguration.prominentInsetGroupedHeader()();
  UIListContentConfiguration.textProperties.getter(v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = UIListContentConfiguration.TextProperties.font.getter(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = v17;
  *(_OWORD *)a1 = xmmword_1004DDBB0;
  *(_OWORD *)(a1 + 16) = xmmword_1004DDBC0;
  result = 11.0;
  *(_OWORD *)(a1 + 32) = xmmword_1004DDBD0;
  *(_QWORD *)(a1 + 48) = 0x4026000000000000;
  *(_BYTE *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v13;
  return result;
}

_BYTE *sub_100231190()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  char v4;
  char *v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;

  v0 = type metadata accessor for DOCCopyableLabel();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  v4 = v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 1;
  if ((v4 & 1) == 0)
  {
    objc_msgSend(v1, "setUserInteractionEnabled:", 1);
    v5 = sub_1001D2E04();
    v6 = v5[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v5[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v2[v3];
    sub_10042BB1C(v6, v7);

  }
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 4);
  v8 = v2;
  v9 = sub_100230E5C();
  objc_msgSend(v8, "setFont:", v9);

  return v8;
}

void sub_100231284()
{
  _BYTE *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _OWORD *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _OWORD v10[5];

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager] = 0;
  v1 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  sub_10023103C((uint64_t)v10);
  v2 = v10[3];
  v1[2] = v10[2];
  v1[3] = v2;
  v1[4] = v10[4];
  v3 = v10[1];
  *v1 = v10[0];
  v1[1] = v3;
  v4 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins];
  v5 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionDelegate];
  *v4 = xmmword_1004DDBA0;
  v4[1] = xmmword_1004DDBA0;
  swift_unknownObjectWeakInit(v5);
  v6 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting]);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagsWorkflowDelegate]);
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance] = 10;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow] = 0;
  v7 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagViewController]);
  v8 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
  *(_QWORD *)&v0[v8] = sub_1003F1F0C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat] = 0;
  v9 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
  *v9 = 0;
  v9[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCItemInfoContentViewController.swift", 44, 2, 577, 0);
  __break(1u);
}

void sub_100231534()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    else
      v7 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes]);
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v2);
    if (v8 != 1)
      return;
  }
  else if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return;
  }
  v3 = *(_QWORD *)&v0[v1];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v9 = *(_QWORD *)&v0[v1];
    else
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v0[v1]);
    if (_CocoaArrayWrapper.endIndex.getter(v9))
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease(v3);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)&v0[v1]);
  if (!v4)
    goto LABEL_18;
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(void **)(v3 + 32);
    swift_unknownObjectRetain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v3);
    ObjectType = swift_getObjectType(v5);
    sub_10023039C(v5, v0, ObjectType);
    swift_unknownObjectRelease(v5);
    return;
  }
  __break(1u);
}

void sub_10023166C(void (*a1)(id))
{
  id v2;
  id v3;
  char *v4;
  char *v5;
  id v6;
  char v7[24];

  v2 = sub_100223EE0();
  v3 = objc_msgSend(v2, "window");

  if (!v3)
    goto LABEL_5;
  v4 = (char *)sub_100223EE0();
  v5 = &v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v7, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v5 + 16))
  {

LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v6 = *(id *)(*(_QWORD *)v5 + 32);

LABEL_6:
  a1(v6);

}

void sub_100231730(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  else
    v10 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * v5 + 32);
        swift_unknownObjectRetain(v6);
      }
      ++v5;
      ObjectType = swift_getObjectType(v6);
      v8 = swift_allocObject(&unk_1005D3F00, 24, 7);
      *(_QWORD *)(v8 + 16) = a1;
      v9 = a1;
      DOCNode.fpfs_fetchFPItem(completion:)(sub_1002325CC, v8, ObjectType);
      swift_unknownObjectRelease(v6);
      swift_release(v8);
    }
    while (v4 != v5);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_100231860()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_10023186C()
{
  uint64_t v0;

  sub_10022E7FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100231874(void *a1)
{
  char *v1;
  id v3;
  double result;
  uint64_t Strong;
  void *v6;
  id v7;
  id v8;

  if (objc_msgSend(a1, "isFolder")
    && (objc_msgSend(a1, "doc_isCollaborationInvitation") & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting]);
    if (Strong)
    {
      v6 = (void *)Strong;
      v7 = objc_msgSend(a1, "fpfs_fpItem");
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v6, "didTapLocationOf:");
        swift_unknownObjectRelease(v6);
        goto LABEL_5;
      }
      *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  else
  {
    v3 = objc_msgSend(a1, "fpfs_fpItem");
    if (v3)
    {
      v8 = v3;
      sub_10022FA5C(v8, v1);

LABEL_5:
    }
  }
  return result;
}

_QWORD *_s5Files28DOCImageContainerFittingViewC15dragInteraction_17itemsForBeginningSaySo10UIDragItemCGSo0kG0C_So0K7Session_ptF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;

  v2 = type metadata accessor for DOCDragInteraction();
  v3 = swift_dynamicCastClass(a1, v2);
  if (v3)
  {
    ObjectType = swift_getObjectType(*(_QWORD *)(v3
                                               + OBJC_IVAR____TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction_node));
    v5 = a1;
    v6 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(v7, 2, 0, 0);
      v9 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v8);
      v10 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      objc_msgSend(v9, "setLocalObject:", v10);

      v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v12 = swift_allocObject(v11, 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v12 + 32) = v9;
      v15 = v12;
      specialized Array._endMutation()(v12);
      v13 = v15;

    }
    else
    {

      return _swiftEmptyArrayStorage;
    }
    return (_QWORD *)v13;
  }
  else
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000023, 0x800000010051B4C0, "Files/DOCItemInfoContentViewController.swift", 44, 2, 1420, 0);
    __break(1u);
  }
  return result;
}

id _s5Files28DOCImageContainerFittingViewC15dragInteraction_17previewForLifting7sessionSo21UITargetedDragPreviewCSgSo06UIDragG0C_So0O4ItemCSo0O7Session_ptF_0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  double v19;
  id v20;
  CGAffineTransform v22;
  _BYTE v23[24];

  v3 = v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs, v23, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
    return 0;
  v4 = *(void **)(*(_QWORD *)v3 + 32);
  v5 = objc_allocWithZone((Class)UIDragPreviewParameters);
  v6 = v4;
  v7 = objc_msgSend(v5, "init");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v7;
  v10 = objc_msgSend(v8, "clearColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  objc_msgSend(v6, "frame");
  v13 = v12;
  if (v12 != 0.0 || v11 != 0.0)
  {
    v14 = type metadata accessor for DOCDragInteraction();
    v15 = swift_dynamicCastClass(a1, v14);
    if (v15)
    {
      v16 = *(void **)(v15 + OBJC_IVAR____TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction_node);
      v17 = a1;
      if (objc_msgSend(v16, "isFolder"))
      {
        sub_10004F2F0(0, (unint64_t *)&qword_100646B00, UIBezierPath_ptr);
        v18 = (void *)static UIBezierPath.folder.getter();
        objc_msgSend(v18, "bounds");
        CGAffineTransformMakeScale(&v22, v13 / v19, v13 / v19);
        objc_msgSend(v18, "applyTransform:", &v22);
        CGAffineTransformMakeTranslation(&v22, 0.0, 0.0);
        objc_msgSend(v18, "applyTransform:", &v22);
        objc_msgSend(v9, "setVisiblePath:", v18);

        v17 = v18;
      }

    }
  }
  v20 = objc_msgSend(objc_allocWithZone((Class)UITargetedDragPreview), "initWithView:parameters:", v6, v9);

  return v20;
}

uint64_t type metadata accessor for DOCShareButton()
{
  return objc_opt_self(_TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2914DOCShareButton);
}

uint64_t type metadata accessor for DOCItemInfoContentViewController()
{
  return objc_opt_self(_TtC5Files32DOCItemInfoContentViewController);
}

uint64_t type metadata accessor for DOCItemInfoContentViewController.RootHStack()
{
  return objc_opt_self(_TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack);
}

uint64_t type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView()
{
  return objc_opt_self(_TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView);
}

uint64_t type metadata accessor for DOCDragInteraction()
{
  return objc_opt_self(_TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction);
}

void destroy for DOCItemInfoContentViewController.Metrics(uint64_t a1)
{

}

uint64_t initializeWithCopy for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(void **)(a2 + 64);
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v5;
  v6 = v4;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(void **)(a2 + 64);
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 72);
  v8 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);

  v5 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemInfoContentViewController.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemInfoContentViewController.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemInfoContentViewController.Metrics()
{
  return &type metadata for DOCItemInfoContentViewController.Metrics;
}

void sub_100232004()
{
  uint64_t v0;

  sub_100225590(v0);
}

uint64_t sub_10023200C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100232030()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100232064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10022CC88(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100232070()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_10023207C()
{
  uint64_t v0;

  sub_10022CFA8(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100232084()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1002320B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10022DE88(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1002320B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100643470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100232100()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_10023210C(uint64_t a1)
{
  uint64_t v1;

  sub_100229BE4(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100232114()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

double sub_100232120()
{
  uint64_t v0;

  return sub_100229C88(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10023212C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100229910(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10023213C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100232170(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100229784(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_10023217C(uint64_t a1)
{
  uint64_t v1;

  sub_100229DEC(a1, v1);
}

uint64_t sub_100232188()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

id sub_100232194@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isHidden");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1002321C4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setHidden:", *a1);
}

void sub_1002321D8(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_100226724(a1, a2, v2);
}

uint64_t sub_1002321E0()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1002321EC(void *a1)
{
  uint64_t v1;

  sub_10022BEC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1002321F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10022C174(a1, a2, *(void **)(v2 + 16), *(char **)(v2 + 24), *(void **)(v2 + 32), v2 + 40);
}

uint64_t sub_100232208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  v9 = v0 + v8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  if (*(_QWORD *)(v0 + v8 + 8))
    swift_release(*(_QWORD *)(v9 + 16));
  if (*(_QWORD *)(v9 + 24))
    swift_release(*(_QWORD *)(v9 + 32));

  return swift_deallocObject(v0, v8 + 72, v3 | 7);
}

double sub_1002322E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10022C62C(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10023234C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 104, 7);
}

void sub_1002323B0(char a1)
{
  uint64_t v1;

  sub_10022C6D4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), (__int128 *)(v1 + 32));
}

uint64_t sub_1002323BC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v0 + 64))
    swift_release(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 112, 7);
}

double sub_100232420()
{
  uint64_t v0;

  return sub_10022C7C4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), v0 + 40);
}

uint64_t sub_100232434()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 96, 7);
}

void sub_100232490(void *a1)
{
  uint64_t v1;

  sub_100430D88(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_10023249C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002324C0(uint64_t a1)
{
  uint64_t v1;

  return sub_100431670(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002324C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

void sub_100232534(void *a1)
{
  uint64_t *v1;

  sub_1004316DC(a1, v1[2], (uint64_t)(v1 + 3), v1[12], v1[13], v1[14]);
}

void sub_100232548(void *a1)
{
  uint64_t v1;

  sub_100431674(a1, v1);
}

uint64_t sub_100232550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_100648470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100232598()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1002325A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1002325CC(void *a1)
{
  uint64_t v1;

  return sub_10022E418(a1, *(_QWORD *)(v1 + 16));
}

void sub_1002325D4()
{
  sub_10022BC88();
}

void sub_1002325DC(uint64_t a1)
{
  uint64_t v1;

  sub_100224D54(a1, v1);
}

uint64_t sub_1002325E4()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1002325F0(void *a1)
{
  uint64_t v1;

  sub_100224FA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002325F8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for DOCFileEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  v8 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6]));

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002326A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCFileEntity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100648484);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000EA854;
  return sub_1002295BC(a1, v5, v6, v7, v8);
}

uint64_t sub_10023273C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100232770(uint64_t a1)
{
  uint64_t v1;

  sub_10022EC3C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t DOCTabBarItem.tab.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t DOCTabBarItem.tab.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DOCTabBarItem.tab.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t DOCTabBarItem.tabIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, v6, 0, 0);
  v2 = *v1;
  switch(v2)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  type metadata accessor for DOCTab(0);
  v5 = v2;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v4, &v5, v4, &type metadata for UInt);
  __break(1u);
  return result;
}

uint64_t static DOCTabBarItem.tabIdentifier(forTab:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[5];

  switch(a1)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  v8[1] = v2;
  v8[2] = v1;
  v8[3] = v3;
  v8[4] = v4;
  type metadata accessor for DOCTab(0);
  v8[0] = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v7, v8, v7, &type metadata for UInt);
  __break(1u);
  return result;
}

unint64_t DOCTabBarItem.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  Swift::String v6;
  _QWORD v8[3];
  unint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9 = 0xD000000000000013;
  v10 = 0x800000010051B680;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, v8, 0, 0);
  v2 = *v1;
  if (*v1)
  {
    if (v2 == 2)
    {
      v3 = 0xE600000000000000;
      v4 = 0x6573776F7242;
    }
    else if (v2 == 1)
    {
      v3 = 0xE600000000000000;
      v4 = 0x646572616853;
    }
    else
    {
      v3 = 0xE500000000000000;
      v4 = 0x3F3F3F3F3FLL;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v4 = 0x73746E65636552;
  }
  v5 = v3;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v3);
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v9;
}

uint64_t sub_100232ED8(uint64_t a1)
{
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSBundle v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  objc_class *v12;
  objc_class *v13;
  uint64_t countAndFlagsBits;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if (a1 == 2)
  {
    v12 = (objc_class *)(id)_DocumentManagerBundle(2);
    if (!v12)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v3 = v12;
    v11 = 0xD00000000000007BLL;
    v17 = 0x800000010051B7A0;
    v4 = 0x6573776F7242;
    v5 = 0xE600000000000000;
LABEL_10:
    v6 = 0x617A696C61636F4CLL;
    v7 = 0xEB00000000656C62;
    v8.super.isa = v3;
    v9 = 0;
    v10 = 0xE000000000000000;
    goto LABEL_11;
  }
  v1 = a1;
  if (a1 == 1)
  {
    v2 = (objc_class *)(id)_DocumentManagerBundle(1);
    if (v2)
    {
      v3 = v2;
      v17 = 0x800000010051B820;
      v4 = 0x646572616853;
      v5 = 0xE600000000000000;
      v6 = 0x617A696C61636F4CLL;
      v7 = 0xEB00000000656C62;
      v8.super.isa = v3;
      v9 = 0;
      v10 = 0xE000000000000000;
      v11 = 0xD000000000000017;
LABEL_11:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v6, v8, *(Swift::String *)&v9, *(Swift::String *)&v11)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (!a1)
  {
    v13 = (objc_class *)(id)_DocumentManagerBundle(0);
    if (!v13)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v3 = v13;
    v11 = 0xD000000000000018;
    v17 = 0x800000010051B840;
    v4 = 0x73746E65636552;
    v5 = 0xE700000000000000;
    goto LABEL_10;
  }
LABEL_15:
  type metadata accessor for DOCTab(0);
  v18 = v1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v16, &v18, v16, &type metadata for UInt);
  __break(1u);
  return result;
}

id DOCTabBarItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTabBarItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id UIViewController.DOCTabBarItem.getter()
{
  void *v0;
  id result;
  id v2;
  uint64_t v3;

  result = objc_msgSend(v0, "tabBarItem");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for DOCTabBarItem();
    return (id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void UIViewController.DOCTabBarItem.setter(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setTabBarItem:", a1);

}

_QWORD *UITabBar.DOCTabBarItems.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(v0, "items");
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = v1;
  v3 = sub_10004F2F0(0, &qword_100648518, UITabBarItem_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease(v4);
    return _swiftEmptyArrayStorage;
  }
  if (v4 < 0)
    v14 = v4;
  else
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v4);
  if (!v5)
    goto LABEL_10;
LABEL_4:
  result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v5);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = type metadata accessor for DOCTabBarItem();
      v11 = swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
    }
    while (v5 != v7);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t _s5Files13DOCTabBarItemC4item3tabACSo0B0V_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[3];

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = a1;
    switch(a1)
    {
      case 2:
        v2 = 0xEB000000006C6C69;
        goto LABEL_6;
      case 1:
        v2 = 0x800000010051B780;
LABEL_6:
        v3 = type metadata accessor for DOCTabBarItem();
        v4 = (void *)objc_opt_self(UIImage);
        v5 = String._bridgeToObjectiveC()();
        v6 = objc_msgSend(v4, "__systemImageNamedSwift:", v5, swift_bridgeObjectRelease(v2).n128_f64[0]);

        v7 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "initWithTitle:image:tag:", 0, v6, v1);
LABEL_9:
        v9 = (uint64_t *)&v7[OBJC_IVAR____TtC5Files13DOCTabBarItem_tab];
        swift_beginAccess(&v7[OBJC_IVAR____TtC5Files13DOCTabBarItem_tab], v16, 1, 0);
        *v9 = v1;
        v10 = v7;
        sub_100232ED8(v1);
        v12 = v11;
        v13 = String._bridgeToObjectiveC()();
        objc_msgSend(v10, "_setInternalTitle:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

        objc_msgSend(v10, "setSpringLoaded:", 1);
        return (uint64_t)v10;
      case 0:
        v8 = type metadata accessor for DOCTabBarItem();
        v7 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "initWithTabBarSystemItem:tag:", 4, 0);
        goto LABEL_9;
    }
  }
  type metadata accessor for DOCTab(0);
  v16[0] = v1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v15, v16, v15, &type metadata for UInt);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCTabBarItem()
{
  return objc_opt_self(_TtC5Files13DOCTabBarItem);
}

uint64_t sub_1002337A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002337C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1002337E8()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
}

id DOCSidebarViewController.configuration.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
}

id sub_10023380C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Sidebar.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v19 = a1;
    v14 = v13;
    v18 = swift_slowAlloc(64, -1);
    v21 = v18;
    *(_DWORD *)v14 = 136315394;
    v20 = sub_1000544FC(0xD000000000000024, 0x800000010051C120, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v20 = sub_1000544FC(v19, a2, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: [%s] updatingModelForUIChangeCount++", (uint8_t *)v14, 0x16u);
    v15 = v18;
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    v16 = v14;
    a1 = v19;
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_1002359E0(1, a1, a2, 0);
}

id sub_100233A38(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  LODWORD(v5) = a3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.Sidebar.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  v14 = swift_bridgeObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v23 = v5;
    v5 = v17;
    v22 = swift_slowAlloc(64, -1);
    v26 = v22;
    *(_DWORD *)v5 = 136315394;
    v24 = v4;
    v25 = sub_1000544FC(0xD000000000000034, 0x800000010051C0A0, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v25 = sub_1000544FC(a1, a2, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: [%s] updatingModelForUIChangeCount--", (uint8_t *)v5, 0x16u);
    v18 = v22;
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v19 = v5;
    LOBYTE(v5) = v23;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return sub_1002359E0(-1, a1, a2, v5 & 1);
}

double sub_100233C70(char a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  _BYTE v15[24];

  v3 = v2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v8 = v7;
  swift_release(v6);
  v9 = type metadata accessor for DOCMutableSidebarSection();
  v10 = swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
  if ((a2(v10) & 1) != 0)
  {
    v12 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, v15, 0, 0);
    v13 = *v12;
    swift_bridgeObjectRetain(*v12);
    v14 = sub_1000069B8(a1, v13);
    swift_bridgeObjectRelease(v13);
    if (*(uint64_t *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
      sub_100013B5C((v14 & 1) == 0, 1);
    else
      sub_100235834();
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

id sub_100233DE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarPaneNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100233EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_BYTE *)(v1 + 56) = -1;
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData) + 24);
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain_n(v2, 2);
    swift_retain();
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x100234188);
}

uint64_t sub_1002341A0()
{
  uint64_t v0;

  sub_1000B1664(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocClassInstance(v0, 57, 7);
}

uint64_t sub_1002341D4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  result = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (!result)
  {
    if (!a1)
      return result;
    v6 = type metadata accessor for DOCSidebarViewController.EditingSession();
    v7 = swift_allocObject(v6, 57, 7);
    sub_100233EAC((uint64_t)v2);
    result = *(_QWORD *)&v2[v4];
    *(_QWORD *)&v2[v4] = v7;
    return swift_release(result);
  }
  if (!a1 && *(_BYTE *)(result + 17))
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession] = 0;
    return swift_release(result);
  }
  return result;
}

uint64_t sub_100234268()
{
  uint64_t v0;

  return sub_100087534(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100234270()
{
  uint64_t v0;

  sub_100087534(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_100087534(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_1000B1664(*(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  sub_100087534(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return swift_deallocClassInstance(v0, 120, 7);
}

void sub_1002342BC(void *a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v6;
  char v7;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, __n128);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;

  v7 = a6;
  v11 = *(void **)(v6 + 64);
  v12 = *(_QWORD *)(v6 + 72);
  v13 = *(_QWORD *)(v6 + 80);
  v14 = *(unsigned __int8 *)(v6 + 88);
  v15 = a4 == -1;
  if (v14 != 255)
  {
    if (a4 == -1)
    {
      v15 = 0;
    }
    else
    {
      v16 = a3;
      sub_1000B1650(v11, v12, v13, v14);
      sub_1000B1650(v11, v12, v13, v14);
      sub_1000B1650(a1, a2, v16, a4);
      sub_100200624((uint64_t)v11, v12, v13, v14);
      v17 = a2;
      v19 = v18;
      v21 = v20;
      v30 = v17;
      v31 = v16;
      sub_100200624((uint64_t)a1, v17, v16, a4);
      v24 = v23;
      v25 = v21;
      if (v19 == v22 && v21 == v23)
      {
        v15 = 1;
        v24 = v25;
      }
      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
        v25 = v21;
        v15 = v26;
      }
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v24);
      a2 = v30;
      sub_1000B1664(a1, v30, v31, a4);
      sub_1000B1664(v11, v12, v13, v14);
      sub_1000B1664(v11, v12, v13, v14);
      a3 = v31;
      v11 = *(void **)(v6 + 64);
      v12 = *(_QWORD *)(v6 + 72);
      v13 = *(_QWORD *)(v6 + 80);
      LOBYTE(v14) = *(_BYTE *)(v6 + 88);
      v7 = a6;
    }
  }
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 72) = a2;
  *(_QWORD *)(v6 + 80) = a3;
  *(_BYTE *)(v6 + 88) = a4;
  sub_1000B1650(a1, a2, a3, a4);
  sub_1000B1664(v11, v12, v13, v14);
  *(_BYTE *)(v6 + 89) = a5 & 1;
  if (!v15 && (v7 & 1) != 0)
  {
    sub_1003E66C0(0xD000000000000011, 0x800000010051C4B0);
    v27 = *(void (**)(uint64_t, __n128))(v6 + 32);
    if (v27)
    {
      v28 = *(_QWORD *)(v6 + 40);
      v29 = swift_retain();
      v27(v6, v29);
      sub_100087534((uint64_t)v27, v28);
    }
  }
}

uint64_t sub_100234510(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  unint64_t v16;
  char v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  Swift::String v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;

  v6 = v5;
  v12 = sub_10006922C((uint64_t *)&unk_100648C88);
  v13 = swift_allocObject(v12, 50, 7);
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_WORD *)(v13 + 48) = 767;
  sub_1003E66C0(0xD00000000000001BLL, 0x800000010051C4D0);
  v14 = *(_QWORD *)(v5 + 96);
  *(_QWORD *)(v6 + 96) = v13;
  swift_retain();
  swift_release(v14);
  if ((*(_BYTE *)(v6 + 24) & 1) != 0)
  {
    _StringGuts.grow(_:)(28);
    v34 = 0;
    v35 = 0xE000000000000000;
    v23._countAndFlagsBits = 0xD00000000000001ALL;
    v23._object = (void *)0x800000010051C510;
    String.append(_:)(v23);
    v30 = a1;
    v31 = a2;
    v32 = a3;
    v33 = a4;
    _print_unlocked<A, B>(_:_:)(&v30, &v34, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v24 = v35;
    sub_1003E66C0(v34, v35);
    swift_bridgeObjectRelease(v24);
    v25 = *(void **)(v6 + 64);
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v6 + 80);
    *(_QWORD *)(v6 + 72) = 0;
    *(_QWORD *)(v6 + 80) = 0;
    *(_QWORD *)(v6 + 64) = 0;
    v28 = *(_BYTE *)(v6 + 88);
    *(_BYTE *)(v6 + 88) = -1;
    sub_1000B1664(v25, v26, v27, v28);
    *(_BYTE *)(v6 + 89) = 0;
    sub_1000E4F7C(a1, a2, a3, a4);
    sub_1002342BC(a1, a2, a3, a4, a5 & 1, 1);
    sub_1000E4FD0(a1, a2, a3, a4);
  }
  else
  {
    _StringGuts.grow(_:)(27);
    v34 = 0;
    v35 = 0xE000000000000000;
    v15._object = (void *)0x800000010051C4F0;
    v15._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v15);
    v30 = a1;
    v31 = a2;
    v32 = a3;
    v33 = a4;
    _print_unlocked<A, B>(_:_:)(&v30, &v34, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v16 = v35;
    sub_1003E66C0(v34, v35);
    swift_bridgeObjectRelease(v16);
    v17 = a4;
    v18 = a5;
    v19 = *(void **)(v13 + 24);
    v20 = *(_QWORD *)(v13 + 32);
    v21 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v13 + 24) = a1;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a3;
    v22 = *(_BYTE *)(v13 + 48);
    *(_BYTE *)(v13 + 48) = v17;
    sub_1000E4F7C(a1, a2, a3, v17);
    sub_1000B1664(v19, v20, v21, v22);
    *(_BYTE *)(v13 + 49) = v18 & 1;
  }
  sub_100234924();
  return swift_release(v13);
}

uint64_t sub_10023479C(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v11;
  Swift::String v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  _QWORD v20[3];
  char v21;
  uint64_t v22;
  unint64_t v23;

  v6 = *(_QWORD *)(v5 + 96);
  if (v6)
  {
    v7 = v5;
    v11 = (void *)result;
    swift_retain();
    _StringGuts.grow(_:)(27);
    v22 = 0;
    v23 = 0xE000000000000000;
    v12._object = (void *)0x800000010051C430;
    v12._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v12);
    v20[0] = v11;
    v20[1] = a2;
    v20[2] = a3;
    v21 = a4;
    _print_unlocked<A, B>(_:_:)(v20, &v22, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v13 = v23;
    sub_1003E66C0(v22, v23);
    swift_bridgeObjectRelease(v13);
    v14 = *(void **)(v6 + 24);
    v15 = *(_QWORD *)(v6 + 32);
    v16 = *(_QWORD *)(v6 + 40);
    *(_QWORD *)(v6 + 24) = v11;
    *(_QWORD *)(v6 + 32) = a2;
    *(_QWORD *)(v6 + 40) = a3;
    v17 = *(_BYTE *)(v6 + 48);
    *(_BYTE *)(v6 + 48) = a4;
    sub_1000E4F7C(v11, a2, a3, a4);
    sub_1000B1664(v14, v15, v16, v17);
    *(_BYTE *)(v6 + 49) = a5 & 1;
    if ((*(_BYTE *)(v7 + 24) & 2) != 0)
    {
      sub_1003E66C0(0xD00000000000001CLL, 0x800000010051C450);
      objc_msgSend(*(id *)(v6 + 16), "invalidate");
      v18 = *(void **)(v6 + 16);
      *(_QWORD *)(v6 + 16) = 0;

      sub_100234924();
    }
    return swift_release(v6);
  }
  return result;
}

void sub_100234924()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    if (!*(_QWORD *)(v1 + 16))
    {
      v2 = fmax(*(double *)(v0 + 16), 0.1);
      v3 = (void *)objc_opt_self(NSTimer);
      v4 = swift_allocObject(&unk_1005D4258, 24, 7);
      swift_weakInit(v4 + 16, v0);
      v5 = swift_allocObject(&unk_1005D4280, 32, 7);
      *(_QWORD *)(v5 + 16) = v4;
      *(_QWORD *)(v5 + 24) = v1;
      v10[4] = sub_10023D1BC;
      v11 = v5;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_1000602CC;
      v10[3] = &unk_1005D4298;
      v6 = _Block_copy(v10);
      v7 = v11;
      swift_retain_n(v1, 2);
      swift_release(v7);
      v8 = objc_msgSend(v3, "scheduledTimerWithTimeInterval:repeats:block:", 0, v6, v2);
      _Block_release(v6);
      v9 = *(void **)(v1 + 16);
      *(_QWORD *)(v1 + 16) = v8;
      swift_release(v1);

    }
  }
}

Class sub_100234B34(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  Class isa;

  v5 = *(_QWORD *)(a1 + *a3);
  sub_10004F2F0(0, a4, a5);
  swift_bridgeObjectRetain(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  return isa;
}

id DOCSidebarViewController.collectionView.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  return objc_msgSendSuper2(&v2, "collectionView");
}

void DOCSidebarViewController.collectionView.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v3, "setCollectionView:", a1);

}

void sub_100234CFC()
{
  uint64_t v0;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController));

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration
                                      + 8));

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, &qword_100642730);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath, (uint64_t *)&unk_100642710);
  sub_1000B1664(*(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 16), *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier
                                      + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesVisitedObserver));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files24DOCSidebarViewController_additionalTrailingNavigationBarButtonItems));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_customActions));
}

id DOCSidebarViewController.__deallocating_deinit()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  objc_super v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber];
  if (v1)
  {
    v2 = (void *)objc_opt_self(DOCFavoritesManager);
    v3 = v1;
    v4 = objc_msgSend(v2, "sharedManager");
    objc_msgSend(v4, "removeSubscriber:", v3);

  }
  v5 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber];
  if (v5)
  {
    v6 = (void *)objc_opt_self(DOCFavoritesManager);
    v7 = v5;
    v8 = objc_msgSend(v6, "sharedManager");
    objc_msgSend(v8, "removeSubscriber:", v7);

  }
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  return objc_msgSendSuper2(&v10, "dealloc");
}

double sub_1002352D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  double result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber);
  if (v2)
  {
    v3 = (void *)objc_opt_self(DOCFavoritesManager);
    v4 = v2;
    v5 = objc_msgSend(v3, "sharedManager");
    objc_msgSend(v5, "removeSubscriber:", v4);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;

  }
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration + 8);
  if (v9)
  {
    v10 = *v8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration
                                       + 8));
    v11 = sub_1000A6CC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 168))(v10, v9);
    swift_release(v11);
    swift_bridgeObjectRelease(v9);
    v12 = v8[1];
    *v8 = 0;
    v8[1] = 0;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_1002353C0()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  __int128 aBlock;
  __int128 v32;
  void (*v33)(uint64_t);
  uint64_t v34;

  v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber])
  {
    v2 = v0;
    v3 = sub_1000A6CC4();
    v4 = *(void **)DOCNotificationDidUpdateSmartFolders.unsafeMutableAddressor();
    aBlock = 0u;
    v32 = 0u;
    v5 = swift_allocObject(&unk_1005D4140, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = (void *)objc_opt_self(NSOperationQueue);
    v7 = v4;
    v8 = objc_msgSend(v6, "mainQueue");
    v9 = (*(uint64_t (**)(id, __int128 *, id, void (*)(uint64_t, uint64_t), uint64_t))(*(_QWORD *)v3 + 144))(v7, &aBlock, v8, sub_10023D2A0, v5);
    v11 = v10;
    swift_release(v3);

    swift_release(v5);
    sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
    v12 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration];
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration + 8];
    *v12 = v9;
    v12[1] = v11;
    swift_bridgeObjectRelease(v13);
    v14 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
    v15 = swift_allocObject(&unk_1005D4140, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16);
    v33 = sub_10023D2A8;
    v34 = v15;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v32 = sub_100088118;
    *((_QWORD *)&v32 + 1) = &unk_1005D43B0;
    v16 = _Block_copy(&aBlock);
    swift_release(v34);
    v17 = objc_msgSend(v14, "addSubscriber:", v16);
    _Block_release(v16);

    v18 = *(void **)&v2[v1];
    *(_QWORD *)&v2[v1] = v17;

    v19 = *(void **)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    v20 = objc_msgSend(v19, "isPickerUI");
    if ((_DWORD)v20)
    {
      v21 = *(void **)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v20);
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
      v24 = v23;
      v25 = *(void **)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      v26 = (void *)objc_opt_self(DOCManagedPermission);
      v27 = v25;
      v28 = v2;
      v29 = v21;
      v30 = objc_msgSend(v26, "defaultPermission");
      sub_10027836C(v22, v24, v19, v30, 3, v25, 1, v29, v28);

      swift_bridgeObjectRelease(v24);
    }
  }
}

uint64_t sub_100235690(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v11 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
  swift_retain();
  sub_100201260((uint64_t)a1, a2, a3, a4);
  v12 = *(void **)(v11 + 24);
  *(_QWORD *)(v11 + 24) = v13;
  swift_release(v11);

  v14 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer);
  v15 = *(_QWORD *)(v14 + 96);
  swift_retain();
  v16 = a5 & 1;
  if (v15)
    sub_10023479C((uint64_t)a1, a2, a3, a4, v16);
  else
    sub_100234510(a1, a2, a3, a4, v16);
  return swift_release(v14);
}

void sub_100235758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *Strong;
  void *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(char **)&Strong[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver];
    if (v6)
    {
      v8 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
      v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock + 8];
      v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy];
      swift_beginAccess(v9 + 16, &v13, 0, 0);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = v6;
      swift_retain(v7);
      v12 = swift_bridgeObjectRetain(v10);
      v8(v12);

      swift_release(v7);
      swift_bridgeObjectRelease(v10);
    }
    else
    {

    }
  }
}

uint64_t sub_100235834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Sidebar.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1000544FC(0xD000000000000022, 0x800000010051C3B0, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Got update while freezing.", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange) = 1;
  return result;
}

id sub_1002359E0(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char shouldAllow;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;

  v49 = a4;
  v51 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v47 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v52 - 8);
  result = (id)__chkstk_darwin(v52);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount;
  v53 = v4;
  v18 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount];
  if (__OFADD__(v18, a1))
  {
    __break(1u);
  }
  else
  {
    v43 = v11;
    v45 = v8;
    v50 = v18 + a1;
    *(_QWORD *)&v53[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] = v18 + a1;
    v19 = Logger.Sidebar.unsafeMutableAddressor(result);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v19, v52);
    v20 = swift_bridgeObjectRetain_n(a3, 2);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.debug.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = a3;
    v46 = v7;
    v44 = v10;
    if (v23)
    {
      v25 = swift_slowAlloc(32, -1);
      v26 = swift_slowAlloc(64, -1);
      aBlock[0] = v26;
      *(_DWORD *)v25 = 136315650;
      v54 = sub_1000544FC(0xD00000000000003ELL, 0x800000010051C0E0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain(v24);
      v54 = sub_1000544FC(v51, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
      swift_bridgeObjectRelease_n(v24, 3);
      *(_WORD *)(v25 + 22) = 2048;
      v54 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: [%s] Setting updatingModelForUIChangeCount to %ld.", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v52);
    if (*(uint64_t *)&v53[v17] <= 0)
    {
      v27 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange;
      if (v53[OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange] == 1)
      {
        result = objc_msgSend(v53, "isViewLoaded");
        if ((_DWORD)result)
        {
          v28 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
          if ((_DWORD)v28)
            shouldAllow = UIViewController.doc_shouldAllowAnimations.getter(v28);
          else
            shouldAllow = 0;
          v30 = v51;
          v31 = swift_allocObject(&unk_1005D40F0, 41, 7);
          *(_QWORD *)(v31 + 16) = v53;
          *(_QWORD *)(v31 + 24) = v30;
          *(_QWORD *)(v31 + 32) = v24;
          v32 = shouldAllow & 1;
          *(_BYTE *)(v31 + 40) = v32;
          if ((v49 & 1) != 0)
          {
            swift_bridgeObjectRetain(v24);
            sub_100235EF4((uint64_t)v53, v30, v24, v32);
            result = (id)swift_release(v31);
          }
          else
          {
            sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
            swift_bridgeObjectRetain(v24);
            v33 = (void *)static OS_dispatch_queue.main.getter(v53);
            aBlock[4] = (uint64_t)sub_10023D0A8;
            v56 = v31;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_10004A82C;
            aBlock[3] = (uint64_t)&unk_1005D4108;
            v34 = _Block_copy(aBlock);
            v35 = v56;
            swift_retain();
            v36 = swift_release(v35);
            v37 = v47;
            static DispatchQoS.unspecified.getter(v36);
            aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
            v38 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v39 = sub_10006922C((uint64_t *)&unk_100647540);
            v40 = sub_1000791AC();
            v41 = v44;
            v42 = v46;
            dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v46, v38);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v37, v41, v34);
            _Block_release(v34);
            swift_release(v31);

            (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v42);
            result = (id)(*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v37, v43);
          }
          v53[v27] = 0;
        }
      }
    }
  }
  return result;
}

void sub_100235EF4(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
  {
    v13 = Logger.Sidebar.unsafeMutableAddressor(v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
    v14 = swift_bridgeObjectRetain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(22, -1);
      v21 = a2;
      v18 = v17;
      v22 = swift_slowAlloc(64, -1);
      v25 = v22;
      *(_DWORD *)v18 = 136315394;
      v23 = a4;
      v24 = sub_1000544FC(0xD00000000000003ELL, 0x800000010051C0E0, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      *(_WORD *)(v18 + 12) = 2080;
      swift_bridgeObjectRetain(a3);
      v24 = sub_1000544FC(v21, a3, &v25);
      LOBYTE(a4) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: [%s] Model no longer updating but modelDidUpdateDuringUIChange == true, reloading sidebar.", (uint8_t *)v18, 0x16u);
      v19 = v22;
      swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_100013B5C(a4 & 1, 1);
  }
}

double sub_100236134(char a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  double result;
  _BYTE v18[24];

  v4 = v3;
  v8 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v11 = v10;
  swift_release(v9);
  v12 = type metadata accessor for DOCMutableSidebarSection();
  *(_BYTE *)(swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0) + 48) = a2;
  if ((a2 & 1) != 0)
    sub_1000A3FE8(0, 0);
  v13 = *(_QWORD *)(v4 + v8);
  swift_retain();
  sub_10012E5BC();
  swift_release(v13);
  if ((a3 & 1) != 0)
  {
    v14 = (uint64_t *)(v4
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess(v4 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, v18, 0, 0);
    v15 = *v14;
    swift_bridgeObjectRetain(*v14);
    v16 = sub_1000069B8(a1, v15);
    swift_bridgeObjectRelease(v15);
    if (*(uint64_t *)(v4 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
      sub_100013B5C((v16 & 1) == 0, 1);
    else
      sub_100235834();
    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  return result;
}

void sub_1002362C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v3[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon, v3, 1, 0);
  v2 = *v1;
  *v1 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v2);
  sub_100013B5C(0, 1);
}

uint64_t sub_10023632C(uint64_t a1, uint64_t a2, void (*a3)(__int128 *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 *v21;
  uint64_t v22;
  _BYTE v23[40];
  __int128 v24;
  __int128 v25;

  v5 = sub_10006922C(&qword_100648CA8);
  v6 = __chkstk_darwin(v5);
  v8 = (__int128 *)&v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = Notification.userInfo.getter(v6);
  if (result)
  {
    v10 = result;
    v11 = (void *)DOCTagRegistryChangeUserTagsDidChangeKey;
    v22 = DOCTagRegistryChangeUserTagsDidChangeKey;
    type metadata accessor for DOCTagRegistryChangeKey(0);
    v13 = v12;
    v14 = sub_10005A360(&qword_100641E70, (uint64_t (*)(uint64_t))type metadata accessor for DOCTagRegistryChangeKey, (uint64_t)&unk_1004D901C);
    v15 = v11;
    AnyHashable.init<A>(_:)(&v22, v13, v14);
    if (*(_QWORD *)(v10 + 16) && (v16 = sub_100067654((uint64_t)v23), (v17 & 1) != 0))
    {
      sub_100069BD8(*(_QWORD *)(v10 + 56) + 32 * v16, (uint64_t)&v24);
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease(v10);
    sub_100067748((uint64_t)v23);
    if (!*((_QWORD *)&v25 + 1))
    {
      v20 = &qword_100642730;
      v21 = &v24;
      return sub_10000CB4C((uint64_t)v21, v20);
    }
    result = swift_dynamicCast(&v22, &v24, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((result & 1) != 0 && v22 == 1)
    {
      v18 = type metadata accessor for Notification(0);
      v19 = *(_QWORD *)(v18 - 8);
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v19 + 16))(v8, a2, v18);
      (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
      a3(v8);
      v20 = &qword_100648CA8;
      v21 = v8;
      return sub_10000CB4C((uint64_t)v21, v20);
    }
  }
  return result;
}

void sub_1002364F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  id v16;
  char v17[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
    v7 = objc_msgSend(v6, "isPickerUI");
    if ((_DWORD)v7)
    {
      v8 = *(void **)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v7);
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
      v11 = v10;
      v12 = *(void **)&v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      v13 = (void *)objc_opt_self(DOCManagedPermission);
      v14 = v12;
      v15 = v5;
      v16 = v8;
      v5 = (char *)objc_msgSend(v13, "defaultPermission");
      sub_10027836C(v9, v11, v6, v5, 3, v12, 1, v16, v15);

      swift_bridgeObjectRelease(v11);
    }

  }
}

void sub_100236630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  char v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
    v6 = objc_msgSend(v5, "isPickerUI");
    if ((_DWORD)v6)
    {
      v7 = *(void **)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v6);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
      v10 = v9;
      v11 = *(void **)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      v12 = (void *)objc_opt_self(DOCManagedPermission);
      v13 = v11;
      v14 = v4;
      v15 = v7;
      v4 = (char *)objc_msgSend(v12, "defaultPermission");
      sub_10027836C(v8, v10, v5, v4, 3, v11, 1, v15, v14);

      swift_bridgeObjectRelease(v10);
    }

  }
}

uint64_t sub_100236770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_10023C200(1, a2, (uint64_t)_swiftEmptyArrayStorage);
    return swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
  }
  result = sub_1000817E4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v25 = a2;
    v6 = DOCDocumentsAppBundleIdentifier;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v7 = 0;
      do
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
        v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v11 = v10;
        v13 = _swiftEmptyArrayStorage[2];
        v12 = _swiftEmptyArrayStorage[3];
        if (v13 >= v12 >> 1)
          sub_1000817E4(v12 > 1, v13 + 1, 1);
        ++v7;
        _swiftEmptyArrayStorage[2] = v13 + 1;
        v14 = &_swiftEmptyArrayStorage[4 * v13];
        v14[4] = v8;
        v14[5] = v9;
        v14[6] = v11;
        *((_BYTE *)v14 + 56) = 3;
      }
      while (v4 != v7);
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v19 = v18;
        v20 = _swiftEmptyArrayStorage[2];
        v21 = _swiftEmptyArrayStorage[3];
        v22 = v16;
        if (v20 >= v21 >> 1)
          sub_1000817E4(v21 > 1, v20 + 1, 1);
        _swiftEmptyArrayStorage[2] = v20 + 1;
        v23 = &_swiftEmptyArrayStorage[4 * v20];
        v23[4] = v22;
        v23[5] = v17;
        v23[6] = v19;
        *((_BYTE *)v23 + 56) = 3;
        ++v15;
        --v4;
      }
      while (v4);
    }
    a2 = v25;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

double sub_100236960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double result;

  if (a2)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData) + 24);
    if (*(_QWORD *)(v3 + 16))
    {
      swift_bridgeObjectRetain_n(v3, 2);
      swift_retain();
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x100236D9CLL);
  }
  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier + 8);
  *v4 = a1;
  v4[1] = 0;
  swift_bridgeObjectRetain(0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

_QWORD *sub_100236E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BYTE v15[24];

  swift_beginAccess(a1 + 88, v15, 0, 0);
  v2 = *(_QWORD *)(a1 + 88);
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v2);
  v4 = sub_10023B9F8(v3);
  swift_bridgeObjectRelease(v2);
  swift_unknownObjectRelease(a1);
  v5 = v4[2];
  if (v5)
  {
    v6 = v4 + 4;
    swift_bridgeObjectRetain(v4);
    do
    {
      if (*((_BYTE *)v6 + 24) == 1)
      {
        v8 = (void *)*v6;
        v9 = type metadata accessor for DOCFileProviderSource();
        v10 = swift_dynamicCastClass(v8, v9);
        if (v10)
        {
          v11 = v10;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v13 >= v12 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
          v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
          specialized Array._endMutation()(v7);
        }
      }
      v6 += 4;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
  swift_bridgeObjectRelease(v4);
  return _swiftEmptyArrayStorage;
}

double sub_100236F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Rename.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = swift_bridgeObjectRetain_n(a2, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v28 = v3;
    v16 = v15;
    v27 = swift_slowAlloc(64, -1);
    v31 = v27;
    *(_DWORD *)v16 = 136315394;
    v29 = sub_1000544FC(0xD000000000000025, 0x800000010051C400, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    *(_WORD *)(v16 + 12) = 2080;
    v29 = a1;
    v30 = a2;
    swift_bridgeObjectRetain(a2);
    v17 = sub_10006922C(&qword_100648C80);
    v18 = String.init<A>(describing:)(&v29, v17);
    v20 = v19;
    v29 = sub_1000544FC(v18, v19, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Erase] %s found matching source to select: %s", (uint8_t *)v16, 0x16u);
    v21 = v27;
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v22 = v16;
    v3 = v28;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier + 8);
  *v23 = a1;
  v23[1] = a2;
  swift_bridgeObjectRetain(a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  return result;
}

void DOCSidebarViewController.effectiveAppearanceDidChange(_:)(uint64_t a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v3, "effectiveAppearanceDidChange:", a1);
  if (objc_msgSend(v1, "isViewLoaded"))
    sub_1000A5F38();
}

Swift::Void __swiftcall DOCSidebarViewController.viewDidLayoutSubviews()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;
  objc_super v24;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v24.receiver = v0;
  v24.super_class = v9;
  objc_msgSendSuper2(&v24, "viewDidLayoutSubviews");
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1005D4078, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_10023B9D4;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D4090;
  v13 = _Block_copy(aBlock);
  v14 = v23;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v19 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall DOCSidebarViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  char *v2;
  Class isa;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];
  objc_super v11;

  v2 = v1;
  isa = a1.value.super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", isa);
  v4 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon], v10, 1, 0);
  v5 = *(_QWORD *)v4;
  *(_QWORD *)v4 = &_swiftEmptyDictionarySingleton;
  v6 = objc_msgSend(v2, "traitCollection", swift_bridgeObjectRelease(v5).n128_f64[0]);
  v7 = sub_10023CDE0((uint64_t)&off_1005C0098);
  v9 = v8;
  swift_arrayDestroy(&unk_1005C00B8, 2, &_s6TraitsVN);
  LOBYTE(isa) = sub_10000BE74(v7, isa);
  swift_bridgeObjectRelease(v9);

  if ((isa & 1) != 0)
    sub_100013B5C(1, 1);
}

Swift::Void __swiftcall DOCSidebarViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v8, "viewWillAppear:", a1);
  sub_10002D328();
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setToolbarHidden:animated:", 1, 0);

  }
  v5 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "sceneIdentifier");
  v7 = objc_msgSend(v5, "globalTabbedBrowserControllerForIdentifier:", v6);

  objc_msgSend(v7, "updateTabBarVisibility");
}

Swift::Void __swiftcall DOCSidebarViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v4, "viewIsAppearing:", a1);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
    sub_100013B5C(a1, 1);
  sub_1000A3FE8(0, 1);
  if (sub_100237858() == 2)
  {
    v3 = objc_msgSend(v1, "transitionCoordinator");
    sub_1003E2EB0(a1, v3);
    swift_unknownObjectRelease(v3);
  }
}

uint64_t sub_100237858()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "sourceListPresentationContext");

  if (v2)
    return 2;
  result = (uint64_t)objc_msgSend(v0, "splitViewController");
  if (result)
  {
    v4 = (void *)result;
    v5 = objc_opt_self(DOCSplitBrowserViewController);
    v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
    if (v6)
    {
      v7 = objc_msgSend(v6, "displayMode");

      return v7 == (id)3;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

Swift::Void __swiftcall DOCSidebarViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1);
  v3 = v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive];
  v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] = 0;
  if ((v3 & 1) != 0)
  {
    if ((v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] & 1) == 0)
    {
      v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] = 1;
      sub_1000A59CC();
      sub_1000A5D80();
      sub_1000A62A0();
      if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "isPickerUI") & 1) != 0)sub_1002353C0();
    }
    sub_100013B5C(0, 1);
  }
  if ((v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] & 1) != 0)
    sub_100013B5C(0, 1);
}

objc_class *sub_100237B24()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  void *v4;
  NSString v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  objc_class *v9;
  objc_class *result;
  objc_class *v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *object;
  NSString v16;
  objc_class *v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  uint64_t v23;
  _BYTE v24[24];
  UIImage_optional v25;
  UIAction_optional v26;
  UIMenu_optional v27;
  Swift::String v28;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage);
  swift_beginAccess(v1 + 16, v24, 33, 0);
  v2 = *(objc_class **)(v1 + 24);
  if (v2)
  {
    swift_retain();
    v3 = v2;
LABEL_5:
    swift_endAccess(v24);
    v22 = v2;
    swift_release(v1);
    return v3;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v4 = (void *)objc_opt_self(UIImage);
  swift_retain();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "_systemImageNamed:withConfiguration:", v5, 0);

  v7 = swift_allocObject(&unk_1005D4140, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v25.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, v6, 0, 0, 0, v8, 0, 0, 0, sub_10023D298, v7);
  v25.value.super.isa = 0;
  v26.value.super.super.isa = 0;
  v9 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v25, v26, v27).super.super.isa;
  result = (objc_class *)(id)_DocumentManagerBundle(v9);
  if (result)
  {
    v11 = result;
    v28._countAndFlagsBits = 0xD00000000000003ELL;
    v28._object = (void *)0x800000010051C6F0;
    v12._countAndFlagsBits = 0x6469532065646948;
    v12._object = (void *)0xEC00000072616265;
    v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v13.value._object = (void *)0xEB00000000656C62;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v28)._object;

    v16 = String._bridgeToObjectiveC()();
    -[objc_class setAccessibilityLabel:](v9, "setAccessibilityLabel:", v16, swift_bridgeObjectRelease(object).n128_f64[0]);

    v17 = v9;
    v18 = String._bridgeToObjectiveC()();
    -[objc_class setAccessibilityIdentifier:](v17, "setAccessibilityIdentifier:", v18);

    -[objc_class setAccessibilityTraits:](v17, "setAccessibilityTraits:", UIAccessibilityTraitButton);
    *(_QWORD *)(v1 + 24) = v17;
    type metadata accessor for DOCBarButtonItemGroup();
    v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v20 = swift_allocObject(v19, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v20 + 32) = v17;
    v23 = v20;
    specialized Array._endMutation()(v20);
    v3 = v17;
    v21 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v23);
    swift_bridgeObjectRelease(v23);

    v2 = 0;
    *(_QWORD *)(v1 + 16) = v21;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100237E70()
{
  char *v0;
  objc_class *v1;
  unsigned __int8 v2;
  uint64_t result;
  uint64_t v4;

  if (objc_msgSend((id)objc_opt_self(UITraitCollection), "enclosingTabSwitcherCanBeFloating"))
  {
    v1 = sub_100237B24();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      result = _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage);
      if (result < 0)
      {
        __break(1u);
        return result;
      }
    }
    sub_1004588E0(0, 0, (uint64_t)v1);
  }
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "isPickerUI") & 1) == 0)return (uint64_t)_swiftEmptyArrayStorage;
  v2 = objc_msgSend(v0, "isEditing");
  result = (uint64_t)_swiftEmptyArrayStorage;
  if ((v2 & 1) == 0)
  {
    v4 = swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_additionalTrailingNavigationBarButtonItems]);
    sub_1000887E8(v4);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100237F64()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  unsigned int v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = v0;
  if ((objc_msgSend(v0, "isEditing") & 1) != 0)
    v2 = sub_100238400();
  else
    v2 = sub_1002380D0();
  v3 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v2);
  v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v4 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v5 >= v4 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
  specialized Array._endMutation()(v6);
  if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "forBrowsingInApp"))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
    if (Strong)
    {
      v8 = Strong;
      v9 = objc_msgSend(Strong, "sidebarViewControllerWithIsCollapsed:", v1);
      swift_unknownObjectRelease(v8);
      if (v9)
      {
        v10 = sub_10001F428();
        if (v10)
        {
          v11 = v10;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v13 >= v12 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
          v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
          specialized Array._endMutation()(v14);

        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_1002380D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  UIMenuElementSize v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Swift::String v22;
  Class isa;
  UIMenuElementSize v24;
  UIMenuElementSize v25;
  uint64_t v26;
  id v27;
  uint64_t children;
  UIMenuElementSize aBlock[5];
  uint64_t v31;
  _BYTE v32[24];
  UIImage_optional v33;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage);
  swift_beginAccess(v1 + 32, v32, 33, 0);
  v2 = *(void **)(v1 + 40);
  if (v2)
  {
    swift_retain();
    v3 = v2;
  }
  else
  {
    v4 = qword_100641150;
    swift_retain();
    if (v4 != -1)
      swift_once(&qword_100641150, sub_1000B20A8);
    v5 = objc_msgSend((id)qword_100672DD8, "ellipsisMenuItemImageName");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = objc_allocWithZone((Class)type metadata accessor for DOCSymbolImageBarButtonItem());
    v10 = sub_10009FE20(v6, v8, 3);
    v11 = swift_allocObject(&unk_1005D4140, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = String._bridgeToObjectiveC()();
    children = sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_1004D9B40;
    v15 = (void *)objc_opt_self(UIDeferredMenuElement);
    aBlock[4] = (UIMenuElementSize)sub_10023D1F4;
    v31 = v11;
    aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (UIMenuElementSize)sub_100458078;
    aBlock[3] = (UIMenuElementSize)&unk_1005D42E8;
    v16 = _Block_copy(aBlock);
    v17 = v31;
    v18 = v10;
    v19 = v12;
    swift_retain();
    swift_release(v17);
    v20 = objc_msgSend(v15, "elementWithUncachedProvider:", v16);
    _Block_release(v16);
    *(_QWORD *)(v14 + 32) = v20;
    aBlock[0] = v14;
    specialized Array._endMutation()(v21);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v33.value.super.isa = 0;
    v33.is_nil = (char)v12;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v33, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], (Swift::OpaquePointer)children).super.super.isa;
    objc_msgSend(v18, "setMenu:", isa);
    swift_release(v11);

    *(_QWORD *)(v1 + 40) = v18;
    type metadata accessor for DOCBarButtonItemGroup();
    v24 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v24 + 32) = v18;
    aBlock[0] = v24;
    specialized Array._endMutation()(v24);
    v25 = aBlock[0];
    v3 = v18;
    v26 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v25);
    swift_bridgeObjectRelease(v25);

    v2 = 0;
    *(_QWORD *)(v1 + 32) = v26;
  }
  swift_endAccess(v32);
  v27 = v2;
  swift_release(v1);
  return v3;
}

id sub_100238400()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  _BYTE v12[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage);
  swift_beginAccess(v1 + 48, v12, 33, 0);
  v2 = *(void **)(v1 + 56);
  if (v2)
  {
    swift_retain();
    v3 = v2;
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    swift_retain();
    v4 = sub_1000A6064(0);
    v5 = sub_10045814C((uint64_t)v4);

    *(_QWORD *)(v1 + 56) = v5;
    type metadata accessor for DOCBarButtonItemGroup();
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v7 + 32) = v5;
    v11 = v7;
    specialized Array._endMutation()(v7);
    v3 = v5;
    v8 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v11);
    swift_bridgeObjectRelease(v11);

    v2 = 0;
    *(_QWORD *)(v1 + 48) = v8;
  }
  swift_endAccess(v12);
  v9 = v2;
  swift_release(v1);
  return v3;
}

void sub_100238540()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 24);

  v2 = *(void **)(v0 + 40);
  v3 = *(id *)(v0 + 56);

}

uint64_t sub_100238588()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 24);

  v2 = *(void **)(v0 + 40);
  v3 = *(void **)(v0 + 56);

  return swift_deallocClassInstance(v0, 64, 7);
}

void sub_1002385D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(v5, "splitViewController");
    v7 = v5;
    if (!v6
      || (v8 = v6,
          v9 = objc_opt_self(DOCSplitBrowserViewController),
          v10 = (void *)swift_dynamicCastObjCClass(v8, v9),
          v5,
          v7 = v8,
          !v10))
    {

      v10 = 0;
    }
    objc_msgSend(v10, "hideSidebar");

  }
}

_QWORD *sub_10023868C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  UIMenuElementSize v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  id v10;
  __int128 v11;
  NSString v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  _QWORD *result;
  void *v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  NSString v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  UIMenuElementSize v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  Swift::String v44;
  objc_class *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t i;
  uint64_t v51;
  void *v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  Swift::OpaquePointer v56;
  UIMenuElementSize aBlock[5];
  uint64_t v58;
  UIMenuElementSize v59;
  char v60[24];
  UIImage_optional v61;
  Swift::String v62;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v60, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = _swiftEmptyArrayStorage;
  if (!Strong)
    return v3;
  v4 = (char *)Strong;
  v5 = sub_10006922C((uint64_t *)&unk_100648C98);
  v6 = swift_allocObject(v5, 56, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9880;
  v7 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration;
  v8 = *(void **)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  if (objc_msgSend(v8, "isFilesApp")
    && (objc_msgSend(v8, "isPickerUI") & 1) == 0
    && objc_msgSend((id)objc_opt_self(VNDocumentCameraViewController), "isSupported"))
  {
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

    if (qword_100640FA0 != -1)
      swift_once(&qword_100640FA0, sub_1000AD6D8);
    v11 = xmmword_10064CEA0;
    swift_bridgeObjectRetain(*((_QWORD *)&xmmword_10064CEA0 + 1));
    v12 = String._bridgeToObjectiveC()();
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v13 = swift_allocObject(&unk_1005D4398, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16);
    v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, *((_QWORD *)&v11 + 1), 0, 0, v10, 0, v12, 0, v14, 0, 0, 0, sub_10023D290, v13);
  }
  else
  {
    v15 = 0;
  }
  *(_QWORD *)(v6 + 32) = v15;
  v16 = *(void **)&v4[v7];
  v17 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v18 = objc_msgSend(v16, "sceneIdentifier");
  v19 = objc_msgSend(v17, "globalTabbedBrowserControllerForIdentifier:", v18);

  if (!v19)
    goto LABEL_14;
  if ((sub_10003796C(v16) & 1) == 0)
  {

LABEL_14:
    v32 = 0;
    goto LABEL_15;
  }
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v20);

  result = (id)_DocumentManagerBundle(v22);
  if (result)
  {
    v24 = result;
    v62._countAndFlagsBits = 0xD00000000000003FLL;
    v62._object = (void *)0x800000010051C640;
    v25._object = (void *)0x800000010051C620;
    v25._countAndFlagsBits = 0xD000000000000011;
    v26.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v26.value._object = (void *)0xEB00000000656C62;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v62);

    v29 = String._bridgeToObjectiveC()();
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v30 = swift_allocObject(&unk_1005D4370, 32, 7);
    *(_BYTE *)(v30 + 16) = 1;
    *(_QWORD *)(v30 + 24) = v19;
    v32 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28._countAndFlagsBits, v28._object, 0, 0, v21, 0, v29, 0, v31, 0, 0, 0, sub_10023D260, v30);
LABEL_15:
    *(_QWORD *)(v6 + 40) = v32;
    v33 = sub_1000A6064(1);
    *(_QWORD *)(v6 + 48) = v33;
    aBlock[0] = v6;
    specialized Array._endMutation()(v33);
    v59 = v6;
    v34 = *(void **)&v4[OBJC_IVAR____TtC5Files24DOCSidebarViewController_debugOptionsMenu];
    if (v34)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
      v35 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v36 = swift_allocObject(v35, 40, 7);
      *(_OWORD *)(v36 + 16) = xmmword_1004D9B40;
      v37 = (void *)objc_opt_self(UIDeferredMenuElement);
      v38 = swift_allocObject(&unk_1005D4320, 24, 7);
      *(_QWORD *)(v38 + 16) = v34;
      aBlock[4] = (UIMenuElementSize)sub_10023D234;
      v58 = v38;
      aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (UIMenuElementSize)sub_100458078;
      aBlock[3] = (UIMenuElementSize)&unk_1005D4338;
      v39 = _Block_copy(aBlock);
      v40 = v58;
      v41 = v34;
      swift_release(v40);
      v42 = objc_msgSend(v37, "elementWithUncachedProvider:", v39);
      _Block_release(v39);
      *(_QWORD *)(v36 + 32) = v42;
      aBlock[0] = v36;
      specialized Array._endMutation()(v43);
      v44._countAndFlagsBits = 0x704F206775626544;
      v44._object = (void *)0xED0000736E6F6974;
      v61.value.super.isa = 0;
      v61.is_nil = 0;
      v45 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v61, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v56).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v47 = *(_QWORD *)(v59 + 16);
      v46 = *(_QWORD *)(v59 + 24);
      if (v47 >= v46 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
      v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
      specialized Array._endMutation()(v48);

      v6 = v59;
    }
    aBlock[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
    v49 = *(_QWORD *)(v6 + 16);
    if (v49)
    {
      swift_bridgeObjectRetain_n(v6, 2);
      for (i = 0; i != v49; ++i)
      {
        v52 = *(void **)(v6 + 8 * i + 32);
        if (v52)
        {
          v53 = v52;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
          v55 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v54 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v55 >= v54 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
          v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
          specialized Array._endMutation()(v51);
        }
      }
      swift_bridgeObjectRelease(v6);
      v3 = (_QWORD *)aBlock[0];
    }
    else
    {
      swift_bridgeObjectRetain(v6);
    }
    swift_bridgeObjectRelease(v6);

    swift_bridgeObjectRelease(v6);
    return v3;
  }
  __break(1u);
  return result;
}

double sub_100238D18(void (*a1)(uint64_t), int a2, id a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = objc_msgSend(a3, "children");
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  a1(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_100238D94(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "setEditing:animated:", a3 & 1, 1);

  }
}

double DOCSidebarViewController.target(forAction:withSender:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int v13;
  id v14;
  id v15;
  double result;
  char v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  objc_class *v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  objc_super v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  sub_1000685A8(a2, (uint64_t)&v50);
  v6 = *((_QWORD *)&v51 + 1);
  if (*((_QWORD *)&v51 + 1))
  {
    v7 = sub_10007E7A0(&v50, *((uint64_t *)&v51 + 1));
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100068588(&v50);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(v46, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  if (v13)
  {
    *(_QWORD *)(a3 + 24) = type metadata accessor for DOCSidebarViewController(0);
    v14 = v46;
    *(_QWORD *)a3 = v46;
    v15 = v14;
    return result;
  }
  v17 = sub_100237858();
  if (v17 == 2 || (v17 & 1) != 0)
  {
    sub_1000685A8(a2, (uint64_t)&v50);
    v30 = *((_QWORD *)&v51 + 1);
    if (*((_QWORD *)&v51 + 1))
    {
      v31 = sub_10007E7A0(&v50, *((uint64_t *)&v51 + 1));
      v32 = *(_QWORD *)(v30 - 8);
      v33 = __chkstk_darwin(v31);
      v35 = (char *)&v45 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v32 + 16))(v35, v33);
      v36 = _bridgeAnythingToObjectiveC<A>(_:)(v35, v30);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v30);
      sub_100068588(&v50);
    }
    else
    {
      v36 = 0;
    }
    v42 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v47.receiver = v46;
    v47.super_class = v42;
    v43 = objc_msgSendSuper2(&v47, "targetForAction:withSender:", a1, v36);
    swift_unknownObjectRelease(v36);
    if (v43)
    {
      _bridgeAnyObjectToAny(_:)(&v50, v43);
      swift_unknownObjectRelease(v43);
    }
    else
    {
      v50 = 0u;
      v51 = 0u;
    }
    goto LABEL_27;
  }
  if ((static Selector.== infix(_:_:)("paste:", a1) & 1) != 0)
  {
    v18 = objc_msgSend(v46, "splitViewController");
    if (v18)
    {
      v19 = v18;
      v20 = objc_opt_self(DOCSplitBrowserViewController);
      v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
      if (v21)
      {
        v22 = objc_msgSend(v21, "fullDocumentManagerViewController");

        if (v22)
        {
          sub_1000685A8(a2, (uint64_t)&v50);
          v23 = *((_QWORD *)&v51 + 1);
          if (*((_QWORD *)&v51 + 1))
          {
            v24 = sub_10007E7A0(&v50, *((uint64_t *)&v51 + 1));
            v25 = *(_QWORD *)(v23 - 8);
            v26 = __chkstk_darwin(v24);
            v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v25 + 16))(v28, v26);
            v29 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v23);
            (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
            sub_100068588(&v50);
          }
          else
          {
            v29 = 0;
          }
          v44 = objc_msgSend(v22, "targetForAction:withSender:", a1, v29);

          swift_unknownObjectRelease(v29);
          if (v44)
          {
            _bridgeAnyObjectToAny(_:)(&v50, v44);
            swift_unknownObjectRelease(v44);
          }
          else
          {
            v50 = 0u;
            v51 = 0u;
          }
          sub_100070EDC((uint64_t)&v50, (uint64_t)&v48, &qword_100642730);
          if (*((_QWORD *)&v49 + 1))
          {
            sub_100079B28(&v48, &v50);
            goto LABEL_27;
          }
LABEL_26:
          v50 = 0u;
          v51 = 0u;
          sub_10000CB4C((uint64_t)&v48, &qword_100642730);
LABEL_27:
          sub_100070EDC((uint64_t)&v50, a3, &qword_100642730);
          return result;
        }
      }
      else
      {

      }
    }
    v48 = 0u;
    v49 = 0u;
    goto LABEL_26;
  }
  v37 = objc_msgSend(v46, "splitViewController");
  if (v37)
  {
    v38 = v37;
    v39 = objc_opt_self(DOCSplitBrowserViewController);
    v40 = (void *)swift_dynamicCastObjCClass(v38, v39);
    if (v40)
    {
      v41 = objc_msgSend(v40, "fullDocumentManagerViewController");

      if (v41)
      {
        *(_QWORD *)(a3 + 24) = sub_10004F2F0(0, &qword_100648590, &off_1005BCED8);
        *(_QWORD *)a3 = v41;
        return result;
      }
    }
    else
    {

    }
  }
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id DOCSidebarViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  if ((static Selector.== infix(_:_:)("performFind:", a1) & 1) != 0)
  {
    v5 = objc_msgSend(v2, "navigationItem");
    v6 = objc_msgSend(v5, "searchController");

    if (v6)
      return (id)(objc_msgSend(v2, "isEditing") ^ 1);
    else
      return 0;
  }
  else
  {
    sub_1000685A8(a2, (uint64_t)v18);
    v8 = v19;
    if (v19)
    {
      v9 = sub_10007E7A0(v18, v19);
      v10 = *(_QWORD *)(v8 - 8);
      v11 = __chkstk_darwin(v9);
      v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v10 + 16))(v13, v11);
      v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
      sub_100068588(v18);
    }
    else
    {
      v14 = 0;
    }
    v15 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v17.receiver = v2;
    v17.super_class = v15;
    v7 = objc_msgSendSuper2(&v17, "canPerformAction:withSender:", a1, v14);
    swift_unknownObjectRelease(v14);
  }
  return v7;
}

void DOCSidebarViewController.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  sub_10023C99C(a2);
}

uint64_t DOCSidebarViewController.collectionView(_:shouldSelectItemAt:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v5;
  Class isa;

  v3 = v2;
  if (sub_1003E1C70(a2))
    return 1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "collectionView:shouldHighlightItemAtIndexPath:", a1, isa);

  return (uint64_t)v5;
}

uint64_t DOCSidebarViewController.collectionView(_:shouldHighlightItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_10023CB7C(a2);
}

uint64_t sub_100239964(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  objc_super v12;

  if ((a3 & 1) != 0)
    v5 = 0x646E61707865;
  else
    v5 = 0x657370616C6C6F63;
  if ((a3 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  v7 = objc_msgSendSuper2(&v12, "collectionView");
  if (!v7)
  {
    __break(1u);
    JUMPOUT(0x100239BCCLL);
  }
  v8 = v7;
  v9 = type metadata accessor for DOCSidebarCollectionView();
  v10 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0), "hasUncommittedUpdates");

  if (!v10)
  {
    sub_10023380C(0xD000000000000016, 0x800000010051C730);
    __asm { BR              X10 }
  }
  sub_100239BE4(0xD000000000000027, 0x800000010051C7A0, v5, v6);
  swift_bridgeObjectRelease(v6);
  return 0;
}

uint64_t sub_100239BE4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  __n128 v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.Sidebar.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  swift_bridgeObjectRetain_n(a4, 2);
  v14 = swift_bridgeObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.info.getter(v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = swift_slowAlloc(32, -1);
    v24 = swift_slowAlloc(96, -1);
    v27 = v24;
    *(_DWORD *)v18 = 136315650;
    v23 = a1;
    v19 = sub_1000544FC(0xD00000000000001ELL, 0x800000010051C7D0, &v27);
    v25 = v8;
    v26 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v26 = sub_1000544FC(a3, a4, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v18 + 22) = 2080;
    swift_bridgeObjectRetain(a2);
    v26 = sub_1000544FC(v23, a2, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "%s: Ignoring %s for %s.", (uint8_t *)v18, 0x20u);
    v20 = v24;
    swift_arrayDestroy(v24, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v25);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a4, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

void sub_100239EE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = Strong;
    objc_msgSend(Strong, "updateSelectionToMatchBrowsedLocation:scrollToVisible:", a2, a3 & 1);

  }
}

void sub_100239FB0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  void *object;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  void *v63;
  void *v64;
  void **aBlock;
  uint64_t v66;
  void (*v67)(uint64_t, void *);
  void *v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;

  if (a4 == 1)
  {
    v64 = v4;
    v59 = a1;
    v5 = objc_msgSend(v59, "displayName");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v10 = (id)_DocumentManagerBundle(v9);
    if (v10)
    {
      v11 = v10;
      v71._countAndFlagsBits = 0xD00000000000005ALL;
      v71._object = (void *)0x800000010051C2C0;
      v12._object = (void *)0x800000010051C2A0;
      v12._countAndFlagsBits = 0x1000000000000011;
      v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13.value._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v71);

      v16 = sub_10006922C((uint64_t *)&unk_100644560);
      v17 = swift_allocObject(v16, 72, 7);
      *(_OWORD *)(v17 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v17 + 56) = &type metadata for String;
      v18 = sub_10006A638();
      *(_QWORD *)(v17 + 64) = v18;
      *(_QWORD *)(v17 + 32) = v6;
      *(_QWORD *)(v17 + 40) = v8;
      swift_bridgeObjectRetain(v8);
      static String.localizedStringWithFormat(_:_:)(v15._countAndFlagsBits, v15._object, v17);
      v20 = v19;
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v15._object);
      v22 = (id)_DocumentManagerBundle(v21);
      if (v22)
      {
        v23 = v22;
        v72._countAndFlagsBits = 0xD00000000000005CLL;
        v72._object = (void *)0x800000010051C350;
        v24._object = (void *)0x800000010051C320;
        v24._countAndFlagsBits = 0xD000000000000024;
        v25.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v25.value._object = (void *)0xEB00000000656C62;
        v26._countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v72);

        v28 = swift_allocObject(v16, 72, 7);
        *(_OWORD *)(v28 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v28 + 56) = &type metadata for String;
        *(_QWORD *)(v28 + 64) = v18;
        *(_QWORD *)(v28 + 32) = v6;
        *(_QWORD *)(v28 + 40) = v8;
        static String.localizedStringWithFormat(_:_:)(v27._countAndFlagsBits, v27._object, v28);
        v30 = v29;
        swift_bridgeObjectRelease(v28);
        swift_bridgeObjectRelease(v27._object);
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v20);
        v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v30);
        v33 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 1);

        v35 = (id)_DocumentManagerBundle(v34);
        if (v35)
        {
          v36 = v35;
          v63 = v33;
          v73._object = (void *)0xE000000000000000;
          v37._countAndFlagsBits = 0x6C65636E6143;
          v37._object = (void *)0xE600000000000000;
          v38.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v38.value._object = (void *)0xEB00000000656C62;
          v39._countAndFlagsBits = 0;
          v39._object = (void *)0xE000000000000000;
          v73._countAndFlagsBits = 0;
          object = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v73)._object;

          v41 = swift_allocObject(&unk_1005D4140, 24, 7);
          swift_unknownObjectWeakInit(v41 + 16);
          v42 = swift_allocObject(&unk_1005D41B8, 49, 7);
          *(_QWORD *)(v42 + 16) = v41;
          *(_QWORD *)(v42 + 24) = a1;
          *(_QWORD *)(v42 + 32) = a2;
          *(_QWORD *)(v42 + 40) = a3;
          *(_BYTE *)(v42 + 48) = 1;
          sub_1000E4F7C(a1, a2, a3, 1);
          swift_retain();
          v43 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          v69 = sub_10023D12C;
          v70 = v42;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_1000602CC;
          v68 = &unk_1005D41D0;
          v44 = _Block_copy(&aBlock);
          swift_release(v70);
          v45 = (void *)objc_opt_self(UIAlertAction);
          v58 = objc_msgSend(v45, "actionWithTitle:style:handler:", v43, 1, v44);
          _Block_release(v44);
          swift_release(v41);

          v47 = (id)_DocumentManagerBundle(v46);
          if (v47)
          {
            v48 = v47;
            v74._object = (void *)0xE000000000000000;
            v49._countAndFlagsBits = 0x6E4F206E727554;
            v49._object = (void *)0xE700000000000000;
            v50.value._countAndFlagsBits = 0x617A696C61636F4CLL;
            v50.value._object = (void *)0xEB00000000656C62;
            v51._countAndFlagsBits = 0;
            v51._object = (void *)0xE000000000000000;
            v74._countAndFlagsBits = 0;
            v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v74)._object;

            v53 = swift_allocObject(&unk_1005D4140, 24, 7);
            swift_unknownObjectWeakInit(v53 + 16);
            v54 = swift_allocObject(&unk_1005D4208, 64, 7);
            *(_QWORD *)(v54 + 16) = v53;
            *(_QWORD *)(v54 + 24) = a1;
            *(_QWORD *)(v54 + 32) = a2;
            *(_QWORD *)(v54 + 40) = a3;
            *(_BYTE *)(v54 + 48) = 1;
            *(_QWORD *)(v54 + 56) = v59;
            sub_1000E4F7C(a1, a2, a3, 1);
            sub_1000E4F7C(a1, a2, a3, 1);
            swift_retain();
            v55 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v52);
            v69 = sub_10023D178;
            v70 = v54;
            aBlock = _NSConcreteStackBlock;
            v66 = 1107296256;
            v67 = sub_1000602CC;
            v68 = &unk_1005D4220;
            v56 = _Block_copy(&aBlock);
            swift_release(v70);
            v57 = objc_msgSend(v45, "actionWithTitle:style:handler:", v55, 0, v56);
            _Block_release(v56);
            swift_release(v53);

            objc_msgSend(v63, "addAction:", v58);
            objc_msgSend(v63, "addAction:", v57);
            objc_msgSend(v63, "setPreferredAction:", v57);
            objc_msgSend(v64, "presentViewController:animated:completion:", v63, 1, 0);

            sub_1000E4FD0(a1, a2, a3, 1);
            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_10023A614(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  char *v13;
  int v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  char v19[24];

  v10 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (char *)Strong;
    sub_1003E3330(a3, a4, a5, a6, 0);
    v13 = &v12[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
    v14 = v12[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24];
    if (v14 == 255)
    {

    }
    else
    {
      v15 = *(id *)v13;
      v16 = *((_QWORD *)v13 + 1);
      v17 = *((_QWORD *)v13 + 2);
      sub_1000E4F7C(*(id *)v13, v16, v17, v12[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24]);
      if (DOCDeviceIsPad(v18))
        sub_1003E2494(v15, v16, v17, v14, 0, 0);

      sub_1000B1664(v15, v16, v17, v14);
    }
  }
}

void sub_10023A70C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  char v27[24];

  v12 = a2 + 16;
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = Strong;
    if (a6 == 1)
    {
      v15 = Strong;
      v16 = a7;
      a6 = 1;
      sub_1000E4F7C(a3, a4, a5, 1);
      sub_1002030EC(0, a3, v15, v16, a3, a4, a5, 1);
    }
    else
    {
      v17 = a7;
      v18 = v14;
      sub_1000E4F7C(a3, a4, a5, a6);
      v19 = v18;
      v20 = v17;
      sub_1000E4F7C(a3, a4, a5, a6);
      v21 = (char *)v19;
      v22 = v20;
      sub_1000E4F7C(a3, a4, a5, a6);
      sub_1003DBB08(v22);
      v23 = swift_unknownObjectWeakLoadStrong(&v21[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
      if (v23)
      {
        v24 = (void *)v23;
        sub_100201260((uint64_t)a3, a4, a5, a6);
        v26 = v25;
        objc_msgSend(v24, "sidebarViewController:didSelect:", v21, v25);

        swift_unknownObjectRelease(v24);
      }
      else
      {

      }
      sub_1000E4FD0(a3, a4, a5, a6);

      sub_1000E4FD0(a3, a4, a5, a6);
    }

    sub_1000E4FD0(a3, a4, a5, a6);
  }
}

double sub_10023A91C(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  double result;
  uint64_t Strong;
  void *v15;
  void *v16;
  void *v17;

  sub_1003DBB08(a3);
  if ((a1 & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate);
    if (Strong)
    {
      v15 = (void *)Strong;
      sub_100201260(a4, a5, a6, a7);
      v17 = v16;
      objc_msgSend(v15, "sidebarViewController:didSelect:", a2, v16);

      *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
    }
  }
  return result;
}

void sub_10023A9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v4 = type metadata accessor for DOCSidebarViewController.DOCSidebarItemChangePacer(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    v7 = a2 + 16;
    swift_beginAccess(v7, v16, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = *(unsigned __int8 *)(v6 + 88);
      if (v10 != 255)
      {
        v12 = *(_QWORD *)(v6 + 72);
        v11 = *(_QWORD *)(v6 + 80);
        v13 = *(void **)(v6 + 64);
        v14 = *(_QWORD *)(v6 + 104);
        v15 = *(_QWORD *)(v6 + 112);
        *(_QWORD *)(v6 + 104) = 0;
        *(_QWORD *)(v6 + 112) = 0;
        swift_retain();
        sub_1000B1650(v13, v12, v11, v10);
        sub_100087534(v14, v15);
        sub_10023AAEC(v13, v12, v11, v10, *(unsigned __int8 *)(v6 + 89));
        sub_1000B1664(v13, v12, v11, v10);
        swift_release(a1);
      }

    }
  }
}

void sub_10023AAEC(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  char *v6;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  void *v45;
  unsigned int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t Strong;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  id v62;
  _QWORD v63[3];
  char v64[8];
  uint64_t v65;
  uint64_t v66[4];
  char v67;

  LODWORD(v6) = a5;
  v11 = a4;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v11 == 1)
  {
    if (((unint64_t)objc_msgSend(a1, "status") | 2) != 2)
    {
      sub_100239FB0(a1, a2, a3, 1);
      sub_1000E4FD0(a1, a2, a3, 1);
      return;
    }
    sub_1000E4FD0(a1, a2, a3, 1);
  }
  v16 = (_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier + 8);
  *v16 = 0;
  v16[1] = 0;
  swift_bridgeObjectRelease(v17);
  if ((v6 & 1) != 0)
  {
    if (a4 == 1)
    {
      v18 = objc_msgSend(a1, "searching_fileProviderDomain");
      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend(v18, "error");
        LODWORD(v62) = (_DWORD)v6;
        v6 = v15;
        v21 = v13;
        v22 = v12;
        v23 = v20;

        v24 = v23;
        v25 = v22;
        v26 = v21;
        v27 = v6;
        LOBYTE(v6) = (_BYTE)v62;
        sub_1000E4FD0(a1, a2, a3, 1);
        if (v24)
        {
          sub_1003E3330(a1, a2, a3, 1, 0);
          v28 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
          v29 = *(unsigned __int8 *)(v5
                                   + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem
                                   + 24);
          if (v29 != 255)
          {
            v31 = *(_QWORD *)(v28 + 8);
            v30 = *(_QWORD *)(v28 + 16);
            v32 = *(id *)v28;
            sub_1000E4F7C(*(id *)v28, v31, v30, *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
            sub_1003E2494(v32, v31, v30, v29, 0, 0);
            sub_1000B1664(v32, v31, v30, v29);
          }
          v33 = (void *)_convertErrorToNSError(_:)(v24);
          DOCPresentAlertForError(v33, v5);

          v35 = Logger.Sidebar.unsafeMutableAddressor(v34);
          (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v35, v25);
          v36 = v24;
          v37 = Logger.logObject.getter(v36);
          v38 = static os_log_type_t.error.getter(v37);
          if (os_log_type_enabled(v37, v38))
          {
            v39 = swift_slowAlloc(22, -1);
            v62 = (id)swift_slowAlloc(64, -1);
            v66[0] = (uint64_t)v62;
            *(_DWORD *)v39 = 136315394;
            v65 = sub_1000544FC(0xD000000000000026, 0x800000010051C270, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
            *(_WORD *)(v39 + 12) = 2080;
            swift_getErrorValue(v36, v64, v63);
            v40 = Error.localizedDescription.getter(v63[1], v63[2]);
            v42 = v41;
            v65 = sub_1000544FC(v40, v41, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);

            swift_bridgeObjectRelease(v42);
            _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s: Tapped on sidebar item with error: %s.", (uint8_t *)v39, 0x16u);
            v43 = v62;
            swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v43, -1, -1);
            swift_slowDealloc(v39, -1, -1);

          }
          else
          {

          }
          (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
          return;
        }
      }
      else
      {
        sub_1000E4FD0(a1, a2, a3, 1);
      }
    }
    sub_100201260((uint64_t)a1, a2, a3, a4);
    v45 = v44;
    v46 = objc_msgSend(v44, "isFPV2");

    if (v46)
    {
      v47 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
      v48 = *(void **)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem);
      v49 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 8);
      v50 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 16);
      *(_QWORD *)v47 = a1;
      *(_QWORD *)(v47 + 8) = a2;
      *(_QWORD *)(v47 + 16) = a3;
      v51 = *(_BYTE *)(v47 + 24);
      *(_BYTE *)(v47 + 24) = a4;
      sub_1000E4F7C(a1, a2, a3, a4);
      sub_1000E4F7C(a1, a2, a3, a4);
      sub_1000B1664(v48, v49, v50, v51);
      sub_100020920();
      sub_1000E4FD0(a1, a2, a3, a4);
    }
    else
    {
      sub_1003E3330(a1, a2, a3, a4, 0);
      v52 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
      v53 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24);
      if (v53 != 255)
      {
        v55 = *(_QWORD *)(v52 + 8);
        v54 = *(_QWORD *)(v52 + 16);
        v56 = *(id *)v52;
        sub_1000E4F7C(*(id *)v52, v55, v54, *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
        sub_1003E2494(v56, v55, v54, v53, 0, 0);
        sub_1000B1664(v56, v55, v54, v53);
      }
    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate);
  if (Strong)
  {
    v58 = (void *)Strong;
    sub_100201260((uint64_t)a1, a2, a3, a4);
    v60 = v59;
    objc_msgSend(v58, "sidebarViewController:didSelect:", v5, v59);

    swift_unknownObjectRelease(v58);
  }
  if (a4 == 2)
  {
    v66[0] = 0xD000000000000036;
    v66[1] = 0x800000010051C230;
    v66[2] = 0;
    v66[3] = 0;
    v67 = v6 & 1;
    v62 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(Strong);
    DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)(v66);

  }
}

uint64_t sub_10023B0CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(__n128);
  __n128 v6;

  v2 = type metadata accessor for DOCSidebarViewController.DOCSidebarItemChangePacer(0);
  result = swift_dynamicCastClass(a1, v2);
  if (result)
  {
    v5 = *(void (**)(__n128))(result + 104);
    v4 = *(_QWORD *)(result + 112);
    *(_QWORD *)(result + 104) = 0;
    *(_QWORD *)(result + 112) = 0;
    swift_retain();
    sub_10008BA00((uint64_t)v5, v4);
    sub_100087534((uint64_t)v5, v4);
    if (v5)
    {
      v6 = swift_retain();
      v5(v6);
      sub_100087534((uint64_t)v5, v4);
      sub_100087534((uint64_t)v5, v4);
    }
    return swift_release(a1);
  }
  return result;
}

Swift::Bool __swiftcall DOCSidebarViewController.scrollViewShouldScrollToTop(_:)(UIScrollView a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 v5;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  v2 = objc_msgSendSuper2(&v7, "collectionView");
  if (v2)
  {
    v3 = v2;
    v4 = type metadata accessor for DOCSidebarCollectionView();
    v5 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0), "hasUncommittedUpdates");

    LOBYTE(v2) = v5 ^ 1;
  }
  else
  {
    __break(1u);
  }
  return (char)v2;
}

void sub_10023B2C8(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id Strong;
  uint64_t v15;
  _BYTE v16[24];

  v4 = sub_1003E4A2C(a1);
  if (v7 != -1)
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    v12 = swift_allocObject(&unk_1005D4140, 24, 7);
    v13 = v12 + 16;
    swift_unknownObjectWeakInit(v12 + 16);
    if (v11 == 1)
    {
      Strong = a1;
      sub_1002037B8((a2 & 1) == 0, v8, v12, v8, v9, v10, 1, Strong);
      swift_release(v12);
    }
    else
    {
      swift_beginAccess(v13, v16, 0, 0);
      Strong = (id)swift_unknownObjectWeakLoadStrong(v13, v15);
      swift_release(v12);
      if (!Strong)
      {
LABEL_6:
        sub_1000B1664(v8, v9, v10, v11);
        return;
      }
    }

    goto LABEL_6;
  }
}

void sub_10023B3E4(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11, v12);
  if (Strong)
  {
    v14 = (char *)Strong;
    if (a6 == 1)
    {
      v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController);
      sub_1000E4F7C(a3, a4, a5, 1);
      swift_retain();
      sub_1003DBB08(a3);
      swift_release(v15);
      sub_1000E4FD0(a3, a4, a5, 1);
    }
    if ((a1 & 1) != 0)
    {
      v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController];
      swift_retain();
      sub_1002000F8(v17, (uint64_t)a3, a4, a5, a6);
      v19 = v18;
      swift_release(v16);
      sub_100392FB8(v19);
    }

  }
}

double sub_10023B500(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v11)
  {
    swift_retain();
    sub_1003E4EF0(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release(v11);
      sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
      v12 = sub_1003E1E24((uint64_t)v10, 1);
      if (v15 == -1)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        *(_QWORD *)&result = swift_release(v11).n128_u64[0];
      }
      else
      {
        v16 = v15;
        v26 = *(void **)(v11 + 24);
        *(_QWORD *)(v11 + 24) = a1;
        v17 = (void *)v12;
        v18 = v13;
        v19 = v14;
        v20 = a1;

        v21 = *(void **)(v11 + 32);
        v25 = *(_QWORD *)(v11 + 40);
        v26 = v21;
        v24 = *(_QWORD *)(v11 + 48);
        *(_QWORD *)(v11 + 32) = v17;
        *(_QWORD *)(v11 + 40) = v18;
        *(_QWORD *)(v11 + 48) = v19;
        v22 = *(_BYTE *)(v11 + 56);
        *(_BYTE *)(v11 + 56) = v16;
        sub_1000E4F7C(v17, v18, v19, v16);
        sub_1000B1664(v26, v25, v24, v22);
        sub_1003E3CDC();
        swift_release(v11);
        sub_1000B1664(v17, v18, v19, v16);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
  }
  return result;
}

uint64_t sub_10023B6F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  unint64_t v14;
  void (*v15)(_QWORD *, __n128);
  uint64_t v16;
  __n128 v17;
  _QWORD v18[3];
  char v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE v22[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = (_QWORD *)result;
    if (objc_msgSend(a1, "isValid"))
    {
      sub_1003E66C0(0xD000000000000019, 0x800000010051C470);
      v8 = v7[12];
      v7[12] = 0;
      swift_release(v8);
      v9 = *(unsigned __int8 *)(a3 + 48);
      if (v9 != 255)
      {
        v11 = *(_QWORD *)(a3 + 32);
        v10 = *(_QWORD *)(a3 + 40);
        v12 = *(void **)(a3 + 24);
        sub_1000E4F7C(v12, v11, v10, v9);
        _StringGuts.grow(_:)(26);
        v20 = 0;
        v21 = 0xE000000000000000;
        v13._object = (void *)0x800000010051C490;
        v13._countAndFlagsBits = 0xD000000000000018;
        String.append(_:)(v13);
        v18[0] = v12;
        v18[1] = v11;
        v18[2] = v10;
        v19 = v9;
        _print_unlocked<A, B>(_:_:)(v18, &v20, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        v14 = v21;
        sub_1003E66C0(v20, v21);
        swift_bridgeObjectRelease(v14);
        LOBYTE(v14) = *(_BYTE *)(a3 + 49);
        sub_1000E4F7C(v12, v11, v10, v9);
        sub_1002342BC(v12, v11, v10, v9, v14, 1);
        sub_1000B1664(v12, v11, v10, v9);
        sub_1000B1664(v12, v11, v10, v9);
      }
      v15 = (void (*)(_QWORD *, __n128))v7[6];
      if (v15)
      {
        v16 = v7[7];
        v17 = swift_retain();
        v15(v7, v17);
        sub_100087534((uint64_t)v15, v16);
      }
    }
    return swift_release(v7);
  }
  return result;
}

void sub_10023B8D8(char *a1)
{
  id v2;
  void *v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  __int16 v8;

  v8 = 0;
  v2 = objc_msgSend(a1, "enclosingTabSwitcherStyle");
  if (!v2)
    goto LABEL_4;
  if (v2 == (id)1)
  {
LABEL_5:
    v4 = a1;
    sub_10023C3D4(0, (uint64_t)v4, (uint64_t)v4, (_BYTE *)&v8 + 1, (unsigned __int8 *)&v8);

    sub_10002D328();
    return;
  }
  if (v2 == (id)2)
  {
LABEL_4:
    v3 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    HIBYTE(v8) = objc_msgSend(v3, "canPresentContentForTab:", 0);
    LOBYTE(v8) = objc_msgSend(v3, "canPresentContentForTab:", 1);
    goto LABEL_5;
  }
  v5 = v2;
  type metadata accessor for DOCTabSwitcherStyle(0);
  v7 = v5;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v6, &v7, v6, &type metadata for Int);
  __break(1u);
}

uint64_t sub_10023B9B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10023B9D4()
{
  sub_10002D328();
}

_QWORD *sub_10023B9F8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  double v31;
  id v32;
  BOOL v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  id v48;
  char v49[64];
  _QWORD *v50;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = 0;
  v43 = (void *)DOCDocumentSourceIdentifierLocal;
  v42 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  v40 = a1 + 56;
  v45 = -(uint64_t)v1;
  v3 = _swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(a1 + 16);
  do
  {
    v41 = v3;
    if (v2 <= v1)
      v4 = v1;
    else
      v4 = v2;
    v5 = -(uint64_t)v4;
    v6 = (unsigned __int8 *)(v40 + 32 * v2++);
    v44 = -(uint64_t)v4;
    while (1)
    {
      if (v5 + v2 == 1)
      {
        __break(1u);
        JUMPOUT(0x10023BDCCLL);
      }
      v8 = (void *)*((_QWORD *)v6 - 3);
      v7 = *((_QWORD *)v6 - 2);
      v9 = *((_QWORD *)v6 - 1);
      v10 = *v6;
      v46 = *v6;
      if ((_DWORD)v10 != 1)
        __asm { BR              X8 }
      sub_1000E4F7C(v8, v7, v9, 1);
      v48 = v8;
      v11 = objc_msgSend(v48, "status");
      if (v11 != (id)1)
        break;
      v12 = sub_1003DC2B0(1);
      v13 = (void *)sub_1000D016C((uint64_t)v12);
      swift_bridgeObjectRelease(v12);
      v14 = sub_1003DC2B0(0);
      v15 = sub_1000D016C((uint64_t)v14);
      swift_bridgeObjectRelease(v14);
      v16 = sub_10006922C(&qword_10064FE20);
      inited = swift_initStackObject(v16, v49);
      *(_OWORD *)(inited + 16) = xmmword_1004D9880;
      *(_QWORD *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
      v47 = v7;
      *(_QWORD *)(inited + 40) = v43;
      *(_QWORD *)(inited + 48) = v42;
      v18 = v43;
      v19 = v42;
      sub_1003F98AC(inited);
      v21 = v20;
      swift_setDeallocating(inited);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy(inited + 32, 3, v22);
      sub_1003DBF60(v15, v13);
      v24 = v23;
      v25 = v21;
      v7 = v47;
      sub_1003DBF60(v25, v24);
      v27 = v26;
      v28 = objc_msgSend(v48, "identifier");
      v29 = sub_100028BE0((uint64_t)v28, v27);

      v30 = v27;
      v5 = v44;
      *(_QWORD *)&v31 = swift_bridgeObjectRelease(v30).n128_u64[0];
      if ((v29 & 1) != 0 || !objc_msgSend(v48, "status", v31))
        goto LABEL_17;
      v32 = objc_msgSend(v48, "status");
      sub_1000E4FD0(v8, v47, v9, 1);
      v33 = v32 == (id)2;
      v5 = v44;
      if (!v33)
        goto LABEL_22;
LABEL_18:
      sub_1000E4FD0(v8, v7, v9, 1);
      ++v2;
      v6 += 32;
      if (v45 + v2 == 1)
        return v41;
    }
    if (v11 && v11 != (id)2)
    {
LABEL_17:
      sub_1000E4FD0(v8, v7, v9, 1);
      goto LABEL_18;
    }
    v47 = v7;
    sub_1000E4FD0(v8, v7, v9, 1);
LABEL_22:
    v1 = v39;
    v3 = v41;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v41);
    v50 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000817E4(0, v41[2] + 1, 1);
      v3 = v50;
    }
    v36 = v3[2];
    v35 = v3[3];
    if (v36 >= v35 >> 1)
    {
      sub_1000817E4(v35 > 1, v36 + 1, 1);
      v3 = v50;
    }
    v3[2] = v36 + 1;
    v37 = &v3[4 * v36];
    v37[4] = v8;
    v37[5] = v47;
    v37[6] = v9;
    *((_BYTE *)v37 + 56) = v46;
  }
  while (v45 + v2);
  return v3;
}

uint64_t sub_10023BDE4(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  void *v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;

  v4 = v3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = _swiftEmptyArrayStorage;
    if (!v6)
      return (uint64_t)v7;
    v26 = _swiftEmptyArrayStorage;
    result = sub_1000817E4(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v26;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v22 = v10;
      sub_100297BFC(&v22, a2, a3, (uint64_t)&v23);
      if (v4)
      {
        swift_release(v7);

        return (uint64_t)v7;
      }
      v4 = 0;

      v12 = v23;
      v13 = v24;
      v14 = v25;
      v26 = v7;
      v16 = v7[2];
      v15 = v7[3];
      if (v16 >= v15 >> 1)
      {
        v19 = v23;
        sub_1000817E4(v15 > 1, v16 + 1, 1);
        v12 = v19;
        v7 = v26;
      }
      v7[2] = v16 + 1;
      v17 = &v7[4 * v16];
      *((_OWORD *)v17 + 2) = v12;
      ++v9;
      v17[6] = v13;
      *((_BYTE *)v17 + 56) = v14;
      if (v6 == v9)
        return (uint64_t)v7;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void *sub_10023BF84(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  _BYTE v31[56];
  unint64_t v32;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v25))
  {
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController);
    v32 = v3 & 0xC000000000000001;
    v30 = (void *)DOCDocumentSourceIdentifierLocal;
    v29 = (void *)DOCDocumentSourceIdentifierTrashedItems;
    v5 = 4;
    v27 = v4;
    v28 = v3;
    while (1)
    {
      v6 = v32 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = sub_1003DC2B0(1);
      v10 = sub_1000D016C((uint64_t)v9);
      swift_bridgeObjectRelease(v9);
      v11 = sub_1003DC2B0(0);
      v12 = sub_1000D016C((uint64_t)v11);
      swift_bridgeObjectRelease(v11);
      v13 = sub_10006922C(&qword_10064FE20);
      inited = swift_initStackObject(v13, v31);
      *(_OWORD *)(inited + 16) = xmmword_1004D9880;
      *(_QWORD *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter((__n128)xmmword_1004D9880);
      *(_QWORD *)(inited + 40) = v30;
      *(_QWORD *)(inited + 48) = v29;
      v15 = v30;
      v16 = v29;
      sub_1003F98AC(inited);
      v18 = v17;
      swift_setDeallocating(inited);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy(inited + 32, 3, v19);
      sub_1003DBF60(v12, (void *)v10);
      sub_1003DBF60(v18, v20);
      v22 = v21;
      v23 = objc_msgSend(v7, "identifier");
      LOBYTE(v10) = sub_100028BE0((uint64_t)v23, v22);

      *(_QWORD *)&v24 = swift_bridgeObjectRelease(v22).n128_u64[0];
      if ((v10 & 1) == 0 && objc_msgSend(v7, "status", v24) && objc_msgSend(v7, "status") != (id)2)
      {
        swift_bridgeObjectRelease(v28);
        return v7;
      }

      ++v5;
      v3 = v28;
      if (v8 == v27)
      {
        swift_bridgeObjectRelease(v28);
        return 0;
      }
    }
    __break(1u);
LABEL_15:
    if (v3 < 0)
      v25 = v3;
    else
      v25 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRelease(v3);
  return 0;
}

double sub_10023C200(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  double result;
  uint64_t v16;
  _BYTE v17[24];

  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v8 = v7;
  swift_release(v6);
  v9 = type metadata accessor for DOCMutableSidebarSection();
  v10 = swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
  swift_beginAccess(v10 + 88, v17, 1, 0);
  v11 = *(_QWORD *)(v10 + 88);
  *(_QWORD *)(v10 + 88) = a3;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRelease(v11);
  v12 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, &v16, 0, 0);
  v13 = *v12;
  swift_bridgeObjectRetain(*v12);
  v14 = sub_1000069B8(a1, v13);
  swift_bridgeObjectRelease(v13);
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
    sub_100013B5C((v14 & 1) == 0, 1);
  else
    sub_100235834();
  *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_10023C33C(uint64_t a1, _BYTE *a2, unsigned __int8 *a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v8;

  v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  v6 = *(_BYTE *)(v5 + 40) ^ *a2;
  if ((v6 & 1) != 0)
  {
    *(_BYTE *)(v5 + 40) = *a2;
    swift_retain();
    sub_10012E9A8();
    swift_release(v5);
    v5 = *(_QWORD *)(a1 + v4);
  }
  v8 = *a3;
  if (*(unsigned __int8 *)(v5 + 41) != v8)
  {
    *(_BYTE *)(v5 + 41) = v8;
    swift_retain();
    sub_10012E9A8();
    swift_release(v5);
    v6 = 1;
  }
  return v6 & 1;
}

double sub_10023C3D4(char a1, uint64_t a2, uint64_t a3, _BYTE *a4, unsigned __int8 *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t *v15;
  uint64_t v16;
  char v17;
  _BYTE v18[24];

  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v12 = v11;
  swift_release(v10);
  v13 = type metadata accessor for DOCMutableSidebarSection();
  swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  if ((sub_10023C33C(a3, a4, a5) & 1) != 0)
  {
    v15 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, v18, 0, 0);
    v16 = *v15;
    swift_bridgeObjectRetain(*v15);
    v17 = sub_1000069B8(a1, v16);
    swift_bridgeObjectRelease(v16);
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
      sub_100013B5C((v17 & 1) == 0, 1);
    else
      sub_100235834();
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

double sub_10023C51C(char a1, uint64_t a2, uint64_t a3, void *a4, _BYTE *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double result;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  _BYTE v19[24];

  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v12 = v11;
  swift_release(v10);
  v13 = type metadata accessor for DOCMutableSidebarSection();
  v14 = swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  if ((sub_1002974E0(v14, a3, a4, a5) & 1) != 0)
  {
    v16 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, v19, 0, 0);
    v17 = *v16;
    swift_bridgeObjectRetain(*v16);
    v18 = sub_1000069B8(a1, v17);
    swift_bridgeObjectRelease(v17);
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
      sub_100013B5C((v18 & 1) == 0, 1);
    else
      sub_100235834();
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_10023C664(char a1, uint64_t a2, uint64_t a3, void *a4, _BYTE *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _BYTE v27[24];

  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  swift_retain();
  sub_10002944C();
  v12 = v11;
  swift_release(v10);
  v13 = type metadata accessor for DOCMutableSidebarSection();
  v14 = swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  if (!*(_QWORD *)(a3 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = v14;
  v16 = sub_10001CCD0(0);
  if ((v17 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v16);
  v19 = a4;
  v20 = swift_bridgeObjectRetain(v18);
  v21 = sub_10023BDE4(v20, v19, a5);
  swift_bridgeObjectRelease(v18);

  swift_beginAccess(v15 + 88, v27, 1, 0);
  v22 = *(_QWORD *)(v15 + 88);
  *(_QWORD *)(v15 + 88) = v21;
  swift_bridgeObjectRelease(v22);
  v23 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad, &v26, 0, 0);
  v24 = *v23;
  swift_bridgeObjectRetain(*v23);
  v25 = sub_1000069B8(a1, v24);
  swift_bridgeObjectRelease(v24);
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
    sub_100013B5C((v25 & 1) == 0, 1);
  else
    sub_100235834();
  swift_unknownObjectRelease(v12);
}

void sub_10023C7F8(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  char *v14;
  id v15;
  id v16;

  v2 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext;
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext] = a1;
  v4 = a1;

  v5 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  v6 = objc_msgSend(v5, "isPickerUI");
  if ((_DWORD)v6)
  {
    v7 = *(void **)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v6);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
    v10 = v9;
    v11 = *(void **)&v1[v2];
    v12 = (void *)objc_opt_self(DOCManagedPermission);
    v13 = v11;
    v14 = v1;
    v15 = v7;
    v16 = objc_msgSend(v12, "defaultPermission");
    sub_10027836C(v8, v10, v5, v16, 3, v11, 1, v15, v14);

    swift_bridgeObjectRelease(v10);
  }
}

double sub_10023C938(char a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = type metadata accessor for DOCSidebarViewController.DOCSidebarItemChangePacer(0);
  v5 = swift_allocObject(v4, 120, 7);
  result = 0.0;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_QWORD *)(v5 + 80) = 0;
  *(_QWORD *)(v5 + 104) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_WORD *)(v5 + 88) = 255;
  *(_QWORD *)(v5 + 96) = 0;
  *(double *)(v5 + 16) = a2;
  *(_BYTE *)(v5 + 24) = a1;
  return result;
}

void sub_10023C99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v2 = v1;
  if (sub_1003E1C70(a1))
  {
    v4 = sub_1003E1420(a1, 0);
    if (v4)
    {
      v5 = v4;
      sub_100236134(*(_BYTE *)(v4 + 16), 1, 1);
      swift_unknownObjectRelease(v5);
    }
  }
  else
  {
    v6 = sub_1003E1E24(a1, 1);
    if (v9 != -1)
    {
      v10 = (void *)v6;
      v11 = v7;
      v12 = v8;
      v13 = v9;
      v14 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
      if (v15)
      {
        v16 = *(void **)(v15 + 24);
        if (v16)
        {
          v17 = v16;
          swift_retain();
          sub_10039742C(0, v18);
          v19 = *(void **)&v17[qword_1006510B8];
          v20 = v19;

          if (v19)
          {
            if ((objc_msgSend(v20, "isHidden") & 1) != 0
              || (sub_1002A3F54(0), (v21 = *(_QWORD *)(v2 + v14)) == 0))
            {

            }
            else
            {
              v22 = *(void **)(v21 + 24);
              *(_QWORD *)(v21 + 24) = 0;
              swift_retain();

              v23 = *(void **)(v21 + 32);
              v24 = *(_QWORD *)(v21 + 40);
              v25 = *(_QWORD *)(v21 + 48);
              *(_QWORD *)(v21 + 40) = 0;
              *(_QWORD *)(v21 + 48) = 0;
              *(_QWORD *)(v21 + 32) = 0;
              v26 = *(_BYTE *)(v21 + 56);
              *(_BYTE *)(v21 + 56) = -1;
              sub_1000B1664(v23, v24, v25, v26);
              sub_1000A3FE8(0, 0);

              swift_release(v15);
              v15 = v21;
            }
          }
          swift_release(v15);
        }
      }
      sub_100235690(v10, v11, v12, v13, 1);
      sub_1000B1664(v10, v11, v12, v13);
    }
  }
}

uint64_t sub_10023CB7C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  unsigned __int8 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  void *v17;

  v3 = 1;
  if (!sub_1003E1C70(a1))
  {
    v5 = (void *)sub_1003E1E24(a1, 1);
    v7 = v6;
    v9 = v8;
    if (!v4)
    {
      v17 = *(void **)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext);
      v15 = v17;
      v3 = sub_1001E9928(v5, (uint64_t)v17);
      v16 = 0;
      goto LABEL_9;
    }
    if (v4 != 255)
    {
      if (v4 != 1)
      {
        v16 = v4;
        goto LABEL_13;
      }
      v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext);
      v11 = type metadata accessor for DOCFileProviderSource();
      v12 = swift_dynamicCastClass(v5, v11);
      if (!v12 || (v13 = *(void **)(v12 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
      {
        v16 = 1;
        v3 = 1;
        goto LABEL_13;
      }
      v14 = v10;
      v15 = v13;
      v3 = sub_100087190(v15, (uint64_t)v10);

      v16 = 1;
LABEL_9:

LABEL_13:
      sub_1000B1664(v5, v7, v9, v16);
      return v3 & 1;
    }
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t type metadata accessor for DOCSidebarViewController.EditingSession()
{
  return objc_opt_self(_TtCC5Files24DOCSidebarViewController14EditingSession);
}

uint64_t type metadata accessor for DOCSidebarViewController.SwipeToDeletePresentationContext()
{
  return objc_opt_self(_TtCC5Files24DOCSidebarViewController32SwipeToDeletePresentationContext);
}

uint64_t type metadata accessor for DOCSidebarViewController.BBIStorage()
{
  return objc_opt_self(_TtCC5Files24DOCSidebarViewController10BBIStorage);
}

double sub_10023CD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;

  v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v2 && *(unsigned __int8 *)(v2 + 56) != 255)
  {
    swift_retain();
    sub_1002A3F54(0);
    v3 = *(_QWORD *)(v0 + v1);
    if (v3)
    {
      v4 = *(void **)(v3 + 24);
      *(_QWORD *)(v3 + 24) = 0;
      swift_retain();

      v5 = *(void **)(v3 + 32);
      v6 = *(_QWORD *)(v3 + 40);
      v7 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)(v3 + 40) = 0;
      *(_QWORD *)(v3 + 48) = 0;
      *(_QWORD *)(v3 + 32) = 0;
      v8 = *(_BYTE *)(v3 + 56);
      *(_BYTE *)(v3 + 56) = -1;
      sub_1000B1664(v5, v6, v7, v8);
      sub_1000A3FE8(0, 0);
      swift_release(v2);
      v2 = v3;
    }
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

uint64_t sub_10023CDE0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  void *object;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v19;

  v3 = sub_1002B90E4(0);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(a1 + 48);
    v6 = v2;
    do
    {
      v7 = *(v5 - 2);
      v19 = *v5;
      swift_bridgeObjectRetain(*v5);
      swift_bridgeObjectRetain(v6);
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease(0xE000000000000000);
      v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v9 = v3;
      object = v8._object;
      String.append(_:)(v8);
      swift_bridgeObjectRelease(object);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_bridgeObjectRelease(0xEF3A65756C615677);
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease(0xE000000000000000);
      v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v13 = v12._object;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(v13);
      v14._countAndFlagsBits = 41;
      v14._object = (void *)0xE100000000000000;
      String.append(_:)(v14);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(0xEF3A65756C615677);
      if ((v7 & v9) == v7)
      {
        swift_bridgeObjectRelease(v19);
      }
      else
      {
        swift_bridgeObjectRetain(v19);
        swift_bridgeObjectRelease(v6);
        v9 |= v7;
        _StringGuts.grow(_:)(18);
        swift_bridgeObjectRelease(0xE000000000000000);
        v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v16 = v15._object;
        String.append(_:)(v15);
        swift_bridgeObjectRelease(v16);
        v17._countAndFlagsBits = 41;
        v17._object = (void *)0xE100000000000000;
        String.append(_:)(v17);
        swift_bridgeObjectRelease_n(v19, 2);
        v6 = 0xEF3A65756C615677;
      }
      v3 = v9;
      v5 += 3;
      --v4;
    }
    while (v4);
  }
  return v3;
}

uint64_t sub_10023D07C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

void sub_10023D0A8()
{
  uint64_t v0;

  sub_100235EF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_10023D0B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 33, 7);
}

void sub_10023D0E4()
{
  uint64_t v0;

  sub_100239EE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_10023D0F0(uint64_t a1)
{
  uint64_t v1;

  sub_10023A9E4(a1, v1);
}

uint64_t sub_10023D0F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

void sub_10023D12C(uint64_t a1)
{
  uint64_t v1;

  sub_10023A614(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_10023D13C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_10023D178(uint64_t a1)
{
  uint64_t v1;

  sub_10023A70C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_10023D18C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023D1B0()
{
  return sub_1001F6434((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10023D1BC(void *a1)
{
  uint64_t v1;

  return sub_10023B6F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10023D1C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10023D1E8(uint64_t a1)
{
  uint64_t v1;

  sub_100238D94(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

double sub_10023D1F4(void (*a1)(void))
{
  uint64_t v1;
  _QWORD *v3;
  double result;

  v3 = sub_10023868C(v1);
  a1();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

double sub_10023D234(void (*a1)(uint64_t), int a2)
{
  uint64_t v2;

  return sub_100238D18(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_10023D23C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10023D260(uint64_t a1)
{
  uint64_t v1;

  return sub_10046C938(a1, *(_BYTE *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10023D26C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10023D290(uint64_t a1)
{
  uint64_t v1;

  sub_1002BD9B4(a1, v1);
}

void sub_10023D298(uint64_t a1)
{
  uint64_t v1;

  sub_1002385D0(a1, v1);
}

void sub_10023D2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002364F0(a1, a2, v2);
}

void sub_10023D2A8(uint64_t a1)
{
  uint64_t v1;

  sub_100236630(a1, v1);
}

uint64_t sub_10023D2B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1000120C0(a1, v1);
}

uint64_t sub_10023D2B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10023D2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10023632C(a1, a2, *(void (**)(__int128 *))(v2 + 16));
}

void sub_10023D2E4(uint64_t a1)
{
  uint64_t v1;

  sub_100235758(a1, v1);
}

uint64_t sub_10023D2EC()
{
  return sub_1001F6434((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10023D344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  void **v10;
  id *v11;
  _BOOL8 v12;
  void **v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  char v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a2 + 40);
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v7 = v5;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) == 0)
    return 0;
  v10 = (void **)(a2 + 56);
  v11 = (id *)(a1 + 56);
  do
  {
    v12 = --v2 == 0;
    if (!v2)
      break;
    if (*((double *)v11 - 1) != *((double *)v10 - 1))
      break;
    v13 = v10 + 2;
    v14 = v11 + 2;
    v15 = *v10;
    v16 = *v11;
    v17 = v15;
    v18 = static NSObject.== infix(_:_:)(v16, v17);

    v11 = v14;
    v10 = v13;
  }
  while ((v18 & 1) != 0);
  return v12;
}

uint64_t sub_10023D474(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_38:
    if (a2 < 0)
      v24 = a2;
    else
      v24 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a2);
    if (v6 == v25)
      goto LABEL_4;
    return 0;
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(a1);
  v7 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_38;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_47:
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_49;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_21:
    v14 = v13;
    sub_10004F2F0(0, (unint64_t *)&unk_100648CF0, CAMediaTimingFunction_ptr);
    v15 = static NSObject.== infix(_:_:)(v5, v14);

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v26)
        {
          v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = static NSObject.== infix(_:_:)(v22, v18);

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_10023D6FC(uint64_t a1, unint64_t a2)
{
  return sub_10023D798(a1, a2, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
}

BOOL sub_10023D710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (unsigned __int8 *)(a1 + 33);
  v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

id sub_10023D784(uint64_t a1, unint64_t a2)
{
  return sub_10023D798(a1, a2, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
}

id sub_10023D798(uint64_t a1, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  id v23;
  void *v24;
  unint64_t v26;
  void **v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = a2;
  v7 = a1;
  v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v6 < 0)
      v32 = v6;
    else
      v32 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v6);
    if (v9 == v33)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v9) = 0;
    return (id)(v9 & 1);
  }
  if (a1 < 0)
    v31 = a1;
  else
    v31 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v7);
  v10 = (unint64_t)v6 >> 62;
  if ((unint64_t)v6 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v9 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v9)
    goto LABEL_37;
  v11 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v7 < 0)
    v11 = v7;
  if (!v8)
    v11 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
  v12 = v6 & 0xFFFFFFFFFFFFFF8;
  v13 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v6 < 0)
    v14 = v6;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v10)
    v13 = v14;
  if (v11 == v13)
  {
LABEL_37:
    LOBYTE(v9) = 1;
    return (id)(v9 & 1);
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v34 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v7 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7))
  {
    v16 = result;
    if ((v6 & 0xC000000000000001) == 0)
      break;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_21:
    v18 = v17;
    a4 = (_QWORD *)sub_10004F2F0(0, a3, a4);
    a3 = (unint64_t *)static NSObject.== infix(_:_:)(v16, v18);

    if ((a3 & 1) == 0)
      goto LABEL_54;
    v19 = v9 - 1;
    if (v9 == 1)
      return (id)(v9 & 1);
    if (((v6 | v7) & 0xC000000000000001) != 0)
    {
      v20 = 0;
      v21 = v9 - 2;
      while (v19 != v20)
      {
        v9 = v20 + 1;
        if (v34)
          v22 = (unint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v7);
        else
          v22 = (unint64_t *)*(id *)(v7 + 40 + 8 * v20);
        a3 = v22;
        if ((v6 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v6);
        }
        else
        {
          if (v9 >= *(_QWORD *)(v12 + 16))
            goto LABEL_59;
          v23 = *(id *)(v6 + 40 + 8 * v20);
        }
        v24 = v23;
        v9 = static NSObject.== infix(_:_:)(a3, v23);

        if ((v9 & 1) != 0 && v21 != v20++)
          continue;
        return (id)(v9 & 1);
      }
      __break(1u);
    }
    else
    {
      v26 = *(_QWORD *)(v12 + 16);
      if (v26 <= 1)
        v26 = 1;
      a3 = (unint64_t *)(v26 - 1);
      v27 = (void **)(v7 + 40);
      v12 = v6 + 40;
      while (v19)
      {
        if (!a3)
          goto LABEL_58;
        v29 = *v27++;
        v28 = v29;
        v30 = *(void **)v12;
        v12 += 8;
        v6 = v28;
        v7 = v30;
        v9 = static NSObject.== infix(_:_:)(v6, v7);

        if ((v9 & 1) != 0)
        {
          a3 = (unint64_t *)((char *)a3 - 1);
          if (--v19)
            continue;
        }
        return (id)(v9 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v17 = *(id *)(v6 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_10023DA8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v2 = a2;
  v3 = a1;
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v2 < 0)
      v31 = v2;
    else
      v31 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    if (v5 == v32)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v3);
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v33 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v3 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_21:
    v14 = v13;
    type metadata accessor for DOCBrowserContainerController();
    v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) == 0)
      goto LABEL_54;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v33)
          v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_59;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = static NSObject.== infix(_:_:)(v20, v21);

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_58;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = static NSObject.== infix(_:_:)(v2, v3);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10023DD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  BOOL v21;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for IndexPath(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v23 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v18 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v23 = *(_QWORD *)(v8 + 72);
      v24 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        v17 = sub_10023EF98();
        v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
        v19 = *(void (**)(char *, uint64_t))(v24 + 8);
        v19(v7, v4);
        v19(v10, v4);
        v21 = v14-- != 0;
        if ((v18 & 1) == 0)
          break;
        v12 += v23;
        a2 = v16;
        a1 = v15;
      }
      while (v21);
    }
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

id sub_10023DEDC(uint64_t a1, unint64_t a2)
{
  return sub_10023D798(a1, a2, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
}

id sub_10023DEF0(uint64_t a1, unint64_t a2)
{
  return sub_10023D798(a1, a2, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

double sub_10023DF68(uint64_t a1)
{
  double result;

  sub_10023EDF4(a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

char *sub_10023DF8C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  char v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t Strong;
  uint64_t v32;
  void *v33;
  id v34;
  _BYTE *v35;
  int v36;
  void *v37;
  id v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  unsigned __int8 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  id v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;

  v7 = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes) = a2;
  v9 = a4;
  swift_bridgeObjectRetain(v7);
  v10 = a1;
  v11 = a3;
  v12 = (char *)sub_10004F040(v10, a3, a4);
  if ((unint64_t)v7 >> 62)
    goto LABEL_13;
  v13 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  v14 = v12;
  v58 = v12;
  while (v13)
  {
    v54 = v11;
    v56 = v9;
    v15 = 4;
    v9 = (uint64_t)&off_10061F000;
    while (1)
    {
      v11 = (id)(v15 - 4);
      if ((v7 & 0xC000000000000001) == 0)
        break;
      v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v7);
      v12 = (char *)(v15 - 3);
      if (__OFADD__(v11, 1))
        goto LABEL_12;
LABEL_9:
      v17 = objc_msgSend(v16, "isFolder");
      swift_unknownObjectRelease(v16);
      if ((v17 & 1) == 0)
      {
        ++v15;
        if (v12 != v13)
          continue;
      }
      v18 = v17 ^ 1;
      v9 = v56;
      v12 = v58;
      v11 = v54;
      goto LABEL_18;
    }
    v16 = *(void **)(v7 + 8 * v15);
    swift_unknownObjectRetain(v16);
    v12 = (char *)(v15 - 3);
    if (!__OFADD__(v11, 1))
      goto LABEL_9;
LABEL_12:
    __break(1u);
LABEL_13:
    if (v7 < 0)
      v19 = v7;
    else
      v19 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v20 = v12;
    v13 = (char *)_CocoaArrayWrapper.endIndex.getter(v19);
    v58 = v12;
  }
  v18 = 1;
LABEL_18:
  swift_bridgeObjectRelease(v7);
  v53 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager;
  v21 = *(void **)&v12[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  v22 = objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController());
  swift_bridgeObjectRetain(v7);
  v23 = (char *)v10;
  v55 = (char *)v11;
  v24 = v12;
  v25 = v21;
  v57 = v23;
  v26 = sub_100227048(v23, v7, v18, a3, v21, (uint64_t)v12);
  v27 = OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController;
  v28 = *(void **)&v24[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController];
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController] = v26;

  v29 = *(_QWORD *)&v24[v27];
  if (!v29)
    goto LABEL_25;
  v30 = &v24[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  Strong = swift_unknownObjectWeakLoadStrong(&v24[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting]);
  v32 = v29 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting;
  *(_QWORD *)(v32 + 8) = *((_QWORD *)v30 + 1);
  swift_unknownObjectWeakAssign(v32, Strong);
  swift_unknownObjectRelease(Strong);
  v33 = *(void **)&v24[v27];
  if (!v33)
    goto LABEL_25;
  v34 = v33;
  v35 = sub_100223ECC();
  v36 = v35[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation];
  v35[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] = 0;
  if (v36 == 1)
    sub_1003D26E8();

  v37 = *(void **)&v24[v27];
  if (!v37)
  {
LABEL_25:
    swift_bridgeObjectRelease(v7);
    v41 = v57;
    v40 = v58;
    v42 = v53;
    v13 = v55;
    goto LABEL_43;
  }
  if (!v13)
  {
    v52 = v37;
    swift_bridgeObjectRelease(v7);
    v48 = 1;
LABEL_42:
    v41 = v57;
    v40 = v58;
    v42 = v53;
    v13 = v55;
    sub_100223594(v48);

LABEL_43:
    v49 = *(_QWORD *)&v40[v42] + OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate;
    *(_QWORD *)(v49 + 8) = &off_1005E0118;
    swift_unknownObjectWeakAssign(v49, v24);
    v38 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v7 = (uint64_t)"observeEditingStateChangedWithNotification:";
    v50 = qword_100640E18;
    v39 = v24;
    if (v50 != -1)
      goto LABEL_46;
    goto LABEL_44;
  }
  v38 = (id)v9;
  v39 = (char *)(v7 & 0xC000000000000001);
  swift_bridgeObjectRetain(v7);
  v52 = v37;
  v9 = 4;
  while (1)
  {
    v43 = v9 - 4;
    if (!v39)
      break;
    v44 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7);
    v41 = (char *)(v9 - 3);
    if (__OFADD__(v43, 1))
      goto LABEL_45;
LABEL_33:
    if ((objc_msgSend(v44, "isTrashed") & 1) != 0)
    {
      swift_bridgeObjectRelease_n(v7, 2);
      swift_unknownObjectRelease(v44);
LABEL_39:
      v48 = 0;
LABEL_41:
      v9 = (uint64_t)v38;
      goto LABEL_42;
    }
    v45 = objc_msgSend(v44, "fpfs_fpItem");
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "isCollaborationInvitation");
      swift_unknownObjectRelease(v44);

      if ((v47 & 1) != 0)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        goto LABEL_39;
      }
    }
    else
    {
      swift_unknownObjectRelease(v44);
    }
    ++v9;
    if (v41 == v13)
    {
      swift_bridgeObjectRelease_n(v7, 2);
      v48 = 1;
      goto LABEL_41;
    }
  }
  v44 = *(void **)(v7 + 8 * v9);
  swift_unknownObjectRetain(v44);
  v41 = (char *)(v9 - 3);
  if (!__OFADD__(v43, 1))
    goto LABEL_33;
LABEL_45:
  __break(1u);
LABEL_46:
  swift_once(&qword_100640E18, sub_1001753A8);
LABEL_44:
  objc_msgSend(v38, "addObserver:selector:name:object:", v39, v7, qword_100672720, 0);

  return v39;
}

void sub_10023E49C(void *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  void *v14;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v2 = objc_msgSend(a1, "object");
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v15, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_10007EBDC((uint64_t)v15, (uint64_t)v16);
  if (!v17)
  {
    sub_10007EB54((uint64_t)v16);
    return;
  }
  v4 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  if ((swift_dynamicCast(&v14, v16, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return;
  v5 = v14;
  v6 = objc_msgSend(v1, "viewIfLoaded");
  if (!v6)
  {

    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v5, "viewIfLoaded");
  v9 = objc_msgSend(v8, "window");

  v10 = objc_msgSend(v7, "window");
  v11 = v10;
  if (!v9)
  {
    if (v10)
    {

      return;
    }
LABEL_15:
    objc_msgSend(v7, "setHidden:", objc_msgSend(v5, "isEditing"));
LABEL_16:

    return;
  }
  if (v10)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_100648D00, UIWindow_ptr);
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }

}

void sub_10023E6CC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for DOCColumnInfoViewController();
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController];
  if (!v1)
    goto LABEL_9;
  v2 = v1;
  objc_msgSend(v0, "doc_addChildViewController:addSubviewBlock:", v2, 0);
  v3 = objc_msgSend(v2, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setAutoresizingMask:", 18);

    v5 = objc_msgSend(v2, "view");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v0, "view");
      if (v7)
      {
        v8 = v7;
        objc_msgSend(v7, "frame");
        v10 = v9;
        v12 = v11;
        v14 = v13;
        v16 = v15;

        objc_msgSend(v6, "setFrame:", v10, v12, v14, v16);
        return;
      }
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  __break(1u);
LABEL_9:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x800000010051C870, "Files/DOCColumnInfoViewController.swift", 39, 2, 60, 0);
  __break(1u);
}

void sub_10023E88C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes));

}

id sub_10023E8B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCColumnInfoViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCColumnInfoViewController()
{
  return objc_opt_self(_TtC5Files27DOCColumnInfoViewController);
}

void sub_10023E974()
{
  sub_10023E9A0();
}

void sub_10023E994(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  sub_10023EE64(a3);
}

void sub_10023E9A0()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if ((objc_msgSend(v0, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkipped_updateOverlay") & 1) != 0)return;
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
  if (!v1)
    return;
  v2 = v1;
  objc_msgSend(v2, "setLargeTitleDisplayMode:", 2);
  objc_msgSend(v2, "setHidesSearchBarWhenScrolling:", 0);
  objc_msgSend(v2, "set_alternateLargeTitles:", 0);
  v3 = OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes;
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes];
    else
      v12 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes]);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v4);
    if (v13 != 1)
      goto LABEL_24;
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_24;
  }
  v5 = *(_QWORD *)&v0[v3];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v14 = *(_QWORD *)&v0[v3];
    else
      v14 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v0[v3]);
    if (_CocoaArrayWrapper.endIndex.getter(v14))
      goto LABEL_7;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v0[v3]);
    if (v6)
    {
LABEL_7:
      if ((v5 & 0xC000000000000001) != 0)
      {
        v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
      }
      else
      {
        if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v7 = *(void **)(v5 + 32);
        swift_unknownObjectRetain(v7);
      }
      v8 = objc_msgSend(v7, "displayName", swift_bridgeObjectRelease(v5).n128_f64[0]);
      if (!v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v11 = v10;
        v8 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v9 = swift_bridgeObjectRelease(v11).n128_u64[0];
      }
      objc_msgSend(v2, "setTitle:", v8, v9);
      swift_unknownObjectRelease(v7);
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease(v5);
LABEL_24:
  v15._object = (void *)0x800000010051B620;
  v16._countAndFlagsBits = 0x6D65744920756C25;
  v16._object = (void *)0xE900000000000073;
  v15._countAndFlagsBits = 0xD00000000000003ELL;
  v17 = DOCLocalizedDictionaryString(_:comment:)(v16, v15);
  v18 = sub_10006922C((uint64_t *)&unk_100644560);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
  v20 = *(_QWORD *)&v0[v3];
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v33 = *(_QWORD *)&v0[v3];
    else
      v33 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v21 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v19 + 56) = &type metadata for Int;
  *(_QWORD *)(v19 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v19 + 32) = v21;
  static String.localizedStringWithFormat(_:_:)(v17._countAndFlagsBits, v17._object, v19);
  v23 = v22;
  swift_bridgeObjectRelease(v17._object);
  swift_bridgeObjectRelease(v19);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v8, swift_bridgeObjectRelease(v23).n128_f64[0]);
LABEL_27:

  objc_msgSend(v2, "setHidesBackButton:", 1);
  v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
  swift_bridgeObjectRetain_n(v24, 2);
  v25 = objc_msgSend(v2, "leftBarButtonItems");
  if (!v25)
    goto LABEL_30;
  v26 = v25;
  v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  swift_bridgeObjectRetain(v24);
  v29 = swift_bridgeObjectRetain(v28);
  LOBYTE(v26) = sub_10023D798(v29, v24, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease_n(v28, 2);
  if ((v26 & 1) != 0)
  {
    swift_bridgeObjectRelease_n(v24, 2);
  }
  else
  {
LABEL_30:
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setLeftBarButtonItems:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
    swift_bridgeObjectRelease(v24);

  }
  v31 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
  v32 = swift_bridgeObjectRetain(v31);
  sub_10045B6DC(v32, 0);

  swift_bridgeObjectRelease(v31);
}

uint64_t sub_10023EDF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;

  result = swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting, a1);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
  if (v4)
  {
    Strong = swift_unknownObjectWeakLoadStrong(result, v3);
    swift_unknownObjectWeakAssign(v4 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting, Strong);
    return swift_unknownObjectRelease(Strong);
  }
  return result;
}

void sub_10023EE64(void (*a1)(id))
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  char *v8;
  char v9[24];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
  if (v3)
  {
    v4 = v3;
    v5 = sub_100223EE0();
    v6 = objc_msgSend(v5, "window");

    if (v6)
    {
      v7 = (char *)sub_100223EE0();
      v8 = &v7[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
      swift_beginAccess(&v7[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v9, 0, 0);
      if (*(_QWORD *)(*(_QWORD *)v8 + 16))
      {
        v6 = *(id *)(*(_QWORD *)v8 + 32);

      }
      else
      {

        v6 = 0;
      }
    }
    a1(v6);

  }
  else
  {
    a1(0);
  }
}

uint64_t sub_10023EF5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10023EF98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649150;
  if (!qword_100649150)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_100649150);
  }
  return result;
}

id sub_10023EFF8(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend((id)objc_opt_self(DOCExtensionInterface), *a3);
}

void sub_10023F030(void *a1, void *a2, id a3, uint64_t a4, void (*a5)(void))
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  _QWORD *v19;
  id v20;
  id v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  id v30;
  id v31;
  id (*v32)();
  id v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  void (*v54)(void);
  _QWORD aBlock[5];
  uint64_t v56;

  if (a1)
  {
    v10 = a1;
    if (objc_msgSend(v10, "documentLandingMode") != (id)-1)
      objc_msgSend(a2, "setIsInUIPDocumentLanding:", 1);

  }
  v11 = objc_msgSend(a3, "_principalObject");
  if (!v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v11;
  v13 = type metadata accessor for DOCServiceViewController();
  v14 = (char *)swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
  v15 = *(void **)&v14[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuration];
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuration] = a2;
  v16 = a2;

  v17 = objc_msgSend(a3, "_principalObject");
  if (!v17)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v18 = (char *)swift_dynamicCastClassUnconditional(v17, v13, 0, 0, 0);
  swift_unknownObjectWeakAssign(&v18[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentServiceContext], a3);

  objc_allocWithZone((Class)type metadata accessor for DOCServiceDocumentBrowserViewController());
  v19 = v16;
  swift_unknownObjectRetain(a4);
  v20 = a3;
  v21 = sub_1003A2B38(a4, v20, v19);
  if (a1)
  {
    v54 = a5;
    v23 = objc_opt_self(UIView);
    v24 = (_QWORD *)swift_allocObject(&unk_1005D4878, 48, 7);
    v24[2] = v19;
    v24[3] = v20;
    v24[4] = v21;
    v24[5] = a1;
    v25 = swift_allocObject(&unk_1005D48A0, 32, 7);
    *(_QWORD *)(v25 + 16) = sub_1002414D0;
    *(_QWORD *)(v25 + 24) = v24;
    aBlock[4] = sub_10006657C;
    v56 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005D48B8;
    v26 = _Block_copy(aBlock);
    v27 = v56;
    v28 = a1;
    v29 = v19;
    v30 = v20;
    v31 = v21;
    swift_retain();
    objc_msgSend((id)v23, "performWithoutAnimation:", v26, swift_release(v27).n128_f64[0]);

    _Block_release(v26);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v25, "", 104, 47, 48, 1);
    *(_QWORD *)&v22 = swift_release(v25).n128_u64[0];
    if ((v23 & 1) == 0)
    {
      a5 = v54;
      v32 = sub_1002414D0;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_19;
  }
  v32 = 0;
  v24 = 0;
LABEL_11:
  objc_msgSend(v21, "startSearchingSourcesWithConfiguration:", v19, v22, v54);
  v33 = objc_msgSend(v20, "_principalObject");
  if (!v33)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v34 = (char *)swift_dynamicCastClassUnconditional(v33, v13, 0, 0, 0);
  swift_unknownObjectWeakAssign(&v34[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentViewController], v21);
  objc_msgSend(v21, "preferredContentSize");
  objc_msgSend(v34, "setPreferredContentSize:");
  objc_msgSend(v34, "addChildViewController:", v21);
  v35 = objc_msgSend(v34, "view");
  if (!v35)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v36 = v35;
  v37 = objc_msgSend(v21, "view");
  if (!v37)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v38 = v37;
  objc_msgSend(v36, "addSubview:", v37);

  objc_msgSend(v21, "didMoveToParentViewController:", v34);
  v39 = objc_msgSend(v21, "view");
  if (!v39)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v40 = v39;
  objc_msgSend(v39, "setAutoresizingMask:", 18);

  v41 = objc_msgSend(v21, "view");
  if (!v41)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v42 = v41;
  v43 = objc_msgSend(v34, "view");
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v43, "bounds");
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v52 = v51;

    objc_msgSend(v42, "setFrame:", v46, v48, v50, v52);
    v53 = v21;
    a5();

    sub_100087534((uint64_t)v32, (uint64_t)v24);
    return;
  }
LABEL_26:
  __break(1u);
}

id sub_10023F4E4(void *a1, void *a2, void *a3, uint64_t a4)
{
  id result;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;

  if (!objc_msgSend(a1, "isInUIPDocumentLanding"))
    return objc_msgSend(a3, "applyBrowserStateChange:force:", a4, 1);
  result = objc_msgSend(a2, "_principalObject");
  if (result)
  {
    v8 = result;
    v9 = type metadata accessor for DOCServiceViewController();
    v10 = (void *)swift_dynamicCastClassUnconditional(v8, v9, 0, 0, 0);
    v11 = v10;
    if ((*((_BYTE *)v10 + OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding) & 1) == 0)
    {
      *((_BYTE *)v10 + OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding) = 1;
      objc_msgSend(v10, "setModalInPresentation:", 1);
    }

    return objc_msgSend(a3, "applyBrowserStateChange:force:", a4, 1);
  }
  __break(1u);
  return result;
}

void sub_10023F700(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v4 = v3;
  v8 = objc_msgSend(v4, "_principalObject");
  if (v8)
  {
    v9 = v8;
    v10 = type metadata accessor for DOCServiceViewController();
    v11 = (void *)swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
    v12 = swift_allocObject(&unk_1005D4710, 49, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = a1;
    *(_QWORD *)(v12 + 32) = a2;
    *(_QWORD *)(v12 + 40) = a3;
    *(_BYTE *)(v12 + 48) = 0;
    v17[4] = sub_1002411F4;
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10004A82C;
    v17[3] = &unk_1005D4728;
    v13 = _Block_copy(v17);
    v14 = v18;
    v15 = v11;
    v16 = a1;
    sub_10008BA00(a2, a3);
    swift_release(v14);
    DOCRunInMainThread(v13);
    _Block_release(v13);

  }
  else
  {
    __break(1u);
  }
}

void sub_10023F8D0(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;

  v5 = v4;
  v10 = objc_msgSend(v5, "_principalObject");
  if (v10)
  {
    v11 = v10;
    v12 = type metadata accessor for DOCServiceViewController();
    v13 = (void *)swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0);
    v14 = swift_allocObject(&unk_1005D46C0, 49, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    *(_QWORD *)(v14 + 32) = a3;
    *(_QWORD *)(v14 + 40) = a4;
    *(_BYTE *)(v14 + 48) = a2 & 1;
    v19[4] = sub_1002411F4;
    v20 = v14;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_10004A82C;
    v19[3] = &unk_1005D46D8;
    v15 = _Block_copy(v19);
    v16 = v20;
    v17 = v13;
    v18 = a1;
    sub_10008BA00(a3, a4);
    swift_release(v16);
    DOCRunInMainThread(v15);
    _Block_release(v15);

  }
  else
  {
    __break(1u);
  }
}

id sub_10023FC94(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSArray v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  objc_class *v13;
  id v14;
  id v15;
  objc_super v17;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v9.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v9.super.isa = 0;
  }
  sub_100241350(a2, (uint64_t)v8);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v13 = (objc_class *)type metadata accessor for DOCServiceContext();
  v17.receiver = v3;
  v17.super_class = v13;
  v14 = objc_msgSendSuper2(&v17, "initWithInputItems:contextUUID:", v9.super.isa, isa);

  v15 = v14;
  sub_100241398(a2);
  if (v15)

  return v15;
}

id sub_10023FEBC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSArray v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  objc_class *v15;
  id v16;
  id v17;
  objc_super v19;

  v4 = v3;
  v8 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11.super.isa = 0;
  }
  sub_100241350(a3, (uint64_t)v10);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = (objc_class *)type metadata accessor for DOCServiceContext();
  v19.receiver = v4;
  v19.super_class = v15;
  v16 = objc_msgSendSuper2(&v19, "initWithInputItems:listenerEndpoint:contextUUID:", v11.super.isa, a2, isa);

  v17 = v16;
  sub_100241398(a3);
  if (v17)

  return v17;
}

id sub_100240104()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceContext);
}

uint64_t type metadata accessor for DOCServiceContext()
{
  return objc_opt_self(_TtC5Files17DOCServiceContext);
}

id sub_1002401E0()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceView);
}

uint64_t type metadata accessor for DOCServiceView()
{
  return objc_opt_self(_TtC5Files14DOCServiceView);
}

id sub_100240290(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  __n128 v10;
  objc_super v12;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentViewController]);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentServiceContext]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuration] = 0;
  v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_isBrowserViewController] = 0;
  v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_shouldOverrideWindowAppearance] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance] = 0;
  v3[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding] = 0;
  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for DOCServiceViewController();
  v7 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v6, a3);

  v8 = v7;
  setiopolicy_np(3, 0, 1);
  v9 = objc_msgSend(objc_allocWithZone((Class)DOCAppearance), "init");
  sub_10024121C(v9);

  objc_msgSend(v8, "setModalInPresentation:", DOCDeviceIsPad(v10));
  return v8;
}

id sub_100240434(void *a1)
{
  _BYTE *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  __n128 v7;
  objc_super v9;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentViewController]);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentServiceContext]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuration] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_isBrowserViewController] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_shouldOverrideWindowAppearance] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance] = 0;
  v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding] = 0;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCServiceViewController();
  v3 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    setiopolicy_np(3, 0, 1);
    v6 = objc_msgSend(objc_allocWithZone((Class)DOCAppearance), "init");
    sub_10024121C(v6);

    objc_msgSend(v5, "setModalInPresentation:", DOCDeviceIsPad(v7));
  }

  return v4;
}

void sub_100240918(uint64_t a1, void *a2, void (*a3)(__n128), uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  __n128 v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v42 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCServiceViewController_configuration);
  if (v19)
  {
    v39 = v15;
    v40 = v14;
    v41 = v10;
    if (objc_msgSend(v19, "isInUIPDocumentLanding", v16))
      objc_msgSend(a2, "setForceClearBackground:", 1);
    v20 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance);
    if (v20
      && (sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr),
          v21 = a2,
          v22 = v20,
          v23 = static NSObject.== infix(_:_:)(v22, v21),
          v22,
          v21,
          (v23 & 1) != 0))
    {
      if (a3)
      {
        v24 = v42;
        v25 = swift_retain();
        a3(v25);
        sub_100087534((uint64_t)a3, v24);
      }
    }
    else
    {
      v26 = a2;
      sub_10024121C(a2);

      if (a3)
      {
        v27 = (uint64_t)a3;
        if ((a5 & 1) != 0)
        {
          v28 = (void *)objc_opt_self(CATransaction);
          v29 = v42;
          objc_msgSend(v28, "flush", swift_retain().n128_f64[0]);
        }
        else
        {
          v29 = v42;
          swift_retain();
        }
        v30 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        v31 = (void *)static OS_dispatch_queue.main.getter(v30);
        v32 = swift_allocObject(&unk_1005D45F8, 32, 7);
        *(_QWORD *)(v32 + 16) = v27;
        *(_QWORD *)(v32 + 24) = v29;
        aBlock[4] = sub_100066584;
        v44 = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004A82C;
        aBlock[3] = &unk_1005D4610;
        v33 = _Block_copy(aBlock);
        v34 = v44;
        swift_retain();
        swift_release(v34);
        static DispatchQoS.unspecified.getter(v35);
        aBlock[0] = _swiftEmptyArrayStorage;
        v36 = sub_10008BAAC();
        v37 = sub_10006922C((uint64_t *)&unk_100647540);
        v38 = sub_1000791AC();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v38, v9, v36);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v12, v33);
        _Block_release(v33);

        sub_100087534(v27, v29);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v9);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100240F38(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;

  swift_unknownObjectWeakAssign(&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_currentViewController], a1);
  objc_msgSend(a1, "preferredContentSize");
  objc_msgSend(v1, "setPreferredContentSize:");
  objc_msgSend(v1, "addChildViewController:", a1);
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  v5 = objc_msgSend(a1, "view");
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  objc_msgSend(v4, "addSubview:", v5);

  objc_msgSend(a1, "didMoveToParentViewController:", v1);
  v7 = objc_msgSend(a1, "view");
  if (!v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  objc_msgSend(v7, "setAutoresizingMask:", 18);

  v19 = objc_msgSend(a1, "view");
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = objc_msgSend(v1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    objc_msgSend(v19, "setFrame:", v12, v14, v16, v18);
    return;
  }
LABEL_11:
  __break(1u);
}

id sub_100241144()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceViewController);
}

uint64_t type metadata accessor for DOCServiceViewController()
{
  return objc_opt_self(_TtC5Files24DOCServiceViewController);
}

uint64_t sub_1002411C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

uint64_t sub_1002411F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10024121C(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance;
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_lastAppearance] = a1;
  v4 = a1;

  if (v1[OBJC_IVAR____TtC5Files24DOCServiceViewController_shouldOverrideWindowAppearance] == 1)
  {
    v5 = objc_msgSend(v1, "viewIfLoaded");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "window");

      if (v7)
      {
        objc_msgSend(v7, "setAppearance:", *(_QWORD *)&v1[v2]);

      }
    }
  }
  return objc_msgSend(v1, "setAppearance:", *(_QWORD *)&v1[v2]);
}

uint64_t sub_1002412D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100241304()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

void sub_100241340()
{
  uint64_t v0;

  sub_100240918(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(__n128))(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_100241350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_1006475C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100241398(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C((uint64_t *)&unk_1006475C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002413D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id Strong;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(v2 + 24);
  v5 = *(unsigned __int8 *)(v2 + 25);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files24DOCServiceViewController_currentViewController, a2);
  objc_msgSend(Strong, "setEditing:animated:", v4, v5);

}

uint64_t sub_100241430()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100241440()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100241484()
{
  uint64_t v0;

  sub_10023F030(*(void **)(v0 + 16), *(void **)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(void))(v0 + 48));
}

uint64_t sub_100241494()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_1002414D0()
{
  uint64_t v0;

  return sub_10023F4E4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1002414DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100241528(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_preferredIconColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_preferredIconColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_preferredIconColor) = a1;
  v12 = a1;
  if (!v3)
  {
    if (!v5)
    {
      v6 = 0;
      goto LABEL_9;
    }
    v3 = 0;
    goto LABEL_8;
  }
  if (!v5)
  {
LABEL_8:
    v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView);
    v10 = v3;
    v11 = v9;
    sub_1002AE0D0(v3);

    v6 = v12;
    v12 = v11;
    goto LABEL_9;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v6 = v5;
  v7 = v12;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
  {
    v3 = *(void **)(v2 + v4);
    goto LABEL_8;
  }
  v12 = v7;
LABEL_9:

}

void sub_100241620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10008FD24();

  }
}

void sub_100241670(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  id v5;

  v3 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_isShowingContent;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_isShowingContent) = a1;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_delegate, a2);
  swift_unknownObjectRelease(Strong);
  if (Strong)
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_enabled) == 1)
      Strong = *(unsigned __int8 *)(v2 + v3);
    else
      Strong = 0;
  }
  v5 = sub_10008FCA4();
  objc_msgSend(v5, "setEnabled:", Strong);

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_pointerInteraction), "setEnabled:", Strong);
  sub_1000901DC();
}

void sub_1002418C8(char a1)
{
  void *v1;
  void *v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  char *v14;
  uint64_t v15[2];

  v2 = v1;
  if (objc_msgSend(v1, "isHidden") != (a1 & 1))
  {
    _StringGuts.grow(_:)(22);
    strcpy((char *)v15, "isHidden now ");
    HIWORD(v15[1]) = -4864;
    v3 = objc_msgSend(v1, "isHidden", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v4 = v3 == 0;
    if (v3)
      v5 = 1702195828;
    else
      v5 = 0x65736C6166;
    if (v4)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE400000000000000;
    v7 = v6;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease(v6);
    v8._countAndFlagsBits = 0x20726F6620;
    v8._object = (void *)0xE500000000000000;
    String.append(_:)(v8);
    v9 = objc_msgSend(v1, "description");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13._countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v12);
    sub_10008FA28(v15[0], v15[1]);
    swift_bridgeObjectRelease(v15[1]);
    v14 = v2;
    sub_10024342C(v14, (unsigned __int8 *)v14);

  }
}

void sub_100241A34(unsigned __int8 *a1)
{
  id v2;
  unsigned int v3;

  v2 = objc_msgSend(a1, "window");

  if (v2)
  {
    v3 = objc_msgSend(a1, "isHidden");
    if (v3 != a1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled])
      return;
    if ((v3 & 1) == 0)
    {
      sub_100242094();
      return;
    }
  }
  else if ((a1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled] & 1) == 0)
  {
    return;
  }
  sub_10024224C();
}

void sub_100241AB4(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  double v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;

  v3 = v2;
  if ((a2 & 1) != 0)
    *(double *)&a1 = -1.0;
  if (v2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress + 8])
    v5 = -1.0;
  else
    v5 = *(double *)&v2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress];
  v17 = 0;
  v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(42);
  v6._object = (void *)0x800000010051CD50;
  v6._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v6);
  Double.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)&a1);
  v7._countAndFlagsBits = 0x203A77656E202CLL;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  Double.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v5);
  v8 = v18;
  sub_10008FA28(v17, v18);
  swift_bridgeObjectRelease(v8);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_delegate], v9);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "progressIndicatorViewDidChangeCombinedProgress:", v3);
    swift_unknownObjectRelease(v11);
  }
  if (*(double *)&a1 >= 0.0)
  {
    if (v5 < 0.0)
    {
LABEL_18:
      sub_100241DE4();
      return;
    }
  }
  else if (v5 < 0.0 || v5 >= 1.0)
  {
    goto LABEL_18;
  }
  v13 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView;
  if (objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden", v17, v18))
  {
    v14 = v3;
    sub_100242CDC(v14, (uint64_t)v14, v5);

  }
  else
  {
    v15 = *(char **)&v3[v13];
    *(double *)&v15[OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted] = v5;
    v16 = v15;
    sub_1002AE018();

  }
}

id sub_100241C74(uint64_t a1, double a2)
{
  char *v2;
  char *v3;

  v2 = *(char **)(a1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView);
  *(double *)&v2[OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted] = a2;
  v3 = v2;
  sub_1002AE018();

  return sub_100241CC4();
}

id sub_100241CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView;
  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView), "isHidden");
  if ((_DWORD)result)
  {
    sub_100241670(1, v4);
    v5 = *(id *)(v0 + v2);
    v6 = objc_msgSend(v5, "description");
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    v10._countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);

    swift_bridgeObjectRelease(v9);
    sub_10008FA28(0x6E696C6165766572, 0xEB00000000203A67);
    swift_bridgeObjectRelease(0xEB00000000203A67);
    objc_msgSend(*(id *)(v1 + v2), "setHidden:", 0);
    return objc_msgSend(*(id *)(v1 + v2), "setAlpha:", 1.0);
  }
  return result;
}

void sub_100241DE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20[2];
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView;
  if ((objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden") & 1) == 0&& v1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_autohideContentOnCompletion] == 1)
  {
    strcpy((char *)v20, "autohiding: ");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    v3 = *(id *)&v1[v2];
    v4 = objc_msgSend(v3, "description");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    String.append(_:)(v8);

    swift_bridgeObjectRelease(v7);
    sub_10008FA28(v20[0], v20[1]);
    swift_bridgeObjectRelease(v20[1]);
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup];
    swift_retain();
    sub_100242678();
    swift_release(v9);
    sub_100241670(0, v10);
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1005D4940, 24, 7);
    *(_QWORD *)(v12 + 16) = v1;
    v23 = sub_100242F18;
    v24 = v12;
    v20[0] = (uint64_t)_NSConcreteStackBlock;
    v20[1] = 1107296256;
    v21 = sub_10004A82C;
    v22 = &unk_1005D4958;
    v13 = _Block_copy(v20);
    v14 = v24;
    v15 = v1;
    swift_release(v14);
    v16 = swift_allocObject(&unk_1005D4990, 24, 7);
    *(_QWORD *)(v16 + 16) = v15;
    v23 = sub_100242F5C;
    v24 = v16;
    v20[0] = (uint64_t)_NSConcreteStackBlock;
    v20[1] = 1107296256;
    v21 = sub_10016C02C;
    v22 = &unk_1005D49A8;
    v17 = _Block_copy(v20);
    v18 = v24;
    v19 = v15;
    swift_release(v18);
    objc_msgSend(v11, "animateWithDuration:animations:completion:", v13, v17, 0.2);
    _Block_release(v17);
    _Block_release(v13);
  }
}

void sub_100242010(char a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  char *v5;

  if ((a1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView), "setHidden:", 1);
    objc_msgSend(*(id *)(a2 + v3), "setAlpha:", 1.0);
    v4 = *(char **)(a2 + v3);
    *(_QWORD *)&v4[OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted] = 0;
    v5 = v4;
    sub_1002AE018();

  }
}

double sub_100242094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  double (*v8)(uint64_t, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  int v12;
  double result;
  _BYTE v14[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source + 8);
  swift_unknownObjectRetain(v2);
  sub_10008FA28(0xD000000000000012, 0x800000010051CD30);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled) = 1;
  v4 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup);
  swift_retain();
  sub_100242678();
  swift_release(v5);
  ObjectType = swift_getObjectType(v2);
  v7 = swift_allocObject(&unk_1005D48F0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v8 = *(double (**)(uint64_t, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v9 = swift_retain();
  v10.n128_f64[0] = v8(v1, sub_100242F10, v7, ObjectType, v3, v9);
  swift_release_n(v7, 2, v10);
  sub_10008FD24();
  v11 = *(_QWORD *)(v1 + v4);
  swift_beginAccess(v11 + 24, v14, 1, 0);
  v12 = *(unsigned __int8 *)(v11 + 24);
  *(_BYTE *)(v11 + 24) = 1;
  if (v12 == 1)
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  }
  else
  {
    swift_retain();
    sub_10025EB70();
    swift_unknownObjectRelease(v2);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_1002421FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10008FD24();

  }
}

uint64_t sub_10024224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup);
  swift_beginAccess(v2 + 24, v17, 1, 0);
  v3 = *(_BYTE *)(v2 + 24);
  *(_BYTE *)(v2 + 24) = 0;
  if ((v3 & 1) != 0)
  {
    v13 = v2;
    v4 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    swift_retain_n(v2, 2);
    v5 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(v14, &v13, v4, v5, 7);
    v6 = v15;
    v7 = v16;
    sub_10007E7A0(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
    sub_100068588(v14);
    swift_release(v2);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled) = 0;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source + 8);
  ObjectType = swift_getObjectType(v8);
  v11 = *(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v9 + 16);
  swift_unknownObjectRetain(v8);
  v11(v1, 0, 0, ObjectType, v9);
  swift_unknownObjectRelease(v8);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress + 8) & 1) != 0
    || *(double *)(v1 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress) >= 1.0)
  {
    sub_100241DE4();
  }
  return sub_10008FA28(0x6E6976726573626FLL, 0xEF6465646E652067);
}

void sub_1002423C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup);
    v6 = (_BYTE *)(v5 + direct field offset for DOCOperationCombinedProgress.state);
    swift_beginAccess(v5 + direct field offset for DOCOperationCombinedProgress.state, &v7, 0, 0);
    if ((*v6 & 0xFE) == 2)
    {

    }
    else
    {
      swift_retain();
      sub_100242678();

      swift_release(v5);
    }
  }
}

void sub_1002424A4()
{
  uint64_t v0;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_delegate);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView____lazy_storage___didTapGestureRecognizer));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_debugID + 24));

}

id sub_100242534()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100242600(void (*a1)(id))
{
  void *v2;

  v2 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v2, "begin");
  a1(objc_msgSend(v2, "setDisableActions:", 1));
  objc_msgSend(v2, "setDisableActions:", 0);
  return objc_msgSend(v2, "commit");
}

uint64_t sub_100242678()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t result;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  _QWORD *v53;
  int v54;
  _OWORD v55[2];
  uint64_t v56;
  _OWORD v57[3];
  _OWORD v58[2];
  __int128 v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _QWORD *v68;
  char v69[32];

  v1 = (_QWORD *)(v0 + qword_10064BBE0);
  swift_beginAccess(v0 + qword_10064BBE0, v69, 0, 0);
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = _swiftEmptyArrayStorage;
  v53 = v1;
  if (!v3)
  {
LABEL_28:
    v23 = v4[2];
    if (!v23)
      return swift_bridgeObjectRelease(v4);
    v24 = (uint64_t)(v4 + 4);
    swift_bridgeObjectRetain(v4);
    do
    {
      v25 = *v1;
      if (*(_QWORD *)(*v1 + 16))
      {
        swift_bridgeObjectRetain(*v1);
        v26 = sub_100067654(v24);
        if ((v27 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
          swift_retain();
          swift_bridgeObjectRelease(v25);
          *(_BYTE *)(v28 + 25) = 1;
          swift_beginAccess(v28 + 24, v58, 1, 0);
          v29 = *(unsigned __int8 *)(v28 + 24);
          *(_BYTE *)(v28 + 24) = 0;
          if (v29 == 1)
          {
            *(_QWORD *)&v57[0] = v28;
            v30 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
            swift_retain();
            v31 = sub_10006922C((uint64_t *)&unk_100649060);
            swift_dynamicCast(&v60, v57, v30, v31, 7);
            v32 = v62;
            v33 = v63;
            sub_10007E7A0(&v60, v62);
            (*(void (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
            sub_100068588(&v60);
          }
          *(_QWORD *)&v57[0] = v28;
          v34 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
          swift_retain();
          v35 = sub_10006922C((uint64_t *)&unk_100649060);
          swift_dynamicCast(&v60, v57, v34, v35, 7);
          v36 = v62;
          v37 = v63;
          sub_10007E7A0(&v60, v62);
          (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
          sub_100068588(&v60);
          *(_QWORD *)&v57[0] = v28;
          swift_retain();
          swift_dynamicCast(&v60, v57, v34, v35, 7);
          v38 = v62;
          v39 = v63;
          sub_10007E7A0(&v60, v62);
          (*(void (**)(uint64_t, uint64_t))(v39 + 40))(v38, v39);
          sub_100068588(&v60);
          swift_beginAccess(v53, &v60, 33, 0);
          v40 = *v53;
          swift_bridgeObjectRetain(*v53);
          v41 = sub_100067654(v24);
          v43 = v42;
          swift_bridgeObjectRelease(v40);
          v44 = 0;
          if ((v43 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v53);
            v46 = *v53;
            *(_QWORD *)&v57[0] = *v53;
            *v53 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1002E5D1C();
              v46 = *(_QWORD *)&v57[0];
            }
            sub_100067748(*(_QWORD *)(v46 + 48) + 40 * v41);
            v44 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v41);
            sub_1002E3EE4(v41, v46);
            v47 = *v53;
            *v53 = v46;
            swift_bridgeObjectRelease(v47);
          }
          swift_endAccess(&v60);
          swift_release(v44);
          if (*(uint64_t *)(v51 + 32) <= 0)
          {
            v60 = 0;
            v61 = 0xE000000000000000;
            _StringGuts.grow(_:)(37);
            v48._countAndFlagsBits = 0xD000000000000023;
            v48._object = (void *)0x800000010051CD00;
            String.append(_:)(v48);
            *(_QWORD *)&v57[0] = v51;
            _print_unlocked<A, B>(_:_:)(v57, &v60, v34, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            swift_bridgeObjectRelease(v61);
            *(_QWORD *)&v57[0] = v51;
            swift_retain();
            swift_dynamicCast(&v60, v57, v34, v35, 7);
            v49 = v62;
            v50 = v63;
            sub_10007E7A0(&v60, v62);
            LODWORD(v49) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
            sub_100068588(&v60);
            if ((_DWORD)v49)
              sub_10025F05C(1);
          }
          swift_release(v28);
          v1 = v53;
        }
        else
        {
          swift_bridgeObjectRelease(v25);
        }
      }
      v24 += 40;
      --v23;
    }
    while (v23);
    return swift_bridgeObjectRelease_n(v4, 2);
  }
  v68 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v2);
  v52 = v3;
  sub_100154E78(0, v3, 0);
  result = sub_1003754F8(v2);
  if (result < 0)
    goto LABEL_51;
  v7 = result;
  if (result >= 1 << *(_BYTE *)(v2 + 32))
    goto LABEL_51;
  v8 = 0;
  v9 = v2 + 64;
  v54 = v6;
  while (1)
  {
    v10 = v7 >> 6;
    if ((*(_QWORD *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
      break;
    if (*(_DWORD *)(v2 + 36) != v6)
      goto LABEL_47;
    sub_10006777C(*(_QWORD *)(v2 + 48) + 40 * v7, (uint64_t)&v60);
    v64 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v7);
    v11 = v64;
    sub_10006777C((uint64_t)&v60, (uint64_t)v58);
    *((_QWORD *)&v59 + 1) = v11;
    v57[0] = v58[0];
    v57[1] = v58[1];
    v57[2] = v59;
    swift_retain_n(v11, 2);
    sub_10000CB4C((uint64_t)&v60, &qword_100649058);
    sub_10006777C((uint64_t)v57, (uint64_t)v55);
    v65 = v55[0];
    v66 = v55[1];
    v67 = v56;
    sub_10000CB4C((uint64_t)v57, &qword_100649058);
    v4 = v68;
    result = swift_isUniquelyReferenced_nonNull_native(v68);
    if ((result & 1) == 0)
    {
      result = sub_100154E78(0, v4[2] + 1, 1);
      v3 = v52;
      v4 = v68;
    }
    v13 = v4[2];
    v12 = v4[3];
    if (v13 >= v12 >> 1)
    {
      result = sub_100154E78(v12 > 1, v13 + 1, 1);
      v3 = v52;
      v4 = v68;
    }
    v4[2] = v13 + 1;
    v14 = &v4[5 * v13];
    v15 = v65;
    v16 = v66;
    v14[8] = v67;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    v17 = 1 << *(_BYTE *)(v2 + 32);
    if ((uint64_t)v7 >= v17)
      goto LABEL_48;
    v18 = *(_QWORD *)(v9 + 8 * v10);
    if ((v18 & (1 << v7)) == 0)
      goto LABEL_49;
    v6 = v54;
    if (*(_DWORD *)(v2 + 36) != v54)
      goto LABEL_50;
    v19 = v18 & (-2 << (v7 & 0x3F));
    if (v19)
    {
      v7 = __clz(__rbit64(v19)) | v7 & 0xFFFFFFFFFFFFFFC0;
      goto LABEL_23;
    }
    v20 = v10 + 1;
    v21 = (unint64_t)(v17 + 63) >> 6;
    if (v10 + 1 < v21)
    {
      v22 = *(_QWORD *)(v9 + 8 * v20);
      if (v22)
      {
LABEL_21:
        v7 = __clz(__rbit64(v22)) + (v20 << 6);
        goto LABEL_23;
      }
      while (v21 - 2 != v10)
      {
        v22 = *(_QWORD *)(v2 + 80 + 8 * v10++);
        if (v22)
        {
          v20 = v10 + 1;
          goto LABEL_21;
        }
      }
    }
    v7 = 1 << *(_BYTE *)(v2 + 32);
LABEL_23:
    if (++v8 == v3)
    {
      swift_bridgeObjectRelease(v2);
      v1 = v53;
      goto LABEL_28;
    }
    if ((v7 & 0x8000000000000000) != 0 || (uint64_t)v7 >= v17)
      goto LABEL_51;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

id sub_100242CDC(char *a1, uint64_t a2, double a3)
{
  id v6;
  id v7;
  char *v8;
  char *v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[4];
  char v17;
  uint64_t v18;
  double v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v18 = a2;
  v19 = a3;
  v6 = objc_msgSend(a1, "isHidden");
  if ((v6 & 1) != 0
    || (v6 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden"), (_DWORD)v6)|| (v7 = objc_msgSend(a1, "window"), v7, !v7))
  {
    __chkstk_darwin(v6);
    v16[2] = sub_100242F64;
    v16[3] = &v17;
    v11 = objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1005D49E0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100066584;
    *(_QWORD *)(v12 + 24) = v16;
    v13 = swift_allocObject(&unk_1005D4A08, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100242F80;
    *(_QWORD *)(v13 + 24) = v12;
    aBlock[4] = sub_10006657C;
    v21 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005D4A20;
    v14 = _Block_copy(aBlock);
    v15 = v21;
    swift_retain();
    swift_release(v15);
    objc_msgSend((id)v11, "performWithoutAnimation:", v14);
    _Block_release(v14);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v13, "", 131, 406, 40, 1);
    swift_release(v12);
    result = (id)swift_release(v13);
    if ((v11 & 1) != 0)
      __break(1u);
  }
  else
  {
    v8 = *(char **)(a2 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView);
    *(double *)&v8[OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted] = a3;
    v9 = v8;
    sub_1002AE018();

    return sub_100241CC4();
  }
  return result;
}

uint64_t sub_100242EE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100242F08()
{
  uint64_t v0;

  sub_1002423C8(v0);
}

void sub_100242F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002421FC(a1, a2, v2);
}

id sub_100242F18()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView), "setAlpha:", 0.0);
}

uint64_t sub_100242F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100242F5C(char a1)
{
  uint64_t v1;

  sub_100242010(a1, *(_QWORD *)(v1 + 16));
}

id sub_100242F64()
{
  uint64_t v0;

  return sub_100241C74(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100242F70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100242F80()
{
  uint64_t v0;

  return sub_100242600(*(void (**)(id))(v0 + 16));
}

uint64_t sub_100242F88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100242F98()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  uint64_t v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v1 = sub_10006922C((uint64_t *)&unk_1006495C0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIPointerEffect(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for UIPointerShape(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden", v12) & 1) == 0)
  {
    objc_msgSend(v0, "frame");
    v30 = CGRectInset(v29, -8.0, -8.0);
    x = v30.origin.x;
    y = v30.origin.y;
    width = v30.size.width;
    height = v30.size.height;
    v20 = (51.0 - CGRectGetWidth(v30)) * 0.5;
    if (v20 < 0.0)
      v20 = 0.0;
    v21 = -v20;
    v31.origin.x = x;
    v31.origin.y = y;
    v31.size.width = width;
    v31.size.height = height;
    v32 = CGRectInset(v31, v21, 0.0);
    v22 = v32.origin.x;
    v23 = v32.origin.y;
    v24 = v32.size.width;
    v25 = v32.size.height;
    v26 = static UIPointerShape.defaultCornerRadius.getter();
    *(CGFloat *)v14 = v22;
    *((CGFloat *)v14 + 1) = v23;
    *((CGFloat *)v14 + 2) = v24;
    *((CGFloat *)v14 + 3) = v25;
    *((double *)v14 + 4) = v26;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for UIPointerShape.roundedRect(_:), v10);
    sub_10004F2F0(0, (unint64_t *)&unk_100649080, UIPointerStyle_ptr);
    *v9 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for UIPointerEffect.highlight(_:), v5);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v4, v14, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
    v15 = UIPointerStyle.init(effect:shape:)(v9, v4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  return v15;
}

void sub_100243204(char *a1, unsigned __int8 *a2)
{
  id v4;
  id v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[4];
  char v14;
  unsigned __int8 *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v15 = a2;
  v4 = objc_msgSend(a1, "isHidden");
  if ((v4 & 1) != 0
    || (v4 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden"), (_DWORD)v4)|| (v5 = objc_msgSend(a1, "window"), v5, !v5))
  {
    __chkstk_darwin(v4);
    v13[2] = sub_100243674;
    v13[3] = &v14;
    v8 = objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_1005D4AD0, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_10010DF60;
    *(_QWORD *)(v9 + 24) = v13;
    v10 = swift_allocObject(&unk_1005D4AF8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_1002436AC;
    *(_QWORD *)(v10 + 24) = v9;
    aBlock[4] = sub_10010DB64;
    v17 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005D4B10;
    v11 = _Block_copy(aBlock);
    v12 = v17;
    swift_retain();
    objc_msgSend((id)v8, "performWithoutAnimation:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 131, 406, 40, 1);
    swift_release(v9);
    swift_release(v10);
    if ((v8 & 1) != 0)
      __break(1u);
  }
  else
  {
    v6 = objc_msgSend(a2, "window");

    if (v6)
    {
      v7 = objc_msgSend(a2, "isHidden");
      if (v7 == a2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled])
      {
        if ((v7 & 1) == 0)
        {
          sub_100242094();
          return;
        }
        goto LABEL_11;
      }
    }
    else if ((a2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled] & 1) != 0)
    {
LABEL_11:
      sub_10024224C();
    }
  }
}

void sub_10024342C(char *a1, unsigned __int8 *a2)
{
  id v4;
  id v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[4];
  char v14;
  unsigned __int8 *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v15 = a2;
  v4 = objc_msgSend(a1, "isHidden");
  if ((v4 & 1) != 0
    || (v4 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView], "isHidden"), (_DWORD)v4)|| (v5 = objc_msgSend(a1, "window"), v5, !v5))
  {
    __chkstk_darwin(v4);
    v13[2] = sub_1002436C4;
    v13[3] = &v14;
    v8 = objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_1005D4A58, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_10010DF60;
    *(_QWORD *)(v9 + 24) = v13;
    v10 = swift_allocObject(&unk_1005D4A80, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_1002436AC;
    *(_QWORD *)(v10 + 24) = v9;
    aBlock[4] = sub_10010DB64;
    v17 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005D4A98;
    v11 = _Block_copy(aBlock);
    v12 = v17;
    swift_retain();
    objc_msgSend((id)v8, "performWithoutAnimation:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 131, 406, 40, 1);
    swift_release(v9);
    swift_release(v10);
    if ((v8 & 1) != 0)
      __break(1u);
  }
  else
  {
    v6 = objc_msgSend(a2, "window");

    if (v6)
    {
      v7 = objc_msgSend(a2, "isHidden");
      if (v7 == a2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled])
      {
        if ((v7 & 1) == 0)
        {
          sub_100242094();
          return;
        }
        goto LABEL_11;
      }
    }
    else if ((a2[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled] & 1) != 0)
    {
LABEL_11:
      sub_10024224C();
    }
  }
}

uint64_t sub_100243654()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100243664()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100243674()
{
  uint64_t v0;

  sub_100241A34(*(unsigned __int8 **)(v0 + 16));
}

uint64_t sub_10024368C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024369C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002436C8(double a1)
{
  void *v1;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v3 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, a1);
  v4 = objc_msgSend(v3, "CGColor");

  objc_msgSend(v1, "size");
  v6 = v5;
  v8 = v7;
  objc_msgSend(v1, "scale");
  v10 = v9;
  v11 = swift_allocObject(&unk_1005D4B48, 40, 7);
  *(double *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v4;
  *(_QWORD *)(v11 + 32) = v1;
  v17[4] = sub_100243910;
  v18 = v11;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = &unk_1005D4B60;
  v12 = _Block_copy(v17);
  v13 = v18;
  v14 = v4;
  v15 = v1;
  swift_release(v13);
  v16 = (id)_UIGraphicsDrawIntoImageContextWithOptions(0, v12, v6, v8, v10);
  _Block_release(v12);
  if (v16)

  else
    __break(1u);
}

CGContext *sub_100243824(CGColor *a1, id a2, double a3)
{
  CGContext *result;
  CGContext *v6;
  CGSize v7;

  if (a3 <= 0.0)
    return (CGContext *)objc_msgSend(a2, "drawAtPoint:", 0.0, 0.0);
  result = UIGraphicsGetCurrentContext();
  if (result)
  {
    v6 = result;
    v7.width = 0.0;
    v7.height = 0.5;
    CGContextSetShadowWithColor(result, v7, 1.0, a1);

    return (CGContext *)objc_msgSend(a2, "drawAtPoint:", 0.0, 0.0);
  }
  __break(1u);
  return result;
}

id static ISImageDescriptorName.doc_notification.getter()
{
  return kISImageDescriptorNotification;
}

unint64_t sub_1002438A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649090;
  if (!qword_100649090)
  {
    v1 = objc_opt_self(UIImageSymbolConfiguration);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649090);
  }
  return result;
}

uint64_t sub_1002438E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

CGContext *sub_100243910()
{
  uint64_t v0;

  return sub_100243824(*(CGColor **)(v0 + 24), *(id *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_10024391C(uint64_t a1)
{
  return sub_100243954(a1, sub_1002495C4, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
}

uint64_t sub_100243938(uint64_t a1)
{
  return sub_100243954(a1, sub_10007AFBC, (unint64_t *)&qword_100649120, UITouch_ptr);
}

uint64_t sub_100243954(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, _QWORD *a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v7 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.startIndex.getter(v8);
    v11 = v10;
    v12 = __CocoaSet.endIndex.getter(v8);
    v14 = static __CocoaSet.Index.== infix(_:_:)(v9, v11, v12, v13);
    swift_bridgeObjectRelease(v12);
    if ((v14 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = a2(a1);
  if ((v18 & 1) == 0)
  {
    v11 = v17;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v17)
    {
      v9 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_1001D0608(v9, v11, v7 != 0);
        return 0;
      }
LABEL_10:
      sub_100249664(v9, v11, v7 != 0, a1, a3, a4);
      v15 = v19;
      sub_1001D0608(v9, v11, v7 != 0);
      return v15;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100243A78(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  _BOOL4 v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  int v58;
  char *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  id v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  _BYTE *v83;
  unsigned int v84;
  unsigned int (*v85)(char *, uint64_t, uint64_t);
  char v86;
  BOOL v87;
  __n128 v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char *v119;
  uint64_t (*v120)(char *, char *, uint64_t);

  v102 = a3;
  v100 = type metadata accessor for UTType(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v97 = (char *)&v96 - v7;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v104 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v101 = (char *)&v96 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v96 - v14;
  __chkstk_darwin(v16);
  v119 = (char *)&v96 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v96 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v96 - v22;
  v24 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v24);
  v108 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v113 = (char *)&v96 - v27;
  v28 = *(_QWORD *)(a1 + 16);
  v103 = a1;
  if (!v28)
  {
    v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    swift_bridgeObjectRetain(a1);
LABEL_55:
    v90 = v118;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v118)(v113, 1, 1, v8);
    v91 = v102;
LABEL_57:
    v92 = swift_bridgeObjectRelease(v103);
    v90(v91, 1, 1, v8, v92);
LABEL_58:

    return;
  }
  v111 = v20;
  v106 = v15;
  v29 = (char *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
  v115 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  v107 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  v105 = &a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v109 = *(_QWORD *)(v9 + 72);
  v30 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain(a1);
  v116 = v23;
  v117 = a2;
  v31 = v119;
  v110 = v9;
  v120 = v30;
  while (1)
  {
    v32 = v113;
    v30(v113, v29, v8);
    v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v118)(v32, 0, 1, v8);
    v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v114(v32, 1, v8) == 1)
    {
      v91 = v102;
      v90 = v118;
      goto LABEL_57;
    }
    v112 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v112(v23, v32, v8);
    v33 = *(void **)&a2[v115];
    if (!v33)
      break;
    v34 = v29;
    v35 = v28;
    if ((objc_msgSend(v33, "isGathering") & 1) != 0)
    {
      v36 = v111;
      v37 = v23;
      v38 = v23;
      v39 = v120;
      v120(v111, v37, v8);
      v40 = 0;
    }
    else
    {
      v41 = a2[v107];
      v36 = v111;
      v42 = v120(v111, v23, v8);
      if (v41 == 1)
      {
        v43 = IndexPath.item.getter(v42);
        v31 = v119;
        v40 = v43 == 0;
      }
      else
      {
        v40 = 0;
      }
      v39 = v120;
      v38 = v116;
    }
    v44 = *(void (**)(char *, uint64_t))(v9 + 8);
    v44(v36, v8);
    v45 = v39(v31, v38, v8);
    if (v40)
    {
      v46 = IndexPath.section.getter(v45);
      v31 = v119;
      v47 = v46;
      v48 = ((uint64_t (*)(char *, uint64_t))v44)(v119, v8);
      v23 = v116;
      v49 = v35;
      v50 = v34;
      if (!v47)
        goto LABEL_6;
    }
    else
    {
      v48 = ((uint64_t (*)(char *, uint64_t))v44)(v31, v8);
      v23 = v116;
      v49 = v35;
      v50 = v34;
    }
    v51 = IndexPath.count.getter(v48);
    v52 = (uint64_t)v108;
    if (v51 != 2)
    {
LABEL_3:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v118)(v52, 1, 1, v8);
LABEL_4:
      sub_10000CB4C(v52, (uint64_t *)&unk_100642710);
LABEL_5:
      v31 = v119;
      goto LABEL_6;
    }
    v53 = v117;
    v54 = *(void **)&v117[v115];
    if (!v54)
      goto LABEL_62;
    if ((objc_msgSend(v54, "isGathering") & 1) == 0 && (v53[v107] & 1) != 0)
    {
      if ((objc_msgSend(v54, "isGathering") & 1) != 0)
      {
        v55 = v101;
        v56 = (void (*)(char *, char *, uint64_t))v120;
        v120(v101, v23, v8);
        v57 = v104;
LABEL_30:
        v44(v55, v8);
        v56(v57, v23, v8);
LABEL_31:
        v44(v57, v8);
        goto LABEL_32;
      }
      v58 = v53[v107];
      v59 = v101;
      v56 = (void (*)(char *, char *, uint64_t))v120;
      v60 = v120(v101, v23, v8);
      v61 = v58 == 1;
      v55 = v59;
      v57 = v104;
      if (!v61)
        goto LABEL_30;
      v62 = IndexPath.item.getter(v60);
      v57 = v104;
      v63 = v55;
      v64 = v62;
      v44(v63, v8);
      v65 = ((uint64_t (*)(char *, char *, uint64_t))v56)(v57, v23, v8);
      if (v64)
        goto LABEL_31;
      v66 = IndexPath.section.getter(v65);
      v44(v57, v8);
      if (!v66)
        goto LABEL_3;
    }
LABEL_32:
    v120((char *)v52, v23, v8);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v118)(v52, 0, 1, v8);
    if (v114((char *)v52, 1, v8) == 1)
      goto LABEL_4;
    v67 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v106, v52, v8);
    v68 = IndexPath.item.getter(v67);
    v69 = *((_QWORD *)v105 + 1);
    if ((unint64_t)v69 >> 62)
    {
      if (v69 < 0)
        v89 = *((_QWORD *)v105 + 1);
      else
        v89 = v69 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*((_QWORD *)v105 + 1));
      v70 = _CocoaArrayWrapper.endIndex.getter(v89);
      swift_bridgeObjectRelease(v69);
    }
    else
    {
      v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v71 = v68 < v70;
    v72 = (uint64_t)v106;
    if (!v71 || (v73 = v117, (v74 = sub_10017A754((uint64_t)v106, 0)) == 0))
    {
      v44((char *)v72, v8);
      goto LABEL_5;
    }
    v75 = (void *)v74;
    if ((objc_msgSend(v73, "isEditing") & 1) == 0
      && (objc_msgSend(v75, "isCopying") & 1) != 0)
    {
      v93 = swift_unknownObjectRelease(v75);
      ((void (*)(uint64_t, uint64_t, __n128))v44)(v72, v8, v93);
LABEL_60:
      v94 = swift_bridgeObjectRelease(v103);
      v95 = v102;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v112)(v102, v23, v8, v94);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v118)(v95, 0, 1, v8);
      a2 = v117;
      goto LABEL_58;
    }
    v114 = (unsigned int (*)(char *, uint64_t, uint64_t))v75;
    v76 = objc_msgSend(v75, "contentType");
    v77 = v97;
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v76);

    v78 = v98;
    static UTType.folder.getter(v79);
    LOBYTE(v76) = static UTType.== infix(_:_:)(v77, v78);
    v80 = *(void (**)(char *, uint64_t))(v99 + 8);
    v81 = v78;
    v82 = v100;
    v80(v81, v100);
    v80(v77, v82);
    if ((v76 & 1) != 0)
    {
      v83 = v117;
      v84 = objc_msgSend(*(id *)&v117[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments");
      v85 = v114;
      if (v84 && objc_msgSend(v83, "isEditing"))
        v86 = v83[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] ^ 1;
      else
        v86 = 0;
    }
    else
    {
      v86 = 0;
      v85 = v114;
    }
    v87 = sub_10007181C(v85);
    v88 = swift_unknownObjectRelease(v85);
    ((void (*)(char *, uint64_t, __n128))v44)(v106, v8, v88);
    v31 = v119;
    if (v87 && (v86 & 1) == 0)
      goto LABEL_60;
LABEL_6:
    v44(v23, v8);
    v9 = v110;
    v29 = &v50[v109];
    v28 = v49 - 1;
    a2 = v117;
    v30 = v120;
    if (!v28)
      goto LABEL_55;
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

id sub_100244284(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  v4 = __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v15[-v7];
  sub_1000E26E0(a1, (uint64_t)v6);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v8, v6, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    goto LABEL_5;
  }
  result = objc_msgSend(v1, "loadViewIfNeeded");
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v12)
  {
    v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v13, v16, 0, 0);
    sub_1000E26E0(v13, (uint64_t)v8);
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
LABEL_5:
    v14 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
    swift_beginAccess(v14, v15, 33, 0);
    sub_1000B33AC((uint64_t)v8, v14);
    return (id)swift_endAccess(v15);
  }
  __break(1u);
  return result;
}

id DOCItemCollectionViewController.isInKeyWindow.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, "viewIfLoaded");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "window");

    if (v3)
    {
      v2 = objc_msgSend(v3, "isKeyWindow");

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void DOCItemCollectionViewController.absoluteFrame.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;

  objc_msgSend(v0, "loadViewIfNeeded");
  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = objc_msgSend(v2, "superview");
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  objc_msgSend(v0, "loadViewIfNeeded");
  v5 = *(void **)&v0[v1];
  if (v5)
  {
    objc_msgSend(v5, "frame");
    objc_msgSend(v4, "convertRect:toView:", 0);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10024465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus) = 0;
  v6 = objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "firstItemInsertionRequestsFocusExpired", 0);
  v7 = Logger.UI.unsafeMutableAddressor(v6);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Action for firstItemInsertionRequestsFocusExpired expired", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1002447C4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *Strong;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  char v24[24];

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  v5 = __chkstk_darwin(v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(v1, "loadViewIfNeeded", v5);
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v8)
  {
    __break(1u);
    return;
  }
  v9 = v8;
  sub_1001880A0();

  v10 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v24, 0, 0);
  if (*(_QWORD *)v10 == 2 && (a1 & 1) != 0)
  {
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    if ((unint64_t)v11 >> 62)
    {
      if (v11 < 0)
        v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
      else
        v21 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController
                                            + 8]);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v11);
      if (v22 >= 1)
      {
LABEL_6:
        DOCItemCollectionViewController.getCurrentLocation()();
        if (v12)
        {
          v13 = v12;
          v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
          if (v14)
          {
            Strong = (void *)swift_unknownObjectWeakLoadStrong(v14 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser);
            if (Strong)
            {
              v16 = Strong;
              v17 = objc_msgSend(Strong, "hierarchyController");
              sub_1001DBC98(v13, 1, 0, 0);

            }
          }

        }
      }
    }
    else if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
      goto LABEL_6;
    }
  }
  v18 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], v23, 33, 0);
  sub_1000B33AC((uint64_t)v7, v19);
  swift_endAccess(v23);
  if (*(_QWORD *)v10 != 2)
  {
    v20 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
    objc_msgSend(v20, "requestCurrentFocus:", v2);

  }
}

uint64_t sub_100244A10()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  double Width;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  _QWORD v11[15];
  CGRect v12;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(v2, &v10, 0, 0);
  if (*(_QWORD *)v2)
    return 1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (!v4)
    return 1;
  swift_retain();
  sub_10009DED4((uint64_t)v11);
  objc_msgSend(v1, "loadViewIfNeeded", swift_release(v4).n128_f64[0]);
  result = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
    goto LABEL_12;
  objc_msgSend((id)result, "frame");
  Width = CGRectGetWidth(v12);
  v6 = *(double *)v11;
  objc_msgSend((id)v11[3], "spacing");
  v8 = v7;
  result = sub_1001D0668((uint64_t)v11);
  v9 = Width / (v6 + v8);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) != 0)
  {
    if (v9 > -9.22337204e18)
    {
      if (v9 < 9.22337204e18)
        return (uint64_t)v9;
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100244B48(uint64_t a1)
{
  char *v1;
  uint64_t result;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  objc_msgSend(v1, "loadViewIfNeeded");
  result = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
    goto LABEL_17;
  v4 = (double)(uint64_t)objc_msgSend((id)result, "numberOfItemsInSection:", a1);
  result = sub_100244A10();
  v5 = ceil(v4 / (double)result);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = (uint64_t)v5;
  result = sub_100244A10();
  v7 = v6 * result;
  if ((unsigned __int128)(v6 * (__int128)result) >> 64 != (v6 * result) >> 63)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (objc_msgSend(v8, "maximumNumberOfRows") == (id)0x7FFFFFFFFFFFFFFFLL)
    return v7;
  v9 = (uint64_t)objc_msgSend(v8, "maximumNumberOfRows");
  result = sub_100244A10();
  if ((unsigned __int128)(v9 * (__int128)result) >> 64 != (v9 * result) >> 63)
    goto LABEL_16;
  if (v9 * result >= v7)
    return v7;
  result *= v9;
  return result;
}

id sub_100244C7C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;

  v46 = a3;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v44 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v43 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v45 = (char *)&v42 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v42 - v17;
  sub_100244FA8(a1, a2, 0);
  v20 = v19;
  v21 = v3;
  sub_100243A78(v20, v21, (uint64_t)v10);
  v22 = swift_bridgeObjectRelease(v20);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  if (v23(v10, 1, v11, v22) != 1)
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v29(v18, v10, v11);
    v30 = v46;
    v29(v46, v18, v11);
    v31 = 0;
    v32 = v30;
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v32, v31, 1, v11);
  }
  v24 = sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
  v25 = IndexPath.item.getter(v24);
  if (v25 < IndexPath.item.getter(v25))
  {
    v26 = (uint64_t)v45;
    v27 = 0;
    v28 = 0;
    goto LABEL_10;
  }
  objc_msgSend(v21, "loadViewIfNeeded");
  v33 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(id *)&v21[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  v26 = (uint64_t)v45;
  if (!result)
    goto LABEL_16;
  result = objc_msgSend(result, "numberOfSections");
  v35 = (uint64_t)result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v21, "loadViewIfNeeded");
  result = *(id *)&v21[v33];
  if (result)
  {
    result = objc_msgSend(result, "numberOfItemsInSection:", v35 & ~(v35 >> 63));
    if (!__OFSUB__(result, 1))
    {
      v27 = ((uint64_t)result - 1) & ~(((uint64_t)result - 1) >> 63);
      v28 = v35 & ~(v35 >> 63);
LABEL_10:
      IndexPath.init(item:section:)(v27, v28);
      v36 = (uint64_t)v44;
      sub_100244FA8(a1, v26, 1);
      v38 = v37;
      sub_100243A78(v37, v21, v36);
      v39 = swift_bridgeObjectRelease(v38);
      (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v26, v11, v39);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v23)(v36, 1, v11) == 1)
      {
        sub_10000CB4C(v36, (uint64_t *)&unk_100642710);
        v31 = 1;
        v32 = v46;
      }
      else
      {
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
        v41 = v43;
        v40(v43, v36, v11);
        v32 = v46;
        v40(v46, (uint64_t)v41, v11);
        v31 = 0;
      }
      return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v32, v31, 1, v11);
    }
    goto LABEL_15;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_100244FA8(char *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  char *v75;
  BOOL v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  _BOOL4 v90;
  char *v91;
  void *v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  char *v112;
  int v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  int v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;

  v117 = type metadata accessor for IndexPath(0);
  v128 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v114 = (char *)&v112 - v9;
  __chkstk_darwin(v10);
  v115 = (char *)&v112 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v112 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v112 - v16;
  __chkstk_darwin(v18);
  v125 = (char *)&v112 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v112 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v112 - v24;
  v27 = IndexPath.section.getter(v26);
  v28 = IndexPath.section.getter(v27);
  if (v27 == v28)
  {
    v29 = IndexPath.item.getter(v28);
    v30 = IndexPath.item.getter(v29);
    if (v30 < v29)
      v31 = -1;
    else
      v31 = 1;
    v32 = IndexPath.item.getter(v30);
    v33 = IndexPath.item.getter(v32);
    if ((a3 & 1) != 0)
      v34 = v31;
    else
      v34 = 0;
    if (!__OFADD__(v33, v34))
    {
      __chkstk_darwin(v33);
      *(&v112 - 2) = a1;
      sub_1002492F0((void (*)(int64_t *))sub_10024B0F0, (uint64_t)(&v112 - 4), v32, v35, v31);
      return;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v112 = v7;
  v129 = _swiftEmptyArrayStorage;
  v36 = static IndexPath.> infix(_:_:)(a1, a2);
  v126 = v36;
  v113 = a3;
  v116 = a2;
  if ((v36 & 1) != 0)
  {
    v37 = IndexPath.section.getter(v36);
    v38 = IndexPath.init(item:section:)(0, v37);
    v39 = IndexPath.item.getter(v38);
    v40 = IndexPath.item.getter(v39);
    if (v40 < v39)
      v41 = -1;
    else
      v41 = 1;
    v42 = IndexPath.item.getter(v40);
    v43 = IndexPath.item.getter(v42);
    if (__OFADD__(v43, v41))
      goto LABEL_73;
    __chkstk_darwin(v43);
    *(&v112 - 2) = a1;
    v45 = sub_1002492F0((void (*)(int64_t *))sub_10024B0F0, (uint64_t)(&v112 - 4), v42, v44, v41);
    v124 = *(void (**)(char *, uint64_t))(v128 + 8);
    v124(v22, v117);
    v46 = -1;
  }
  else
  {
    v47 = v127;
    objc_msgSend(v127, "loadViewIfNeeded");
    v48 = *(void **)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v48)
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    v49 = v48;
    v50 = (char *)objc_msgSend(v49, "numberOfItemsInSection:", IndexPath.section.getter(v49));

    if (__OFSUB__(v50, 1))
      goto LABEL_74;
    v52 = IndexPath.section.getter(v51);
    v53 = IndexPath.init(item:section:)(v50 - 1, v52);
    v54 = IndexPath.item.getter(v53);
    v55 = IndexPath.item.getter(v54);
    if (v55 < v54)
      v56 = -1;
    else
      v56 = 1;
    v57 = IndexPath.item.getter(v55);
    v58 = IndexPath.item.getter(v57);
    if (__OFADD__(v58, v56))
      goto LABEL_75;
    __chkstk_darwin(v58);
    *(&v112 - 2) = a1;
    v45 = sub_1002492F0((void (*)(int64_t *))sub_10024B0F0, (uint64_t)(&v112 - 4), v57, v59, v56);
    v124 = *(void (**)(char *, uint64_t))(v128 + 8);
    v124(v25, v117);
    v46 = 1;
  }
  v60 = sub_10012FF8C(v45);
  v61 = IndexPath.section.getter(v60);
  v62 = v61 + v46;
  if (__OFADD__(v61, v46))
    goto LABEL_71;
  v63 = IndexPath.section.getter(v61);
  v64 = v63 - v46;
  if (__OFSUB__(v63, v46))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v123 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v65 = v64 >= v62;
  if ((v126 & 1) == 0)
    v65 = v62 >= v64;
  if (!v65)
  {
    v66 = 0x8000000000000000;
    if ((v126 & 1) == 0)
      v66 = 0x7FFFFFFFFFFFFFFFLL;
    v121 = v14;
    v122 = v66;
    v67 = v17;
    if ((v126 & 1) != 0)
      v68 = v17;
    else
      v68 = v125;
    if ((v126 & 1) != 0)
      v69 = v125;
    else
      v69 = v17;
    v119 = v69;
    v120 = v68;
    v70 = v115;
    v71 = v117;
    v118 = v46;
    do
    {
      v72 = __OFADD__(v62, v46) ? v122 : v62 + v46;
      IndexPath.init(item:section:)(0, v62);
      v73 = v127;
      objc_msgSend(v127, "loadViewIfNeeded");
      v74 = *(void **)&v73[v123];
      if (!v74)
        goto LABEL_79;
      v75 = (char *)objc_msgSend(v74, "numberOfItemsInSection:", v62);
      v76 = __OFSUB__(v75, 1);
      v77 = v75 - 1;
      if (v76)
      {
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      v78 = v64;
      IndexPath.init(item:section:)(v77, v62);
      v79 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
      v80 = v121;
      v79(v121, v120, v71);
      v81 = ((uint64_t (*)(char *, char *, uint64_t))v79)(v70, v119, v71);
      v82 = IndexPath.item.getter(v81);
      v83 = IndexPath.item.getter(v82);
      if (v83 < v82)
        v84 = -1;
      else
        v84 = 1;
      v85 = IndexPath.item.getter(v83);
      v86 = IndexPath.item.getter(v85);
      if (__OFADD__(v86, v84))
        goto LABEL_69;
      __chkstk_darwin(v86);
      *(&v112 - 2) = v80;
      v88 = sub_1002492F0((void (*)(int64_t *))sub_10024B0F0, (uint64_t)(&v112 - 4), v85, v87, v84);
      sub_10012FF8C(v88);
      v89 = v124;
      v124(v70, v71);
      v89(v80, v71);
      v89(v67, v71);
      v63 = ((uint64_t (*)(char *, uint64_t))v89)(v125, v71);
      v64 = v78;
      v90 = v78 >= v72;
      if ((v126 & 1) == 0)
        v90 = v72 >= v78;
      v62 = v72;
      v46 = v118;
    }
    while (!v90);
  }
  if ((v126 & 1) == 0)
  {
    v105 = IndexPath.section.getter(v63);
    v97 = v114;
    v106 = IndexPath.init(item:section:)(0, v105);
    v107 = IndexPath.item.getter(v106);
    v108 = IndexPath.item.getter(v107);
    if (v108 < v107)
      v101 = -1;
    else
      v101 = 1;
    v102 = IndexPath.item.getter(v108);
    v103 = IndexPath.item.getter(v102);
    if ((v113 & 1) != 0)
      v109 = v101;
    else
      v109 = 0;
    if (__OFADD__(v103, v109))
      goto LABEL_77;
    goto LABEL_67;
  }
  v91 = v127;
  objc_msgSend(v127, "loadViewIfNeeded");
  v92 = *(void **)&v91[v123];
  if (v92)
  {
    v93 = v92;
    v94 = (char *)objc_msgSend(v93, "numberOfItemsInSection:", IndexPath.section.getter(v93));

    if (__OFSUB__(v94, 1))
    {
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v96 = IndexPath.section.getter(v95);
    v97 = v112;
    v98 = IndexPath.init(item:section:)(v94 - 1, v96);
    v99 = IndexPath.item.getter(v98);
    v100 = IndexPath.item.getter(v99);
    if (v100 < v99)
      v101 = -1;
    else
      v101 = 1;
    v102 = IndexPath.item.getter(v100);
    v103 = IndexPath.item.getter(v102);
    if ((v113 & 1) != 0)
      v104 = v101;
    else
      v104 = 0;
    if (__OFADD__(v103, v104))
      goto LABEL_78;
LABEL_67:
    __chkstk_darwin(v103);
    *(&v112 - 2) = v97;
    v111 = sub_1002492F0((void (*)(int64_t *))sub_10024B0F0, (uint64_t)(&v112 - 4), v102, v110, v101);
    v124(v97, v117);
    sub_10012FF8C(v111);
    return;
  }
LABEL_81:
  __break(1u);
}

char *sub_1002457B8@<X0>(void *a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, char *a4@<X8>)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  id v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _BYTE v64[32];
  char v65[24];

  v62 = a2;
  v63 = a4;
  v58 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v59 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v60 = (char *)&v57 - v10;
  __chkstk_darwin(v11);
  v61 = (char *)&v57 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - v14;
  v16 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v57 - v18;
  v22.n128_f64[0] = __chkstk_darwin(v20);
  v24 = (char *)&v57 - v23;
  v25 = v4;
  v26 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v55 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    else
      v55 = v26 & 0xFFFFFFFFFFFFFF8;
    v56 = v21;
    swift_bridgeObjectRetain(v26);
    v27 = _CocoaArrayWrapper.endIndex.getter(v55);
    v22 = swift_bridgeObjectRelease(v26);
    v21 = v56;
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v27 < 1)
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v63, 1, 1, v6, v22);
  if ((a3 & 1) == 0)
  {
    v28 = v21;
    v29 = (uint64_t)&v25[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
    swift_beginAccess(&v25[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], v65, 0, 0);
    sub_1000E26E0(v29, (uint64_t)v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v24, 1, v6) != 1)
    {
      v39 = v63;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v63, v24, v6);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v40(v19, 1, 1, v6);
      swift_beginAccess(v29, v64, 33, 0);
      sub_1000B33AC((uint64_t)v19, v29);
      swift_endAccess(v64);
      return (char *)((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v40)(v39, 0, 1, v6);
    }
    sub_10000CB4C((uint64_t)v24, (uint64_t *)&unk_100642710);
    v21 = v28;
  }
  if (v62 == 1)
  {
    v41 = sub_10001B43C();
    v42 = objc_msgSend(v41, "configuration");

    v43 = objc_msgSend(v42, "scrollDirection");
    if (v43 == (id)1)
    {
      v44 = v60;
      IndexPath.init(row:section:)(0, 0);
      v45 = (uint64_t)v59;
      IndexPath.init(item:section:)(0, 0);
      sub_100244C7C(v44, v45, v63);
      v46 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v46(v45, v6);
      return (char *)((uint64_t (*)(char *, uint64_t))v46)(v44, v6);
    }
    v47 = v58;
    result = (char *)objc_msgSend(v58, "numberOfSections");
    if (!__OFSUB__(result, 1))
    {
      v48 = (unint64_t)(result - 1) & ~((uint64_t)(result - 1) >> 63);
      v49 = sub_100244B48(v48);
      v50 = (char *)objc_msgSend(v47, "numberOfItemsInSection:", v48);
      if ((uint64_t)v50 >= v49)
        v51 = (char *)v49;
      else
        v51 = v50;
      result = v51 - 1;
      if (!__OFSUB__(v51, 1))
      {
        v52 = v60;
        IndexPath.init(row:section:)(result, v48);
        v53 = (uint64_t)v59;
        IndexPath.init(item:section:)(0, 0);
        sub_100244C7C(v52, v53, v63);
        v54 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v54(v53, v6);
        return (char *)((uint64_t (*)(char *, uint64_t))v54)(v52, v6);
      }
      goto LABEL_33;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v62 != 4 && v62 != 2)
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v63, 1, 1, v6, v22);
  v30 = v21;
  IndexPath.init(item:section:)(0, 0);
  objc_msgSend(v25, "loadViewIfNeeded");
  v31 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(char **)&v25[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  result = (char *)objc_msgSend(result, "numberOfSections");
  v33 = (uint64_t)(result - 1);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v25, "loadViewIfNeeded");
  result = *(char **)&v25[v31];
  if (result)
  {
    v34 = v33 & ~(v33 >> 63);
    result = (char *)objc_msgSend(result, "numberOfItemsInSection:", v34);
    if (!__OFSUB__(result, 1))
    {
      v35 = (uint64_t)v61;
      IndexPath.init(item:section:)((unint64_t)(result - 1) & ~((uint64_t)(result - 1) >> 63), v34);
      sub_100244FA8(v15, v35, 1);
      v37 = v36;
      v38 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v38(v35, v6);
      v38((uint64_t)v15, v6);
      sub_100243A78(v37, v25, v30);
      swift_bridgeObjectRelease(v37);
      return (char *)sub_100070EDC(v30, (uint64_t)v63, (uint64_t *)&unk_100642710);
    }
    goto LABEL_31;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100245D10@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, char *a5@<X8>)
{
  char *v5;
  uint64_t v9;
  void (**v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (**v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (**v70)(char *, uint64_t, uint64_t);
  int v71;
  char **v72;
  uint64_t v73;
  id v74;
  char *v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  __n128 v144;
  unint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  __n128 v154;
  void (*v155)(char *, uint64_t, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  BOOL v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t (*v220)(uint64_t, uint64_t, uint64_t);
  int v221;
  char *v222;
  uint64_t v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  id v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  id v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char **v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  void (**v261)(char *, uint64_t, uint64_t);
  char v262[32];

  v258 = a3;
  v259 = a5;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(void (***)(char *, uint64_t, uint64_t))(v9 - 8);
  v260 = v9;
  v261 = v10;
  __chkstk_darwin(v9);
  v248 = (char *)&v242 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v252 = (char *)&v242 - v13;
  __chkstk_darwin(v14);
  v251 = (char *)&v242 - v15;
  __chkstk_darwin(v16);
  v247 = (char *)&v242 - v17;
  __chkstk_darwin(v18);
  v244 = (char *)&v242 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v242 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v242 - v24;
  v26 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v26);
  v254 = (char *)&v242 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v256 = (uint64_t)&v242 - v29;
  __chkstk_darwin(v30);
  v245 = (char *)&v242 - v31;
  __chkstk_darwin(v32);
  v249 = (char *)&v242 - v33;
  __chkstk_darwin(v34);
  v246 = (char *)&v242 - v35;
  __chkstk_darwin(v36);
  v250 = (char *)&v242 - v37;
  __chkstk_darwin(v38);
  v242 = (char *)&v242 - v39;
  __chkstk_darwin(v40);
  v243 = (char *)&v242 - v41;
  __chkstk_darwin(v42);
  v44 = (char *)&v242 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v242 - v46;
  __chkstk_darwin(v48);
  v50 = (char *)&v242 - v49;
  __chkstk_darwin(v51);
  v53 = (char *)&v242 - v52;
  __chkstk_darwin(v54);
  v257 = (char **)((char *)&v242 - v55);
  if ((a4 & 1) != 0 && (sub_100191290(a2) & 1) != 0)
  {
    v56 = v261;
    v57 = v259;
    v58 = a2;
    v59 = v260;
    v261[2](v259, v58, v260);
    return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v56[7])(v57, 0, 1, v59);
  }
  v253 = a1;
  v61 = v5;
  v62 = a2;
  v63 = &v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  v65 = swift_beginAccess(v63, v262, 0, 0);
  v66 = *(_QWORD *)v63 - 1;
  v67 = *(_QWORD *)v63 != 1;
  v255 = v61;
  if (v66 != 1 && v67)
  {
    v68 = a2;
    v73 = IndexPath.section.getter(v64);
    v72 = &selRef_viewOptionsRoot;
    v74 = v253;
    v75 = (char *)objc_msgSend(v253, "numberOfItemsInSection:", v73);
    v76 = sub_10001B43C();
    v77 = objc_msgSend(v76, "configuration");

    v78 = objc_msgSend(v77, "scrollDirection");
    v80 = v260;
    v81 = (char *)v261;
    switch(v258)
    {
      case 1:
        if (v78 == (id)1)
          goto LABEL_48;
        v82 = IndexPath.section.getter(v79);
        if ((v82 & 0x8000000000000000) == 0)
        {
          v83 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
          v84 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
          if (v82 < *(_QWORD *)(v84 + 16))
          {
            v85 = (_QWORD *)(v84 + 40 * v82);
            v86 = v85[5];
            v87 = v85[7];
            v88 = v85[8];
            swift_bridgeObjectRetain(v86);
            swift_bridgeObjectRetain(v87);
            swift_retain();
            v90 = sub_1001BD99C(v89);
            v91 = v88;
            v80 = v260;
            swift_release(v91);
            v92 = v87;
            v61 = v255;
            swift_bridgeObjectRelease(v92);
            swift_bridgeObjectRelease(v86);
            if ((v90 & 1) != 0)
            {
              v93 = IndexPath.section.getter(v82);
              if (v93 >= 1)
              {
                v94 = IndexPath.section.getter(v93);
                if (!__OFSUB__(v94, 1))
                {
                  v95 = objc_msgSend(v253, "numberOfItemsInSection:", v94 - 1);
                  v96 = IndexPath.section.getter(v95);
                  v97 = v96 - 1;
                  if (!__OFSUB__(v96, 1))
                  {
                    v72 = v257;
                    if ((v97 & 0x8000000000000000) == 0)
                    {
                      v98 = *(_QWORD *)&v61[v83];
                      if (v97 < *(_QWORD *)(v98 + 16))
                      {
                        v99 = (_QWORD *)(v98 + 40 * v97);
                        v100 = v99[5];
                        v101 = v99[7];
                        v102 = v99[8];
                        swift_bridgeObjectRetain(v100);
                        swift_bridgeObjectRetain(v101);
                        swift_retain();
                        v104 = sub_1001BD99C(v103);
                        swift_release(v102);
                        v105 = v101;
                        v80 = v260;
                        swift_bridgeObjectRelease(v105);
                        swift_bridgeObjectRelease(v100);
                        if ((v104 & 1) != 0)
                        {
                          v107 = 0;
                          v81 = (char *)v261;
LABEL_156:
                          v241 = IndexPath.section.getter(v106);
                          v175 = v241 - 1;
                          if (!__OFSUB__(v241, 1))
                            goto LABEL_104;
                          __break(1u);
                          goto LABEL_159;
                        }
                      }
                    }
                    v198 = __OFSUB__(v95, 1);
                    v240 = (uint64_t)v95 - 1;
                    if (!v198)
                    {
                      v106 = sub_100244A10();
                      if (v106)
                      {
                        v81 = (char *)v261;
                        if (v240 == 0x8000000000000000 && v106 == -1)
                          goto LABEL_199;
                        v198 = __OFSUB__(v240, v240 % v106);
                        v107 = (char *)(v240 - v240 % v106);
                        if (!v198)
                          goto LABEL_156;
                        goto LABEL_195;
                      }
LABEL_194:
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
                      goto LABEL_200;
                    }
LABEL_193:
                    __break(1u);
                    goto LABEL_194;
                  }
LABEL_192:
                  __break(1u);
                  goto LABEL_193;
                }
LABEL_191:
                __break(1u);
                goto LABEL_192;
              }
              v81 = (char *)v261;
LABEL_48:
              v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
              v72 = v257;
              ((void (*)(char **, uint64_t, uint64_t, uint64_t))v108)(v257, 1, 1, v80);
              goto LABEL_121;
            }
          }
        }
        v157 = IndexPath.item.getter(v82);
        v158 = sub_100244A10();
        if (v157 >= v158)
        {
          v196 = IndexPath.item.getter(v158);
          v197 = sub_100244A10();
          v198 = __OFSUB__(v196, v197);
          v107 = (char *)(v196 - v197);
          v81 = (char *)v261;
          if (!v198)
          {
            v175 = IndexPath.section.getter(v197);
            v72 = v257;
LABEL_104:
            v199 = (uint64_t)v107;
LABEL_105:
            IndexPath.init(item:section:)(v199, v175);
            v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
            ((void (*)(char **, _QWORD, uint64_t, uint64_t))v108)(v72, 0, 1, v80);
            goto LABEL_121;
          }
          goto LABEL_169;
        }
        v159 = IndexPath.section.getter(v158);
        v81 = (char *)v261;
        v160 = v244;
        v161 = ((uint64_t (*)(char *, uint64_t, uint64_t))v261[2])(v244, v68, v80);
        if (v159 < 1)
        {
          (*((void (**)(char *, uint64_t))v81 + 1))(v160, v80);
          goto LABEL_48;
        }
        v162 = IndexPath.section.getter(v161);
        if (__OFSUB__(v162, 1))
          goto LABEL_175;
        v74 = v253;
        v163 = objc_msgSend(v253, "numberOfItemsInSection:", v162 - 1);
        v164 = (*((uint64_t (**)(char *, uint64_t))v81 + 1))(v160, v80);
        if ((uint64_t)v163 <= 0)
          goto LABEL_48;
        v165 = IndexPath.section.getter(v164);
        v166 = v165 - 1;
        if (__OFSUB__(v165, 1))
          goto LABEL_178;
        if ((v166 & 0x8000000000000000) != 0)
          goto LABEL_129;
        v167 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
        if (v166 >= *(_QWORD *)(v167 + 16))
          goto LABEL_129;
        v168 = (_QWORD *)(v167 + 40 * v166);
        v169 = v168[5];
        v170 = v168[7];
        v171 = v168[8];
        swift_bridgeObjectRetain(v169);
        swift_bridgeObjectRetain(v170);
        swift_retain();
        v173 = sub_1001BD99C(v172);
        v174 = v171;
        v80 = v260;
        swift_release(v174);
        swift_bridgeObjectRelease(v170);
        swift_bridgeObjectRelease(v169);
        if ((v173 & 1) == 0)
        {
LABEL_129:
          v223 = IndexPath.section.getter(v165);
          if (!__OFSUB__(v223, 1))
          {
            v224 = objc_msgSend(v74, "numberOfItemsInSection:", v223 - 1);
            v225 = (uint64_t)v224 - 1;
            if (!__OFSUB__(v224, 1))
            {
              v226 = sub_100244A10();
              v72 = v257;
              if (v226)
              {
                if (v225 == 0x8000000000000000 && v226 == -1)
                  goto LABEL_197;
                v227 = v225 - v225 % v226;
                if (!__OFSUB__(v225, v225 % v226))
                {
                  v228 = IndexPath.item.getter(v226);
                  v198 = __OFADD__(v227, v228);
                  v229 = v227 + v228;
                  if (!v198)
                  {
                    v230 = IndexPath.section.getter(v228);
                    v175 = v230 - 1;
                    if (!__OFSUB__(v230, 1))
                    {
                      if (v225 >= v229)
                        v199 = v229;
                      else
                        v199 = v225;
                      goto LABEL_105;
                    }
                    goto LABEL_185;
                  }
LABEL_184:
                  __break(1u);
LABEL_185:
                  __break(1u);
                  goto LABEL_186;
                }
LABEL_183:
                __break(1u);
                goto LABEL_184;
              }
LABEL_182:
              __break(1u);
              goto LABEL_183;
            }
LABEL_181:
            __break(1u);
            goto LABEL_182;
          }
LABEL_180:
          __break(1u);
          goto LABEL_181;
        }
        v120 = IndexPath.section.getter(v165);
        v175 = v120 - 1;
        if (!__OFSUB__(v120, 1))
          goto LABEL_115;
        __break(1u);
        goto LABEL_73;
      case 2:
        goto LABEL_39;
      case 3:
        v109 = v251;
        v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v261[2])(v251, v68, v260);
        if (v78 == (id)1)
        {
          v111 = (*((uint64_t (**)(char *, uint64_t))v81 + 1))(v109, v80);
          v72 = v257;
          goto LABEL_26;
        }
        v136 = IndexPath.section.getter(v110);
        v72 = v257;
        if ((v136 & 0x8000000000000000) != 0
          || (v137 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController],
              v136 >= *(_QWORD *)(v137 + 16)))
        {
          v111 = (*((uint64_t (**)(char *, uint64_t))v81 + 1))(v109, v80);
        }
        else
        {
          v138 = (_QWORD *)(v137 + 40 * v136);
          v139 = v138[5];
          v140 = v138[7];
          v74 = (id)v138[8];
          swift_bridgeObjectRetain(v139);
          swift_bridgeObjectRetain(v140);
          swift_retain();
          v142 = sub_1001BD99C(v141);
          v81 = (char *)v261;
          swift_release(v74);
          v143 = v140;
          v80 = v260;
          swift_bridgeObjectRelease(v143);
          v144 = swift_bridgeObjectRelease(v139);
          v111 = (*((uint64_t (**)(char *, uint64_t, __n128))v81 + 1))(v109, v80, v144);
          if ((v142 & 1) != 0)
          {
LABEL_26:
            v112 = IndexPath.item.getter(v111);
            if (v112 < 1)
            {
              v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
              v61 = v250;
LABEL_118:
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v108)(v61, 1, 1, v80);
              goto LABEL_119;
            }
            v113 = IndexPath.item.getter(v112);
            v61 = v250;
            if (v113 >= 1)
            {
              v78 = (id)v68;
              v79 = IndexPath.item.getter(v113);
              v114 = v79 - 1;
              if (!__OFSUB__(v79, 1))
              {
LABEL_100:
                v195 = IndexPath.section.getter(v79);
                IndexPath.init(item:section:)(v114, v195);
                v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v108)(v61, 0, 1, v80);
LABEL_119:
                v218 = (uint64_t)v61;
LABEL_120:
                sub_100070EDC(v218, (uint64_t)v72, (uint64_t *)&unk_100642710);
                goto LABEL_121;
              }
              __break(1u);
LABEL_31:
              v115 = v81;
              v74 = (id)*((_QWORD *)v81 + 2);
              v81 = v252;
              v116 = ((uint64_t (*)(char *, uint64_t, uint64_t))v74)(v252, v68, v80);
              if (v78 == (id)1)
              {
                v117 = (*((uint64_t (**)(char *, uint64_t))v115 + 1))(v81, v80);
                v72 = v257;
                goto LABEL_33;
              }
              v145 = IndexPath.section.getter(v116);
              v72 = v257;
              if ((v145 & 0x8000000000000000) == 0)
              {
                v146 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
                if (v145 < *(_QWORD *)(v146 + 16))
                {
                  v147 = (_QWORD *)(v146 + 40 * v145);
                  v148 = v147[5];
                  v149 = v147[7];
                  v150 = v147[8];
                  swift_bridgeObjectRetain(v148);
                  swift_bridgeObjectRetain(v149);
                  swift_retain();
                  v152 = sub_1001BD99C(v151);
                  v153 = v150;
                  v80 = v260;
                  swift_release(v153);
                  swift_bridgeObjectRelease(v149);
                  v154 = swift_bridgeObjectRelease(v148);
                  v155 = v261[1];
                  v117 = ((uint64_t (*)(char *, uint64_t, __n128))v155)(v81, v80, v154);
                  v156 = v248;
                  if ((v152 & 1) != 0)
                  {
LABEL_33:
                    v118 = IndexPath.item.getter(v117);
                    if (__OFADD__(v118, 1))
                    {
                      __break(1u);
LABEL_164:
                      __break(1u);
                      goto LABEL_165;
                    }
                    v81 = (char *)v261;
                    v61 = v249;
                    if (v118 + 1 < (uint64_t)v75)
                    {
                      v119 = IndexPath.item.getter(v118);
                      if (v119 <= 0x7FFFFFFFFFFFFFFDLL)
                      {
                        v78 = (id)v68;
                        v79 = IndexPath.item.getter(v119);
                        v114 = v79 + 1;
                        if (!__OFADD__(v79, 1))
                          goto LABEL_100;
                        __break(1u);
LABEL_39:
                        if (v78 == (id)1)
                          goto LABEL_48;
                        v120 = IndexPath.section.getter(v79);
                        if ((v120 & 0x8000000000000000) == 0)
                        {
                          v121 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
                          if (v120 < *(_QWORD *)(v121 + 16))
                          {
                            v122 = (_QWORD *)(v121 + 40 * v120);
                            v123 = v122[5];
                            v124 = v122[7];
                            v125 = v122[8];
                            swift_bridgeObjectRetain(v123);
                            swift_bridgeObjectRetain(v124);
                            swift_retain();
                            v127 = sub_1001BD99C(v126);
                            v128 = v125;
                            v74 = v253;
                            v81 = (char *)v261;
                            swift_release(v128);
                            v129 = v124;
                            v80 = v260;
                            swift_bridgeObjectRelease(v129);
                            swift_bridgeObjectRelease(v123);
                            if ((v127 & 1) != 0)
                            {
                              v130 = IndexPath.section.getter(v120);
                              v131 = objc_msgSend(v74, "numberOfSections");
                              if (!__OFSUB__(v131, 1))
                              {
                                v72 = v257;
                                if (v130 >= (uint64_t)v131 - 1)
                                {
LABEL_159:
                                  v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
                                  v133 = v243;
                                  v134 = v243;
                                  v135 = 1;
                                  goto LABEL_160;
                                }
                                v132 = IndexPath.section.getter(v131);
                                v133 = v243;
                                if (!__OFADD__(v132, 1))
                                {
                                  IndexPath.init(item:section:)(0, v132 + 1);
                                  v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
                                  v134 = v133;
                                  v135 = 0;
LABEL_160:
                                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v108)(v134, v135, 1, v80);
LABEL_161:
                                  v218 = (uint64_t)v133;
                                  goto LABEL_120;
                                }
                                goto LABEL_196;
                              }
                              goto LABEL_179;
                            }
                          }
                        }
LABEL_73:
                        v176 = IndexPath.item.getter(v120);
                        v177 = IndexPath.section.getter(v176);
                        v178 = sub_100244B48(v177);
                        v179 = sub_100244A10();
                        v180 = v178 - v179;
                        if (!__OFSUB__(v178, v179))
                        {
                          v181 = v247;
                          if (v176 >= v180)
                          {
                            v200 = IndexPath.section.getter(v179);
                            v201 = (char *)objc_msgSend(v74, "numberOfSections");
                            v202 = v201 - 1;
                            if (!__OFSUB__(v201, 1))
                            {
                              v203 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v81 + 2))(v181, v68, v80);
                              if (v200 >= (uint64_t)v202)
                              {
                                (*((void (**)(char *, uint64_t))v81 + 1))(v181, v80);
                                goto LABEL_48;
                              }
                              v204 = IndexPath.section.getter(v203);
                              if (!__OFADD__(v204, 1))
                              {
                                v205 = objc_msgSend(v74, v72[475], v204 + 1);
                                v206 = (*((uint64_t (**)(char *, uint64_t))v81 + 1))(v181, v80);
                                if ((uint64_t)v205 <= 0)
                                  goto LABEL_48;
                                v207 = IndexPath.section.getter(v206);
                                v208 = v207 + 1;
                                if (!__OFADD__(v207, 1))
                                {
                                  if ((v208 & 0x8000000000000000) == 0)
                                  {
                                    v209 = *(_QWORD *)&v255[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
                                    if (v208 < *(_QWORD *)(v209 + 16))
                                    {
                                      v210 = (_QWORD *)(v209 + 40 * v208);
                                      v211 = v210[5];
                                      v212 = v210[7];
                                      v213 = v210[8];
                                      swift_bridgeObjectRetain(v211);
                                      swift_bridgeObjectRetain(v212);
                                      swift_retain();
                                      v215 = sub_1001BD99C(v214);
                                      v216 = v213;
                                      v80 = v260;
                                      swift_release(v216);
                                      swift_bridgeObjectRelease(v212);
                                      swift_bridgeObjectRelease(v211);
                                      if ((v215 & 1) != 0)
                                      {
                                        v217 = IndexPath.section.getter(v207);
                                        v175 = v217 + 1;
                                        if (__OFADD__(v217, 1))
                                        {
LABEL_200:
                                          __break(1u);
LABEL_201:
                                          __break(1u);
                                          goto LABEL_202;
                                        }
LABEL_115:
                                        v72 = v257;
                                        v199 = 0;
                                        goto LABEL_105;
                                      }
                                    }
                                  }
                                  v231 = IndexPath.section.getter(v207);
                                  if (!__OFADD__(v231, 1))
                                  {
                                    v232 = objc_msgSend(v74, v72[475], v231 + 1);
                                    v233 = IndexPath.item.getter(v232);
                                    v234 = sub_100244A10();
                                    if (v234)
                                    {
                                      v235 = v234;
                                      v72 = v257;
                                      if (v233 == 0x8000000000000000 && v234 == -1)
                                        goto LABEL_198;
                                      v198 = __OFSUB__(v232, 1);
                                      v236 = (uint64_t)v232 - 1;
                                      if (!v198)
                                      {
                                        v237 = IndexPath.section.getter(v234);
                                        v238 = v237 + 1;
                                        if (!__OFADD__(v237, 1))
                                        {
                                          if (v236 >= v233 % v235)
                                            v239 = v233 % v235;
                                          else
                                            v239 = v236;
                                          v133 = v242;
                                          IndexPath.init(item:section:)(v239, v238);
                                          v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
                                          v80 = v260;
                                          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v108)(v133, 0, 1, v260);
                                          goto LABEL_161;
                                        }
                                        goto LABEL_190;
                                      }
LABEL_189:
                                      __break(1u);
LABEL_190:
                                      __break(1u);
                                      goto LABEL_191;
                                    }
LABEL_188:
                                    __break(1u);
                                    goto LABEL_189;
                                  }
LABEL_187:
                                  __break(1u);
                                  goto LABEL_188;
                                }
LABEL_186:
                                __break(1u);
                                goto LABEL_187;
                              }
                              goto LABEL_177;
                            }
                            goto LABEL_172;
                          }
                          v182 = IndexPath.item.getter(v179);
                          v183 = sub_100244A10();
                          if (!__OFADD__(v182, v183))
                          {
                            v72 = v257;
                            if (!__OFSUB__(v75, 1))
                            {
                              if ((uint64_t)(v75 - 1) >= v182 + v183)
                                v107 = (char *)(v182 + v183);
                              else
                                v107 = v75 - 1;
                              v175 = IndexPath.section.getter(v183);
                              goto LABEL_104;
                            }
                            goto LABEL_174;
                          }
LABEL_171:
                          __break(1u);
LABEL_172:
                          __break(1u);
LABEL_173:
                          __break(1u);
LABEL_174:
                          __break(1u);
LABEL_175:
                          __break(1u);
                          goto LABEL_176;
                        }
                        goto LABEL_164;
                      }
LABEL_203:
                      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000014, 0x800000010051CFF0, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 716, 0);
                      goto LABEL_204;
                    }
                    goto LABEL_117;
                  }
LABEL_91:
                  v187 = IndexPath.item.getter(v117);
                  v188 = v187 + 1;
                  if (__OFADD__(v187, 1))
                  {
LABEL_166:
                    __break(1u);
                    goto LABEL_167;
                  }
                  v189 = sub_100244A10();
                  if (!v189)
                  {
LABEL_167:
                    __break(1u);
                    goto LABEL_168;
                  }
                  if (v188 == 0x8000000000000000 && v189 == -1)
                    goto LABEL_173;
                  v190 = v188 % v189;
                  v191 = ((uint64_t (*)(char *, uint64_t, uint64_t))v74)(v156, v68, v80);
                  if (v190)
                  {
                    v192 = IndexPath.item.getter(v191);
                    v193 = ((uint64_t (*)(char *, uint64_t))v155)(v156, v80);
                    v81 = (char *)v261;
                    if (__OFSUB__(v75, 1))
                    {
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
                      goto LABEL_171;
                    }
                    v61 = v245;
                    if (v192 < (uint64_t)(v75 - 1))
                    {
                      v194 = IndexPath.item.getter(v193);
                      if (v194 <= 0x7FFFFFFFFFFFFFFDLL)
                      {
                        v79 = IndexPath.item.getter(v194);
                        v114 = v79 + 1;
                        if (__OFADD__(v79, 1))
                        {
LABEL_176:
                          __break(1u);
LABEL_177:
                          __break(1u);
LABEL_178:
                          __break(1u);
LABEL_179:
                          __break(1u);
                          goto LABEL_180;
                        }
                        goto LABEL_100;
                      }
                      goto LABEL_203;
                    }
                  }
                  else
                  {
                    ((void (*)(char *, uint64_t))v155)(v156, v80);
                    v81 = (char *)v261;
                    v61 = v245;
                  }
                  goto LABEL_117;
                }
              }
LABEL_90:
              v155 = v261[1];
              v117 = ((uint64_t (*)(char *, uint64_t))v155)(v81, v80);
              v156 = v248;
              goto LABEL_91;
            }
            goto LABEL_202;
          }
        }
        v184 = IndexPath.item.getter(v111);
        v185 = sub_100244A10();
        if (!v185)
        {
LABEL_165:
          __break(1u);
          goto LABEL_166;
        }
        v61 = v246;
        if (v184 == 0x8000000000000000 && v185 == -1)
          goto LABEL_170;
        if (!(v184 % v185))
        {
LABEL_117:
          v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
          goto LABEL_118;
        }
        v186 = IndexPath.item.getter(v185);
        if (v186 >= 1)
        {
          v79 = IndexPath.item.getter(v186);
          v114 = v79 - 1;
          if (!__OFSUB__(v79, 1))
            goto LABEL_100;
          __break(1u);
          goto LABEL_90;
        }
LABEL_202:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000014, 0x800000010051CFF0, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 711, 0);
LABEL_204:
        __break(1u);
        JUMPOUT(0x100246FB8);
      case 4:
        goto LABEL_31;
      default:
        v80 = v260;
        v81 = (char *)v261;
        goto LABEL_48;
    }
  }
  if (v258 == 2)
  {
    sub_10024725C(a2, (uint64_t)v44);
    v80 = v260;
    v81 = (char *)v261;
    v261[2](v22, a2, v260);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v81 + 6))(v44, 1, v80) == 1)
    {
      (*((void (**)(char *, char *, uint64_t))v81 + 4))(v47, v22, v80);
      sub_10000CB4C((uint64_t)v44, (uint64_t *)&unk_100642710);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v81 + 1))(v22, v80);
      (*((void (**)(char *, char *, uint64_t))v81 + 4))(v47, v44, v80);
    }
    v108 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v81 + 7);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v108)(v47, 0, 1, v80);
    v72 = v257;
    sub_100070EDC((uint64_t)v47, (uint64_t)v257, (uint64_t *)&unk_100642710);
    v68 = a2;
  }
  else if (v258 == 1)
  {
    v68 = a2;
    sub_100246FC8(a2, (uint64_t)v50);
    v69 = v260;
    v70 = (uint64_t (**)(char *, uint64_t, uint64_t))v261;
    v261[2](v25, v62, v260);
    v71 = v70[6](v50, 1, v69);
    v72 = v257;
    if (v71 == 1)
    {
      v70[4](v53, (uint64_t)v25, v69);
      sub_10000CB4C((uint64_t)v50, (uint64_t *)&unk_100642710);
    }
    else
    {
      ((void (*)(char *, uint64_t))v70[1])(v25, v69);
      v70[4](v53, (uint64_t)v50, v69);
    }
    v80 = v69;
    v108 = (void (*)(char *, uint64_t, uint64_t))v70[7];
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v108)(v53, 0, 1, v69);
    sub_100070EDC((uint64_t)v53, (uint64_t)v72, (uint64_t *)&unk_100642710);
    v81 = (char *)v70;
  }
  else
  {
    v80 = v260;
    v81 = (char *)v261;
    v108 = v261[7];
    v72 = v257;
    ((void (*)(char **, uint64_t, uint64_t, uint64_t, __n128))v108)(v257, 1, 1, v260, v65);
    v68 = a2;
  }
LABEL_121:
  v219 = v256;
  sub_1000E26E0((uint64_t)v72, v256);
  v220 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v81 + 6);
  v221 = v220(v219, 1, v80);
  sub_10000CB4C(v219, (uint64_t *)&unk_100642710);
  if (v221 == 1)
  {
    sub_10000CB4C((uint64_t)v72, (uint64_t *)&unk_100642710);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v108)(v259, 1, 1, v80);
  }
  v222 = v254;
  sub_1000E26E0((uint64_t)v72, (uint64_t)v254);
  if (v220((uint64_t)v222, 1, v80) == 1)
    goto LABEL_201;
  sub_100244C7C(v222, v68, v259);
  sub_10000CB4C((uint64_t)v72, (uint64_t *)&unk_100642710);
  return (*((uint64_t (**)(char *, uint64_t))v81 + 1))(v222, v80);
}

uint64_t sub_100246FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = IndexPath.item.getter(v8);
  if (v11 >= 1)
  {
    v12 = IndexPath.item.getter(v11);
    if (v12 < 1)
    {
LABEL_24:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000014, 0x800000010051CFF0, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 711, 0);
      __break(1u);
      return result;
    }
    v13 = IndexPath.item.getter(v12);
    v14 = v13 - 1;
    if (!__OFSUB__(v13, 1))
    {
      v15 = IndexPath.section.getter(v13);
      IndexPath.init(item:section:)(v14, v15);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = IndexPath.section.getter(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if (v17 < 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    objc_msgSend(v3, "loadViewIfNeeded");
    v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    v19 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v19)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v20 = v19;
    v21 = IndexPath.section.getter(v20);
    if (__OFSUB__(v21, 1))
      goto LABEL_18;
    v22 = objc_msgSend(v20, "numberOfItemsInSection:", v21 - 1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((uint64_t)v22 > 0)
    {
      objc_msgSend(v3, "loadViewIfNeeded");
      v23 = *(void **)&v3[v18];
      if (!v23)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v24 = v23;
      v25 = IndexPath.section.getter(v24);
      if (!__OFSUB__(v25, 1))
      {
        v26 = (char *)objc_msgSend(v24, "numberOfItemsInSection:", v25 - 1);

        if (!__OFSUB__(v26, 1))
        {
          v28 = IndexPath.section.getter(v27);
          if (!__OFSUB__(v28, 1))
          {
            IndexPath.init(item:section:)(v26 - 1, v28 - 1);
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
}

uint64_t sub_10024725C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v34 = a2;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = IndexPath.item.getter(v7);
  objc_msgSend(v2, "loadViewIfNeeded");
  v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v12 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v12)
    goto LABEL_23;
  v13 = v12;
  v14 = objc_msgSend(v13, "numberOfItemsInSection:", IndexPath.section.getter(v13));

  if (__OFSUB__(v14, 1))
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v10 < (uint64_t)v14 - 1)
  {
    v16 = IndexPath.item.getter(v15);
    if (v16 > 0x7FFFFFFFFFFFFFFDLL)
    {
LABEL_26:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000014, 0x800000010051CFF0, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 716, 0);
      __break(1u);
      return result;
    }
    v17 = IndexPath.item.getter(v16);
    v18 = v17 + 1;
    if (!__OFADD__(v17, 1))
    {
      v19 = IndexPath.section.getter(v17);
      v20 = v34;
      IndexPath.init(item:section:)(v18, v19);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
    }
    goto LABEL_19;
  }
  v22 = IndexPath.section.getter(v15);
  v23 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v3, "loadViewIfNeeded");
  v24 = *(void **)&v3[v11];
  if (!v24)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v25 = objc_msgSend(v24, "numberOfSections");
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if (v23 >= (uint64_t)v25)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    objc_msgSend(v3, "loadViewIfNeeded");
    v26 = *(void **)&v3[v11];
    if (!v26)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v27 = v26;
    v28 = IndexPath.section.getter(v27);
    if (__OFADD__(v28, 1))
      goto LABEL_21;
    v29 = objc_msgSend(v27, "numberOfItemsInSection:", v28 + 1);

    v30 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if ((uint64_t)v29 > 0)
    {
      v31 = IndexPath.section.getter(v30);
      if (!__OFADD__(v31, 1))
      {
        v32 = v34;
        IndexPath.init(item:section:)(0, v31 + 1);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v32, 0, 1, v5);
      }
      goto LABEL_22;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v34, 1, 1, v5);
}

unint64_t sub_100247534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  unint64_t result;
  char *v22;
  double v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  Class isa;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  char v34[24];

  v5 = v4;
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(v5, "presentedViewController", v17);

  if (v20)
    return 0;
  v22 = &v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v23 = swift_beginAccess(&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v34, 0, 0).n128_u64[0];
  if ((unint64_t)(*(_QWORD *)v22 - 1) > 1)
    return 1;
  objc_msgSend(v5, "loadViewIfNeeded", v23);
  result = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
    goto LABEL_25;
  v24 = objc_msgSend((id)result, "effectiveUserInterfaceLayoutDirection");
  v25 = 3;
  if (!v24)
    v25 = 4;
  if (v25 != a3)
    return 1;
  if (IndexPath.count.getter(v24) != 2)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_15:
    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
    return 0;
  }
  result = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
    goto LABEL_26;
  if ((objc_msgSend((id)result, "isGathering") & 1) == 0
    && (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148(a4) & 1) != 0)
  {
    goto LABEL_13;
  }
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v26(v14, a4, v15);
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  v33(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_15;
  v32 = v26;
  v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  result = IndexPath.item.getter(v27);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v28 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
    v29 = v32;
    if (result < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      if (objc_msgSend(*(id *)(v28 + 8 * result + 32), "isFolder"))
      {
        v29(v11, a4, v15);
        v33(v11, 0, 1, v15);
        sub_100244284((uint64_t)v11);
        sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
        if (*(_QWORD *)v22 == 1)
        {
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v5, "collectionView:performPrimaryActionForItemAtIndexPath:", a1, isa);

          (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
          return 0;
        }
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      return 1;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_100247890(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 != 2)
  {
    if (a5 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v10 + 56))(a1, 1, 1, v9, v11);
      return 0;
    }
    v14 = 0;
    v15 = 0;
LABEL_9:
    IndexPath.init(item:section:)(v14, v15);
    sub_100244FA8(a4, (uint64_t)v13, 1);
    v20 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v13, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    return (id)v20;
  }
  objc_msgSend(v5, "loadViewIfNeeded", v11);
  v16 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(id *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
    goto LABEL_14;
  result = objc_msgSend(result, "numberOfSections");
  v18 = (uint64_t)result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v5, "loadViewIfNeeded");
  result = *(id *)&v5[v16];
  if (result)
  {
    result = objc_msgSend(result, "numberOfItemsInSection:", v18 & ~(v18 >> 63));
    if (!__OFSUB__(result, 1))
    {
      v14 = ((uint64_t)result - 1) & ~(((uint64_t)result - 1) >> 63);
      v15 = v18 & ~(v18 >> 63);
      goto LABEL_9;
    }
    goto LABEL_13;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_100247A18(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;

  v4 = v3;
  if ((objc_msgSend(v4, "isEditing") & 1) == 0 && objc_msgSend(a1, "isEditing"))
  {
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(objc_msgSend(v4, "setEditing:animated:", 1, 1));
    v8 = static os_log_type_t.debug.getter(v7);
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    v18 = a3;
    swift_bridgeObjectRetain(a3);
    v11 = sub_10006922C((uint64_t *)&unk_100649130);
    v12 = String.init<A>(describing:)(&v18, v11);
    v14 = v13;
    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_10006A638();
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v14;
    os_log(_:dso:log:type:_:)("Will enter Edit mode with initially selected item %@", 52, 2, &_mh_execute_header, v7, v8, v10);

    swift_bridgeObjectRelease(v10);
  }
  swift_getObjectType(a1);
  v15 = sub_10027CAA0(a3, 0, 0);
  *((_BYTE *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  v16 = objc_msgSend(v4, "viewIfLoaded", v15);
  v17 = objc_msgSend(v16, "window");

  if (v17)
    sub_1000926C8();
}

void sub_100247BD0()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void (**v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  id v32;
  void *v33;
  char *v34;
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v67;
  id v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (**v84)(uint64_t, uint64_t);
  unint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  _BYTE v94[200];
  _BYTE v95[208];

  v80 = sub_10006922C((uint64_t *)&unk_100649140);
  __chkstk_darwin(v80);
  v2 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (void (**)(uint64_t, uint64_t))((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v83 = (uint64_t)&v76 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v76 - v9;
  __chkstk_darwin(v11);
  v92 = (char *)&v76 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v84 = *(void (***)(uint64_t, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  v81 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v89 = (char *)&v76 - v17;
  objc_msgSend(v0, "loadViewIfNeeded", v16);
  v90 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v91 = v0;
  v18 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v19 = objc_msgSend(v18, "preparedCells");
  if (!v19)
  {
LABEL_57:
    __break(1u);
    return;
  }
  v20 = v19;
  v21 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if ((unint64_t)v22 >> 62)
  {
LABEL_49:
    if (v22 < 0)
      v75 = v22;
    else
      v75 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v22);
    if (v23)
      goto LABEL_5;
LABEL_53:
    swift_bridgeObjectRelease(v22);
    return;
  }
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v23)
    goto LABEL_53;
LABEL_5:
  v82 = v10;
  v76 = 0;
  v77 = v5;
  v87 = v2;
  v85 = v22 & 0xC000000000000001;
  v24 = 4;
  v5 = v84;
  v78 = v23;
  v79 = v22;
  while (1)
  {
    if (v85)
      v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v22);
    else
      v25 = (char *)*(id *)(v22 + 8 * v24);
    v2 = v25;
    v26 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    v27 = type metadata accessor for DOCItemCollectionCell();
    v28 = swift_dynamicCastClass(v2, v27);
    if (!v28)
    {

      goto LABEL_7;
    }
    v29 = (_QWORD *)v28;
    v86 = v24 - 3;
    v30 = v91;
    objc_msgSend(v91, "loadViewIfNeeded");
    v31 = *(void **)&v30[v90];
    if (!v31)
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v88 = v2;
    v32 = objc_msgSend(v31, "indexPathForCell:", v29);
    if (!v32)
      break;
    v33 = v32;
    v34 = v81;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v32);

    v35 = (void (*)(uint64_t, char *, uint64_t))v5[4];
    v36 = (uint64_t)v92;
    v35((uint64_t)v92, v34, v13);
    v37 = v5[7];
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v37)(v36, 0, 1, v13);
    v10 = (char *)v5[6];
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v10)(v36, 1, v13) == 1)
      goto LABEL_39;
    v38 = v89;
    v35((uint64_t)v89, v92, v13);
    v39 = (uint64_t)v82;
    ((void (*)(char *, char *, uint64_t))v5[2])(v82, v38, v13);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v37)(v39, 0, 1, v13);
    v40 = v91;
    objc_msgSend(v91, "loadViewIfNeeded");
    v41 = *(_QWORD *)&v40[v90];
    if (!v41)
      goto LABEL_55;
    v42 = *(_QWORD *)(v41 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v42, &v93, 0, 0);
    v43 = v83;
    sub_1000E26E0(v42, v83);
    v44 = (uint64_t)v87;
    v45 = (uint64_t)&v87[*(int *)(v80 + 48)];
    sub_1000E26E0(v39, (uint64_t)v87);
    sub_1000E26E0(v43, v45);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v10)(v44, 1, v13) == 1)
    {
      sub_10000CB4C(v43, (uint64_t *)&unk_100642710);
      sub_10000CB4C(v39, (uint64_t *)&unk_100642710);
      v46 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v45, 1, v13);
      if (v46 == 1)
        v47 = (uint64_t *)&unk_100642710;
      else
        v47 = (uint64_t *)&unk_100649140;
      if (v46 == 1)
        v48 = -1;
      else
        v48 = 0;
    }
    else
    {
      v49 = (uint64_t)v77;
      sub_1000E26E0(v44, (uint64_t)v77);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v10)(v45, 1, v13) == 1)
      {
        sub_10000CB4C(v83, (uint64_t *)&unk_100642710);
        sub_10000CB4C((uint64_t)v82, (uint64_t *)&unk_100642710);
        v84[1](v49, v13);
        v48 = 0;
        v47 = (uint64_t *)&unk_100649140;
      }
      else
      {
        v50 = v81;
        v35((uint64_t)v81, (char *)v45, v13);
        v51 = sub_10005A360((unint64_t *)&qword_100649150, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v48 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v50, v13, v51);
        v52 = v84[1];
        v52((uint64_t)v50, v13);
        sub_10000CB4C(v83, (uint64_t *)&unk_100642710);
        sub_10000CB4C((uint64_t)v82, (uint64_t *)&unk_100642710);
        v52(v49, v13);
        v47 = (uint64_t *)&unk_100642710;
      }
    }
    v53 = v88;
    v54 = sub_10000CB4C((uint64_t)v87, v47);
    v55 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0x1F8))(v54);
    if (v55)
    {
      v56 = v55;
      v57 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing);
      *(_BYTE *)(v55 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) = v48 & 1;
      v5 = v84;
      if ((v48 & 1) != v57)
      {
        v58 = *(void **)(v55 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
        *(_QWORD *)(v55 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

        sub_1000D07FC((uint64_t)v94);
        v59 = v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
        sub_100070EDC(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v95, (uint64_t *)&unk_100641310);
        sub_100070EDC((uint64_t)v94, v59, (uint64_t *)&unk_100641310);
        sub_1001BF860((uint64_t)v95);
        v60 = *(void **)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
        *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

        v10 = (char *)OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
        v61 = *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
        if ((v61 & 0x10) == 0)
        {
          v61 |= 0x10uLL;
          *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v61;
        }
        if (!*(_QWORD *)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
          && !sub_10007BAFC())
        {
          *(_QWORD *)&v10[v56] = 0;
          v62 = objc_autoreleasePoolPush();
          v63 = v76;
          sub_10006D2D4(v61, v56);
          v76 = v63;
          objc_autoreleasePoolPop(v62);
        }
      }

      v5[1]((uint64_t)v89, v13);
    }
    else
    {
      v5 = v84;
      v84[1]((uint64_t)v89, v13);

    }
    v23 = v78;
    v22 = v79;
    v26 = v86;
LABEL_7:
    ++v24;
    if (v26 == v23)
      goto LABEL_53;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7])(v92, 1, 1, v13);
LABEL_39:
  swift_bridgeObjectRelease(v79);
  v64 = sub_10000CB4C((uint64_t)v92, (uint64_t *)&unk_100642710);
  v65 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0x1F8))(v64);
  if (v65)
  {
    v66 = (char *)v65;
    v67 = *(_BYTE *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing);
    *(_BYTE *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) = 0;
    v68 = v88;
    if ((v67 & 1) != 0)
    {
      v69 = *(void **)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
      *(_QWORD *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

      sub_1000D07FC((uint64_t)v94);
      v70 = (uint64_t)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
      sub_100070EDC((uint64_t)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v95, (uint64_t *)&unk_100641310);
      sub_100070EDC((uint64_t)v94, v70, (uint64_t *)&unk_100641310);
      sub_1001BF860((uint64_t)v95);
      v71 = *(void **)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
      *(_QWORD *)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

      v72 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      v73 = *(_QWORD *)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
      if ((v73 & 0x10) == 0)
      {
        v73 |= 0x10uLL;
        *(_QWORD *)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v73;
      }
      if (!*(_QWORD *)&v66[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
        && !sub_10007BAFC())
      {
        *(_QWORD *)&v66[v72] = 0;
        v74 = objc_autoreleasePoolPush();
        sub_10006D2D4(v73, (uint64_t)v66);
        objc_autoreleasePoolPop(v74);
      }
    }

  }
  else
  {

  }
}

uint64_t sub_100248428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  _OWORD v30[2];
  char v31;

  v4 = v3;
  v27[1] = a2;
  v28 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v29 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v27 - v13;
  sub_100247BD0();
  v15 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate]);
  if (Strong)
  {
    v17 = Strong;
    v18 = *((_QWORD *)v15 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
    memset(v30, 0, sizeof(v30));
    v31 = 1;
    (*(void (**)(void *, char *, _OWORD *, uint64_t, uint64_t))(v18 + 24))(v4, v14, v30, ObjectType, v18);
    swift_unknownObjectRelease(v17);
    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
  }
  sub_1000E26E0(a3, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
    return sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
  v21 = v29;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v11, v6);
  if (objc_msgSend(v4, "isEditing"))
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v21, v6);
  }
  else
  {
    v27[0] = swift_getObjectType(v28);
    v22 = sub_10006922C(&qword_100644BD0);
    v23 = *(unsigned __int8 *)(v7 + 80);
    v24 = (v23 + 32) & ~v23;
    v25 = swift_allocObject(v22, v24 + *(_QWORD *)(v7 + 72), v23 | 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
    v26(v25 + v24, v21, v6);
    sub_10027CAA0(v25, 0, 0);
    swift_setDeallocating(v25);
    swift_arrayDestroy(v25 + v24, *(_QWORD *)(v25 + 16), v6);
    swift_deallocClassInstance(v25, 32, 7);
    v26((uint64_t)v14, v21, v6);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  sub_100244284((uint64_t)v14);
  sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v21, v6);
}

void sub_1002486F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char *v4;
  _BYTE *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  uint64_t Strong;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  Class v45;
  uint64_t ObjectType;
  uint64_t v47;
  char v48[24];
  _QWORD v49[4];
  BOOL v50;

  v5 = v4;
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&ObjectType - v14;
  sub_100247BD0();
  objc_msgSend(v4, "loadViewIfNeeded");
  v16 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v16)
  {
    v17 = v16;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v17, "layoutAttributesForItemAtIndexPath:", isa);

    if (v19)
    {
      objc_msgSend(v19, "frame");
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26;

    }
    else
    {
      v21 = 0;
      v23 = 0;
      v25 = 0;
      v27 = 0;
    }
    v49[0] = v21;
    v49[1] = v23;
    v49[2] = v25;
    v49[3] = v27;
    v50 = v19 == 0;
    if (objc_msgSend(v5, "isEditing"))
    {
      v5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      v28 = objc_msgSend(v5, "viewIfLoaded");
      v29 = objc_msgSend(v28, "window");

      if (v29)
        sub_1000926C8();
    }
    else
    {
      v47 = a3;
      v30 = &v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate]);
      if (Strong)
      {
        v32 = Strong;
        v33 = *((_QWORD *)v30 + 1);
        ObjectType = swift_getObjectType(Strong);
        v34 = a2;
        v35 = type metadata accessor for IndexPath(0);
        v36 = v12;
        v37 = a4;
        v38 = a1;
        v39 = *(_QWORD *)(v35 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v15, v47, v35);
        v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
        a1 = v38;
        a4 = v37;
        v12 = v36;
        v41 = v35;
        a2 = v34;
        v40(v15, 0, 1, v41);
        (*(void (**)(_BYTE *, char *, _QWORD *, uint64_t, uint64_t))(v33 + 24))(v5, v15, v49, ObjectType, v33);
        swift_unknownObjectRelease(v32);
        sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_100642710);
      }
      v42 = &v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v48, 0, 0);
      if (*v42 == 2 && (a4 & 1) != 0)
      {
        swift_getObjectType(a1);
        sub_10027BDB0(a2, (uint64_t)v12);
        v43 = type metadata accessor for IndexPath(0);
        v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v12, 1, v43);
        sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
        if (v44 != 1)
        {
          v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 0;
          v45 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v5, "collectionView:didSelectItemAtIndexPath:", a1, v45);

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100248A70(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100244FA8(a4, a5, 1);
  v8 = v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a5, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  return v8;
}

void sub_100248AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100249CCC(a3);
}

BOOL sub_100248B00()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v3, 0, 0);
  return (unint64_t)(*v1 - 1) < 2;
}

uint64_t sub_100248B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100249FF8(a3);
}

id DOCItemCollectionViewController.typeToFocusController(_:focusItem:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024AC54(a2, a3);
}

void DOCItemCollectionViewController.typeToFocusController(_:indexPathFor:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[40];
  uint64_t v15;
  _QWORD v16[5];

  sub_100092328(a1, (uint64_t)v16);
  v3 = sub_10006922C(&qword_1006490A0);
  v4 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if (swift_dynamicCast(&v15, v16, v3, v4, 6))
  {
    v5 = v15;
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v6, v14);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v5;
    v16[0] = inited;
    specialized Array._endMutation()(inited);
    v8 = v16[0];
    swift_unknownObjectRetain(v5);
    v9 = sub_100096D88(v8);
    swift_bridgeObjectRelease(v8);
    v10 = *((_QWORD *)v9 + 2);
    v11 = type metadata accessor for IndexPath(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (v10)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a2, &v9[(*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)], v11);
      v13 = 0;
    }
    else
    {
      v13 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, v13, 1, v11);
    swift_bridgeObjectRelease(v9);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x800000010051CE60, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 575, 0);
    __break(1u);
  }
}

uint64_t DOCItemCollectionViewController.canPerformTypeToFocus(with:)()
{
  void *v0;

  return objc_msgSend(v0, "isEditing") ^ 1;
}

void DOCItemCollectionViewController.pressesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  id v9;
  uint64_t v10;
  Class isa;
  id v12;
  objc_super v13;

  v5 = type metadata accessor for DOCColumnViewController(0);
  v12 = (id)UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(v5, 0, v5);
  if (!v12)
    goto LABEL_15;
  v6 = swift_bridgeObjectRetain(a1);
  v7 = (void *)sub_100243954(v6, sub_1002495C4, &qword_1006490A8, UIPress_ptr);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (!v7)
    goto LABEL_15;
  v9 = objc_msgSend(v7, "key", v8);

  if (!v9)
    goto LABEL_15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    if (__CocoaSet.count.getter(v10) != 1)
      goto LABEL_14;
LABEL_11:
    if (!objc_msgSend(v9, "modifierFlags") && objc_msgSend(v9, "keyCode") == (id)80)
    {
      sub_1002447C4(1);

      return;
    }
    goto LABEL_14;
  }
  if (*(_QWORD *)(a1 + 16) == 1)
    goto LABEL_11;
LABEL_14:

LABEL_15:
  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_10024B098();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v13, "pressesBegan:withEvent:", isa, a2);

  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] != 1)
  {
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController])
                                             + 0x128))(a1, a2);
  }

}

void DOCItemCollectionViewController.pressesChanged(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  objc_super v6;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_10024B098();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v6, "pressesChanged:withEvent:", isa, a2);

  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController])
                                             + 0x130))(a1, a2);
  }
}

double sub_10024903C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  v10 = sub_10024B098();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void DOCItemCollectionViewController.pressesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  objc_super v6;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_10024B098();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v6, "pressesEnded:withEvent:", isa, a2);

  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController])
                                             + 0x138))(a1, a2);
  }
}

void DOCItemCollectionViewController.pressesCancelled(_:with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  objc_super v6;

  sub_10004F2F0(0, &qword_1006490A8, UIPress_ptr);
  sub_10024B098();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  objc_msgSendSuper2(&v6, "pressesCancelled:withEvent:", isa, a2);

  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & **(_QWORD **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController])
                                             + 0x140))(a1, a2);
  }
}

uint64_t sub_1002492F0(void (*a1)(int64_t *), uint64_t a2, int64_t a3, int64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  _BOOL4 v17;
  BOOL v18;
  uint64_t result;
  _QWORD *v20;
  BOOL v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  char *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(int64_t *);
  uint64_t v37;
  int64_t v38;
  char v39;
  _QWORD *v40;

  v6 = v5;
  v36 = a1;
  v37 = a2;
  v10 = type metadata accessor for IndexPath(0);
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v32 = (char *)&v32 - v14;
  v15 = 0;
  v16 = a3;
  while (1)
  {
    v17 = v16 <= a4;
    if (a5 > 0)
      v17 = v16 >= a4;
    if (v17)
      break;
    v18 = __OFADD__(v16, a5);
    v16 += a5;
    if (v18)
      v16 = (v16 >> 63) ^ 0x8000000000000000;
    v18 = __OFADD__(v15++, 1);
    if (v18)
    {
      __break(1u);
      break;
    }
  }
  v40 = _swiftEmptyArrayStorage;
  result = sub_100154FD0(0, v15, 0);
  v20 = v40;
  if (v15)
  {
    v33 = a4;
    while (1)
    {
      v21 = a3 <= a4;
      if (a5 > 0)
        v21 = a3 >= a4;
      if (v21)
        break;
      if (__OFADD__(a3, a5))
        v22 = ((a3 + a5) >> 63) ^ 0x8000000000000000;
      else
        v22 = a3 + a5;
      v38 = a3;
      v39 = 0;
      v36(&v38);
      if (v6)
        goto LABEL_37;
      v6 = 0;
      v23 = v12;
      v40 = v20;
      v25 = v20[2];
      v24 = v20[3];
      if (v25 >= v24 >> 1)
      {
        sub_100154FD0(v24 > 1, v25 + 1, 1);
        v20 = v40;
      }
      v20[2] = v25 + 1;
      v26 = (unint64_t)v20
          + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
          + *(_QWORD *)(v34 + 72) * v25;
      v12 = v23;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v34 + 32))(v26, v23, v35);
      a3 = v22;
      --v15;
      a4 = v33;
      if (!v15)
        goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
    v22 = a3;
LABEL_24:
    v27 = v22 <= a4;
    if (a5 > 0)
      v27 = v22 >= a4;
    if (!v27)
    {
      while (1)
      {
        v28 = __OFADD__(v22, a5) ? ((v22 + a5) >> 63) ^ 0x8000000000000000 : v22 + a5;
        v38 = v22;
        v36(&v38);
        if (v6)
          break;
        v6 = 0;
        v40 = v20;
        v30 = v20[2];
        v29 = v20[3];
        if (v30 >= v29 >> 1)
        {
          sub_100154FD0(v29 > 1, v30 + 1, 1);
          v20 = v40;
        }
        v20[2] = v30 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))((unint64_t)v20+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v30, v32, v35);
        v31 = v28 <= a4;
        if (a5 > 0)
          v31 = v28 >= a4;
        v22 = v28;
        if (v31)
          return (uint64_t)v20;
      }
LABEL_37:
      swift_release(v20);
    }
    return (uint64_t)v20;
  }
  return result;
}

uint64_t sub_1002495C4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_100249650(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100249664(a1, a2, a3, a4, &qword_10064C3A0, NSNumber_ptr);
}

void sub_100249664(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_10004F2F0(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_10004F2F0(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

void sub_1002498C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_100249664(a1, a2, a3, a4, &qword_100647C90, UISceneSession_ptr);
}

_QWORD *sub_1002498D8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  _BYTE *v23;
  char v24;
  void *v25;
  Swift::OpaquePointer v26;
  uint64_t v28;
  uint64_t v29;
  void *rawValue;
  id v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  _QWORD *v39;

  v3 = v2;
  v6 = type metadata accessor for UTType(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v7 = __chkstk_darwin(v6);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - v9;
  v39 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11)
  {
    while (1)
    {
      v32 = v3;
      v12 = 0;
      v37 = a1 & 0xC000000000000001;
      v38 = (char *)a2;
      v36 = a1 & 0xFFFFFFFFFFFFFF8;
      while (v37)
      {
        v3 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
        v13 = v38;
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_31:
          __break(1u);
          return v39;
        }
LABEL_9:
        a2 = a1;
        if ((objc_msgSend(v13, "isEditing") & 1) == 0)
        {
          v15 = (uint64_t)objc_msgSend(v3, "isCopying");
          if ((v15 & 1) != 0)
            goto LABEL_11;
        }
        v18 = objc_msgSend(v3, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        v19 = v33;
        static UTType.folder.getter();
        LOBYTE(v18) = static UTType.== infix(_:_:)(v10, v19);
        v20 = *(void (**)(char *, uint64_t))(v34 + 8);
        v21 = v19;
        v22 = v35;
        v20(v21, v35);
        v20(v10, v22);
        if ((v18 & 1) == 0)
          goto LABEL_16;
        v23 = v38;
        if (objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments")&& objc_msgSend(v23, "isEditing"))
        {
          v24 = v23[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] ^ 1;
        }
        else
        {
LABEL_16:
          v24 = 0;
        }
        if (!objc_msgSend(v3, "isActionable")
          || (objc_msgSend(v3, "isReadable") & 1) == 0
          || (objc_msgSend(v3, "isCopying") & 1) != 0
          || (objc_msgSend(v3, "isFullyFormed") & 1) == 0)
        {
          goto LABEL_4;
        }
        v25 = *(void **)&v38[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
        if (((objc_msgSend(v25, "forMovingDocuments") & 1) != 0
           || objc_msgSend(v25, "forSavingDocuments")
           || (objc_msgSend(v25, "forPickingFoldersOnly") & 1) != 0)
          && (objc_msgSend(v3, "isFolder") & 1) == 0)
        {
          goto LABEL_4;
        }
        v15 = (uint64_t)objc_msgSend(v3, "isFolder");
        if ((v15 & 1) == 0)
        {
          v31 = objc_msgSend(v3, "contentType");
          static UTType._unconditionallyBridgeFromObjectiveC(_:)();

          v31 = objc_msgSend(v25, "documentContentTypes");
          v26._rawValue = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v35);
          rawValue = v26._rawValue;

          LOBYTE(v26._rawValue) = UTType.doc_conformsToAny(inContentTypes:)(v26);
          swift_bridgeObjectRelease(rawValue);
          v15 = ((uint64_t (*)(char *, uint64_t))v20)(v10, v35);
          if (((uint64_t)v26._rawValue & 1) == 0)
            goto LABEL_4;
        }
        if ((v24 & 1) == 0)
        {
LABEL_11:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
          v16 = v39[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v3);
          specialized ContiguousArray._endMutation()(v17);
        }
        else
        {
LABEL_4:
          swift_unknownObjectRelease(v3);
        }
        a1 = a2;
        ++v12;
        if (v14 == v11)
          return v39;
      }
      v13 = v38;
      if (v12 < *(_QWORD *)(v36 + 16))
        break;
      __break(1u);
LABEL_34:
      if (a1 < 0)
        v28 = a1;
      else
        v28 = a1 & 0xFFFFFFFFFFFFFF8;
      v11 = _CocoaArrayWrapper.endIndex.getter(v28);
      if (!v11)
        return _swiftEmptyArrayStorage;
    }
    v3 = *(void **)(a1 + 8 * v12 + 32);
    swift_unknownObjectRetain(v3);
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_31;
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_100249CCC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  Class isa;
  id v31;
  char v33[24];

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v33[-v9 - 8];
  __chkstk_darwin(v11);
  v13 = &v33[-v12 - 8];
  v14 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v16 = swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v33, 0, 0).n128_u64[0];
  if (!*(_QWORD *)v14)
    goto LABEL_9;
  objc_msgSend(v2, "loadViewIfNeeded", v16);
  v17 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v18 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = objc_msgSend(v18, "numberOfSections");
  v20 = (uint64_t)v19 - 1;
  if (__OFSUB__(v19, 1))
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v2, "loadViewIfNeeded");
  v21 = *(void **)&v2[v17];
  if (!v21)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v22 = objc_msgSend(v21, "numberOfItemsInSection:", v20 & ~(v20 >> 63));
  if (__OFSUB__(v22, 1))
    goto LABEL_19;
  IndexPath.init(item:section:)(((uint64_t)v22 - 1) & ~(((uint64_t)v22 - 1) >> 63), v20 & ~(v20 >> 63));
  v23 = sub_10005A360((unint64_t *)&qword_100649150, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v24 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v13, v4, v23);
  v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v13, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
  if ((v24 & 1) == 0)
  {
    IndexPath.init(item:section:)(0, 0);
    dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v23);
    v25(v7, v4);
  }
  v15 = ((uint64_t (*)(char *, uint64_t))v25)(v10, v4);
LABEL_9:
  if (IndexPath.section.getter(v15))
  {
LABEL_14:
    sub_1001986D0();
    return;
  }
  v26 = IndexPath.item.getter(0);
  v27 = sub_100244A10();
  if (!v27)
    goto LABEL_20;
  if (v26 == 0x8000000000000000 && v27 == -1)
    goto LABEL_21;
  if (v26 / v27)
    goto LABEL_14;
  objc_msgSend(v2, "loadViewIfNeeded");
  v28 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v28)
    goto LABEL_24;
  v29 = v28;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v31)
    goto LABEL_14;
  objc_msgSend(v31, "frame");

}

uint64_t sub_100249FF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t result;

  v2 = v1;
  v4 = (void *)objc_opt_self(DOCKeyboardFocusManager);
  v5 = objc_msgSend(v4, "sharedManager");
  if ((unint64_t)(a1 - 1) < 4)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "adjacentFocusableToFocusable:direction:", v2);

    if (!v7)
      return 0;
    v8 = type metadata accessor for DOCItemCollectionViewController(0);
    v9 = swift_dynamicCastClass(v7, v8);
    if (!v9)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002CLL, 0x800000010051CF80, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 457, 0);
      goto LABEL_11;
    }
    v10 = (char *)v9;
    swift_unknownObjectRetain(v7);
    v11 = objc_msgSend(v4, "sharedManager");
    objc_msgSend(v11, "requestCurrentFocus:", v10);

    objc_msgSend(v10, "loadViewIfNeeded");
    v12 = *(void **)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v12)
    {
      v13 = v12;
      swift_unknownObjectRelease_n(v7, 2);
      return (uint64_t)v12;
    }
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010051CF60, "Files/DOCItemCollectionViewController+KeyboardFocus.swift", 57, 2, 451, 0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10024A1B4(char *a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD aBlock[5];
  uint64_t v53;
  char v54[24];
  char v55[32];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  __chkstk_darwin(v6);
  v48 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  __chkstk_darwin(v8);
  v45 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v44 - 8);
  v11 = __chkstk_darwin(v44);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject(&unk_1005D4CB8, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  swift_bridgeObjectRetain(a2);
  v51 = a3;
  objc_msgSend(a1, "loadViewIfNeeded");
  v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v21)
  {

    swift_bridgeObjectRelease(a2);
    __break(1u);
    goto LABEL_15;
  }
  v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v22, v55, 0, 0);
  sub_1000E26E0(v22, (uint64_t)v18);
  v23 = type metadata accessor for IndexPath(0);
  LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v18, 1, v23);
  sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100642710);
  if ((_DWORD)v22 == 1)
  {
    v24 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    sub_100477E1C(4, a2, 0, 0, 0, 1, *(_QWORD *)&v51[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController], 0, 0);
    swift_release(v19);

    return;
  }
  v25 = (void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v54, 0, 0);
  a3 = (char *)*v25;
  if ((unint64_t)(a3 - 1) >= 2)
  {
    if (a3)
    {
LABEL_17:

      swift_bridgeObjectRelease(a2);
      swift_release(v19);
      aBlock[0] = a3;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, aBlock, &type metadata for DOCDisplayMode, &type metadata for Int);
      __break(1u);
      return;
    }
    objc_msgSend(a1, "loadViewIfNeeded");
    v27 = *(void **)&a1[v20];
    if (!v27)
    {
LABEL_16:

      swift_bridgeObjectRelease(a2);
      __break(1u);
      goto LABEL_17;
    }
    if (objc_msgSend(v27, "effectiveUserInterfaceLayoutDirection"))
      v26 = 3;
    else
      v26 = 4;
  }
  else
  {
    v26 = 2;
  }
  objc_msgSend(a1, "loadViewIfNeeded");
  v28 = *(void **)&a1[v20];
  if (!v28)
  {
LABEL_15:

    swift_bridgeObjectRelease(a2);
    __break(1u);
    goto LABEL_16;
  }
  v29 = v28;
  sub_10024B194(v26, 0);

  v30 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v31 = (void *)static OS_dispatch_queue.main.getter(v30);
  static DispatchTime.now()(v31);
  + infix(_:_:)(v13, 0.1);
  v51 = *(char **)(v10 + 8);
  v32 = v44;
  ((void (*)(char *, uint64_t))v51)(v13, v44);
  v33 = swift_allocObject(&unk_1005D4CE0, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_10024B15C;
  *(_QWORD *)(v33 + 24) = v19;
  aBlock[4] = sub_10010DF60;
  v53 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D4CF8;
  v34 = _Block_copy(aBlock);
  v35 = v53;
  swift_retain();
  v36 = swift_release(v35);
  v37 = v45;
  static DispatchQoS.unspecified.getter(v36);
  aBlock[0] = _swiftEmptyArrayStorage;
  v38 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v39 = sub_10006922C((uint64_t *)&unk_100647540);
  v40 = sub_1000791AC();
  v41 = v48;
  v42 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v50, v38);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v37, v41, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v47);
  ((void (*)(char *, uint64_t))v51)(v15, v32);
  swift_release(v19);
}

void sub_10024A6F8(char *a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id *v26;
  void (*v27)(void);
  id v28;
  void **v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD aBlock[5];
  uint64_t v57;
  char v58[24];
  char v59[32];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  __chkstk_darwin(v6);
  v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  __chkstk_darwin(v8);
  v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v48 - 8);
  v11 = __chkstk_darwin(v48);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v47 - v14;
  v16 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject(&unk_1005D4C40, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  swift_bridgeObjectRetain(a2);
  v55 = a3;
  objc_msgSend(a1, "loadViewIfNeeded");
  v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v21 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v21)
  {

    swift_bridgeObjectRelease(a2);
    __break(1u);
    goto LABEL_15;
  }
  v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v22, v59, 0, 0);
  sub_1000E26E0(v22, (uint64_t)v18);
  v23 = type metadata accessor for IndexPath(0);
  LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v18, 1, v23);
  sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100642710);
  if ((_DWORD)v22 == 1)
  {
    v24 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    sub_10047B204(a2, *(void **)&v55[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController], 0, 0);

    v26 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v25);
    v27 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v26) + 0xA0);
    v28 = *v26;
    v27();
    swift_release(v19);

    return;
  }
  v29 = (void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v58, 0, 0);
  a3 = (char *)*v29;
  if ((unint64_t)(a3 - 1) >= 2)
  {
    if (a3)
    {
LABEL_17:

      swift_bridgeObjectRelease(a2);
      swift_release(v19);
      aBlock[0] = a3;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, aBlock, &type metadata for DOCDisplayMode, &type metadata for Int);
      __break(1u);
      return;
    }
    objc_msgSend(a1, "loadViewIfNeeded");
    v31 = *(void **)&a1[v20];
    if (!v31)
    {
LABEL_16:

      swift_bridgeObjectRelease(a2);
      __break(1u);
      goto LABEL_17;
    }
    if (objc_msgSend(v31, "effectiveUserInterfaceLayoutDirection"))
      v30 = 3;
    else
      v30 = 4;
  }
  else
  {
    v30 = 2;
  }
  objc_msgSend(a1, "loadViewIfNeeded");
  v32 = *(void **)&a1[v20];
  if (!v32)
  {
LABEL_15:

    swift_bridgeObjectRelease(a2);
    __break(1u);
    goto LABEL_16;
  }
  v33 = v32;
  sub_10024B194(v30, 0);

  v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter(v34);
  static DispatchTime.now()(v35);
  + infix(_:_:)(v13, 0.1);
  v55 = *(char **)(v10 + 8);
  v36 = v48;
  ((void (*)(char *, uint64_t))v55)(v13, v48);
  v37 = swift_allocObject(&unk_1005D4C68, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_10024B150;
  *(_QWORD *)(v37 + 24) = v19;
  aBlock[4] = sub_100066584;
  v57 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D4C80;
  v38 = _Block_copy(aBlock);
  v39 = v57;
  swift_retain();
  v40 = swift_release(v39);
  v41 = v49;
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = _swiftEmptyArrayStorage;
  v42 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v43 = sub_10006922C((uint64_t *)&unk_100647540);
  v44 = sub_1000791AC();
  v45 = v52;
  v46 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v43, v44, v54, v42);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v41, v45, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
  ((void (*)(char *, uint64_t))v55)(v15, v36);
  swift_release(v19);
}

id sub_10024AC54(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v3, "loadViewIfNeeded", v7);
  v11 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v11)
  {
    v12 = v11;
    sub_1001A1EF0(a2, 1);

    result = objc_msgSend(v3, "isFirstResponder");
    if ((result & 1) == 0)
    {
      v13 = Logger.UI.unsafeMutableAddressor(result);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v13, v5);
      v14 = v3;
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.debug.getter(v15);
      v17 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        v18 = swift_slowAlloc(22, -1);
        v28 = v17;
        v19 = v18;
        v29 = swift_slowAlloc(64, -1);
        v32 = v29;
        *(_DWORD *)v19 = 136315394;
        v31 = sub_1000544FC(0xD000000000000026, 0x800000010051D010, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
        *(_WORD *)(v19 + 12) = 2080;
        v27 = v19 + 14;
        v20 = v14;
        v21 = objc_msgSend(v20, "description");
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v30 = v14;
        v24 = v23;

        v31 = sub_1000544FC(v22, v24, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);

        v25 = v24;
        v14 = v30;
        swift_bridgeObjectRelease(v25);
        _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v28, "%s Taking first responder for Type Ahead: %s", (uint8_t *)v19, 0x16u);
        v26 = v29;
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return objc_msgSend(v14, "establishFirstResponder");
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *_s5Files31DOCItemCollectionViewControllerC5items3forSay26DocumentManagerExecutables18DOCTypeToFocusItem_pGAF0klmE0C_tF_0()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t ObjectType;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14[2];
  _QWORD *v15;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  v2 = v0;
  v3 = swift_bridgeObjectRetain(v1);
  v4 = (uint64_t)sub_1002498D8(v3, (uint64_t)v2);
  swift_bridgeObjectRelease(v1);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v4);
    return _swiftEmptyArrayStorage;
  }
  if (v4 < 0)
    v13 = v4;
  else
    v13 = v4 & 0xFFFFFFFFFFFFFF8;
  v5 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v5)
    goto LABEL_16;
LABEL_3:
  v15 = _swiftEmptyArrayStorage;
  result = (_QWORD *)sub_1001551EC(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = v15;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      }
      else
      {
        v9 = *(_QWORD *)(v4 + 8 * v7 + 32);
        swift_unknownObjectRetain(v9);
      }
      ObjectType = swift_getObjectType(v9);
      DOCNode.typeToFocusItem.getter(v14, ObjectType);
      swift_unknownObjectRelease(v9);
      v15 = v8;
      v12 = v8[2];
      v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        sub_1001551EC(v11 > 1, v12 + 1, 1);
        v8 = v15;
      }
      ++v7;
      v8[2] = v12 + 1;
      sub_1000E85C4(v14, (uint64_t)&v8[5 * v12 + 4]);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease(v4);
    return v8;
  }
  __break(1u);
  return result;
}

unint64_t sub_10024B098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006490B0;
  if (!qword_1006490B0)
  {
    v1 = sub_10004F2F0(255, &qword_1006490A8, UIPress_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1006490B0);
  }
  return result;
}

uint64_t sub_10024B0F0(uint64_t *a1)
{
  return sub_10024B104(a1);
}

uint64_t sub_10024B104(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = IndexPath.section.getter(a1);
  return IndexPath.init(row:section:)(v1, v2);
}

void sub_10024B150()
{
  uint64_t v0;

  sub_10011CD5C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10024B15C()
{
  uint64_t v0;

  sub_100118F24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10024B164()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10024B194(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  char v50;
  uint64_t (**v51)(void *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v52;
  unint64_t v53;
  char v54[24];
  _BYTE v55[24];
  char v56[24];

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  v7 = __chkstk_darwin(v6);
  v52 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - v9;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100640EF0 != -1)
    swift_once(&qword_100640EF0, sub_10027CFA4);
  v15 = sub_10007E788(v11, (uint64_t)qword_10064AD28);
  swift_beginAccess(v15, v56, 0, 0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v17 = Date.timeIntervalSinceNow.getter(v16);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(double *)&qword_10064AD40 = -v17;
  Date.init()(v18);
  swift_beginAccess(v15, v55, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v15, v14, v11);
  swift_endAccess(v55);
  v19 = objc_msgSend((id)objc_opt_self(DOCDeprecatedUIMenuController), "shared");
  objc_msgSend(v19, "hideMenuIfActive");
  swift_unknownObjectRelease(v19);
  v20 = objc_msgSend(v3, "effectiveUserInterfaceLayoutDirection");
  if (a1 == 4)
  {
    if (v20 == (id)1)
      a1 = 3;
    else
      a1 = 4;
  }
  else if (a1 == 3)
  {
    if (v20 == (id)1)
      a1 = 4;
    else
      a1 = 3;
  }
  v53 = a2;
  v21 = a2 & 3;
  v22 = objc_msgSend(v3, "indexPathsForSelectedItems");
  if (v22)
  {

    result = objc_msgSend(v3, "indexPathsForSelectedItems");
    if (!result)
    {
      __break(1u);
      goto LABEL_32;
    }
    v24 = result;
    v25 = type metadata accessor for IndexPath(0);
    v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

    v27 = *(_QWORD *)(v26 + 16);
    swift_bridgeObjectRelease(v26);
    if (v27)
    {
      v28 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
      v29 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
          + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
      swift_beginAccess(v29, v55, 0, 0);
      sub_1000271D4(v29, (uint64_t)v10, (uint64_t *)&unk_100642710);
      v30 = *(_QWORD *)(v25 - 8);
      v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
      LODWORD(v29) = v31(v10, 1, v25);
      sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
      if ((_DWORD)v29 != 1 && v21 != 2)
      {
        v32 = v53;
        if ((v53 & 1) == 0)
        {
LABEL_17:
          if (qword_100640EE8 != -1)
            swift_once(&qword_100640EE8, sub_10027CDDC);
          static os_log_type_t.debug.getter();
          v33 = sub_10006922C((uint64_t *)&unk_100644560);
          v34 = swift_allocObject(v33, 72, 7);
          *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v34 + 56) = type metadata accessor for DOCItemCollectionView();
          *(_QWORD *)(v34 + 64) = sub_10005A360((unint64_t *)&qword_100649178, (uint64_t (*)(uint64_t))type metadata accessor for DOCItemCollectionView, (uint64_t)&protocol conformance descriptor for NSObject);
          *(_QWORD *)(v34 + 32) = v3;
          v3;
          os_log(_:dso:log:type:_:)("Changing focus in in %p", v51);
          swift_bridgeObjectRelease(v34);
          return (id)sub_100250DA4(a1);
        }
        if ((objc_msgSend(v3, "isEditing") & 1) != 0)
          return (id)sub_1002501A4(a1, (v32 >> 1) & 1);
        v38 = &v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
        Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v37);
        if (!Strong)
          goto LABEL_17;
        v40 = Strong;
        v51 = (uint64_t (**)(void *, _UNKNOWN **, uint64_t, uint64_t))*((_QWORD *)v38 + 1);
        v41 = sub_10006922C(&qword_100644BD0);
        v42 = *(unsigned __int8 *)(v30 + 80);
        v43 = (v42 + 32) & ~v42;
        v44 = swift_allocObject(v41, v43 + *(_QWORD *)(v30 + 72), v42 | 7);
        *(_OWORD *)(v44 + 16) = xmmword_1004D9670;
        v45 = *(_QWORD *)&v3[v28]
            + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
        swift_beginAccess(v45, v54, 0, 0);
        v46 = v52;
        sub_1000271D4(v45, v52, (uint64_t *)&unk_100642710);
        result = (id)v31((char *)v46, 1, v25);
        if ((_DWORD)result != 1)
        {
          v48 = v44 + v43;
          ObjectType = swift_getObjectType(v40, v47);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v48, v46, v25);
          v50 = v51[12](v3, &off_1005E7FD8, v44, ObjectType);
          swift_setDeallocating(v44);
          swift_arrayDestroy(v48, *(_QWORD *)(v44 + 16), v25);
          swift_deallocClassInstance(v44, 32, 7);
          swift_unknownObjectRelease(v40);
          v32 = v53;
          if ((v50 & 1) == 0)
            goto LABEL_17;
          return (id)sub_1002501A4(a1, (v32 >> 1) & 1);
        }
LABEL_32:
        __break(1u);
        return result;
      }
    }
  }
  if (qword_100640EE8 != -1)
    swift_once(&qword_100640EE8, sub_10027CDDC);
  static os_log_type_t.debug.getter();
  v35 = sub_10006922C((uint64_t *)&unk_100644560);
  v36 = swift_allocObject(v35, 72, 7);
  *(_OWORD *)(v36 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v36 + 56) = type metadata accessor for DOCItemCollectionView();
  *(_QWORD *)(v36 + 64) = sub_10005A360((unint64_t *)&qword_100649178, (uint64_t (*)(uint64_t))type metadata accessor for DOCItemCollectionView, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v36 + 32) = v3;
  v3;
  os_log(_:dso:log:type:_:)("Focusing inital item in %p", v51);
  swift_bridgeObjectRelease(v36);
  if (v21 == 2 && (unint64_t)(a1 - 1) <= 3)
    a1 = qword_1004DE068[a1 - 1];
  return (id)sub_1002511EC(a1, v21 == 2);
}

void sub_10024B9C0(void *a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(char *, const char *, _QWORD *, uint64_t, uint64_t);
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate]);
  if (!Strong)
    goto LABEL_5;
  v6 = Strong;
  v7 = *((_QWORD *)v4 + 1);
  ObjectType = swift_getObjectType(Strong);
  v16 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v15[0] = a1;
  v9 = *(uint64_t (**)(char *, const char *, _QWORD *, uint64_t, uint64_t))(v7 + 32);
  v10 = a1;
  v11 = (void *)v9(v1, "moveHere:", v15, ObjectType, v7);
  swift_unknownObjectRelease(v6);
  sub_10000CB4C((uint64_t)v15, &qword_100642730);
  if (!v11)
    goto LABEL_5;
  v12 = type metadata accessor for DOCItemCollectionViewController(0);
  v13 = (id)swift_dynamicCastClass(v11, v12);
  if (!v13)
  {

LABEL_5:
    v13 = v2;
  }
  v16 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v15[0] = a1;
  v14 = a1;
  sub_100188C58();
  sub_10000CB4C((uint64_t)v15, &qword_100642730);
  objc_msgSend(v2, "setEditing:animated:", 0, 1);

}

void sub_10024BB6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  BOOL v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  id v26;
  Class isa;
  _OWORD v28[2];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "loadViewIfNeeded", v7);
  v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v11 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v11)
  {
    __break(1u);
    goto LABEL_23;
  }
  v12 = objc_msgSend(v11, "indexPathsForSelectedItems");
  v13 = v12;
  if (v12)
  {
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v5);

    v13 = *(void **)(v14 + 16);
    swift_bridgeObjectRelease(v14);
    LODWORD(v13) = v13 != 0;
  }
  if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments"))v15 = (_DWORD)v13 == 0;
  else
    v15 = 1;
  if (!v15)
  {
    if (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] == 1)
    {
      v16 = sub_100038208();
      if (v16)
      {
        v17 = v16;
        memset(v28, 0, sizeof(v28));
        v18 = DOCItemCollectionViewController.actionContext(from:)();
        sub_10000CB4C((uint64_t)v28, &qword_100642730);
        objc_msgSend(v1, "performActionWithAction:actionContext:", v17, v18);

        return;
      }
    }
    v19 = *(void **)&v1[v10];
    if (v19 && (v20 = objc_msgSend(v19, "indexPathsForSelectedItems")) != 0)
    {
      v21 = v20;
      v22 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v5);

      if (!v22[2])
      {
LABEL_14:
        v23 = 1;
        goto LABEL_17;
      }
    }
    else
    {
      v22 = _swiftEmptyArrayStorage;
      if (!_swiftEmptyArrayStorage[2])
        goto LABEL_14;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, (unint64_t)v22+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v23 = 0;
LABEL_17:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v23, 1, v5);
    v24 = swift_bridgeObjectRelease(v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v24) == 1)
    {
      sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    objc_msgSend(v1, "loadViewIfNeeded");
    v25 = *(void **)&v1[v10];
    if (v25)
    {
      v26 = v25;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v1, "collectionView:performPrimaryActionForItemAtIndexPath:", v26, isa);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return;
    }
LABEL_23:
    __break(1u);
  }
}

void sub_10024BE54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *Strong;
  void *v20;
  void *v21;
  id v22;
  Class isa;
  uint64_t v24;

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10024C214() & 1) == 0)
  {
    v9 = sub_10024C39C();
    if (!v9)
      return;

  }
  if ((sub_10024C214() & 1) == 0)
    goto LABEL_13;
  v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v11 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v11 || (v12 = objc_msgSend(v11, "indexPathsForSelectedItems")) == 0)
  {
    v14 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
      goto LABEL_8;
LABEL_10:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, (unint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v15 = 0;
    goto LABEL_11;
  }
  v13 = v12;
  v14 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v5);

  if (v14[2])
    goto LABEL_10;
LABEL_8:
  v15 = 1;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v15, 1, v5);
  swift_bridgeObjectRelease(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    objc_msgSend(v1, "loadViewIfNeeded");
    v21 = *(void **)&v1[v10];
    if (v21)
    {
      v22 = v21;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v1, "collectionView:performPrimaryActionForItemAtIndexPath:", v22, isa);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
LABEL_13:
  v16 = sub_10024C39C();
  if (v16)
  {
    v18 = v16;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v17);
    if (Strong)
    {
      v20 = Strong;
      objc_msgSend(Strong, "didConfirmPickIn:", v18);

      swift_unknownObjectRelease(v20);
    }
    else
    {

    }
  }
}

uint64_t sub_10024C0FC()
{
  char *v0;
  uint64_t result;
  id v2;
  uint64_t v3;
  uint64_t v4;

  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    return result;
  }
  v2 = objc_msgSend((id)result, "indexPathsForSelectedItems");
  if (v2)
  {
    v3 = type metadata accessor for IndexPath(0);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    v2 = *(id *)(v4 + 16);
    swift_bridgeObjectRelease(v4);
    LOBYTE(v2) = v2 != 0;
  }
  if ((!objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments")|| (v2 & 1) == 0)&& (sub_10024C214() & 1) == 0)
  {
    result = (uint64_t)sub_10024C39C();
    if (!result)
      return result;

  }
  return 1;
}

id sub_10024C214()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  if ((objc_msgSend(v1, "forMovingDocuments") & 1) == 0
    && (!objc_msgSend(v1, "forPickingDocuments")
     || (objc_msgSend(v1, "forSavingDocuments") & 1) == 0)
    && !objc_msgSend(v1, "forPickingFolders"))
  {
    return 0;
  }
  v2 = (uint64_t)sub_100034068(0);
  v3 = v2;
  if (!((unint64_t)v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_19:
    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if (v2 >= 0)
    v2 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v2))
    goto LABEL_19;
LABEL_7:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v1 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    v1 = *(void **)(v3 + 32);
    swift_unknownObjectRetain(v1);
  }
  swift_bridgeObjectRelease(v3);
  v0 = (uint64_t)sub_100034068(0);
  if (!((unint64_t)v0 >> 62))
  {
    v4 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_24:
  if (v0 < 0)
    v7 = v0;
  else
    v7 = v0 & 0xFFFFFFFFFFFFFF8;
  v4 = _CocoaArrayWrapper.endIndex.getter(v7);
LABEL_12:
  swift_bridgeObjectRelease(v0);
  if (v4 != 1 || !objc_msgSend(v1, "isFolder"))
  {
    swift_unknownObjectRelease(v1);
    return 0;
  }
  v5 = objc_msgSend(v1, "isReadable");
  swift_unknownObjectRelease(v1);
  return v5;
}

void *sub_10024C39C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  id v16;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  if ((objc_msgSend(v1, "forMovingDocuments") & 1) == 0
    && (!objc_msgSend(v1, "forPickingDocuments")
     || (objc_msgSend(v1, "forSavingDocuments") & 1) == 0)
    && !objc_msgSend(v1, "forPickingFolders"))
  {
    return 0;
  }
  Strong = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting, v2);
  if (!Strong)
    return 0;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v4)
  {
    __break(1u);
LABEL_26:
    v16 = Strong;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCPickerOperation, &v16, &type metadata for DOCPickerOperation, &type metadata for Int);
    __break(1u);
    JUMPOUT(0x10024C5A8);
  }
  v5 = Strong;
  v6 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v6 + 16) & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v7);
LABEL_10:
    ObjectType = swift_getObjectType(v7, v8);
    v10 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    swift_unknownObjectRelease(v7);
    if (!v10)
    {
LABEL_20:
      swift_unknownObjectRelease(v5);
      return v10;
    }
    v11 = (uint64_t)sub_100034068(0);
    v12 = v11;
    if ((unint64_t)v11 >> 62)
    {
      if (v11 >= 0)
        v11 &= 0xFFFFFFFFFFFFFF8uLL;
      v13 = _CocoaArrayWrapper.endIndex.getter(v11);
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v12);
    if (!v13)
    {
      Strong = objc_msgSend(v5, "pickerOperationFor:", v10);
      switch((unint64_t)Strong)
      {
        case 0uLL:
        case 3uLL:
          v14 = objc_msgSend(v1, "forPickingFolders");
          swift_unknownObjectRelease(v5);
          if ((v14 & 1) != 0)
            return v10;

          break;
        case 1uLL:
        case 2uLL:
          goto LABEL_20;
        default:
          goto LABEL_26;
      }
      return 0;
    }

    goto LABEL_15;
  }
  v7 = *(_QWORD *)(v6 + 8);
  swift_unknownObjectRetain(v7);
  if (v7)
    goto LABEL_10;
LABEL_15:
  swift_unknownObjectRelease(v5);
  return 0;
}

void sub_10024C604(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t, __n128);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  _QWORD *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t All;
  uint64_t v51;
  uint64_t ObjectType;
  void *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, char *, uint64_t);
  _OWORD v62[2];
  char v63[40];

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - v8;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  if ((sub_10024C214() & 1) != 0)
    goto LABEL_4;
  v17 = sub_10024C39C();
  if (v17)
  {

LABEL_4:
    sub_10024BE54();
    return;
  }
  v18 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (((objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingFolders") & 1) != 0|| objc_msgSend(v18, "forPickingDocuments"))&& (v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] & 1) == 0)
  {
    objc_msgSend(v2, "performOpen:", a1);
    return;
  }
  objc_msgSend(v2, "loadViewIfNeeded");
  v19 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v20 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v20)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v21 = objc_msgSend(v20, "indexPathsForSelectedItems");
  if (!v21)
    return;
  v22 = v21;
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v10);

  v24 = *(_QWORD *)(v23 + 16);
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
  if (v24 != 1)
    return;
  objc_msgSend(v2, "loadViewIfNeeded", v25);
  v26 = *(void **)&v2[v19];
  if (!v26)
    goto LABEL_42;
  v27 = objc_msgSend(v26, "indexPathsForSelectedItems");
  if (!v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v28 = v27;
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v10);

  if (*(_QWORD *)(v29 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, v29 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v30(v9, 0, 1, v10);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v30(v9, 1, 1, v10);
  }
  v31 = swift_bridgeObjectRelease(v29);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  if (v32(v9, 1, v10, v31) == 1)
  {
    v33 = (uint64_t)v9;
LABEL_27:
    sub_10000CB4C(v33, (uint64_t *)&unk_100642710);
    return;
  }
  v61 = *(uint64_t (**)(char *, char *, uint64_t))(v11 + 32);
  v34 = v61(v16, v9, v10);
  if (IndexPath.count.getter(v34) != 2)
    goto LABEL_24;
  v35 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v35)
  {
LABEL_44:
    __break(1u);
    return;
  }
  if ((objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection], "isGathering") & 1) == 0&& (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0&& (sub_100195148((uint64_t)v16) & 1) != 0)
  {
LABEL_24:
    v30(v6, 1, 1, v10);
LABEL_26:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v33 = (uint64_t)v6;
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v16, v10);
  v30(v6, 0, 1, v10);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v32)(v6, 1, v10) == 1)
    goto LABEL_26;
  v61(v13, v6, v10);
  v36 = sub_10017A754((uint64_t)v13, 0);
  if (v36)
  {
    v38 = v36;
    v39 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierRename);
    v41 = v40;
    v42 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v42, v63);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v38;
    *(_QWORD *)&v62[0] = inited;
    specialized Array._endMutation()(inited);
    v60 = v41;
    v61 = *(uint64_t (**)(char *, char *, uint64_t))&v62[0];
    v44 = (_QWORD *)(v35 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    v45 = *(_BYTE *)(v35 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
    v59 = v39;
    if ((v45 & 1) != 0)
    {
      v46 = *(_QWORD *)(*v44 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v38);
      v47 = v46;
    }
    else
    {
      v46 = v44[1];
      swift_unknownObjectRetain(v46);
      v47 = v38;
    }
    swift_unknownObjectRetain(v47);
    memset(v62, 0, sizeof(v62));
    v48 = (char *)DOCItemCollectionViewController.actionContext(from:)();
    sub_10000CB4C((uint64_t)v62, &qword_100642730);
    v49 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(v61, v49);
    if (All)
    {
      v51 = All;
      v57 = v38;
      if (v46)
      {
        ObjectType = swift_getObjectType(v46);
        v53 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      }
      else
      {
        v53 = 0;
      }
      v54 = v60;
      DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v58, v60, v51, v53, v48);
      swift_unknownObjectRelease(v46);

      swift_bridgeObjectRelease(v51);
      v38 = v57;
    }
    else
    {

      swift_unknownObjectRelease(v46);
      v54 = v60;
    }
    swift_bridgeObjectRelease(v61);
    swift_unknownObjectRelease(v38);
    v37 = swift_bridgeObjectRelease(v54);
  }
  v55 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v55(v13, v10, v37);
  ((void (*)(char *, uint64_t))v55)(v16, v10);
}

void sub_10024CBEC(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;
  char v12[24];

  v3 = a2 + 16;
  v4 = swift_allocObject(&unk_1005D4D40, 24, 7);
  swift_beginAccess(v3, v12, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  swift_unknownObjectWeakInit(v4 + 16);

  v6 = swift_allocObject(&unk_1005D4DE0, 32, 7);
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = a1;
  aBlock[4] = sub_100252730;
  v11 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D4DF8;
  v7 = _Block_copy(aBlock);
  v8 = v11;
  v9 = a1;
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

void sub_10024CCE4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Available;
  double v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char v41;
  char *v42;
  id v43;
  char *v44;
  unint64_t v45;
  objc_class *v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void (**v59)(_QWORD, _QWORD, _QWORD);
  char *v60;
  Class isa;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  objc_super v71;
  char v72[24];

  v4 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v4);
  v6 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v72, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v8 = (char *)Strong;
  v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8);
  swift_bridgeObjectRetain(v9);
  v10 = sub_10006922C((uint64_t *)&unk_1006424B0);
  Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v9, v10);
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v9).n128_u64[0];
  v13 = *(void **)&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v13
    && (v14 = objc_msgSend(v13, "window", v12)) != 0
    && (v15 = v14, v16 = objc_msgSend(v14, "windowScene"), v15, v16))
  {
    if (a2)
    {
      v17 = objc_msgSend(a2, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

      v18 = type metadata accessor for UTType(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 0, 1, v18);
    }
    else
    {
      v20 = type metadata accessor for UTType(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    }
    v21 = UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)(v6);

    sub_10000CB4C((uint64_t)v6, &qword_100643EC0);
    v19 = v21 ^ 1;
    if (!a2)
      goto LABEL_27;
  }
  else
  {
    v19 = 1;
    if (!a2)
      goto LABEL_27;
  }
  v22 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration;
  v23 = *(void **)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v24 = a2;
  if (v19 & 1 | ((objc_msgSend(v23, "isFilesApp") & 1) == 0))
  {
LABEL_26:

LABEL_27:
    sub_1001851D0(Available, a2);

    swift_bridgeObjectRelease(Available);
    return;
  }
  v64 = v22;
  v69 = v8;
  v65 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager;
  v25 = *(id *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  v26 = sub_10034EEA4();

  v63[1] = v10;
  v66 = a2;
  v67 = v24;
  v68 = Available;
  if (!((unint64_t)v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
    if (v27)
      goto LABEL_14;
    goto LABEL_25;
  }
LABEL_38:
  if (v26 < 0)
    v62 = v26;
  else
    v62 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v27 = _CocoaArrayWrapper.endIndex.getter(v62);
  if (!v27)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v26, 2);
    Available = v68;
    v8 = v69;
    a2 = v66;
    v24 = v67;
    goto LABEL_26;
  }
LABEL_14:
  v28 = UIDocumentBrowserActionIdentifierNewWindow;
  v29 = 4;
  while (1)
  {
    if ((v26 & 0xC000000000000001) != 0)
      v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29 - 4, v26);
    else
      v30 = *(id *)(v26 + 8 * v29);
    v31 = v30;
    v32 = v29 - 3;
    if (__OFADD__(v29 - 4, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    v33 = objc_msgSend(v30, "identifier");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    if (v34 == v37 && v36 == v38)
    {
      swift_bridgeObjectRelease_n(v26, 2);
      goto LABEL_31;
    }
    v40 = v38;
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v37, v38, 0);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v40);
    if ((v41 & 1) != 0)
      break;

    ++v29;
    if (v32 == v27)
      goto LABEL_25;
  }
  v36 = v26;
LABEL_31:
  swift_bridgeObjectRelease_n(v36, 2);
  swift_bridgeObjectRelease(v68);
  v42 = v69;
  v43 = *(id *)&v69[v64];
  v44 = v42;
  v45 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
  v46 = (objc_class *)type metadata accessor for DOCActionContext();
  v47 = (char *)objc_allocWithZone(v46);
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = 0;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v43;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v44;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v45;
  v71.receiver = v47;
  v71.super_class = v46;
  v48 = objc_msgSendSuper2(&v71, "init");
  v49 = *(void **)&v42[v65];
  v50 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v51 = swift_allocObject(v50, 40, 7);
  *(_OWORD *)(v51 + 16) = xmmword_1004D9B40;
  v52 = v67;
  *(_QWORD *)(v51 + 32) = v67;
  v70 = v51;
  specialized Array._endMutation()(v51);
  v53 = v70;
  v54 = v52;
  v55 = v49;
  if (objc_msgSend(v31, "requiresResolvedItems"))
  {
    v56 = v31;
    v57 = v48;
    sub_10035E100(v53, v56, v57);
    swift_bridgeObjectRelease(v53);

    v44 = (char *)v57;
  }
  else
  {
    v58 = objc_msgSend(v31, "unresolvedHandler");
    if (v58)
    {
      v59 = (void (**)(_QWORD, _QWORD, _QWORD))v58;
      v60 = (char *)v48;
      _Block_copy(v59);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, char *))v59)[2](v59, isa, v60);

      _Block_release(v59);
      _Block_release(v59);
      swift_bridgeObjectRelease(v53);

      v44 = v60;
    }
    else
    {
      swift_bridgeObjectRelease(v53);
    }
  }

}

void sub_10024D428(void *a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;

  v3 = objc_msgSend(v1, "presentedViewController");

  if (v3)
  {
    v4 = objc_msgSend(v1, "presentedViewController");
    if (v4)
    {
      v15 = v4;
      objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  else
  {
    v5 = objc_msgSend(v1, "viewIfLoaded");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "window");

      if (v7)
      {
        v8 = objc_msgSend(v7, "rootViewController");

        if (v8)
        {
          v9 = objc_msgSend(v8, "presentedViewController");

          if (v9)
          {
            if (swift_dynamicCastObjCProtocolConditional(v9, 1))
            {
              objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);

              return;
            }

          }
        }
      }
    }
    if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
      && ((v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController,
           *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
       || v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1)
      && objc_msgSend(a1, "doc_isCancellingKeyCommand"))
    {
      v11 = *(_QWORD *)&v1[v10];
      if (v11)
      {
        swift_retain();
        sub_10038EF44();
        swift_release(v11);
      }
    }
    else
    {
      objc_msgSend(v1, "loadViewIfNeeded");
      v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (v12)
      {
        if (*(_BYTE *)(*(_QWORD *)(v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
                      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) == 1
          && (objc_msgSend(v1, "isEditing") & 1) == 0
          && objc_msgSend(a1, "doc_isCancellingKeyCommand"))
        {
          sub_1002447C4(0);
        }
        else if (objc_msgSend(v1, "isEditing")
               && objc_msgSend(a1, "doc_isCancellingKeyCommand"))
        {
          objc_msgSend(v1, "setEditing:animated:", 0, 1);
        }
        else if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI"))
        {
          Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
          if (Strong)
          {
            v14 = Strong;
            objc_msgSend(Strong, "didIndicateCancelPicker");
            swift_unknownObjectRelease(v14);
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

_QWORD *DOCItemCollectionViewController.keyCommands.getter()
{
  char *v0;
  char *v1;
  _QWORD *result;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPopoverOrWidget") & 1) != 0)return 0;
  result = objc_msgSend(v0, "loadViewIfNeeded");
  v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = (void *)objc_opt_self(DOCKeyboardFocusManager);
  v6 = v4;
  v7 = objc_msgSend(v5, "directionalKeyCommandsWithAction:prioritize:", "performKeyboardFocusKeyCommand:", 0);
  v8 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  sub_100130620(v9);
  result = objc_msgSend(v1, "loadViewIfNeeded");
  v10 = *(void **)&v1[v3];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v11 = v10;
  v12 = objc_msgSend(v5, "selectionKeyCommandsWithAction:prioritize:", "performKeyboardFocusKeyCommand:", 0);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v8);

  sub_100130620(v13);
  v14 = objc_msgSend((id)objc_opt_self(DOCKeyCommandController), "dismissingKeyCommandsWithAction:", "performDismiss:");
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v8);

  sub_100130620(v15);
  return _swiftEmptyArrayStorage;
}

uint64_t DOCItemCollectionViewController.canPerformAction(_:withSender:)(const char *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  id v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  char *v50;
  objc_class *v51;
  unsigned __int8 v52;
  objc_class *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  objc_super v58;
  objc_super v59;
  id v60[3];
  uint64_t v61;
  _BYTE v62[24];
  uint64_t v63;

  sub_1000271D4(a2, (uint64_t)v62, &qword_100642730);
  if (v63)
  {
    v5 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    if ((swift_dynamicCast(v60, v62, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
    {
      v6 = v60[0];
      v7 = objc_msgSend(v60[0], "doc_isDismissingKeyCommand");

      if ((v7 & 1) != 0)
        goto LABEL_7;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v62, &qword_100642730);
  }
  sub_10024E254((uint64_t)a1, a2);
  if (v8 != 2)
  {
    v12 = v8 != 0;
    return v12 & 1;
  }
LABEL_7:
  sub_1000271D4(a2, (uint64_t)v62, &qword_100642730);
  if (!v63)
  {
    sub_10000CB4C((uint64_t)v62, &qword_100642730);
    goto LABEL_13;
  }
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100649168, UIMenuController_ptr);
  if ((swift_dynamicCast(v60, v62, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
  {
LABEL_13:
    sub_1000271D4(a2, (uint64_t)v62, &qword_100642730);
    goto LABEL_14;
  }
  v10 = v60[0];
  sub_1000271D4(a2, (uint64_t)v62, &qword_100642730);
  if (v10)
  {

    sub_10000CB4C((uint64_t)v62, &qword_100642730);
    v11 = 1;
    goto LABEL_19;
  }
LABEL_14:
  sub_100070EDC((uint64_t)v62, (uint64_t)v60, &qword_100642730);
  if (v61)
  {
    v13 = sub_10004F2F0(0, &qword_100649160, UIContextMenuInteraction_ptr);
    if ((swift_dynamicCast(&v57, v60, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
    {

      v11 = 1;
      goto LABEL_19;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v60, &qword_100642730);
  }
  v11 = 0;
LABEL_19:
  result = static Selector.== infix(_:_:)("cut:", a1);
  if ((result & 1) != 0)
    goto LABEL_20;
  if ((static Selector.== infix(_:_:)("copy:", a1) & 1) != 0)
  {
    v27 = (uint64_t)sub_100034068(0);
    v28 = v27;
    if ((unint64_t)v27 >> 62)
    {
      if (v27 >= 0)
        v27 &= 0xFFFFFFFFFFFFFF8uLL;
      v29 = _CocoaArrayWrapper.endIndex.getter(v27);
    }
    else
    {
      v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v28);
    if (v29 < 1)
      v30 = 1;
    else
      v30 = v11;
    if ((v30 & 1) == 0
      && ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
       || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
       && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0))
    {
      v31 = (void *)FPActionCopy;
      v32 = sub_100034068(0);
      v12 = sub_1003598CC(v31, (uint64_t)v32);
      swift_bridgeObjectRelease(v32);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  result = static Selector.== infix(_:_:)("paste:", a1);
  if ((result & 1) == 0)
  {
    result = static Selector.== infix(_:_:)("selectAll:", a1);
    if ((result & 1) != 0)
    {
      if ((v11 & 1) == 0)
      {
        result = (uint64_t)sub_10024F2B0();
        v12 = result;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    result = static Selector.== infix(_:_:)("delete:", a1);
    if ((result & 1) != 0)
    {
LABEL_20:
      v12 = 0;
LABEL_21:
      v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(result);
      v17 = static os_log_type_t.info.getter(v16);
      v18 = sub_10006922C((uint64_t *)&unk_100644560);
      v19 = swift_allocObject(v18, 112, 7);
      *(_OWORD *)(v19 + 16) = xmmword_1004D4CE0;
      v20 = NSStringFromSelector(a1);
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      *(_QWORD *)(v19 + 56) = &type metadata for String;
      v24 = sub_10006A638();
      *(_QWORD *)(v19 + 32) = v21;
      *(_QWORD *)(v19 + 40) = v23;
      v25 = 20302;
      if ((v12 & 1) != 0)
        v25 = 5457241;
      v26 = 0xE200000000000000;
      *(_QWORD *)(v19 + 96) = &type metadata for String;
      *(_QWORD *)(v19 + 104) = v24;
      if ((v12 & 1) != 0)
        v26 = 0xE300000000000000;
      *(_QWORD *)(v19 + 64) = v24;
      *(_QWORD *)(v19 + 72) = v25;
      *(_QWORD *)(v19 + 80) = v26;
      os_log(_:dso:log:type:_:)("Can perform key command with action '%@': %@", 44, 2, &_mh_execute_header, v15, v17, v19);

      swift_bridgeObjectRelease(v19);
      return v12 & 1;
    }
    result = static Selector.== infix(_:_:)("performKeyboardFocusKeyCommand:", a1);
    if ((result & 1) != 0)
      goto LABEL_48;
    result = static Selector.== infix(_:_:)("scanDocument:", a1);
    if ((result & 1) != 0)
    {
      if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
        && (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
         || (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
      {
        goto LABEL_20;
      }
      sub_1000271D4(a2, (uint64_t)v60, &qword_100642730);
      v38 = v61;
      if (v61)
      {
        v39 = sub_10007E7A0(v60, v61);
        v40 = *(_QWORD *)(v38 - 8);
        v41 = __chkstk_darwin(v39);
        v43 = (char *)&v56 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v40 + 16))(v43, v41);
        v44 = _bridgeAnythingToObjectiveC<A>(_:)(v43, v38);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v38);
        sub_100068588(v60);
      }
      else
      {
        v44 = 0;
      }
      v51 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
      v58.receiver = v2;
      v58.super_class = v51;
      v52 = objc_msgSendSuper2(&v58, "canPerformAction:withSender:", a1, v44);
    }
    else
    {
      result = static Selector.== infix(_:_:)("startFolderCreation:", a1);
      if ((result & 1) == 0)
      {
        result = static Selector.== infix(_:_:)("displayInfoForCurrentItem:", a1);
        if ((result & 1) == 0)
        {
          result = static Selector.== infix(_:_:)("pasteboardMoveToCollectionView:", a1);
          if ((result & 1) == 0)
          {
            result = static Selector.== infix(_:_:)("captureTextFromCamera:", a1);
            if ((result & 1) != 0)
              goto LABEL_20;
            result = static Selector.== infix(_:_:)("performDismiss:", a1);
            if ((result & 1) == 0)
            {
              if ((static Selector.== infix(_:_:)("performCommandReturnKey:", a1) & 1) != 0
                || (result = static Selector.== infix(_:_:)("performConfirmPickerExportOrDrillIn:", a1),
                    (result & 1) != 0))
              {
                sub_10024E254((uint64_t)a1, a2);
                v12 = result & 1;
                goto LABEL_21;
              }
              goto LABEL_20;
            }
            if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
              || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
              && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
            {
              result = (uint64_t)objc_msgSend(v2, "loadViewIfNeeded");
              v54 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
              if (!v54)
                goto LABEL_95;
              if ((*(_BYTE *)(*(_QWORD *)(v54
                                         + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
                             + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) & 1) == 0)
              {
                result = (uint64_t)objc_msgSend(v2, "isEditing");
                if ((result & 1) == 0)
                {
                  v55 = objc_msgSend(v2, "presentedViewController");

                  if (!v55)
                  {
                    result = (uint64_t)objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI");
                    v12 = result;
                    goto LABEL_21;
                  }
                }
              }
            }
LABEL_48:
            v12 = 1;
            goto LABEL_21;
          }
        }
      }
      if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
        && (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
         || (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
      {
        goto LABEL_20;
      }
      sub_1000271D4(a2, (uint64_t)v60, &qword_100642730);
      v45 = v61;
      if (v61)
      {
        v46 = sub_10007E7A0(v60, v61);
        v47 = *(_QWORD *)(v45 - 8);
        v48 = __chkstk_darwin(v46);
        v50 = (char *)&v56 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v47 + 16))(v50, v48);
        v44 = _bridgeAnythingToObjectiveC<A>(_:)(v50, v45);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v45);
        sub_100068588(v60);
      }
      else
      {
        v44 = 0;
      }
      v53 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
      v59.receiver = v2;
      v59.super_class = v53;
      v52 = objc_msgSendSuper2(&v59, "canPerformAction:withSender:", a1, v44);
    }
    v12 = v52;
    swift_unknownObjectRelease(v44);
    goto LABEL_21;
  }
  v33 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v33)
  {
    v34 = v33 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v34 + 16) & 1) != 0)
    {
      v35 = *(void **)(*(_QWORD *)v34 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain(v35);
    }
    else
    {
      v35 = *(void **)(v34 + 8);
      result = swift_unknownObjectRetain(v35);
      if (!v35)
        goto LABEL_20;
    }
    v36 = objc_msgSend(v35, "fpfs_fpItem");
    swift_unknownObjectRelease(v35);
    if (v36)
    {
      if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
        || !*(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
        && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
      {
        v37 = sub_10035F61C(v36, 1);

        v12 = v37 > 0;
        goto LABEL_21;
      }

    }
    goto LABEL_20;
  }
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

void sub_10024E254(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  int IsKeyInput;
  char *v41;
  uint64_t v42;
  char v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  unsigned int v52;
  uint64_t ObjectType;
  void *v54;
  void *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  char *v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  char *v98;
  id v99;
  void *Strong;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  void *v106;
  id v107;
  Class isa;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  __n128 v114;
  uint64_t (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[3];
  uint64_t v140;
  char v141[32];

  v135 = a2;
  v136 = a1;
  v3 = type metadata accessor for IndexPath(0);
  v137 = *(_QWORD *)(v3 - 8);
  v138 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v125 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v125 - v10;
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v12);
  v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v125 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v125 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v125 - v22;
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v125 - v26;
  v28 = v2;
  v29 = objc_msgSend(v2, "presentedViewController", v25);

  if (!v29)
  {
    v131 = v20;
    v132 = v23;
    v129 = v17;
    v130 = v11;
    v126 = v5;
    v127 = v14;
    v128 = v8;
    v134 = v27;
    v30 = (uint64_t)sub_100034068(0);
    v31 = v30;
    if ((unint64_t)v30 >> 62)
    {
      if (v30 >= 0)
        v30 &= 0xFFFFFFFFFFFFFF8uLL;
      v32 = _CocoaArrayWrapper.endIndex.getter(v30);
    }
    else
    {
      v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v33 = v136;
    v34 = v137;
    swift_bridgeObjectRelease(v31);
    v35 = (uint64_t)&v28[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath];
    swift_beginAccess(&v28[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], v141, 0, 0);
    v36 = v28;
    v37 = (uint64_t)v134;
    sub_1000271D4(v35, (uint64_t)v134, (uint64_t *)&unk_100642710);
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    v39 = v38(v37, 1, v138);
    IsKeyInput = DOCFirstResponderIsKeyInput();
    if ((static Selector.== infix(_:_:)("performKeyboardFocusKeyCommand:", v33) & 1) != 0)
    {
      objc_msgSend(v36, "isFirstResponder");
      sub_10000CB4C(v37, (uint64_t *)&unk_100642710);
      return;
    }
    v133 = v36;
    if ((static Selector.== infix(_:_:)("performCreateFolder:", v33) & 1) != 0)
    {
      v41 = &v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v139, 0, 0);
      if (*(_QWORD *)v41 != 2)
      {
        v42 = 0;
LABEL_18:
        sub_10024FB04(v42);
LABEL_19:
        sub_10000CB4C((uint64_t)v134, (uint64_t *)&unk_100642710);
        return;
      }
      goto LABEL_11;
    }
    v43 = static Selector.== infix(_:_:)("performCreateFolderWithSelection:", v33);
    v44 = v133;
    if ((v43 & 1) != 0)
    {
      v45 = &v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v139, 0, 0);
      if (*(_QWORD *)v45 != 2)
      {
        v42 = 1;
        goto LABEL_18;
      }
      goto LABEL_11;
    }
    if ((static Selector.== infix(_:_:)("performDeselectAll:", v33) & 1) != 0)
    {
      if (*(_QWORD *)&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
      {
        v47 = sub_10004FD50();
        v48 = v47;
        if ((unint64_t)v47 >> 62)
        {
          if (v47 >= 0)
            v47 &= 0xFFFFFFFFFFFFFF8uLL;
          _CocoaArrayWrapper.endIndex.getter(v47);
        }
        swift_bridgeObjectRelease(v48);
        goto LABEL_19;
      }
      __break(1u);
      goto LABEL_151;
    }
    if ((static Selector.== infix(_:_:)("performDuplicate:", v33) & 1) != 0
      || (static Selector.== infix(_:_:)("performDelete:", v33) & 1) != 0
      || (static Selector.== infix(_:_:)("performDeleteNow:", v33) & 1) != 0)
    {
      goto LABEL_19;
    }
    if ((static Selector.== infix(_:_:)("performMoveHere:", v33) & 1) != 0)
    {
      v49 = *(_QWORD *)&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (!v49)
      {
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      v50 = v49 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v50 + 16) & 1) != 0)
      {
        v51 = *(void **)(*(_QWORD *)v50 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
        swift_unknownObjectRetain(v51);
        goto LABEL_33;
      }
      v51 = *(void **)(v50 + 8);
      swift_unknownObjectRetain(v51);
      if (v51)
      {
LABEL_33:
        ObjectType = swift_getObjectType(v51);
        v54 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
        v55 = v54;
        if (v54)
        {
          sub_10035F99C(v54, v44, 1);
          swift_unknownObjectRelease(v51);

          goto LABEL_19;
        }
        goto LABEL_125;
      }
LABEL_11:
      v46 = (uint64_t)v134;
LABEL_12:
      sub_10000CB4C(v46, (uint64_t *)&unk_100642710);
      return;
    }
    if ((static Selector.== infix(_:_:)("performOpen:", v33) & 1) != 0)
    {
      if (v44[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1)
        v52 = objc_msgSend(v44, "isEditing");
      else
        v52 = 0;
      if (objc_msgSend(v44, "isEditing") && !v52)
        goto LABEL_19;
      if (v39 == 1)
        v56 = 0;
      else
        v56 = v52;
      if (v32 != 1 && !v56)
        goto LABEL_11;
      if (v52)
      {
        v57 = (uint64_t)v132;
        sub_1000271D4(v35, (uint64_t)v132, (uint64_t *)&unk_100642710);
        v58 = v138;
      }
      else
      {
        v69 = *(void **)&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
        if (v69 && (v70 = objc_msgSend(v69, "indexPathsForSelectedItems")) != 0)
        {
          v71 = v70;
          v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v138);

          v34 = v137;
          v58 = v138;
          v57 = (uint64_t)v132;
          if (*(_QWORD *)(v72 + 16))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v137 + 16))(v132, v72 + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80)), v138);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v57, 0, 1, v58);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v132, 1, 1, v138);
          }
          swift_bridgeObjectRelease(v72);
        }
        else
        {
          v57 = (uint64_t)v132;
          v58 = v138;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v132, 1, 1, v138);
        }
      }
      v102 = (uint64_t)v131;
      sub_1000271D4(v57, (uint64_t)v131, (uint64_t *)&unk_100642710);
      if (v38(v102, 1, v58) == 1)
      {
        sub_10000CB4C(v57, (uint64_t *)&unk_100642710);
        v103 = v102;
      }
      else
      {
        v104 = v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v130, v102, v58);
        v105 = v133;
        objc_msgSend(v133, "loadViewIfNeeded");
        v106 = *(void **)&v105[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
        if (!v106)
        {
LABEL_165:
          __break(1u);
          goto LABEL_166;
        }
        v107 = v106;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v109 = objc_msgSend(v105, "collectionView:shouldSelectItemAtIndexPath:", v107, isa);

        if (v109)
        {
          v110 = (uint64_t)sub_100034068(0);
          v111 = v110;
          if ((unint64_t)v110 >> 62)
          {
            if (v110 >= 0)
              v110 &= 0xFFFFFFFFFFFFFF8uLL;
            v112 = _CocoaArrayWrapper.endIndex.getter(v110);
          }
          else
          {
            v112 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v113 = swift_bridgeObjectRelease(v111);
          (*(void (**)(char *, uint64_t, __n128))(v137 + 8))(v130, v138, v113);
          sub_10000CB4C((uint64_t)v132, (uint64_t *)&unk_100642710);
          if (v112 < 2
            || (v133[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] & 1) != 0)
          {
            goto LABEL_19;
          }
          goto LABEL_11;
        }
        (*(void (**)(char *, uint64_t))(v137 + 8))(v104, v138);
        v103 = (uint64_t)v132;
      }
      goto LABEL_122;
    }
    if ((static Selector.== infix(_:_:)("performCommandReturnKey:", v33) & 1) != 0)
    {
      sub_10024C0FC();
      goto LABEL_19;
    }
    if ((static Selector.== infix(_:_:)("performConfirmPickerExportOrDrillIn:", v33) & 1) != 0)
    {
      if ((sub_10024C214() & 1) == 0)
      {
        v59 = sub_10024C39C();
        if (v59)

      }
      goto LABEL_19;
    }
    if ((static Selector.== infix(_:_:)("performRename:", v33) & 1) != 0)
    {
      v60 = *(void **)&v44[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
      if ((objc_msgSend(v60, "forMovingDocuments") & 1) != 0
        || objc_msgSend(v60, "forPickingDocuments")
        && objc_msgSend(v60, "forSavingDocuments"))
      {
        objc_msgSend(v44, "loadViewIfNeeded");
        v61 = *(void **)&v44[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
        if (!v61)
        {
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        v62 = objc_msgSend(v61, "indexPathsForSelectedItems");
        if (!v62
          || (v63 = v62,
              v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v138),
              v63,
              v65 = *(_QWORD *)(v64 + 16),
              swift_bridgeObjectRelease(v64),
              !v65))
        {
          v66 = *(_QWORD *)&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
          if (!v66)
          {
LABEL_167:
            __break(1u);
            goto LABEL_168;
          }
          v67 = v66 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
          if ((*(_BYTE *)(v67 + 16) & 1) != 0)
          {
            v68 = *(void **)(*(_QWORD *)v67 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
            swift_unknownObjectRetain(v68);
          }
          else
          {
            v68 = *(void **)(v67 + 8);
            swift_unknownObjectRetain(v68);
            if (!v68)
              goto LABEL_11;
          }
          v99 = objc_msgSend(v68, "fpfs_fpItem");
          swift_unknownObjectRelease(v68);
          if (v99)
          {
            Strong = (void *)swift_unknownObjectWeakLoadStrong(&v133[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
            if (Strong)
            {
              v101 = Strong;
              objc_msgSend(Strong, "pickerOperationFor:", v99);
              swift_unknownObjectRelease(v101);
            }

            goto LABEL_19;
          }
          goto LABEL_11;
        }
      }
      else if ((objc_msgSend(v60, "forPickingFolders") & 1) == 0
             && !objc_msgSend(v60, "forPickingDocuments")
             || (v133[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] & 1) != 0)
      {
        if ((IsKeyInput & 1) != 0
          || (objc_msgSend(v60, "forPickingFolders") & 1) != 0
          || (objc_msgSend(v60, "forPickingDocuments") & 1) != 0
          || (objc_msgSend(v133, "isEditing") & 1) != 0)
        {
          goto LABEL_11;
        }
        v74 = v133;
        objc_msgSend(v133, "loadViewIfNeeded");
        v75 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
        v76 = *(void **)&v74[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
        if (!v76)
        {
LABEL_168:
          __break(1u);
          goto LABEL_169;
        }
        v77 = objc_msgSend(v76, "indexPathsForSelectedItems");
        if (!v77)
          goto LABEL_11;
        v78 = v77;
        v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, v138);

        v80 = *(_QWORD *)(v79 + 16);
        *(_QWORD *)&v81 = swift_bridgeObjectRelease(v79).n128_u64[0];
        if (!v80)
          goto LABEL_11;
        v82 = v133;
        objc_msgSend(v133, "loadViewIfNeeded", v81);
        v83 = *(void **)&v82[v75];
        if (!v83)
        {
LABEL_169:
          __break(1u);
          goto LABEL_170;
        }
        v84 = objc_msgSend(v83, "indexPathsForSelectedItems");
        if (!v84)
        {
LABEL_170:
          __break(1u);
          goto LABEL_171;
        }
        v85 = v84;
        v86 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v84, v138);

        if (*(_QWORD *)(v86 + 16))
        {
          v88 = v137;
          v87 = v138;
          v89 = (uint64_t)v129;
          (*(void (**)(char *, unint64_t, uint64_t))(v137 + 16))(v129, v86 + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80)), v138);
          v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
          v90(v89, 0, 1, v87);
        }
        else
        {
          v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
          v90((uint64_t)v129, 1, 1, v138);
        }
        v114 = swift_bridgeObjectRelease(v86);
        if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v38)(v129, 1, v138, v114) == 1)
        {
          sub_10000CB4C((uint64_t)v129, (uint64_t *)&unk_100642710);
          goto LABEL_11;
        }
        v115 = *(uint64_t (**)(char *, char *, uint64_t))(v137 + 32);
        v116 = v115(v128, v129, v138);
        if (IndexPath.count.getter(v116) != 2)
          goto LABEL_142;
        v117 = *(void **)&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
        if (!v117)
        {
LABEL_171:
          __break(1u);
          return;
        }
        if ((objc_msgSend(v117, "isGathering") & 1) != 0
          || (v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0
          || (sub_100195148((uint64_t)v128) & 1) == 0)
        {
          v118 = v138;
          v119 = v127;
          (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v127, v128, v138);
          v90((uint64_t)v119, 0, 1, v118);
          if (v38((uint64_t)v119, 1, v118) != 1)
          {
            v120 = (uint64_t)v126;
            v121 = v138;
            v115(v126, v127, v138);
            v122 = sub_10017A754(v120, 0);
            v123 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
            v123(v120, v121);
            v123((uint64_t)v128, v121);
            if (v122)
              swift_unknownObjectRelease(v122);
            goto LABEL_19;
          }
        }
        else
        {
LABEL_142:
          v90((uint64_t)v127, 1, 1, v138);
        }
        (*(void (**)(char *, uint64_t))(v137 + 8))(v128, v138);
        v103 = (uint64_t)v127;
LABEL_122:
        sub_10000CB4C(v103, (uint64_t *)&unk_100642710);
        v46 = (uint64_t)v134;
        goto LABEL_12;
      }
      sub_1000271D4(v135, (uint64_t)v139, &qword_100642730);
      v93 = v140;
      if (v140)
      {
        v94 = sub_10007E7A0(v139, v140);
        v95 = *(_QWORD *)(v93 - 8);
        v96 = __chkstk_darwin(v94);
        v98 = (char *)&v125 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v95 + 16))(v98, v96);
        v51 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v98, v93);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v93);
        sub_100068588(v139);
      }
      else
      {
        v51 = 0;
      }
      objc_msgSend(v133, "canPerformAction:withSender:", "performOpen:", v51);
LABEL_125:
      swift_unknownObjectRelease(v51);
      goto LABEL_19;
    }
    if ((static Selector.== infix(_:_:)("performPreview:", v33) & 1) != 0)
    {
      if (v32 != 1
        || (((*(unsigned int (**)(void))((swift_isaMask & **(_QWORD **)&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController])
                                       + 0xF8))() | IsKeyInput) & 1) != 0)
      {
        goto LABEL_19;
      }
      v33 = (uint64_t)sub_100034068(0);
      if (!((unint64_t)v33 >> 62))
      {
        if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_155:
          swift_bridgeObjectRelease(v33);
          __break(1u);
          goto LABEL_156;
        }
        goto LABEL_71;
      }
LABEL_151:
      if (v33 < 0)
        v124 = v33;
      else
        v124 = v33 & 0xFFFFFFFFFFFFFF8;
      if (!_CocoaArrayWrapper.endIndex.getter(v124))
        goto LABEL_155;
LABEL_71:
      if ((v33 & 0xC000000000000001) != 0)
      {
LABEL_156:
        v73 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
        goto LABEL_74;
      }
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v73 = *(void **)(v33 + 32);
        swift_unknownObjectRetain(v73);
LABEL_74:
        objc_msgSend(v73, "isFolder", swift_bridgeObjectRelease(v33).n128_f64[0]);
        swift_unknownObjectRelease(v73);
        goto LABEL_19;
      }
      __break(1u);
      goto LABEL_163;
    }
    if ((static Selector.== infix(_:_:)("performMarkAsFavorite:", v33) & 1) != 0)
    {
      if (v32 != 1)
        goto LABEL_19;
      v91 = (uint64_t)sub_100034068(0);
      v92 = v91;
      if ((unint64_t)v91 >> 62)
      {
        if (v91 >= 0)
          v91 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v91))
        {
LABEL_96:
          if ((v92 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_163:
              __break(1u);
              goto LABEL_164;
            }
            v51 = *(void **)(v92 + 32);
            swift_unknownObjectRetain(v51);
            goto LABEL_99;
          }
LABEL_161:
          v51 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v92);
LABEL_99:
          objc_msgSend(v51, "isFolder", swift_bridgeObjectRelease(v92).n128_f64[0]);
          goto LABEL_125;
        }
      }
      else if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_96;
      }
      swift_bridgeObjectRelease(v92);
      __break(1u);
      goto LABEL_161;
    }
    if ((static Selector.== infix(_:_:)("performGoToEnclosingFolder:", v136) & 1) != 0)
    {
      swift_beginAccess(&v133[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v139, 0, 0);
      goto LABEL_19;
    }
    if ((static Selector.== infix(_:_:)("performRevealItem:", v136) & 1) != 0)
      goto LABEL_19;
    static Selector.== infix(_:_:)("performGetInfo:", v136);
    sub_10000CB4C((uint64_t)v134, (uint64_t *)&unk_100642710);
  }
}

id sub_10024F2B0()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = v0;
  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "forSavingDocuments");
  if ((result & 1) != 0)
    return 0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    v3 = sub_10004FD50();
    v4 = v3;
    if ((unint64_t)v3 >> 62)
    {
      if (v3 >= 0)
        v3 &= 0xFFFFFFFFFFFFFF8uLL;
      v5 = _CocoaArrayWrapper.endIndex.getter(v3);
    }
    else
    {
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v6 = swift_bridgeObjectRelease(v4);
    if (v5 >= 1
      && ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
       || !*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
       && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0))
    {
      return (id)(DOCFirstResponderIsKeyInput(v6) ^ 1);
    }
    return 0;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.validate(_:)(UICommand a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  void *v40;
  void *object;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  id v63;
  Swift::String v64;
  Swift::String v65;

  v3 = -[objc_class action](a1.super.super.isa, "action");
  if ((static Selector.== infix(_:_:)("copy:", v3) & 1) != 0)
  {
    v4 = (uint64_t)sub_100034068(0);
    v5 = v4;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 >= 0)
        v4 &= 0xFFFFFFFFFFFFFF8uLL;
      v6 = _CocoaArrayWrapper.endIndex.getter(v4);
    }
    else
    {
      v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v5);
    if (v6 >= 1000)
      v7 = 1000;
    else
      v7 = v6;
    if (v7 >= 2)
    {
      v8._countAndFlagsBits = 0xD000000000000023;
      v9._countAndFlagsBits = 0xD00000000000005FLL;
      v8._object = (void *)0x8000000100510380;
      v9._object = (void *)0x80000001005103B0;
      v10 = DOCLocalizedDictionaryString(_:comment:)(v8, v9);
      v11 = sub_10006922C((uint64_t *)&unk_100644560);
      v12 = swift_allocObject(v11, 72, 7);
      *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v12 + 56) = &type metadata for Int;
      *(_QWORD *)(v12 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v12 + 32) = v7;
      static String.localizedStringWithFormat(_:_:)(v10._countAndFlagsBits, v10._object, v12);
      v14 = v13;
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v10._object);
      v63 = String._bridgeToObjectiveC()();
      v15 = v14;
LABEL_36:
      -[objc_class setDiscoverabilityTitle:](a1.super.super.isa, "setDiscoverabilityTitle:", v63, swift_bridgeObjectRelease(v15).n128_f64[0]);
      goto LABEL_37;
    }
    return;
  }
  if ((static Selector.== infix(_:_:)("paste:", v3) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("performCreateFolderWithSelection:", v3) & 1) != 0)
    {
      v19 = (void *)FPActionReparent;
      v20 = sub_100034068(0);
      LOBYTE(v19) = sub_1003598CC(v19, (uint64_t)v20);
      swift_bridgeObjectRelease(v20);
      if ((v19 & 1) != 0)
      {
        v21 = (uint64_t)sub_100034068(0);
        v22 = v21;
        if ((unint64_t)v21 >> 62)
        {
          if (v21 >= 0)
            v21 &= 0xFFFFFFFFFFFFFF8uLL;
          v23 = _CocoaArrayWrapper.endIndex.getter(v21);
        }
        else
        {
          v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v22);
      }
      else
      {
        v23 = 0;
      }
      v53._countAndFlagsBits = 0xD00000000000002ELL;
      v54._countAndFlagsBits = 0xD000000000000034;
      v53._object = (void *)0x800000010051D0D0;
      v54._object = (void *)0x800000010051D100;
      v55 = DOCLocalizedDictionaryString(_:comment:)(v53, v54);
      v56 = sub_10006922C((uint64_t *)&unk_100644560);
      v57 = swift_allocObject(v56, 72, 7);
      *(_OWORD *)(v57 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v57 + 56) = &type metadata for Int;
      *(_QWORD *)(v57 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v57 + 32) = v23;
      static String.localizedStringWithFormat(_:_:)(v55._countAndFlagsBits, v55._object, v57);
      v42 = v58;
      swift_bridgeObjectRelease(v57);
      object = v55._object;
    }
    else
    {
      if ((static Selector.== infix(_:_:)("performDelete:", v3) & 1) == 0)
      {
        if ((static Selector.== infix(_:_:)("performRename:", v3) & 1) != 0)
        {
          v59 = (uint64_t)sub_100034068(0);
          v60 = v59;
          if ((unint64_t)v59 >> 62)
          {
            if (v59 >= 0)
              v59 &= 0xFFFFFFFFFFFFFF8uLL;
            v61 = _CocoaArrayWrapper.endIndex.getter(v59);
          }
          else
          {
            v61 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          -[objc_class setAttributes:](a1.super.super.isa, "setAttributes:", 4 * (v61 > 1), swift_bridgeObjectRelease(v60).n128_f64[0]);
        }
        return;
      }
      v24 = (uint64_t)sub_100034068(0);
      v25 = v24;
      if ((unint64_t)v24 >> 62)
      {
        if (v24 >= 0)
          v24 &= 0xFFFFFFFFFFFFFF8uLL;
        v26 = _CocoaArrayWrapper.endIndex.getter(v24);
      }
      else
      {
        v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v27 = -[objc_class setAttributes:](a1.super.super.isa, "setAttributes:", v26 < 1, swift_bridgeObjectRelease(v25).n128_f64[0]);
      v28 = (id)_DocumentManagerBundle(v27);
      if (!v28)
        goto LABEL_57;
      v29 = v28;
      v64._countAndFlagsBits = 0xD000000000000029;
      v64._object = (void *)0x800000010051D070;
      v30._countAndFlagsBits = 0x7265766F636552;
      v30._object = (void *)0xE700000000000000;
      v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v31.value._object = (void *)0xEB00000000656C62;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v64)._object;

      v35 = (id)_DocumentManagerBundle(v34);
      if (!v35)
      {
LABEL_58:
        __break(1u);
        return;
      }
      v36 = v35;
      v65._countAndFlagsBits = 0xD000000000000028;
      v65._object = (void *)0x800000010051D0A0;
      v37._countAndFlagsBits = 0x6574656C6544;
      v37._object = (void *)0xE600000000000000;
      v38.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v38.value._object = (void *)0xEB00000000656C62;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v65)._object;

      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 33))
        object = v40;
      else
        object = v33;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 33))
        v42 = v33;
      else
        v42 = v40;
    }
    swift_bridgeObjectRelease(object);
    v63 = String._bridgeToObjectiveC()();
    v15 = v42;
    goto LABEL_36;
  }
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v16)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v17 + 16) & 1) != 0)
  {
    v18 = *(void **)(*(_QWORD *)v17 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v18);
  }
  else
  {
    v18 = *(void **)(v17 + 8);
    swift_unknownObjectRetain(v18);
    if (!v18)
      return;
  }
  v63 = objc_msgSend(v18, "fpfs_fpItem");
  swift_unknownObjectRelease(v18);
  if (v63)
  {
    v43 = sub_10035F61C(v63, 1);
    if (v43 >= 1)
    {
      v44 = v43;
      v45._countAndFlagsBits = 0xD000000000000024;
      v45._object = (void *)0x8000000100511920;
      v46._object = (void *)0x8000000100511950;
      v46._countAndFlagsBits = 0xD00000000000001BLL;
      v47 = DOCLocalizedDictionaryString(_:comment:)(v45, v46);
      v48 = sub_10006922C((uint64_t *)&unk_100644560);
      v49 = swift_allocObject(v48, 72, 7);
      *(_OWORD *)(v49 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v49 + 56) = &type metadata for Int;
      *(_QWORD *)(v49 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v49 + 32) = v44;
      static String.localizedStringWithFormat(_:_:)(v47._countAndFlagsBits, v47._object, v49);
      v51 = v50;
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v47._object);
      v62 = String._bridgeToObjectiveC()();
      -[objc_class setDiscoverabilityTitle:](a1.super.super.isa, "setDiscoverabilityTitle:", v62, swift_bridgeObjectRelease(v51).n128_f64[0]);

      v52 = v62;
LABEL_38:

      return;
    }
LABEL_37:
    v52 = v63;
    goto LABEL_38;
  }
}

uint64_t sub_10024FB04(uint64_t result)
{
  char *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  unsigned int v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  char v20[40];

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    return result;
  }
  v3 = v1;
  v4 = result;
  v5 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v5 + 16) & 1) != 0)
  {
    v6 = *(void **)(*(_QWORD *)v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v6);
  }
  else
  {
    v6 = *(void **)(v5 + 8);
    result = swift_unknownObjectRetain(v6);
    if (!v6)
      return result;
  }
  v7 = objc_msgSend(v6, "fpfs_fpItem");
  swift_unknownObjectRelease(v6);
  if (!v7)
    return 0;
  v8 = (void *)FPActionImportHere;
  v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v9, v20);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v7;
  v19 = inited;
  specialized Array._endMutation()(inited);
  v11 = v7;
  v12 = sub_1003598CC(v8, v19);
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v19).n128_u64[0];
  if ((v4 & 1) != 0)
  {
    v14 = (uint64_t)sub_100034068(0);
    v15 = v14;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 >= 0)
        v14 &= 0xFFFFFFFFFFFFFF8uLL;
      v16 = _CocoaArrayWrapper.endIndex.getter(v14);
    }
    else
    {
      v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }

    swift_bridgeObjectRelease(v15);
    v17 = v16 > 0;
  }
  else
  {
    v18 = objc_msgSend(v3, "isEditing", v13);

    v17 = v18 ^ 1;
  }
  return v17 & v12;
}

void sub_10024FC9C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  double top;
  double v27;
  double left;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  double v66;
  double MinY;
  CGFloat v68;
  double MaxY;
  uint64_t v70;
  CGFloat v71;
  double v72;
  double v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = IndexPath.section.getter(v6);
  v10 = objc_msgSend(v2, "numberOfSections");
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (v9 >= (uint64_t)v10)
  {
    v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_7;
  }
  v12 = IndexPath.item.getter(v11);
  v13 = objc_msgSend(v2, "numberOfItemsInSection:", IndexPath.section.getter(v12));
  v14 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v12 >= (uint64_t)v13)
  {
LABEL_7:
    v29 = static os_log_type_t.error.getter(v14);
    v30 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
    v32 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v33 = dispatch thunk of CustomStringConvertible.description.getter(v4, v32);
    v35 = v34;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_10006A638();
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v36 = (Class)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)("Unable to determine frame of cell for item at index beyond bounds: %@", 69, 2, &_mh_execute_header, v36, v29, v31);
LABEL_8:
    swift_bridgeObjectRelease(v31);
    goto LABEL_9;
  }
  v15 = objc_msgSend(v2, "collectionViewLayout");
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v17)
  {
    v37 = static os_log_type_t.error.getter(v18);
    v38 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v38, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
    v39 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v40 = dispatch thunk of CustomStringConvertible.description.getter(v4, v39);
    v42 = v41;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = sub_10006A638();
    *(_QWORD *)(v31 + 32) = v40;
    *(_QWORD *)(v31 + 40) = v42;
    sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v36 = (Class)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)("Unable to determine frame of cell for item: %@", 46, 2, &_mh_execute_header, v36, v37, v31);
    goto LABEL_8;
  }
  v20 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v19);
  if (Strong)
  {
    v23 = Strong;
    v24 = *((_QWORD *)v20 + 1);
    ObjectType = swift_getObjectType(Strong, v22);
    top = (*(double (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v24 + 48))(v2, &off_1005E7FD8, a1, ObjectType, v24);
    left = v27;
    swift_unknownObjectRelease(v23);
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
  }
  objc_msgSend(v17, "frame");
  v47 = sub_10007EAFC(v43, v44, v45, v46, top, left);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  objc_msgSend(v2, "_effectiveContentInset");
  v55 = v54;
  v57 = v56;
  v73 = v58;
  v60 = v59;
  objc_msgSend(v2, "contentOffset");
  v62 = v57 + v61;
  objc_msgSend(v2, "contentOffset");
  v72 = v55 + v63;
  objc_msgSend(v2, "bounds");
  v64 = CGRectGetWidth(v74) - v57 - v60;
  v65 = v47;
  objc_msgSend(v2, "bounds");
  v66 = CGRectGetHeight(v75) - v55 - v73;
  v76.origin.x = v47;
  v76.origin.y = v49;
  v76.size.width = v51;
  v76.size.height = v53;
  MinY = CGRectGetMinY(v76);
  v71 = v62;
  v77.origin.x = v62;
  v68 = v72;
  v77.origin.y = v72;
  v73 = v64;
  v77.size.width = v64;
  v77.size.height = v66;
  if (MinY < CGRectGetMinY(v77))
    goto LABEL_14;
  v78.origin.x = v65;
  v78.origin.y = v49;
  v78.size.width = v51;
  v78.size.height = v53;
  MaxY = CGRectGetMaxY(v78);
  v79.origin.x = v71;
  v79.origin.y = v68;
  v79.size.width = v73;
  v79.size.height = v66;
  if (CGRectGetMaxY(v79) < MaxY)
  {
LABEL_14:
    objc_msgSend(v2, "scrollRectToVisible:animated:", 0, v65, v49, v51, v53);
    objc_msgSend(v2, "_flashScrollIndicatorsPersistingPreviousFlashes");
  }
  v36 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "scrollToItemAtIndexPath:atScrollPosition:animated:", v36, 0, 0);

LABEL_9:
}

uint64_t sub_1002501A4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t result;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  int v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  _BYTE v138[24];
  char v139[24];
  _BYTE v140[24];
  _BYTE v141[24];
  char v142[24];
  char v143[8];

  v130 = a2;
  v127 = a1;
  v125 = sub_10006922C(&qword_100649188);
  __chkstk_darwin(v125);
  v124 = (uint64_t *)((char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10006922C(&qword_100649190);
  v5 = __chkstk_darwin(v4);
  v128 = (uint64_t *)((char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v131 = (char *)&v121 - v7;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v121 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v122 = (char *)&v121 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v121 - v14;
  v16 = sub_10006922C((uint64_t *)&unk_100642710);
  v17 = __chkstk_darwin(v16);
  v126 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v133 = (uint64_t)&v121 - v20;
  v21 = __chkstk_darwin(v19);
  v123 = (uint64_t)&v121 - v22;
  v23 = __chkstk_darwin(v21);
  v129 = (char *)&v121 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v121 - v26;
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v121 - v29;
  v31 = __chkstk_darwin(v28);
  v33 = (uint64_t *)((char *)&v121 - v32);
  v34 = __chkstk_darwin(v31);
  v132 = (uint64_t)&v121 - v35;
  __chkstk_darwin(v34);
  v37 = (char *)&v121 - v36;
  v135 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  v137 = v2;
  v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart;
  swift_beginAccess(v38, v143, 0, 0);
  sub_1000271D4(v38, (uint64_t)v37, (uint64_t *)&unk_100642710);
  v134 = v9;
  v136 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v9 + 48);
  LODWORD(v38) = v136(v37, 1, v8);
  sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_100642710);
  if ((_DWORD)v38 == 1)
  {
    v40 = *(_QWORD *)(v137 + v135);
    v41 = v40 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v40 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v142, 0, 0);
    v42 = v132;
    sub_1000271D4(v41, v132, (uint64_t *)&unk_100642710);
    v43 = v40 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart;
    swift_beginAccess(v40 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, v141, 33, 0);
    swift_retain();
    sub_1000B33AC(v42, v43);
    swift_endAccess(v141);
    swift_release(v40);
  }
  v44 = v137;
  if ((v130 & 1) != 0)
  {
    v45 = v137 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
    Strong = swift_unknownObjectWeakLoadStrong(v137 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v39);
    if (Strong)
    {
      v48 = Strong;
      v49 = *(_QWORD *)(v45 + 8);
      ObjectType = swift_getObjectType(Strong, v47);
      LOBYTE(v49) = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v49 + 80))(v44, &off_1005E7FD8, v127, ObjectType, v49);
      swift_unknownObjectRelease(v48);
      if ((v49 & 1) != 0)
      {
        v52 = v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
        v53 = swift_unknownObjectWeakLoadStrong(v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v51);
        if (v53)
        {
          v54 = v53;
          v55 = *(_QWORD *)(v52 + 8);
          v33 = &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
          v56 = *(_QWORD *)(v44 + v135)
              + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
          swift_beginAccess(v56, v141, 0, 0);
          sub_1000271D4(v56, (uint64_t)v27, (uint64_t *)&unk_100642710);
          v57 = v136(v27, 1, v8);
          v59 = (uint64_t *)v131;
          v60 = v134;
          if (v57 != 1)
          {
            v61 = swift_getObjectType(v54, v58);
            v62 = sub_10006922C(&qword_100649198);
            v63 = (*(uint64_t (**)(char *, uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t, uint64_t))(v55 + 88))((char *)v59 + *(int *)(v62 + 48), v44, &off_1005E7FD8, v27, v127, v61, v55);
            swift_unknownObjectRelease(v54);
            (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v8);
            *v59 = v63;
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v59, 0, 1, v62);
            goto LABEL_20;
          }
          goto LABEL_32;
        }
        v120 = sub_10006922C(&qword_100649198);
        v59 = (uint64_t *)v131;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v131, 1, 1, v120);
        v60 = v134;
        goto LABEL_20;
      }
    }
  }
  v64 = *(_QWORD *)(v44 + v135)
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v64, v141, 0, 0);
  sub_1000271D4(v64, (uint64_t)v33, (uint64_t *)&unk_100642710);
  if (v136(v33, 1, v8) != 1)
  {
    v60 = v134;
    v65 = *(void (**)(_QWORD, _QWORD, _QWORD))(v134 + 32);
    v65(v15, v33, v8);
    v66 = v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
    v68 = swift_unknownObjectWeakLoadStrong(v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v67);
    if (v68)
    {
      v70 = v68;
      v71 = *(_QWORD *)(v66 + 8);
      v72 = swift_getObjectType(v68, v69);
      (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 32))(v44, &off_1005E7FD8, v15, v127, 0, v72, v71);
      swift_unknownObjectRelease(v70);
      if (v136(v30, 1, v8) != 1)
      {
        v73 = v122;
        v65(v122, v30, v8);
        v74 = v132;
        (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v132, v73, v8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v74, 0, 1, v8);
        v75 = *(_QWORD *)(v137 + v135);
        v76 = v75 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
        swift_beginAccess(v75 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v140, 33, 0);
        swift_retain();
        sub_1000B33AC(v74, v76);
        swift_endAccess(v140);
        swift_release(v75);
        v33 = *(uint64_t **)(v60 + 8);
        ((void (*)(char *, uint64_t))v33)(v73, v8);
        ((void (*)(char *, uint64_t))v33)(v15, v8);
LABEL_15:
        v44 = v137;
        v78 = v137 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
        v79 = swift_unknownObjectWeakLoadStrong(v137 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v77);
        v59 = (uint64_t *)v131;
        if (v79)
        {
          v80 = v79;
          v81 = *(_QWORD *)(v78 + 8);
          v82 = *(_QWORD *)(v44 + v135);
          v83 = v82 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart;
          swift_beginAccess(v82 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, v140, 0, 0);
          v84 = v83;
          v85 = v133;
          sub_1000271D4(v84, v133, (uint64_t *)&unk_100642710);
          v86 = v136;
          if (v136(v85, 1, v8) == 1)
          {
            __break(1u);
          }
          else
          {
            v87 = v82 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
            swift_beginAccess(v82 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v139, 0, 0);
            v88 = v126;
            sub_1000271D4(v87, v126, (uint64_t *)&unk_100642710);
            if (v86(v88, 1, v8) != 1)
            {
              v90 = swift_getObjectType(v80, v89);
              v91 = sub_10006922C(&qword_100649198);
              v92 = v133;
              v93 = (*(uint64_t (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 40))((char *)v59 + *(int *)(v91 + 48), v44, &off_1005E7FD8, v133, v88, v90, v81);
              swift_unknownObjectRelease(v80);
              ((void (*)(uint64_t, uint64_t))v33)(v88, v8);
              ((void (*)(uint64_t, uint64_t))v33)(v92, v8);
              *v59 = v93;
              (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v59, 0, 1, v91);
              v60 = v134;
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        v94 = sub_10006922C(&qword_100649198);
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v59, 1, 1, v94);
LABEL_20:
        v95 = v128;
        sub_1000271D4((uint64_t)v59, (uint64_t)v128, &qword_100649190);
        v96 = sub_10006922C(&qword_100649198);
        v97 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v95, 1, v96);
        v98 = (uint64_t)v129;
        if (v97 == 1)
        {
          v99 = &qword_100649190;
          sub_10000CB4C((uint64_t)v95, &qword_100649190);
          v100 = (uint64_t)v59;
        }
        else
        {
          v101 = (uint64_t)v95 + *(int *)(v96 + 48);
          v102 = v125;
          v103 = v124;
          v104 = (uint64_t)v124 + *(int *)(v125 + 48);
          *v124 = *v95;
          sub_100070EDC(v101, v104, (uint64_t *)&unk_100642710);
          v105 = *v103;
          sub_100070EDC((uint64_t)v103 + *(int *)(v102 + 48), v98, (uint64_t *)&unk_100642710);
          v106 = v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
          v108 = swift_unknownObjectWeakLoadStrong(v44 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, v107);
          if (v108)
          {
            v110 = v108;
            v111 = *(_QWORD *)(v106 + 8);
            v112 = swift_getObjectType(v108, v109);
            (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v111 + 104))(v44, &off_1005E7FD8, v105, v112, v111);
            swift_unknownObjectRelease(v110);
          }
          swift_bridgeObjectRelease(v105);
          v113 = v123;
          sub_1000271D4(v98, v123, (uint64_t *)&unk_100642710);
          if (v136(v113, 1, v8) != 1)
          {
            v115 = (uint64_t)v121;
            (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v121, v113, v8);
            v116 = v132;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v132, v115, v8);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v116, 0, 1, v8);
            v117 = *(_QWORD *)(v44 + v135);
            v118 = v117 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
            swift_beginAccess(v117 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v138, 33, 0);
            swift_retain();
            sub_1000B33AC(v116, v118);
            swift_endAccess(v138);
            swift_release(v117);
            sub_10024FC9C(v115);
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v115, v8);
            sub_10000CB4C(v98, (uint64_t *)&unk_100642710);
            v114 = &qword_100649190;
            v100 = (uint64_t)v59;
            return sub_10000CB4C(v100, v114);
          }
          v99 = (uint64_t *)&unk_100642710;
          sub_10000CB4C(v98, (uint64_t *)&unk_100642710);
          sub_10000CB4C((uint64_t)v59, &qword_100649190);
          v100 = v113;
        }
        v114 = v99;
        return sub_10000CB4C(v100, v114);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v30, 1, 1, v8);
    }
    v33 = *(uint64_t **)(v60 + 8);
    ((void (*)(char *, uint64_t))v33)(v15, v8);
    sub_10000CB4C((uint64_t)v30, (uint64_t *)&unk_100642710);
    goto LABEL_15;
  }
LABEL_33:
  sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_100642710);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000048, 0x800000010051D1C0, "Files/DOCFocusableCollectionView.swift", 38, 2, 278, 0);
  __break(1u);
  return result;
}

uint64_t sub_100250DA4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSIndexPath v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char v55[24];

  v2 = v1;
  v54 = a1;
  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v52 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v52 - v14;
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v16, v55, 0, 0);
  sub_1000271D4(v16, (uint64_t)v8, (uint64_t *)&unk_100642710);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v17(v8, 1, v9) == 1)
    return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
  v53 = v13;
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v15, v8, v9);
  v20 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v21);
  if (Strong)
  {
    v24 = Strong;
    v25 = *((_QWORD *)v20 + 1);
    ObjectType = swift_getObjectType(Strong, v23);
    LOBYTE(v25) = (*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, char *, uint64_t, uint64_t))(v25 + 112))(v2, &off_1005E7FD8, v54, v15, ObjectType, v25);
    swift_unknownObjectRelease(v24);
    if ((v25 & 1) == 0)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  v27 = swift_unknownObjectWeakLoadStrong(v20, v23);
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
    goto LABEL_11;
  }
  v29 = v27;
  v30 = *((_QWORD *)v20 + 1);
  v31 = swift_getObjectType(v27, v28);
  (*(void (**)(char *, _UNKNOWN **, char *, uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 32))(v2, &off_1005E7FD8, v15, v54, 0, v31, v30);
  swift_unknownObjectRelease(v29);
  if (v17(v6, 1, v9) == 1)
  {
LABEL_11:
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
    v42 = swift_unknownObjectWeakLoadStrong(v20, v41);
    if (v42)
    {
      v44 = v42;
      v45 = *((_QWORD *)v20 + 1);
      v46 = swift_getObjectType(v42, v43);
      v47 = (void *)(*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v45 + 120))(v2, &off_1005E7FD8, v54, v46, v45);
      v49 = v48;
      swift_unknownObjectRelease(v44);
      if (v47)
      {
        sub_1001880A0();
        v51 = swift_getObjectType(v47, v50);
        sub_10027E6AC(v54, v51, v49);

      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  v19(v53, v6, v9);
  if (qword_100640EE8 != -1)
    swift_once(&qword_100640EE8, sub_10027CDDC);
  v54 = qword_100672AC8;
  v32 = static os_log_type_t.debug.getter();
  v33 = sub_10006922C((uint64_t *)&unk_100644560);
  v34 = swift_allocObject(v33, 152, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v34 + 56) = type metadata accessor for DOCItemCollectionView();
  *(_QWORD *)(v34 + 64) = sub_10005A360((unint64_t *)&qword_100649178, (uint64_t (*)(uint64_t))type metadata accessor for DOCItemCollectionView, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v34 + 32) = v2;
  v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v36 = sub_10004F2F0(0, &qword_1006428E0, NSIndexPath_ptr);
  *(_QWORD *)(v34 + 96) = v36;
  v37 = sub_100252678();
  *(_QWORD *)(v34 + 104) = v37;
  *(_QWORD *)(v34 + 72) = isa;
  v38 = (uint64_t)v53;
  v39.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v34 + 136) = v36;
  *(_QWORD *)(v34 + 144) = v37;
  *(NSIndexPath *)(v34 + 112) = v39;
  os_log(_:dso:log:type:_:)("Will change focus in collection view %p from %@ to %@", 53, 2, &_mh_execute_header, v54, v32, v34);
  swift_bridgeObjectRelease(v34);
  sub_1001A1EF0(v38, 1);
  v40 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v40(v38, v9);
  return ((uint64_t (*)(char *, uint64_t))v40)(v15, v9);
}

uint64_t sub_1002511EC(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v14);
  if (Strong)
  {
    v17 = Strong;
    v18 = *((_QWORD *)v13 + 1);
    ObjectType = swift_getObjectType(Strong, v16);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 24))(v3, &off_1005E7FD8, a1, a2 & 1, ObjectType, v18);
    swift_unknownObjectRelease(v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_1001A1EF0((uint64_t)v12, 1);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
  if (qword_100640EE8 != -1)
    swift_once(&qword_100640EE8, sub_10027CDDC);
  static os_log_type_t.debug.getter();
  v21 = sub_10006922C((uint64_t *)&unk_100644560);
  v22 = swift_allocObject(v21, 112, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v22 + 56) = type metadata accessor for DOCItemCollectionView();
  v23 = sub_10005A360((unint64_t *)&qword_100649178, (uint64_t (*)(uint64_t))type metadata accessor for DOCItemCollectionView, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v22 + 32) = v3;
  *(_QWORD *)(v22 + 96) = &type metadata for Int;
  *(_QWORD *)(v22 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v22 + 64) = v23;
  *(_QWORD *)(v22 + 72) = a1;
  v24 = v3;
  os_log(_:dso:log:type:_:)("There is no item to focus initially with for direction %ld", v25);
  return swift_bridgeObjectRelease(v22);
}

void sub_100251454()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t ObjectType;
  uint64_t v8;

  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0
    && ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
     || !*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]))
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v1)
    {
      v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      {
        v3 = *(_QWORD *)(*(_QWORD *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
        v4 = v0;
        swift_unknownObjectRetain(v3);
      }
      else
      {
        v3 = *(_QWORD *)(v2 + 8);
        swift_unknownObjectRetain(v3);
        v5 = v0;
        if (!v3)
        {

          return;
        }
      }
      v6 = _swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        v8 = sub_10006922C((uint64_t *)&unk_1006424B0);
        v6 = (_QWORD *)_bridgeCocoaArray<A>(_:)(_swiftEmptyArrayStorage, v8);
      }
      ObjectType = swift_getObjectType(v3);
      sub_1001B488C(v3, (uint64_t)v6, (uint64_t)v0, ObjectType);

      swift_unknownObjectRelease(v3);
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10025158C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t Available;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0)
  {
    v1 = v0;
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
      || !*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController))
    {
      v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
      if (!v2)
      {
        __break(1u);
        return;
      }
      v3 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v3 + 16) & 1) != 0)
      {
        v4 = *(_QWORD *)(*(_QWORD *)v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
        swift_unknownObjectRetain(v4);
      }
      else
      {
        v4 = *(_QWORD *)(v3 + 8);
        swift_unknownObjectRetain(v4);
        if (!v4)
          return;
      }
      v5 = sub_100034068(0);
      v6 = sub_10006922C((uint64_t *)&unk_1006424B0);
      Available = Array<A>.fpfs_syncFetchAvailableFPItems()(v5, v6);
      swift_bridgeObjectRelease(v5);
      if ((unint64_t)Available >> 62)
      {
        if (Available < 0)
          v11 = Available;
        else
          v11 = Available & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(Available);
        v9 = _bridgeCocoaArray<A>(_:)(v11, v6);
        swift_bridgeObjectRelease_n(Available, 2);
        Available = v9;
      }
      else
      {
        v8 = swift_bridgeObjectRetain(Available);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
        swift_bridgeObjectRelease(Available);
        v9 = Available;
      }
      ObjectType = swift_getObjectType(v4);
      sub_1001B488C(v4, v9, v1, ObjectType);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(Available);
    }
  }
}

_QWORD *sub_100251718()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t All;
  uint64_t v12;
  uint64_t ObjectType;
  void *v14;
  double v15;
  __int128 v16;
  __int128 v17;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDuplicate);
  v3 = v2;
  result = sub_100034068(0);
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v5)
  {
    v6 = result;
    v7 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v7 + 16) & 1) != 0)
      v8 = *(_QWORD *)(*(_QWORD *)v7 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v8 = *(_QWORD *)(v7 + 8);
    swift_unknownObjectRetain(v8);
    v16 = 0u;
    v17 = 0u;
    v9 = (char *)DOCItemCollectionViewController.actionContext(from:)();
    sub_10000CB4C((uint64_t)&v16, &qword_100642730);
    v10 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(v6, v10);
    if (All)
    {
      v12 = All;
      if (v8)
      {
        ObjectType = swift_getObjectType(v8);
        v14 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      }
      else
      {
        v14 = 0;
      }
      DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v1, v3, v12, v14, v9);
      swift_unknownObjectRelease(v8);

      swift_bridgeObjectRelease(v12);
    }
    else
    {

      swift_unknownObjectRelease(v8);
    }
    swift_bridgeObjectRelease(v3);
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v6).n128_u64[0];
    return objc_msgSend(v0, "setEditing:animated:", 0, 1, v15, v16, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002518B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id result;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  Class isa;
  char v29[24];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v29[-v6 - 8];
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1
    && objc_msgSend(v1, "isEditing", v10))
  {
    v13 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], v29, 0, 0);
    sub_1000271D4(v13, (uint64_t)v7, (uint64_t *)&unk_100642710);
  }
  else
  {
    v15 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v15 || (v16 = objc_msgSend(v15, "indexPathsForSelectedItems")) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      return (id)sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
    }
    v17 = v16;
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v8);

    if (*(_QWORD *)(v18 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v18 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    v14 = swift_bridgeObjectRelease(v18);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v14) == 1)
    return (id)sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  sub_100244284((uint64_t)v4);
  sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
  objc_msgSend(v1, "loadViewIfNeeded");
  v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  result = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    v21 = objc_msgSend(result, "indexPathsForSelectedItems");
    v22 = v21;
    if (v21)
    {
      v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v8);

      v22 = *(void **)(v23 + 16);
      swift_bridgeObjectRelease(v23);
      LODWORD(v22) = v22 != 0;
    }
    if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments")&& (_DWORD)v22)
    {
      sub_10024BB6C();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    if ((sub_10024C214() & 1) != 0)
    {
LABEL_22:
      sub_10024BE54();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    v24 = sub_10024C39C();
    if (v24)
    {

      goto LABEL_22;
    }
    result = objc_msgSend(v1, "loadViewIfNeeded");
    v25 = *(void **)&v1[v20];
    if (v25)
    {
      v26 = v25;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v1, "collectionView:performPrimaryActionForItemAtIndexPath:", v26, isa);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100251C40()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *v6;

  objc_msgSend(v0, "loadViewIfNeeded");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    v2 = objc_msgSend(v1, "indexPathsForSelectedItems");
    if (v2)
    {
      v3 = type metadata accessor for IndexPath(0);
      v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

      v2 = *(id *)(v4 + 16);
      swift_bridgeObjectRelease(v4);
      LODWORD(v2) = v2 != 0;
    }
    if (objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "forPickingDocuments"))v5 = (_DWORD)v2 == 0;
    else
      v5 = 1;
    if (!v5)
    {
      sub_10024BB6C();
      return;
    }
    if ((sub_10024C214() & 1) != 0)
      goto LABEL_12;
    v6 = sub_10024C39C();
    if (v6)
    {

LABEL_12:
      sub_10024BE54();
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_100251D2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void *result;
  id v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t, __n128);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *Strong;
  uint64_t v31;
  void *v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  __n128 v39;
  void (*v40)(char *, uint64_t, __n128);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD aBlock[5];
  uint64_t v45;
  char v46[24];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - v9;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v41 - v17;
  objc_msgSend(v1, "loadViewIfNeeded", v16);
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  v20 = objc_msgSend(result, "indexPathsForSelectedItems");
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return (void *)sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
  }
  v21 = v20;
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v11);

  if (*(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, v22 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v10, 0, 1, v11);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v23(v10, 1, 1, v11);
  }
  v24 = swift_bridgeObjectRelease(v22);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
  if (v25(v10, 1, v11, v24) == 1)
    return (void *)sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
  v42 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v42(v18, v10, v11);
  v23(v7, 1, 1, v11);
  sub_100244284((uint64_t)v7);
  sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
  v26 = swift_allocObject(&unk_1005D4D40, 24, 7);
  v27 = v26 + 16;
  swift_unknownObjectWeakInit(v26 + 16);
  v43 = v26;
  swift_retain();
  if (IndexPath.count.getter(v28) != 2)
    goto LABEL_14;
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
    goto LABEL_22;
  if ((objc_msgSend(result, "isGathering") & 1) == 0
    && (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148((uint64_t)v18) & 1) != 0)
  {
LABEL_14:
    v23(v4, 1, 1, v11);
LABEL_16:
    sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
LABEL_17:
    v29 = swift_allocObject(&unk_1005D4D40, 24, 7);
    swift_beginAccess(v27, v46, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v27);
    swift_unknownObjectWeakInit(v29 + 16);

    v31 = swift_allocObject(&unk_1005D4D68, 32, 7);
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = 0;
    aBlock[4] = sub_100252700;
    v45 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D4D80;
    v32 = _Block_copy(aBlock);
    swift_release(v45);
    DOCRunInMainThread(v32);
    _Block_release(v32);
    swift_release_n(v43, 2, v33);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v18, v11);
  v23(v4, 0, 1, v11);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v25)(v4, 1, v11) == 1)
    goto LABEL_16;
  v42(v14, v4, v11);
  v34 = sub_10017A754((uint64_t)v14, 0);
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_17;
  }
  v35 = v34;
  v36 = v43;
  swift_release(v43);
  ObjectType = swift_getObjectType(v35);
  v38 = swift_allocObject(&unk_1005D4DB8, 32, 7);
  *(_QWORD *)(v38 + 16) = sub_1002526F4;
  *(_QWORD *)(v38 + 24) = v36;
  swift_retain();
  DOCNode.fpfs_fetchFPItem(completion:)(sub_100066584, v38, ObjectType);
  swift_release(v36);
  swift_unknownObjectRelease(v35);
  v39 = swift_release(v38);
  v40 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
  v40(v14, v11, v39);
  return (void *)((uint64_t (*)(char *, uint64_t))v40)(v18, v11);
}

void sub_100252210(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t All;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  _OWORD v16[2];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v4 = v3;
  v5 = sub_100034068(0);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v6)
  {
    v7 = v5;
    v8 = v6 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v8 + 16) & 1) != 0)
      v9 = *(_QWORD *)(*(_QWORD *)v8 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v9 = *(_QWORD *)(v8 + 8);
    swift_unknownObjectRetain(v9);
    memset(v16, 0, sizeof(v16));
    v10 = (char *)DOCItemCollectionViewController.actionContext(from:)();
    sub_10000CB4C((uint64_t)v16, &qword_100642730);
    v11 = sub_10006922C((uint64_t *)&unk_1006424B0);
    All = Array<A>.fpfs_syncFetchAllFPItems()(v7, v11);
    if (All)
    {
      v13 = All;
      if (v9)
      {
        ObjectType = swift_getObjectType(v9);
        v15 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      }
      else
      {
        v15 = 0;
      }
      DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v2, v4, v13, v15, v10);
      swift_unknownObjectRelease(v9);

      swift_bridgeObjectRelease(v13);
    }
    else
    {

      swift_unknownObjectRelease(v9);
    }
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_100252384()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;

  objc_msgSend(v0, "loadViewIfNeeded");
  v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v2;
  objc_msgSend(v0, "loadViewIfNeeded");
  v3 = *(void **)&v0[v1];
  if (!v3)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (objc_msgSend(v3, "effectiveUserInterfaceLayoutDirection"))
    v4 = 4;
  else
    v4 = 3;
  sub_10024B194(v4, 0);

}

void sub_100252418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t All;
  uint64_t v19;
  uint64_t ObjectType;
  void *v21;
  _OWORD v22[2];
  char v23[40];

  v1 = v0;
  v2 = (uint64_t)sub_100034068(0);
  v3 = v2;
  if (!((unint64_t)v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v2 >= 0)
    v2 &= 0xFFFFFFFFFFFFFF8uLL;
  if (!_CocoaArrayWrapper.endIndex.getter(v2))
    goto LABEL_20;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    v4 = *(_QWORD *)(v3 + 32);
    swift_unknownObjectRetain(v4);
  }
  swift_bridgeObjectRelease(v3);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierReveal);
  v7 = v6;
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v8, v23);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)&v22[0] = inited;
  specialized Array._endMutation()(inited);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v10)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v11 = *(_QWORD *)&v22[0];
  v12 = v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v12 + 16) & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v12 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    v14 = v4;
    v15 = v13;
  }
  else
  {
    v14 = *(_QWORD *)(v12 + 8);
    v13 = v4;
    v15 = v14;
  }
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRetain(v13);
  memset(v22, 0, sizeof(v22));
  v16 = (char *)DOCItemCollectionViewController.actionContext(from:)();
  sub_10000CB4C((uint64_t)v22, &qword_100642730);
  v17 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(v11, v17);
  if (All)
  {
    v19 = All;
    if (v15)
    {
      ObjectType = swift_getObjectType(v15);
      v21 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    }
    else
    {
      v21 = 0;
    }
    DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v5, v7, v19, v21, v16);
    swift_unknownObjectRelease(v15);

    swift_bridgeObjectRelease(v19);
  }
  else
  {

    swift_unknownObjectRelease(v15);
  }
  swift_bridgeObjectRelease(v11);
  swift_unknownObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
}

unint64_t sub_100252678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006428E8;
  if (!qword_1006428E8)
  {
    v1 = sub_10004F2F0(255, &qword_1006428E0, NSIndexPath_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1006428E8);
  }
  return result;
}

uint64_t sub_1002526D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002526F4(void *a1)
{
  uint64_t v1;

  sub_10024CBEC(a1, v1);
}

void sub_100252700()
{
  uint64_t v0;

  sub_10024CCE4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100252708()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100252820()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___notificationsController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___notificationsController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___notificationsController];
  }
  else
  {
    v3 = v0;
    v4 = sub_10006922C((uint64_t *)&unk_1006492C0);
    swift_allocObject(v4, 32, 7);
    v5 = v0;
    v2 = NSNotification.SubscriptionsController.init(observee:)(v6);
    v7 = *(_QWORD *)&v3[v1];
    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release(v7);
  }
  swift_retain();
  return v2;
}

id sub_1002528C8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  char *v10;
  id v11;
  void *v12;
  id v13;
  NSString v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  objc_super v36;
  objc_super v37;
  objc_super v38;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v5);
  v10 = &v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_canDisplayExtension] = 0;
  v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___notificationsController] = 0;
  v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin] = 0x4000000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_contentSizeObserver] = 0;
  v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___clearButton] = 0;
  v38.receiver = v5;
  v38.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v38, "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, "setReturnKeyType:", 9);
  objc_msgSend(v11, "setEnablesReturnKeyAutomatically:", 1);
  v12 = (void *)objc_opt_self(DOCAXIdentifier);
  v13 = v11;
  v14 = objc_msgSend(v12, "inlineRenameField");
  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v17 = v16;
    v14 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  objc_msgSend(v13, "setAccessibilityIdentifier:", v14, v15);

  objc_msgSend(v13, "setSmartInsertDeleteType:", 1);
  v37.receiver = v13;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "setDelegate:", v13);
  v18 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v19 = swift_bridgeObjectRelease(a2).n128_u64[0];
  v36.receiver = v13;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "setText:", v18, v19);

  *((_BYTE *)v13 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_canDisplayExtension) = a3 & 1;
  *((_BYTE *)v13 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension) = a4 & 1;
  v20 = sub_100252820();
  v21 = UIKeyboardPrivateDidRequestDismissalNotification;
  v22 = (void *)objc_opt_self(NSOperationQueue);
  v23 = objc_msgSend(v22, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, uint64_t (*)(uint64_t, uint64_t), _QWORD))(*(_QWORD *)v20 + 144))(v21, &v35, v23, sub_100252C68, 0);
  v25 = v24;
  swift_release(v20);

  swift_bridgeObjectRelease(v25);
  sub_10007EB54((uint64_t)&v35);
  v26 = sub_100252820();
  v27 = objc_msgSend(v22, "mainQueue", 0, 0, 0, 0);
  (*(void (**)(const NSNotificationName, __int128 *, id, uint64_t (*)(uint64_t, uint64_t), _QWORD))(*(_QWORD *)v26 + 144))(UIApplicationDidEnterBackgroundNotification, &v35, v27, sub_100252D74, 0);
  v29 = v28;
  swift_release(v26);

  swift_bridgeObjectRelease(v29);
  sub_10007EB54((uint64_t)&v35);
  v30 = sub_100252820();
  v31 = objc_msgSend(v22, "mainQueue", 0, 0, 0, 0);
  (*(void (**)(const NSNotificationName, __int128 *, id, uint64_t (*)(uint64_t, uint64_t), _QWORD))(*(_QWORD *)v30 + 144))(UIApplicationDidEnterBackgroundNotification, &v35, v31, sub_100252D74, 0);
  v33 = v32;
  swift_release(v30);

  swift_bridgeObjectRelease(v33);
  sub_10007EB54((uint64_t)&v35);
  return v13;
}

uint64_t sub_100252C68(uint64_t a1, uint64_t a2)
{
  return sub_100252D7C(a1, a2, 1);
}

uint64_t sub_100252C70(char a1, uint64_t a2)
{
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  objc_super v17;

  v17.receiver = v2;
  v17.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v17, "text");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  if (String.count.getter(v6, v8) < 1 || (a1 & 1) == 0)
  {
    swift_bridgeObjectRelease(v8);
    v6 = 0;
    v8 = 0;
  }
  v10 = &v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate], v9);
  if (Strong)
  {
    v13 = Strong;
    v14 = *((_QWORD *)v10 + 1);
    ObjectType = swift_getObjectType(Strong, v12);
    (*(void (**)(char *, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v14 + 8))(v2, v6, v8, v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension], ObjectType, v14);
    swift_unknownObjectRelease(v13);
  }
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_100252D74(uint64_t a1, uint64_t a2)
{
  return sub_100252D7C(a1, a2, 0);
}

uint64_t sub_100252D7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  os_log_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint8_t *v33;
  int v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = Logger.Rename.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter(v16);
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v36 = v16;
    v19 = swift_slowAlloc(12, -1);
    v34 = v18;
    v20 = (uint8_t *)v19;
    v35 = swift_slowAlloc(32, -1);
    v40 = v35;
    v38 = v9;
    *(_DWORD *)v20 = 136315138;
    v32[1] = v20 + 4;
    v33 = v20;
    v21 = (void *)Notification.name.getter();
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v37 = v10;
    v23 = v22;
    v25 = v24;

    v39 = sub_1000544FC(v23, v25, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    v26 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
    v27 = v36;
    v28 = v33;
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v34, "Received %s notification", v33, 0xCu);
    v29 = v35;
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v38);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return sub_100252C70(a3 & 1, v30);
}

id DOCItemRenameTextView.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return sub_100255988((SEL *)&selRef_backgroundColor, a2);
}

void DOCItemRenameTextView.backgroundColor.setter(void *a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v4, "setBackgroundColor:", a1);

}

void (*DOCItemRenameTextView.backgroundColor.modify(objc_super **a1))(objc_super **a1, char a2)
{
  objc_class *v1;
  objc_super *v3;
  uint64_t ObjectType;

  v3 = (objc_super *)malloc(0x48uLL);
  *a1 = v3;
  v3[3].super_class = v1;
  ObjectType = swift_getObjectType(v1);
  v3[4].receiver = (id)ObjectType;
  v3->receiver = v1;
  v3->super_class = (Class)ObjectType;
  v3[3].receiver = -[objc_super backgroundColor](v3, "backgroundColor");
  return sub_100253108;
}

void sub_100253108(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  Class super_class;

  v2 = *a1;
  receiver = (*a1)[3].receiver;
  super_class = (*a1)[3].super_class;
  v4 = (objc_class *)(*a1)[4].receiver;
  if ((a2 & 1) != 0)
  {
    v2[1].receiver = super_class;
    v2[1].super_class = v4;
    objc_msgSendSuper2(v2 + 1, "setBackgroundColor:", receiver);
    receiver = v2[3].receiver;
  }
  else
  {
    v2[2].receiver = super_class;
    v2[2].super_class = v4;
    objc_msgSendSuper2(v2 + 2, "setBackgroundColor:", receiver);
  }

  free(v2);
}

void sub_100253180()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char **v12;
  id v13;
  id v14;
  id v15;
  objc_super v16;
  objc_super v17;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = sub_10006922C((uint64_t *)&unk_1006492B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle))
  {
    v12 = &selRef_clearColor;
LABEL_7:
    v13 = objc_msgSend((id)objc_opt_self(UIColor), *v12);
    v17.receiver = v1;
    v17.super_class = ObjectType;
    objc_msgSendSuper2(&v17, "setBackgroundColor:", v13);

    objc_msgSend(v1, "setHoverStyle:", 0);
    v14 = sub_1002533C0();
    objc_msgSend(v14, "setHoverStyle:", 0);

    v15 = sub_1002533C0();
    objc_msgSend(v15, "removeFromSuperview");

    return;
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) != 1)
  {
    v12 = &selRef_systemBackgroundColor;
    goto LABEL_7;
  }
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v16.receiver = v1;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, "setBackgroundColor:", v6);

  objc_msgSend(v1, "setHoverStyle:", 0);
  v7 = sub_1002533C0();
  sub_10004F2F0(0, &qword_100649070, UIHoverStyle_ptr);
  static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(0, -1, 6.0);
  v8 = type metadata accessor for UIShape(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  v9 = (void *)UIHoverStyle.init(shape:)(v5);
  objc_msgSend(v7, "setHoverStyle:", v9);

  v10 = sub_1002533C0();
  v11 = objc_msgSend(v10, "superview");

  if (!v11)
    sub_10025341C();
}

id sub_1002533C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___backgroundView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___backgroundView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___backgroundView);
  }
  else
  {
    v4 = sub_10025451C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10025341C()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  uint64_t v22;
  Class isa;
  double v24;
  double v25;
  double Height;
  double v27;
  char *v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  CGRect v35;

  v1 = v0;
  v2 = objc_msgSend(v0, "superview");
  if (v2)
  {
    v34 = v2;
    v3 = sub_1002533C0();
    objc_msgSend(v34, "insertSubview:belowSubview:", v3, v1);

    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v6 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1004D9720;
    v7 = sub_1002533C0();
    v8 = objc_msgSend(v7, "topAnchor");

    v9 = objc_msgSend(v1, "topAnchor");
    v10 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin;
    v11 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, -*(double *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin]);

    *(_QWORD *)(v6 + 32) = v11;
    v12 = sub_1002533C0();
    v13 = objc_msgSend(v12, "leadingAnchor");

    v14 = objc_msgSend(v1, "leadingAnchor");
    objc_msgSend(v1, "textContainerInset");
    v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, v15);

    *(_QWORD *)(v6 + 40) = v16;
    v17 = sub_1002533C0();
    v18 = objc_msgSend(v17, "trailingAnchor");

    v19 = objc_msgSend(v1, "trailingAnchor");
    objc_msgSend(v1, "textContainerInset");
    v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -v20);

    *(_QWORD *)(v6 + 48) = v21;
    specialized Array._endMutation()(v22);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      objc_msgSend(v1, "contentSize");
      v25 = v24;
      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v35);
      if (Height >= v25)
        Height = v25;
      v27 = Height + *(double *)&v1[v10] + *(double *)&v1[v10];
      v28 = (char *)sub_1002533C0();
      *(double *)&v28[OBJC_IVAR____TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView_preferredHeight] = v27;
      objc_msgSend(v28, "invalidateIntrinsicContentSize");

    }
    v29 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView_contentSizeObserver;
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_contentSizeObserver])
    {

    }
    else
    {
      KeyPath = swift_getKeyPath(&unk_1004DE190);
      v31 = swift_allocObject(&unk_1005D4EC0, 24, 7);
      swift_unknownObjectWeakInit(v31 + 16);
      v32 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_10025647C, v31, &protocol witness table for NSObject);
      swift_release(v31);

      swift_release(KeyPath);
      v33 = *(void **)&v1[v29];
      *(_QWORD *)&v1[v29] = v32;

    }
  }
}

Swift::Void __swiftcall DOCItemRenameTextView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double Height;
  double v4;
  char *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  id v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  objc_super v23;
  CGRect v24;

  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v23, "layoutSubviews");
  if (v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] == 1)
  {
    objc_msgSend(v0, "contentSize");
    v2 = v1;
    objc_msgSend(v0, "bounds");
    Height = CGRectGetHeight(v24);
    if (Height >= v2)
      Height = v2;
    v4 = Height
       + *(double *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin]
       + *(double *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin];
    v5 = (char *)sub_1002533C0();
    *(double *)&v5[OBJC_IVAR____TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView_preferredHeight] = v4;
    objc_msgSend(v5, "invalidateIntrinsicContentSize");

  }
  if (v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] == 1)
  {
    v6 = objc_msgSend(v0, "textContainerInset");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = sub_100253CE8((uint64_t)v6, v15);
    objc_msgSend(v16, "frame");
    v18 = v17;

    v19 = v18 + 0.0;
    v20 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
    if (v20)
      v21 = v14;
    else
      v21 = v19;
    if (v20)
      v22 = v19;
    else
      v22 = v10;
    objc_msgSend(v0, "setTextContainerInset:", v8, v22, v12, v21);
  }
}

void sub_100253974(char *a1, uint64_t a2)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  objc_super v15;

  if (*((_BYTE *)v2 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension) == 1)
  {
    v15.receiver = v2;
    v15.super_class = (Class)swift_getObjectType(v2, a2);
    v4 = objc_msgSendSuper2(&v15, "text");
    if (v4)
    {
      v5 = v4;
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v8 = v7;

    }
    else
    {
      v6 = 0;
      v8 = 0xE000000000000000;
    }
    v9 = sub_100255DBC(v6, v8, a1);
    swift_bridgeObjectRelease(v8);
    v10 = objc_msgSend(v2, "endOfDocument");
    if (__OFSUB__(0, v9))
    {
      __break(1u);
    }
    else
    {
      v11 = v10;
      v12 = objc_msgSend(v2, "positionFromPosition:offset:", v10, -(uint64_t)v9);

      if (v12)
      {
        v13 = objc_msgSend(v2, "beginningOfDocument");
        v14 = objc_msgSend(v2, "textRangeFromPosition:toPosition:", v13, v12);

        objc_msgSend(v2, "setSelectedTextRange:", v14);
      }
    }
  }
  else
  {
    objc_msgSend(v2, "selectAll:", 0);
  }
}

void sub_100253AF8(char *a1, uint64_t a2)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  objc_super v14;

  if (*((_BYTE *)v2 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension) != 1)
  {
    v9 = objc_msgSend(v2, "endOfDocument");
LABEL_8:
    v13 = objc_msgSend(v2, "textRangeFromPosition:toPosition:", v9, v9);
    objc_msgSend(v2, "setSelectedTextRange:", v13);

    return;
  }
  v14.receiver = v2;
  v14.super_class = (Class)swift_getObjectType(v2, a2);
  v4 = objc_msgSendSuper2(&v14, "text");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v10 = sub_100255DBC(v6, v8, a1);
  swift_bridgeObjectRelease(v8);
  v11 = objc_msgSend(v2, "endOfDocument");
  if (__OFSUB__(0, v10))
  {
    __break(1u);
    return;
  }
  v12 = v11;
  v9 = objc_msgSend(v2, "positionFromPosition:offset:", v11, -(uint64_t)v10);

  if (v9)
    goto LABEL_8;
}

Swift::Void __swiftcall DOCItemRenameTextView.willMove(toSuperview:)(UIView_optional toSuperview)
{
  uint64_t v1;
  id v2;
  id v3;

  if (!toSuperview.value.super.super.isa)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) == 1)
    {
      v2 = sub_1002533C0();
      objc_msgSend(v2, "removeFromSuperview");

    }
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton) == 1)
    {
      v3 = sub_100253CE8((uint64_t)toSuperview.value.super.super.isa, *(uint64_t *)&toSuperview.is_nil);
      objc_msgSend(v3, "removeFromSuperview");

    }
  }
}

id sub_100253CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___clearButton;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___clearButton);
  if (v4)
  {
    v5 = *(id *)(v2 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___clearButton);
  }
  else
  {
    v6 = sub_1002547B8(v2, a2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void sub_100253DA0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  unint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  objc_super v31;
  objc_super v32;
  uint64_t v33;
  unint64_t v34;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension;
  if ((v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension] & 1) == 0)
  {
    v7 = (objc_class *)ObjectType;
    v8 = &v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate], v5);
    if (Strong)
    {
      v11 = Strong;
      v12 = *((_QWORD *)v8 + 1);
      v13 = swift_getObjectType(Strong, v10);
      v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v3, v13, v12);
      v16 = v15;
      swift_unknownObjectRelease(v11);
      if (v16)
      {
        v3[v6] = 1;
        v33 = 46;
        v34 = 0xE100000000000000;
        v17._countAndFlagsBits = v14;
        v17._object = v16;
        String.append(_:)(v17);
        v32.receiver = v3;
        v32.super_class = v7;
        v18 = objc_msgSendSuper2(&v32, "text");
        if (v18)
        {
          v19 = v18;
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          v22 = v21;

        }
        else
        {
          v20 = 0;
          v22 = 0xE000000000000000;
        }
        v33 = v20;
        v34 = v22;
        v23._countAndFlagsBits = 46;
        v23._object = (void *)0xE100000000000000;
        String.append(_:)(v23);
        swift_bridgeObjectRelease(0xE100000000000000);
        v24 = v34;
        v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v24);
        v31.receiver = v3;
        v31.super_class = v7;
        objc_msgSendSuper2(&v31, "setText:", v25);

        v26 = objc_msgSend(v3, "endOfDocument");
        v27 = String.UTF16View.count.getter(v14, v16);
        swift_bridgeObjectRelease(v16);
        if (__OFSUB__(0, v27))
        {
          __break(1u);
        }
        else
        {
          v28 = objc_msgSend(v3, "positionFromPosition:offset:", v26, -v27);
          if (v28)
          {
            v29 = v28;
            v30 = objc_msgSend(v3, "textRangeFromPosition:toPosition:", v28, v26);
            objc_msgSend(v3, "setSelectedTextRange:", v30);

          }
        }
      }
    }
  }
}

Swift::Void __swiftcall DOCItemRenameTextView.didMoveToSuperview()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v1, "didMoveToSuperview");
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) == 1)
    sub_10025341C();
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton) == 1)
    sub_100254078();
}

void sub_100254078()
{
  unsigned __int8 *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  id v24;
  uint64_t v25;

  v1 = objc_msgSend(v0, "superview");
  if (v1)
  {
    v3 = v1;
    v4 = sub_100253CE8((uint64_t)v1, v2);
    objc_msgSend(v3, "insertSubview:aboveSubview:", v4, v0);

    v7 = sub_100253CE8(v5, v6);
    v8 = objc_msgSend(v7, "trailingAnchor");

    v9 = objc_msgSend(v0, "trailingAnchor");
    v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, -3.0);

    v11 = v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle];
    v14 = sub_100253CE8(v12, v13);
    v15 = objc_msgSend(v14, "centerYAnchor");

    if (v11 == 1)
    {
      v16 = sub_1002533C0();
      v17 = objc_msgSend(v16, "centerYAnchor");

    }
    else
    {
      v17 = objc_msgSend(v0, "centerYAnchor");
    }
    v18 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v17, 1.0);

    v19 = (void *)objc_opt_self(NSLayoutConstraint);
    v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v21 = swift_allocObject(v20, 48, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004DA350;
    *(_QWORD *)(v21 + 32) = v10;
    *(_QWORD *)(v21 + 40) = v18;
    v25 = v21;
    specialized Array._endMutation()(v21);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v22 = v10;
    v24 = v18;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

  }
}

uint64_t DOCItemRenameTextView.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_super v15;
  _QWORD v16[3];
  uint64_t v17;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  if ((static Selector.== infix(_:_:)(a1, "captureTextFromCamera:") & 1) != 0)
    return 0;
  if ((static Selector.== infix(_:_:)(a1, "editExtension:") & 1) != 0)
    return 1;
  sub_1000685A8(a2, (uint64_t)v16);
  v7 = v17;
  if (v17)
  {
    v8 = sub_10007E7A0(v16, v17);
    v9 = *(_QWORD *)(v7 - 8);
    v10 = __chkstk_darwin(v8);
    v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v9 + 16))(v12, v10);
    v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    sub_100068588(v16);
  }
  else
  {
    v13 = 0;
  }
  v15.receiver = v2;
  v15.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v15, "canPerformAction:withSender:", a1, v13);
  swift_unknownObjectRelease(v13);
  return (uint64_t)v6;
}

id sub_10025451C()
{
  id v0;
  double v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCResizingBackgroundView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v1) = 1144750080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 1, v1);
  objc_msgSend(v0, "setClipsToBounds:", 1);
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v0;
  v4 = objc_msgSend(v2, "secondarySystemFillColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v3, "layer");
  objc_msgSend(v5, "setCornerRadius:", 6.0);

  v6 = objc_msgSend(v3, "layer");
  objc_msgSend(v6, "setCornerCurve:", kCACornerCurveContinuous);

  LODWORD(v7) = 1148846080;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 1, v7);
  LODWORD(v8) = 1144750080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 1, v8);
  return v3;
}

void sub_1002546A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *Strong;
  char *v5;
  double v6;
  double v7;
  double v8;
  double Height;
  double v10;
  char *v11;
  char v12[24];
  CGRect v13;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "contentSize");
    if (v6 > 0.0 && v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      objc_msgSend(v5, "contentSize");
      v8 = v7;
      objc_msgSend(v5, "bounds");
      Height = CGRectGetHeight(v13);
      if (Height >= v8)
        Height = v8;
      v10 = Height
          + *(double *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin]
          + *(double *)&v5[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin];
      v11 = (char *)sub_1002533C0();
      *(double *)&v11[OBJC_IVAR____TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView_preferredHeight] = v10;
      objc_msgSend(v11, "invalidateIntrinsicContentSize");

      v5 = v11;
    }

  }
}

void *sub_1002547B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  double v28;
  double v29;
  id v30;
  id v31;
  uint64_t v33;

  v2 = type metadata accessor for UIButton.Configuration(0, a2);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = (void *)objc_opt_self(UIDevice);

  static UIButton.Configuration.borderless()(v13);
  v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 2);
  v15 = (void *)objc_opt_self(UIImage);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "__systemImageNamedSwift:", v16);

  if (v17)
  {
    v18 = objc_msgSend(v17, "imageWithConfiguration:", v14);

  }
  else
  {
    v18 = 0;
  }
  UIButton.Configuration.image.setter(v18);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  UIButton.Configuration.baseForegroundColor.setter(v19);

  sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v8, v11, v2);
  v21 = swift_allocObject(&unk_1005D4EC0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  v20(v5, v8, v2);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v22 = swift_allocObject(&unk_1005D4EE8, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_100256484;
  *(_QWORD *)(v22 + 24) = v21;
  v23 = swift_retain_n(v21, 2);
  v24 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v23, 0, 0, 0, sub_1000D9F90, v22);
  v25 = (void *)UIButton.init(configuration:primaryAction:)(v5, v24);
  v26 = swift_release(v21);
  v27 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v27(v8, v2, v26);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_release(v21).n128_f64[0]);
  LODWORD(v28) = 1148846080;
  objc_msgSend(v25, "setContentCompressionResistancePriority:forAxis:", 0, v28);
  LODWORD(v29) = 1148846080;
  objc_msgSend(v25, "setContentCompressionResistancePriority:forAxis:", 1, v29);
  v30 = objc_msgSend(v25, "heightAnchor");
  v31 = objc_msgSend(v30, "constraintGreaterThanOrEqualToConstant:", 44.0);

  objc_msgSend(v31, "setActive:", 1);
  ((void (*)(char *, uint64_t))v27)(v11, v2);
  return v25;
}

void sub_100254B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100254BB8();

  }
}

void sub_100254BB8()
{
  _BYTE *v0;
  _BYTE *v1;
  objc_class *ObjectType;
  id v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  Swift::Bool v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  NSString v27;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  NSString v31;
  double v32;
  id v33;
  id v34;
  NSString v35;
  double v36;
  double v37;
  double Height;
  double v39;
  char *v40;
  void *v41;
  unsigned int v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  char v49;
  void *v50;
  objc_super v51;
  objc_super v52;
  objc_super v53;
  uint64_t v54;
  unint64_t v55;
  objc_super v56;
  objc_super v57;
  objc_super v58;
  CGRect v59;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v58.receiver = v0;
  v58.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v58, "text");
  if (v3)
  {
    v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

  }
  else
  {
    v6 = 0xE000000000000000;
  }
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v7, "pathExtension", swift_bridgeObjectRelease(v6).n128_f64[0]);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v13 = OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension;
  if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension] != 1)
    goto LABEL_12;
  v51.receiver = v1;
  v51.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v51, "text");
  if (v14)
  {
    v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

  }
  else
  {
    v17 = 0xE000000000000000;
  }
  v18._countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  v19 = String.hasPrefix(_:)(v18);
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v17).n128_u64[0];
  if (!v19)
    goto LABEL_12;
  v20 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v20 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRelease(v11);
  }
  else
  {
LABEL_12:
    v21 = objc_msgSend(v1, "undoManager", v12);
    if (v21)
    {
      v22 = v21;
      v52.receiver = v1;
      v52.super_class = ObjectType;
      v23 = objc_msgSendSuper2(&v52, "text");
      if (v23)
      {
        v24 = v23;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

      }
      else
      {
        v26 = 0xE000000000000000;
      }
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "registerUndoWithTarget:selector:object:", v1, "undoClearTextWithPreviousText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
    if (v1[v13] != 1)
      goto LABEL_22;
    v28 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v28 = v9 & 0xFFFFFFFFFFFFLL;
    if (v28)
    {
      v54 = 46;
      v55 = 0xE100000000000000;
      v29._countAndFlagsBits = v9;
      v29._object = (void *)v11;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(v11);
      v30 = v55;
      v31 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
      v53.receiver = v1;
      v53.super_class = ObjectType;
      objc_msgSendSuper2(&v53, "setText:", v31, v32);

      v33 = objc_msgSend(v1, "beginningOfDocument");
      v34 = objc_msgSend(v1, "beginningOfDocument");
      v35 = objc_msgSend(v1, "textRangeFromPosition:toPosition:", v33, v34);

      objc_msgSend(v1, "setSelectedTextRange:", v35);
    }
    else
    {
LABEL_22:
      swift_bridgeObjectRelease(v11);
      v35 = String._bridgeToObjectiveC()();
      v57.receiver = v1;
      v57.super_class = ObjectType;
      objc_msgSendSuper2(&v57, "setText:", v35);
    }

    if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      objc_msgSend(v1, "contentSize");
      v37 = v36;
      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v59);
      if (Height >= v37)
        Height = v37;
      v39 = Height
          + *(double *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin]
          + *(double *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin];
      v40 = (char *)sub_1002533C0();
      *(double *)&v40[OBJC_IVAR____TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView_preferredHeight] = v39;
      objc_msgSend(v40, "invalidateIntrinsicContentSize");

    }
    if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] == 1)
    {
      v41 = (void *)((uint64_t (*)(void))sub_100253CE8)();
      v42 = objc_msgSend(v41, "isHidden");

      v56.receiver = v1;
      v56.super_class = ObjectType;
      v43 = objc_msgSendSuper2(&v56, "text");
      if (v43)
      {
        v44 = v43;
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
        v47 = v46;

        if (v45)
          goto LABEL_35;
      }
      else
      {
        v45 = 0;
        v47 = 0xE000000000000000;
      }
      if (v47 == 0xE000000000000000)
      {
        v48 = swift_bridgeObjectRelease(0xE000000000000000);
        if ((v42 & 1) != 0)
          return;
        v49 = 1;
LABEL_36:
        v50 = (void *)sub_100253CE8(v48);
        objc_msgSend(v50, "setHidden:", v49 & 1);

        return;
      }
LABEL_35:
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, 0, 0xE000000000000000, 0);
      v48 = swift_bridgeObjectRelease(v47);
      if (v42 == (v49 & 1))
        return;
      goto LABEL_36;
    }
  }
}

unint64_t DOCItemRenameTextView.keyCommands.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  NSString v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  objc_super v12;
  unint64_t v13;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType(v0);
  v1 = objc_msgSendSuper2(&v12, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v4 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)v4;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:", v5, 0, "endEdtingCell");

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
  specialized Array._endMutation()(v10);
  return v13;
}

Swift::Bool __swiftcall DOCItemRenameTextView.textView(_:shouldChangeTextIn:replacementText:)(UITextView _, __C::_NSRange shouldChangeTextIn, Swift::String replacementText)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  uint64_t v6;

  object = replacementText._object;
  countAndFlagsBits = replacementText._countAndFlagsBits;
  v5 = -[objc_class markedTextRange](_.super.super.super.super.isa, "markedTextRange", shouldChangeTextIn.length);

  if (v5
    || (countAndFlagsBits != 10 || object != (void *)0xE100000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, 10, 0xE100000000000000, 0) & 1) == 0)
  {
    return 1;
  }
  sub_100252C70(1, v6);
  return 0;
}

Swift::Void __swiftcall DOCItemRenameTextView.textViewDidChange(_:)(UITextView a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double Height;
  double v10;
  char *v11;
  id v12;
  unsigned int v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  objc_super v23;
  CGRect v24;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = -[objc_class markedTextRange](a1.super.super.super.super.isa, "markedTextRange");

  if (!v4)
  {
    if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] == 1)
    {
      objc_msgSend(v1, "contentSize");
      v8 = v7;
      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v24);
      if (Height >= v8)
        Height = v8;
      v10 = Height
          + *(double *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin]
          + *(double *)&v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin];
      v11 = (char *)sub_1002533C0();
      *(double *)&v11[OBJC_IVAR____TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView_preferredHeight] = v10;
      objc_msgSend(v11, "invalidateIntrinsicContentSize");

    }
    if (v1[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] == 1)
    {
      v12 = sub_100253CE8(v5, v6);
      v13 = objc_msgSend(v12, "isHidden");

      v23.receiver = v1;
      v23.super_class = ObjectType;
      v14 = objc_msgSendSuper2(&v23, "text");
      if (v14)
      {
        v15 = v14;
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v18 = v17;

        if (v16)
          goto LABEL_14;
      }
      else
      {
        v16 = 0;
        v18 = 0xE000000000000000;
      }
      if (v18 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease(0xE000000000000000);
        if ((v13 & 1) != 0)
          return;
        v21 = 1;
LABEL_15:
        v22 = sub_100253CE8(v19, v20);
        objc_msgSend(v22, "setHidden:", v21 & 1);

        return;
      }
LABEL_14:
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, 0, 0xE000000000000000, 0);
      swift_bridgeObjectRelease(v18);
      if (v13 == (v21 & 1))
        return;
      goto LABEL_15;
    }
  }
}

UIMenu_optional __swiftcall DOCItemRenameTextView.textView(_:editMenuForTextIn:suggestedActions:)(UITextView _, __C::_NSRange editMenuForTextIn, Swift::OpaquePointer suggestedActions)
{
  objc_class *v3;
  Swift::Bool v4;
  UIMenu_optional result;

  v3 = sub_1002560C4((UIMenuElementSize)suggestedActions._rawValue);
  result.value.super.super.isa = v3;
  result.is_nil = v4;
  return result;
}

uint64_t sub_1002555B4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD v8[4];
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v8[3] = sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v8[0] = a1;
    v6 = a1;
    sub_100253DA0((uint64_t)v6, v7);

    return sub_10007EB54((uint64_t)v8);
  }
  return result;
}

id DOCItemRenameTextView.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), "initWithFrame:textContainer:", a1, a2, a3, a4, a5);

  return v7;
}

void DOCItemRenameTextView.init(frame:textContainer:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCItemRenameTextView", 27, "init(frame:textContainer:)", 26, 0);
  __break(1u);
}

id sub_100255938(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, *a3);
}

id DOCItemRenameTextView.delegate.getter(uint64_t a1, uint64_t a2)
{
  return sub_100255988((SEL *)&selRef_delegate, a2);
}

id sub_100255988(SEL *a1, uint64_t a2)
{
  void *v2;
  objc_super v5;

  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v5, *a1);
}

uint64_t (*DOCItemRenameTextView.delegate.modify(objc_super *a1))(uint64_t a1)
{
  void *v1;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v1);
  a1->receiver = v1;
  a1->super_class = (Class)ObjectType;
  a1[1].receiver = -[objc_super delegate](a1, "delegate");
  return sub_100255A20;
}

uint64_t sub_100255A20(uint64_t a1)
{
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t DOCItemRenameTextView.text.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType(v2, a2);
  v3 = objc_msgSendSuper2(&v7, "text");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v5;
}

void DOCItemRenameTextView.text.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  NSString v5;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v5 = 0;
  }
  v6.receiver = v2;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, "setText:", v5);

}

void (*DOCItemRenameTextView.text.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;
  id v5;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  objc_class *v9;

  v3 = (objc_super *)malloc(0x50uLL);
  *a1 = v3;
  v3[4].receiver = v1;
  ObjectType = swift_getObjectType(v1);
  v3[4].super_class = (Class)ObjectType;
  v3[1].receiver = v1;
  v3[1].super_class = (Class)ObjectType;
  v5 = objc_msgSendSuper2(v3 + 1, "text");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v3->receiver = (id)v7;
  v3->super_class = v9;
  return sub_100255CE4;
}

void sub_100255CE4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  NSString v5;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(*a1 + 8));
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v4 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 64);
    objc_msgSendSuper2((objc_super *)(v2 + 32), "setText:", v4);

    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 8));
  }
  else
  {
    if (v3)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v5 = 0;
    }
    *(_OWORD *)(v2 + 48) = *(_OWORD *)(v2 + 64);
    objc_msgSendSuper2((objc_super *)(v2 + 48), "setText:", v5);

  }
  free((void *)v2);
}

char *sub_100255DBC(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  char *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  char *result;
  uint64_t v34;

  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
    goto LABEL_15;
  v10 = objc_msgSend(a3, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v10);

  v11 = UTType.preferredFilenameExtension.getter();
  a3 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!a3)
    goto LABEL_15;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v13, "pathExtension");

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  if (v11 == v15 && a3 == v17)
  {
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, a3, v15, v17, 0);
    swift_bridgeObjectRelease(v17);
    if ((v19 & 1) == 0)
      goto LABEL_14;
  }
  swift_bridgeObjectRetain(a3);
  v20 = String.UTF16View.count.getter(v11, a3);
  swift_bridgeObjectRelease(a3);
  if (v20 < 1)
  {
LABEL_14:
    swift_bridgeObjectRelease(a3);
    a3 = 0;
    goto LABEL_15;
  }
  v21 = String.UTF16View.count.getter(v11, a3);
  swift_bridgeObjectRelease(a3);
  a3 = (char *)(v21 + 1);
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  swift_bridgeObjectRetain(a2);
  v22 = sub_1003C1AFC((uint64_t)a3, a1, a2);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease(a2);
  static String._fromSubstring(_:)(v22, v24, v26, v28);
  v30 = v29;
  swift_bridgeObjectRelease(v28);
  v31 = String.fileSuffixChain()();
  swift_bridgeObjectRelease(v30);
  v32 = String.UTF16View.count.getter(v31._countAndFlagsBits, v31._object);
  swift_bridgeObjectRelease(v31._object);
  result = &a3[v32];
  if (__OFADD__(a3, v32))
    __break(1u);
  return result;
}

void sub_100255FF0()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_canDisplayExtension] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___notificationsController] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_verticalMargin] = 0x4000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_contentSizeObserver] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemRenameTextView____lazy_storage___clearButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCItemRenameTextView.swift", 33, 2, 44, 0);
  __break(1u);
}

Class sub_1002560C4(UIMenuElementSize a1)
{
  uint64_t v1;
  UIMenuElementSize preferredElementSize;
  char v3;
  uint64_t v4;
  Class result;
  Class v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  __n128 v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::String v17;
  unint64_t v18;
  Swift::OpaquePointer v19;
  UIImage_optional v21;
  Swift::String swift__string;

  preferredElementSize = a1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_canDisplayExtension) != 1)
  {
    swift_bridgeObjectRetain(a1);
    goto LABEL_8;
  }
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_isDisplayingExtension);
  v4 = swift_bridgeObjectRetain(a1);
  if ((v3 & 1) != 0)
  {
LABEL_8:
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v21.value.super.isa = 0;
    v21.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v19).super.super.isa;
  }
  result = (Class)(id)_DocumentManagerBundle(v4);
  if (result)
  {
    v6 = result;
    swift__string._object = (void *)0x800000010051D640;
    v7._countAndFlagsBits = 0x7478452074696445;
    v7._object = (void *)0xEE006E6F69736E65;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    swift__string._countAndFlagsBits = 0xD000000000000052;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, swift__string);

    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v11 = swift_allocObject(&unk_1005D4EC0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v13 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10._countAndFlagsBits, v10._object, 0, 0, 0, 0, 0, 0, v12, 0, 0, 0, sub_100256460, v11);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v15 >> 1)
    {
      v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v14 + 1, 1);
      v14 = v18;
    }
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
    specialized Array._endMutation()(v16);

    preferredElementSize = a1;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCResizingBackgroundView()
{
  return objc_opt_self(_TtC5FilesP33_09D0274269B98F0636737C10BDC1F70925DOCResizingBackgroundView);
}

uint64_t type metadata accessor for DOCItemRenameTextView()
{
  return objc_opt_self(_TtC5Files21DOCItemRenameTextView);
}

uint64_t storeEnumTagSinglePayload for DOCItemRenameTextView.BackgroundStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100256374 + 4 * byte_1004DE095[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002563A8 + 4 * byte_1004DE090[v4]))();
}

uint64_t sub_1002563A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002563B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002563B8);
  return result;
}

uint64_t sub_1002563C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002563CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002563D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002563D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemRenameTextView.BackgroundStyle()
{
  return &type metadata for DOCItemRenameTextView.BackgroundStyle;
}

unint64_t sub_1002563F8()
{
  unint64_t result;

  result = qword_1006492A8;
  if (!qword_1006492A8)
  {
    result = swift_getWitnessTable(&unk_1004DE158, &type metadata for DOCItemRenameTextView.BackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1006492A8);
  }
  return result;
}

uint64_t sub_10025643C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100256460(void *a1)
{
  uint64_t v1;

  return sub_1002555B4(a1, v1);
}

const char *sub_100256468()
{
  return "contentSize";
}

void sub_10025647C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002546A0(a1, a2, v2);
}

void sub_100256484()
{
  uint64_t v0;

  sub_100254B68(v0);
}

uint64_t sub_10025648C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

objc_class *sub_1002564B0(uint64_t a1)
{
  char v1;
  objc_class *result;
  objc_class *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSBundle v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t countAndFlagsBits;
  unint64_t v13;

  v1 = a1;
  result = (objc_class *)(id)_DocumentManagerBundle(a1);
  v3 = result;
  if ((v1 & 1) != 0)
  {
    if (result)
    {
      v6 = 0xD00000000000001ELL;
      v4 = 0xD000000000000039;
      v13 = 0x800000010051DAB0;
      v5 = 0x800000010051DA90;
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v3;
      v10 = 0x6E6F697461636F4CLL;
      v11 = 0xE900000000000073;
      goto LABEL_6;
    }
  }
  else
  {
    if (result)
    {
      v4 = 0xD000000000000037;
      v13 = 0x800000010051DB10;
      v5 = 0x800000010051DAF0;
      v6 = 0xD00000000000001CLL;
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v3;
      v10 = 0x73746E65636552;
      v11 = 0xE700000000000000;
LABEL_6:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, *(Swift::String_optional *)&v7, v9, *(Swift::String *)&v10, *(Swift::String *)&v4)._countAndFlagsBits;

      return (objc_class *)countAndFlagsBits;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1002565F4(_QWORD *a1@<X8>)
{
  *a1 = &off_1005C00E8;
}

uint64_t sub_100256604()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_100256630@<X0>(uint64_t a1@<X8>)
{
  id v2;
  char *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v2 = sub_100257308();
  sub_100454700((uint64_t)&v6);

  if (v7)
    return sub_1000E85C4(&v6, a1);
  v4 = (char *)sub_100257308();
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
  swift_bridgeObjectRetain(v5);

  if (*(_QWORD *)(v5 + 16))
  {
    sub_100092328(v5 + 32, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  swift_bridgeObjectRelease(v5);
  return sub_10000CB4C((uint64_t)&v6, &qword_100649580);
}

void sub_1002566F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  _BOOL8 v16;
  _QWORD v17[5];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[40];
  _BYTE v22[24];
  uint64_t v23;
  _BYTE v24[24];

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, v24, 0, 0);
  sub_1000271D4(v4, (uint64_t)v22, &qword_100649598);
  v5 = v23;
  sub_10000CB4C((uint64_t)v22, &qword_100649598);
  sub_1000271D4(a1, (uint64_t)v22, &qword_100649598);
  if (!v5)
  {
    sub_10000CB4C((uint64_t)v22, &qword_100649598);
    sub_1000271D4(a1, (uint64_t)v21, &qword_100649598);
    goto LABEL_8;
  }
  v6 = v23;
  sub_10000CB4C((uint64_t)v22, &qword_100649598);
  sub_1000271D4(a1, (uint64_t)v21, &qword_100649598);
  if (!v6)
  {
LABEL_8:
    sub_10000CB4C((uint64_t)v21, &qword_100649598);
LABEL_9:
    v11 = (char *)sub_100257308();
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
    *(_QWORD *)&v11[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v12);
    sub_100455784();
    v13 = objc_msgSend(v11, "collectionView");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "reloadData");

LABEL_11:
      v15 = (void *)sub_100256B2C(v10);
      sub_1000271D4(v4, (uint64_t)v22, &qword_100649598);
      v16 = v23 == 0;
      sub_10000CB4C((uint64_t)v22, &qword_100649598);
      objc_msgSend(v15, "setHidden:", v16);

      return;
    }
    __break(1u);
    goto LABEL_13;
  }
  sub_1000271D4((uint64_t)v21, (uint64_t)v18, &qword_100649598);
  v7 = v19;
  if (!v19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v20;
  sub_10007E7A0(v18, v19);
  sub_1000271D4(v4, (uint64_t)v17, &qword_100649598);
  if (v17[3])
  {
    v9 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v17, v7, v8);
    sub_10000CB4C((uint64_t)v21, &qword_100649598);
    sub_100068588(v17);
    v10 = sub_100068588(v18);
    if ((v9 & 1) != 0)
      goto LABEL_11;
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
}

id sub_100256924()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___inputField, (uint64_t (*)(uint64_t))sub_100256938);
}

char *sub_100256938(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  char *result;
  char *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  double v11;
  char *v12;
  Swift::String v13;

  v2 = type metadata accessor for DOCGoToTextField();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  result = (char *)(id)_DocumentManagerBundle(v3);
  if (result)
  {
    v5 = result;
    v13._countAndFlagsBits = 0xD000000000000027;
    v13._object = (void *)0x800000010051DC30;
    v6._object = (void *)0x800000010051DC10;
    v6._countAndFlagsBits = 0xD00000000000001ALL;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0x6F46206F74206F47;
    v8._object = (void *)0xAFA680E27265646CLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v13)._object;

    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setPlaceholder:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

    objc_msgSend(v3, "addTarget:action:forControlEvents:", a1, "inputTextFieldDidChange:", 0x20000);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 1, v11);
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v3, "setClearButtonMode:", 0);
    objc_msgSend(v3, "setReturnKeyType:", 1);
    v12 = &v3[OBJC_IVAR____TtC5Files17DOCTokenTextField_dataSource];
    *((_QWORD *)v12 + 1) = &off_1005D4FE8;
    swift_unknownObjectWeakAssign(v12, a1);
    objc_msgSend(v3, "setDelegate:", a1);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100256B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  __n128 v27;
  double v28;
  void *v29;
  id v30;
  _QWORD v32[2];

  v3 = v2;
  v4 = type metadata accessor for UIButton.Configuration(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v32 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v32 - v12;
  v14 = OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___goButton;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___goButton);
  if (v15)
  {
    v16 = *(id *)(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___goButton);
  }
  else
  {
    v17 = (void *)objc_opt_self(UIDevice);

    static UIButton.Configuration.borderless()(v18);
    sub_100256E20();
    v32[1] = sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
    v19 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v19(v10, v13, v4);
    v20 = swift_allocObject(&unk_1005D50F8, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16);
    v19(v7, v10, v4);
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v21 = swift_allocObject(&unk_1005D5148, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_10025C198;
    *(_QWORD *)(v21 + 24) = v20;
    v22 = swift_retain_n(v20, 2);
    v23 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v22, 0, 0, 0, sub_1000D9F90, v21);
    v24 = (void *)UIButton.init(configuration:primaryAction:)(v7, v23);
    v25 = swift_release(v20);
    v26 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
    v26(v10, v4, v25);
    v27 = swift_release(v20);
    v27.n128_u32[0] = 1144750080;
    objc_msgSend(v24, "setContentHuggingPriority:forAxis:", 0, v27.n128_f64[0]);
    LODWORD(v28) = 1144750080;
    objc_msgSend(v24, "setContentHuggingPriority:forAxis:", 1, v28);
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v24, "setHidden:", 1);
    objc_msgSend(v24, "setPointerInteractionEnabled:", 1);
    UIButton.pointerStyleProvider.setter(sub_100256FA4, 0);
    ((void (*)(char *, uint64_t))v26)(v13, v4);
    v29 = *(void **)(v3 + v14);
    *(_QWORD *)(v3 + v14) = v24;
    v16 = v24;

    v15 = 0;
  }
  v30 = v15;
  return v16;
}

void sub_100256E20()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v1 = objc_msgSend(v0, "configurationWithTextStyle:", UIFontTextStyleHeadline);
  v2 = objc_msgSend(v0, "configurationWithWeight:", 6);
  v3 = objc_msgSend(v1, "configurationByApplyingConfiguration:", v2);

  v6 = v3;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v6);

  UIButton.Configuration.image.setter(v5);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

}

void sub_100256F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100258D74();

  }
}

uint64_t sub_100256FA4(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_10006922C((uint64_t *)&unk_1006495C0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIPointerEffect(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", a1);
  sub_10004F2F0(0, (unint64_t *)&unk_100649080, UIPointerStyle_ptr);
  *v9 = v10;
  v11 = (*(double (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIPointerEffect.lift(_:), v6);
  v12 = type metadata accessor for UIPointerShape(0, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  return UIPointerStyle.init(effect:shape:)(v9, v5);
}

id sub_1002570D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___separatorView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___separatorView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___separatorView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)DOCSeparatorView), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100257158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___noResultsView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___noResultsView);
  if (v3)
  {
    v4 = *(id *)(v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___noResultsView);
  }
  else
  {
    sub_1002571B4(a1);
    v5 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void sub_1002571B4(uint64_t a1)
{
  id v1;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  id v7;
  NSString v8;
  id v9;
  Swift::String v10;

  v1 = (id)_DocumentManagerBundle(a1);
  if (v1)
  {
    v2 = v1;
    v10._countAndFlagsBits = 0xD00000000000003ALL;
    v10._object = (void *)0x800000010051DBB0;
    v3._object = (void *)0x800000010051DB90;
    v3._countAndFlagsBits = 0xD000000000000013;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0xD000000000000013;
    v5._object = (void *)0x800000010051DB90;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10)._object;

    v7 = objc_allocWithZone((Class)type metadata accessor for DOCGoToNoResultsView());
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v9 = objc_msgSend(v7, "initWithFrame:title:style:", v8, 0, 0.0, 0.0, 0.0, 0.0);

    if (v9)
    {
      objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v9, "setUserInteractionEnabled:", 0);
      objc_msgSend(v9, "setHidden:", 1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100257308()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___suggestionsTableViewController, (uint64_t (*)(uint64_t))sub_10025731C);
}

char *sub_10025731C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  char *result;
  char *v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  Class isa;
  __int128 v51;
  __int128 v52;
  char *v53;
  objc_super v54;

  objc_msgSend(a1, "loadViewIfNeeded");
  v2 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 16];
  v3 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 24];
  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 32];
  v5 = a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 40];
  v51 = *(_OWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 48];
  v52 = *(_OWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics];
  v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 64];
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 72];
  v8 = a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 80];
  v10 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 88];
  v9 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 96];
  v11 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 104];
  v12 = (objc_class *)type metadata accessor for DOCGoToSuggestionsViewController();
  v13 = objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions] = _swiftEmptyArrayStorage;
  v13[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections] = _swiftEmptyArrayStorage;
  v15 = &v13[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics];
  *(_OWORD *)v15 = v52;
  *((_QWORD *)v15 + 2) = v2;
  *((_QWORD *)v15 + 3) = v3;
  *((_QWORD *)v15 + 4) = v4;
  v15[40] = v5;
  *((_OWORD *)v15 + 3) = v51;
  *((_QWORD *)v15 + 8) = v6;
  *((_QWORD *)v15 + 9) = v7;
  v15[80] = v8;
  *((_QWORD *)v15 + 11) = v10;
  *((_QWORD *)v15 + 12) = v9;
  *((_QWORD *)v15 + 13) = v11;
  v16 = objc_allocWithZone((Class)UICollectionViewLayout);
  v17 = v9;
  v18 = v10;
  v19 = v17;
  v20 = v18;
  v21 = objc_msgSend(v16, "init");
  v54.receiver = v13;
  v54.super_class = v12;
  v22 = (char *)objc_msgSendSuper2(&v54, "initWithCollectionViewLayout:", v21);

  result = (char *)objc_msgSend(v22, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v24 = result;
  v25 = &v22[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate];
  *((_QWORD *)v25 + 1) = &off_1005D4FF8;
  swift_unknownObjectWeakAssign(v25, a1);
  result = (char *)objc_msgSend(v22, "collectionView");
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v53 = result;
  KeyPath = swift_getKeyPath(&unk_1004DE3D0);
  v27 = swift_allocObject(&unk_1005D50F8, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v28 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_10025C190, v27, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v27);

  v29 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_scrollViewDidScrollObservation];
  *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_scrollViewDidScrollObservation] = v28;

  v30 = objc_msgSend(v24, "widthAnchor");
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", 500.0);

  v32 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_suggestionsTableViewWidthConstraint];
  *(_QWORD *)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_suggestionsTableViewWidthConstraint] = v31;

  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v24, "setBackgroundColor:", v33);

  result = *(char **)&a1[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(result, "addSubview:", v24);
  v34 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v35 = swift_allocObject(v34, 56, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004D9720;
  result = (char *)objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v36 = result;
  v37 = objc_msgSend(result, "widthAnchor");

  v38 = objc_msgSend(v24, "widthAnchor");
  v39 = objc_msgSend(v37, "constraintGreaterThanOrEqualToAnchor:multiplier:", v38, 1.0);

  *(_QWORD *)(v35 + 32) = v39;
  result = (char *)objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v40 = result;
  v41 = objc_msgSend(result, "bottomAnchor");

  v42 = objc_msgSend(v24, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v35 + 40) = v43;
  v44 = objc_msgSend(v24, "centerXAnchor");
  result = (char *)objc_msgSend(a1, "view");
  if (result)
  {
    v45 = result;
    v46 = (void *)objc_opt_self(NSLayoutConstraint);
    v47 = objc_msgSend(v45, "centerXAnchor");

    v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);
    *(_QWORD *)(v35 + 48) = v48;
    specialized Array._endMutation()(v49);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v46, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

    return v22;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_100257894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  _BYTE v13[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void *)sub_100257308();
    v7 = objc_msgSend(v6, "collectionView");

    if (v7)
    {
      objc_msgSend(v7, "contentOffset");
      v9 = v8;

      v10 = sub_1002570D4();
      v11 = v10;
      v12 = 1.0;
      if (v9 <= 15.0)
        v12 = v9 / 15.0;
      objc_msgSend(v10, "setAlpha:", v12);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100257960()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 8);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v1);
  objc_msgSend(v0, "setView:", v2);
  v3 = objc_msgSend(v2, "contentView");
  v4 = *(id *)&v0[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView] = v3;

}

void sub_100257A50()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  char **v21;
  char **v22;
  SEL *v23;
  id v24;
  double v25;
  double v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t inited;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  double *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  void *v116;
  id v117;
  id v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  void *v123;
  char **v124;
  id v125;
  id v126;
  uint64_t v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  id v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  Class isa;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  char v166[104];
  uint64_t v167;
  objc_super v168;

  v1 = v0;
  v168.receiver = v0;
  v168.super_class = (Class)type metadata accessor for DOCGoToViewController(0);
  objc_msgSendSuper2(&v168, "viewDidLoad");
  sub_100259CB8();
  v2 = OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_52;
  }
  v4 = v3;
  v5 = sub_100256924();
  objc_msgSend(v4, "addSubview:", v5);

  v6 = *(void **)&v1[v2];
  if (!v6)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v7 = v6;
  v9 = sub_100256B2C((uint64_t)v7, v8);
  objc_msgSend(v7, "addSubview:", v9);

  v10 = *(void **)&v1[v2];
  if (!v10)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v11 = v10;
  v12 = sub_1002570D4();
  objc_msgSend(v11, "addSubview:", v12);

  v13 = *(void **)&v1[v2];
  if (!v13)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v14 = v13;
  v15 = sub_100257158((uint64_t)v14);
  objc_msgSend(v14, "addSubview:", v15);

  v16 = (char *)sub_100256924();
  v17 = sub_100257308();
  v18 = *(void **)&v16[OBJC_IVAR____TtC5FilesP33_EBE2DA6178484455F79AECAF4845EF6C16DOCGoToTextField_coresponder];
  *(_QWORD *)&v16[OBJC_IVAR____TtC5FilesP33_EBE2DA6178484455F79AECAF4845EF6C16DOCGoToTextField_coresponder] = v17;

  v19 = _swiftEmptyArrayStorage;
  v167 = (uint64_t)_swiftEmptyArrayStorage;
  v20 = (void *)sub_10025BDC0();
  v21 = &selRef_objectForKey_ofClass_;
  v22 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
  v23 = (SEL *)&selRef_objectForKey_ofClass_;
  if (v20)
  {
    v24 = v20;
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    LODWORD(v25) = 1148846080;
    objc_msgSend(v24, "setContentHuggingPriority:forAxis:", 0, v25);
    LODWORD(v26) = 1148846080;
    objc_msgSend(v24, "setContentHuggingPriority:forAxis:", 1, v26);
    v27 = *(void **)&v1[v2];
    if (!v27)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    objc_msgSend(v27, "addSubview:", v24);
    v28 = objc_msgSend(v24, "leadingAnchor");
    v29 = objc_msgSend(v1, "view");
    if (!v29)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v30 = v29;
    v31 = objc_msgSend(v29, "layoutMarginsGuide");

    v32 = objc_msgSend(v31, "leadingAnchor");
    v33 = objc_msgSend(v28, "constraintEqualToAnchor:", v32);

    v34 = objc_msgSend(v24, "topAnchor");
    v35 = sub_100256924();
    v36 = objc_msgSend(v35, "topAnchor");

    v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
    v38 = sub_100256924();
    v23 = (SEL *)objc_msgSend(v38, "leadingAnchor");

    v39 = objc_msgSend(v24, "trailingAnchor");
    v40 = -[SEL constraintEqualToAnchor:constant:](v23, "constraintEqualToAnchor:constant:", v39, *(double *)&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 24]);

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v164 = _swiftEmptyArrayStorage;
      else
        v164 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v165 = _CocoaArrayWrapper.endIndex.getter(v164);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v43 = v165 + 3;
      if (!__OFADD__(v165, 3))
      {
LABEL_10:
        v23 = (SEL *)&selRef_objectForKey_ofClass_;
        v44 = sub_100088A50(v43, 1);
        specialized Array._endMutation()(v44);
        v33 = v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
        v19 = *(_QWORD **)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v41 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v19 < v41 >> 1)
        {
LABEL_11:
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v33);
          specialized Array._endMutation()(v45);
          v46 = v37;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
          v48 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v47 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v21 = &selRef_objectForKey_ofClass_;
          if (v48 >= v47 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
          v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
          specialized Array._endMutation()(v49);
          v50 = v40;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
          v52 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v51 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v52 >= v51 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
          v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
          specialized Array._endMutation()(v53);

          v22 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
          goto LABEL_20;
        }
LABEL_50:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, (char *)v19 + 1, 1);
        goto LABEL_11;
      }
    }
    else
    {
      v41 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
      v42 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
      v43 = v42 + 3;
      if (!__OFADD__(v42, 3))
        goto LABEL_10;
    }
    __break(1u);
    goto LABEL_50;
  }
  v54 = sub_100256924();
  v55 = objc_msgSend(v54, "leadingAnchor");

  v56 = objc_msgSend(v1, "view");
  if (!v56)
  {
LABEL_66:
    __break(1u);
    return;
  }
  v57 = v56;
  v58 = objc_msgSend(v56, "leadingAnchor");

  v59 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v58, *(double *)&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics]);
  v46 = v59;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
  v61 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v60 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v61 >= v60 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
  v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v46);
  specialized Array._endMutation()(v62);
LABEL_20:

  v63 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v63, v166);
  *(_OWORD *)(inited + 16) = xmmword_1004DE1C0;
  v65 = sub_100256924();
  v66 = objc_msgSend(v65, "trailingAnchor");

  v67 = objc_msgSend(v1, v21[410]);
  if (!v67)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, "trailingAnchor");

  v70 = (double *)&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics];
  v71 = objc_msgSend(v66, v22[453], v69, -*(double *)&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics]);

  *(_QWORD *)(inited + 32) = v71;
  v72 = sub_100256924();
  v73 = objc_msgSend(v72, v23[366]);

  v74 = objc_msgSend(v1, v21[410]);
  if (!v74)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v75 = v74;
  v76 = objc_msgSend(v74, "safeAreaLayoutGuide");

  v77 = objc_msgSend(v76, v23[366]);
  v78 = objc_msgSend(v73, v22[453], v77, v70[1]);

  *(_QWORD *)(inited + 40) = v78;
  v81 = sub_100256B2C(v79, v80);
  v82 = objc_msgSend(v81, "trailingAnchor");

  v83 = sub_100256924();
  v84 = objc_msgSend(v83, "trailingAnchor");

  v85 = objc_msgSend(v82, v22[453], v84, -v70[2]);
  *(_QWORD *)(inited + 48) = v85;
  v86 = sub_1002570D4();
  v87 = objc_msgSend(v86, "leadingAnchor");

  v88 = objc_msgSend(v1, v21[410]);
  if (!v88)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v89 = v88;
  v90 = objc_msgSend(v88, "leadingAnchor");

  v91 = objc_msgSend(v87, v22[453], v90, 0.0);
  *(_QWORD *)(inited + 56) = v91;
  v92 = sub_1002570D4();
  v93 = objc_msgSend(v92, "trailingAnchor");

  v94 = objc_msgSend(v1, v21[410]);
  if (!v94)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v95 = v94;
  v96 = objc_msgSend(v94, "trailingAnchor");

  v97 = objc_msgSend(v93, v22[453], v96, 0.0);
  *(_QWORD *)(inited + 64) = v97;
  v99 = sub_100257158(v98);
  v100 = objc_msgSend(v99, "leftAnchor");

  v101 = objc_msgSend(v1, v21[410]);
  if (!v101)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v102 = v101;
  v103 = objc_msgSend(v101, "leftAnchor");

  v104 = objc_msgSend(v100, "constraintEqualToAnchor:", v103);
  *(_QWORD *)(inited + 72) = v104;
  v106 = sub_100257158(v105);
  v107 = objc_msgSend(v106, "rightAnchor");

  v108 = objc_msgSend(v1, v21[410]);
  if (!v108)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v109 = v108;
  v110 = objc_msgSend(v108, "rightAnchor");

  v111 = objc_msgSend(v107, "constraintEqualToAnchor:", v110);
  *(_QWORD *)(inited + 80) = v111;
  v113 = sub_100257158(v112);
  v114 = objc_msgSend(v113, v23[366]);

  v115 = objc_msgSend(v1, v21[410]);
  if (!v115)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v116 = v115;
  v117 = objc_msgSend(v115, v23[366]);

  v118 = objc_msgSend(v114, v22[453], v117, 50.0);
  *(_QWORD *)(inited + 88) = v118;
  v120 = sub_100257158(v119);
  v121 = objc_msgSend(v120, "bottomAnchor");

  v122 = objc_msgSend(v1, v21[410]);
  if (!v122)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v123 = v122;
  v124 = v22;
  v125 = objc_msgSend(v122, "bottomAnchor");

  v126 = objc_msgSend(v121, "constraintEqualToAnchor:", v125);
  *(_QWORD *)(inited + 96) = v126;
  specialized Array._endMutation()(v127);
  sub_1000887D0(inited);
  v128 = sub_100257308();
  v129 = objc_msgSend(v128, v21[410]);

  if (!v129)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v132 = sub_100256B2C(v130, v131);
  v133 = objc_msgSend(v132, "centerYAnchor");

  v134 = sub_100256924();
  v135 = objc_msgSend(v134, "centerYAnchor");

  v136 = objc_msgSend(v133, "constraintEqualToAnchor:", v135);
  v137 = sub_1002570D4();
  v138 = objc_msgSend(v137, "topAnchor");

  v139 = sub_100256924();
  v140 = objc_msgSend(v139, "bottomAnchor");

  v141 = objc_msgSend(v138, v124[453], v140, 16.0);
  v142 = objc_msgSend(v129, "topAnchor");
  v143 = sub_100256924();
  v144 = objc_msgSend(v143, "bottomAnchor");

  v145 = objc_msgSend(v142, v124[453], v144, 16.0);
  v146 = v167;
  if (!((unint64_t)v167 >> 62))
  {
    v147 = v167 & 0xFFFFFFFFFFFFF8;
    v148 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFF8) + 0x10);
    v149 = v148 + 3;
    if (!__OFADD__(v148, 3))
      goto LABEL_31;
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v167 < 0)
    v163 = v167;
  else
    v163 = v167 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v167);
  v148 = _CocoaArrayWrapper.endIndex.getter(v163);
  swift_bridgeObjectRelease(v146);
  v149 = v148 + 3;
  if (__OFADD__(v148, 3))
    goto LABEL_42;
LABEL_31:
  v150 = sub_100088A50(v149, 1);
  specialized Array._endMutation()(v150);
  v136 = v136;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v136);
  v148 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v147 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v148 >= v147 >> 1)
LABEL_43:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
  v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v136);
  specialized Array._endMutation()(v151);
  v152 = v141;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152);
  v154 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v153 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v154 >= v153 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v153 > 1, v154 + 1, 1);
  v155 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v154, v152);
  specialized Array._endMutation()(v155);
  v156 = v145;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v156);
  v158 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v157 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v158 >= v157 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v157 > 1, v158 + 1, 1);
  v159 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v158, v156);
  specialized Array._endMutation()(v159);

  v160 = (void *)objc_opt_self(NSLayoutConstraint);
  v161 = v167;
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v160, "activateConstraints:", isa, swift_bridgeObjectRelease(v161).n128_f64[0]);

}

uint64_t sub_1002588F8(char a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[24];
  __int128 v7;
  uint64_t v8;
  _QWORD v9[5];
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCGoToViewController(0);
  objc_msgSendSuper2(&v10, "viewWillAppear:", a1 & 1);
  v3 = sub_100256924();
  objc_msgSend(v3, "becomeFirstResponder");

  v4 = (uint64_t)&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation], v6, 0, 0);
  sub_1000271D4(v4, (uint64_t)&v7, &qword_100649598);
  if (v8)
  {
    sub_1000E85C4(&v7, (uint64_t)v9);
    sub_100259D78((uint64_t)v9);
    result = sub_100068588(v9);
  }
  else
  {
    result = sub_10000CB4C((uint64_t)&v7, &qword_100649598);
  }
  if (v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialSuggestionsToken] == 1)
  {
    v1[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialSuggestionsToken] = 0;
    return sub_100258ECC(0, 0xE000000000000000, 0);
  }
  return result;
}

uint64_t sub_100258B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _BYTE v8[24];
  __int128 v9;
  uint64_t v10;
  _QWORD v11[5];

  v1 = v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, v8, 0, 0);
  sub_1000271D4(v1, (uint64_t)&v9, &qword_100649598);
  if (!v10)
    return sub_10000CB4C((uint64_t)&v9, &qword_100649598);
  sub_1000E85C4(&v9, (uint64_t)v11);
  v2 = v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v5 + 32))(v0, v11, ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
  return sub_100068588(v11);
}

uint64_t sub_100258D74()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v10[24];
  __int128 v11;
  uint64_t v12;
  _QWORD v13[5];

  v1 = v0;
  v2 = sub_100257308();
  sub_100454700((uint64_t)&v11);

  if (v12)
  {
    sub_1000E85C4(&v11, (uint64_t)v13);
    sub_100259EF8(v13);
    sub_100068588(v13);
  }
  else
  {
    sub_10000CB4C((uint64_t)&v11, &qword_100649580);
  }
  v3 = v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, v10, 0, 0);
  sub_1000271D4(v3, (uint64_t)&v11, &qword_100649598);
  if (!v12)
    return sub_10000CB4C((uint64_t)&v11, &qword_100649598);
  sub_1000E85C4(&v11, (uint64_t)v13);
  v4 = v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v7 + 32))(v1, v13, ObjectType, v7);
    swift_unknownObjectRelease(v6);
  }
  return sub_100068588(v13);
}

uint64_t sub_100258ECC(uint64_t a1, uint64_t a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  char v45[24];
  char v46[24];
  _BYTE v47[48];

  v4 = v3;
  v39 = a3;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = String.doc_sanitizedForComparison.getter(a1, a2, v9);
  v38 = v12;
  v13 = sub_100256924();
  v14 = (char *)sub_10033BC84();
  v15 = &v14[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v14[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v46, 0, 0);
  v16 = *(_QWORD *)v15;
  swift_bridgeObjectRetain(v16);

  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease(v16);
  if (v17)
  {
    v18 = (uint64_t)&v4[OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource];
    swift_beginAccess(&v4[OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource], v45, 0, 0);
    sub_1000271D4(v18, (uint64_t)v47, &qword_1006495A8);
  }
  else
  {
    sub_100092328((uint64_t)&v4[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialCandidateSource], (uint64_t)v47);
  }
  v19 = sub_100257308();
  v20 = sub_100256924();
  v21 = sub_10033B9C0();

  v19[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering] = (v21 & 1) == 0;
  sub_1000271D4((uint64_t)v47, (uint64_t)&v40, &qword_1006495A8);
  if (v41)
  {
    v22 = sub_1000E85C4(&v40, (uint64_t)v42);
    v23 = sub_100257158(v22);
    objc_msgSend(v23, "setHidden:", 1);

    UUID.init()(v24);
    v25 = &v4[OBJC_IVAR____TtC5Files21DOCGoToViewController_requestID];
    v26 = swift_beginAccess(&v4[OBJC_IVAR____TtC5Files21DOCGoToViewController_requestID], &v40, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v8 + 40))(v25, v11, v7, v26);
    swift_endAccess(&v40);
    v27 = v43;
    v28 = v44;
    v36 = sub_10007E7A0(v42, v43);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v25, v7);
    v29 = swift_allocObject(&unk_1005D50F8, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    v30 = swift_allocObject(&unk_1005D5120, 33, 7);
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = v4;
    *(_BYTE *)(v30 + 32) = v39 & 1;
    v31 = *(void (**)(uint64_t, uint64_t, char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v28 + 8);
    swift_retain();
    v32 = v4;
    v33 = v38;
    v31(v37, v38, v11, sub_10025C0EC, v30, v27, v28);
    swift_bridgeObjectRelease(v33);
    v34 = swift_release(v30);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v34);
    sub_10000CB4C((uint64_t)v47, &qword_1006495A8);
    swift_release(v29);
    return sub_100068588(v42);
  }
  else
  {
    sub_10000CB4C((uint64_t)&v40, &qword_1006495A8);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCGoToLocation.swift", 27, 2, 501, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100259238(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  __int128 v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v2 = a2;
  v4 = *a2;
  v35 = *(_QWORD *)(*a2 + 16);
  if (v35)
  {
    v40 = a1;
    v5 = swift_bridgeObjectRetain(v4);
    v6 = 0;
    v7 = 0;
    while (1)
    {
      v8 = v5;
      v9 = *(_QWORD *)(v5 + v6 + 56);
      v10 = *(_QWORD *)(v5 + v6 + 64);
      sub_10007E7A0((_QWORD *)(v5 + v6 + 32), v9);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v10 + 24))(&v37, v9, v10);
      v11 = v38;
      v12 = v39;
      v13 = sub_10007E7A0(&v37, v38);
      v14 = v40[3];
      v15 = v40[4];
      sub_10007E7A0(v40, v14);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 24))(v36, v14, v15);
      v16 = v13;
      LOBYTE(v14) = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v12 + 16))(v36, v11, v12);
      sub_100068588(v36);
      sub_100068588(&v37);
      if ((v14 & 1) != 0)
        break;
      ++v7;
      v6 += 40;
      v5 = v8;
      if (v35 == v7)
      {
        swift_bridgeObjectRelease(v8);
        v2 = a2;
        a1 = v40;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease(v8);
    if (v7 >= *(_QWORD *)(*a2 + 16))
    {
      __break(1u);
    }
    else
    {
      sub_100092328(*a2 + v6 + 32, (uint64_t)&v37);
      v22 = v40;
      v23 = v40[3];
      v24 = v40[4];
      sub_10007E7A0(v40, v23);
      v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      v26 = objc_msgSend(v25, "length");

      v27 = v38;
      v28 = v39;
      sub_10007E7A0(&v37, v38);
      v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
      v30 = objc_msgSend(v29, "length");

      if ((uint64_t)v30 >= (uint64_t)v26)
        return sub_100068588(&v37);
      sub_1001741D8(v7, (uint64_t)v36);
      sub_100068588(v36);
      sub_100092328((uint64_t)v22, (uint64_t)v36);
      v16 = (_QWORD *)*a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
LABEL_14:
        v33 = v16[2];
        v32 = v16[3];
        if (v33 >= v32 >> 1)
        {
          v16 = sub_1001543FC((_QWORD *)(v32 > 1), v33 + 1, 1, v16);
          *a2 = v16;
        }
        v16[2] = v33 + 1;
        sub_1000E85C4(v36, (uint64_t)&v16[5 * v33 + 4]);
        return sub_100068588(&v37);
      }
    }
    v16 = sub_1001543FC(0, v16[2] + 1, 1, v16);
    *a2 = v16;
    goto LABEL_14;
  }
LABEL_6:
  sub_100092328((uint64_t)a1, (uint64_t)&v37);
  v17 = (_QWORD *)*v2;
  v18 = swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v17;
  if ((v18 & 1) == 0)
  {
    v17 = sub_1001543FC(0, v17[2] + 1, 1, v17);
    *v2 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1001543FC((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *v2 = v17;
  }
  v17[2] = v20 + 1;
  return sub_1000E85C4(&v37, (uint64_t)&v17[5 * v20 + 4]);
}

void sub_100259564(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  Class isa;
  id v21;
  void *v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;

  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (char *)sub_100257308();
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v13);
  sub_100455784();
  v14 = objc_msgSend(v12, "collectionView");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "reloadData");

    if ((a3 & 1) == 0 || !*(_QWORD *)(a1 + 16))
      goto LABEL_17;
    v16 = sub_100257308();
    IndexPath.init(item:section:)(0, 0);
    sub_10045561C((uint64_t)v11, (uint64_t)v31);
    v17 = v32;
    sub_10000CB4C((uint64_t)v31, &qword_100649580);
    if (!v17)
    {
LABEL_16:
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);

LABEL_17:
      v27 = sub_100256924();
      sub_10033C46C();

      v29 = sub_100257158(v28);
      objc_msgSend(v29, "setHidden:", *(_QWORD *)(a1 + 16) != 0);

      return;
    }
    v18 = objc_msgSend(v16, "collectionView");
    if (v18)
    {
      v19 = v18;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

      v21 = objc_msgSend(v16, "collectionView");
      if (v21)
      {
        v22 = v21;
        ObjectType = swift_getObjectType(v21);
        v24 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for DOCFocusableCollectionView);
        if (v24)
          v25 = v24;
        else
          v25 = 0;
        if (v24)
          v26 = v22;
        else
          v26 = 0;
        if (v26)
        {
          v30 = swift_getObjectType(v26);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v7, v11, v8);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
          sub_10027BDBC((uint64_t)v7, v30, v25);
        }

      }
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100259808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, uint64_t, __n128);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char *v37;
  unint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char v60[24];
  char v61[24];

  v54 = a5;
  v55 = a4;
  v53 = a2;
  v7 = type metadata accessor for DispatchPredicate(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v56 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_1006495B0);
  __chkstk_darwin(v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v51 - v22;
  a3 += 16;
  swift_beginAccess(a3, v61, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v25 = (void *)Strong;
    v51 = v20;
    v26 = v14;
    v27 = v12;
    v28 = v17;
    v29 = a1;
    v30 = Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_requestID;
    v31 = swift_beginAccess(Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_requestID, v60, 0, 0);
    v32 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    v33 = v30;
    a1 = v29;
    v17 = v28;
    v12 = v27;
    v14 = v26;
    v20 = v51;
    v32(v23, v33, v9, v31);

    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v34(v23, 0, 1, v9);
  }
  else
  {
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v34(v23, 1, 1, v9);
    v32 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  }
  ((void (*)(char *, uint64_t, uint64_t))v32)(v20, a1, v9);
  v34(v20, 0, 1, v9);
  v35 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1000271D4((uint64_t)v23, (uint64_t)v14, (uint64_t *)&unk_1006475C0);
  sub_1000271D4((uint64_t)v20, v35, (uint64_t *)&unk_1006475C0);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v36((uint64_t)v14, 1, v9) != 1)
  {
    sub_1000271D4((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_1006475C0);
    if (v36(v35, 1, v9) != 1)
    {
      v37 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v52, v35, v9);
      v38 = sub_10025C0F8();
      v39 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v37, v9, v38);
      v40 = *(void (**)(char *, uint64_t))(v10 + 8);
      v40(v37, v9);
      sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_1006475C0);
      sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006475C0);
      v40(v17, v9);
      sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006475C0);
      if ((v39 & 1) == 0)
        return;
      goto LABEL_11;
    }
    sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_1006475C0);
    sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006475C0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_9:
    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006495B0);
    return;
  }
  sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_1006475C0);
  sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006475C0);
  if (v36(v35, 1, v9) != 1)
    goto LABEL_9;
  sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006475C0);
LABEL_11:
  v41 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v42 = static OS_dispatch_queue.main.getter(v41);
  v44 = v56;
  v43 = v57;
  *v56 = v42;
  v45 = v58;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v43 + 104))(v44, enum case for DispatchPredicate.onQueue(_:), v58);
  v46 = _dispatchPreconditionTest(_:)(v44);
  (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v44, v45);
  if ((v46 & 1) != 0)
  {
    v47 = _swiftEmptyArrayStorage;
    v59 = _swiftEmptyArrayStorage;
    v48 = v53;
    v49 = *(_QWORD *)(v53 + 16);
    if (v49)
    {
      v50 = (_QWORD *)(v53 + 32);
      swift_bridgeObjectRetain(v53);
      do
      {
        sub_100259238(v50, &v59);
        v50 += 5;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease(v48);
      v47 = v59;
    }
    sub_100259564((uint64_t)v47, v55, v54 & 1);
    swift_bridgeObjectRelease(v47);
  }
  else
  {
    __break(1u);
  }
}

id sub_100259CB8()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  int v4;
  double v5;
  double v6;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = UITraitCollection.doc_preferredLayoutSizeCategory.getter();

  if (sub_1000763D0(v3, (uint64_t)&off_1005C0138))
  {
    v4 = DOCScreenSizePad12_9();
    v5 = 500.0;
    if (!v4)
      v5 = 420.0;
    v6 = 640.0;
    if (v4)
      v6 = 840.0;
  }
  else
  {
    v6 = 640.0;
    v5 = 420.0;
  }
  return objc_msgSend(v1, "setPreferredContentSize:", v6, v5);
}

void sub_100259D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _BYTE v15[24];
  _QWORD v16[5];
  char v17[24];

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 8);
    v8 = sub_100256924();
    v9 = (char *)sub_10033BC84();
    v10 = &v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v17, 0, 0);
    v11 = *(_QWORD *)v10;
    swift_bridgeObjectRetain(v11);

    v12 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRelease(v11);
    if (v12)
    {
      ObjectType = swift_getObjectType(v6);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v16, v2, a1, ObjectType, v7);
    }
    else
    {
      sub_100092328(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_initialCandidateSource, (uint64_t)v16);
    }
    v14 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource, v15, 33, 0);
    sub_10025C054((uint64_t)v16, v14);
    swift_endAccess(v15);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010051DB70, "Files/DOCGoToLocation.swift", 27, 2, 538, 0);
    __break(1u);
  }
}

uint64_t sub_100259EF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  char *v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  id v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];
  char v30[24];
  _BYTE v31[40];
  __int128 v32;
  ValueMetadata *v33;
  _UNKNOWN **v34;
  _QWORD v35[2];
  uint64_t v36;
  char v37[24];

  v2 = v1;
  v4 = sub_100256924();
  v5 = (char *)sub_10033BC84();
  v6 = &v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v37, 0, 0);
  v7 = *(_QWORD **)v6;
  swift_bridgeObjectRetain(v7);

  v8 = a1[3];
  v9 = a1[4];
  sub_10007E7A0(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v12 = v11;
  sub_100092328((uint64_t)a1, (uint64_t)&v36);
  v35[0] = v10;
  v35[1] = v12;
  if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
    v7 = sub_1001543E8(0, v7[2] + 1, 1, v7);
  v14 = v7[2];
  v13 = v7[3];
  if (v14 >= v13 >> 1)
    v7 = sub_1001543E8((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
  v33 = &type metadata for DOCGoToToken;
  v34 = &off_1005D5270;
  *(_QWORD *)&v32 = swift_allocObject(&unk_1005D50D0, 72, 7);
  sub_10025BFE8((uint64_t)v35, v32 + 16);
  v7[2] = v14 + 1;
  sub_1000E85C4(&v32, (uint64_t)&v7[5 * v14 + 4]);
  sub_10025BEF8((uint64_t)v35);
  v15 = sub_100256924();
  sub_10033BAB0((uint64_t)v7);

  v16 = a1[3];
  v17 = a1[4];
  sub_10007E7A0(a1, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 24))(v35, v16, v17);
  v18 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);
  if (Strong)
  {
    v20 = Strong;
    v21 = *(_QWORD *)(v18 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v21 + 24))(v2, v35, ObjectType, v21);
    swift_unknownObjectRelease(v20);
  }
  sub_100259D78((uint64_t)v35);
  sub_100258ECC(0, 0xE000000000000000, 0);
  v23 = sub_100256924();
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setText:", v24);

  v25 = a1[3];
  v26 = a1[4];
  sub_10007E7A0(a1, v25);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 24))(&v32, v25, v26);
  v27 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, v30, 0, 0);
  sub_1000271D4(v27, (uint64_t)v31, &qword_100649598);
  swift_beginAccess(v27, v29, 33, 0);
  sub_10025BEB0((uint64_t)&v32, v27);
  swift_endAccess(v29);
  sub_1002566F0((uint64_t)v31);
  sub_10000CB4C((uint64_t)&v32, &qword_100649598);
  sub_10000CB4C((uint64_t)v31, &qword_100649598);
  return sub_100068588(v35);
}

void sub_10025A224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate);

  sub_100068588((_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_initialCandidateSource));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource, &qword_1006495A8);

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, &qword_100649598);
  v1 = v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_requestID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___suggestionsTableViewController));
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics + 96);

  sub_10008D9C4(*(id *)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___closeBox));
}

id sub_10025A358()
{
  return sub_1000D8CEC(type metadata accessor for DOCGoToViewController);
}

uint64_t sub_10025A49C()
{
  return type metadata accessor for DOCGoToViewController(0);
}

uint64_t type metadata accessor for DOCGoToViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1006493D0;
  if (!qword_1006493D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCGoToViewController);
  return result;
}

uint64_t sub_10025A4E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = &unk_1004DE268;
  v4[1] = &unk_1004DE280;
  v4[2] = &unk_1004DE280;
  v4[3] = &unk_1004DE298;
  v4[4] = &unk_1004DE2B0;
  v4[5] = &unk_1004DE2C8;
  v4[6] = &unk_1004DE280;
  v4[7] = &unk_1004DE2C8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    v4[9] = &unk_1004DE280;
    v4[10] = &unk_1004DE280;
    v4[11] = &unk_1004DE280;
    v4[12] = &unk_1004DE280;
    v4[13] = &unk_1004DE280;
    v4[14] = &unk_1004DE2E0;
    v4[15] = &unk_1004DE2F8;
    return swift_updateClassMetadata2(a1, 256, 16, v4, a1 + 112);
  }
  return result;
}

void sub_10025A654(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[24];
  char v28[24];
  char v29[24];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[5];

  v2 = v1;
  v3 = objc_msgSend(a1, "text");
  if (!v3)
    return;
  v4 = v3;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;

  v8 = sub_100256924();
  v9 = (char *)sub_10033BC84();
  v10 = &v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v29, 0, 0);
  v11 = *(_QWORD *)v10;
  swift_bridgeObjectRetain(v11);

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    sub_100092328(v11 + 40 * v12 - 8, (uint64_t)&v30);
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v31 + 1))
  {
    sub_10000CB4C((uint64_t)&v30, &qword_100649588);
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    v36 = 0;
    goto LABEL_15;
  }
  v13 = sub_10006922C(&qword_1006495A0);
  if ((swift_dynamicCast(&v33, &v30, v13, &type metadata for DOCGoToToken, 6) & 1) == 0)
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    v33 = 0u;
    goto LABEL_15;
  }
  if (!*((_QWORD *)&v33 + 1))
  {
LABEL_15:
    sub_10000CB4C((uint64_t)&v33, &qword_100649590);
    v37 = 0u;
    v38 = 0u;
    v39 = 0;
    goto LABEL_16;
  }
  sub_100092328((uint64_t)&v34, (uint64_t)&v30);
  sub_10025BEF8((uint64_t)&v33);
  v14 = *((_QWORD *)&v31 + 1);
  v15 = v32;
  sub_10007E7A0(&v30, *((uint64_t *)&v31 + 1));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v15 + 24))(&v37, v14, v15);
  sub_100068588(&v30);
  if (!*((_QWORD *)&v38 + 1))
  {
LABEL_16:
    sub_10000CB4C((uint64_t)&v37, &qword_100649598);
    *(_QWORD *)&v35 = 0;
    v34 = 0u;
    v33 = 0u;
    v21 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, &v37, 0, 0);
    sub_1000271D4(v21, (uint64_t)v40, &qword_100649598);
    swift_beginAccess(v21, &v30, 33, 0);
    sub_10025BEB0((uint64_t)&v33, v21);
    swift_endAccess(&v30);
    sub_1002566F0((uint64_t)v40);
    sub_10000CB4C((uint64_t)&v33, &qword_100649598);
    sub_10000CB4C((uint64_t)v40, &qword_100649598);
    goto LABEL_17;
  }
  sub_1000E85C4(&v37, (uint64_t)v40);
  v16 = v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation, v28, 0, 0);
  sub_1000271D4(v16, (uint64_t)&v33, &qword_100649598);
  v17 = *((_QWORD *)&v34 + 1);
  sub_10000CB4C((uint64_t)&v33, &qword_100649598);
  sub_100092328((uint64_t)v40, (uint64_t)&v33);
  if (v17)
  {
    v18 = *((_QWORD *)&v34 + 1);
    v19 = v35;
    sub_10007E7A0(&v33, *((uint64_t *)&v34 + 1));
    sub_1000271D4(v16, (uint64_t)&v37, &qword_100649598);
    if (!*((_QWORD *)&v38 + 1))
    {
LABEL_26:
      __break(1u);
      return;
    }
    v20 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v19 + 16))(&v37, v18, v19);
    sub_100068588(&v37);
    sub_100068588(&v33);
    if ((v20 & 1) != 0)
      goto LABEL_24;
  }
  else
  {
    sub_100068588(&v33);
  }
  sub_100092328((uint64_t)v40, (uint64_t)&v37);
  sub_1000271D4(v16, (uint64_t)&v30, &qword_100649598);
  swift_beginAccess(v16, v27, 33, 0);
  sub_10025BEB0((uint64_t)&v37, v16);
  swift_endAccess(v27);
  sub_1002566F0((uint64_t)&v30);
  sub_10000CB4C((uint64_t)&v37, &qword_100649598);
  sub_10000CB4C((uint64_t)&v30, &qword_100649598);
  sub_100259D78((uint64_t)v40);
LABEL_24:
  sub_100068588(v40);
LABEL_17:
  v22 = (char *)sub_100257308();
  v23 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v23);
  sub_100455784();
  v24 = objc_msgSend(v22, "collectionView");
  if (!v24)
  {
    __break(1u);
    goto LABEL_26;
  }
  v25 = v24;
  objc_msgSend(v24, "reloadData");

  v26 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v26 = v5 & 0xFFFFFFFFFFFFLL;
  sub_100258ECC(v5, v7, v26 != 0);
  swift_bridgeObjectRelease(v7);
}

uint64_t sub_10025AC08()
{
  void *v0;
  void *v1;
  id v2;
  NSString *const *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  unint64_t i;
  id v19;
  uint64_t v20;
  uint64_t result;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  objc_super v45;

  v1 = v0;
  v2 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v3 = &UIKeyInputRightArrow;
  if (v2)
    v3 = &UIKeyInputLeftArrow;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v5 = v4;
  objc_msgSend(v0, "selectionRange");
  if (v6 < 1)
  {
    swift_bridgeObjectRelease(v5);
    v12 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v8 = swift_allocObject(v7, 40, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1004D9B40;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    v10 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:", v9, 0, "didHitDirectionalArrow");

    *(_QWORD *)(v8 + 32) = v10;
    specialized Array._endMutation()(v11);
    v12 = v8;
  }
  v13 = String._bridgeToObjectiveC()();
  v14 = (void *)objc_opt_self(UIKeyCommand);
  v15 = objc_msgSend(v14, "keyCommandWithInput:modifierFlags:action:", v13, 0, "didTab");

  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "keyCommandWithInput:modifierFlags:action:", v16, 0, "didReturn");

  i = (unint64_t)String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v14, "keyCommandWithInput:modifierFlags:action:", i, 0, "didTab");

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v24 = v12;
    else
      v24 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    result = _CocoaArrayWrapper.endIndex.getter(v24);
    v20 = result;
    if (!result)
      goto LABEL_18;
  }
  else
  {
    v20 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v12);
    if (!v20)
      goto LABEL_18;
  }
  if (v20 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v20; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
    else
      v22 = *(id *)(v12 + 8 * i + 32);
    v23 = v22;
    objc_msgSend(v22, "setWantsPriorityOverSystemBehavior:", 1);

  }
LABEL_18:
  objc_msgSend(v15, "setWantsPriorityOverSystemBehavior:", 1, swift_bridgeObjectRelease(v12).n128_f64[0]);
  objc_msgSend(v17, "setWantsPriorityOverSystemBehavior:", 1);
  objc_msgSend(v19, "setWantsPriorityOverSystemBehavior:", 1);
  v45.receiver = v1;
  v45.super_class = (Class)type metadata accessor for DOCGoToTextField();
  v25 = objc_msgSendSuper2(&v45, "keyCommands");
  if (v25)
  {
    v26 = v25;
    v27 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  }
  else
  {
    v28 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v28);
    v31 = v29 + 3;
    if (!__OFADD__(v29, 3))
      goto LABEL_23;
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v28 < 0)
    v42 = v28;
  else
    v42 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v28);
  v43 = _CocoaArrayWrapper.endIndex.getter(v42);
  v44 = __OFADD__(v43, 3);
  v31 = v43 + 3;
  if (v44)
    goto LABEL_34;
LABEL_23:
  v32 = sub_100088A50(v31, 1);
  specialized Array._endMutation()(v32);
  v15 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  i = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (i >= v30 >> 1)
LABEL_35:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, i + 1, 1);
  v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(i, v15);
  specialized Array._endMutation()(v33);
  v34 = v17;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v35 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
  specialized Array._endMutation()(v37);
  v38 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  v40 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v39 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v40 >= v39 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
  v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
  specialized Array._endMutation()(v41);
  swift_bridgeObjectRelease(v28);

  sub_100130620(v12);
  return v28;
}

void sub_10025B158()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5FilesP33_EBE2DA6178484455F79AECAF4845EF6C16DOCGoToTextField_customPlaceholderColor));

}

id sub_10025B184()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCGoToTextField);
}

uint64_t type metadata accessor for DOCGoToTextField()
{
  return objc_opt_self(_TtC5FilesP33_EBE2DA6178484455F79AECAF4845EF6C16DOCGoToTextField);
}

id sub_10025B488()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCGoToNoResultsView);
}

uint64_t type metadata accessor for DOCGoToNoResultsView()
{
  return objc_opt_self(_TtC5FilesP33_EBE2DA6178484455F79AECAF4845EF6C20DOCGoToNoResultsView);
}

double sub_10025B4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v6 = v5;
  objc_msgSend(*(id *)(v6 + 24), "removeAllObjects");
  v13 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + 32;
    v24 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain(v13);
    v27 = a3;
    v25 = a1;
    v26 = a2;
    do
    {
      sub_100092328(v15, (uint64_t)v29);
      v16 = v30;
      v17 = v31;
      sub_10007E7A0(v29, v30);
      v18 = swift_allocObject(&unk_1005D5030, 24, 7);
      swift_weakInit(v18 + 16, v6);
      sub_100092328((uint64_t)v29, (uint64_t)v28);
      v19 = (_QWORD *)swift_allocObject(&unk_1005D5058, 80, 7);
      v19[2] = v18;
      sub_1000E85C4(v28, (uint64_t)(v19 + 3));
      v19[8] = a4;
      v19[9] = a5;
      v20 = v6;
      v21 = a4;
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(v17 + 8);
      swift_retain();
      v23 = swift_retain();
      v22(v25, v26, v27, sub_10025BCEC, v19, v16, v17, v23);
      a4 = v21;
      v6 = v20;
      swift_release(v18);
      swift_release(v19);
      sub_100068588(v29);
      v15 += 40;
      --v14;
    }
    while (v14);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  return result;
}

void sub_10025B630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  _QWORD aBlock[5];
  char *v22;
  __int128 v23[2];

  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  sub_100092328(a4, (uint64_t)v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&aBlock[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 88) & ~v15;
  v17 = (char *)swift_allocObject(&unk_1005D5080, v16 + v14, v15 | 7);
  *((_QWORD *)v17 + 2) = a3;
  *((_QWORD *)v17 + 3) = a2;
  sub_1000E85C4(v23, (uint64_t)(v17 + 32));
  *((_QWORD *)v17 + 9) = a5;
  *((_QWORD *)v17 + 10) = a6;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], (char *)&aBlock[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = sub_10025BD88;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D5098;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  swift_retain();
  swift_bridgeObjectRetain(a2);
  swift_retain();
  swift_release(v19);
  DOCRunInMainThread(v18);
  _Block_release(v18);
}

double sub_10025B7A4(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, _QWORD *, __n128), uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  id v13;
  uint64_t v14;
  Class isa;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _QWORD *v33;
  _BYTE v34[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v34, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(id *)(Strong + 24);
    v14 = sub_10006922C((uint64_t *)&unk_100644420);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v16 = a3[3];
    v17 = sub_10007E7A0(a3, v16);
    v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
    objc_msgSend(v13, "setObject:forKey:", isa, v18);

    v19 = swift_unknownObjectRelease(v18);
    v20 = _swiftEmptyArrayStorage;
    v33 = _swiftEmptyArrayStorage;
    v21 = *(_QWORD *)(v12 + 16);
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = v21 + 32;
      swift_bridgeObjectRetain(v21);
      do
      {
        sub_100092328(v23, (uint64_t)v31);
        v24 = *(void **)(v12 + 24);
        v25 = v32;
        v26 = sub_10007E7A0(v31, v32);
        v27 = v24;
        v28 = _bridgeAnythingToObjectiveC<A>(_:)(v26, v25);
        v29 = objc_msgSend(v27, "objectForKey:", v28);
        swift_unknownObjectRelease(v28);

        sub_100068588(v31);
        if (v29)
        {
          v30 = 0;
          static Array._conditionallyBridgeFromObjectiveC(_:result:)(v29, &v30, v14);

          if (v30)
            sub_10013062C(v30);
        }
        v23 += 40;
        --v22;
      }
      while (v22);
      v19 = swift_bridgeObjectRelease(v21);
      v20 = v33;
    }
    a4(a6, v20, v19);
    swift_release(v12);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  return result;
}

uint64_t sub_10025B998()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for DOCCompositionalCandidateSource()
{
  return objc_opt_self(_TtC5Files31DOCCompositionalCandidateSource);
}

void destroy for DOCGoToMetrics(uint64_t a1)
{

}

uint64_t initializeWithCopy for DOCGoToMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(void **)(a2 + 88);
  v6 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v5;
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v7 = v5;
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for DOCGoToMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  v6 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(void **)(a1 + 88);
  v8 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 96);
  v11 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = v11;

  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

__n128 _s14descr1005E3D29O4SpecVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DOCGoToMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);

  v6 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCGoToMetrics(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCGoToMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 88) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCGoToMetrics()
{
  return &type metadata for DOCGoToMetrics;
}

double sub_10025BC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10025B4B4(a1, a2, a3, a4, a5);
}

uint64_t sub_10025BC94()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025BCB8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_100068588(v0 + 3);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void sub_10025BCEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10025B630(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9]);
}

uint64_t sub_10025BCFC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 88) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 2));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 3));
  sub_100068588((_QWORD *)v0 + 4);
  v7 = swift_release(*((_QWORD *)v0 + 10));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10025BD88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_10025B7A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (_QWORD *)(v0 + 32), *(void (**)(uint64_t, _QWORD *, __n128))(v0 + 72), *(_QWORD *)(v0 + 80), v0 + ((v1 + 88) & ~v1));
}

uint64_t sub_10025BDC0()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___closeBox);
  if (result == 1)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___closeBox) = 0;
    sub_10008D9C4((id)1);
    return 0;
  }
  return result;
}

uint64_t sub_10025BDF0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_100256630((uint64_t)&v6);
  if (!v7)
  {
    sub_10000CB4C((uint64_t)&v6, &qword_100649580);
    return 0;
  }
  sub_1000E85C4(&v6, (uint64_t)v8);
  if (!objc_msgSend(a1, "hasText"))
  {
    sub_100068588(v8);
    return 0;
  }
  v2 = v9;
  v3 = v10;
  sub_10007E7A0(v8, v9);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_100068588(v8);
  return v4;
}

uint64_t sub_10025BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100649598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025BEF8(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  sub_100068588((_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_10025BF28(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  _QWORD v5[5];

  if ((a1 != 9 || a2 != 0xE100000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(9, 0xE100000000000000, a1, a2, 0) & 1) == 0)
  {
    return 1;
  }
  sub_100256630((uint64_t)&v3);
  if (v4)
  {
    sub_1000E85C4(&v3, (uint64_t)v5);
    sub_100259EF8(v5);
    sub_100068588(v5);
  }
  else
  {
    sub_10000CB4C((uint64_t)&v3, &qword_100649580);
  }
  return 0;
}

uint64_t sub_10025BFBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100068588((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10025BFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v3;
  v4 = a2 + 16;
  v5 = a1 + 16;
  v6 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain(v3);
  v8(v4, v5, v7);
  return a2;
}

uint64_t sub_10025C054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_1006495A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025C09C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025C0C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 33, 7);
}

void sub_10025C0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100259808(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
}

unint64_t sub_10025C0F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100655BE0;
  if (!qword_100655BE0)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_100655BE0);
  }
  return result;
}

const char *sub_10025C140()
{
  return "contentOffset";
}

id sub_10025C14C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentOffset");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_10025C17C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentOffset:", *a1, a1[1]);
}

void sub_10025C190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100257894(a1, a2, v2);
}

void sub_10025C198()
{
  uint64_t v0;

  sub_100256F54(v0);
}

uint64_t sub_10025C1A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for DOCGoToToken(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return sub_100068588((_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for DOCGoToToken(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain(v3);
  v7(a1 + 16, v4, v6);
  return a1;
}

_QWORD *assignWithCopy for DOCGoToToken(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  sub_10025C2AC(a1 + 2, a2 + 2);
  return a1;
}

_QWORD *sub_10025C2AC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for DOCGoToToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  sub_100068588((_QWORD *)(a1 + 16));
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCGoToToken(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCGoToToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCGoToToken()
{
  return &type metadata for DOCGoToToken;
}

uint64_t storeEnumTagSinglePayload for DOCGoToLocationSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10025C550 + 4 * byte_1004DE1D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10025C584 + 4 * byte_1004DE1D0[v4]))();
}

uint64_t sub_10025C584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10025C58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10025C594);
  return result;
}

uint64_t sub_10025C5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10025C5A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10025C5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10025C5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCGoToLocationSection()
{
  return &type metadata for DOCGoToLocationSection;
}

unint64_t sub_10025C5D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006495D0;
  if (!qword_1006495D0)
  {
    v1 = sub_10007E830(&qword_1006495D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1006495D0);
  }
  return result;
}

unint64_t sub_10025C624()
{
  unint64_t result;

  result = qword_1006495E0;
  if (!qword_1006495E0)
  {
    result = swift_getWitnessTable(&unk_1004DE4A0, &type metadata for DOCGoToLocationSection);
    atomic_store(result, (unint64_t *)&qword_1006495E0);
  }
  return result;
}

unint64_t sub_10025C66C()
{
  unint64_t result;

  result = qword_1006495F0;
  if (!qword_1006495F0)
  {
    result = swift_getWitnessTable(&unk_1004DE538, &type metadata for DOCFileEntityQuery);
    atomic_store(result, (unint64_t *)&qword_1006495F0);
  }
  return result;
}

unint64_t sub_10025C6B4()
{
  unint64_t result;

  result = qword_1006495F8[0];
  if (!qword_1006495F8[0])
  {
    result = swift_getWitnessTable(&unk_1004DE598, &type metadata for DOCFileEntityQuery);
    atomic_store(result, qword_1006495F8);
  }
  return result;
}

uint64_t sub_10025C6F8()
{
  return sub_10021F534((unint64_t *)&qword_100643D40, (uint64_t)&unk_1004DAF80);
}

uint64_t sub_10025C71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[12] = a3;
  v4[13] = a4;
  v4[11] = a2;
  v5 = type metadata accessor for FileEntityIdentifier(0);
  v4[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[15] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[16] = v7;
  v4[17] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C(&qword_1006438A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[18] = swift_task_alloc(v8);
  v4[19] = swift_task_alloc(v8);
  v9 = sub_10006922C(&qword_100649660);
  v4[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[21] = v10;
  v4[22] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100649668);
  v4[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10025C808, 0, 0);
}

uint64_t sub_10025C808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  int v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, uint64_t, uint64_t, _QWORD);
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(unsigned __int8 *)(v3 + 80);
    v5 = (v4 + 32) & ~v4;
    v6 = v1 + v5;
    v47 = *(_QWORD *)(v3 + 72);
    v48 = v5;
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v46 = v5 + *(_QWORD *)(v0 + 128);
    v45 = v4 | 7;
    swift_bridgeObjectRetain(v1);
    v44 = v3;
    while (1)
    {
      v9 = *(_QWORD *)(v0 + 184);
      v10 = *(_QWORD *)(v0 + 112);
      v49(v9, v6, v10);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v11(v9, 0, 1, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v9, 1, v10) == 1)
        break;
      v43 = v11;
      v51 = v6;
      v52 = v2;
      v12 = *(_QWORD *)(v0 + 184);
      v13 = *(_QWORD *)(v0 + 144);
      v14 = *(_QWORD *)(v0 + 152);
      v15 = *(_QWORD *)(v0 + 136);
      v16 = *(_QWORD *)(v0 + 112);
      v17 = type metadata accessor for TaskPriority(0);
      v18 = *(_QWORD *)(v17 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      v19(v15, v12, v16);
      v20 = swift_allocObject(&unk_1005D5328, v46, v45);
      *(_QWORD *)(v20 + 16) = 0;
      v21 = (_QWORD *)(v20 + 16);
      v50 = v20;
      *(_QWORD *)(v20 + 24) = 0;
      v19(v20 + v48, v15, v16);
      sub_1000271D4(v14, v13, &qword_1006438A0);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17);
      v24 = *(_QWORD *)(v0 + 144);
      if (v22 == 1)
      {
        sub_10000CB4C(*(_QWORD *)(v0 + 144), &qword_1006438A0);
        v25 = 0;
      }
      else
      {
        v26 = TaskPriority.rawValue.getter(v23);
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v24, v17);
        v25 = v26;
      }
      v27 = *v21;
      if (*v21)
      {
        v28 = *(_QWORD *)(v50 + 24);
        ObjectType = swift_getObjectType(*v21);
        swift_unknownObjectRetain(v27);
        v30 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v28);
        v32 = v31;
        swift_unknownObjectRelease(v27);
      }
      else
      {
        v30 = 0;
        v32 = 0;
      }
      v3 = v44;
      v33 = **(_QWORD **)(v0 + 88);
      v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v35 = v32 | v30;
      if (v32 | v30)
      {
        v35 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v30;
        *(_QWORD *)(v0 + 40) = v32;
      }
      v7 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v35;
      *(_QWORD *)(v0 + 64) = v33;
      v8 = swift_task_create(v25 | 0x3100, v0 + 48, v34, &unk_100649678, v50);
      swift_release(v8);
      sub_10000CB4C(v7, &qword_1006438A0);
      v6 = v51 + v47;
      v2 = v52 - 1;
      if (v52 == 1)
      {
        v43(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 112));
        break;
      }
    }
  }
  else
  {
    v36 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56);
    swift_bridgeObjectRetain(v1);
    v36(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 112));
  }
  v37 = *(uint64_t **)(v0 + 88);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  v38 = *v37;
  v39 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v40 = sub_10006922C((uint64_t *)&unk_100643490);
  ThrowingTaskGroup.makeAsyncIterator()(v38, v39, v40, &protocol self-conformance witness table for Error);
  v41 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 192) = v41;
  *v41 = v0;
  v41[1] = sub_10025CB98;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 160), v0 + 80);
}

uint64_t sub_10025CB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 192));
  if (v0)
    v2 = sub_10025CDA0;
  else
    v2 = sub_10025CBFC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025CBFC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 104);
    v3 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v5 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v4 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v5 >= v4 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
    v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
    specialized Array._endMutation()(v6);

    v7 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 200) = v7;
    *v7 = v0;
    v7[1] = sub_10025CD3C;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 160), v0 + 80);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(v9, *(_QWORD *)(v0 + 160));
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10025CD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 200));
  if (v0)
    v2 = sub_10025CDA0;
  else
    v2 = sub_10025CBFC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025CDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(v1, *(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025CE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[30] = a1;
  v4[31] = a4;
  v5 = sub_10006922C(&qword_100643470);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v4[33] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[34] = v7;
  v4[35] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10025CEA4, 0, 0);
}

uint64_t sub_10025CEA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;

  v1 = FileEntityIdentifier.fpItemID.getter();
  v0[36] = v1;
  if (v1)
  {
    v2 = v1;
    v3 = v0 + 10;
    v4 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v0[37] = v4;
    v0[15] = v0 + 29;
    v0[10] = v0;
    v0[11] = sub_10025CFBC;
    v5 = swift_continuation_init(v0 + 10, 1);
    v0[23] = _NSConcreteStackBlock;
    v6 = v0 + 23;
    v6[1] = 0x40000000;
    v6[2] = sub_1000874A8;
    v6[3] = &unk_1005D5358;
    v6[4] = v5;
    objc_msgSend(v4, "fetchItemForItemID:completionHandler:", v2, v6);
    return swift_continuation_await(v3);
  }
  else
  {
    v8 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to FileEntityIdentifier.fileURL.getter + 1));
    v0[39] = v8;
    *v8 = v0;
    v8[1] = sub_10025D01C;
    return FileEntityIdentifier.fileURL.getter(v0[32]);
  }
}

uint64_t sub_10025CFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 304) = v1;
  if (v1)
    v2 = sub_10025D338;
  else
    v2 = sub_10025D080;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025D01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 312);
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10025D394;
  else
    v3 = sub_10025D0D8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10025D080()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD **)(v0 + 240);

  *v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  NSURL *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000CB4C(v3, &qword_100643470);
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v4 = static NSError.noSuchFileError.getter();
    swift_willThrow(v4);
    v5 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = v0 + 16;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 280), v3, v1);
    v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    *(_QWORD *)(v0 + 328) = v8;
    URL._bridgeToObjectiveC()(v9);
    v11 = v10;
    *(_QWORD *)(v0 + 336) = v10;
    *(_QWORD *)(v0 + 56) = v0 + 224;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10025D268;
    v12 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
    v13 = (_QWORD *)(v0 + 144);
    v13[1] = 0x40000000;
    v13[2] = sub_1000874A8;
    v13[3] = &unk_1005D5340;
    v13[4] = v12;
    objc_msgSend(v8, "fetchItemForURL:completionHandler:", v11, v13);
    return swift_continuation_await(v7);
  }
}

uint64_t sub_10025D268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 344) = v1;
  if (v1)
    v2 = sub_10025D3D4;
  else
    v2 = sub_10025D2C8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025D2C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 336);
  v3 = *(_QWORD **)(v0 + 240);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  *v3 = *(_QWORD *)(v0 + 224);

  v4 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D338()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 296);
  v2 = *(void **)(v0 + 288);
  swift_willThrow();

  v3 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D394()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D3D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 264);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  v6 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025D458@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = sub_10006922C((uint64_t *)&unk_10064B460);
  v3 = type metadata accessor for UTType(0);
  v4 = swift_allocObject(v2, ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) | 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9670;
  static UTType.item.getter(v4);
  v5 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v5, 64, 7);
  result = sub_10029FBBC(v4, 1);
  *a1 = result;
  return result;
}

uint64_t sub_10025D4FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100649648 + dword_100649648);
  v3 = (_QWORD *)swift_task_alloc(unk_10064964C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10025D55C;
  return v5(a1);
}

uint64_t sub_10025D55C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_10025D5B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_10064C3D4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10025E54C;
  return sub_10029F130();
}

unint64_t sub_10025D600()
{
  unint64_t result;

  result = qword_100649610;
  if (!qword_100649610)
  {
    result = swift_getWitnessTable(&unk_1004DE5C0, &type metadata for DOCFileEntityQuery);
    atomic_store(result, (unint64_t *)&qword_100649610);
  }
  return result;
}

uint64_t sub_10025D644()
{
  return sub_10021F534((unint64_t *)&qword_100643928, (uint64_t)&unk_1004DB0C8);
}

unint64_t sub_10025D66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649618[0];
  if (!qword_100649618[0])
  {
    v1 = sub_10007E830(&qword_10064C3B0);
    sub_10021F534((unint64_t *)&qword_100643928, (uint64_t)&unk_1004DB0C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, qword_100649618);
  }
  return result;
}

uint64_t sub_10025D6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10012D180();
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10025D74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1000EA854;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_10025D7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_10064C3AC);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_10025E54C;
  return sub_10029F2AC(a2, a3);
}

uint64_t sub_10025D824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_100649640 + dword_100649640);
  v4 = (_QWORD *)swift_task_alloc(unk_100649644);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1001170D0;
  return v6(a2);
}

ValueMetadata *type metadata accessor for DOCFileEntityQuery()
{
  return &type metadata for DOCFileEntityQuery;
}

uint64_t sub_10025D898(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[3] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C((uint64_t *)&unk_100643900) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[4] = swift_task_alloc(v2);
  v1[5] = swift_task_alloc(v2);
  v1[6] = swift_task_alloc(v2);
  v3 = type metadata accessor for DOCFileEntity(0);
  v1[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[8] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v5);
  v1[10] = swift_task_alloc(v5);
  return swift_task_switch(sub_10025D948, 0, 0);
}

uint64_t sub_10025D948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[2] = _swiftEmptyArrayStorage;
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v2 = swift_task_alloc(32);
  v0[11] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_10025DA08;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10025DA08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10025DE28;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 88));
    v4 = sub_10025DA74;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10025DA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
    if (v2)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease_n(v1, 2);
LABEL_25:
    v31 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 40);
    v32 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  if (v1 < 0)
    v30 = *(_QWORD *)(v0 + 16);
  else
    v30 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  v2 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v2)
    goto LABEL_24;
LABEL_3:
  result = sub_1001550AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v36 = *(int **)(v0 + 56);
    v37 = *(_QWORD *)(v0 + 64);
    v35 = v1 & 0xC000000000000001;
    sub_10006922C((uint64_t *)&unk_100643910);
    v4 = 0;
    v38 = v1;
    v39 = v2;
    do
    {
      if (v35)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = *(_QWORD *)(v0 + 72);
      v8 = v36[5];
      *(_QWORD *)(v7 + v8) = EntityProperty<>.init()();
      v9 = v36[6];
      *(_QWORD *)(v7 + v9) = EntityProperty<>.init()();
      FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v6, "itemID"));
      *(_QWORD *)(v7 + v36[7]) = v6;
      v10 = v6;
      v11 = objc_msgSend(v10, "creationDate");
      v12 = *(_QWORD *)(v0 + 48);
      if (v11)
      {
        v13 = v11;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v11);

        v14 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 0, 1, v14);
      }
      else
      {
        v15 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
      }
      v16 = *(_QWORD *)(v0 + 40);
      v17 = *(_QWORD *)(v0 + 48);
      sub_1000271D4(v17, v16, (uint64_t *)&unk_100643900);
      EntityProperty.wrappedValue.setter(v16);
      sub_10000CB4C(v17, (uint64_t *)&unk_100643900);
      v18 = objc_msgSend(v10, "contentModificationDate");
      v19 = *(_QWORD *)(v0 + 32);
      if (v18)
      {
        v20 = v18;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v18);

        v21 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 0, 1, v21);
      }
      else
      {
        v22 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
      }
      v24 = *(_QWORD *)(v0 + 72);
      v23 = *(_QWORD *)(v0 + 80);
      v25 = *(_QWORD *)(v0 + 32);
      v26 = *(_QWORD *)(v0 + 40);
      sub_1000271D4(v25, v26, (uint64_t *)&unk_100643900);
      EntityProperty.wrappedValue.setter(v26);
      sub_10000CB4C(v25, (uint64_t *)&unk_100643900);

      sub_10011154C(v24, v23);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_1001550AC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v28 = _swiftEmptyArrayStorage[2];
      v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1)
        sub_1001550AC(v27 > 1, v28 + 1, 1);
      v29 = *(_QWORD *)(v0 + 80);
      ++v4;
      _swiftEmptyArrayStorage[2] = v28 + 1;
      sub_10011154C(v29, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v28);
      v1 = v38;
    }
    while (v39 != v4);
    swift_bridgeObjectRelease_n(v38, 2);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_10025DE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025DEA8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[2] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C((uint64_t *)&unk_100643900) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[3] = swift_task_alloc(v2);
  v1[4] = swift_task_alloc(v2);
  v1[5] = swift_task_alloc(v2);
  v3 = sub_10006922C((uint64_t *)&unk_1006438C0);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DOCFileEntity(0);
  v1[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[8] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  v1[11] = swift_task_alloc(v6);
  return swift_task_switch(sub_10025DF88, 0, 0);
}

uint64_t sub_10025DF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD *v53;

  v1 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
    if (v2)
      goto LABEL_3;
LABEL_29:
    v5 = _swiftEmptyArrayStorage;
LABEL_30:
    v40 = *(_QWORD *)(v0 + 80);
    v39 = *(_QWORD *)(v0 + 88);
    v41 = *(_QWORD *)(v0 + 72);
    v43 = *(_QWORD *)(v0 + 40);
    v42 = *(_QWORD *)(v0 + 48);
    v45 = *(_QWORD *)(v0 + 24);
    v44 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v5);
  }
  if (v1 < 0)
    v38 = *(_QWORD *)(v0 + 16);
  else
    v38 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  result = _CocoaArrayWrapper.endIndex.getter(v38);
  v2 = result;
  if (!result)
    goto LABEL_29;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v50 = v1 & 0xC000000000000001;
    v46 = *(_QWORD *)(v0 + 16) + 32;
    v5 = _swiftEmptyArrayStorage;
    v6 = *(_QWORD *)(v0 + 64);
    v47 = *(int **)(v0 + 56);
    v48 = v6;
    v49 = v2;
    do
    {
      if (v50)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 16));
      else
        v7 = *(id *)(v46 + 8 * v4);
      v8 = v7;
      v9 = objc_msgSend(objc_allocWithZone((Class)FPItem), "initWithSearchableItem:", v7);
      if (v9)
      {
        v10 = v9;
        v52 = v8;
        v53 = v5;
        v11 = *(_QWORD *)(v0 + 80);
        v12 = v47[5];
        sub_10006922C((uint64_t *)&unk_100643910);
        *(_QWORD *)(v11 + v12) = EntityProperty<>.init()();
        v51 = v47[6];
        *(_QWORD *)(v11 + v51) = EntityProperty<>.init()();
        FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v10, "itemID"));
        *(_QWORD *)(v11 + v47[7]) = v10;
        v13 = v10;
        v14 = objc_msgSend(v13, "creationDate");
        v15 = *(_QWORD *)(v0 + 40);
        if (v14)
        {
          v16 = v14;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v14);

          v17 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 0, 1, v17);
        }
        else
        {
          v18 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 1, 1, v18);
        }
        v19 = *(_QWORD *)(v0 + 32);
        v20 = *(_QWORD *)(v0 + 40);
        sub_1000271D4(v20, v19, (uint64_t *)&unk_100643900);
        EntityProperty.wrappedValue.setter(v19);
        sub_10000CB4C(v20, (uint64_t *)&unk_100643900);
        v21 = objc_msgSend(v13, "contentModificationDate");
        v22 = *(_QWORD *)(v0 + 24);
        if (v21)
        {
          v23 = v21;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v21);

          v24 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 0, 1, v24);
        }
        else
        {
          v25 = type metadata accessor for Date(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
        }
        v26 = *(_QWORD *)(v0 + 80);
        v28 = *(_QWORD *)(v0 + 48);
        v27 = *(_QWORD *)(v0 + 56);
        v29 = *(_QWORD *)(v0 + 24);
        v30 = *(_QWORD *)(v0 + 32);
        sub_1000271D4(v29, v30, (uint64_t *)&unk_100643900);
        EntityProperty.wrappedValue.setter(v30);
        sub_10000CB4C(v29, (uint64_t *)&unk_100643900);

        sub_10011154C(v26, v28);
        v6 = v48;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v28, 0, 1, v27);
        v8 = v52;
        v5 = v53;
        v2 = v49;
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v6 + 56))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 56));
      }
      v31 = *(_QWORD *)(v0 + 48);
      v32 = *(_QWORD *)(v0 + 56);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v31, 1, v32) == 1)
      {
        sub_10000CB4C(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_1006438C0);
      }
      else
      {
        v33 = *(_QWORD *)(v0 + 88);
        v34 = *(_QWORD *)(v0 + 72);
        sub_10011154C(*(_QWORD *)(v0 + 48), v33);
        sub_10011154C(v33, v34);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = (_QWORD *)sub_10015453C(0, v5[2] + 1, 1, (unint64_t)v5);
        v36 = v5[2];
        v35 = v5[3];
        if (v36 >= v35 >> 1)
          v5 = (_QWORD *)sub_10015453C(v35 > 1, v36 + 1, 1, (unint64_t)v5);
        v37 = *(_QWORD *)(v0 + 72);
        v5[2] = v36 + 1;
        sub_10011154C(v37, (uint64_t)v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v36);
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_10025E3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_100649654);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_100118844;
  return sub_10025C71C(a1, a2, v7, v6);
}

uint64_t sub_10025E454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FileEntityIdentifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10025E4C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FileEntityIdentifier(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100649674);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1000EA854;
  return sub_10025CE20(a1, v5, v6, v7);
}

double DOCAbstractPacedPropertyUpdater.pacingInterval.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(double *)(v0 + 16);
}

uint64_t DOCAbstractPacedPropertyUpdater.pacingInterval.setter(double a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DOCFilterableOperationProgressCollectionSource.unorderedItems.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t DOCAbstractPacedPropertyUpdater.deinit()
{
  uint64_t v0;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10025E7A0(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState);
  return v0;
}

Swift::Void __swiftcall DOCAbstractPacedPropertyUpdater.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = v0;
  *(_BYTE *)(v0 + 25) = 1;
  swift_beginAccess(v0 + 24, v17, 1, 0);
  v2 = *(_BYTE *)(v0 + 24);
  *(_BYTE *)(v0 + 24) = 0;
  if ((v2 & 1) != 0)
  {
    v13 = v0;
    v3 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    swift_retain();
    v4 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(v14, &v13, v3, v4, 7);
    v5 = v15;
    v6 = v16;
    sub_10007E7A0(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
    sub_100068588(v14);
  }
  v13 = v1;
  v7 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
  swift_retain();
  v8 = sub_10006922C((uint64_t *)&unk_100649060);
  swift_dynamicCast(v14, &v13, v7, v8, 7);
  v9 = v15;
  v10 = v16;
  sub_10007E7A0(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  sub_100068588(v14);
  v13 = v1;
  swift_retain();
  swift_dynamicCast(v14, &v13, v7, v8, 7);
  v11 = v15;
  v12 = v16;
  sub_10007E7A0(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  sub_100068588(v14);
}

uint64_t sub_10025E7A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100649688);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DOCAbstractPacedPropertyUpdater.__deallocating_deinit()
{
  uint64_t v0;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10025E7A0(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t DOCAbstractPacedPropertyUpdater.isObservingActive.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 24);
}

void DOCAbstractPacedPropertyUpdater.isObservingActive.setter(char a1)
{
  uint64_t v1;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v3 = a1 & 1;
  swift_beginAccess(v1 + 24, v13, 1, 0);
  v4 = *(unsigned __int8 *)(v1 + 24);
  *(_BYTE *)(v1 + 24) = a1;
  if (v4 != v3)
  {
    if ((a1 & 1) != 0)
    {
      sub_10025EB70();
    }
    else
    {
      v9 = v1;
      v5 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
      swift_retain();
      v6 = sub_10006922C((uint64_t *)&unk_100649060);
      swift_dynamicCast(v10, &v9, v5, v6, 7);
      v7 = v11;
      v8 = v12;
      sub_10007E7A0(v10, v11);
      (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
      sub_100068588(v10);
    }
  }
}

void (*DOCAbstractPacedPropertyUpdater.isObservingActive.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  swift_beginAccess(v1 + 24, v3 + 5, 1, 0);
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v1 + 24);
  return sub_10025E96C;
}

void sub_10025E96C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)a1 + 64;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 80);
  v6 = *(_BYTE *)(v4 + 24);
  *(_BYTE *)(v4 + 24) = v5;
  if ((a2 & 1) == 0)
  {
    if (((v5 ^ v6) & 1) == 0)
      goto LABEL_8;
    v7 = v2[9];
    if (!v5)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (((v5 ^ v6) & 1) != 0)
  {
    v7 = v2[9];
    if ((v5 & 1) == 0)
    {
LABEL_4:
      v2[8] = v7;
      v8 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
      swift_retain();
      v9 = sub_10006922C((uint64_t *)&unk_100649060);
      swift_dynamicCast(v2, v3, v8, v9, 7);
      v10 = v2[3];
      v11 = v2[4];
      sub_10007E7A0(v2, v10);
      (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      sub_100068588(v2);
      goto LABEL_8;
    }
LABEL_7:
    sub_10025EB70();
  }
LABEL_8:
  free(v2);
}

Swift::Void __swiftcall DOCAbstractPacedPropertyUpdater.setNeedsUpdateProperties(notifyImmediately:)(Swift::Bool notifyImmediately)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(uint64_t *)(v1 + 32) <= 0)
  {
    v2 = v1;
    v10 = 0;
    v11 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v4._object = (void *)0x800000010051CD00;
    v4._countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v4);
    v14 = v1;
    v5 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)(&v14, &v10, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_bridgeObjectRelease(v11);
    v14 = v2;
    swift_retain();
    v6 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(&v10, &v14, v5, v6, 7);
    v7 = v12;
    v8 = v13;
    sub_10007E7A0(&v10, v12);
    v9 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    sub_100068588(&v10);
    if (v9)
      sub_10025F05C(notifyImmediately || v9 == 2);
  }
}

uint64_t sub_10025EB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_10006922C(&qword_100649688);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = __chkstk_darwin(v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 25) == 1)
  {
    v26 = v1;
    v14 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    v25 = v14;
    swift_retain(v1);
    v24 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(v27, &v26, v14, v24, 7);
    v16 = v28;
    v15 = v29;
    sub_10007E7A0(v27, v28);
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 40);
    v23 = v6;
    v17(v16, v15);
    v18 = sub_100068588(v27);
    static DispatchTime.now()(v18);
    sub_10025EF08(v8);
    (*(void (**)(_BYTE *, char *, uint64_t))(v10 + 40))(&v8[*(int *)(v5 + 20)], v13, v9);
    sub_10025FBD8((uint64_t)v8, (uint64_t)v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v4, 0, 1, v5);
    v19 = v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, v27, 33, 0);
    sub_10025FB90((uint64_t)v4, v19);
    swift_endAccess(v27);
    v26 = v1;
    swift_retain(v1);
    swift_dynamicCast(v27, &v26, v25, v24, 7);
    v20 = v28;
    v21 = v29;
    sub_10007E7A0(v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
    sub_100068588(v27);
    sub_10025EDC4(0);
    return sub_10025F05C(1);
  }
  return result;
}

uint64_t sub_10025EDC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(uint64_t *)(v1 + 32) <= 0)
  {
    v2 = v1;
    v3 = result;
    v12 = 0;
    v13 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v4._object = (void *)0x800000010051CD00;
    v4._countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v4);
    v16 = v1;
    v5 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)(&v16, &v12, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_bridgeObjectRelease(v13);
    v16 = v2;
    swift_retain(v2);
    v6 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(&v12, &v16, v5, v6, 7);
    v7 = v14;
    v8 = v15;
    sub_10007E7A0(&v12, v14);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    result = sub_100068588(&v12);
    if (v3)
    {
      if (v9)
      {
        v11 = v3 == 2 || v9 == 2;
        return sub_10025F05C(v11);
      }
    }
  }
  return result;
}

uint64_t sub_10025EF08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = sub_10006922C(&qword_100649688);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, v15, 0, 0);
  sub_10025FB04(v9, (uint64_t)v8);
  v10 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10025FBD8((uint64_t)v8, (uint64_t)a1);
  v12 = sub_10025E7A0((uint64_t)v8);
  static DispatchTime.now()(v12);
  *a1 = 0;
  sub_10025FB4C((uint64_t)a1, (uint64_t)v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v14, 33, 0);
  sub_10025FB90((uint64_t)v6, v9);
  return swift_endAccess(v14);
}

uint64_t sub_10025F05C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned __int8 *v24;
  void (*v25)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  int v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t result;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE *v48;
  char v49;
  uint64_t v50;
  void (*v51)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  _BYTE v72[4];
  int v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84[24];
  _QWORD v85[3];
  void **aBlock;
  unint64_t v87;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)();
  uint64_t v91;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v79 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v78 = &v72[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for DispatchQoS(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin(v5);
  v75 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10006922C(&qword_100649688);
  __chkstk_darwin(v7);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchTime(0);
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v80 = &v72[-v14];
  v15 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = &v72[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __chkstk_darwin(v17);
  v22 = &v72[-v21];
  __chkstk_darwin(v20);
  v24 = &v72[-v23];
  if ((a1 & 1) != 0)
    goto LABEL_2;
  v37 = v1;
  sub_10025EF08(&v72[-v23]);
  v38 = *v24;
  v39 = sub_10025FB4C((uint64_t)v24, (uint64_t)v22);
  if (v38 == 1)
  {
    sub_10025FC1C((uint64_t)v22);
    sub_10025FC1C((uint64_t)v24);
    v1 = v37;
  }
  else
  {
    v43 = &v22[*(int *)(v15 + 20)];
    v74 = v3;
    v44 = v80;
    static DispatchTime.now()(v39);
    v45 = sub_10005A360((unint64_t *)&unk_1006498A0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchTime, (uint64_t)&protocol conformance descriptor for DispatchTime);
    v46 = v43;
    v47 = v82;
    v73 = dispatch thunk of static Comparable.< infix(_:_:)(v44, v46, v82, v45);
    v48 = v44;
    v3 = v74;
    (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v48, v47);
    sub_10025FC1C((uint64_t)v22);
    sub_10025FC1C((uint64_t)v24);
    v1 = v37;
    if ((v73 & 1) == 0)
    {
LABEL_2:
      sub_10025EF08(v19);
      *v19 = 0;
      sub_10025FBD8((uint64_t)v19, (uint64_t)v9);
      v25 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56);
      v25(v9, 0, 1, v15);
      v26 = v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
      swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &aBlock, 33, 0);
      sub_10025FB90((uint64_t)v9, v26);
      v27 = swift_endAccess(&aBlock);
      static DispatchTime.now()(v27);
      swift_beginAccess(v1 + 16, v85, 0, 0);
      v28 = v80;
      + infix(_:_:)(v13, *(double *)(v1 + 16));
      v30 = v81;
      v29 = v82;
      (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v13, v82);
      sub_10025EF08(v19);
      (*(void (**)(char *, _BYTE *, uint64_t))(v30 + 40))(&v19[*(int *)(v15 + 20)], v28, v29);
      sub_10025FBD8((uint64_t)v19, (uint64_t)v9);
      v25(v9, 0, 1, v15);
      swift_beginAccess(v26, &aBlock, 33, 0);
      sub_10025FB90((uint64_t)v9, v26);
      swift_endAccess(&aBlock);
      swift_beginAccess(v1 + 24, v84, 0, 0);
      v31 = v1;
      if (*(_BYTE *)(v1 + 24) == 1)
      {
        aBlock = 0;
        v87 = 0xE000000000000000;
        _StringGuts.grow(_:)(37);
        v32._object = (void *)0x800000010051DD90;
        v32._countAndFlagsBits = 0xD000000000000023;
        String.append(_:)(v32);
        v83 = v1;
        v33 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
        _print_unlocked<A, B>(_:_:)(&v83, &aBlock, v33, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        swift_bridgeObjectRelease(v87);
        v83 = v31;
        swift_retain(v31);
        v34 = sub_10006922C((uint64_t *)&unk_100649060);
        swift_dynamicCast(&aBlock, &v83, v33, v34, 7);
        v35 = v89;
        v36 = v90;
        sub_10007E7A0(&aBlock, (uint64_t)v89);
        (*((void (**)(void *, uint64_t (*)()))v36 + 3))(v35, v36);
        return sub_100068588(&aBlock);
      }
      else
      {
        aBlock = 0;
        v87 = 0xE000000000000000;
        _StringGuts.grow(_:)(37);
        v40._object = (void *)0x800000010051DD60;
        v40._countAndFlagsBits = 0xD000000000000023;
        String.append(_:)(v40);
        v83 = v1;
        v41 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
        _print_unlocked<A, B>(_:_:)(&v83, &aBlock, v41, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        return swift_bridgeObjectRelease(v87);
      }
    }
  }
  sub_10025EF08(v19);
  v49 = *v19;
  result = sub_10025FC1C((uint64_t)v19);
  if ((v49 & 1) == 0)
  {
    v50 = v1;
    sub_10025EF08(v19);
    *v19 = 1;
    sub_10025FBD8((uint64_t)v19, (uint64_t)v9);
    v51 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56);
    v52 = v15;
    v51(v9, 0, 1, v15);
    v53 = v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
    swift_beginAccess(v53, &aBlock, 33, 0);
    sub_10025FB90((uint64_t)v9, v53);
    swift_endAccess(&aBlock);
    aBlock = 0;
    v87 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v54._object = (void *)0x800000010051DD30;
    v54._countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v54);
    v85[0] = v50;
    v55 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)(v85, &aBlock, v55, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_bridgeObjectRelease(v87);
    v56 = sub_100086BF0();
    v57 = v50;
    v58 = (void *)static OS_dispatch_queue.main.getter(v56);
    sub_10025EF08(v19);
    v59 = &v19[*(int *)(v52 + 20)];
    v60 = v3;
    v61 = v80;
    v62 = v81;
    v63 = v82;
    (*(void (**)(_BYTE *, char *, uint64_t))(v81 + 32))(v80, v59, v82);
    v64 = swift_allocObject(&unk_1005D5468, 24, 7);
    swift_weakInit(v64 + 16, v57);
    v90 = sub_10025FD30;
    v91 = v64;
    aBlock = _NSConcreteStackBlock;
    v87 = 1107296256;
    v88 = sub_10004A82C;
    v89 = &unk_1005D5480;
    v65 = _Block_copy(&aBlock);
    v66 = swift_release(v91);
    v67 = v75;
    static DispatchQoS.unspecified.getter(v66);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v68 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v69 = sub_10006922C((uint64_t *)&unk_100647540);
    v70 = sub_1000791AC();
    v71 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v69, v70, v60, v68);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v61, v67, v71, v65);
    _Block_release(v65);

    (*(void (**)(_BYTE *, uint64_t))(v79 + 8))(v71, v60);
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v67, v77);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v62 + 8))(v61, v63);
  }
  return result;
}

uint64_t sub_10025F7D4()
{
  return type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
}

uint64_t *sub_10025F7DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for DispatchTime(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10025F864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for DispatchTime(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_10025F89C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DispatchTime(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10025F8F8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DispatchTime(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10025F954(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DispatchTime(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_10025F9B0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DispatchTime(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10025FA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025FA18);
}

uint64_t sub_10025FA18(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for DispatchTime(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

_BYTE *sub_10025FA94(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for DispatchTime(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_10025FB04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100649688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025FB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025FB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100649688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025FBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025FC1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10025FC58()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10025FC7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  _BYTE v9[24];

  v2 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v9, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v6 = result;
    sub_10025EF08(v4);
    v7 = *v4;
    sub_10025FC1C((uint64_t)v4);
    if (v7 == 1)
      sub_10025F05C(1);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_10025FD30()
{
  uint64_t v0;

  return sub_10025FC7C(v0);
}

double sub_10025FD38()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double result;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    v3 = sub_10016BACC();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (v5)
    v6 = v3;
  else
    v6 = 0x2A6C696E2ALL;
  if (v5)
    v7 = v5;
  else
    v7 = 0xE500000000000000;
  v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease(v7);
  if (qword_100640D00 != -1)
    swift_once(&qword_100640D00, sub_1000E9918);
  v9 = qword_1006431B0;
  swift_retain();
  sub_1000E9960(0xD00000000000001BLL, 0x800000010051DF60, 0xD000000000000019, (void *)0x800000010051DF40);
  swift_bridgeObjectRelease(0x800000010051DF40);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_10025FE60()
{
  uint64_t v0;

  sub_1000E9F38(v0 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10025FEA0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for DOCSidebarDropContext()
{
  return objc_opt_self(_TtC5Files21DOCSidebarDropContext);
}

uint64_t sub_10025FEF4()
{
  return type metadata accessor for DOCSidebarDropContext.DebugInfo(0);
}

uint64_t type metadata accessor for DOCSidebarDropContext.DebugInfo(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_1006499A0, (uint64_t)&nominal type descriptor for DOCSidebarDropContext.DebugInfo);
}

void sub_10025FF10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1000B33F4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_10025FFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCSidebarDropProposal", 28, a5, a6, 0);
  __break(1u);
}

id sub_10025FFF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarDropProposal(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100260068()
{
  return type metadata accessor for DOCSidebarDropProposal(0);
}

uint64_t type metadata accessor for DOCSidebarDropProposal(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100649A90, (uint64_t)&nominal type descriptor for DOCSidebarDropProposal);
}

uint64_t sub_100260084(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

char *sub_100260114(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  __n128 v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;

  v29 = a1;
  v4 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v2[OBJC_IVAR____TtC5Files14DOCEjectButton_buttonSize];
  v8 = enum case for UIButton.Configuration.Size.medium(_:);
  v9 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle;
  v11 = (void *)objc_opt_self(UIScreen);
  v12 = v2;
  v13 = objc_msgSend(v11, "mainScreen");
  v14 = objc_msgSend(v13, "traitCollection");

  v15 = objc_msgSend(v14, "sourceOutlineStyle");
  *(_QWORD *)&v2[v10] = v15;
  v12[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateDisabled] = 0;
  v12[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] = 1;
  v16 = OBJC_IVAR____TtC5Files14DOCEjectButton_color;
  *(_QWORD *)&v12[v16] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");

  v17 = (objc_class *)type metadata accessor for DOCEjectButton(0);
  v30.receiver = v12;
  v30.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  static UIButton.Configuration.plain()();
  v20 = type metadata accessor for UIButton.Configuration(0, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
  UIButton.configuration.setter(v6);
  v21 = objc_msgSend(v18, "traitCollection");
  v22 = objc_msgSend(v21, "sourceOutlineStyle");

  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle] = v22;
  objc_msgSend(v18, "setNeedsUpdateConfiguration");
  objc_msgSend(v18, "updateConfiguration");
  sub_10026173C();
  v23 = swift_allocObject(&unk_1005D54E0, 32, 7);
  *(_QWORD *)(v23 + 16) = v29;
  *(_QWORD *)(v23 + 24) = a2;
  v24 = v18;
  v25 = swift_retain();
  v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v25, 0, 0, 0, sub_100066584, v23);
  objc_msgSend(v24, "setDoc_primaryAction:", v26);

  swift_release(a2);
  return v24;
}

uint64_t sub_1002603F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];

  v3 = type metadata accessor for UIButton.Configuration.Size(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v20[-v11 - 8];
  v13 = v1 + OBJC_IVAR____TtC5Files14DOCEjectButton_buttonSize;
  v14 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Files14DOCEjectButton_buttonSize, v20, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v13, a1, v3, v14);
  v15 = swift_endAccess(v20);
  UIButton.configuration.getter(v15);
  v17 = type metadata accessor for UIButton.Configuration(0, v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17))
  {
    sub_100261834((uint64_t)v12, (uint64_t)v9);
    UIButton.configuration.setter(v9);
    sub_10026187C((uint64_t)v12);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
    UIButton.Configuration.buttonSize.setter(v6);
    UIButton.configuration.setter(v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t sub_1002606C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  id v14;
  uint64_t result;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  char v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  objc_super v39;

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - v6;
  v9 = type metadata accessor for UIButton.Configuration(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (objc_class *)type metadata accessor for DOCEjectButton(0);
  v39.receiver = v0;
  v39.super_class = v13;
  v14 = objc_msgSendSuper2(&v39, "updateConfiguration");
  UIButton.configuration.getter(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    return sub_10026187C((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v7, v9);
  v16 = objc_msgSend(v0, "window");

  if (v16 && (v1[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateDisabled] & 1) == 0)
  {
    v24 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle];
    v25 = objc_msgSend(v1, "traitCollection");
    v26 = objc_msgSend(v25, "preferredContentSizeCategory");

    v27 = type metadata accessor for DOCSourceListInterface_Default();
    v28 = objc_msgSend((id)swift_initStaticObject(v27, &unk_100641248), "ejectIconFor:iconColor:", v24, *(_QWORD *)&v1[OBJC_IVAR____TtC5Files14DOCEjectButton_color]);
    v29 = sub_1002619F4(v24, v26);
    v30 = v28;
    if ((v31 & 1) == 0)
    {
      v30 = objc_msgSend(v28, "imageWithBaselineOffsetFromBottom:", *(double *)&v29);

    }
    v32 = v30;
    UIButton.Configuration.image.setter(v30);
    UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
    UIButton.configuration.setter(v4);
    v33 = objc_msgSend(v1, "traitCollection");
    static CGSize.doc_preferredSourceListIconSize(for:)();
    v35 = v34;

    v36 = v35 + 2.0;
    objc_msgSend(v1, "frame");
    if (v38 != v36 || v37 != v36)
    {
      objc_msgSend(v1, "frame");
      objc_msgSend(v1, "setFrame:");
      objc_msgSend(v1, "setNeedsLayout");
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v1[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] = 0;
  }
  else
  {
    v17 = objc_msgSend(v1, "traitCollection");
    static CGSize.doc_preferredSourceListIconSize(for:)();
    v19 = v18;

    v20 = v19 + 2.0;
    objc_msgSend(v1, "frame");
    if (v22 != v20 || v21 != v20)
    {
      objc_msgSend(v1, "frame");
      objc_msgSend(v1, "setFrame:");
      objc_msgSend(v1, "setNeedsLayout");
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v1[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] = 1;
  }
  return result;
}

void sub_100260AC8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for DOCEjectButton(0);
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v4 = OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateDisabled;
  v2[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateDisabled] = 1;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "sourceOutlineStyle");

  v7 = *(id *)&v2[OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle] = v6;
  if (v6 != v7)
    objc_msgSend(v2, "setNeedsUpdateConfiguration");
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = sub_10000BE74(16, a1);

  if ((v9 & 1) != 0)
    v2[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] = 1;
  v2[v4] = 0;
  if (v2[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] == 1)
  {
    objc_msgSend(v2, "setNeedsUpdateConfiguration");
    objc_msgSend(v2, "updateConfiguration");
  }
}

id sub_100260E3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCEjectButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100260EC0()
{
  return type metadata accessor for DOCEjectButton(0);
}

uint64_t type metadata accessor for DOCEjectButton(uint64_t a1)
{
  uint64_t result;

  result = qword_100649AE0;
  if (!qword_100649AE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCEjectButton);
  return result;
}

uint64_t sub_100260F04(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UIButton.Configuration.Size(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_1004DE7E8;
    v4[3] = &unk_1004DE7E8;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100260F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  void *v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files21DOCEjectionController_delegate, v6);

    if (v8)
    {
      objc_msgSend(v8, "ejectionStateDidChange");
      swift_unknownObjectRelease(v8);
    }
  }
}

char *sub_100261014()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files21DOCEjectionController____lazy_storage____button;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCEjectionController____lazy_storage____button);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC5Files21DOCEjectionController____lazy_storage____button);
  }
  else
  {
    v4 = sub_100261074(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_100261074(uint64_t a1)
{
  uint64_t v2;
  id v3;
  char *v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  NSString v12;
  uint64_t v14;

  v2 = swift_allocObject(&unk_1005D54B8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = objc_allocWithZone((Class)type metadata accessor for DOCEjectButton(0));
  v4 = sub_100260114((uint64_t)sub_100261734, v2);
  v5 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCEjectionController_source);
  v6 = v4;
  v7 = objc_msgSend(v5, "identifier");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v14 = v8;
  swift_bridgeObjectRetain(v10);
  v11._countAndFlagsBits = 0x75427463656A652DLL;
  v11._object = (void *)0xEC0000006E6F7474;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setAccessibilityIdentifier:", v12, swift_bridgeObjectRelease(v10).n128_f64[0], v14);

  objc_msgSend(v6, "setHidden:", 1);
  return v6;
}

void sub_1002611AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1002611FC();

  }
}

double sub_1002611FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCEjectionController_source);
  v2 = objc_msgSend(v1, "isEjectable");
  if ((_DWORD)v2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files21DOCEjectionController_alertPresentingViewController, v3);
    if (Strong)
    {
      v20 = (id)Strong;
      sub_1002613D4(Strong);

      return result;
    }
    v6 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v14 = static os_log_type_t.info.getter();
    v15 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    v16 = objc_msgSend(v1, "identifier");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 64) = sub_10006A638();
    *(_QWORD *)(v9 + 32) = v17;
    *(_QWORD *)(v9 + 40) = v19;
    os_log(_:dso:log:type:_:)("Trying to eject a source but alert presenting view controller is nil %@", 71, 2, &_mh_execute_header, v6, v14, v9);
  }
  else
  {
    v6 = *(id *)DOCLog.UI.unsafeMutableAddressor(v2);
    v7 = static os_log_type_t.info.getter();
    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 72, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    v10 = objc_msgSend(v1, "identifier");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 64) = sub_10006A638();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    os_log(_:dso:log:type:_:)("Trying to eject a source that's not ejectable %@", 48, 2, &_mh_execute_header, v6, v7, v9);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1002613D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  NSString v16;
  NSString v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21[11];
  uint64_t v22;
  char v23;

  v2 = (void *)a1;
  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Files21DOCEjectionController_source);
  v4 = qword_1006420A0;
  if (!qword_1006420A0)
    goto LABEL_4;
  v5 = v3;
  swift_retain();
  sub_1000D2B84(v5, v21);
  swift_release(v4);

  a1 = sub_10026179C((uint64_t)v21, (uint64_t)&v22);
  if (v22 == 1)
    goto LABEL_4;
  v6 = v23;
  a1 = sub_1002617E4((uint64_t)v21);
  if ((v6 & 1) != 0)
  {
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v19, 0, 0);

    objc_msgSend(v18, "addAction:", v20);
    objc_msgSend(v2, "presentViewController:animated:completion:", v18, 1, 0);

  }
  else
  {
LABEL_4:
    v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v8 = static os_log_type_t.debug.getter();
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
    v11 = objc_msgSend(v3, "identifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    *(_QWORD *)(v10 + 56) = &type metadata for String;
    *(_QWORD *)(v10 + 64) = sub_10006A638();
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v14;
    os_log(_:dso:log:type:_:)("Trying to eject source %@", 25, 2, &_mh_execute_header, v7, v8, v10);

    v15 = swift_bridgeObjectRelease(v10);
    (*(void (**)(void *, __n128))((swift_isaMask & *v3) + 0x288))(v2, v15);
  }
}

uint64_t type metadata accessor for DOCEjectionController()
{
  return objc_opt_self(_TtC5Files21DOCEjectionController);
}

uint64_t sub_100261710()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100261734()
{
  uint64_t v0;

  sub_1002611AC(v0);
}

unint64_t sub_10026173C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006424C0;
  if (!qword_1006424C0)
  {
    v1 = objc_opt_self(UIAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006424C0);
  }
  return result;
}

uint64_t sub_100261778()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10026179C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_10064A070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002617E4(uint64_t a1)
{
  sub_1000D4CA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80));
  return a1;
}

uint64_t sub_100261834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_10064A080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026187C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C((uint64_t *)&unk_10064A080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002618BC()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v1 = &v0[OBJC_IVAR____TtC5Files14DOCEjectButton_buttonSize];
  v2 = enum case for UIButton.Configuration.Size.medium(_:);
  v3 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  v4 = OBJC_IVAR____TtC5Files14DOCEjectButton_sourceOutlineStyle;
  v5 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v6 = objc_msgSend(v5, "traitCollection");

  v7 = objc_msgSend(v6, "sourceOutlineStyle");
  *(_QWORD *)&v0[v4] = v7;
  v0[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateDisabled] = 0;
  v0[OBJC_IVAR____TtC5Files14DOCEjectButton_iconUpdateNeeded] = 1;
  v8 = OBJC_IVAR____TtC5Files14DOCEjectButton_color;
  *(_QWORD *)&v0[v8] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCEjectionController.swift", 33, 2, 19, 0);
  __break(1u);
}

uint64_t sub_1002619F4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  NSString *v10;
  NSString *v11;
  NSString *v12;
  uint64_t v13;
  NSString *v14;
  NSString *v15;
  NSString *v16;
  NSString *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE v29[96];
  _BYTE v30[96];
  _BYTE v31[72];

  v4 = sub_10006922C(&qword_100649B40);
  inited = swift_initStackObject(v4, v31);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = 1;
  v6 = inited + 32;
  v7 = sub_10006922C(&qword_100649B48);
  v8 = swift_initStackObject(v7, v30);
  *(_OWORD *)(v8 + 16) = xmmword_1004D9B50;
  *(_QWORD *)(v8 + 32) = UIContentSizeCategoryAccessibilityLarge;
  *(_QWORD *)(v8 + 40) = 0x4014000000000000;
  *(_QWORD *)(v8 + 48) = UIContentSizeCategoryAccessibilityExtraLarge;
  *(_QWORD *)(v8 + 56) = 0x4014000000000000;
  *(_QWORD *)(v8 + 64) = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  *(_QWORD *)(v8 + 72) = 0x4014000000000000;
  *(_QWORD *)(v8 + 80) = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  *(_QWORD *)(v8 + 88) = 0x4014000000000000;
  v9 = UIContentSizeCategoryAccessibilityLarge;
  v10 = UIContentSizeCategoryAccessibilityExtraLarge;
  v11 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v12 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  *(_QWORD *)(inited + 40) = sub_1003F230C(v8);
  *(_QWORD *)(inited + 48) = 0;
  v13 = swift_initStackObject(v7, v29);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9B50;
  *(_QWORD *)(v13 + 32) = v9;
  *(_QWORD *)(v13 + 40) = 0x4022000000000000;
  *(_QWORD *)(v13 + 48) = v10;
  *(_QWORD *)(v13 + 56) = 0x4022000000000000;
  *(_QWORD *)(v13 + 64) = v11;
  *(_QWORD *)(v13 + 72) = 0x4022000000000000;
  *(_QWORD *)(v13 + 80) = v12;
  *(_QWORD *)(v13 + 88) = 0x4022000000000000;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  v17 = v12;
  *(_QWORD *)(inited + 56) = sub_1003F230C(v13);
  v18 = sub_1003F97B0((_QWORD *)inited);
  swift_setDeallocating(inited);
  v19 = *(_QWORD *)(inited + 16);
  v20 = sub_10006922C((uint64_t *)&unk_100649B50);
  swift_arrayDestroy(v6, v19, v20);
  if (*(_QWORD *)(v18 + 16))
  {
    v21 = sub_100140784(a1);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRelease(v18);
      if (*(_QWORD *)(v23 + 16))
      {
        v24 = a2;
        v25 = sub_100079D38(v24);
        if ((v26 & 1) != 0)
          v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
        else
          v27 = 0;

      }
      else
      {
        v27 = 0;
      }
    }
    else
    {
      v27 = 0;
      v23 = v18;
    }
  }
  else
  {
    v27 = 0;
    v23 = v18;
  }
  swift_bridgeObjectRelease(v23);
  return v27;
}

uint64_t type metadata accessor for DOCRecentsSpotlightCollectionObserver()
{
  return objc_opt_self(_TtC5Files37DOCRecentsSpotlightCollectionObserver);
}

void sub_100261C40(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "collectionUpdated");
  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v4 = v3;
  v5 = objc_allocWithZone((Class)NSUserDefaults);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend(v5, "initWithSuiteName:", v6);

  if (v7)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_itemCount]);
    objc_msgSend(v7, "doc_setObject:forRoleKey:configuation:", v8, DOCUserDefaultsLastNumberOfSharedDocuments, *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_configuration]);

  }
}

uint64_t type metadata accessor for DOCSharedDocumentsSpotlightCollectionObserver()
{
  return objc_opt_self(_TtC5Files45DOCSharedDocumentsSpotlightCollectionObserver);
}

id sub_100261DCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSpotlightCollectionObserver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCSpotlightCollectionObserver()
{
  return objc_opt_self(_TtC5Files30DOCSpotlightCollectionObserver);
}

uint64_t sub_100261E68()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = (void (*)(_QWORD, __n128))type metadata accessor for DispatchPredicate(0);
  v3 = *((_QWORD *)v2 - 1);
  __chkstk_darwin(v2);
  v5 = (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *(_QWORD *)v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(uint64_t, _QWORD, void (*)(_QWORD, __n128)))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(uint64_t, void (*)(_QWORD, __n128)))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v11 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    goto LABEL_6;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_didFinishGathering) != 1)
    return result;
  v2 = *(void (**)(_QWORD, __n128))(v1
                                             + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_collectionUpdateBlock);
  if (!v2)
    return result;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_collectionUpdateBlock + 8);
  v9 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_itemCollection), "items", swift_retain().n128_f64[0]);
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if ((unint64_t)v5 >> 62)
    goto LABEL_11;
  v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  v12 = swift_bridgeObjectRelease(v5);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_itemCount) = v11;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_oldItemCount) != v11)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_oldItemCount) = v11;
    v2(v11, v12);
  }
  return sub_100087534((uint64_t)v2, v7);
}

id sub_10026206C(uint64_t a1)
{
  void *v1;
  id v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *(_QWORD *)v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(char *, _QWORD, _QWORD *))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  v10 = (*(uint64_t (**)(char *, _QWORD *))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v4 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
    v9 = static os_log_type_t.debug.getter(v4);
    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v7 = (char *)swift_allocObject(v11, 112, 7);
    *((_OWORD *)v7 + 1) = xmmword_1004D4CE0;
    *((_QWORD *)v7 + 7) = type metadata accessor for DOCSpotlightCollectionObserver();
    *((_QWORD *)v7 + 8) = sub_100262518();
    *((_QWORD *)v7 + 4) = v2;
    v2 = v2;
    v12 = objc_msgSend((id)a1, "items");
    v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if (!((unint64_t)a1 >> 62))
    {
      v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  if (a1 < 0)
    v18 = a1;
  else
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(a1);
LABEL_4:
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(a1).n128_u64[0];
  *((_QWORD *)v7 + 12) = &type metadata for Int;
  *((_QWORD *)v7 + 13) = &protocol witness table for Int;
  *((_QWORD *)v7 + 9) = v14;
  os_log(_:dso:log:type:_:)("Collection for DOCSpotlightCollectionObserver '%@' did finish gathering with item count: %ld", 92, 2, &_mh_execute_header, v4, v9, v7, v15);

  *(_QWORD *)&v16 = swift_bridgeObjectRelease(v7).n128_u64[0];
  *((_BYTE *)v2 + OBJC_IVAR____TtC5Files30DOCSpotlightCollectionObserver_didFinishGathering) = 1;
  return objc_msgSend(v2, "collectionUpdated", v16);
}

unint64_t sub_100262518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649C08;
  if (!qword_100649C08)
  {
    v1 = type metadata accessor for DOCSpotlightCollectionObserver();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100649C08);
  }
  return result;
}

id DOCDocumentPickerViewController.__allocating_init(configuration:context:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return DOCDocumentPickerViewController.init(configuration:context:)(a1, a2);
}

uint64_t DOCDocumentPickerViewController.pickerDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = v0 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate, v4, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1, v2);
}

uint64_t DOCDocumentPickerViewController.pickerDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*DOCDocumentPickerViewController.pickerDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100262744;
}

void sub_100262744(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id DOCDocumentPickerViewController.init(configuration:context:)(void *a1, void *a2)
{
  _BYTE *v2;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  void *v28;
  char *v29;
  id (**v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  Class isa;
  id v39;
  id v40;
  objc_super v42;
  id v43;
  _QWORD v44[4];

  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate]);
  v2[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_didConfirmOrCancel] = 0;
  v5 = objc_msgSend(a1, "copy");
  _bridgeAnyObjectToAny(_:)(v44, v5);
  swift_unknownObjectRelease(v5);
  v6 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
  swift_dynamicCast(&v43, v44, (char *)&type metadata for Any + 8, v6, 7);
  v7 = v43;
  objc_msgSend(v43, "configureContextForDisplayingTab:", 2);
  v8 = objc_msgSend(v7, "hostIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = objc_allocWithZone((Class)DOCSourceObserver);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v13 = objc_msgSend(v11, "initWithUserAction:hostIdentifier:", 0, v12);

  v42.receiver = v2;
  v42.super_class = (Class)type metadata accessor for DOCDocumentPickerViewController();
  v14 = objc_msgSendSuper2(&v42, "initWithConfiguration:sourceObserver:", v7, v13);
  v15 = v14;
  if (a2)
  {
    objc_msgSend(v14, "setPickerContext:", a2);
  }
  else
  {
    v16 = v14;
    v17 = objc_msgSend(v7, "urls");
    if (v17)
    {
      v18 = v17;
      v19 = sub_10004F2F0(0, &qword_100644C20, FPSandboxingURLWrapper_ptr);
      v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

      objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
      v21 = v16;
      v22 = (void *)DOCPickerContext.init(with:)(v20);
      objc_msgSend(v21, "setPickerContext:", v22);

    }
  }
  v23 = objc_msgSend(v15, "fullDocumentManagerViewController");
  objc_msgSend(v23, "setDelegate:", v15);

  v24 = swift_allocObject(&unk_1005D5508, 24, 7);
  *(_QWORD *)(v24 + 16) = v15;
  type metadata accessor for DOCCopyableBarButtonItem();
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v25 = swift_allocObject(&unk_1005D5530, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = v15;
  v28 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v27, 0, 0, 0, sub_100262DF8, v25);
  v29 = (char *)sub_1004581A4(1, (uint64_t)v28);

  v30 = (id (**)())&v29[OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator];
  v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator];
  v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator + 8];
  *v30 = sub_100262CF0;
  v30[1] = (id (*)())v24;
  sub_100087534(v31, v32);

  v33 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v34 = swift_allocObject(v33, 40, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v34 + 32) = v29;
  v44[0] = v34;
  specialized Array._endMutation()(v34);
  v35 = v44[0];
  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v36 = v26;
  v37 = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v36, "setAdditionalTrailingNavigationBarButtonItems:", isa);

  v39 = v36;
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);

  v40 = v39;
  objc_msgSend(v40, "setModalInPresentation:", DOCDeviceIsPad());

  return v40;
}

uint64_t type metadata accessor for DOCDocumentPickerViewController()
{
  return objc_opt_self(_TtC5Files31DOCDocumentPickerViewController);
}

id sub_100262C00()
{
  uint64_t v0;
  __n128 v1;
  void *v2;
  id v3;

  type metadata accessor for DOCCopyableBarButtonItem();
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v0 = swift_allocObject(&unk_1005D5530, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v2 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v1, 0, 0, 0, sub_100262DF8, v0);
  v3 = sub_1004581A4(1, (uint64_t)v2);

  return v3;
}

uint64_t sub_100262CCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100262CF0()
{
  return sub_100262C00();
}

uint64_t type metadata accessor for DOCCopyableBarButtonItem()
{
  return objc_opt_self(_TtC5Files24DOCCopyableBarButtonItem);
}

uint64_t sub_100262D18()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100262D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_didConfirmOrCancel) = 1;
    v6 = Strong + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate, &v10, 0, 0);
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v6, v7);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "documentPickerDidCancel:", v5);
      swift_unknownObjectRelease(v9);
    }
    UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, DOCSplitBrowserViewController.didCommitPreview(of:), 0);

  }
}

void sub_100262DF8(uint64_t a1)
{
  uint64_t v1;

  sub_100262D3C(a1, v1);
}

Swift::Void __swiftcall DOCDocumentPickerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  double v3;
  char *v4;
  void *Strong;
  void *v6;
  id v7;
  char v8[24];
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCDocumentPickerViewController();
  objc_msgSendSuper2(&v9, "viewDidDisappear:", a1);
  if ((v1[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_didConfirmOrCancel] & 1) == 0)
  {
    v4 = &v1[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate], v8, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = Strong;
      objc_msgSend(Strong, "documentPickerDidCancel:", v1);
      *(_QWORD *)&v3 = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  v7 = objc_msgSend(v1, "fullDocumentManagerViewController", v3);
  objc_msgSend(v7, "dismissSearch");

}

Swift::Void __swiftcall DOCDocumentPickerViewController.documentBrowser(_:didPickDocumentsAt:)(UIDocumentBrowserViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  sub_100263414((uint64_t)didPickDocumentsAt._rawValue);
}

id DOCDocumentPickerViewController.__allocating_init(configuration:sourceObserver:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), "initWithConfiguration:sourceObserver:", a1, a2);

  return v5;
}

void DOCDocumentPickerViewController.init(configuration:sourceObserver:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCDocumentPickerViewController", 37, "init(configuration:sourceObserver:)", 35, 0);
  __break(1u);
}

void DOCDocumentPickerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCDocumentPickerViewController", 37, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id DOCDocumentPickerViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), "initWithStyle:", a1);
}

void DOCDocumentPickerViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCDocumentPickerViewController", 37, "init(style:)", 12, 0);
  __break(1u);
}

id DOCDocumentPickerViewController.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCDocumentPickerViewController);
}

void sub_100263170(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator);
  v4 = *(uint64_t (**)(__n128))(v1 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator);
  if (v4)
  {
    v5 = v3[1];
    v6 = swift_retain();
    v7 = v4(v6);
    sub_100087534((uint64_t)v4, v5);
    v8 = *v3;
    v9 = v3[1];
    v10 = (uint64_t *)(v7 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator);
    v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator);
    v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator + 8);
    *v10 = *v3;
    v10[1] = v9;
    sub_10008BA00(v8, v9);
    sub_100087534(v11, v12);
    a1[3] = type metadata accessor for DOCCopyableBarButtonItem();
    *a1 = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002632AC()
{
  uint64_t v0;

  return sub_100087534(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCCopyableBarButtonItem_creator + 8));
}

id sub_1002632C0()
{
  return sub_1000DB3A0(type metadata accessor for DOCCopyableBarButtonItem);
}

void DOCDocumentPickerViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v7[4];
  objc_super v8;

  if (objc_msgSend(a1, "forceClearBackground"))
  {
    v3 = objc_msgSend(a1, "copy");
    _bridgeAnyObjectToAny(_:)(v7, v3);
    swift_unknownObjectRelease(v3);
    v4 = sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr);
    swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v4, 7);
    v5 = v6;
    objc_msgSend(v6, "setForceClearBackground:", 0);
    objc_msgSend(v1, "setAppearance:", v5);

  }
  else
  {
    v8.receiver = v1;
    v8.super_class = (Class)type metadata accessor for DOCDocumentPickerViewController();
    objc_msgSendSuper2(&v8, "effectiveAppearanceDidChange:", a1);
  }
}

uint64_t sub_100263414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  Class isa;
  uint64_t v8;
  void *v9;
  _BYTE v11[24];

  v2 = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_didConfirmOrCancel) = 1;
  v3 = v1 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate;
  if (v2)
  {
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate, v11, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
    if (Strong)
    {
      v6 = (void *)Strong;
      type metadata accessor for URL(0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v6, "documentPicker:didConfirmDocumentsAt:", v1, isa);

LABEL_6:
      swift_unknownObjectRelease(v6);
    }
  }
  else
  {
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate, v11, 0, 0);
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v3, v8);
    if (v9)
    {
      v6 = v9;
      objc_msgSend(v9, "documentPickerDidCancel:", v1);
      goto LABEL_6;
    }
  }
  return UIViewController.doc_dismiss(animated:includingPresented:completion:)(1, 1, DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

uint64_t sub_100263514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v2 = v0;
    v3 = sub_10006922C(&qword_100649DF8);
    swift_allocObject(v3, 32, 7);
    v4 = swift_retain();
    v1 = NSNotification.SubscriptionsController.init(observee:)(v4);
    v5 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v2 + 40) = v1;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v1;
}

void sub_100263594()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v1 = (_QWORD *)v0;
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v10 = v1[3];
      else
        v10 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1[3]);
      v11 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(v2);
      if (v11 >= 1)
      {
LABEL_4:
        if (!v1[7])
        {
          v3 = sub_100263514();
          if (qword_100640DB8 != -1)
            swift_once(&qword_100640DB8, sub_100163BD4);
          v4 = qword_1006726B8;
          v5 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
          v6 = (*(uint64_t (**)(uint64_t, __int128 *, id, uint64_t (*)(uint64_t), _QWORD))(*(_QWORD *)v3 + 144))(v4, &v16, v5, sub_100263744, 0);
          v8 = v7;
          swift_release(v3);

          sub_10007EB54((uint64_t)&v16);
          v9 = v1[7];
          v1[6] = v6;
          v1[7] = v8;
          swift_bridgeObjectRelease(v9);
        }
        return;
      }
    }
    else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
      goto LABEL_4;
    }
  }
  v12 = v1[7];
  if (v12)
  {
    v13 = v1[6];
    swift_bridgeObjectRetain(v1[7]);
    v14 = sub_100263514();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v14 + 168))(v13, v12);
    swift_release(v14);
    swift_bridgeObjectRelease(v12);
    v15 = v1[7];
    v1[6] = 0;
    v1[7] = 0;
    swift_bridgeObjectRelease(v15);
  }
}

uint64_t sub_100263744(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD aBlock[3];
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter(aBlock, v8);
  if (!v26)
    return sub_10007EB54((uint64_t)aBlock);
  v11 = sub_10006922C((uint64_t *)&unk_1006424B0);
  result = swift_dynamicCast(&v29, aBlock, (char *)&type metadata for Any + 8, v11, 6);
  if ((result & 1) != 0)
  {
    v13 = v29;
    v14 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain(v14);
    v15 = Array<A>.contains(node:)(v13, v14, v11);
    swift_bridgeObjectRelease(v14);
    if ((v15 & 1) != 0)
    {
      v16 = sub_100086BF0();
      v24 = static OS_dispatch_queue.main.getter(v16);
      v27 = sub_100263D2C;
      v28 = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      v26 = &unk_1005D5598;
      v17 = _Block_copy(aBlock);
      v18 = v28;
      swift_retain();
      v19 = swift_release(v18);
      static DispatchQoS.unspecified.getter(v19);
      aBlock[0] = _swiftEmptyArrayStorage;
      v20 = sub_10008BAAC();
      v21 = sub_10006922C((uint64_t *)&unk_100647540);
      v22 = sub_1000791AC();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v2, v20);
      v23 = (void *)v24;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v17);
      _Block_release(v17);
      swift_unknownObjectRelease(v13);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    else
    {
      return swift_unknownObjectRelease(v13);
    }
  }
  return result;
}

void sub_100263990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  if ((*(_BYTE *)(v1 + 64) & 1) == 0)
  {
    if (*(_BYTE *)(v1 + 32) == 1)
    {
      v16 = sub_100086BF0();
      v27 = v3;
      v26 = static OS_dispatch_queue.main.getter(v16);
      static DispatchTime.now()(v26);
      + infix(_:_:)(v12, 0.1);
      v17 = *(void (**)(char *, uint64_t))(v10 + 8);
      v17(v12, v9);
      v18 = swift_allocObject(&unk_1005D5558, 24, 7);
      swift_weakInit(v18 + 16, v1);
      aBlock[4] = sub_100263D24;
      v30 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D5570;
      v19 = _Block_copy(aBlock);
      swift_release(v30);
      static DispatchQoS.unspecified.getter(v20);
      aBlock[0] = _swiftEmptyArrayStorage;
      v21 = sub_10008BAAC();
      v22 = sub_10006922C((uint64_t *)&unk_100647540);
      v23 = sub_1000791AC();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
      v24 = (void *)v26;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v19);
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
      v17(v15, v9);
    }
    else
    {
      *(_BYTE *)(v1 + 64) = 0;
    }
  }
}

double sub_100263C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 16);
    swift_release(v3);
    if (v4)
    {
      sub_1001DB830();

    }
  }
  swift_beginAccess(v1, &v7, 0, 0);
  v5 = swift_weakLoadStrong(v1);
  if (v5)
  {
    *(_BYTE *)(v5 + 64) = 0;
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100263CA4()
{
  _QWORD *v0;

  swift_unknownObjectWeakDestroy(v0 + 2);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 65, 7);
}

uint64_t _s27UserDefaultsObservedContentCMa()
{
  return objc_opt_self(_TtCC5Files22DOCHierarchyController27UserDefaultsObservedContent);
}

uint64_t sub_100263D00()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100263D24()
{
  uint64_t v0;

  return sub_100263C0C(v0);
}

uint64_t sub_100263D40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v0 = (_QWORD *)DOCUSBRenaming.shared.unsafeMutableAddressor();
  v1 = *v0;
  v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)*v0 + 112);
  v3 = swift_retain(*v0);
  LOBYTE(v2) = v2(v3);
  swift_release(v1);
  return v2 & 1;
}

uint64_t sub_100263D84()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(NSString);

  v1 = objc_msgSend(v0, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  v4 = String._bridgeToObjectiveC()();
  v5 = swift_bridgeObjectRelease(v3);
  v6 = (_QWORD *)DOCUSBFormatting.shared.unsafeMutableAddressor(v5);
  v7 = *v6;
  v8 = *(uint64_t (**)(NSString))(*(_QWORD *)*v6 + 96);
  swift_retain(*v6);
  LOBYTE(v8) = v8(v4);

  swift_release(v7);
  return v8 & 1;
}

id sub_100263E1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCExternalDeviceSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCExternalDeviceSource()
{
  return objc_opt_self(_TtC5Files23DOCExternalDeviceSource);
}

id sub_100263E6C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_100263E9C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void *sub_100263EB0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
  v2 = v1;
  return v1;
}

void sub_100263F3C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD v10[5];
  uint64_t v11;

  v2 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming;
  if ((v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] & 1) != 0)
    goto LABEL_3;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController] = a1;
  swift_retain();
  swift_release(v3);
  v1[v2] = 1;
  v4 = objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_1005D5790, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v6 = swift_allocObject(&unk_1005D57B8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_100267A68;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_10006657C;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10006655C;
  v10[3] = &unk_1005D57D0;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = v1;
  swift_retain();
  objc_msgSend((id)v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 101, 711, 40, 1);
  swift_release(v5);
  swift_release(v6);
  if ((v4 & 1) != 0)
    __break(1u);
  else
LABEL_3:
    sub_100068748();
}

void sub_1002640B0(int a1, char a2)
{
  sub_10026E65C(a1, a2);
  sub_100068748();
}

BOOL sub_1002640C4(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_100266EFC((double *)v8, (double *)v9);
}

BOOL sub_10026411C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_100264158(void *__src, const void *a2)
{
  unsigned __int8 v4[272];
  unsigned __int8 __dst[272];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_10007BEB4(v4, __dst) & 1;
}

void sub_1002641AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, &v6, 0, 0);
    if (*v5)
      objc_msgSend(*(id *)(*v5 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress), "cancel");

  }
}

id sub_100264240()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel), "invalidateIntrinsicContentSize");
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel), "invalidateIntrinsicContentSize");
}

double sub_100264300()
{
  double result;

  result = 8.0;
  xmmword_100649E30 = xmmword_1004DE9D0;
  *(_OWORD *)&qword_100649E40 = xmmword_1004DE9D0;
  return result;
}

void sub_100264318()
{
  qword_100649E50 = 0x4010000000000000;
}

double sub_100264328(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewObserver) = 0;

  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint) = 0;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
  if (v6)
  {
    v7 = v6;
    v9 = sub_100253CE8((uint64_t)v7, v8);

    objc_msgSend(v9, "removeFromSuperview");
  }
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView), "setAlpha:", 1.0);
  return sub_10026E97C(a1 & 1);
}

void sub_100264464()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = v0;
  sub_10026EC50();
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel];
    v4 = v2;
    v5 = objc_msgSend(v3, "font");
    objc_msgSend(v4, "setFont:", v5);

    v7 = v4;
    objc_msgSend(v7, "setTextAlignment:", objc_msgSend(v3, "textAlignment"));

    *((_BYTE *)v7 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) = 0;
    sub_100253180();
    v6 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint];
    if (v6)
      objc_msgSend(v6, "setActive:", 0);
    sub_100264650(v7);
    objc_msgSend(v3, "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_sizeLabel], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_kindLabel], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_dateLabel], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusView], "setAlpha:", 0.0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_tagView], "setAlpha:", 0.0);
    objc_msgSend(v1, "layoutBelowIfNeeded");
    objc_msgSend(v7, "becomeFirstResponder");

  }
}

void sub_100264650(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  char v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  char v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  double v42;
  double v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double Height;
  double v65;
  double v66;
  double v67;
  void *v68;
  unint64_t v69;
  Class isa;
  id v71;
  _BYTE v72[128];
  uint64_t v73[10];
  char v74;
  char v75[24];
  unint64_t v76;
  CGRect v77;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = a1;
  v5 = a1;

  v6 = *(_QWORD *)&v2[v3];
  if (v6)
  {
    v7 = v6 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate;
    *(_QWORD *)(v7 + 8) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign(v7, v2);
  }
  v73[0] = (uint64_t)v5;
  KeyPath = swift_getKeyPath(&unk_1004DEB90);
  v9 = swift_allocObject(&unk_1005D5718, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_1005D5740, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v5;
  v11 = v5;
  v12 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100267A10, v10, &protocol witness table for NSObject);
  swift_release(v10);
  swift_release(KeyPath);
  v13 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewObserver];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewObserver] = v12;

  v14 = objc_msgSend(v2, "addSubview:", v11);
  v76 = (unint64_t)_swiftEmptyArrayStorage;
  v16 = sub_100253CE8((uint64_t)v14, v15);
  v17 = objc_msgSend(v2, "contentView");
  objc_msgSend(v17, "insertSubview:aboveSubview:", v16, *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView]);

  v18 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent], v75, 0, 0);
  if (*(_QWORD *)v18)
  {
    sub_100070EDC(*(_QWORD *)v18 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v72, &qword_100658670);
    sub_100070EDC((uint64_t)v72, (uint64_t)v73, &qword_100658670);
    if (sub_1000A849C(v73) == 1)
    {
      __break(1u);
      return;
    }
    v19 = v74;
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_msgSend(v16, "centerYAnchor");
  v21 = objc_msgSend(v2, "contentView");
  v22 = objc_msgSend(v21, "centerYAnchor");

  v23 = objc_msgSend(v20, "constraintEqualToAnchor:", v22);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
  v26 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v25 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v26 >= v25 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
  v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
  specialized Array._endMutation()(v27);
  v28 = objc_msgSend(v2, "traitCollection");
  v29 = objc_msgSend(v28, "userInterfaceIdiom");

  if (v29 == (id)6)
    v30 = v19;
  else
    v30 = 1;
  v31 = objc_msgSend(v16, "trailingAnchor");
  if ((v30 & 1) != 0)
  {
    v32 = objc_msgSend(v2, "layoutMarginsGuide");
    v33 = objc_msgSend(v32, "trailingAnchor");

    v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
  }
  else
  {
    v35 = objc_msgSend(v2, "contentView");
    v33 = objc_msgSend(v35, "trailingAnchor");

    v34 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v33, -20.0);
  }
  v36 = v34;

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v38 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v36);
  specialized Array._endMutation()(v40);
  v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v41, "scale");
  v43 = v42;

  v44 = objc_msgSend(v11, "heightAnchor");
  v45 = objc_msgSend(v44, "constraintEqualToConstant:", 0.0);

  v46 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint;
  v47 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint] = v45;
  v48 = v45;

  v49 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v50 = swift_allocObject(v49, 64, 7);
  *(_OWORD *)(v50 + 16) = xmmword_1004DAC10;
  *(_QWORD *)(v50 + 32) = v48;
  v71 = v48;
  v51 = objc_msgSend(v11, "centerYAnchor");
  v52 = objc_msgSend(v2, "centerYAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, 1.0 / v43);

  *(_QWORD *)(v50 + 40) = v53;
  v54 = objc_msgSend(v11, "leadingAnchor");
  v55 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel], "leadingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, -5.0);

  *(_QWORD *)(v50 + 48) = v56;
  v57 = objc_msgSend(v11, "trailingAnchor");
  v58 = objc_msgSend(v16, "leadingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, -5.0);

  *(_QWORD *)(v50 + 56) = v59;
  v73[0] = v50;
  specialized Array._endMutation()(v60);
  v61 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewConstraints;
  v62 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewConstraints];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewConstraints] = v73[0];
  swift_bridgeObjectRelease(v62);
  v63 = swift_bridgeObjectRetain(*(_QWORD *)&v2[v61]);
  sub_1000887D0(v63);
  if (qword_100640EC0 != -1)
    swift_once(&qword_100640EC0, sub_100264300);
  objc_msgSend(v11, "setTextContainerInset:", xmmword_100649E30, *(double *)&qword_100649E40, unk_100649E48);
  objc_msgSend(v2, "bounds");
  Height = CGRectGetHeight(v77);
  if (qword_100640EC8 != -1)
    swift_once(&qword_100640EC8, sub_100264318);
  v65 = Height - (*(double *)&qword_100649E50 + *(double *)&qword_100649E50);
  objc_msgSend(v11, "contentSize");
  if (v66 >= v65)
    v67 = v65;
  else
    v67 = v66;
  objc_msgSend(*(id *)&v2[v46], "setConstant:", v67);
  v68 = (void *)objc_opt_self(NSLayoutConstraint);
  v69 = v76;
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v68, "activateConstraints:", isa, swift_bridgeObjectRelease(v69).n128_f64[0]);

}

void sub_100264DC4(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  double Height;
  double v10;
  double v11;
  double v12;
  double v13;
  _BYTE v14[24];
  CGRect v15;

  v5 = *a1;
  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView))
    {
      sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
      if ((static NSObject.== infix(_:_:)(a4, v5) & 1) != 0)
      {
        objc_msgSend(v8, "bounds");
        Height = CGRectGetHeight(v15);
        if (qword_100640EC8 != -1)
        {
          v13 = Height;
          swift_once(&qword_100640EC8, sub_100264318);
          Height = v13;
        }
        v10 = Height - (*(double *)&qword_100649E50 + *(double *)&qword_100649E50);
        objc_msgSend(a4, "contentSize", *(_QWORD *)&v13);
        if (v11 >= v10)
          v12 = v10;
        else
          v12 = v11;
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint], "setConstant:", v12);
      }
    }

  }
}

void sub_100264EF0(uint64_t a1, void *a2, uint64_t a3, Class isa, uint64_t a5)
{
  char *v5;
  NSString v9;
  void *v10;
  double Height;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  objc_class *v22;
  uint64_t v23;
  id v24;
  objc_super v25;
  _QWORD v26[3];
  uint64_t v27;
  CGRect v28;

  v9 = a2;
  if (!a2)
  {
LABEL_13:
    sub_1000271D4(a3, (uint64_t)v26, &qword_100642730);
    v15 = v27;
    if (v27)
    {
      v16 = sub_10007E7A0(v26, v27);
      v17 = *(_QWORD *)(v15 - 8);
      v18 = __chkstk_darwin(v16);
      v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v17 + 16))(v20, v18);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v15);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      sub_100068588(v26);
      if (!isa)
      {
LABEL_16:
        v22 = (objc_class *)type metadata accessor for DOCItemCollectionListCell(0);
        v25.receiver = v5;
        v25.super_class = v22;
        objc_msgSendSuper2(&v25, "observeValueForKeyPath:ofObject:change:context:", v9, v21, isa, a5);

        swift_unknownObjectRelease(v21);
        return;
      }
    }
    else
    {
      v21 = 0;
      if (!isa)
        goto LABEL_16;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10005A360(&qword_100641860, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1004D6948);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_16;
  }
  if ((a1 != 0x53746E65746E6F63 || a2 != (void *)0xEB00000000657A69)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x53746E65746E6F63, 0xEB00000000657A69, 0) & 1) == 0
    || (v10 = *(void **)&v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView]) == 0)
  {
    v9 = String._bridgeToObjectiveC()();
    goto LABEL_13;
  }
  v24 = v10;
  objc_msgSend(v5, "bounds");
  Height = CGRectGetHeight(v28);
  if (qword_100640EC8 != -1)
    swift_once(&qword_100640EC8, sub_100264318);
  v12 = Height - (*(double *)&qword_100649E50 + *(double *)&qword_100649E50);
  objc_msgSend(v24, "contentSize");
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewHeightConstraint], "setConstant:", v14);

}

void sub_1002652DC()
{
  uint64_t v0;
  _QWORD __dst[35];

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints));
  memcpy(__dst, (const void *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics), 0x110uLL);
  sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusViewAccessory, &qword_100645FB8);
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_progressStopButtonAccessory, &qword_100645FB8);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_renameTextViewConstraints));
}

id sub_1002654C4()
{
  return sub_1001405E0(0, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionListCell);
}

uint64_t sub_1002656C8()
{
  return type metadata accessor for DOCItemCollectionListCell(0);
}

id sub_1002656D0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView), "leadingAnchor");
}

id sub_1002656FC(double a1)
{
  uint64_t v1;

  LODWORD(a1) = 1055286886;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel), "_setHyphenationFactor:", a1);
}

id sub_100265720()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView), "addArrangedSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_titleStackView));
}

_QWORD *sub_100265744(double *a1)
{
  uint64_t v1;
  int v2;
  UIFontTextStyle v3;
  NSString *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE v18[24];
  _QWORD __dst[34];
  uint64_t v20[16];

  sub_1000398F0(a1);
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics), sizeof(__dst));
  sub_100070EDC((uint64_t)&__dst[1], (uint64_t)v20, &qword_100658670);
  v2 = sub_1000A849C(v20);
  v3 = (UIFontTextStyle)v20[9];
  if (v2 == 1)
    v3 = UIFontTextStyleBody;
  v4 = v3;
  v5 = (void *)objc_opt_self(UIFont);
  sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  v6 = objc_msgSend(v5, "preferredFontForTextStyle:", v4);
  objc_msgSend(v6, "capHeight");
  v8 = v7;

  v9 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize;
  *(double *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize) = fmax(v8 + 8.0, 27.0);
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints, v18, 0, 0);
  v11 = *v10;
  if (!((unint64_t)v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain_n(v11, 2);
    if (v12)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease_n(v11, 2);

    return sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  }
  if (v11 < 0)
    v17 = v11;
  else
    v17 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v11, 2);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v17);
  v12 = (uint64_t)result;
  if (!result)
    goto LABEL_15;
LABEL_5:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v11);
      else
        v15 = *(id *)(v11 + 8 * i + 32);
      v16 = v15;
      objc_msgSend(v15, "setConstant:", *(double *)(v1 + v9));

    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void *sub_100265940@<X0>(_BYTE *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[18];
  char v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[128];
  _OWORD __src[17];

  sub_10007BCEC(a1, &v15);
  v3 = v18;
  v4 = v19;
  v5 = v20;
  v13 = v22;
  v14 = v21;
  v6 = v23;
  v7 = v24;
  v8 = v25;
  v9 = v16[17];
  v10 = v17;
  v11 = v16[16];
  sub_100070EDC((uint64_t)v16, (uint64_t)v26, &qword_100658670);
  LOBYTE(__src[0]) = v15;
  sub_100070EDC((uint64_t)v26, (uint64_t)__src + 8, &qword_100658670);
  *((_QWORD *)&__src[8] + 1) = v11;
  *(_QWORD *)&__src[9] = v9;
  BYTE8(__src[9]) = v10;
  *(_QWORD *)&__src[10] = 0x4020000000000000;
  *((_QWORD *)&__src[10] + 1) = v3;
  *(_QWORD *)&__src[11] = v4;
  *((double *)&__src[11] + 1) = v5 + 4.0;
  __src[12] = v14;
  __src[13] = v13;
  *(_QWORD *)&__src[14] = v6;
  *((_QWORD *)&__src[14] + 1) = v7;
  __src[15] = xmmword_1004DE9E0;
  *(_QWORD *)&__src[16] = 0x4010000000000000;
  *((_QWORD *)&__src[16] + 1) = v8;
  sub_10007B4E0(&v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  return memcpy(a2, __src, 0x110uLL);
}

void sub_100265A70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Class isa;
  int v24;
  UIFontTextStyle v25;
  NSString *v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  _QWORD v41[3];
  _QWORD __dst[34];
  uint64_t v43[17];

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_horizontalStackView);
  v5 = objc_msgSend(v4, "topAnchor");
  v6 = objc_msgSend(a1, "topAnchor");
  v7 = objc_msgSend(v5, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:", v6, 1.0);

  v8 = objc_msgSend(v4, "topAnchor");
  v9 = objc_msgSend(a1, "topAnchor");
  v10 = objc_msgSend(v8, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:", v9, 1.0);

  v11 = objc_msgSend(v4, "centerYAnchor");
  v12 = objc_msgSend(a1, "centerYAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  type metadata accessor for UILayoutPriority(0);
  v15 = v14;
  LODWORD(v43[0]) = 1132068864;
  LODWORD(v41[0]) = 1092616192;
  v16 = sub_10005A360((unint64_t *)&unk_10064A060, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(__dst, v43, v41, v15, v16);
  LODWORD(v17) = __dst[0];
  objc_msgSend(v13, "setPriority:", v17);
  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v20 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9720;
  *(_QWORD *)(v20 + 32) = v7;
  *(_QWORD *)(v20 + 40) = v10;
  *(_QWORD *)(v20 + 48) = v13;
  __dst[0] = v20;
  specialized Array._endMutation()(v20);
  v21 = __dst[0];
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v40 = v7;
  v39 = v10;
  v22 = v13;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  memcpy(__dst, (const void *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics), sizeof(__dst));
  sub_100070EDC((uint64_t)&__dst[1], (uint64_t)v43, &qword_100658670);
  v24 = sub_1000A849C(v43);
  v25 = (UIFontTextStyle)v43[9];
  if (v24 == 1)
    v25 = UIFontTextStyleBody;
  v26 = v25;
  v27 = (void *)objc_opt_self(UIFont);
  sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  v28 = objc_msgSend(v27, "preferredFontForTextStyle:", v26);
  objc_msgSend(v28, "capHeight");
  v30 = v29;

  v31 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize;
  *(double *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize) = fmax(v30 + 8.0, 27.0);
  v32 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints, v41, 0, 0);
  v33 = *v32;
  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v33, 2);
    if (v34)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease_n(v33, 2);

    sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
    return;
  }
  if (v33 < 0)
    v38 = v33;
  else
    v38 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v33, 2);
  v34 = _CocoaArrayWrapper.endIndex.getter(v38);
  if (!v34)
    goto LABEL_15;
LABEL_5:
  if (v34 >= 1)
  {
    for (i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
      else
        v36 = *(id *)(v33 + 8 * i + 32);
      v37 = v36;
      objc_msgSend(v36, "setConstant:", *(double *)(v2 + v31), v39, v40, v41[0]);

    }
    goto LABEL_15;
  }
  __break(1u);
}

_QWORD *sub_100265EB8()
{
  uint64_t v0;
  int v1;
  UIFontTextStyle v2;
  NSString *v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t i;
  id v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[24];
  _QWORD __dst[34];
  uint64_t v19[16];

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel), "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel), "invalidateIntrinsicContentSize");
  memcpy(__dst, (const void *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics), sizeof(__dst));
  sub_100070EDC((uint64_t)&__dst[1], (uint64_t)v19, &qword_100658670);
  v1 = sub_1000A849C(v19);
  v2 = (UIFontTextStyle)v19[9];
  if (v1 == 1)
    v2 = UIFontTextStyleBody;
  v3 = v2;
  v4 = (void *)objc_opt_self(UIFont);
  sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B540);
  v5 = objc_msgSend(v4, "preferredFontForTextStyle:", v3);
  objc_msgSend(v5, "capHeight");
  v7 = v6;

  v8 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize;
  *(double *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSize) = fmax(v7 + 8.0, 27.0);
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_statusSizeMatchingConstraints, v17, 0, 0);
  v10 = *v9;
  if (!((unint64_t)v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (_QWORD *)swift_bridgeObjectRetain_n(v10, 2);
    if (v11)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease_n(v10, 2);

    return sub_10007B4E0(__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10007B580);
  }
  if (v10 < 0)
    v16 = v10;
  else
    v16 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v10, 2);
  result = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v16);
  v11 = (uint64_t)result;
  if (!result)
    goto LABEL_15;
LABEL_5:
  if (v11 >= 1)
  {
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      else
        v14 = *(id *)(v10 + 8 * i + 32);
      v15 = v14;
      objc_msgSend(v14, "setConstant:", *(double *)(v0 + v8));

    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1002660DC()
{
  uint64_t v0;
  void **v1;
  char *v2;
  void *v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v15, 0, 0);
  v2 = (char *)*v1;
  if (v2)
  {
    v3 = *(void **)&v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
    if (v3)
    {
      v4 = v2;
      if (objc_msgSend(v3, "horizontalSizeClass") == (id)1)
      {
        v5 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle];
        v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle + 8];
        if (!v6)
        {
          v7 = sub_1004B00A8(10, (void *)0xE100000000000000);
          v8 = v5[1];
          *v5 = v7;
          v5[1] = v9;
          swift_bridgeObjectRelease(v8);
          v6 = v5[1];
          if (!v6)
          {
            __break(1u);
            return;
          }
        }
LABEL_11:
        swift_bridgeObjectRetain(v6);

        return;
      }
    }
    else
    {
      v10 = v2;
    }
    v11 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle];
    v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle + 8];
    if (!v6)
    {
      v12 = sub_1004B00A8(2108704, (void *)0xE300000000000000);
      v13 = v11[1];
      *v11 = v12;
      v11[1] = v14;
      swift_bridgeObjectRelease(v13);
      v6 = v11[1];
      if (!v6)
      {
        __break(1u);
        return;
      }
    }
    goto LABEL_11;
  }
}

uint64_t sub_10026620C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1002660DC();
  v3 = v2;
  v5 = String.count.getter(v4, v2);
  swift_bridgeObjectRelease(v3);
  if (v5 < 1)
    return (a1 >> 2) & 1;
  else
    return 0;
}

void sub_100266254()
{
  sub_1004AECDC();
}

double sub_100266278()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  double v3;
  void *v4;
  char *v5;
  double Height;
  double v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  _BYTE v19[24];
  CGRect v20;
  CGRect v21;

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  *(_QWORD *)&v3 = swift_beginAccess(v2, v19, 0, 0).n128_u64[0];
  if (*v2)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
    v5 = (char *)*v2;
    objc_msgSend(v4, "frame");
    Height = CGRectGetHeight(v20);
    objc_msgSend(v4, "frame");
    v7 = CGRectGetHeight(v21);
    sub_10006DD34();
    v8 = *(void **)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    if (v8)
    {
      v9 = objc_msgSend(v8, "thumbnail");
      objc_msgSend(v9, "size");
      v11 = v10;
      objc_msgSend(v9, "size");
      v13 = v12;

      v7 = v7 * (v11 / v13);
    }
    objc_msgSend(v4, "convertRect:toCoordinateSpace:", v1, 0.0, 0.0, v7, Height);
    v15 = v14;

  }
  else
  {
    v16 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    objc_msgSend(v16, "bounds", v3);
    objc_msgSend(v16, "convertRect:toCoordinateSpace:", v1);
    return v17;
  }
  return v15;
}

void sub_100266410()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  int v6;
  _BYTE v7[24];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v2, v7, 0, 0);
  if (!*v2)
    goto LABEL_8;
  v3 = (char *)*v2;
  sub_10006DD34();
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
  if (v4)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    swift_unknownObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail]);
    objc_msgSend(v5, "updateImage:addDecoration:", v4, (unint64_t)sub_10006DF10() & 1);
    swift_unknownObjectRelease(v4);
LABEL_7:

LABEL_8:
    sub_100072D74();
    return;
  }
  v6 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
  if (v6 != 2)
  {
    if ((v6 & 1) == 0)
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "setThumbnail:", 0);
    goto LABEL_7;
  }
  __break(1u);
}

id sub_100266510()
{
  return sub_1001405E0(0, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionLargeTextListCell);
}

uint64_t sub_100266520()
{
  return type metadata accessor for DOCItemCollectionLargeTextListCell(0);
}

void sub_100266528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *Strong;
  char *v7;
  id v8;
  double v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_targetCell, v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "layer");
    v18 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
    LODWORD(v9) = 1045220557;
    objc_msgSend(v18, "setOpacity:", v9);
    objc_msgSend(v18, "setCornerCurve:", kCACornerCurveContinuous);
    objc_msgSend(v18, "setCornerRadius:", *(double *)&v7[OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_cellLayoutMetrics + 136]);
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v11 = objc_msgSend(v10, "CGColor");

    objc_msgSend(v18, "setBackgroundColor:", v11);
    objc_msgSend(v8, "addSublayer:", v18);
    swift_unknownObjectWeakAssign(v0 + OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_blinkLayer, v18);

  }
  else
  {
    v12 = Logger.UI.unsafeMutableAddressor(0);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Cannot prepare DOCItemCollectionListCellSpringLoadedInteractionEffect because targetCell is nil", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_100266800(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCItemCollectionListCellSpringLoadedInteractionEffect);
}

void destroy for DOCItemCollectionListCell.LayoutMetrics(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 8);
  if (v1)
  {

  }
}

uint64_t initializeWithCopy for DOCItemCollectionListCell.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  void *v7;
  __int128 v8;
  id v9;
  id v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  if (v4)
  {
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    v7 = *(void **)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v7;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v8 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v8;
    v9 = v4;
    v10 = v5;
    v11 = v7;
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v12;
    v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    v15 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v15;
  }
  v16 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v16;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v17 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v17;
  v18 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v18;
  v19 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionListCell.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  void *v5;
  void *v6;
  __int128 *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  __int128 v16;
  void *v17;
  __int128 v18;
  id v19;
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 8);
  v7 = (__int128 *)(a2 + 8);
  v6 = *(void **)(a2 + 8);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = v6;
      v8 = v6;

      v9 = *(void **)(a2 + 16);
      v10 = *(void **)(a1 + 16);
      *(_QWORD *)(a1 + 16) = v9;
      v11 = v9;

      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v12 = *(void **)(a2 + 80);
      v13 = *(void **)(a1 + 80);
      *(_QWORD *)(a1 + 80) = v12;
      v14 = v12;

      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    }
    else
    {
      sub_100266BA0((id *)(a1 + 8));
      v22 = v7[3];
      v24 = *v7;
      v23 = v7[1];
      v4[2] = v7[2];
      v4[3] = v22;
      *v4 = v24;
      v4[1] = v23;
      v25 = v7[7];
      v27 = v7[4];
      v26 = v7[5];
      v4[6] = v7[6];
      v4[7] = v25;
      v4[4] = v27;
      v4[5] = v26;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 8) = v6;
    v15 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v15;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v16 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v16;
    v17 = *(void **)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v17;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v18 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v18;
    v19 = v6;
    v20 = v15;
    v21 = v17;
  }
  else
  {
    v28 = *v7;
    v29 = *(_OWORD *)(a2 + 24);
    v30 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v30;
    *v4 = v28;
    *(_OWORD *)(a1 + 24) = v29;
    v31 = *(_OWORD *)(a2 + 72);
    v32 = *(_OWORD *)(a2 + 88);
    v33 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v33;
    *(_OWORD *)(a1 + 72) = v31;
    *(_OWORD *)(a1 + 88) = v32;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v34 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v34;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  return a1;
}

id *sub_100266BA0(id *a1)
{
  destroy for DOCItemCollectionLayoutTraits.ListItemTraits(a1);
  return a1;
}

void *initializeWithTake for DOCItemCollectionListCell.LayoutMetrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for DOCItemCollectionListCell.LayoutMetrics(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  void *v8;
  __int128 v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = (_OWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (!v4)
    goto LABEL_5;
  if (!v6)
  {
    sub_100266BA0((id *)(a1 + 8));
LABEL_5:
    v12 = v7[5];
    v5[4] = v7[4];
    v5[5] = v12;
    v13 = v7[7];
    v5[6] = v7[6];
    v5[7] = v13;
    v14 = v7[1];
    *v5 = *v7;
    v5[1] = v14;
    v15 = v7[3];
    v5[2] = v7[2];
    v5[3] = v15;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  v10 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
LABEL_6:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v16 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v16;
  v17 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v17;
  v18 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v18;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionListCell.LayoutMetrics(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 272))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionListCell.LayoutMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionListCell.LayoutMetrics()
{
  return &type metadata for DOCItemCollectionListCell.LayoutMetrics;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionListCell.StatusLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100266E34 + 4 * byte_1004DE9F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100266E68 + 4 * byte_1004DE9F0[v4]))();
}

uint64_t sub_100266E68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100266E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100266E78);
  return result;
}

uint64_t sub_100266E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100266E8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100266E90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100266E98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionListCell.StatusLocation()
{
  return &type metadata for DOCItemCollectionListCell.StatusLocation;
}

unint64_t sub_100266EB8()
{
  unint64_t result;

  result = qword_10064A050;
  if (!qword_10064A050)
  {
    result = swift_getWitnessTable(&unk_1004DEB34, &type metadata for DOCItemCollectionListCell.StatusLocation);
    atomic_store(result, (unint64_t *)&qword_10064A050);
  }
  return result;
}

BOOL sub_100266EFC(double *a1, double *a2)
{
  BOOL v2;
  BOOL v3;
  _BOOL8 result;

  result = 0;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    v2 = a1[3] == a2[3] && a1[4] == a2[4];
    v3 = v2 && a1[5] == a2[5];
    if (v3 && a1[6] == a2[6] && a1[7] == a2[7] && a1[8] == a2[8] && a1[9] == a2[9])
      return 1;
  }
  return result;
}

uint64_t sub_100266F9C(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_86;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (!v3)
  {
LABEL_90:
    swift_bridgeObjectRelease(v2);
    v55 = *a1;
    if (!((unint64_t)*a1 >> 62))
      return *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v55 < 0)
      v57 = *a1;
    else
      v57 = v55 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a1);
    v58 = _CocoaArrayWrapper.endIndex.getter(v57);
    swift_bridgeObjectRelease(v55);
    return v58;
  }
LABEL_3:
  v4 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v6 = (uint64_t)v5;
    v7 = objc_msgSend(v5, "firstItem");
    if (v7)
    {
      v8 = v7;
      v9 = objc_opt_self(UIView);
      v10 = swift_dynamicCastObjCClass(v8, v9);
      if (v10)
      {
        v11 = v10;
        sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
        v12 = a2;
        swift_unknownObjectRetain(v8);
        LOBYTE(v11) = static NSObject.== infix(_:_:)(v11, v12);
        swift_unknownObjectRelease_n(v8, 2);

        if ((v11 & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        swift_unknownObjectRelease(v8);
      }
    }
    v13 = objc_msgSend((id)v6, "secondItem");
    if (!v13)
    {

      goto LABEL_17;
    }
    v14 = v13;
    v15 = objc_opt_self(UIView);
    v16 = swift_dynamicCastObjCClass(v14, v15);
    if (!v16)
      break;
    v17 = v16;
    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v18 = a2;
    swift_unknownObjectRetain(v14);
    LOBYTE(v17) = static NSObject.== infix(_:_:)(v17, v18);

    swift_unknownObjectRelease_n(v14, 2);
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRelease(v2);
      goto LABEL_24;
    }
LABEL_17:
    v19 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_22;
LABEL_18:
    ++v4;
    if (v19 == v3)
      goto LABEL_90;
  }

  swift_unknownObjectRelease(v14);
  v19 = v4 + 1;
  if (!__OFADD__(v4, 1))
    goto LABEL_18;
LABEL_22:
  __break(1u);
LABEL_23:
  swift_bridgeObjectRelease(v2);

LABEL_24:
  v20 = v4 + 1;
  v2 = (uint64_t)a1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_98;
  }
  v6 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_98:
    if (v6 < 0)
      v59 = v6;
    else
      v59 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v60 = _CocoaArrayWrapper.endIndex.getter(v59);
    swift_bridgeObjectRelease(v6);
    if (v20 == v60)
      return v4;
LABEL_27:
    for (i = v4 + 5; ; ++i)
    {
      v22 = i - 4;
      v23 = *(_QWORD *)v2;
      if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
      {
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v23);
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          if (v2 < 0)
            v54 = v2;
          else
            v54 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v54);
          if (!v3)
            goto LABEL_90;
          goto LABEL_3;
        }
        if (v22 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_77;
        v24 = *(id *)(v23 + 8 * i);
      }
      v25 = v24;
      v26 = objc_msgSend(v24, "firstItem");
      if (v26)
      {
        v27 = v26;
        v28 = objc_opt_self(UIView);
        v29 = swift_dynamicCastObjCClass(v27, v28);
        if (v29)
        {
          v30 = v29;
          sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
          v31 = a2;
          swift_unknownObjectRetain(v27);
          LOBYTE(v30) = static NSObject.== infix(_:_:)(v30, v31);
          swift_unknownObjectRelease_n(v27, 2);

          v2 = (uint64_t)a1;
          if ((v30 & 1) != 0)
          {

            goto LABEL_64;
          }
        }
        else
        {
          swift_unknownObjectRelease(v27);
        }
      }
      v32 = objc_msgSend(v25, "secondItem");
      if (v32)
      {
        v33 = v32;
        v34 = objc_opt_self(UIView);
        v35 = swift_dynamicCastObjCClass(v33, v34);
        if (!v35)
        {

          swift_unknownObjectRelease(v33);
          if (v22 == v4)
            goto LABEL_63;
          goto LABEL_45;
        }
        v36 = v35;
        sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
        v37 = a2;
        swift_unknownObjectRetain(v33);
        v2 = (uint64_t)a1;
        LOBYTE(v36) = static NSObject.== infix(_:_:)(v36, v37);

        swift_unknownObjectRelease_n(v33, 2);
        if ((v36 & 1) != 0)
          goto LABEL_64;
      }
      else
      {

      }
      if (v22 == v4)
        goto LABEL_63;
LABEL_45:
      v38 = *(_QWORD *)v2;
      if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
      {
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)v2);
        v38 = *(_QWORD *)v2;
        if ((*(_QWORD *)v2 & 0xC000000000000001) == 0)
          goto LABEL_49;
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_80;
        if (v4 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_81;
        v39 = *(id *)(v38 + 8 * v4 + 32);
        if ((v38 & 0xC000000000000001) == 0)
        {
LABEL_49:
          if ((v22 & 0x8000000000000000) != 0)
            goto LABEL_82;
          if (v22 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_83;
          v40 = *(id *)(v38 + 8 * i);
          goto LABEL_52;
        }
      }
      v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v38);
      v38 = *(_QWORD *)v2;
LABEL_52:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v38);
      *(_QWORD *)v2 = v38;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v38 < 0 || (v38 & 0x4000000000000000) != 0)
      {
        v38 = sub_1000818A0(v38);
        *(_QWORD *)v2 = v38;
      }
      v42 = *(void **)((v38 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
      *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v40;

      specialized Array._endMutation()(v43);
      v44 = *(_QWORD *)v2;
      v45 = swift_isUniquelyReferenced_nonNull_bridgeObject(*(_QWORD *)v2);
      *(_QWORD *)v2 = v44;
      if (!v45 || v44 < 0 || (v44 & 0x4000000000000000) != 0)
      {
        v44 = sub_1000818A0(v44);
        *(_QWORD *)v2 = v44;
      }
      if ((v22 & 0x8000000000000000) != 0)
        goto LABEL_84;
      v46 = v44 & 0xFFFFFFFFFFFFFF8;
      if (v22 >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v47 = *(void **)(v46 + 8 * i);
      *(_QWORD *)(v46 + 8 * i) = v39;

      specialized Array._endMutation()(v48);
LABEL_63:
      if (__OFADD__(v4++, 1))
        goto LABEL_79;
LABEL_64:
      v50 = i - 3;
      if (__OFADD__(v22, 1))
        goto LABEL_78;
      v51 = *(_QWORD *)v2;
      if (*(_QWORD *)v2 >> 62)
      {
        if (v51 < 0)
          v53 = *(_QWORD *)v2;
        else
          v53 = v51 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)v2);
        v52 = _CocoaArrayWrapper.endIndex.getter(v53);
        swift_bridgeObjectRelease(v51);
      }
      else
      {
        v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v50 == v52)
        return v4;
    }
  }
  if (v20 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_27;
  return v4;
}

void sub_1002675F4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  NSString v26;
  id v27;
  Class isa;
  double v29;
  uint64_t v30;
  void *v31;
  NSString v32;
  uint64_t v33;
  id Strong;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_targetCell);
  if (Strong)
  {
    v7 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v7, "setDisableActions:", 1);
    v8 = v1 + OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_blinkLayer;
    v9 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files54DOCItemCollectionListCellSpringLoadedInteractionEffect_blinkLayer);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = objc_msgSend(Strong, "layer");
      objc_msgSend(v11, "bounds");
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;

      objc_msgSend(v10, "setFrame:", v13, v15, v17, v19);
    }
    objc_msgSend(v7, "setDisableActions:", 0);
    switch((unint64_t)objc_msgSend(a1, "state"))
    {
      case 0uLL:
      case 3uLL:
        v20 = (void *)swift_unknownObjectWeakLoadStrong(v8);
        objc_msgSend(v20, "removeFromSuperlayer");

        swift_unknownObjectWeakAssign(v8, 0);
        break;
      case 1uLL:
        sub_100266528();
        break;
      case 2uLL:
        v26 = String._bridgeToObjectiveC()();
        v27 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v26);

        isa = Double._bridgeToObjectiveC()().super.super.isa;
        objc_msgSend(v27, "setToValue:", isa);

        objc_msgSend(v27, "setDuration:", 0.1);
        objc_msgSend(v27, "setAutoreverses:", 1);
        LODWORD(v29) = 2.0;
        objc_msgSend(v27, "setRepeatCount:", v29);
        objc_msgSend(v27, "setRemovedOnCompletion:", 1);
        v30 = swift_unknownObjectWeakLoadStrong(v8);
        if (v30)
        {
          v31 = (void *)v30;
          v32 = String._bridgeToObjectiveC()();
          objc_msgSend(v31, "addAnimation:forKey:", v27, v32);

        }
        break;
      default:
        break;
    }

  }
  else
  {
    v21 = Logger.UI.unsafeMutableAddressor(0);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v21, v3);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Missing targetCell in DOCItemCollectionListCellSpringLoadedInteractionEffect, ignoring", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

id sub_10026797C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1002679AC(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

uint64_t sub_1002679C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002679E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100267A10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100264DC4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_100267A18()
{
  uint64_t v0;

  sub_1002641AC(v0);
}

uint64_t sub_100267A20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100267A44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100267A68()
{
  uint64_t v0;

  sub_1002718D8(*(_QWORD **)(v0 + 16));
}

uint64_t sub_100267A70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for DOCItemCollectionListCell.LayoutMetrics.vertical()
{
  return &type metadata for DOCItemCollectionListCell.LayoutMetrics.vertical;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionListCell.LayoutMetrics.horizontal(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionListCell.LayoutMetrics.horizontal(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionListCell.LayoutMetrics.horizontal()
{
  return &type metadata for DOCItemCollectionListCell.LayoutMetrics.horizontal;
}

uint64_t sub_100267B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v2 = v0;
    v3 = sub_10006922C(&qword_10064A608);
    swift_allocObject(v3, 32, 7);
    v4 = swift_retain();
    v1 = NSNotification.SubscriptionsController.init(observee:)(v4);
    v5 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v2 + 48) = v1;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v1;
}

uint64_t sub_100267B80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v9, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v6 = result;
    v7 = sub_10006922C(&qword_10064EBF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_100267FB4(0, (uint64_t)v4);
    swift_release(v6);
    return sub_10007C720((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
  }
  return result;
}

uint64_t sub_100267C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v9, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v6 = result;
    v7 = sub_10006922C(&qword_10064EBF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    sub_100267FB4(1, (uint64_t)v4);
    swift_release(v6);
    return sub_10007C720((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
  }
  return result;
}

uint64_t sub_100267D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    goto LABEL_5;
  v6 = Strong;
  v7 = swift_unknownObjectWeakLoadStrong(Strong + 16, v5);
  if (!v7)
  {
    swift_release(v6);
LABEL_5:
    v12 = 1;
    return v12 & 1;
  }
  v9 = v7;
  v10 = *(_QWORD *)(v6 + 24);
  ObjectType = swift_getObjectType(v7, v8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, ObjectType, v10);
  swift_release(v6);
  swift_unknownObjectRelease(v9);
  return v12 & 1;
}

uint64_t sub_100267DC0(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = v3;
  v7 = a1 & 1;
  v8 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v24[-v12];
  v14 = sub_10043D788(v7, a2);
  v15 = a3 & v14;
  if ((a3 & 1) == 0 && (v14 & 1) != 0)
  {
    v16 = *(_QWORD *)(v3 + 32);
    v17 = v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
    swift_beginAccess(v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v25, 0, 0);
    sub_1000271D4(v17, (uint64_t)v10, (uint64_t *)&unk_1006443D0);
    v18 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v10, 1, v18) == 1)
    {
      v21 = v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
      swift_beginAccess(v21, v24, 0, 0);
      sub_1000271D4(v21, (uint64_t)v13, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_1006443D0);
    }
    else
    {
      sub_1001D0788((uint64_t)v10, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    if (v20(v13, 1, v18) == 1)
    {
      sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_1006443D0);
      v15 = 1;
    }
    else
    {
      v22 = v13[*(int *)(v18 + 24)];
      sub_10007C720((uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v15 = (v22 & 1) != 0 || *(_QWORD *)(v4 + 80) != 0;
    }
  }
  return v15 & 1;
}

uint64_t sub_100267FB4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::String v29;
  uint64_t v30;
  Swift::String v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t Strong;
  _BYTE v49[12];
  int v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  unint64_t v60;

  v3 = v2;
  v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v54 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v49[-v9];
  v11 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v11);
  v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v55);
  v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v16);
  v18 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v21 = &v49[-v20];
  __chkstk_darwin(v22);
  v58 = &v49[-v23];
  v59 = 0;
  v60 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v24._countAndFlagsBits = 0xD00000000000002ALL;
  v24._object = (void *)0x800000010051EE80;
  String.append(_:)(v24);
  v25 = a1 & 1;
  if (v25)
    v26 = 0x64726177726F66;
  else
    v26 = 0x647261776B636162;
  if (v25)
    v27 = 0xE700000000000000;
  else
    v27 = 0xE800000000000000;
  v28 = v27;
  String.append(_:)(*(Swift::String *)&v26);
  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x746E756F6D61202CLL;
  v29._object = (void *)0xEB00000000203D20;
  String.append(_:)(v29);
  v30 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  _print_unlocked<A, B>(_:_:)(a2, &v59, v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v31._countAndFlagsBits = 41;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  v32 = v60;
  sub_10026D514(v59, v60);
  swift_bridgeObjectRelease(v32);
  if ((sub_100267DC0(v25, a2, 0) & 1) == 0)
    return sub_10026D514(0xD00000000000002CLL, 0x800000010051EEB0);
  v51 = v18;
  v52 = v10;
  v53 = v3;
  v33 = *(_QWORD *)(v3 + 40);
  v34 = OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state;
  v35 = v55;
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD, uint64_t))(**(_QWORD **)(v33 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state) + 160))(sub_10009301C, 0, v55);
  sub_10007C6DC((uint64_t)v15, (uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_10007C720((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000271D4((uint64_t)v13, (uint64_t)v58, &qword_10064A600);
  sub_10007C720((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  v50 = v25;
  sub_10043DA34(v25, a2);
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD, uint64_t))(**(_QWORD **)(v33 + v34) + 160))(sub_10009301C, 0, v35);
  sub_10007C6DC((uint64_t)v15, (uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_10007C720((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000271D4((uint64_t)v13, (uint64_t)v21, &qword_10064A600);
  sub_10007C720((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48))(v21, 1, v57) == 1)
  {
    sub_10000CB4C((uint64_t)v21, &qword_10064A600);
    sub_10026D514(0xD000000000000029, 0x800000010051EEE0);
    v36 = v58;
  }
  else
  {
    v38 = (uint64_t)v52;
    sub_1001D0788((uint64_t)v21, (uint64_t)v52, type metadata accessor for DOCBrowserHistoryItem);
    v39 = v53;
    v40 = *(void **)(v53 + 32);
    v41 = v58;
    v42 = (uint64_t)v51;
    sub_1000271D4((uint64_t)v58, (uint64_t)v51, &qword_10064A600);
    v43 = v54;
    sub_10007C6DC(v38, (uint64_t)v54, type metadata accessor for DOCBrowserHistoryItem);
    v44 = swift_allocObject(&unk_1005D5BF8, 24, 7);
    swift_weakInit(v44 + 16, v39);
    v45 = type metadata accessor for DOCBrowserHistoryShiftRequest(0);
    swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
    v46 = v40;
    v47 = sub_10026A2A8((uint64_t)v46, v42, (uint64_t)v43, v50, (uint64_t)sub_10026D8E4, v44);
    Strong = swift_unknownObjectWeakLoadStrong(v39 + 16);
    *(_QWORD *)(v47 + 56) = *(_QWORD *)(v39 + 24);
    swift_unknownObjectWeakAssign(v47 + 48, Strong);
    swift_unknownObjectRelease(Strong);
    if (*(_QWORD *)(v39 + 80))
      sub_1002686D4(v47);
    else
      sub_100268E94(v47);
    swift_release(v47);
    sub_10007C720(v38, type metadata accessor for DOCBrowserHistoryItem);
    v36 = v41;
  }
  return sub_10000CB4C((uint64_t)v36, &qword_10064A600);
}

double sub_1002684DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  void *object;
  uint64_t Strong;
  double result;
  uint64_t v13;
  _QWORD v14[3];

  v4 = a3 + 16;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease(0xE000000000000000);
  v14[0] = 0xD000000000000025;
  v14[1] = 0x800000010051EF10;
  v5 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  swift_bridgeObjectRetain(v7);
  v9._countAndFlagsBits = static String._fromSubstring(_:)(v5, v6, v8, v7);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(object);
  sub_10026D514(0xD000000000000025, 0x800000010051EF10);
  swift_bridgeObjectRelease(0x800000010051EF10);
  swift_beginAccess(v4, v14, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v13 = Strong;
    sub_1002687E8();
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1002685D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;

  v1 = v0;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = *(_QWORD **)(v0 + 80);
  if (v2)
  {
    v3 = v2[2];
    v4 = v2[3];
    v5 = v2[4];
    v6 = v2[5];
    swift_bridgeObjectRetain(v6);
    v7 = static String._fromSubstring(_:)(v3, v4, v5, v6);
    v9 = v8;
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v9 = (void *)0xE300000000000000;
    v7 = 7104878;
  }
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  sub_10026D514(0xD00000000000001FLL, 0x800000010051ED90);
  swift_bridgeObjectRelease(0x800000010051ED90);
  *(_BYTE *)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates) = *(_QWORD *)(v1 + 80) != 0;
}

uint64_t sub_1002686D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v2 = v1;
  v13 = 0;
  v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  v4._object = (void *)0x800000010051EE50;
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  String.append(_:)(v4);
  v15 = a1;
  v5 = type metadata accessor for DOCBrowserHistoryShiftRequest(0);
  _print_unlocked<A, B>(_:_:)(&v15, &v13, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6 = v14;
  sub_10026D514(v13, v14);
  swift_bridgeObjectRelease(v6);
  swift_beginAccess(v2 + 72, &v13, 33, 0);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v8 = *(_QWORD *)(v2 + 72) & 0xFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 0x10);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a1);
  specialized Array._endMutation()(v11);
  return swift_endAccess(&v13);
}

void sub_1002687E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  _QWORD *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + 72);
  swift_beginAccess(v0 + 72, &v62, 33, 0);
  sub_100268D50();
  v7 = v6;
  swift_endAccess(&v62);
  if (!v7)
  {
    v55 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 80) = 0;
    swift_release(v55);
    sub_1002685D0();
    return;
  }
  v56 = v0;
  v60 = (void *)0x800000010051EE30;
  v61 = (void *)0x800000010051EDF0;
  *(_QWORD *)&v8 = 136315138;
  v58 = v8;
  v57 = (char *)&type metadata for Any + 8;
  while (1)
  {
    v9 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      if (v9 < 0)
        v37 = *v5;
      else
        v37 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5);
      v38 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v9);
      if (v38 < 1)
        goto LABEL_46;
    }
    else if (*(uint64_t *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      goto LABEL_46;
    }
    v62 = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(78);
    v10._countAndFlagsBits = 0xD000000000000035;
    v10._object = v61;
    String.append(_:)(v10);
    v11 = v7[2];
    v12 = v7[3];
    v13 = v7[4];
    v14 = v7[5];
    swift_bridgeObjectRetain(v14);
    v15._countAndFlagsBits = static String._fromSubstring(_:)(v11, v12, v13, v14);
    object = v15._object;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(object);
    v17._countAndFlagsBits = 0xD000000000000017;
    v17._object = v60;
    String.append(_:)(v17);
    v19 = v62;
    v18 = v63;
    v21 = Logger.BrowserHistory.unsafeMutableAddressor(v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v21, v1);
    v22 = swift_bridgeObjectRetain_n(v18, 2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(12, -1);
      v59 = v7;
      v26 = v4;
      v27 = v1;
      v28 = v2;
      v29 = v25;
      v30 = swift_slowAlloc(32, -1);
      v62 = v30;
      *(_DWORD *)v29 = v58;
      swift_bridgeObjectRetain(v18);
      *(_QWORD *)(v29 + 4) = sub_1000544FC(v19, v18, &v62);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[History] %s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, v57);
      swift_slowDealloc(v30, -1, -1);
      v31 = v29;
      v2 = v28;
      v1 = v27;
      v4 = v26;
      v7 = v59;
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease(v18);
    swift_beginAccess(v5, &v62, 33, 0);
    v32 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      if (v32 < 0)
        v39 = *v5;
      else
        v39 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5);
      v40 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v32);
      if (!v40)
        goto LABEL_51;
    }
    else if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_51;
    }
    v33 = *v5;
    if ((unint64_t)*v5 >> 62)
      break;
    if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_48;
LABEL_12:
    v34 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      if (v34 < 0)
        v43 = *v5;
      else
        v43 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5);
      v44 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v34);
      if (!v44)
        goto LABEL_49;
    }
    else if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_49;
    }
    if ((v34 & 0xC000000000000001) != 0)
    {
      v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
    }
    else
    {
      if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_50;
      v35 = *(_QWORD *)(v34 + 32);
      swift_retain();
    }
    v36 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      if (v36 < 0)
        v45 = *v5;
      else
        v45 = v36 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v5);
      v46 = _CocoaArrayWrapper.endIndex.getter(v45);
      swift_bridgeObjectRelease(v36);
      if (!v46)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        v62 = 0;
        v63 = 0xE000000000000000;
        _StringGuts.grow(_:)(54);
        v47._countAndFlagsBits = 0xD000000000000034;
        v47._object = (void *)0x800000010051EDB0;
        String.append(_:)(v47);
        v48 = v7[2];
        v49 = v7[3];
        v50 = v7[4];
        v51 = v7[5];
        swift_bridgeObjectRetain(v51);
        v52._countAndFlagsBits = static String._fromSubstring(_:)(v48, v49, v50, v51);
        v53 = v52._object;
        String.append(_:)(v52);
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease(v53);
        v54 = v63;
        sub_10026D514(v62, v63);
        swift_bridgeObjectRelease(v54);
        sub_100268E94((uint64_t)v7);
        swift_release(v7);
        return;
      }
    }
    else if (!*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_45;
    }
    sub_10045C0D4(0, 1);
    swift_endAccess(&v62);
    swift_release(v7);
    v7 = (_QWORD *)v35;
  }
  if (v33 < 0)
    v41 = *v5;
  else
    v41 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v42 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(v33);
  if (v42)
    goto LABEL_12;
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  swift_endAccess(&v62);
  __break(1u);
}

void sub_100268D50()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (v2)
  {
    if (v1 < 0)
      v4 = *v0;
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v0);
    v5 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
    if (v5)
    {
      swift_bridgeObjectRetain(v1);
      v6 = _CocoaArrayWrapper.endIndex.getter(v4);
      swift_bridgeObjectRelease(v1);
      if (!v6)
      {
LABEL_24:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(v1);
      v7 = _CocoaArrayWrapper.endIndex.getter(v4);
      swift_bridgeObjectRelease(v1);
      if (v7)
      {
LABEL_3:
        if ((v1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
          if (!v2)
          {
LABEL_6:
            v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_20;
          }
        }
        else
        {
          if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          swift_retain();
          if (!v2)
            goto LABEL_6;
        }
        if (v1 < 0)
          v8 = v1;
        else
          v8 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v1);
        v3 = _CocoaArrayWrapper.endIndex.getter(v8);
        swift_bridgeObjectRelease(v1);
LABEL_20:
        if (v3)
        {
          sub_10045C0D4(0, 1);
          return;
        }
        goto LABEL_23;
      }
      __break(1u);
    }
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
}

uint64_t sub_100268E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v15 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  v7._object = (void *)0x800000010051ED60;
  v7._countAndFlagsBits = 0xD00000000000002DLL;
  String.append(_:)(v7);
  v16 = a1;
  v8 = type metadata accessor for DOCBrowserHistoryShiftRequest(0);
  _print_unlocked<A, B>(_:_:)(&v16, &v14, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9 = v15;
  sub_10026D514(v14, v15);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = a1;
  swift_retain_n(a1, 2);
  swift_release(v10);
  sub_1002685D0();
  swift_release(a1);
  v11 = a1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, &v14, 0, 0);
  sub_10007C6DC(v11, (uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  v12 = swift_allocObject(&unk_1005D5BD0, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_10043F79C((uint64_t)v6, (uint64_t)sub_10026D874, v12);
  swift_release(v12);
  return sub_10007C720((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_100269034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  _BYTE v10[24];

  v6 = a2 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess(a2 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, v10, 33, 0);
  sub_10026D87C(a1, v6);
  result = swift_endAccess(v10);
  v8 = *(_QWORD *)(a3 + 80);
  if (v8)
    v9 = v8 == a2;
  else
    v9 = 0;
  if (v9)
    return sub_10026A418(*(char **)(a2 + 64));
  return result;
}

uint64_t sub_1002690B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v1 = sub_100267B00();
  if (qword_100641158 != -1)
    swift_once(&qword_100641158, sub_1000A041C);
  v2 = qword_100672DF0;
  v3 = *(void **)(v0 + 40);
  v10[3] = type metadata accessor for DOCBrowserHistoryDataSource();
  v4 = (void *)objc_opt_self(NSOperationQueue);
  v5 = v3;
  v6 = objc_msgSend(v4, "mainQueue", v3);
  (*(void (**)(uint64_t, _QWORD *, id, void (*)(), _QWORD))(*(_QWORD *)v1 + 144))(v2, v10, v6, sub_1002691A8, 0);
  v8 = v7;

  swift_release(v1);
  swift_bridgeObjectRelease(v8);
  return sub_10000CB4C((uint64_t)v10, &qword_100642730);
}

void sub_1002691A8()
{
  sub_1002691C8();
}

void sub_1002691C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE *v7;
  char v8;
  int v9;
  unsigned int v10;
  objc_class *v11;
  void *v12;
  _BYTE *v13;
  char v14;
  unsigned __int8 v15;
  objc_super v16;
  objc_super v17;

  v1 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + 56);
  if (v4)
  {
    v5 = sub_10006922C(&qword_10064EBF0);
    v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    v7 = v4;
    v8 = sub_10043D788(0, (uint64_t)v3);
    sub_10007C720((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
    v9 = v8 & 1;
    v7[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction] = v8 & 1;
    v10 = v7[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable];
    v11 = (objc_class *)type metadata accessor for DOCHistoryNavigationButtonItem();
    v17.receiver = v7;
    v17.super_class = v11;
    objc_msgSendSuper2(&v17, "setEnabled:", v9 & v10);

    v12 = *(void **)(v0 + 64);
    if (v12)
    {
      v6(v3, 1, 1, v5);
      v13 = v12;
      v14 = sub_10043D788(1, (uint64_t)v3);
      sub_10007C720((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
      v13[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction] = v14 & 1;
      v15 = v13[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable];
      v16.receiver = v13;
      v16.super_class = v11;
      objc_msgSendSuper2(&v16, "setEnabled:", v14 & 1u & v15);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100269368(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), _QWORD, double))(**(_QWORD **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state)
                                                                                                  + 160))(sub_10009301C, 0, v7);
  sub_10007C6DC((uint64_t)v9, (uint64_t)v5, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_10007C720((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  if ((a1 & 1) != 0)
  {
    v12 = *(_QWORD *)&v5[*(int *)(v3 + 24)];
    swift_bridgeObjectRetain(v12);
    sub_10007C720((uint64_t)v5, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  }
  else
  {
    v10 = *(_QWORD *)&v5[*(int *)(v3 + 20)];
    swift_bridgeObjectRetain(v10);
    sub_10007C720((uint64_t)v5, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_10013CBB8(v10);
    return v11;
  }
  return v12;
}

double sub_1002694C0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void (*v48)(_QWORD *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _QWORD aBlock[5];
  uint64_t v55;
  char v56[24];

  v53 = a4;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - v17;
  a3 += 16;
  swift_beginAccess(a3, v56, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v20 = Strong;
    v47 = a2;
    v48 = a1;
    v21 = _swiftEmptyArrayStorage;
    if ((*(_BYTE *)(Strong + 88) & 1) == 0)
      goto LABEL_4;
    v22 = sub_100267B00();
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 160))(v22);
    swift_release(v22);
    v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v45 = static OS_dispatch_queue.main.getter(v23);
    static DispatchTime.now()(v45);
    + infix(_:_:)(v15, 0.25);
    v46 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24 = v49;
    v46(v15, v49);
    aBlock[4] = sub_10026D92C;
    v55 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D5D00;
    v25 = _Block_copy(aBlock);
    v26 = v55;
    swift_retain();
    swift_release(v26);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_10008BAAC();
    v29 = sub_10006922C((uint64_t *)&unk_100647540);
    v30 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v7, v28);
    v31 = (void *)v45;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v18, v12, v9, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v51);
    v46(v18, v24);
    v32 = *(id *)(v20 + 40);
    LOBYTE(v24) = sub_10043F2C4(5.0);

    if ((v24 & 1) == 0)
    {
      v48(_swiftEmptyArrayStorage);
      *(_QWORD *)&result = swift_release(v20).n128_u64[0];
    }
    else
    {
LABEL_4:
      v33 = v53 & 1;
      v34 = sub_100269368(v53 & 1);
      aBlock[0] = _swiftEmptyArrayStorage;
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        v36 = *(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
        v37 = v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        v38 = *(_QWORD *)(v36 + 72);
        do
        {
          v39 = sub_1002698B4(v37, v20, v33);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
          v41 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v40 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v41 >= v40 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
          v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
          specialized Array._endMutation()(v42);
          v37 += v38;
          --v35;
        }
        while (v35);
        v21 = (_QWORD *)aBlock[0];
      }
      swift_bridgeObjectRelease(v34);
      v44 = swift_bridgeObjectRetain(v21);
      v48((_QWORD *)v44);
      swift_release(v20);
      swift_bridgeObjectRelease_n(v21, 2);
    }
  }
  else
  {
    a1(_swiftEmptyArrayStorage);
  }
  return result;
}

id sub_1002698B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t ObjCClassMetadata;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  NSString v51;
  uint64_t v53;
  uint64_t v54;
  id v55;
  int v56;
  uint64_t v57;
  uint64_t v58;

  v54 = a2;
  v5 = type metadata accessor for DOCBrowserHistoryItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(a1 + *(int *)(v9 + 32));
  v11 = *(id *)(a1 + *(int *)(v9 + 20));
  v12 = v10;
  v13 = sub_100269C3C(v11, (uint64_t)v12);

  v14 = v11;
  v15 = v12;
  v16 = sub_1000868F0();
  v56 = a3;
  v55 = v13;
  if (v17 == 255)
    goto LABEL_5;
  v18 = v16;
  if (v17 != 2)
  {
    sub_100086998(v16, v17);
LABEL_5:
    v23 = objc_msgSend(v14, "displayName");
    if (v23)
    {
      v24 = v23;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v22 = v25;

    }
    else
    {

      v20 = 0;
      v22 = (void *)0xE000000000000000;
    }
    goto LABEL_8;
  }
  v19 = objc_msgSend(v15, "displayName");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  sub_100086998(v18, 2u);
LABEL_8:
  v26 = v54;
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v27 = swift_allocObject(&unk_1005D5BF8, 24, 7);
  swift_weakInit(v27 + 16, v26);
  sub_10007C6DC(a1, (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
  v28 = *(unsigned __int8 *)(v6 + 80);
  v29 = (v28 + 25) & ~v28;
  v30 = swift_allocObject(&unk_1005D5D38, v29 + v7, v28 | 7);
  *(_QWORD *)(v30 + 16) = v27;
  v31 = (v56 & 1) == 0;
  *(_BYTE *)(v30 + 24) = v56 & 1;
  if (v31)
    v32 = 0x647261776B636162;
  else
    v32 = 0x64726177726F66;
  if (v31)
    v33 = (void *)0xE800000000000000;
  else
    v33 = (void *)0xE700000000000000;
  sub_1001D0788((uint64_t)v8, v30 + v29, type metadata accessor for DOCBrowserHistoryItem);
  v34 = v55;
  v35 = v55;
  swift_bridgeObjectRetain(v22);
  v36 = v20;
  v38 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20, v22, 0, 0, v34, 0, 0, 0, v37, 0, 0, 0, sub_10026D9F0, v30);
  v39 = (void *)objc_opt_self(DOCAXIdentifier);
  v40 = v38;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v39, "navBarButton"));
  v42 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "historyMenuPrefix");
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v45 = v44;

  v57 = v43;
  v58 = v45;
  v46._countAndFlagsBits = 46;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  v47._countAndFlagsBits = v32;
  v47._object = v33;
  String.append(_:)(v47);
  swift_bridgeObjectRelease(v33);
  v48._countAndFlagsBits = 46;
  v48._object = (void *)0xE100000000000000;
  String.append(_:)(v48);
  v49._countAndFlagsBits = v36;
  v49._object = v22;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v22);
  v50 = v58;
  v51 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setAccessibilityIdentifier:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

  return v40;
}

id sub_100269C3C(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;

  v4 = objc_msgSend(a1, "representedTag");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
    v7 = objc_msgSend(v6, "tintedSystemImageForTag:", v5);

  }
  else if ((objc_msgSend(a1, "isRoot") & 1) != 0)
  {

    v8 = type metadata accessor for DOCSourceListInterface_Default();
    return objc_msgSend((id)swift_initStaticObject(v8, &unk_100641248), "iconForSource:", a2);
  }
  else
  {
    v9 = objc_msgSend(a1, "fileProviderItem");
    if (v9)
    {
      v10 = v9;
      v11 = type metadata accessor for DOCSourceListInterface_Default();
      v7 = objc_msgSend((id)swift_initStaticObject(v11, &unk_100641248), "nonThumbnailedIconForItem:", v10);

    }
    else
    {
      return 0;
    }
  }
  return v7;
}

double sub_100269D90(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v7 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    *(_BYTE *)(Strong + 88) = 0;
    sub_10007C6DC(a4, (uint64_t)v9, type metadata accessor for DOCBrowserHistoryItem);
    v13 = sub_10006922C(&qword_10064EBF0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
    sub_100267FB4(a3 & 1, (uint64_t)v9);
    sub_10007C720((uint64_t)v9, type metadata accessor for DOCBrowserHistoryShiftAmount);
    *(_BYTE *)(v12 + 88) = 1;
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_100269E90()
{
  uint64_t v0;

  sub_10008F5C0(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t sub_100269EE4()
{
  uint64_t v0;

  sub_100269E90();
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for DOCBrowserHistoryController()
{
  return objc_opt_self(_TtC5Files27DOCBrowserHistoryController);
}

id sub_10026A0A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCHistoryNavigationButtonItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCHistoryNavigationButtonItem()
{
  return objc_opt_self(_TtC5Files30DOCHistoryNavigationButtonItem);
}

double sub_10026A0F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  double result;
  uint64_t v19[2];

  v2 = v1;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v19, "Shift request ");
  HIBYTE(v19[1]) = -18;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = static String._fromSubstring(_:)(v4, v5, v6, v7);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(object);
  v10._object = (void *)0x800000010051ED10;
  v10._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v10);
  if ((a1 & 1) != 0)
    v11 = 1702195828;
  else
    v11 = 0x65736C6166;
  if ((a1 & 1) != 0)
    v12 = 0xE400000000000000;
  else
    v12 = 0xE500000000000000;
  v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v12);
  v14._countAndFlagsBits = 41;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  sub_10026D514(v19[0], v19[1]);
  swift_bridgeObjectRelease(v19[1]);
  *(_BYTE *)(v2 + 88) = 1;
  v16 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 72);
  v15 = *(_QWORD *)(v2 + 80);
  v17 = swift_retain();
  v16(v2, a1, v17);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10026A24C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_10008F5C0(v0 + 48);

  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for DOCBrowserHierarchyChangeRequest()
{
  return objc_opt_self(_TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F32DOCBrowserHierarchyChangeRequest);
}

uint64_t sub_10026A2A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v7 = v6;
  v30 = a5;
  v31 = a6;
  v11 = a4 & 1;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a2, v7 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_previousItem, &qword_10064A600);
  v16 = sub_10007C6DC(a3, v7 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
  *(_BYTE *)(v7
           + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_shiftDirection) = v11;
  v17 = UUID.init()(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v21 = sub_100087794(6, v18, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(v7 + 16) = v21;
  *(_QWORD *)(v7 + 24) = v23;
  *(_QWORD *)(v7 + 32) = v25;
  *(_QWORD *)(v7 + 40) = v27;
  *(_QWORD *)(v7 + 56) = 0;
  swift_unknownObjectWeakInit(v7 + 48);
  *(_BYTE *)(v7 + 88) = 0;
  v28 = v30;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = v28;
  *(_QWORD *)(v7 + 80) = v31;
  sub_10007C720(a3, type metadata accessor for DOCBrowserHistoryItem);
  sub_10000CB4C(a2, &qword_10064A600);
  return v7;
}

uint64_t sub_10026A418(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  char *v23;
  id v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t Strong;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD aBlock[3];
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;
  char v54[24];

  v48 = a1;
  v2 = sub_10006922C(&qword_10064A600);
  __chkstk_darwin(v2);
  v47 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v43 - v5;
  v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v46 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v45 = (uint64_t)&v43 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v18 = v1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, v54, 0, 0);
  sub_10007C6DC(v18, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  v19 = v1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_previousItem;
  sub_1000271D4(v1 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_previousItem, (uint64_t)v6, &qword_10064A600);
  v44 = v8;
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v20(v6, 1, v7) == 1)
  {
    sub_10000CB4C((uint64_t)v6, &qword_10064A600);
  }
  else
  {
    sub_1000271D4((uint64_t)&v6[*(int *)(v7 + 36)], (uint64_t)aBlock, &qword_100642730);
    if (v51)
    {
      if (swift_dynamicCast(&v49, aBlock, (char *)&type metadata for Any + 8, &type metadata for DOCBrowserHistoryItem.SearchContext, 6))
      {
        swift_bridgeObjectRelease(v49);
        sub_10007C720((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
        v21 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
    }
    sub_10007C720((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
  }
  v21 = 0;
LABEL_9:
  sub_1000271D4((uint64_t)&v17[*(int *)(v7 + 36)], (uint64_t)aBlock, &qword_100642730);
  if (v51)
  {
    if (swift_dynamicCast(&v49, aBlock, (char *)&type metadata for Any + 8, &type metadata for DOCBrowserHistoryItem.SearchContext, 6))
    {
      swift_bridgeObjectRelease(v49);
LABEL_16:
      sub_10007C6DC((uint64_t)v17, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
      goto LABEL_17;
    }
    if ((v21 & 1) == 0)
      goto LABEL_16;
  }
  else
  {
    sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
    if (!v21)
      goto LABEL_16;
  }
  sub_10007C6DC((uint64_t)v17, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  v22 = v47;
  sub_1000271D4(v19, v47, &qword_10064A600);
  if (v20((char *)v22, 1, v7) == 1)
  {
    sub_10000CB4C(v22, &qword_10064A600);
LABEL_17:
    v23 = v48;
    sub_10007C720((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
LABEL_18:
    sub_10026A9BC((uint64_t)v17, (uint64_t)v23);
    return sub_10007C720((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  }
  v25 = *(id *)(v22 + *(int *)(v7 + 20));
  sub_10007C720(v22, type metadata accessor for DOCBrowserHistoryItem);
  v26 = *(void **)&v14[*(int *)(v7 + 20)];
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v27 = v25;
  v28 = v26;
  v29 = static NSObject.== infix(_:_:)(v27, v28);
  sub_10007C720((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);

  v23 = v48;
  if ((v29 & 1) == 0)
    goto LABEL_18;
  v30 = v45;
  sub_10007C6DC((uint64_t)v17, v45, type metadata accessor for DOCBrowserHistoryItem);
  v31 = v46;
  sub_10007C6DC(v30, v46, type metadata accessor for DOCBrowserHistoryItem);
  v32 = *(unsigned __int8 *)(v44 + 80);
  v33 = (v32 + 24) & ~v32;
  v34 = (v9 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject(&unk_1005D5A90, v34 + 8, v32 | 7);
  *(_QWORD *)(v35 + 16) = v1;
  sub_1001D0788(v30, v35 + v33, type metadata accessor for DOCBrowserHistoryItem);
  *(_QWORD *)(v35 + v34) = v23;
  Strong = swift_unknownObjectWeakLoadStrong(&v23[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  if (Strong)
  {
    v37 = (void *)Strong;
    v38 = swift_allocObject(&unk_1005D5AB8, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_10026C90C;
    *(_QWORD *)(v38 + 24) = v35;
    v52 = sub_10006657C;
    v53 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    v51 = &unk_1005D5AD0;
    v39 = _Block_copy(aBlock);
    v40 = v53;
    swift_retain_n(v1, 2);
    v41 = v23;
    swift_retain();
    objc_msgSend(v37, "hierarchyController:prepareByDismissingSearchWithCompletion:", v41, v39, swift_release(v40).n128_f64[0]);
    _Block_release(v39);
    swift_release(v1);
    swift_release(v35);
    swift_unknownObjectRelease(v37);
    sub_10007C720(v31, type metadata accessor for DOCBrowserHistoryItem);

  }
  else
  {
    swift_retain_n(v1, 2);
    v42 = v23;
    sub_10026A9BC(v31, (uint64_t)v42);
    swift_release(v1);
    swift_release(v35);
    sub_10007C720(v31, type metadata accessor for DOCBrowserHistoryItem);

  }
  return sub_10007C720((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_10026A9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, BOOL, double (*)(), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = v2;
  v6 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  __chkstk_darwin(v6);
  v8 = (unsigned __int8 *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BCF8(a2, (uint64_t)v8);
  v9 = *v8;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 48);
  if (!Strong)
    goto LABEL_3;
  v11 = Strong;
  v12 = *(_QWORD *)(v3 + 56);
  ObjectType = swift_getObjectType(Strong);
  v14 = *(uint64_t (**)(uint64_t, BOOL, double (*)(), uint64_t, uint64_t, uint64_t, __n128))(v12 + 16);
  v15 = swift_retain();
  LOBYTE(v12) = v14(a1, v9 != 2, sub_10026E4F0, v3, ObjectType, v12, v15);
  swift_unknownObjectRelease(v11);
  swift_release(v3);
  if ((v12 & 1) == 0)
  {
LABEL_3:
    v16 = *v8;
    if (v16 == 2)
    {
      swift_retain();
      sub_10026B484((uint64_t)v8, 1, a2, (uint64_t)sub_10026E4F0, v3);
    }
    else if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20));
      v18 = swift_allocObject(&unk_1005D5B80, 32, 7);
      *(_QWORD *)(v18 + 16) = sub_10026E4F0;
      *(_QWORD *)(v18 + 24) = v3;
      swift_retain_n(v3, 2);
      sub_1001DF1F0(v17, 1, (uint64_t)sub_100066584, v18);
      swift_release(v3);
      v3 = v18;
    }
    else
    {
      swift_retain();
      sub_10026D6E4((uint64_t)v8, 1, a2, (uint64_t)sub_10026D6DC, v3);
    }
    swift_release(v3);
  }
  return sub_10007C720((uint64_t)v8, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
}

void sub_10026AB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  id v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id *v59;
  uint64_t v60;
  id *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  v64 = v5;
  v65 = v4;
  if (!a1)
  {
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v5);
LABEL_44:
    v5 = v65;
    v8 = (unint64_t)v65 >> 62;
    if ((unint64_t)v65 >> 62)
      goto LABEL_159;
    if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_146;
    goto LABEL_46;
  }
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v58 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
    else
      v58 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v4, 2);
    swift_bridgeObjectRetain_n(v5, 2);
    v59 = (id *)(id)a1;
    v6 = _CocoaArrayWrapper.endIndex.getter(v58);
    if (v6)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease(v4);
    goto LABEL_23;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v4, 2);
  swift_bridgeObjectRetain_n(v5, 2);
  v7 = (id *)(id)a1;
  if (!v6)
    goto LABEL_11;
LABEL_4:
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v8 = 0;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
    else
      v9 = *(id *)(v4 + 8 * v8 + 32);
    v10 = v9;
    v11 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v11 & 1) != 0)
    {
      swift_bridgeObjectRelease(v4);
      if (v8 <= 0)
        goto LABEL_23;
      if ((unint64_t)v4 >> 62)
      {
        if (v4 < 0)
          v14 = v4;
        else
          v14 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v13 = _CocoaArrayWrapper.endIndex.getter(v14);
        swift_bridgeObjectRelease(v4);
        if (v13 < 0)
          goto LABEL_22;
      }
      else
      {
        v13 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v13 < 0)
        {
LABEL_22:
          sub_10045C054(0, v8);
LABEL_23:
          if ((unint64_t)v5 >> 62)
          {
            if (v5 < 0)
              v60 = v5;
            else
              v60 = v5 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v5);
            v61 = (id *)(id)a1;
            v8 = _CocoaArrayWrapper.endIndex.getter(v60);
            swift_bridgeObjectRelease(v5);
            if (v8)
              goto LABEL_25;
          }
          else
          {
            v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
            v15 = (id *)(id)a1;
            if (v8)
            {
LABEL_25:
              sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
              v16 = 0;
              while (1)
              {
                v17 = (v5 & 0xC000000000000001) != 0
                    ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v5)
                    : *(id *)(v5 + 8 * v16 + 32);
                v18 = v17;
                v19 = static NSObject.== infix(_:_:)(v17, a1);

                if ((v19 & 1) != 0)
                  break;
                v20 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_148;
                ++v16;
                if (v20 == v8)
                  goto LABEL_32;
              }
              swift_bridgeObjectRelease(v5);

              if (v16 <= 0)
                goto LABEL_43;
              if ((unint64_t)v5 >> 62)
              {
                if (v5 < 0)
                  v22 = v5;
                else
                  v22 = v5 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v5);
                v21 = _CocoaArrayWrapper.endIndex.getter(v22);
                swift_bridgeObjectRelease(v5);
                if (v21 < 0)
                  goto LABEL_42;
              }
              else
              {
                v21 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v21 < 0)
                {
LABEL_42:
                  sub_10045C054(0, v16);
                  goto LABEL_43;
                }
              }
              if (v21 < v16)
                goto LABEL_184;
              goto LABEL_42;
            }
          }
LABEL_32:
          swift_bridgeObjectRelease(v5);

LABEL_43:
          goto LABEL_44;
        }
      }
      if (v13 < v8)
        goto LABEL_183;
      goto LABEL_22;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    ++v8;
    if (v12 == v6)
      goto LABEL_11;
  }
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
  while (2)
  {
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    if (v5 < 0)
      v56 = v5;
    else
      v56 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v57 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v5);
    if (!v57)
    {
LABEL_146:
      swift_bridgeObjectRelease(v5);
      return;
    }
LABEL_46:
    a1 = v64;
    if ((unint64_t)v64 >> 62)
    {
      if (v64 < 0)
        v62 = v64;
      else
        v62 = v64 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v64);
      v63 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v64);
      if (!v63)
        goto LABEL_146;
    }
    else if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_146;
    }
    if (v8)
    {
      if (v5 < 0)
        v24 = v5;
      else
        v24 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v23 = _CocoaArrayWrapper.endIndex.getter(v24);
    }
    else
    {
      v23 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v5);
    }
    if (!v23)
      goto LABEL_185;
    if ((v5 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v25 = *(id *)(v5 + 32);
        goto LABEL_58;
      }
      __break(1u);
LABEL_181:
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v64);
LABEL_68:
      v29 = v28;
      swift_bridgeObjectRelease(v64);
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
LABEL_69:
      if ((static NSObject.== infix(_:_:)(v8, v29) & 1) == 0)
      {

        goto LABEL_146;
      }
      v30 = (unint64_t)v5 >> 62;
      if ((unint64_t)v5 >> 62)
      {
        if (v5 < 0)
          v33 = v5;
        else
          v33 = v5 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v5);
        v34 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v5);
        if (!v34)
          goto LABEL_187;
        swift_bridgeObjectRetain(v5);
        v35 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v5);
        if (!v35)
          continue;
      }
      else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_149;
      }
      if ((v5 & 0xC000000000000001) != 0)
      {
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
        if (!v30)
          goto LABEL_75;
      }
      else
      {
        if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_151;
        v31 = *(id *)(v5 + 32);
        if (!v30)
        {
LABEL_75:
          v32 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_87;
        }
      }
      if (v5 < 0)
        v36 = v5;
      else
        v36 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v32 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease(v5);
LABEL_87:
      if (!v32)
        goto LABEL_157;
      sub_10045C054(0, 1);

      v37 = (unint64_t)a1 >> 62;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v39 = a1;
        else
          v39 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v5 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(a1);
        if (!v5)
          goto LABEL_188;
        swift_bridgeObjectRetain(a1);
        v40 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(a1);
        if (!v40)
          goto LABEL_153;
      }
      else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_152;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        if (!v37)
          goto LABEL_93;
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_154;
        v5 = (uint64_t)*(id *)(a1 + 32);
        if (!v37)
        {
LABEL_93:
          v38 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_105:
          if (!v38)
            goto LABEL_158;
          sub_10045C054(0, 1);

          v42 = (id)v8;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v43 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v43 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
          specialized Array._endMutation()(v45);

          v5 = v65;
          v8 = (unint64_t)v65 >> 62;
          if ((unint64_t)v65 >> 62)
          {
            if (v65 < 0)
              v52 = v65;
            else
              v52 = v65 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v65);
            v53 = _CocoaArrayWrapper.endIndex.getter(v52);
            swift_bridgeObjectRelease(v65);
            if (!v53)
              goto LABEL_146;
          }
          else if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_146;
          }
          a1 = v64;
          if ((unint64_t)v64 >> 62)
          {
            if (v64 < 0)
              v54 = v64;
            else
              v54 = v64 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v64);
            v55 = _CocoaArrayWrapper.endIndex.getter(v54);
            swift_bridgeObjectRelease(v64);
            if (!v55)
              goto LABEL_146;
          }
          else if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_146;
          }
          if (v8)
          {
            if (v65 < 0)
              v47 = v65;
            else
              v47 = v65 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v65, 2);
            v46 = _CocoaArrayWrapper.endIndex.getter(v47);
            swift_bridgeObjectRelease(v65);
          }
          else
          {
            v46 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v65);
          }
          if (!v46)
            goto LABEL_185;
          if ((v65 & 0xC000000000000001) != 0)
          {
            v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v65);
          }
          else
          {
            if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_155;
            v48 = *(id *)(v65 + 32);
          }
          v8 = (uint64_t)v48;
          swift_bridgeObjectRelease(v65);
          if ((unint64_t)v64 >> 62)
          {
            if (v64 < 0)
              v50 = v64;
            else
              v50 = v64 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v64, 2);
            v49 = _CocoaArrayWrapper.endIndex.getter(v50);
            swift_bridgeObjectRelease(v64);
          }
          else
          {
            v49 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v64);
          }
          if (!v49)
            goto LABEL_186;
          if ((v64 & 0xC000000000000001) != 0)
          {
            v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v64);
          }
          else
          {
            if (!*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_156;
            v51 = *(id *)(v64 + 32);
          }
          v29 = v51;
          swift_bridgeObjectRelease(v64);
          goto LABEL_69;
        }
      }
      if (a1 < 0)
        v41 = a1;
      else
        v41 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v38 = _CocoaArrayWrapper.endIndex.getter(v41);
      swift_bridgeObjectRelease(a1);
      goto LABEL_105;
    }
    break;
  }
  v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
LABEL_58:
  v8 = (uint64_t)v25;
  swift_bridgeObjectRelease(v5);
  if ((unint64_t)v64 >> 62)
  {
    if (v64 < 0)
      v27 = v64;
    else
      v27 = v64 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v64);
    v26 = _CocoaArrayWrapper.endIndex.getter(v27);
  }
  else
  {
    v26 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v64);
  }
  if (v26)
  {
    if ((v64 & 0xC000000000000001) != 0)
      goto LABEL_181;
    if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v28 = *(id *)(v64 + 32);
      goto LABEL_68;
    }
    __break(1u);
LABEL_183:
    __break(1u);
LABEL_184:
    __break(1u);
LABEL_185:
    swift_bridgeObjectRelease(v5);
    __break(1u);
  }
LABEL_186:
  swift_bridgeObjectRelease(a1);
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
}

unint64_t sub_10026B484(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint8_t *v30;
  uint8_t *v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  unint64_t result;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95[24];

  v89 = a4;
  v90 = a5;
  v93 = a3;
  v88 = a2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v82 - v14;
  v86 = (int *)type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  sub_10007C6DC(a1 + v86[5], (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  v92 = v10;
  v16 = *(int *)(v10 + 28);
  v17 = *(void **)&v15[v16];
  v18 = v17;
  v87 = a1;
  sub_10026AB94((uint64_t)v17);
  v20 = v19;
  v91 = v21;

  v23 = v20;
  v84 = (unint64_t)v20 >> 62;
  if (!((unint64_t)v20 >> 62))
  {
    v24 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_6;
    goto LABEL_3;
  }
  if (v20 >= 0)
    v20 &= 0xFFFFFFFFFFFFFF8uLL;
  swift_bridgeObjectRetain(v23);
  v24 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v23);
  if (!v24)
  {
LABEL_3:
    v83 = v16;
    v25 = Logger.BrowserHistory.unsafeMutableAddressor(v22);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v6);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      v82 = v24;
      v30 = v29;
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "No common suffix transitions implies this should have been handled as a pop", v29, 2u);
      v31 = v30;
      v24 = v82;
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v16 = v83;
  }
LABEL_6:
  v32 = (void *)sub_100038378();
  if (v32)
    goto LABEL_14;
  v33 = (uint64_t *)(v93 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v93 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v95, 0, 0);
  v34 = *v33;
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v39 = v34;
    else
      v39 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v32 = (void *)_CocoaArrayWrapper.endIndex.getter(v39);
    if (v32)
      goto LABEL_9;
  }
  else
  {
    v32 = *(void **)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v34);
    if (v32)
    {
LABEL_9:
      if ((v34 & 0xC000000000000001) != 0)
      {
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
      }
      else
      {
        if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_97;
        }
        v35 = *(id *)(v34 + 32);
      }
      v32 = v35;
    }
  }
  swift_bridgeObjectRelease(v34);
LABEL_14:
  v7 = *(_QWORD *)&v15[v16];
  sub_10007C6DC((uint64_t)v15, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  v36 = (void *)v7;
  if (v7)
    goto LABEL_35;
  a1 = v16;
  v34 = *(_QWORD *)&v12[*(int *)(v92 + 24)];
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v40 = *(_QWORD *)&v12[*(int *)(v92 + 24)];
    else
      v40 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v12[*(int *)(v92 + 24)]);
    v37 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v37)
    {
LABEL_17:
      if ((v34 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_99;
        }
        v38 = *(id *)(v34 + 32);
        goto LABEL_20;
      }
LABEL_97:
      v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
LABEL_20:
      v36 = v38;
      v16 = a1;
      swift_bridgeObjectRelease(v34);
      goto LABEL_35;
    }
  }
  else
  {
    v37 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v12[*(int *)(v92 + 24)]);
    if (v37)
      goto LABEL_17;
  }
  swift_bridgeObjectRelease(v34);
  v36 = 0;
  v16 = a1;
LABEL_35:
  v41 = (id)v7;
  sub_10007C720((uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  if (v32)
  {
    v7 = v91;
    if (v36)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v42 = v36;
      v43 = v16;
      v44 = v32;
      v45 = static NSObject.== infix(_:_:)(v44, v42);

      v16 = v43;
      if (v24 < 2 || (v88 & 1) == 0)
        goto LABEL_82;
      if (v7 < 0)
        goto LABEL_78;
      goto LABEL_49;
    }
    goto LABEL_42;
  }
  v7 = v91;
  if (v36)
  {
LABEL_42:
    if (v24 < 2 || (v88 & 1) == 0)
      goto LABEL_82;
    v45 = 0;
    if (v7 < 0)
      goto LABEL_78;
    goto LABEL_49;
  }
  if (v24 < 2 || (v88 & 1) == 0)
    goto LABEL_82;
  v45 = 1;
  if (v91 < 0)
    goto LABEL_78;
LABEL_49:
  if ((v7 & 0x4000000000000000) != 0)
  {
LABEL_78:
    if (v7 < 0)
      v58 = v7;
    else
      v58 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v59 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease(v7);
    if (v59 < 1)
      goto LABEL_82;
    goto LABEL_51;
  }
  if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_82:
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v23);
    v60 = *(_QWORD *)&v15[*(int *)(v92 + 24)];
    v61 = *(void **)&v15[*(int *)(v92 + 20)];
    v94 = v60;
    swift_bridgeObjectRetain_n(v60, 2);
    v62 = v61;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
    v64 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v63 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v64 >= v63 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
    v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
    specialized Array._endMutation()(v65);
    v66 = v94;
    swift_bridgeObjectRelease(v60);

    if ((unint64_t)v66 >> 62)
    {
      if (v66 < 0)
        v79 = v66;
      else
        v79 = v66 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v66);
      v67 = _CocoaArrayWrapper.endIndex.getter(v79);
      swift_bridgeObjectRelease(v66);
    }
    else
    {
      v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v68 = v89;
    if (v67 > 7)
    {
      swift_bridgeObjectRelease(v66);
      v74 = *(void **)&v15[v16];
      v75 = swift_allocObject(&unk_1005D5B08, 32, 7);
      v76 = v90;
      *(_QWORD *)(v75 + 16) = v68;
      *(_QWORD *)(v75 + 24) = v76;
      v77 = v74;
      swift_retain();
      v78 = v62;
      sub_1001D4F4C(v78, v74, 0, 1, 0, (void (*)(void))sub_10010DF60, v75);

      v73 = v75;
    }
    else
    {
      v69 = *(void **)&v15[v16];
      v70 = swift_allocObject(&unk_1005D5B30, 32, 7);
      v71 = v90;
      *(_QWORD *)(v70 + 16) = v68;
      *(_QWORD *)(v70 + 24) = v71;
      v72 = v69;
      swift_retain();
      sub_1001D4288(v66, v69, 1, 0, 0, (uint64_t)sub_10010DF60, v70);
      swift_bridgeObjectRelease(v66);

      v73 = v70;
    }
    swift_release(v73);
    goto LABEL_90;
  }
LABEL_51:
  if ((v45 & 1) == 0)
    goto LABEL_82;
  v34 = *(_QWORD *)(v87 + v86[6]);
  v37 = v23;
  if ((unint64_t)v34 >> 62)
  {
LABEL_99:
    if (v34 < 0)
      v80 = v34;
    else
      v80 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v46 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease(v34);
    goto LABEL_54;
  }
  v46 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_54:
  v47 = v85;
  v48 = *(_QWORD *)(v87 + v86[7]);
  if ((unint64_t)v48 >> 62)
  {
    if (v48 < 0)
      v81 = *(_QWORD *)(v87 + v86[7]);
    else
      v81 = v48 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v87 + v86[7]));
    v49 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease(v48);
  }
  else
  {
    v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v50 = 1;
  if (v46 < v49)
    v50 = 2;
  v51 = *(_BYTE *)(v47
                 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_shiftDirection);
  if (v51)
    v52 = v50;
  else
    v52 = 2;
  if ((v51 & 1) == 0 && v46 >= v49)
    v52 = ((unint64_t)sub_10023DEF0(v37, v48) & 1) == 0;
  if (v84)
  {
    if (v37 < 0)
      v54 = v37;
    else
      v54 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v37);
    v53 = (void *)_CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease(v37);
    if (!v53)
      goto LABEL_77;
  }
  else
  {
    v53 = *(void **)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v53)
      goto LABEL_77;
  }
  result = (unint64_t)v53 - 1;
  if (__OFSUB__(v53, 1))
  {
    __break(1u);
    goto LABEL_108;
  }
  if ((v37 & 0xC000000000000001) != 0)
  {
LABEL_108:
    v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v37);
    goto LABEL_76;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v56 = *(id *)(v37 + 8 * result + 32);
LABEL_76:
    v53 = v56;
LABEL_77:
    swift_bridgeObjectRelease(v37);
    v57 = swift_allocObject(&unk_1005D5B58, 32, 7);
    *(_QWORD *)(v57 + 16) = v89;
    *(_QWORD *)(v57 + 24) = v90;
    swift_retain();
    sub_1001DA02C(v7, v53, 0, 1, v52, v52 != 0, (void (*)(__n128))sub_10010DF60, v57);
    swift_bridgeObjectRelease(v7);
    swift_release(v57);

LABEL_90:
    return sub_10007C720((uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  }
  __break(1u);
  return result;
}

void sub_10026BCF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id i;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  id v48;
  id v49;
  char v50;
  char v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  Swift::Int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;

  v3 = v2;
  v93 = a2;
  v94 = type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(0);
  __chkstk_darwin(v94);
  v95 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 48);
  v10 = _swiftEmptyArrayStorage;
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(v3 + 56);
    ObjectType = swift_getObjectType(Strong);
    v92 = (id)objc_opt_self(DOCConcreteLocation);
    v14 = objc_msgSend(v92, "browseStartingPointsLocation");
    v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource()), "init");
    v16 = &v8[v6[9]];
    *(_OWORD *)v16 = 0u;
    *((_OWORD *)v16 + 1) = 0u;
    UUID.init()(v15);
    *(_QWORD *)&v8[v6[5]] = v14;
    *(_QWORD *)&v8[v6[6]] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v8[v6[7]] = 0;
    *(_QWORD *)&v8[v6[8]] = v15;
    LOBYTE(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 8))(v8, ObjectType, v12);
    swift_unknownObjectRelease(v11);
    sub_10007C720((uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
    if ((v12 & 1) != 0)
    {
      v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v18 = swift_allocObject(v17, 40, 7);
      *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
      v19 = objc_msgSend(v92, "browseStartingPointsLocation");
      *(_QWORD *)(v18 + 32) = v19;
      v98 = (_QWORD *)v18;
      specialized Array._endMutation()(v19);
      v10 = v98;
    }
  }
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, &v98, 0, 0);
  v21 = *v20;
  v97 = v10;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v10);
  sub_10008862C(v21);
  v22 = (uint64_t)v97;
  v23 = v3 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, &v97, 0, 0);
  v24 = *(_QWORD *)(v23 + v6[6]);
  v96 = (uint64_t)v10;
  v25 = swift_bridgeObjectRetain(v24);
  sub_10008862C(v25);
  v26 = v96;
  v27 = *(id *)(v23 + v6[5]);
  v28 = swift_bridgeObjectRetain(v26);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
  specialized Array._endMutation()(v31);
  v32 = v96;
  swift_bridgeObjectRelease(v26);

  v33 = (unint64_t)v22 >> 62;
  if (!((unint64_t)v22 >> 62))
  {
    v34 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    if (v34)
      goto LABEL_8;
LABEL_82:
    v38 = v3;
    swift_bridgeObjectRelease(v22);
    v37 = 0;
    v39 = (unint64_t)v32 >> 62;
    if ((unint64_t)v32 >> 62)
      goto LABEL_83;
    goto LABEL_14;
  }
  if (v22 < 0)
    v89 = v22;
  else
    v89 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v34 = _CocoaArrayWrapper.endIndex.getter(v89);
  if (!v34)
    goto LABEL_82;
LABEL_8:
  v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
    goto LABEL_92;
  if ((v22 & 0xC000000000000001) != 0)
    goto LABEL_93;
  if ((v35 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_95;
  }
  if (v35 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  for (i = *(id *)(v22 + 8 * v35 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v22))
  {
    v37 = i;
    v38 = v3;
    swift_bridgeObjectRelease(v22);
    v39 = (unint64_t)v32 >> 62;
    if ((unint64_t)v32 >> 62)
      break;
LABEL_14:
    v40 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v32);
    if (!v40)
      goto LABEL_87;
LABEL_15:
    v35 = v40 - 1;
    if (__OFSUB__(v40, 1))
      goto LABEL_88;
    v91 = v32 & 0xC000000000000001;
    if ((v32 & 0xC000000000000001) != 0)
      goto LABEL_89;
    if ((v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v35 < *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v41 = *(id *)(v32 + 8 * v35 + 32);
      goto LABEL_20;
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    ;
  }
LABEL_83:
  if (v32 < 0)
    v90 = v32;
  else
    v90 = v32 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v32);
  v40 = _CocoaArrayWrapper.endIndex.getter(v90);
  if (v40)
    goto LABEL_15;
LABEL_87:
  swift_bridgeObjectRelease(v32);

  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v32);
LABEL_20:
  v42 = v41;
  swift_bridgeObjectRelease(v32);
  v44 = v94;
  v43 = v95;
  sub_10007C6DC(v23, (uint64_t)&v95[*(int *)(v94 + 20)], type metadata accessor for DOCBrowserHistoryItem);
  *v43 = 2;
  *(_QWORD *)&v43[*(int *)(v44 + 24)] = v32;
  v45 = *(int *)(v44 + 28);
  v46 = v43;
  *(_QWORD *)&v43[v45] = v22;
  v47 = v37;
  v92 = v42;
  if (v37)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v32);
    v48 = v42;
    v49 = v37;
    v50 = static NSObject.== infix(_:_:)(v49, v48);

    if ((v50 & 1) != 0)
    {
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v22);

      v51 = 2;
      goto LABEL_76;
    }
  }
  else
  {
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v32);
  }
  if ((*(_BYTE *)(v38
                 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_shiftDirection) & 1) == 0)
  {
    swift_bridgeObjectRelease(v32);
    v53 = v92;
    if (v33)
    {
      if (v22 < 0)
        v59 = v22;
      else
        v59 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v54 = _CocoaArrayWrapper.endIndex.getter(v59);
      swift_bridgeObjectRelease(v22);
      if (v54 >= 2)
      {
        swift_bridgeObjectRetain(v22);
        v75 = _CocoaArrayWrapper.endIndex.getter(v59);
        swift_bridgeObjectRelease(v22);
        if (v75 < 0)
        {
LABEL_101:
          __break(1u);
          return;
        }
        swift_bridgeObjectRetain(v22);
        v55 = _CocoaArrayWrapper.endIndex.getter(v59);
        swift_bridgeObjectRelease(v22);
        goto LABEL_64;
      }
    }
    else
    {
      v54 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      v55 = v54;
      if ((unint64_t)v54 >= 2)
      {
LABEL_64:
        v76 = v54 - 1;
        if (v55 >= v76)
        {
          if ((v22 & 0xC000000000000001) != 0)
          {
            sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
            v77 = 0;
            do
            {
              v78 = v77 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v77);
              v77 = v78;
            }
            while (v76 != v78);
          }
          if (v33)
          {
            if (v22 < 0)
              v83 = v22;
            else
              v83 = v22 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v22);
            v80 = _CocoaArrayWrapper.subscript.getter(0, v76, v83);
            v81 = v84;
            v79 = v85;
            v82 = v86;
            swift_bridgeObjectRelease_n(v22, 2);
          }
          else
          {
            v79 = 0;
            v80 = v22 & 0xFFFFFFFFFFFFFF8;
            v81 = (v22 & 0xFFFFFFFFFFFFFF8) + 32;
            v82 = (2 * v76) | 1;
          }
          sub_1000DFEF8((uint64_t)v53, v80, v81, v79, v82);
          v88 = v87;

          swift_unknownObjectRelease(v80);
          if ((v88 & 1) != 0)
          {
            v51 = 1;
LABEL_76:
            *v46 = v51;
          }
          goto LABEL_77;
        }
        goto LABEL_99;
      }
    }
    swift_bridgeObjectRelease(v22);

    goto LABEL_77;
  }
  swift_bridgeObjectRelease(v22);
  if (v39)
  {
    if (v32 < 0)
      v56 = v32;
    else
      v56 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v52 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v52 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v57 = v52 - 1;
  if (__OFSUB__(v52, 1))
    goto LABEL_96;
  if (v57 < 0)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  if (!v39)
  {
    v58 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_48;
  }
  if (v32 < 0)
    v60 = v32;
  else
    v60 = v32 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v32);
  v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease(v32);
  if (v61 < 0)
    goto LABEL_100;
  swift_bridgeObjectRetain(v32);
  v58 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease(v32);
LABEL_48:
  if (v58 < v57)
    goto LABEL_98;
  if (v91 && v57)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    v62 = 0;
    do
    {
      v63 = v62 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v62);
      v62 = v63;
    }
    while (v57 != v63);
  }
  if (v39)
  {
    if (v32 < 0)
      v71 = v32;
    else
      v71 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v65 = _CocoaArrayWrapper.subscript.getter(0, v57, v71);
    v66 = v72;
    v64 = v73;
    v67 = v74;
    swift_bridgeObjectRelease_n(v32, 2);
    if (!v47)
      goto LABEL_61;
LABEL_55:
    v68 = v47;
    sub_1000DFEF8((uint64_t)v68, v65, v66, v64, v67);
    v70 = v69;
    swift_unknownObjectRelease(v65);

    if ((v70 & 1) != 0)
      *v46 = 0;
  }
  else
  {
    v64 = 0;
    v65 = v32 & 0xFFFFFFFFFFFFFF8;
    v66 = (v32 & 0xFFFFFFFFFFFFFF8) + 32;
    v67 = (2 * v57) | 1;
    if (v47)
      goto LABEL_55;
LABEL_61:
    swift_unknownObjectRelease(v65);

  }
LABEL_77:
  sub_1001D0788((uint64_t)v46, v93, type metadata accessor for DOCBrowserHistoryShiftRequest.Transition);
}

uint64_t sub_10026C56C()
{
  uint64_t v0;

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_previousItem, &qword_10064A600);
  return sub_10007C720(v0 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_10026C5AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_10008F5C0(v0 + 48);

  swift_release(*(_QWORD *)(v0 + 80));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_previousItem, &qword_10064A600);
  sub_10007C720(v0 + OBJC_IVAR____TtC5FilesP33_A0212209A032AB6DA92AB2C9CF661A5F29DOCBrowserHistoryShiftRequest_targetItem, type metadata accessor for DOCBrowserHistoryItem);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10026C61C()
{
  return type metadata accessor for DOCBrowserHistoryShiftRequest(0);
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftRequest(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_10064A470, (uint64_t)&nominal type descriptor for DOCBrowserHistoryShiftRequest);
}

void sub_10026C638(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1000AEC44(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for DOCBrowserHistoryItem(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_1004DED60;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 240);
    }
  }
}

uint64_t destroy for LogID(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for LogID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for LogID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v3 = a2[3];
  v4 = a1[3];
  a1[3] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for LogID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LogID()
{
  return &type metadata for LogID;
}

uint64_t sub_10026C824()
{
  _QWORD *v0;

  return static String._fromSubstring(_:)(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_10026C830()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;

  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_10026C90C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10026A9BC(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftRequest.Transition(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_10064A668, (uint64_t)&nominal type descriptor for DOCBrowserHistoryShiftRequest.Transition);
}

uint64_t sub_10026C974()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10026C998(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  id v14;
  Class isa;
  __n128 v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  void *object;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t ObjCClassMetadata;
  NSString v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String_optional v41;
  void *v42;
  NSString v43;
  void *v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  id v50;
  Class v51;
  __n128 v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  void *v61;
  NSString v62;
  void *v63;
  id v64;
  uint64_t v65;
  NSString v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String_optional v76;
  void *v77;
  NSString v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  Swift::String v97;
  Class v98;
  void *v99;
  id v100;
  id v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  Swift::String v106;
  uint64_t v107;
  unsigned __int8 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  uint64_t v114;
  Swift::String v115;
  Class v116;
  Swift::OpaquePointer v117;
  UIMenu v118;
  void **aBlock;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, void *);
  void *v122;
  double (*v123)(void (*)(_QWORD *), uint64_t);
  uint64_t v124;
  UIImage_optional v125;
  UIImage_optional v126;
  UIAction_optional v127;
  UIAction_optional v128;
  UIImage_optional v129;
  UIImage_optional v130;
  UIMenu_optional v131;
  UIMenu_optional v132;
  Swift::String swift__string;
  Swift::String swift__stringa;
  Swift::String v135;
  Swift::String v136;

  v3 = v2;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit(v3 + 16);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + 80) = 0;
  *(_BYTE *)(v3 + 88) = 1;
  *(_QWORD *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 40) = a1;
  v6 = (void *)objc_opt_self(UIImage);
  v7 = a1;
  v8 = a2;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v6, "__systemImageNamedSwift:", v9);

  if (!v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  v11 = swift_allocObject(&unk_1005D5BF8, 24, 7);
  swift_weakInit(v11 + 16, v3);
  type metadata accessor for DOCHistoryNavigationButtonItem();
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v12 = swift_allocObject(&unk_1005D5C20, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10026D8EC;
  *(_QWORD *)(v12 + 24) = v11;
  swift_retain_n(v11, 2);
  LOBYTE(v12) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v13, 0, 0, 0, sub_100066584, v12);
  v14 = v10;
  v125.value.super.isa = (Class)v10;
  v125.is_nil = v12;
  v127.value.super.super.isa = 0;
  isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v125, v127, v131).super.super.isa;
  *((_BYTE *)isa + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_direction) = 0;

  swift_release_n(v11, 2, v16);
  v17 = *(void **)(v3 + 56);
  *(_QWORD *)(v3 + 56) = isa;

  v18 = *(void **)(v3 + 56);
  if (!v18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v19 = v18;
  v20 = (id)_DocumentManagerBundle(v19);
  if (!v20)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v21 = v20;
  v22._countAndFlagsBits = 0xD000000000000013;
  swift__string._object = (void *)0x800000010051EF80;
  v22._object = (void *)0x800000010051EF60;
  v23.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v23.value._object = (void *)0xEB00000000656C62;
  v24._countAndFlagsBits = 1801675074;
  v24._object = (void *)0xE400000000000000;
  swift__string._countAndFlagsBits = 0xD000000000000020;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, swift__string)._object;

  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v26, swift_bridgeObjectRelease(object).n128_f64[0]);

  v27 = *(void **)(v3 + 56);
  if (!v27)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v28 = (void *)objc_opt_self(DOCAXIdentifier);
  v29 = v27;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v28, "navBarButton"));
  v31 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "backInHistory");
  if (!v31)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v34 = v33;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  objc_msgSend(v29, "setAccessibilityIdentifier:", v31, v32);

  v35 = *(void **)(v3 + 56);
  if (!v35)
    goto LABEL_32;
  v36 = v35;
  v37 = (id)_DocumentManagerBundle(v36);
  if (!v37)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v38 = v37;
  v39._countAndFlagsBits = 0xD00000000000001CLL;
  v40._countAndFlagsBits = 0xD000000000000021;
  swift__stringa._object = (void *)0x800000010051F000;
  v39._object = (void *)0x800000010051EFB0;
  v40._object = (void *)0x800000010051EFD0;
  v41.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v41.value._object = (void *)0xEB00000000656C62;
  swift__stringa._countAndFlagsBits = 0xD000000000000020;
  v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v41, (NSBundle)v38, v40, swift__stringa)._object;

  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "setAccessibilityHint:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v44 = *(void **)(v3 + 56);
  if (!v44)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v44, "setSpringLoaded:", 1);
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v6, "__systemImageNamedSwift:", v45);

  if (!v46)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v47 = swift_allocObject(&unk_1005D5BF8, 24, 7);
  swift_weakInit(v47 + 16, v3);
  v48 = swift_allocObject(&unk_1005D5C48, 32, 7);
  *(_QWORD *)(v48 + 16) = sub_10026D8F4;
  *(_QWORD *)(v48 + 24) = v47;
  swift_retain_n(v47, 2);
  LOBYTE(v48) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v49, 0, 0, 0, sub_10010DF60, v48);
  v50 = v46;
  v126.value.super.isa = (Class)v46;
  v126.is_nil = v48;
  v128.value.super.super.isa = 0;
  v51 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v126, v128, v132).super.super.isa;
  *((_BYTE *)v51 + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_direction) = 1;

  swift_release_n(v47, 2, v52);
  v53 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v51;

  v54 = *(void **)(v3 + 64);
  if (!v54)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v55 = v54;
  v56 = (id)_DocumentManagerBundle(v55);
  if (!v56)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v57 = v56;
  v58._countAndFlagsBits = 0xD000000000000016;
  v135._countAndFlagsBits = 0xD000000000000023;
  v135._object = (void *)0x800000010051F050;
  v58._object = (void *)0x800000010051F030;
  v59.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v59.value._object = (void *)0xEB00000000656C62;
  v60._countAndFlagsBits = 0x64726177726F46;
  v60._object = (void *)0xE700000000000000;
  v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v135)._object;

  v62 = String._bridgeToObjectiveC()();
  objc_msgSend(v55, "setTitle:", v62, swift_bridgeObjectRelease(v61).n128_f64[0]);

  v63 = *(void **)(v3 + 64);
  if (!v63)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v64 = v63;
  v65 = swift_getObjCClassMetadata(objc_msgSend(v28, "navBarButton"));
  v66 = objc_msgSend((id)swift_getObjCClassFromMetadata(v65), "forwardInHistory");
  if (!v66)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v69 = v68;
    v66 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v67 = swift_bridgeObjectRelease(v69).n128_u64[0];
  }
  objc_msgSend(v64, "setAccessibilityIdentifier:", v66, v67);

  v70 = *(void **)(v3 + 64);
  if (!v70)
    goto LABEL_39;
  v71 = v70;
  v72 = (id)_DocumentManagerBundle(v71);
  if (!v72)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v73 = v72;
  v74._countAndFlagsBits = 0xD00000000000001FLL;
  v75._countAndFlagsBits = 0xD000000000000021;
  v136._countAndFlagsBits = 0xD000000000000023;
  v136._object = (void *)0x800000010051F0A0;
  v74._object = (void *)0x800000010051F080;
  v75._object = (void *)0x800000010051EFD0;
  v76.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v76.value._object = (void *)0xEB00000000656C62;
  v77 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v76, (NSBundle)v73, v75, v136)._object;

  v78 = String._bridgeToObjectiveC()();
  objc_msgSend(v71, "setAccessibilityHint:", v78, swift_bridgeObjectRelease(v77).n128_f64[0]);

  v79 = *(void **)(v3 + 64);
  if (!v79)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(v79, "setSpringLoaded:", 1);
  v80 = *(void **)(v3 + 56);
  if (!v80)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return;
  }
  v81 = v80;
  v82 = objc_msgSend(v81, "accessibilityIdentifier");
  if (v82)
  {
    v83 = v82;
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
    v86 = v85;

    aBlock = (void **)v84;
    swift_bridgeObjectRetain(v86);
    v87._countAndFlagsBits = 0x756E656D2ELL;
    v87._object = (void *)0xE500000000000000;
    String.append(_:)(v87);
    swift_bridgeObjectRelease(v86);
    v88 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v86);
  }
  else
  {
    v88 = 0;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v89 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v90 = swift_allocObject(v89, 40, 7);
  *(_OWORD *)(v90 + 16) = xmmword_1004D9B40;
  v91 = (void *)objc_opt_self(UIDeferredMenuElement);
  v92 = swift_allocObject(&unk_1005D5BF8, 24, 7);
  swift_weakInit(v92 + 16, v3);
  v93 = swift_allocObject(&unk_1005D5C70, 25, 7);
  *(_QWORD *)(v93 + 16) = v92;
  *(_BYTE *)(v93 + 24) = 0;
  v123 = sub_10026D920;
  v124 = v93;
  aBlock = _NSConcreteStackBlock;
  v120 = 1107296256;
  v121 = sub_100458078;
  v122 = &unk_1005D5C88;
  v94 = _Block_copy(&aBlock);
  v95 = objc_msgSend(v91, "elementWithUncachedProvider:", v94, swift_release(v124).n128_f64[0]);
  _Block_release(v94);
  *(_QWORD *)(v90 + 32) = v95;
  aBlock = (void **)v90;
  specialized Array._endMutation()(v96);
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  v129.value.super.isa = 0;
  v129.is_nil = v88;
  v98 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v97, (Swift::String_optional)0, v129, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, v117).super.super.isa;

  objc_msgSend(v81, "setMenu:", v98);
  v99 = *(void **)(v3 + 64);
  if (!v99)
    goto LABEL_43;
  v100 = v99;
  v101 = objc_msgSend(v100, "accessibilityIdentifier");
  if (v101)
  {
    v102 = v101;
    v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
    v105 = v104;

    aBlock = (void **)v103;
    v120 = v105;
    swift_bridgeObjectRetain(v105);
    v106._countAndFlagsBits = 0x756E656D2ELL;
    v106._object = (void *)0xE500000000000000;
    String.append(_:)(v106);
    swift_bridgeObjectRelease(v105);
    v107 = v120;
    v108 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v107);
  }
  else
  {
    v108 = 0;
  }
  v109 = swift_allocObject(v89, 40, 7);
  *(_OWORD *)(v109 + 16) = xmmword_1004D9B40;
  v110 = swift_allocObject(&unk_1005D5BF8, 24, 7);
  swift_weakInit(v110 + 16, v3);
  v111 = swift_allocObject(&unk_1005D5CC0, 25, 7);
  *(_QWORD *)(v111 + 16) = v110;
  *(_BYTE *)(v111 + 24) = 1;
  v123 = sub_10026E4DC;
  v124 = v111;
  aBlock = _NSConcreteStackBlock;
  v120 = 1107296256;
  v121 = sub_100458078;
  v122 = &unk_1005D5CD8;
  v112 = _Block_copy(&aBlock);
  v113 = objc_msgSend(v91, "elementWithUncachedProvider:", v112, swift_release(v124).n128_f64[0]);
  _Block_release(v112);
  *(_QWORD *)(v109 + 32) = v113;
  aBlock = (void **)v109;
  specialized Array._endMutation()(v114);
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  v130.value.super.isa = 0;
  v130.is_nil = v108;
  v116 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v115, (Swift::String_optional)0, v130, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, (Swift::OpaquePointer)v118.super.super.isa).super.super.isa;

  objc_msgSend(v100, "setMenu:", v116);
  sub_1002691C8();
  sub_1002690B4();
}

uint64_t sub_10026D514(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.BrowserHistory.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v18 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v20 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v19 = sub_1000544FC(v18, a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[History] %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_10026D6DC()
{
  return sub_10026A0F0(1);
}

void sub_10026D6E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  sub_10026AB94(0);
  v9 = v8;
  v11 = v10;
  if (!((unint64_t)v8 >> 62))
  {
    v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v9);
    v17 = 0;
    goto LABEL_14;
  }
  if (v8 < 0)
    v15 = v8;
  else
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v8);
  v12 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v9);
  if (!v12)
    goto LABEL_13;
LABEL_3:
  v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9);
    goto LABEL_8;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(v9 + 8 * v13 + 32);
LABEL_8:
    v17 = v14;
    swift_bridgeObjectRelease(v9);
LABEL_14:
    v16 = swift_allocObject(&unk_1005D5BA8, 32, 7);
    *(_QWORD *)(v16 + 16) = a4;
    *(_QWORD *)(v16 + 24) = a5;
    swift_retain();
    sub_1001DA02C(v11, v17, 1, 1, 1, a2 & 1, (void (*)(__n128))sub_10010DF60, v16);
    swift_release(v16);
    swift_bridgeObjectRelease(v11);

    return;
  }
  __break(1u);
}

uint64_t sub_10026D848()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10026D874(uint64_t a1)
{
  uint64_t v1;

  return sub_100269034(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10026D87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10026D8C0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10026D8E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002684DC(a1, a2, v2);
}

uint64_t sub_10026D8EC()
{
  uint64_t v0;

  return sub_100267B80(v0);
}

uint64_t sub_10026D8F4()
{
  uint64_t v0;

  return sub_100267C4C(v0);
}

uint64_t sub_10026D8FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_10026D920(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_1002694C0(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_10026D930()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[6]));
  v7 = (_QWORD *)(v0 + v4 + v1[9]);
  if (v7[3])
    sub_100068588(v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_10026D9F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8) + 80);
  return sub_100269D90(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + ((v3 + 25) & ~v3));
}

uint64_t *sub_10026DA34(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    v12 = v11[5];
    v13 = *(void **)&v9[v12];
    *(_QWORD *)&v8[v12] = v13;
    v14 = v11[6];
    v15 = *(_QWORD *)&v9[v14];
    *(_QWORD *)&v8[v14] = v15;
    v16 = v11[7];
    v17 = *(void **)&v9[v16];
    *(_QWORD *)&v8[v16] = v17;
    v18 = v11[8];
    v19 = *(void **)&v9[v18];
    *(_QWORD *)&v8[v18] = v19;
    v20 = v11[9];
    v21 = &v8[v20];
    v22 = &v9[v20];
    v23 = *((_QWORD *)v22 + 3);
    v24 = v13;
    swift_bridgeObjectRetain(v15);
    v25 = v17;
    v26 = v19;
    if (v23)
    {
      *((_QWORD *)v21 + 3) = v23;
      (**(void (***)(_BYTE *, char *, uint64_t))(v23 - 8))(v21, v22, v23);
    }
    else
    {
      v28 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v28;
    }
    v29 = a3[6];
    v30 = a3[7];
    v31 = *(uint64_t *)((char *)a2 + v29);
    *(uint64_t *)((char *)v4 + v29) = v31;
    v32 = *(uint64_t *)((char *)a2 + v30);
    *(uint64_t *)((char *)v4 + v30) = v32;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v32);
  }
  return v4;
}

double sub_10026DB84(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  double result;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v6[6]));
  v7 = (_QWORD *)(v4 + v6[9]);
  if (v7[3])
    sub_100068588(v7);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6]));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7])).n128_u64[0];
  return result;
}

_BYTE *sub_10026DC34(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v11 = v10[5];
  v12 = *(void **)&v8[v11];
  *(_QWORD *)&v7[v11] = v12;
  v13 = v10[6];
  v14 = *(_QWORD *)&v8[v13];
  *(_QWORD *)&v7[v13] = v14;
  v15 = v10[7];
  v16 = *(void **)&v8[v15];
  *(_QWORD *)&v7[v15] = v16;
  v17 = v10[8];
  v18 = *(void **)&v8[v17];
  *(_QWORD *)&v7[v17] = v18;
  v19 = v10[9];
  v20 = &v7[v19];
  v21 = &v8[v19];
  v22 = *((_QWORD *)v21 + 3);
  v23 = v12;
  swift_bridgeObjectRetain(v14);
  v24 = v16;
  v25 = v18;
  if (v22)
  {
    *((_QWORD *)v20 + 3) = v22;
    (**(void (***)(_BYTE *, _BYTE *, uint64_t))(v22 - 8))(v20, v21, v22);
  }
  else
  {
    v26 = *((_OWORD *)v21 + 1);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v26;
  }
  v27 = a3[6];
  v28 = a3[7];
  v29 = *(_QWORD *)&a2[v27];
  *(_QWORD *)&a1[v27] = v29;
  v30 = *(_QWORD *)&a2[v28];
  *(_QWORD *)&a1[v28] = v30;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v30);
  return a1;
}

_BYTE *sub_10026DD58(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v11 = v10[5];
  v12 = *(void **)&v8[v11];
  v13 = *(void **)&v7[v11];
  *(_QWORD *)&v7[v11] = v12;
  v14 = v12;

  v15 = v10[6];
  v16 = *(_QWORD *)&v8[v15];
  v17 = *(_QWORD *)&v7[v15];
  *(_QWORD *)&v7[v15] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = v10[7];
  v19 = *(void **)&v7[v18];
  v20 = *(void **)&v8[v18];
  *(_QWORD *)&v7[v18] = v20;
  v21 = v20;

  v22 = v10[8];
  v23 = *(void **)&v8[v22];
  v24 = *(void **)&v7[v22];
  *(_QWORD *)&v7[v22] = v23;
  v25 = v23;

  v26 = v10[9];
  v27 = &v7[v26];
  v28 = &v8[v26];
  v29 = *((_QWORD *)v28 + 3);
  if (!*((_QWORD *)v27 + 3))
  {
    if (v29)
    {
      *((_QWORD *)v27 + 3) = v29;
      (**(void (***)(_BYTE *, _BYTE *))(v29 - 8))(v27, v28);
      goto LABEL_8;
    }
LABEL_7:
    v30 = *((_OWORD *)v28 + 1);
    *(_OWORD *)v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v30;
    goto LABEL_8;
  }
  if (!v29)
  {
    sub_100068588(v27);
    goto LABEL_7;
  }
  sub_10026DED0(v27, v28);
LABEL_8:
  v31 = a3[6];
  v32 = *(_QWORD *)&a2[v31];
  v33 = *(_QWORD *)&a1[v31];
  *(_QWORD *)&a1[v31] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = a3[7];
  v35 = *(_QWORD *)&a2[v34];
  v36 = *(_QWORD *)&a1[v34];
  *(_QWORD *)&a1[v34] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

_QWORD *sub_10026DED0(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

_BYTE *sub_10026E030(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  *(_QWORD *)&v7[v10[5]] = *(_QWORD *)&v8[v10[5]];
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  *(_QWORD *)&v7[v10[7]] = *(_QWORD *)&v8[v10[7]];
  *(_QWORD *)&v7[v10[8]] = *(_QWORD *)&v8[v10[8]];
  v11 = v10[9];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  return a1;
}

_BYTE *sub_10026E0FC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  v11 = v10[5];
  v12 = *(void **)&v7[v11];
  *(_QWORD *)&v7[v11] = *(_QWORD *)&v8[v11];

  v13 = v10[6];
  v14 = *(_QWORD *)&v7[v13];
  *(_QWORD *)&v7[v13] = *(_QWORD *)&v8[v13];
  swift_bridgeObjectRelease(v14);
  v15 = v10[7];
  v16 = *(void **)&v7[v15];
  *(_QWORD *)&v7[v15] = *(_QWORD *)&v8[v15];

  v17 = v10[8];
  v18 = *(void **)&v7[v17];
  *(_QWORD *)&v7[v17] = *(_QWORD *)&v8[v17];

  v19 = v10[9];
  v20 = &v7[v19];
  if (*((_QWORD *)v20 + 3))
    sub_100068588(v20);
  v21 = *(_OWORD *)&v8[v19 + 16];
  *(_OWORD *)v20 = *(_OWORD *)&v8[v19];
  *((_OWORD *)v20 + 1) = v21;
  v22 = a3[6];
  v23 = *(_QWORD *)&a1[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_bridgeObjectRelease(v23);
  v24 = a3[7];
  v25 = *(_QWORD *)&a1[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t sub_10026E210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026E21C);
}

uint64_t sub_10026E21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10026E29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026E2A8);
}

uint64_t sub_10026E2A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DOCBrowserHistoryItem(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_10026E324(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1004DEDB8;
  result = type metadata accessor for DOCBrowserHistoryItem(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryShiftRequest.TransitionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10026E3F4 + 4 * byte_1004DEC25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10026E428 + 4 * byte_1004DEC20[v4]))();
}

uint64_t sub_10026E428(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026E430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10026E438);
  return result;
}

uint64_t sub_10026E444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10026E44CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10026E450(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10026E458(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryShiftRequest.TransitionType()
{
  return &type metadata for DOCBrowserHistoryShiftRequest.TransitionType;
}

unint64_t sub_10026E478()
{
  unint64_t result;

  result = qword_10064A6A8;
  if (!qword_10064A6A8)
  {
    result = swift_getWitnessTable(&unk_1004DEE20, &type metadata for DOCBrowserHistoryShiftRequest.TransitionType);
    atomic_store(result, (unint64_t *)&qword_10064A6A8);
  }
  return result;
}

void sub_10026E4F4(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE *v9;
  char isEscapingClosureAtFileLocation;
  _QWORD v11[5];
  uint64_t v12;

  v2 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming;
  if ((v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] & 1) == 0)
  {
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController];
    *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController] = a1;
    swift_retain();
    swift_release(v3);
    v1[v2] = 1;
    v4 = (void *)objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_1005D5FB0, 24, 7);
    *(_QWORD *)(v5 + 16) = v1;
    v6 = swift_allocObject(&unk_1005D5FD8, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_100267A68;
    *(_QWORD *)(v6 + 24) = v5;
    v11[4] = sub_10010DB64;
    v12 = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10006655C;
    v11[3] = &unk_1005D5FF0;
    v7 = _Block_copy(v11);
    v8 = v12;
    v9 = v1;
    swift_retain();
    objc_msgSend(v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 101, 711, 40, 1);
    swift_release(v5);
    swift_release(v6);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_10026E65C(int a1, char a2)
{
  void *v2;
  void *v3;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject **v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  char isEscapingClosureAtFileLocation;
  uint8_t *v28;
  NSObject **v29;
  uint8_t *v30;
  int v31;
  void **aBlock;
  _QWORD v33[4];
  uint64_t v34;

  v3 = v2;
  LODWORD(v5) = a1;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v11 = Logger.Rename.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
    v12 = v3;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v31 = (int)v5;
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = (NSObject **)swift_slowAlloc(8, -1);
      v30 = v15;
      *(_DWORD *)v15 = 138412290;
      v28 = v15 + 4;
      aBlock = (void **)&v12->isa;
      v5 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v33);
      v16 = v29;
      *v29 = v12;

      LOBYTE(v5) = v31;
      v17 = v14;
      v18 = v30;
      _os_log_impl((void *)&_mh_execute_header, v13, v17, "Forcing teardown of: %@", v30, 0xCu);
      v19 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v16, 1, v19);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {

      v13 = v12;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v20 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming;
  }
  else
  {
    v20 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming;
    if ((*((_BYTE *)v3 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming) & 1) == 0)
      return;
  }
  *((_BYTE *)v3 + v20) = 0;
  v21 = (void *)objc_opt_self(UIView);
  v22 = swift_allocObject(&unk_1005D5F38, 25, 7);
  *(_QWORD *)(v22 + 16) = v3;
  *(_BYTE *)(v22 + 24) = v5 & 1;
  v23 = swift_allocObject(&unk_1005D5F60, 32, 7);
  *(_QWORD *)(v23 + 16) = sub_100271E2C;
  *(_QWORD *)(v23 + 24) = v22;
  v33[3] = sub_10006657C;
  v34 = v23;
  aBlock = _NSConcreteStackBlock;
  v33[0] = 1107296256;
  v33[1] = sub_10006655C;
  v33[2] = &unk_1005D5F78;
  v24 = _Block_copy(&aBlock);
  v25 = v34;
  v26 = v3;
  swift_retain();
  objc_msgSend(v21, "performWithoutAnimation:", v24, swift_release(v25).n128_f64[0]);
  _Block_release(v24);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v23, "", 101, 727, 40, 1);
  swift_release(v22);
  swift_release(v23);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall DOCItemCollectionCell.didUpdateContents()()
{
  _QWORD *v0;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x360))();
}

double sub_10026E97C(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void *v23;
  uint64_t v24;
  double result;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  LODWORD(v2) = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.Rename.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = v1;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v29 = v2;
    v2 = v12;
    v26 = (_QWORD *)swift_slowAlloc(8, -1);
    v27 = swift_slowAlloc(32, -1);
    v31 = v27;
    *(_DWORD *)v2 = 136315394;
    v30 = sub_1000544FC(0xD000000000000012, 0x800000010051F4B0, &v31);
    v28 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    *(_WORD *)(v2 + 12) = 2112;
    v30 = (uint64_t)v9;
    v13 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    v14 = v26;
    *v26 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s %@", (uint8_t *)v2, 0x16u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    v17 = v2;
    LOBYTE(v2) = v29;
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v18 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController;
  v19 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController];
  if (v19)
  {
    swift_retain();
    sub_10038F134(v2 & 1);
    swift_release(v19);
  }
  v20 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  v21 = *(char **)&v9[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  if (v21)
  {
    v22 = &v21[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate];
    *((_QWORD *)v22 + 1) = 0;
    swift_unknownObjectWeakAssign(v22, 0);
    objc_msgSend(v21, "removeFromSuperview");
    v23 = *(void **)&v9[v20];
  }
  else
  {
    v23 = 0;
  }
  *(_QWORD *)&v9[v20] = 0;

  v24 = *(_QWORD *)&v9[v18];
  *(_QWORD *)&v9[v18] = 0;
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

void sub_10026EC50()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46[3];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.Rename.unsafeMutableAddressor(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    v43 = swift_slowAlloc(32, -1);
    v46[0] = v43;
    *(_DWORD *)v10 = 136315394;
    v12 = sub_1000544FC(0x6E65527075746573, 0xED00002928656D61, v46);
    v44 = v1;
    v45 = (_QWORD *)v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
    *(_WORD *)(v10 + 12) = 2112;
    v45 = v7;
    v13 = v7;
    v42 = v2;
    v14 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
    *v11 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s %@", (uint8_t *)v10, 0x16u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v11, 1, v15);
    swift_slowDealloc(v11, -1, -1);
    v16 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    v17 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v4, v44);
  }
  else
  {

    v17 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v18 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  v19 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
  if (v19)
    goto LABEL_13;
  v20 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x1F8))(v17);
  if (v20)
  {
    v21 = (char *)v20;
    sub_100076450();
    v23 = v22;
    v25 = v24;
    v26 = &v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    swift_beginAccess(&v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v46, 0, 0);
    v27 = *(_QWORD *)v26;
    if (v27)
    {
      swift_bridgeObjectRetain(v25);
      v28 = objc_msgSend((id)swift_unknownObjectRetain(v27), "filename");
      if (!v28)
      {
        __break(1u);
        return;
      }
      v29 = v28;
      v30 = objc_msgSend(v28, "pathExtension");

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      v34 = String.count.getter(v31, v33);
      swift_bridgeObjectRelease(v33);
      swift_unknownObjectRelease(v27);
      LOBYTE(v27) = v34 > 0;
    }
    else
    {
      swift_bridgeObjectRetain(v25);
    }
    sub_100076688();
    v35 = v36;

  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
    v35 = 1;
    LOBYTE(v27) = 1;
  }
  v37 = objc_allocWithZone((Class)type metadata accessor for DOCItemRenameTextView());
  v38 = sub_1002528C8(v23, v25, v27, v35 & 1);
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v39 = *(void **)((char *)v7 + v18);
  *(_QWORD *)((char *)v7 + v18) = v38;

  v19 = *(_QWORD *)((char *)v7 + v18);
  if (v19)
  {
LABEL_13:
    v40 = v19 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate;
    *(_QWORD *)(v40 + 8) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign(v40, v7);
  }
}

void sub_10026F030(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView) = a1;
  v4 = a1;

  v5 = *(_QWORD *)(v1 + v2);
  if (v5)
  {
    v6 = v5 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate;
    *(_QWORD *)(v6 + 8) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign(v6, v1);
  }
}

id sub_10026F0A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v1, "convertRect:toCoordinateSpace:", v0);
}

id sub_10026F0E4()
{
  return sub_10026F10C(&OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemStatusBadge, &OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded);
}

id sub_10026F0F8()
{
  return sub_10026F10C(&OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemAccessStatusBadge, &OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded);
}

id sub_10026F10C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = type metadata accessor for DOCItemStatusBadgeView();
    v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
    objc_msgSend(v8, "setContentMode:", 0);
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    *(_BYTE *)(v2 + *a2) = 1;
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = v4;
  return v5;
}

void *DOCItemCollectionCell.cellContent.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DOCItemCollectionCell.cellContent.setter(void *a1)
{
  sub_100062A70(a1);

}

void (*DOCItemCollectionCell.cellContent.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent, v3, 0, 0);
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_10026F29C;
}

void sub_10026F29C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    sub_100062A70(v3);

    v3 = *v4;
  }
  else
  {
    sub_100062A70(*(void **)(*(_QWORD *)a1 + 24));
  }

  free(v2);
}

void sub_10026F304()
{
  _QWORD *v0;
  _QWORD *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  Class isa;
  void *v26;
  id v27;
  _BYTE *v28;
  id v29;
  uint64_t v30;

  v1 = v0;
  v2 = (unsigned __int8 *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge;
    v4 = v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge];
    if (v4 == 2)
    {
      v28 = v2;
      sub_100070070();
      if (!v5)
      {
        v28[v3] = 0;

        return;
      }

      v28[v3] = 1;
    }
    else
    {

      if ((v4 & 1) == 0)
        return;
    }
    v6 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX;
    if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX))
    {
      v7 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY;
      if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY))
      {
        v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
        v9 = objc_msgSend(v8, "superview");
        if (v9)
        {
          v10 = v9;
          v11 = sub_10026F0E4();
          objc_msgSend(v10, "addSubview:", v11);

          v12 = sub_10026F0E4();
          v13 = objc_msgSend(v12, "trailingAnchor");

          v14 = objc_msgSend(v8, "trailingAnchor");
          v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, 0.0);

          v16 = sub_10026F0E4();
          v17 = objc_msgSend(v16, "bottomAnchor");

          v18 = objc_msgSend(v8, "bottomAnchor");
          v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 0.0);

          v20 = (void *)objc_opt_self(NSLayoutConstraint);
          v21 = sub_10006922C((uint64_t *)&unk_1006441A0);
          v22 = swift_allocObject(v21, 48, 7);
          *(_OWORD *)(v22 + 16) = xmmword_1004DA350;
          *(_QWORD *)(v22 + 32) = v15;
          *(_QWORD *)(v22 + 40) = v19;
          v30 = v22;
          specialized Array._endMutation()(v22);
          sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
          v23 = v15;
          v24 = v19;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

          v26 = *(void **)((char *)v1 + v6);
          *(_QWORD *)((char *)v1 + v6) = v23;
          v27 = v23;

          v29 = *(id *)((char *)v1 + v7);
          *(_QWORD *)((char *)v1 + v7) = v24;

        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

void sub_10026F5F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  Class isa;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_10006FCE8();

    if ((v4 & 1) != 0)
    {
      v5 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX;
      if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX))
      {
        v6 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY;
        if (!*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY))
        {
          v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
          v8 = objc_msgSend(v7, "superview");
          if (v8)
          {
            v9 = v8;
            v10 = sub_10026F0F8();
            objc_msgSend(v9, "addSubview:", v10);

            v11 = sub_10026F0F8();
            v12 = objc_msgSend(v11, "leadingAnchor");

            v13 = objc_msgSend(v7, "leadingAnchor");
            v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 0.0);

            v15 = sub_10026F0F8();
            v16 = objc_msgSend(v15, "bottomAnchor");

            v17 = objc_msgSend(v7, "bottomAnchor");
            v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 0.0);

            v19 = (void *)objc_opt_self(NSLayoutConstraint);
            v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
            v21 = swift_allocObject(v20, 48, 7);
            *(_OWORD *)(v21 + 16) = xmmword_1004DA350;
            *(_QWORD *)(v21 + 32) = v14;
            *(_QWORD *)(v21 + 40) = v18;
            v28 = v21;
            specialized Array._endMutation()(v21);
            sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
            v22 = v14;
            v23 = v18;
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v19, "activateConstraints:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

            v25 = *(void **)((char *)v1 + v5);
            *(_QWORD *)((char *)v1 + v5) = v22;
            v26 = v22;

            v27 = *(id *)((char *)v1 + v6);
            *(_QWORD *)((char *)v1 + v6) = v23;

          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
}

void sub_10026F8A0(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, void ***, uint64_t, uint64_t);
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  id v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  char v49[24];

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v1) + 0x1F8))();
  if (!v4)
    goto LABEL_15;
  v5 = (void *)v4;
  v6 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v49, 0, 0);
  v7 = *v6;
  swift_unknownObjectRetain(v7);

  if (!v7)
    goto LABEL_15;
  v8 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate]);
  if (!Strong
    || (v10 = Strong,
        v11 = *((_QWORD *)v8 + 1),
        ObjectType = swift_getObjectType(Strong),
        LOBYTE(v11) = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 8))(v2, FPActionRename, ObjectType, v11), swift_unknownObjectRelease(v10), (v11 & 1) == 0))
  {
    swift_unknownObjectRelease(v7);
LABEL_15:
    v36 = objc_opt_self(UIView);
    v37 = swift_allocObject(&unk_1005D60F0, 32, 7);
    *(_QWORD *)(v37 + 16) = v2;
    *(_QWORD *)(v37 + 24) = 0x3FF0000000000000;
    v38 = swift_allocObject(&unk_1005D6118, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_100272278;
    *(_QWORD *)(v38 + 24) = v37;
    v47 = sub_10010DB64;
    v48 = v38;
    aBlock = _NSConcreteStackBlock;
    v44 = 1107296256;
    v45 = sub_10006655C;
    v46 = &unk_1005D6130;
    v39 = _Block_copy(&aBlock);
    v40 = v48;
    v41 = v2;
    swift_retain();
    objc_msgSend((id)v36, "performWithoutAnimation:", v39, swift_release(v40).n128_f64[0]);
    _Block_release(v39);
    LOBYTE(v36) = swift_isEscapingClosureAtFileLocation(v38, "", 101, 490, 44, 1);
    swift_release(v37);
    swift_release(v38);
    if ((v36 & 1) == 0)
      return;
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v42 = sub_100121134();
  if ((sub_1000DFDCC((uint64_t)objc_msgSend(a1, "state"), (uint64_t)&off_1005C0288) & 1) != 0)
    v13 = 0.35;
  else
    v13 = 1.0;
  v14 = objc_opt_self(UIView);
  v15 = swift_allocObject(&unk_1005D6168, 32, 7);
  *(_QWORD *)(v15 + 16) = v2;
  *(double *)(v15 + 24) = v13;
  v16 = swift_allocObject(&unk_1005D6190, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_1002722D8;
  *(_QWORD *)(v16 + 24) = v15;
  v47 = sub_10010DB64;
  v48 = v16;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_10006655C;
  v46 = &unk_1005D61A8;
  v17 = _Block_copy(&aBlock);
  v18 = v48;
  v19 = v2;
  swift_retain();
  objc_msgSend((id)v14, "performWithoutAnimation:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v16, "", 101, 490, 44, 1);
  swift_release(v15);
  *(_QWORD *)&v20 = swift_release(v16).n128_u64[0];
  if ((v14 & 1) != 0)
    goto LABEL_20;
  if (objc_msgSend(a1, "state", v20) == (id)3)
  {
    v21 = swift_unknownObjectWeakLoadStrong(v8);
    if (v21
      && (v22 = v21,
          v23 = *((_QWORD *)v8 + 1),
          v24 = swift_getObjectType(v21),
          LOBYTE(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 56))(v19, v24, v23),
          swift_unknownObjectRelease(v22),
          (v23 & 1) != 0)
      && (v25 = swift_unknownObjectWeakLoadStrong(v8)) != 0)
    {
      v26 = v25;
      v27 = *((_QWORD *)v8 + 1);
      v28 = swift_getObjectType(v25);
      v46 = (void *)sub_10004F2F0(0, (unint64_t *)&unk_10064A910, UIGestureRecognizer_ptr);
      aBlock = (void **)a1;
      v29 = *(uint64_t (**)(char *, void ***, uint64_t, uint64_t))(v27 + 24);
      v30 = a1;
      v31 = (void *)v29(v19, &aBlock, v28, v27);
      swift_unknownObjectRelease(v26);
      sub_10007EB54((uint64_t)&aBlock);
      v32 = swift_getObjectType(v7);
      v33 = swift_allocObject(&unk_1005D61E0, 32, 7);
      *(_QWORD *)(v33 + 16) = v42;
      *(_QWORD *)(v33 + 24) = v31;
      v34 = v42;
      v35 = v31;
      DOCNode.fpfs_fetchFPItem(completion:)(sub_1002722D0, v33, v32);

      swift_release(v33);
      swift_unknownObjectRelease(v7);

    }
    else
    {

      swift_unknownObjectRelease(v7);
    }
  }
  else
  {
    swift_unknownObjectRelease(v7);

  }
}

void sub_10026FD4C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  void *v4;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  double MinY;
  double v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "bounds");
    objc_msgSend(v4, "convertRect:toCoordinateSpace:", v1);
    x = v16.origin.x;
    y = v16.origin.y;
    width = v16.size.width;
    height = v16.size.height;
    v17 = CGRectInset(v16, 0.0, -5.0);
    v18 = CGRectOffset(v17, 0.0, 10.0);
    v9 = v18.origin.x;
    v10 = v18.origin.y;
    v11 = v18.size.width;
    v12 = v18.size.height;
    v18.origin.x = x;
    v18.origin.y = y;
    v18.size.width = width;
    v18.size.height = height;
    v13 = CGRectGetMidY(v18) + -2.0;
    v19.origin.x = v9;
    v19.origin.y = v10;
    v19.size.width = v11;
    v19.size.height = v12;
    MinY = CGRectGetMinY(v19);

    if (MinY >= v13)
      v15 = v13;
    else
      v15 = MinY;
  }
  else
  {
    v9 = 0.0;
    v15 = 0.0;
    v11 = 0.0;
    v12 = 0.0;
  }
  *(CGFloat *)a1 = v9;
  *(double *)(a1 + 8) = v15;
  *(CGFloat *)(a1 + 16) = v11;
  *(CGFloat *)(a1 + 24) = v12;
  *(_BYTE *)(a1 + 32) = v4 == 0;
}

Swift::Bool __swiftcall DOCItemCollectionCell.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  char v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  _BYTE v13[40];
  CGRect v14;
  char v15;
  CGPoint v16;

  v3 = v2;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v6 = sub_1000AE388();
  v7 = static NSObject.== infix(_:_:)(_.super.isa, v6);

  if ((v7 & 1) == 0)
    return 0;
  -[objc_class locationInView:](shouldReceive.super.isa, "locationInView:", v3);
  v9 = v8;
  v11 = v10;
  sub_10026FD4C((uint64_t)v13);
  sub_100070EDC((uint64_t)v13, (uint64_t)&v14, &qword_10064A6C0);
  if ((v15 & 1) != 0)
    return 0;
  v16.x = v9;
  v16.y = v11;
  return CGRectContainsPoint(v14, v16);
}

Swift::Bool __swiftcall DOCItemCollectionCell.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer _, UIGestureRecognizer shouldRequireFailureOf)
{
  id v4;
  char v5;
  uint64_t v6;
  Swift::Bool result;

  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v4 = sub_1000AE388();
  v5 = static NSObject.== infix(_:_:)(_.super.isa, v4);

  result = 0;
  if ((v5 & 1) != 0)
  {
    v6 = sub_10004F2F0(0, &qword_10064A6C8, UIPanGestureRecognizer_ptr);
    if ((-[objc_class isKindOfClass:](shouldRequireFailureOf.super.isa, "isKindOfClass:", swift_getObjCClassFromMetadata(v6)) & 1) != 0)return 1;
  }
  return result;
}

Swift::Bool __swiftcall DOCItemCollectionCell.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)(UIGestureRecognizer _, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  id v3;

  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v3 = sub_1000AE388();
  LOBYTE(_.super.isa) = static NSObject.== infix(_:_:)(_.super.isa, v3);

  return (uint64_t)_.super.isa & 1;
}

BOOL sub_100270070(CGFloat a1, CGFloat a2)
{
  void *v2;
  CGPoint v6;
  CGRect v7;

  objc_msgSend(v2, "bounds");
  v6.x = a1;
  v6.y = a2;
  return CGRectContainsPoint(v7, v6);
}

double DOCItemCollectionCell.itemRenameTextViewDidFinish(_:nameToCommit:includingExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_100271C24(a2, a3, a4);
}

void sub_1002700C0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  os_log_t v19;
  id v20;
  uint64_t v21;
  os_log_t v22;
  int v23;
  id v24;
  uint64_t v25;
  id v26;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  if (v6)
  {
    v24 = v6;
    sub_100252C70(1, (uint64_t)v24);

  }
  else
  {
    v7 = Logger.Rename.unsafeMutableAddressor(v3);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v7, v1);
    v8 = v0;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = v10;
    if (os_log_type_enabled(v9, v10))
    {
      v12 = swift_slowAlloc(22, -1);
      v23 = v11;
      v13 = v12;
      v24 = (id)swift_slowAlloc(64, -1);
      v26 = v24;
      *(_DWORD *)v13 = 136315394;
      v22 = v9;
      v25 = sub_1000544FC(0x655274696D6D6F63, 0xEE002928656D616ELL, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
      *(_WORD *)(v13 + 12) = 2080;
      v21 = v13 + 14;
      v14 = v8;
      v15 = objc_msgSend(v14, "description");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v25 = sub_1000544FC(v16, v18, (uint64_t *)&v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);

      swift_bridgeObjectRelease(v18);
      v19 = v22;
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v23, "%s inline rename overlay view tapped but the rename text view was missing. Cancelling rename. Self: %s", (uint8_t *)v13, 0x16u);
      v20 = v24;
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    (*(void (**)(_QWORD, uint64_t))((swift_isaMask & *(_QWORD *)v8) + 0x3C8))(0, 1);
  }
}

id sub_10027037C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[4];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v1)
  {
    v2 = (void *)v1;
    sub_10005914C((uint64_t)v7);

    v25 = v16;
    v26 = v17;
    v27 = v18;
    v28 = v19;
    v21 = v12;
    v22 = v13;
    v23 = v14;
    v24 = v15;
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    v20[3] = v11;
    sub_1000B2454((uint64_t)v20);
    sub_100058CC0((uint64_t)v7);
    v3 = (id)v21;
    sub_1000B2398(v20);
  }
  else
  {
    v4 = objc_allocWithZone((Class)NSAttributedString);
    v5 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v4, "initWithString:", v5);

  }
  return v3;
}

void sub_100270540(char *a1, uint64_t a2)
{
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v12;
  double v13;
  double v14;
  objc_super v15;

  v15.receiver = a1;
  v15.super_class = (Class)swift_getObjectType(a1, a2);
  objc_msgSendSuper2(&v15, "layoutSubviews");
  v3 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(a1, "frame");
    v6 = v5;
    v8 = v7;
    objc_msgSend(v4, "fittingSize");
    if (v6 != v10 || v8 != v9)
    {
      v12 = v4;
      objc_msgSend(a1, "frame");
      objc_msgSend(v12, "setFittingSize:", v13, v14);

    }
    sub_10004D4AC(0);

  }
}

void sub_10027066C(void *a1, id a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  id v14;
  id v15;
  id v16;
  void *v17;
  CGContext *v18;
  CGColor *v19;
  CGContext *v20;
  id v21;
  void *v22;
  id v23;
  NSString v24;
  id v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  CGFloat v32;
  CGFloat v33;
  CGContext *v34;
  CGContext *v35;
  id v36;
  UIImage *v37;
  CGImageRef v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  CGSize v43;
  CGRect v44;

  v14 = objc_msgSend(a2, "traitCollection");
  v15 = objc_msgSend(v14, "userInterfaceStyle");

  if (v15 == (id)1)
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  else
    v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.85, 1.0);
  v17 = v16;
  v18 = (CGContext *)objc_msgSend(a1, "CGContext");
  v19 = (CGColor *)objc_msgSend(v17, "CGColor");
  CGContextSetFillColorWithColor(v18, v19);

  v20 = (CGContext *)objc_msgSend(a1, "CGContext");
  v44.origin.x = a3;
  v44.origin.y = a4;
  v44.size.width = a5;
  v44.size.height = a6;
  CGContextFillRect(v20, v44);

  v21 = objc_msgSend(a2, "tintColor");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "_doc_safeTintColor:", v21);

    v42 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 2, a7);
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v24);

    v26 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v25);
    objc_msgSend(v26, "setPreferredSymbolConfiguration:", v42);
    objc_msgSend(v26, "setTintColor:", v23);
    objc_msgSend(v26, "setContentMode:", 1);
    objc_msgSend(v26, "intrinsicContentSize");
    v28 = floor(v27);
    v30 = floor(v29);
    v31 = v26;
    DOCCenterSizeInRect(a3, a4, a5, a6, v28, v30);
    objc_msgSend(v31, "setFrame:");

    objc_msgSend(v31, "bounds");
    v43.width = v32;
    v43.height = v33;
    UIGraphicsBeginImageContextWithOptions(v43, 0, 0.0);
    v34 = UIGraphicsGetCurrentContext();
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v31, "layer");
      objc_msgSend(v36, "renderInContext:", v35);

    }
    v37 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    if (v37 && (v38 = -[UIImage CGImage](v37, "CGImage"), v37, v38))
    {
      v39 = objc_msgSend(a1, "CGContext");
      objc_msgSend(v31, "frame");
      CGContextRef.draw(_:in:byTiling:)(v38, 0);

      v40 = v31;
      v41 = v17;
    }
    else
    {
      v40 = v42;
      v41 = v23;
      v23 = v31;
      v42 = v17;
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_100270A4C()
{
  uint64_t v0;

}

id sub_100270C6C()
{
  return sub_100271B04(type metadata accessor for DOCItemStatusBadgeView, (SEL *)&selRef_dealloc);
}

id sub_100270D8C()
{
  return sub_100271B04(type metadata accessor for DOCItemCollectionCellSpringLoadedInteractionBehavior, (SEL *)&selRef_dealloc);
}

uint64_t DOCItemCollectionCell.description.getter()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  _BYTE v19[24];
  objc_super v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v19, 0, 0);
    v5 = *v4;
    if (*v4)
    {
      v6 = objc_msgSend((id)swift_unknownObjectRetain(*v4), "displayName");
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;
      swift_unknownObjectRelease(v5);

    }
    else
    {

      v9 = (void *)0xEA00000000002A65;
      v7 = 0x646F6E2D6C696E2ALL;
    }
  }
  else
  {
    v9 = (void *)0xED00002A746E6574;
    v7 = 0x6E6F632D6C696E2ALL;
  }
  v21 = 0x5B6C6C6563;
  v22 = 0xE500000000000000;
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 540876893;
  v11._object = (void *)0xE400000000000000;
  String.append(_:)(v11);
  v12 = (objc_class *)type metadata accessor for DOCItemCollectionCell();
  v20.receiver = v1;
  v20.super_class = v12;
  v13 = objc_msgSendSuper2(&v20, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  return v21;
}

Swift::Void __swiftcall DOCItemCollectionCell.prepareForReuse()()
{
  _QWORD *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionCell();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  v1 = objc_autoreleasePoolPush();
  sub_10003731C(v0);
  objc_autoreleasePoolPop(v1);
}

_QWORD *sub_100271074(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v11;
  uint64_t v12;

  v11 = objc_allocWithZone(v5);
  return sub_10004CC6C(a1, v12, a2, a3, a4, a5);
}

uint64_t DOCItemCollectionCell.init(frame:)(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v13;

  v7 = v6;
  ObjectType = swift_getObjectType(v6, a6);
  v13 = (*(uint64_t (**)(_QWORD, double, double, double, double))(ObjectType + 600))(0, a1, a2, a3, a4);
  swift_deallocPartialClassInstance(v7, ObjectType, 161, 7);
  return v13;
}

void sub_100271188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  _BYTE v15[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate, v7);
    if (v10)
    {
      v12 = v10;
      v13 = *(_QWORD *)(v9 + 8);
      ObjectType = swift_getObjectType(v10, v11);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v13 + 40))(v8, a2, ObjectType, v13);

      swift_unknownObjectRelease(v12);
    }
    else
    {

    }
  }
}

void sub_10027122C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x800000010051F500, "Files/DOCItemCollectionCell.swift", 33, 2, 444, 0);
  __break(1u);
}

void sub_100271284(_QWORD *a1, double a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x108))();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setAlpha:", a2);

  }
}

void sub_100271300(void *a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  id v11;
  uint64_t v12;

  if (a1)
  {
    v11 = a1;
    v5 = objc_msgSend(a2, "unresolvedHandler");
    if (v5)
    {
      v6 = (void (**)(_QWORD, _QWORD, _QWORD))v5;
      v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v8 = swift_allocObject(v7, 40, 7);
      *(_OWORD *)(v8 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v8 + 32) = v11;
      v12 = v8;
      specialized Array._endMutation()(v8);
      v9 = v11;
      _Block_copy(v6);
      v11 = a3;
      sub_10006922C((uint64_t *)&unk_1006424B0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, id))v6)[2](v6, isa, v11);
      swift_bridgeObjectRelease(v12);

      _Block_release(v6);
      _Block_release(v6);
    }

  }
}

Swift::Bool __swiftcall DOCItemCollectionCell.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  unsigned __int8 *v5;
  id v6;
  char v7;
  int v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  objc_super v16;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v1) + 0x1F8))();
  if (!v4)
    goto LABEL_12;
  v5 = (unsigned __int8 *)v4;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v6 = sub_1000AE388();
  v7 = static NSObject.== infix(_:_:)(a1.super.isa, v6);

  if ((v7 & 1) == 0)
  {
    v16.receiver = v2;
    v16.super_class = (Class)type metadata accessor for DOCItemCollectionCell();
    LOBYTE(v11) = objc_msgSendSuper2(&v16, "gestureRecognizerShouldBegin:", a1.super.isa);
    goto LABEL_10;
  }
  v8 = v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
  if (v8 == 2 || (v8 & 1) == 0)
    goto LABEL_11;
  v9 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate]);
  v11 = Strong;
  if (!Strong)
  {
LABEL_10:

    return v11;
  }
  v12 = *((_QWORD *)v9 + 1);
  ObjectType = swift_getObjectType(Strong);
  v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 8))(v2, FPActionRename, ObjectType, v12);
  swift_unknownObjectRelease(v11);
  if ((v14 & 1) == 0)
  {
LABEL_11:

    goto LABEL_12;
  }

  LODWORD(v11) = v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting];
  if ((_DWORD)v11 == 2)
  {
LABEL_12:
    LOBYTE(v11) = 0;
    return v11;
  }
  LOBYTE(v11) = (v11 & 1) == 0;
  return v11;
}

Swift::Void __swiftcall DOCItemCollectionCell.didMoveToSuperview()()
{
  sub_100271B04(type metadata accessor for DOCItemCollectionCell, (SEL *)&selRef_didMoveToSuperview);
}

void sub_1002718D8(_QWORD *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (v3 == (id)6)
    v4 = objc_msgSend(a1, "setNeedsUpdateConfiguration");
  (*(void (**)(id))((swift_isaMask & *a1) + 0x3D8))(v4);
  v5 = sub_1000AE388();
  objc_msgSend(v5, "setEnabled:", 0);

}

void sub_100271980(_QWORD *a1, char a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 == (id)6)
    objc_msgSend(a1, "setNeedsUpdateConfiguration");
  (*(void (**)(_QWORD))((swift_isaMask & *a1) + 0x3D0))(a2 & 1);
  v6 = sub_1000AE388();
  objc_msgSend(v6, "setEnabled:", 1);

}

id DOCItemCollectionCell.__deallocating_deinit()
{
  return sub_100271B04(type metadata accessor for DOCItemCollectionCell, (SEL *)&selRef_dealloc);
}

id sub_100271B04(uint64_t (*a1)(void), SEL *a2)
{
  void *v2;
  objc_super v5;

  v5.receiver = v2;
  v5.super_class = (Class)a1();
  return objc_msgSendSuper2(&v5, *a2);
}

uint64_t sub_100271B3C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

void sub_100271B58(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(id, uint64_t);
  id v7;

  v6 = *(void (**)(id, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  swift_unknownObjectRetain(a3);
  v6(v7, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);

}

void sub_100271BC8()
{
  sub_10004D4AC(1);
}

uint64_t sub_100271BEC(_QWORD *a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x260))();
}

double sub_100271C24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  double result;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController);
  if (a2)
  {
    if (!v4)
      return result;
    swift_retain();
    sub_10038D928(a1, a2, a3 & 1);
  }
  else
  {
    if (!v4)
      return result;
    swift_retain();
    sub_10038EF44();
  }
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

id _s5Files21DOCItemCollectionCellC13editExtensionySSSgAA0B14RenameTextViewCF_0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void **v3;
  void *v4;
  id result;
  void *v6;
  id v7;
  _BYTE v8[24];

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  v2 = (void *)v1;
  if (!v1)
    return v2;
  v3 = (void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v8, 0, 0);
  v4 = *v3;
  swift_unknownObjectRetain(v4);

  if (!v4)
    return 0;
  result = objc_msgSend(v4, "filename");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, "pathExtension");

    v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    swift_unknownObjectRelease(v4);

    return v2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCItemStatusBadgeView()
{
  return objc_opt_self(_TtC5Files22DOCItemStatusBadgeView);
}

double sub_100271DB8(double a1)
{
  return round(a1);
}

uint64_t sub_100271DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

void sub_100271DE4(void *a1)
{
  uint64_t v1;

  sub_10027066C(a1, *(id *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_100271DF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100271E08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100271E2C()
{
  uint64_t v0;

  sub_100271980(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100271E38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100271E48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100271E6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100271E7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100271EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100271188(a1, a2, v2);
}

uint64_t sub_100271EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *Strong;
  NSObject *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  uint64_t v33;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v33 - v8;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files52DOCItemCollectionCellSpringLoadedInteractionBehavior_targetCell, v10);
  if (Strong)
  {
    v12 = Strong;
    v13 = -[NSObject isUserInteractionEnabled](Strong, "isUserInteractionEnabled");
    if ((_DWORD)v13)
    {
      v15 = (char *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate;
      v16 = swift_unknownObjectWeakLoadStrong((char *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate, v14);
      if (v16)
      {
        v18 = v16;
        v19 = *((_QWORD *)v15 + 1);
        ObjectType = swift_getObjectType(v16, v17);
        LOBYTE(v19) = (*(uint64_t (**)(NSObject *, uint64_t, uint64_t, uint64_t))(v19 + 32))(v12, a1, ObjectType, v19);
        swift_unknownObjectRelease(v18);

        return v19 & 1;
      }

    }
    else
    {
      v27 = Logger.UI.unsafeMutableAddressor(v13);
      v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v27, v3);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Target cell has isUserInteractionEnabled = NO in DOCItemCollectionCellSpringLoadedInteractionBehavior, disallowing spring loaded interaction", v31, 2u);
        swift_slowDealloc(v31, -1, -1);
        v32 = v12;
      }
      else
      {
        v32 = v29;
        v29 = v12;
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    v22 = Logger.UI.unsafeMutableAddressor(0);
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v22, v3);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "No target cell in DOCItemCollectionCellSpringLoadedInteractionBehavior, disallowing spring loaded interaction", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return 0;
}

void sub_1002720FC()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemStatusBadge] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemAccessStatusBadge] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_actions] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCItemCollectionCell.swift", 33, 2, 366, 0);
  __break(1u);
}

void sub_10027223C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100270540(*(char **)(v2 + 16), a2);
}

uint64_t sub_100272244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100272254()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100272278()
{
  uint64_t v0;

  sub_100271284(*(_QWORD **)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100272284()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100272294()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002722A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002722D0(void *a1)
{
  uint64_t v1;

  sub_100271300(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100272318(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 112);
}

void sub_100272358(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100272F34();
}

id sub_10027237C(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  __int128 v10;
  objc_class *v11;
  _OWORD v13[2];
  objc_super v14;

  v9 = swift_isaMask & *v4;
  *(_QWORD *)((char *)v4 + qword_10064A930) = 0;
  v10 = *(_OWORD *)(v9 + 96);
  v13[0] = *(_OWORD *)(v9 + 80);
  v13[1] = v10;
  v11 = (objc_class *)type metadata accessor for DOCContentConfigurableListCell(0, (uint64_t)v13);
  v14.receiver = v4;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10027240C(double a1, double a2, double a3, double a4)
{
  return sub_10027237C(a1, a2, a3, a4);
}

void sub_10027242C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x800000010051F650, "Files/DOCContentConfigurableListCell.swift", 42, 2, 31, 0);
  __break(1u);
}

uint64_t sub_100272484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];

  v4 = swift_isaMask & *v2;
  UICollectionViewCell.contentConfiguration.getter(v7, a1);
  v5 = sub_10006922C(&qword_100651B70);
  return swift_dynamicCast(a2, v7, v5, *(_QWORD *)(v4 + 80), 7);
}

uint64_t sub_1002724F0()
{
  _QWORD *v0;

  return swift_dynamicCastUnknownClassUnconditional(objc_msgSend(v0, "contentView"), *(_QWORD *)((swift_isaMask & *v0) + 0x58), 0, 0, 0);
}

uint64_t sub_100272544()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v18 = sub_100272744();
  v2 = v1[11];
  v13 = v1[10];
  v14 = v2;
  v3 = v1[13];
  v15 = v1[12];
  v16 = v3;
  v4 = type metadata accessor for UICellAccessory(255);
  v17[0] = v13;
  v17[1] = v2;
  v17[2] = v15;
  v17[3] = v3;
  v5 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(255, (uint64_t)v17);
  v6 = type metadata accessor for Optional(255, v5);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v6, "accessory customView ", 0);
  v8 = type metadata accessor for Array(0, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v10 = Sequence.compactMap<A>(_:)(sub_100273010, &v12, v8, v5, WitnessTable);
  swift_bridgeObjectRelease(v18);
  return v10;
}

uint64_t sub_100272640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t (*v23)(char *, uint64_t);
  id v24;
  _QWORD v26[4];

  v12 = type metadata accessor for UICellAccessory(255);
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v26[3] = a5;
  v13 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(255, (uint64_t)v26);
  v14 = type metadata accessor for Optional(255, v13);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v12, v14, "accessory customView ", 0);
  v16 = __chkstk_darwin(TupleTypeMetadata2);
  v18 = (char *)v26 - v17;
  v20 = *(int *)(v19 + 48);
  v21 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))((char *)v26 - v17, a1, v12, v16);
  v22 = *(void **)(a1 + v20);
  *(_QWORD *)&v18[v20] = v22;
  *a6 = v22;
  v23 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
  v24 = v22;
  return v23(v18, v12);
}

uint64_t sub_100272744()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *TupleTypeMetadata2;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v19 = UICollectionViewListCell.accessories.getter();
  v2 = v1[11];
  v14 = v1[10];
  v15 = v2;
  v3 = v1[13];
  v16 = v1[12];
  v17 = v3;
  v4 = sub_10006922C(&qword_10064AA38);
  v5 = type metadata accessor for UICellAccessory(255);
  v18[0] = v14;
  v18[1] = v2;
  v18[2] = v16;
  v18[3] = v3;
  v6 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(255, (uint64_t)v18);
  v7 = type metadata accessor for Optional(255, v6);
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2(0, v5, v7, "accessory customView ", 0);
  v9 = sub_100272FC4();
  v11 = sub_10029BA38((void (*)(char *, char *))sub_100272FA4, (uint64_t)&v13, v4, TupleTypeMetadata2, (uint64_t)&type metadata for Never, v9, (uint64_t)&protocol witness table for Never, v10);
  swift_bridgeObjectRelease(v19);
  return v11;
}

uint64_t sub_100272844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v12 = type metadata accessor for UICellAccessory.AccessoryType(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (void **)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  UICellAccessory.accessoryType.getter(v14);
  if ((*(unsigned int (**)(void **, uint64_t))(v13 + 88))(v16, v12) == enum case for UICellAccessory.AccessoryType.customView(_:))
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    v17 = *v16;
    v25 = a2;
    v26 = a3;
    v27 = a4;
    v28 = a5;
    v18 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(0, (uint64_t)&v25);
    v19 = swift_dynamicCastClass(v17, v18);
    if (!v19)

  }
  else
  {
    (*(void (**)(void **, uint64_t))(v13 + 8))(v16, v12);
    v19 = 0;
  }
  v20 = type metadata accessor for UICellAccessory(255);
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v21 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(255, (uint64_t)&v25);
  v22 = type metadata accessor for Optional(255, v21);
  v23 = *(int *)(swift_getTupleTypeMetadata2(0, v20, v22, "accessory customView ", 0) + 48);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a6, a1, v20);
  *(_QWORD *)(a6 + v23) = v19;
  return result;
}

void sub_1002729C8()
{
  _QWORD *v0;

  (*(void (**)(void))((swift_isaMask & *v0) + 0x78))();
  sub_100272A94();
  sub_100272C14();
}

uint64_t sub_1002729F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for UICellConfigurationState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_1002729C8();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_100272A94()
{
  _QWORD *v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  double result;
  uint64_t v7;
  _QWORD *v8;
  _OWORD v9[2];
  uint64_t v10;

  v1 = swift_isaMask & *v0;
  v10 = sub_100272544();
  v8 = v0;
  v2 = *(_OWORD *)(v1 + 96);
  v9[0] = *(_OWORD *)(v1 + 80);
  v9[1] = v2;
  v3 = type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(255, (uint64_t)v9);
  v4 = type metadata accessor for Array(0, v3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  Sequence.forEach(_:)(sub_100272F8C, &v7, v4, WitnessTable);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_100272B38(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v10;

  v2 = *(_QWORD *)((swift_isaMask & *a2) + 0x50);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v5 = (char *)&v10 - v4;
  v7 = (_QWORD *)*v6;
  sub_100272484((uint64_t)v6, (uint64_t)&v10 - v4);
  v8 = (void *)sub_1002724F0();
  (*(void (**)(char *, void *))((swift_isaMask & *v7) + 0x70))(v5, v8);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100272C00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_10064A930);
  *(_QWORD *)(v1 + qword_10064A930) = a1;

}

void sub_100272C14()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = qword_10064A930;
  v4 = *(void **)&v0[qword_10064A930];
  if (v4)
  {
    objc_msgSend(v4, "setActive:", 0);
    v3 = qword_10064A930;
    v5 = *(void **)&v0[qword_10064A930];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v0[v3] = 0;

  v6 = (void *)sub_1002724F0();
  v13 = (id)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 104) + 16))(*(_QWORD *)(v2 + 88));

  if (v13)
  {
    v7 = objc_msgSend(v1, "separatorLayoutGuide");
    v8 = objc_msgSend(v7, "leadingAnchor");

    v9 = objc_msgSend(v8, "constraintEqualToAnchor:", v13);
    v10 = *(void **)&v1[qword_10064A930];
    *(_QWORD *)&v1[qword_10064A930] = v9;

    v11 = *(void **)&v1[qword_10064A930];
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v12, "setActive:", 1);

    }
  }
}

id sub_100272D6C()
{
  return sub_100272ED0((uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for DOCContentConfigurableListCell);
}

void sub_100272D78(uint64_t a1)
{

}

uint64_t type metadata accessor for DOCContentConfigurableListCell(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for DOCContentConfigurableListCell);
}

uint64_t sub_100272D94(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 112);
}

void sub_100272DC8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x800000010051F650, "Files/DOCContentConfigurableListCell.swift", 42, 2, 100, 0);
  __break(1u);
}

id sub_100272E20(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  __int128 v9;
  objc_class *v10;
  _OWORD v12[2];
  objc_super v13;

  v9 = *(_OWORD *)((swift_isaMask & *v4) + 0x60);
  v12[0] = *(_OWORD *)((swift_isaMask & *v4) + 0x50);
  v12[1] = v9;
  v10 = (objc_class *)type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(0, (uint64_t)v12);
  v13.receiver = v4;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100272EA4(double a1, double a2, double a3, double a4)
{
  return sub_100272E20(a1, a2, a3, a4);
}

id sub_100272EC4()
{
  return sub_100272ED0((uint64_t (*)(_QWORD, _OWORD *))type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView);
}

id sub_100272ED0(uint64_t (*a1)(_QWORD, _OWORD *))
{
  _QWORD *v1;
  __int128 v2;
  objc_class *v3;
  _OWORD v5[2];
  objc_super v6;

  v2 = *(_OWORD *)((swift_isaMask & *v1) + 0x60);
  v5[0] = *(_OWORD *)((swift_isaMask & *v1) + 0x50);
  v5[1] = v2;
  v3 = (objc_class *)a1(0, v5);
  v6.receiver = v1;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t type metadata accessor for DOCContentConfigurableListCell.CustomAccessoryView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for DOCContentConfigurableListCell.CustomAccessoryView);
}

void sub_100272F34()
{
  char *v0;

  *(_QWORD *)&v0[qword_10064A930] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCContentConfigurableListCell.swift", 42, 2, 23, 0);
  __break(1u);
}

uint64_t sub_100272F8C(uint64_t a1)
{
  uint64_t v1;

  return sub_100272B38(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_100272FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100272844(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_100272FC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064AA40;
  if (!qword_10064AA40)
  {
    v1 = sub_10007E830(&qword_10064AA38);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10064AA40);
  }
  return result;
}

uint64_t sub_100273010@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_100272640(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_10027311C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_sharedSplitBrowser), "preferredContentSize");
    objc_msgSend(v6, "setPreferredContentSize:");

  }
}

double sub_100273224(_BYTE *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;
  _QWORD *v16;
  id v17;
  void *Strong;
  void *v19;
  id v20;
  void *v21;
  _BYTE *v22;
  id v23;
  double result;
  char v25[24];
  char v26[24];
  char v27[24];

  v4 = OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_isBecomingOwner;
  a1[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_isBecomingOwner] = 1;
  sub_10004F2F0(0, &qword_10064AAE0, UIFocusSystem_ptr);
  v5 = (void *)static UIFocusSystem.focusSystem(for:)(a1);
  v6 = objc_msgSend(v5, "focusedItem");
  if (v6)
  {
    v7 = type metadata accessor for DOCSidebarItemCell(0);
    if (swift_dynamicCastClass(v6, v7))
      objc_msgSend(a2, "setItemToFocusDuringAppearance:", v6);
  }
  v8 = objc_msgSend(a2, "parentViewController");

  if (v8)
  {
    v9 = objc_msgSend(a2, "parentViewController");
    if (!v9)
      goto LABEL_7;
    v10 = v9;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v11 = a1;
    v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

    if ((v10 & 1) == 0)
    {
LABEL_7:
      objc_msgSend(a2, "beginAppearanceTransition:animated:", 0, 0);
      objc_msgSend(a2, "doc_removeFromParentWithRemoveSubviewBlock:", 0);
      objc_msgSend(a2, "endAppearanceTransition");
    }
  }
  v13 = OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabItem;
  objc_msgSend(a2, "setIncludeSidebarInCollapsedNavStack:", objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabItem], "includeSidebarInCollapsedNavStack"));
  v14 = objc_msgSend(a2, "fullDocumentManagerViewController");
  v15 = (char *)objc_msgSend(v14, "hierarchyController");

  v16 = (_QWORD *)(*(_QWORD *)&a1[v13] + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  swift_beginAccess(v16, v27, 0, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab] = *v16;

  v17 = objc_msgSend(a2, "configuration");
  objc_msgSend(v17, "configureContextForDisplayingTab:", *(_QWORD *)(*(_QWORD *)&a1[v13] + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab), swift_beginAccess(*(_QWORD *)&a1[v13] + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, v26, 0, 0).n128_f64[0]);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabbedBrowser]);
  if (Strong)
  {
    v19 = Strong;
    objc_msgSend(Strong, "switchToTab:", *(_QWORD *)(*(_QWORD *)&a1[v13] + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab), swift_beginAccess(*(_QWORD *)&a1[v13] + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab, v25, 0, 0).n128_f64[0]);

  }
  objc_msgSend(a1, "doc_addChildWithEqualAutoresizingFrame:", a2);
  a1[v4] = 0;
  v20 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_sharedSplitBrowser], "parentViewController");
  if (v20)
  {
    v21 = v20;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v22 = a1;
    v23 = v21;
    LOBYTE(v21) = static NSObject.== infix(_:_:)(v23, v22);

    if ((v21 & 1) != 0)
    {
      if (qword_100640ED0 != -1)
        swift_once(&qword_100640ED0, sub_100273F50);
      if ((byte_10064AA50 & 1) == 0)
        objc_msgSend(v22, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
      sub_1002739B4();
    }
  }

  *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_1002735DC(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for DOCSharedSplitBrowserViewController(0);
  objc_msgSendSuper2(&v10, "viewWillAppear:", a1 & 1);
  v4 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_sharedSplitBrowser], "parentViewController");
  if (!v4)
    goto LABEL_3;
  v5 = v4;
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v6 = v2;
  v7 = v5;
  LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v6);

  if ((v5 & 1) == 0)
  {
LABEL_3:
    if ((v2[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_isBecomingOwner] & 1) == 0)
    {
      __chkstk_darwin(v4);
      v9 = v8;
      DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(0, sub_100274038);

    }
  }
}

void sub_100273744(uint64_t a1, char *a2)
{
  id v3;
  void *v4;
  char *v5;
  id v6;

  v3 = objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_sharedSplitBrowser], "parentViewController");
  if (v3)
  {
    v4 = v3;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v5 = a2;
    v6 = v4;
    LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    if ((v4 & 1) != 0)
    {
      if (qword_100640ED0 != -1)
        swift_once(&qword_100640ED0, sub_100273F50);
      if ((byte_10064AA50 & 1) == 0)
        objc_msgSend(v5, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
      sub_1002739B4();
    }
  }
}

void sub_1002739B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;

  if (qword_100640ED8 != -1)
    swift_once(&qword_100640ED8, sub_100273F6C);
  if ((byte_10064AA51 & 1) == 0)
  {
    v0 = sub_10004F2F0(0, (unint64_t *)&unk_10064AAD0, UISearchBar_ptr);
    v1 = UIViewController.doc_findSubtreeViews<A>(includingSelf:loadViewIfNeed:ofType:)(0, 0, v0, v0);
    v2 = v1;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v3 = _CocoaArrayWrapper.endIndex.getter(v7);
      if (v3)
        goto LABEL_6;
    }
    else
    {
      v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v1);
      if (v3)
      {
LABEL_6:
        if (v3 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((v2 & 0xC000000000000001) != 0)
            v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
          else
            v5 = *(id *)(v2 + 8 * i + 32);
          v6 = v5;
          UIView.doc_performOnSubtree(includingSelf:_:)(0, sub_100273AF0, 0);

        }
      }
    }
    swift_bridgeObjectRelease_n(v2, 2);
  }
}

id sub_100273AF0(void *a1)
{
  return objc_msgSend(a1, "setNeedsLayout");
}

uint64_t sub_100273B84()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  objc_super v15;
  uint64_t v16;
  unint64_t v17;

  v1 = v0;
  v2 = objc_msgSend(v0, "tabBarItem");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "description");

    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = (void *)0xE000000000000000;
  }
  v16 = 0;
  v17 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for DOCSharedSplitBrowserViewController(0);
  v8 = objc_msgSendSuper2(&v15, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;
  swift_bridgeObjectRelease(0xE000000000000000);

  v16 = v9;
  v17 = v11;
  v12._countAndFlagsBits = 0x7449626174202D20;
  v12._object = (void *)0xEC000000203A6D65;
  String.append(_:)(v12);
  v13._countAndFlagsBits = v5;
  v13._object = v7;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v7);
  return v16;
}

uint64_t sub_100273CD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_keyValueObservations));
  sub_100241398(v0 + OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_lastEnsureAppearedRequestID);
  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabbedBrowser);
}

id sub_100273D34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSharedSplitBrowserViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100273DD0()
{
  return type metadata accessor for DOCSharedSplitBrowserViewController(0);
}

uint64_t type metadata accessor for DOCSharedSplitBrowserViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10064AAB0;
  if (!qword_10064AAB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCSharedSplitBrowserViewController);
  return result;
}

void sub_100273E14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1000B3490(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = "\b";
    v4[5] = &unk_1004DF080;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 112);
  }
}

void sub_100273F50(uint64_t a1)
{
  sub_100273F88(a1, 0x800000010051F820, (unsigned __int8 *)&byte_10064AA50);
}

void sub_100273F6C(uint64_t a1)
{
  sub_100273F88(a1, 0x800000010051F7D0, (unsigned __int8 *)&byte_10064AA51);
}

void sub_100273F88(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  id v4;
  NSString v5;
  unsigned __int8 v6;

  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "BOOLForKey:", v5);

  *a3 = v6;
}

uint64_t sub_10027400C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100274030(uint64_t a1)
{
  uint64_t v1;

  sub_100273744(a1, *(char **)(v1 + 16));
}

double sub_100274038()
{
  uint64_t v0;

  return sub_100273224(*(_BYTE **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100274040(unint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  objc_class *v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v38[3];
  objc_super v39;
  _QWORD *v40;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = _swiftEmptyArrayStorage;
    if (!v4)
      return (uint64_t)v5;
    v40 = _swiftEmptyArrayStorage;
    result = specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
      break;
    v7 = 0;
    v33 = v3 & 0xC000000000000001;
    v34 = v4;
    v35 = v3;
    while (v4 != v7)
    {
      if (v33)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
      else
        v8 = *(id *)(v3 + 8 * v7 + 32);
      v9 = v8;
      v10 = (objc_class *)type metadata accessor for DOCSharedSplitBrowserViewController(0);
      v11 = objc_allocWithZone(v10);
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_keyValueObservations] = _swiftEmptyArrayStorage;
      v12 = &v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_lastEnsureAppearedRequestID];
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
      v14 = swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabbedBrowser]);
      v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_isBecomingOwner] = 0;
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_tabItem] = v9;
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_sharedSplitBrowser] = a2;
      swift_unknownObjectWeakAssign(v14, a3);
      v39.receiver = v11;
      v39.super_class = v10;
      v15 = v9;
      v16 = a2;
      v17 = v15;
      v18 = v16;
      v19 = a3;
      v20 = (char *)objc_msgSendSuper2(&v39, "init");
      objc_msgSend(v20, "setTabBarItem:", v17);
      v38[0] = v18;
      KeyPath = swift_getKeyPath(&unk_1004DF0B8);
      v22 = swift_allocObject(&unk_1005D63E8, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      v23 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 4, sub_1002743C4, v22, &protocol witness table for NSObject);
      swift_release(v22);
      swift_release(KeyPath);
      v24 = &v20[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_keyValueObservations];
      swift_beginAccess(&v20[OBJC_IVAR____TtC5Files35DOCSharedSplitBrowserViewController_keyValueObservations], v38, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v27 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v26 = *(_QWORD *)((*(_QWORD *)v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
      ++v7;
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v23);
      specialized Array._endMutation()(v28);
      swift_endAccess(v38);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v30 = v40[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
      v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v20);
      specialized ContiguousArray._endMutation()(v31);
      v4 = v34;
      v3 = v35;
      if (v34 == v7)
        return (uint64_t)v40;
    }
    __break(1u);
LABEL_16:
    if (v3 < 0)
      v32 = v3;
    else
      v32 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v3);
  }
  __break(1u);
  return result;
}

id sub_10027435C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "preferredContentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_10027438C(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setPreferredContentSize:", *a1, a1[1]);
}

uint64_t sub_1002743A0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002743C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10027311C(a1, a2, v2);
}

_QWORD *sub_1002743CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _BYTE v26[24];
  unint64_t v27;

  v27 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_22;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v10 = objc_msgSend(v7, "itemID");
      swift_beginAccess(a2, v26, 32, 0);
      v11 = *a2;
      if ((*a2 & 0xC000000000000001) != 0)
      {
        v12 = v10;
        v13 = __CocoaDictionary.lookup(_:)();

        if (!v13)
          goto LABEL_16;
        v24 = v13;
        v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        swift_unknownObjectRetain(v13);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v15 = v25;
        swift_unknownObjectRelease(v13);
      }
      else
      {
        if (!*(_QWORD *)(v11 + 16) || (v16 = sub_100140C4C((uint64_t)v10), (v17 & 1) == 0))
        {
LABEL_16:
          v15 = 0;
          goto LABEL_17;
        }
        v15 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v16);
        v18 = v15;
      }
LABEL_17:
      swift_endAccess(v26);

      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v21 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v15);
        specialized Array._endMutation()(v6);
      }
      if (v9 == v4)
      {
        swift_bridgeObjectRelease(a1);
        return (_QWORD *)v27;
      }
    }
    __break(1u);
LABEL_22:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

double sub_100274630(void (*a1)(double *__return_ptr, double *, id *), double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;
  id v17;
  double v18;

  v5 = v4;
  if ((unint64_t)a4 >> 62)
    goto LABEL_14;
  v9 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a4);
  for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v10 = 4;
    while (1)
    {
      v11 = (a4 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, a4)
          : *(id *)(a4 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      v17 = v11;
      a1(&v16, &v18, &v17);
      if (v5)
      {
        swift_bridgeObjectRelease(a4);

        return a2;
      }

      a2 = v16;
      v18 = v16;
      ++v10;
      if (v13 == v9)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    if (a4 < 0)
      v15 = a4;
    else
      v15 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
  }
LABEL_10:
  swift_bridgeObjectRelease(a4);
  return a2;
}

_QWORD *sub_100274760(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char v21;
  double v22;
  char v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;

  v8 = v7;
  v62 = a4;
  v15 = sub_100278924();
  v16 = static os_log_type_t.debug.getter();
  v17 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_10006A638();
  *(_QWORD *)(v18 + 32) = a1;
  *(_QWORD *)(v18 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  os_log(_:dso:log:type:_:)("Computing Hot Folders for App (%@)", 34, 2, &_mh_execute_header, v15, v16, v18);

  swift_bridgeObjectRelease(v18);
  v64 = a7;
  if (!a6)
  {
    swift_bridgeObjectRetain(a7);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain(a7);
  v19 = a6;
  sub_100274C80((uint64_t)v19, (uint64_t)a3);
  a6 = v20;
  if (!v20)
  {

    goto LABEL_8;
  }
  swift_bridgeObjectRetain(a7);
  v21 = sub_1000DFC34((uint64_t)a6, a7);
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(a7).n128_u64[0];
  if ((v21 & 1) != 0 || (objc_msgSend(a6, "isRootItem", v22, v62) & 1) != 0)
  {

    a6 = 0;
LABEL_8:
    v23 = 1;
    v24 = a5;
    goto LABEL_9;
  }
  v54 = a6;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
  v56 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v55 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v56 >= v55 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
  v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
  specialized Array._endMutation()(v57);

  if (a5 == 1)
  {
    v58 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v59 = swift_allocObject(v58, 40, 7);
    *(_OWORD *)(v59 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v59 + 32) = v54;
    v63 = (_QWORD *)v59;
    specialized Array._endMutation()(v59);
    v47 = v63;
    goto LABEL_27;
  }
  v24 = a5;
  v23 = 0;
LABEL_9:
  v25 = *(void **)((char *)v8 + direct field offset for DOCSmartFolderManager.database);
  v26 = String._bridgeToObjectiveC()();
  v27 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x80))();
  v28 = objc_msgSend(v25, "previousEventsForAppBundleIdentifier:excluding:", v26, v27);

  v29 = sub_10004F2F0(0, &qword_10064AAE8, DOCHotFolderEvent_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  v31 = (id)sub_100276DD0(v30, a3, v62);
  swift_bridgeObjectRelease(v30);
  __chkstk_darwin(v32);
  sub_100276B74((uint64_t)v31, (uint64_t (*)(id, uint64_t))sub_100278958);
  v34 = v33;
  swift_bridgeObjectRelease(v31);
  v63 = v34;
  swift_bridgeObjectRetain(v34);
  sub_100276104(&v63);
  swift_bridgeObjectRelease(v34);
  v35 = (uint64_t)v63;
  v36 = v63[2];
  if (v36)
  {
    v63 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v36);
    v37 = 32;
    do
    {
      v31 = *(id *)(v35 + v37);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v38 = v63[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
      v39 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v31);
      specialized ContiguousArray._endMutation()(v39);
      v37 += 16;
      --v36;
    }
    while (v36);
    v40 = (int64_t)v63;
    swift_release(v35);
    v63 = (_QWORD *)v40;
    if ((v23 & 1) != 0)
      goto LABEL_18;
  }
  else
  {
    swift_release(v63);
    v40 = (int64_t)_swiftEmptyArrayStorage;
    v63 = _swiftEmptyArrayStorage;
    if ((v23 & 1) != 0)
      goto LABEL_18;
  }
  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0)
      v60 = v40;
    else
      v60 = v40 & 0xFFFFFFFFFFFFFF8;
    v61 = a6;
    swift_bridgeObjectRetain(v40);
    v43 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v40);
    if (v43 < 0)
    {
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    v41 = a6;
  }
  sub_1004594F0(0, 0, (uint64_t)a6);
  v40 = (int64_t)v63;
LABEL_18:
  sub_1000D0618(v24, v40);
  v43 = v42;
  v35 = v44;
  v31 = v45;
  v36 = v46;
  swift_bridgeObjectRelease(v40);
  if ((v36 & 1) != 0)
  {
    v48 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v49 = swift_unknownObjectRetain_n(v43, 2);
    v50 = (_QWORD *)swift_dynamicCastClass(v49, v48);
    if (!v50)
    {
      swift_unknownObjectRelease(v43);
      v50 = _swiftEmptyArrayStorage;
    }
    v51 = v50[2];
    v52 = swift_release(v50);
    if (!__OFSUB__(v36 >> 1, v31))
    {
      v52 = v43;
      if (v51 == (v36 >> 1) - (_QWORD)v31)
      {
        v47 = (_QWORD *)swift_dynamicCastClass(v43, v48);
        if (!v47)
        {
          swift_unknownObjectRelease(v43);
          v47 = _swiftEmptyArrayStorage;
        }
        goto LABEL_26;
      }
      goto LABEL_39;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_unknownObjectRelease(v52);
  }
  v47 = sub_10028F8F0(v43, v35, (uint64_t)v31, v36);
LABEL_26:
  swift_unknownObjectRelease(v43);

LABEL_27:
  swift_bridgeObjectRelease(v64);
  return v47;
}

void sub_100274C80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t inited;
  NSString *v49;
  NSString *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t *v61;
  uint64_t (*v62)(void);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BOOL4 v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99[56];

  v3 = v2;
  v6 = type metadata accessor for DOCSmartFolderInputFile(0);
  v98 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for Date(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v85 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v10);
  v87 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UTType(0);
  v89 = *(_QWORD *)(v12 - 8);
  v90 = v12;
  v13 = __chkstk_darwin(v12);
  v84 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v86 = (char *)&v79 - v15;
  v16 = sub_10006922C((uint64_t *)&unk_10064AAF0);
  __chkstk_darwin(v16);
  v91 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = type metadata accessor for URLResourceValues(0);
  v92 = *(_QWORD *)(v18 - 8);
  v93 = v18;
  __chkstk_darwin(v18);
  v88 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v20);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v94 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10006922C((uint64_t *)&unk_10064AB00);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v81 = (uint64_t *)((char *)&v79 - v30);
  __chkstk_darwin(v29);
  v32 = (uint64_t *)((char *)&v79 - v31);
  v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
  if (!v33)
  {
LABEL_13:
    v45 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
    if (v45 && *(_QWORD *)(v45 + 16))
    {
      v46 = v97;
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v22, v45 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)), v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v22, 0, 1, v46);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v46) != 1)
      {
        v95 = v3;
        v96 = a2;
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v94, v22, v46);
        v80 = URL.startAccessingSecurityScopedResource()();
        v47 = sub_10006922C(&qword_100647BF8);
        inited = swift_initStackObject(v47, v99);
        *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
        *(_QWORD *)(inited + 32) = NSURLContentTypeKey;
        *(_QWORD *)(inited + 40) = NSURLLocalizedNameKey;
        v49 = NSURLContentTypeKey;
        v50 = NSURLLocalizedNameKey;
        sub_1003FCE00(inited);
        v52 = v51;
        swift_setDeallocating(inited);
        type metadata accessor for URLResourceKey(0);
        swift_arrayDestroy(inited + 32, 2, v53);
        v54 = (uint64_t)v91;
        URL.resourceValues(forKeys:)(v52);
        v57 = swift_bridgeObjectRelease(v52);
        v58 = v92;
        v59 = v93;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v92 + 56))(v54, 0, 1, v93, v57);
        v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v54, 1, v59);
        v43 = v98;
        a2 = v96;
        if (v60 == 1)
        {
          v61 = (uint64_t *)&unk_10064AAF0;
        }
        else
        {
          v62 = *(uint64_t (**)(void))(v58 + 32);
          v63 = v88;
          v64 = v62();
          v54 = (uint64_t)v87;
          URLResourceValues.contentType.getter(v64);
          v65 = v90;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v54, 1, v90) != 1)
          {
            v66 = v89;
            v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 32);
            v67 = v91(v86, v54, v65);
            v68 = v66;
            v69 = URLResourceValues.localizedName.getter(v67);
            v3 = v95;
            if (v70)
            {
              v71 = *(uint64_t (**)(char *, char *, uint64_t))(v66 + 16);
              v79 = v69;
              v87 = v70;
              v72 = v86;
              v73 = v90;
              v74 = v71(v84, v86, v90);
              Date.init()(v74);
              (*(void (**)(char *, uint64_t))(v68 + 8))(v72, v73);
              (*(void (**)(char *, uint64_t))(v92 + 8))(v88, v93);
              v75 = (uint64_t)v81;
              v76 = v87;
              *v81 = v79;
              *(_QWORD *)(v75 + 8) = v76;
              v91((char *)(v75 + *(int *)(v6 + 20)), (uint64_t)v84, v73);
              (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v75 + *(int *)(v6 + 24), v85, v83);
              v43 = v98;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56))(v75, 0, 1, v6);
              sub_1002789EC(v75, (uint64_t)v32);
              goto LABEL_32;
            }
            (*(void (**)(char *, uint64_t))(v66 + 8))(v86, v90);
            (*(void (**)(char *, uint64_t))(v92 + 8))(v88, v93);
            v43 = v98;
LABEL_31:
            (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v32, 1, 1, v6);
LABEL_32:
            if (v80)
              URL.stopAccessingSecurityScopedResource()();
            (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v97);
            goto LABEL_19;
          }
          (*(void (**)(char *, uint64_t))(v92 + 8))(v63, v93);
          v61 = &qword_100643EC0;
        }
        sub_10000CB4C(v54, v61);
        v3 = v95;
        goto LABEL_31;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, 1, 1, v97);
    }
    sub_10000CB4C((uint64_t)v22, &qword_100643470);
    v43 = v98;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v32, 1, 1, v6);
    goto LABEL_19;
  }
  v95 = v3;
  v96 = a2;
  v34 = v8;
  if ((unint64_t)v33 >> 62)
  {
    if (v33 >= 0)
      v44 = v33 & 0xFFFFFFFFFFFFFF8;
    else
      v44 = v33;
    swift_bridgeObjectRetain(v33);
    v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v44);
    if (v8)
      goto LABEL_4;
    goto LABEL_12;
  }
  v8 = *(char **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v33);
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease(v33);
    v8 = v34;
    v3 = v95;
    a2 = v96;
    goto LABEL_13;
  }
LABEL_4:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
  }
  else
  {
    if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_47;
    }
    v35 = *(id *)(v33 + 32);
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "displayName", swift_bridgeObjectRelease(v33).n128_f64[0]);
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = objc_msgSend(v36, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v41);

  Date.init()(v42);
  *v32 = v38;
  v32[1] = v40;
  v43 = v98;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v32, 0, 1, v6);
  v8 = v34;
  v3 = v95;
  a2 = v96;
LABEL_19:
  sub_100278960((uint64_t)v32, (uint64_t)v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v28, 1, v6) == 1)
  {
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_10064AB00);
    v32 = (uint64_t *)v28;
LABEL_27:
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_10064AB00);
    return;
  }
  sub_1002789A8((uint64_t)v28, (uint64_t)v8);
  v55 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v33 = (*(uint64_t (**)(char *, uint64_t, id))((swift_isaMask & *v3) + 0xB0))(v8, a2, v55);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v77 = v33;
    else
      v77 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v78 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease(v33);
    if (!v78)
      goto LABEL_26;
  }
  else if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_26:
    swift_bridgeObjectRelease(v33);
    sub_10012B5F0((uint64_t)v8);
    goto LABEL_27;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_47:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    goto LABEL_26;
  }
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v56 = *(id *)(v33 + 32);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1002755A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t result;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];

  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!((unint64_t)a2 >> 62))
  {
    v9 = *(id *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a2);
    if (v9)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a2);
    return (uint64_t)v9;
  }
  if (a2 < 0)
    v17 = a2;
  else
    v17 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  result = _CocoaArrayWrapper.endIndex.getter(v17);
  v9 = (id)result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_6:
    v12 = v11;
    v9 = objc_msgSend(v11, "folderItem", swift_bridgeObjectRelease(a2).n128_f64[0]);

    if (v9)
    {
      v13 = *a3;
      swift_bridgeObjectRetain(v13);
      v14 = sub_1000DFC34((uint64_t)v9, v13);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) != 0)
      {

        return 0;
      }
      else
      {
        v16 = Date.init()(v15);
        __chkstk_darwin(v16);
        *(_QWORD *)&v18[-16] = v8;
        sub_100274630((void (*)(double *__return_ptr, double *, id *))sub_100278A34, 0.0, (uint64_t)&v18[-32], a2);
        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    return (uint64_t)v9;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(a2 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100275768(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, unsigned __int8 a9, void (*a10)(_QWORD *, __n128), uint64_t a11)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  __n128 v37;
  _QWORD *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  _BYTE *v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  _BYTE *v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  NSObject *v80;
  _BYTE *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _QWORD *v88;
  _BYTE *v89;
  _BYTE *v90;
  void (*v91)(_BYTE *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  __n128 v95;
  __n128 v96;
  uint64_t v97;
  _BYTE v98[12];
  int v99;
  uint64_t *v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_QWORD *, __n128);
  uint64_t v106;
  unsigned int v107;
  NSObject *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  _QWORD *v125;
  void **aBlock;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  void *v129;
  uint64_t (*v130)();
  _QWORD *v131;

  v104 = type metadata accessor for DispatchTime(0);
  v103 = *(_QWORD *)(v104 - 8);
  v19 = __chkstk_darwin(v104);
  v101 = &v98[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v102 = &v98[-v21];
  v22 = type metadata accessor for DispatchWorkItemFlags(0);
  v116 = *(_QWORD *)(v22 - 8);
  v117 = v22;
  __chkstk_darwin(v22);
  v115 = &v98[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = type metadata accessor for DispatchQoS(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = &v98[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v111 = type metadata accessor for DispatchQoS.QoSClass(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = &v98[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v124 = a1;
  v26 = (uint64_t)sub_100274760(a2, a3, a4, a5, a6, a7, a8);
  v27 = dispatch_group_create();
  v28 = swift_allocObject(&unk_1005D64D8, 24, 7);
  v118 = v28;
  *(_QWORD *)(v28 + 16) = &_swiftEmptyDictionarySingleton;
  v100 = (uint64_t *)(v28 + 16);
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v97 = v26;
    else
      v97 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v29 = _CocoaArrayWrapper.endIndex.getter(v97);
  }
  else
  {
    v29 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
  }
  v106 = a11;
  v105 = a10;
  if (v29)
  {
    if (v29 < 1)
    {
      __break(1u);
      return;
    }
    v99 = a9;
    v30 = 0;
    v122 = v26 & 0xC000000000000001;
    v121 = DOCDocumentSourceIdentifierICloudFPv2;
    v107 = enum case for DispatchQoS.QoSClass.background(_:);
    v123 = v29;
    v108 = v27;
    while (1)
    {
      if (v122)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v26);
      else
        v39 = *(id *)(v26 + 8 * v30 + 32);
      v40 = v39;
      v41 = objc_msgSend(v39, "providerID");
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
      if (v42 == v45 && v44 == v46)
      {
        swift_bridgeObjectRelease_n(v44, 2);
        if (FPIsCloudDocsWithFPFSEnabled(v51))
          goto LABEL_19;
      }
      else
      {
        v48 = v46;
        v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v45, v46, 0);
        swift_bridgeObjectRelease(v44);
        v50 = swift_bridgeObjectRelease(v48);
        if ((v49 & 1) != 0 && FPIsCloudDocsWithFPFSEnabled(v50))
        {
LABEL_19:
          sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
          v52 = v110;
          v53 = v109;
          v54 = v111;
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v110 + 104))(v109, v107, v111);
          v120 = static OS_dispatch_queue.global(qos:)(v53);
          (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v53, v54);
          v55 = (_QWORD *)swift_allocObject(&unk_1005D6668, 48, 7);
          v56 = v124;
          v55[2] = v124;
          v55[3] = v40;
          v55[4] = a2;
          v55[5] = a3;
          v130 = sub_100278920;
          v131 = v55;
          aBlock = _NSConcreteStackBlock;
          v127 = 1107296256;
          v128 = sub_10004A82C;
          v129 = &unk_1005D6680;
          v57 = _Block_copy(&aBlock);
          v58 = v56;
          v119 = v40;
          v59 = swift_bridgeObjectRetain(a3);
          v60 = v112;
          static DispatchQoS.unspecified.getter(v59);
          v125 = _swiftEmptyArrayStorage;
          v61 = sub_10008BAAC();
          v62 = sub_10006922C((uint64_t *)&unk_100647540);
          v63 = sub_1000791AC();
          v64 = a2;
          v65 = v26;
          v66 = v115;
          v67 = a3;
          v68 = v117;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v125, v62, v63, v117, v61);
          v69 = (void *)v120;
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v60, v66, v57);
          _Block_release(v57);

          v70 = v66;
          v26 = v65;
          a2 = v64;
          v71 = v68;
          a3 = v67;
          (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v70, v71);
          v72 = v60;
          v27 = v108;
          (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v72, v114);
          v38 = v131;
          goto LABEL_7;
        }
      }
      dispatch_group_enter(v27);
      v31 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v32 = swift_allocObject(&unk_1005D6500, 24, 7);
      swift_unknownObjectWeakInit(v32 + 16);
      v33 = (_QWORD *)swift_allocObject(&unk_1005D65F0, 64, 7);
      v34 = v118;
      v33[2] = v27;
      v33[3] = v34;
      v33[4] = v32;
      v33[5] = v40;
      v33[6] = a2;
      v33[7] = a3;
      v35 = v40;
      swift_bridgeObjectRetain(a3);
      v36 = v27;
      swift_retain();
      v37 = swift_retain();
      FPItemManager.doc_refetchItem(_:completion:)(v35, sub_100278910, v33, v37);

      swift_release(v32);
      v38 = v33;
LABEL_7:
      swift_release(v38);
      if (v123 == ++v30)
      {
        swift_bridgeObjectRelease(v26);
        if ((v99 & 1) != 0)
          goto LABEL_21;
LABEL_23:
        v89 = v101;
        static DispatchTime.now()(v73);
        v90 = v102;
        + infix(_:_:)(v89, 0.2);
        v91 = *(void (**)(_BYTE *, uint64_t))(v103 + 8);
        v92 = v104;
        v91(v89, v104);
        v93 = OS_dispatch_group.wait(timeout:)(v90) & 1;
        v91(v90, v92);
        if ((static DispatchTimeoutResult.== infix(_:_:)(v93, 0) & 1) != 0)
        {
          v94 = sub_1002743CC(v26, v100);
          v95 = swift_bridgeObjectRelease(v26);
          v105(v94, v95);
          swift_release(v118);
          swift_bridgeObjectRelease(v94);
        }
        else
        {
          v96 = swift_bridgeObjectRelease(v26);
          v105(_swiftEmptyArrayStorage, v96);
          swift_release(v118);
        }

        return;
      }
    }
  }
  swift_bridgeObjectRelease(v26);
  if ((a9 & 1) == 0)
    goto LABEL_23;
LABEL_21:
  v74 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v75 = (void *)static OS_dispatch_queue.main.getter(v74);
  v76 = (_QWORD *)swift_allocObject(&unk_1005D6618, 48, 7);
  v77 = v106;
  v76[2] = v105;
  v76[3] = v77;
  v78 = v118;
  v76[4] = v26;
  v76[5] = v78;
  v130 = sub_100278918;
  v131 = v76;
  aBlock = _NSConcreteStackBlock;
  v127 = 1107296256;
  v128 = sub_10004A82C;
  v129 = &unk_1005D6630;
  v79 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v80 = v27;
  v81 = v112;
  static DispatchQoS.unspecified.getter(v82);
  v125 = _swiftEmptyArrayStorage;
  v83 = sub_10008BAAC();
  v84 = sub_10006922C((uint64_t *)&unk_100647540);
  v85 = sub_1000791AC();
  v86 = v115;
  v87 = v117;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v125, v84, v85, v117, v83);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v81, v86, v75, v79);
  _Block_release(v79);

  (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v86, v87);
  (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v81, v114);
  v88 = v131;
  swift_release(v78);
  swift_release(v88);
}

void sub_100275FF8(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v14;
  uint64_t v15;
  uint64_t Strong;
  id v17;
  id v18;
  __n128 v19;
  _BYTE v20[24];

  if (a1)
  {
    v14 = a1;
    if ((objc_msgSend(v14, "isTrashed") & 1) == 0)
    {
      v17 = objc_msgSend(v14, "itemID");
      swift_beginAccess(a4 + 16, v20, 33, 0);
      v18 = v14;
      sub_10027616C((uint64_t)v18, v17, v19);
      swift_endAccess(v20);

      goto LABEL_7;
    }

  }
  v15 = a5 + 16;
  swift_beginAccess(v15, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = (id)Strong;
    DOCSmartFolderManager.delete(hotFolder:for:)(a6, a7, a8);
LABEL_7:

  }
  dispatch_group_leave(a3);
}

void sub_100276104(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_100465700(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_10027620C(v4);
  *a1 = v2;
}

void sub_10027616C(uint64_t a1, void *a2, __n128 a3)
{
  Swift::Int *v3;
  Swift::Int *v4;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v11;
  Swift::Int v12;

  v4 = v3;
  v7 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v7 < 0)
    v8 = *v3;
  else
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaDictionary.count.getter(v8, a3);
  if (!__OFADD__(v9, 1))
  {
    v7 = sub_1002DAAF8(v8, v9 + 1);
    *v4 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    v12 = *v4;
    *v4 = 0x8000000000000000;
    sub_1003576B8(a1, a2, isUniquelyReferenced_nonNull_native);
    v11 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v11);
    return;
  }
  __break(1u);
}

void sub_10027620C(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::Int v15;
  double v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  double *v29;
  double v30;
  Swift::Int v31;
  double *v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  Swift::Int v105;
  Swift::Int v106;
  uint64_t v107;
  double *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v87 = *a1;
      v88 = *a1 + 8;
      v89 = -1;
      v90 = 1;
      while (1)
      {
        v91 = *(double *)(v87 + 16 * v90 + 8);
        v92 = v89;
        v93 = v88;
        do
        {
          if (*(double *)v93 >= v91)
            break;
          if (!v87)
            goto LABEL_143;
          v94 = *(_QWORD *)(v93 + 8);
          *(_OWORD *)(v93 + 8) = *(_OWORD *)(v93 - 8);
          *(_QWORD *)(v93 - 8) = v94;
          *(double *)v93 = v91;
          v93 -= 16;
        }
        while (!__CFADD__(v92++, 1));
        ++v90;
        v88 += 16;
        --v89;
        if (v90 == v3)
          return;
      }
    }
    goto LABEL_139;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_148:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v102 = a1;
  if (v3 < 2)
  {
    v10 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_105;
    }
    v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_10006922C(&qword_10064AB10);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v104 = (_QWORD *)v9;
    __dst = (double *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v103 = *a1 + 40;
  v13 = (char *)_swiftEmptyArrayStorage;
  v105 = v6;
  v106 = v3;
  v107 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v3)
    {
      v16 = *(double *)(v12 + 16 * v11 + 8);
      v17 = *(double *)(v12 + 16 * v15 + 8);
      v11 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v18 = (double *)(v103 + 16 * v15);
        v19 = v16;
        while (1)
        {
          v20 = v19;
          v19 = *v18;
          if (v17 < v16 == v20 >= *v18)
            break;
          ++v11;
          v18 += 2;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
      }
      if (v17 < v16)
      {
        if (v11 < v15)
          goto LABEL_140;
        if (v15 < v11)
        {
          v21 = 16 * v11;
          v22 = 16 * v15;
          v23 = v11;
          v24 = v15;
          do
          {
            if (v24 != --v23)
            {
              if (!v12)
                goto LABEL_146;
              v25 = v12 + v21;
              v26 = *(_QWORD *)(v12 + v22);
              v27 = *(_QWORD *)(v12 + v22 + 8);
              *(_OWORD *)(v12 + v22) = *(_OWORD *)(v12 + v21 - 16);
              *(_QWORD *)(v25 - 16) = v26;
              *(_QWORD *)(v25 - 8) = v27;
            }
            ++v24;
            v21 -= 16;
            v22 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_138;
      if (v11 - v15 < v6)
      {
        v28 = v15 + v6;
        if (__OFADD__(v15, v6))
          goto LABEL_141;
        if (v28 >= v3)
          v28 = v3;
        if (v28 < v15)
          goto LABEL_142;
        if (v11 != v28)
        {
          v29 = (double *)(v12 + 16 * v11);
          do
          {
            v30 = *(double *)(v12 + 16 * v11 + 8);
            v31 = v15;
            v32 = v29;
            do
            {
              if (*(v32 - 1) >= v30)
                break;
              if (!v12)
                goto LABEL_144;
              v33 = *v32;
              *(_OWORD *)v32 = *((_OWORD *)v32 - 1);
              *(v32 - 1) = v30;
              *(v32 - 2) = v33;
              v32 -= 2;
              ++v31;
            }
            while (v11 != v31);
            ++v11;
            v29 += 2;
          }
          while (v11 != v28);
          v11 = v28;
        }
      }
    }
    if (v11 < v15)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100464E4C(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v35 = *((_QWORD *)v13 + 2);
    v34 = *((_QWORD *)v13 + 3);
    v14 = v35 + 1;
    v12 = v107;
    if (v35 >= v34 >> 1)
    {
      v84 = sub_100464E4C((char *)(v34 > 1), v35 + 1, 1, v13);
      v12 = v107;
      v13 = v84;
    }
    *((_QWORD *)v13 + 2) = v14;
    v36 = v13 + 32;
    v37 = &v13[16 * v35 + 32];
    *(_QWORD *)v37 = v15;
    *((_QWORD *)v37 + 1) = v11;
    if (v35)
      break;
    v14 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v11 >= v106)
    {
      v10 = v104;
LABEL_105:
      v86 = v13;
      v104 = v10;
      if (v14 < 2)
        goto LABEL_95;
      v96 = *v102;
      while (1)
      {
        v97 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v96)
          goto LABEL_147;
        v85 = v86;
        v98 = *(_QWORD *)&v86[16 * v97 + 32];
        v99 = *(_QWORD *)&v86[16 * v14 + 24];
        sub_1002768EC((double *)(v96 + 16 * v98), (double *)(v96 + 16 * *(_QWORD *)&v86[16 * v14 + 16]), v96 + 16 * v99, __dst);
        if (v1)
          goto LABEL_94;
        if (v99 < v98)
          goto LABEL_135;
        if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) == 0)
          v85 = sub_10046564C((uint64_t)v85);
        if (v97 >= *((_QWORD *)v85 + 2))
          goto LABEL_136;
        v100 = &v85[16 * v97 + 32];
        *(_QWORD *)v100 = v98;
        *((_QWORD *)v100 + 1) = v99;
        v101 = *((_QWORD *)v85 + 2);
        if (v14 > v101)
          goto LABEL_137;
        memmove(&v85[16 * v14 + 16], &v85[16 * v14 + 32], 16 * (v101 - v14));
        v86 = v85;
        *((_QWORD *)v85 + 2) = v101 - 1;
        v14 = v101 - 1;
        if (v101 <= 2)
          goto LABEL_95;
      }
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
  }
  while (1)
  {
    v38 = v14 - 1;
    if (v14 >= 4)
    {
      v43 = &v36[16 * v14];
      v44 = *((_QWORD *)v43 - 8);
      v45 = *((_QWORD *)v43 - 7);
      v49 = __OFSUB__(v45, v44);
      v46 = v45 - v44;
      if (v49)
        goto LABEL_122;
      v48 = *((_QWORD *)v43 - 6);
      v47 = *((_QWORD *)v43 - 5);
      v49 = __OFSUB__(v47, v48);
      v41 = v47 - v48;
      v42 = v49;
      if (v49)
        goto LABEL_123;
      v50 = v14 - 2;
      v51 = &v36[16 * v14 - 32];
      v53 = *(_QWORD *)v51;
      v52 = *((_QWORD *)v51 + 1);
      v49 = __OFSUB__(v52, v53);
      v54 = v52 - v53;
      if (v49)
        goto LABEL_125;
      v49 = __OFADD__(v41, v54);
      v55 = v41 + v54;
      if (v49)
        goto LABEL_128;
      if (v55 >= v46)
      {
        v73 = &v36[16 * v38];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v49 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v49)
          goto LABEL_132;
        v66 = v41 < v76;
        goto LABEL_83;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v67 = *((_QWORD *)v13 + 4);
        v68 = *((_QWORD *)v13 + 5);
        v49 = __OFSUB__(v68, v67);
        v60 = v68 - v67;
        v61 = v49;
        goto LABEL_77;
      }
      v40 = *((_QWORD *)v13 + 4);
      v39 = *((_QWORD *)v13 + 5);
      v49 = __OFSUB__(v39, v40);
      v41 = v39 - v40;
      v42 = v49;
    }
    if ((v42 & 1) != 0)
      goto LABEL_124;
    v50 = v14 - 2;
    v56 = &v36[16 * v14 - 32];
    v58 = *(_QWORD *)v56;
    v57 = *((_QWORD *)v56 + 1);
    v59 = __OFSUB__(v57, v58);
    v60 = v57 - v58;
    v61 = v59;
    if (v59)
      goto LABEL_127;
    v62 = &v36[16 * v38];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v49 = __OFSUB__(v63, v64);
    v65 = v63 - v64;
    if (v49)
      goto LABEL_130;
    if (__OFADD__(v60, v65))
      goto LABEL_131;
    if (v60 + v65 >= v41)
    {
      v66 = v41 < v65;
LABEL_83:
      if (v66)
        v38 = v50;
      goto LABEL_85;
    }
LABEL_77:
    if ((v61 & 1) != 0)
      goto LABEL_126;
    v69 = &v36[16 * v38];
    v71 = *(_QWORD *)v69;
    v70 = *((_QWORD *)v69 + 1);
    v49 = __OFSUB__(v70, v71);
    v72 = v70 - v71;
    if (v49)
      goto LABEL_129;
    if (v72 < v60)
      goto LABEL_15;
LABEL_85:
    v77 = v38 - 1;
    if (v38 - 1 >= v14)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!v12)
      goto LABEL_145;
    v78 = v13;
    v79 = &v36[16 * v77];
    v80 = *(_QWORD *)v79;
    v81 = &v36[16 * v38];
    v82 = *((_QWORD *)v81 + 1);
    sub_1002768EC((double *)(v12 + 16 * *(_QWORD *)v79), (double *)(v12 + 16 * *(_QWORD *)v81), v12 + 16 * v82, __dst);
    if (v1)
      break;
    if (v82 < v80)
      goto LABEL_119;
    if (v38 > *((_QWORD *)v78 + 2))
      goto LABEL_120;
    *(_QWORD *)v79 = v80;
    *(_QWORD *)&v36[16 * v77 + 8] = v82;
    v83 = *((_QWORD *)v78 + 2);
    if (v38 >= v83)
      goto LABEL_121;
    v13 = v78;
    v14 = v83 - 1;
    memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
    *((_QWORD *)v78 + 2) = v83 - 1;
    v12 = v107;
    if (v83 <= 2)
      goto LABEL_15;
  }
  v85 = v78;
LABEL_94:
  v86 = v85;
LABEL_95:
  swift_bridgeObjectRelease(v86);
  v104[2] = 0;
  swift_bridgeObjectRelease(v104);
}

uint64_t sub_1002768EC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v6 - 1) >= *(v18 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1004653D4((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v15[1] >= v6[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100276B74(uint64_t a1, uint64_t (*a2)(id, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  v22 = _swiftEmptyArrayStorage;
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v10 = 8 * i;
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v10);
    v12 = *(id *)(*(_QWORD *)(a1 + 48) + v10);
    swift_bridgeObjectRetain(v11);
    v13 = a2(v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease(v11);

    if (v13)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_100153E54(0, v22[2] + 1, 1, v22);
      v20 = v22[2];
      v19 = v22[3];
      if (v20 >= v19 >> 1)
        v22 = sub_100153E54((_QWORD *)(v19 > 1), v20 + 1, 1, v22);
      v22[2] = v20 + 1;
      v21 = &v22[2 * v20];
      v21[4] = v13;
      v21[5] = v15;
      if (v6)
        goto LABEL_4;
    }
    else if (v6)
    {
      goto LABEL_4;
    }
LABEL_7:
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v24)
      goto LABEL_29;
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v24)
        goto LABEL_29;
      v17 = *(_QWORD *)(v23 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v24)
          goto LABEL_29;
        v17 = *(_QWORD *)(v23 + 8 * v7);
        if (!v17)
        {
          v7 = v16 + 3;
          if (v16 + 3 >= v24)
            goto LABEL_29;
          v17 = *(_QWORD *)(v23 + 8 * v7);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v24)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v17 = *(_QWORD *)(v23 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v24)
      goto LABEL_29;
    v17 = *(_QWORD *)(v23 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_100276DD0(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char **v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v6 = (_QWORD *)sub_1003F1CB8((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)a1 >> 62)
    goto LABEL_31;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v7)
  {
LABEL_35:
    swift_bridgeObjectRelease(a1);
    return (uint64_t)v6;
  }
  while (2)
  {
    if (v7 >= 1)
    {
      v8 = 0;
      v9 = a1 & 0xC000000000000001;
      v10 = &selRef_setAccessibilityValue_;
      v46 = v7;
      v47 = a2;
      v45 = a1 & 0xC000000000000001;
      v44 = a1;
      while (1)
      {
        v11 = v9 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1) : *(id *)(a1 + 8 * v8 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, v10[6]);
        if (objc_msgSend(a3, "canAppWithConfiguration:handleNode:", a2, v13))
          break;

LABEL_6:
        if (v7 == ++v8)
          goto LABEL_35;
      }
      v14 = objc_msgSend(v13, "itemIdentifier");
      a2 = v14;
      if (v6[2])
      {
        v15 = v14;
        v16 = sub_100079D38(v15);
        if ((v17 & 1) != 0)
        {
          v18 = *(_QWORD *)(v6[7] + 8 * v16);
          swift_bridgeObjectRetain(v18);

          v19 = v15;
          v20 = v12;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
          v22 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v22 >= v21 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
          v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
          specialized Array._endMutation()(v23);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
          sub_100356E6C(v18, v19, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease(0x8000000000000000);
LABEL_28:
          v7 = v46;
          a2 = v47;
          v9 = v45;
          v10 = &selRef_setAccessibilityValue_;
          goto LABEL_6;
        }

      }
      v25 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v26 = swift_allocObject(v25, 40, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v26 + 32) = v12;
      v48 = v26;
      specialized Array._endMutation()(v26);
      v27 = a2;
      v28 = v12;
      a1 = swift_isUniquelyReferenced_nonNull_native(v6);
      v30 = sub_100079D38(v27);
      v31 = v6[2];
      v32 = (v29 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        if (a1 < 0)
          v41 = a1;
        else
          v41 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v7 = _CocoaArrayWrapper.endIndex.getter(v41);
        if (!v7)
          goto LABEL_35;
        continue;
      }
      a2 = v29;
      if (v6[3] >= v33)
      {
        if ((a1 & 1) == 0)
          sub_1002E8310();
      }
      else
      {
        sub_1002DF72C(v33, a1);
        v34 = sub_100079D38(v27);
        if ((a2 & 1) != (v35 & 1))
          goto LABEL_37;
        v30 = v34;
      }
      if ((a2 & 1) != 0)
      {
        v36 = v6[7];
        swift_bridgeObjectRelease(*(_QWORD *)(v36 + 8 * v30));
        *(_QWORD *)(v36 + 8 * v30) = v48;
      }
      else
      {
        v6[(v30 >> 6) + 8] |= 1 << v30;
        *(_QWORD *)(v6[6] + 8 * v30) = v27;
        *(_QWORD *)(v6[7] + 8 * v30) = v48;
        v37 = v6[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_30;
        v6[2] = v39;
        v40 = v27;
      }

      swift_bridgeObjectRelease(0x8000000000000000);
      a1 = v44;
      goto LABEL_28;
    }
    break;
  }
  __break(1u);
LABEL_37:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v43);
  __break(1u);
  return result;
}

void sub_100277180(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  NSObject *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  NSObject *v35;
  __n128 v36;
  _QWORD *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  NSObject *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  NSObject *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  _QWORD *v125;
  void **aBlock;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  void *v129;
  uint64_t (*v130)();
  _QWORD *v131;

  v110 = type metadata accessor for DispatchQoS.QoSClass(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for DispatchTime(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v102 = (char *)&v100 - v21;
  v22 = type metadata accessor for DispatchWorkItemFlags(0);
  v115 = *(_QWORD *)(v22 - 8);
  v116 = v22;
  __chkstk_darwin(v22);
  v114 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for DispatchQoS(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = a10;
  swift_retain();
  v124 = a1;
  v25 = (uint64_t)sub_100274760(a2, a3, a4, a5, a6, a7, a8);
  v120 = dispatch_group_create();
  v26 = swift_allocObject(&unk_1005D64D8, 24, 7);
  v117 = v26;
  *(_QWORD *)(v26 + 16) = &_swiftEmptyDictionarySingleton;
  v100 = (uint64_t *)(v26 + 16);
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v96 = v25;
    else
      v96 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v27 = _CocoaArrayWrapper.endIndex.getter(v96);
  }
  else
  {
    v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v25);
  }
  v28 = _swiftEmptyArrayStorage;
  if (v27)
  {
    if (v27 >= 1)
    {
      v29 = 0;
      v122 = v25 & 0xC000000000000001;
      v121 = DOCDocumentSourceIdentifierICloudFPv2;
      v106 = enum case for DispatchQoS.QoSClass.background(_:);
      v123 = v27;
      v107 = v25;
      while (1)
      {
        if (v122)
          v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v25);
        else
          v38 = *(id *)(v25 + 8 * v29 + 32);
        v39 = v38;
        v40 = objc_msgSend(v38, "providerID", v100);
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
        if (v41 == v44 && v43 == v45)
        {
          swift_bridgeObjectRelease_n(v43, 2);
          if (FPIsCloudDocsWithFPFSEnabled(v50))
            goto LABEL_19;
        }
        else
        {
          v47 = v45;
          v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v44, v45, 0);
          swift_bridgeObjectRelease(v43);
          v49 = swift_bridgeObjectRelease(v47);
          if ((v48 & 1) != 0 && FPIsCloudDocsWithFPFSEnabled(v49))
          {
LABEL_19:
            sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
            v51 = v109;
            v52 = v108;
            v53 = v110;
            (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v108, v106, v110);
            v119 = static OS_dispatch_queue.global(qos:)(v52);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
            v54 = (_QWORD *)swift_allocObject(&unk_1005D6730, 48, 7);
            v55 = v124;
            v54[2] = v124;
            v54[3] = v39;
            v54[4] = a2;
            v54[5] = a3;
            v130 = sub_100278920;
            v131 = v54;
            aBlock = _NSConcreteStackBlock;
            v127 = 1107296256;
            v128 = sub_10004A82C;
            v129 = &unk_1005D6748;
            v56 = _Block_copy(&aBlock);
            v57 = v55;
            v118 = v39;
            v58 = swift_bridgeObjectRetain(a3);
            v59 = v111;
            static DispatchQoS.unspecified.getter(v58);
            v125 = v28;
            v60 = sub_10008BAAC();
            v61 = sub_10006922C((uint64_t *)&unk_100647540);
            v62 = sub_1000791AC();
            v63 = a2;
            v64 = a3;
            v65 = v114;
            v66 = v28;
            v67 = v116;
            dispatch thunk of SetAlgebra.init<A>(_:)(&v125, v61, v62, v116, v60);
            v68 = (void *)v119;
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v65, v56);
            _Block_release(v56);

            v69 = v65;
            a3 = v64;
            a2 = v63;
            v70 = v67;
            v28 = v66;
            (*(void (**)(char *, uint64_t))(v115 + 8))(v69, v70);
            v71 = v59;
            v25 = v107;
            (*(void (**)(char *, uint64_t))(v112 + 8))(v71, v113);
            v37 = v131;
            goto LABEL_7;
          }
        }
        v30 = v120;
        dispatch_group_enter(v120);
        v31 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v32 = swift_allocObject(&unk_1005D6500, 24, 7);
        swift_unknownObjectWeakInit(v32 + 16);
        v33 = (_QWORD *)swift_allocObject(&unk_1005D66B8, 64, 7);
        v33[2] = v30;
        v33[3] = v117;
        v33[4] = v32;
        v33[5] = v39;
        v33[6] = a2;
        v33[7] = a3;
        swift_retain();
        v34 = v39;
        swift_bridgeObjectRetain(a3);
        v35 = v30;
        v36 = swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)(v34, sub_100278910, v33, v36);

        swift_release(v32);
        v37 = v33;
LABEL_7:
        swift_release(v37);
        if (v123 == ++v29)
          goto LABEL_20;
      }
    }
    __break(1u);
LABEL_35:
    if (a3 < 0)
      v97 = a3;
    else
      v97 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v98 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v94 = _bridgeCocoaArray<A>(_:)(v97, v98);
    swift_bridgeObjectRelease(a3);
    goto LABEL_25;
  }
LABEL_20:
  swift_bridgeObjectRelease(v25);
  a6 = v105;
  if ((a9 & 1) != 0)
  {
    v73 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v74 = (void *)static OS_dispatch_queue.main.getter(v73);
    v75 = (_QWORD *)swift_allocObject(&unk_1005D66E0, 48, 7);
    v75[2] = sub_100278AAC;
    v75[3] = a6;
    v75[4] = v25;
    v76 = v117;
    v75[5] = v117;
    v130 = sub_100278918;
    v131 = v75;
    aBlock = _NSConcreteStackBlock;
    v127 = 1107296256;
    v128 = sub_10004A82C;
    v129 = &unk_1005D66F8;
    v77 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v78 = v111;
    static DispatchQoS.unspecified.getter(v79);
    v125 = v28;
    v80 = sub_10008BAAC();
    v81 = sub_10006922C((uint64_t *)&unk_100647540);
    v82 = sub_1000791AC();
    v83 = v114;
    v84 = v116;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v125, v81, v82, v116, v80);
    v85 = v120;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v78, v83, v74, v77);
    _Block_release(v77);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v83, v84);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v78, v113);
    v86 = v131;
    swift_release(a6);
    swift_release(v76);
    swift_release(v86);
    return;
  }
  v87 = (uint64_t)v28;
  v88 = v101;
  static DispatchTime.now()(v72);
  v89 = v102;
  + infix(_:_:)(v88, 0.2);
  v90 = *(void (**)(char *, uint64_t))(v103 + 8);
  v91 = v104;
  v90(v88, v104);
  v92 = OS_dispatch_group.wait(timeout:)(v89) & 1;
  v90(v89, v91);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v92, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease(v25);
    v95 = v87;
    if ((v87 & 0xC000000000000000) != 0)
    {
      v99 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v95 = _bridgeCocoaArray<A>(_:)(_swiftEmptyArrayStorage, v99);
    }
    swift_beginAccess(a6 + 16, &aBlock, 33, 0);
    sub_1000683EC(v95);
    swift_endAccess(&aBlock);
    swift_release(a6);
    swift_release(v117);
    goto LABEL_29;
  }
  a3 = (uint64_t)sub_1002743CC(v25, v100);
  swift_bridgeObjectRelease(v25);
  a7 = (void *)(a6 + 16);
  if ((unint64_t)a3 >> 62)
    goto LABEL_35;
  v93 = swift_bridgeObjectRetain(a3);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v93);
  v94 = a3;
LABEL_25:
  swift_beginAccess(a7, &aBlock, 33, 0);
  sub_1000683EC(v94);
  swift_endAccess(&aBlock);
  swift_release(a6);
  swift_release(v117);
  swift_bridgeObjectRelease(a3);
LABEL_29:

}

void sub_100277AC4(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, char a9, void *a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  NSObject *v36;
  __n128 v37;
  _QWORD *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD *v76;
  uint64_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  id v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  NSObject *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void *v118;
  _QWORD *v119;
  void **aBlock;
  uint64_t v121;
  uint64_t (*v122)(uint64_t);
  void *v123;
  uint64_t (*v124)();
  _QWORD *v125;

  v105 = type metadata accessor for DispatchQoS.QoSClass(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for DispatchTime(0);
  v99 = *(_QWORD *)(v100 - 8);
  v19 = __chkstk_darwin(v100);
  v97 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v98 = (char *)&v94 - v21;
  v22 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v22 - 8);
  v111 = v22;
  __chkstk_darwin(v22);
  v109 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for DispatchQoS(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_allocObject(&unk_1005D64B0, 24, 7);
  *(_QWORD *)(v25 + 16) = a10;
  v96 = a10;
  v112 = a2;
  v118 = a1;
  v26 = (uint64_t)sub_100274760(a2, a3, a4, a5, a6, a7, a8);
  v27 = dispatch_group_create();
  v28 = swift_allocObject(&unk_1005D64D8, 24, 7);
  v113 = v28;
  *(_QWORD *)(v28 + 16) = &_swiftEmptyDictionarySingleton;
  v95 = (uint64_t *)(v28 + 16);
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v93 = v26;
    else
      v93 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v29 = _CocoaArrayWrapper.endIndex.getter(v93);
  }
  else
  {
    v29 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
  }
  v30 = v112;
  if (v29)
  {
    if (v29 < 1)
    {
      __break(1u);
      return;
    }
    v94 = v25;
    v31 = 0;
    v116 = v26 & 0xC000000000000001;
    v115 = DOCDocumentSourceIdentifierICloudFPv2;
    v101 = enum case for DispatchQoS.QoSClass.background(_:);
    v117 = v29;
    v102 = v27;
    while (1)
    {
      if (v116)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v26);
      else
        v39 = *(id *)(v26 + 8 * v31 + 32);
      v40 = v39;
      v41 = objc_msgSend(v39, "providerID", v94, v95);
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
      if (v42 == v45 && v44 == v46)
      {
        swift_bridgeObjectRelease_n(v44, 2);
        if (FPIsCloudDocsWithFPFSEnabled(v51))
          goto LABEL_19;
      }
      else
      {
        v48 = v46;
        v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v45, v46, 0);
        swift_bridgeObjectRelease(v44);
        v50 = swift_bridgeObjectRelease(v48);
        if ((v49 & 1) != 0 && FPIsCloudDocsWithFPFSEnabled(v50))
        {
LABEL_19:
          sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
          v52 = v104;
          v53 = v103;
          v54 = v105;
          (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, v101, v105);
          v114 = static OS_dispatch_queue.global(qos:)(v53);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
          v55 = (_QWORD *)swift_allocObject(&unk_1005D65A0, 48, 7);
          v56 = v118;
          v55[2] = v118;
          v55[3] = v40;
          v55[4] = v30;
          v55[5] = a3;
          v124 = sub_100278920;
          v125 = v55;
          aBlock = _NSConcreteStackBlock;
          v121 = 1107296256;
          v122 = sub_10004A82C;
          v123 = &unk_1005D65B8;
          v57 = _Block_copy(&aBlock);
          v58 = v56;
          v59 = v40;
          v60 = swift_bridgeObjectRetain(a3);
          v61 = v106;
          static DispatchQoS.unspecified.getter(v60);
          v119 = _swiftEmptyArrayStorage;
          v62 = sub_10008BAAC();
          v63 = sub_10006922C((uint64_t *)&unk_100647540);
          v64 = sub_1000791AC();
          v65 = a3;
          v66 = v26;
          v67 = v109;
          v68 = v111;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v63, v64, v111, v62);
          v69 = (void *)v114;
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v61, v67, v57);
          _Block_release(v57);

          v70 = v67;
          v26 = v66;
          a3 = v65;
          v71 = v68;
          v30 = v112;
          (*(void (**)(char *, uint64_t))(v110 + 8))(v70, v71);
          v72 = v61;
          v27 = v102;
          (*(void (**)(char *, uint64_t))(v107 + 8))(v72, v108);
          v38 = v125;
          goto LABEL_7;
        }
      }
      dispatch_group_enter(v27);
      v32 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v33 = swift_allocObject(&unk_1005D6500, 24, 7);
      swift_unknownObjectWeakInit(v33 + 16);
      v34 = (_QWORD *)swift_allocObject(&unk_1005D6528, 64, 7);
      v34[2] = v27;
      v34[3] = v113;
      v34[4] = v33;
      v34[5] = v40;
      v34[6] = v30;
      v34[7] = a3;
      swift_retain();
      v35 = v40;
      swift_bridgeObjectRetain(a3);
      v36 = v27;
      v37 = swift_retain();
      FPItemManager.doc_refetchItem(_:completion:)(v35, sub_100278910, v34, v37);

      swift_release(v33);
      v38 = v34;
LABEL_7:
      swift_release(v38);
      if (v117 == ++v31)
      {
        swift_bridgeObjectRelease(v26);
        v25 = v94;
        if ((a9 & 1) != 0)
          goto LABEL_21;
LABEL_23:
        v87 = v97;
        static DispatchTime.now()(v73);
        v88 = v98;
        + infix(_:_:)(v87, 0.2);
        v89 = *(void (**)(char *, uint64_t))(v99 + 8);
        v90 = v100;
        v89(v87, v100);
        v91 = OS_dispatch_group.wait(timeout:)(v88) & 1;
        v89(v88, v90);
        if ((static DispatchTimeoutResult.== infix(_:_:)(v91, 0) & 1) != 0)
        {
          v92 = sub_1002743CC(v26, v95);
          swift_bridgeObjectRelease(v26);
          sub_100236770((uint64_t)v92, (uint64_t)v96);
          swift_release(v25);
          swift_release(v113);
          swift_bridgeObjectRelease(v92);
        }
        else
        {
          swift_bridgeObjectRelease(v26);
          sub_100236770((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v96);
          swift_release(v25);
          swift_release(v113);
        }

        return;
      }
    }
  }
  swift_bridgeObjectRelease(v26);
  if ((a9 & 1) == 0)
    goto LABEL_23;
LABEL_21:
  v74 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v75 = (void *)static OS_dispatch_queue.main.getter(v74);
  v76 = (_QWORD *)swift_allocObject(&unk_1005D6550, 48, 7);
  v76[2] = sub_100278BF0;
  v76[3] = v25;
  v77 = v113;
  v76[4] = v26;
  v76[5] = v77;
  v124 = sub_100278918;
  v125 = v76;
  aBlock = _NSConcreteStackBlock;
  v121 = 1107296256;
  v122 = sub_10004A82C;
  v123 = &unk_1005D6568;
  v78 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v79 = v106;
  static DispatchQoS.unspecified.getter(v80);
  v119 = _swiftEmptyArrayStorage;
  v81 = sub_10008BAAC();
  v82 = sub_10006922C((uint64_t *)&unk_100647540);
  v83 = sub_1000791AC();
  v84 = v109;
  v85 = v111;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v82, v83, v111, v81);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v79, v84, v75, v78);
  _Block_release(v78);

  (*(void (**)(char *, uint64_t))(v110 + 8))(v84, v85);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v79, v108);
  v86 = v125;
  swift_release(v25);
  swift_release(v77);
  swift_release(v86);
}

void sub_10027836C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, int a7, void *a8, void *a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD aBlock[5];
  uint64_t v75;

  LODWORD(v70) = a7;
  v69 = a6;
  v72 = a5;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v67 = *(_QWORD *)(v14 - 8);
  v68 = v14;
  __chkstk_darwin(v14);
  v66 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v64 = *(_QWORD *)(v16 - 8);
  v65 = v16;
  __chkstk_darwin(v16);
  v63 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS.QoSClass(0);
  v60 = *(_QWORD *)(v18 - 8);
  v61 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject(&unk_1005D6410, 24, 7);
  *(_QWORD *)(v21 + 16) = a9;
  v22 = (void *)objc_opt_self(DOCFavoritesManager);
  v59 = a9;
  v23 = objc_msgSend(v22, "sharedManager");
  v24 = objc_msgSend(v23, "favoritedLocations");

  v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  v27 = swift_allocObject(&unk_1005D6438, 104, 7);
  v28 = a8;
  *(_QWORD *)(v27 + 16) = a8;
  *(_QWORD *)(v27 + 24) = a1;
  v29 = a2;
  v62 = a1;
  *(_QWORD *)(v27 + 32) = a2;
  *(_QWORD *)(v27 + 40) = a3;
  v30 = a3;
  v31 = a4;
  v32 = v72;
  *(_QWORD *)(v27 + 48) = a4;
  *(_QWORD *)(v27 + 56) = v32;
  v33 = v69;
  *(_QWORD *)(v27 + 64) = v69;
  *(_QWORD *)(v27 + 72) = v26;
  v34 = (char)v70;
  *(_BYTE *)(v27 + 80) = (_BYTE)v70;
  *(_QWORD *)(v27 + 88) = sub_100278808;
  *(_QWORD *)(v27 + 96) = v21;
  v71 = v21;
  if ((v34 & 1) != 0)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v35 = v60;
    v36 = v61;
    (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v20, enum case for DispatchQoS.QoSClass.default(_:), v61);
    v37 = v33;
    v38 = a4;
    v39 = v30;
    swift_bridgeObjectRetain(v29);
    v40 = v28;
    v41 = v71;
    swift_retain();
    v42 = (void *)static OS_dispatch_queue.global(qos:)(v20);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v36);
    v43 = swift_allocObject(&unk_1005D6460, 32, 7);
    *(_QWORD *)(v43 + 16) = sub_100278864;
    *(_QWORD *)(v43 + 24) = v27;
    aBlock[4] = sub_100066584;
    v75 = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D6478;
    v44 = _Block_copy(aBlock);
    swift_retain();
    v45 = v63;
    static DispatchQoS.unspecified.getter(v46);
    v73 = _swiftEmptyArrayStorage;
    v47 = sub_10008BAAC();
    v48 = sub_10006922C((uint64_t *)&unk_100647540);
    v49 = sub_1000791AC();
    v50 = v66;
    v51 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v73, v48, v49, v68, v47);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v50, v44);
    _Block_release(v44);
    swift_release(v27);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v45, v65);
    v52 = v75;
    swift_release(v41);
    swift_release(v52);
  }
  else
  {
    v53 = v33;
    v54 = v33;
    v55 = v31;
    v56 = v30;
    swift_bridgeObjectRetain(v29);
    v57 = v28;
    swift_bridgeObjectRetain(v26);
    v70 = v59;
    v58 = v71;
    swift_retain();
    sub_100277AC4(v57, v62, v29, v56, v55, v72, v53, v26, 0, v70);
    swift_release(v58);
    swift_bridgeObjectRelease(v26);
    swift_release(v27);

  }
}

uint64_t sub_1002787E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100278808(uint64_t a1)
{
  uint64_t v1;

  return sub_100236770(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100278810()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100278864()
{
  uint64_t v0;

  sub_100275768(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80), *(void (**)(_QWORD *, __n128))(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_1002788A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002788C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002788E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_100278924()
{
  void *v0;

  v0 = (void *)docSmartFolderLogHandle;
  if (!docSmartFolderLogHandle)
  {
    DOCInitLogging();
    v0 = (void *)docSmartFolderLogHandle;
  }
  return v0;
}

uint64_t sub_100278958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002755A0(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_100278960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_10064AB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002789A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCSmartFolderInputFile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002789EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_10064AB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100278A34@<D0>(double *a1@<X0>, void **a2@<X1>, double *a3@<X8>)
{
  double v4;
  void *v5;
  Class isa;
  double v7;
  double v8;
  double result;

  v4 = *a1;
  v5 = *a2;
  isa = Date._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "frecencyScoreAtDate:", isa);
  v8 = v7;

  result = v4 + v8;
  *a3 = v4 + v8;
  return result;
}

uint64_t sub_100278AAC(uint64_t a1)
{
  uint64_t v1;

  return sub_10014D564(a1, v1);
}

uint64_t sub_100278AB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100278AFC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100275FF8(a1, a2, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100278B10()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_100278B44()
{
  _QWORD *v0;
  void (*v1)(void);
  _QWORD *v2;
  double result;

  v1 = (void (*)(void))v0[2];
  v2 = sub_1002743CC(v0[4], (uint64_t *)(v0[5] + 16));
  v1();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_100278B94()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100278BC8()
{
  _QWORD *v0;

  return DOCSmartFolderManager.delete(hotFolder:for:)(v0[3], v0[4], v0[5]);
}

uint64_t UIButton.init(configuration:doc_primaryActionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;

  v6 = type metadata accessor for UIButton.Configuration(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  sub_10026173C();
  v11 = swift_allocObject(&unk_1005D6780, 32, 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v12 = swift_retain();
  v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v12, 0, 0, 0, sub_100066584, v11);
  v14 = UIButton.init(configuration:primaryAction:)(v10, v13);
  v15 = swift_release(a3);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(a1, v6, v15);
  return v14;
}

uint64_t sub_100278D58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void UIButton.doc_primaryAction.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];
  uint64_t v5;

  v4[2] = &v5;
  v5 = (uint64_t)_swiftEmptyArrayStorage;
  UIControl.enumerateEventHandlers(_:)(sub_100279060, v4);
  v0 = v5;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v2 = v5;
    else
      v2 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v3 = _CocoaArrayWrapper.endIndex.getter(v2);
    swift_bridgeObjectRelease(v0);
    if (!v3)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRelease(v0);
    return;
  }
  if ((v0 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v1 = *(id *)(v0 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

void UIButton.doc_primaryAction.setter(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;

  v9[2] = &v10;
  v10 = (uint64_t)_swiftEmptyArrayStorage;
  UIControl.enumerateEventHandlers(_:)(sub_1002795A8, v9);
  v3 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v8 = v10;
    else
      v8 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v6 = *(id *)(v3 + 8 * i + 32);
    v7 = v6;
    objc_msgSend(v1, "removeAction:forControlEvents:", v6, 0x2000);

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  if (a1)
  {
    objc_msgSend(v1, "addAction:forControlEvents:", a1, 0x2000);

  }
}

void *sub_100278FEC(void *result, uint64_t a2, __int16 a3, uint64_t a4, _QWORD *a5)
{
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if ((a3 & 0x2000) != 0 && result)
  {
    v6 = result;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
    return (void *)specialized Array._endMutation()(v9);
  }
  return result;
}

void *sub_100279060(void *a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100278FEC(a1, a2, a3, a4, *(_QWORD **)(v4 + 16));
}

void AttributedString.init(_:textStyle:compatibleWith:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t KeyPath;
  id v15;

  v8 = type metadata accessor for AttributeContainer(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AttributeContainer.init()(v9);
  AttributedString.init(_:attributes:)(a1, a2, v11);
  KeyPath = swift_getKeyPath(&unk_1004DF0E0);
  v12 = swift_getKeyPath(&unk_1004DF110);
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", a3, a4);
  v13 = sub_1002793FC();
  AttributedString.subscript.setter(&v15, v12, v13);

}

uint64_t sub_100279308(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_10006922C(&qword_10064AB18);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_100279360()
{
  uint64_t v0;

  v0 = sub_10006922C(&qword_10064AB18);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_1002793A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1002793FC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_1002793C8()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void sub_1002793E0()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

unint64_t sub_1002793FC()
{
  unint64_t result;

  result = qword_100652C10;
  if (!qword_100652C10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_100652C10);
  }
  return result;
}

void sub_100279440(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1002793FC();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_100279464()
{
  return 8;
}

uint64_t sub_100279470(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100279478(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_100279488()
{
  uint64_t v0;

  v0 = sub_10006922C(&qword_10064AB18);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1002794CC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t AttributedString.init(_:font:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t KeyPath;
  uint64_t v14;

  v6 = type metadata accessor for AttributeContainer(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AttributeContainer.init()(v7);
  AttributedString.init(_:attributes:)(a1, a2, v9);
  KeyPath = swift_getKeyPath(&unk_1004DF0E0);
  v10 = swift_getKeyPath(&unk_1004DF110);
  v14 = a3;
  v11 = sub_1002793FC();
  return AttributedString.subscript.setter(&v14, v10, v11);
}

void sub_1002795AC()
{
  char *v0;
  uint64_t ObjectType;
  char *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  NSString *v11;
  id v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[3];
  __int128 v27;
  __int128 v28;

  ObjectType = swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics];
  *(_OWORD *)v2 = xmmword_1004D4D10;
  *((_QWORD *)v2 + 2) = 0x402C000000000000;
  *((_QWORD *)v2 + 3) = &off_1005C02B8;
  *((_QWORD *)v2 + 4) = &off_1005C0308;
  v3 = &v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView;
  v5 = objc_allocWithZone((Class)UIVisualEffectView);
  v6 = v0;
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView] = 0;

  v25.receiver = v6;
  v25.super_class = (Class)type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  v7 = objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = (char *)v7;
  v10 = objc_msgSend(v8, "clearColor");
  v26[1] = 0;
  v26[2] = 0;
  v26[0] = kCAGradientLayerAxial;
  v27 = xmmword_1004DF160;
  v28 = xmmword_1004DF170;
  v11 = kCAGradientLayerAxial;

  v12 = objc_allocWithZone((Class)type metadata accessor for BackdropGradientView());
  v13 = sub_10027A574((uint64_t)v26);
  v14 = OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView;
  v15 = *(void **)&v9[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView];
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView] = v13;

  if (*(_QWORD *)&v9[v14])
  {
    objc_msgSend(v9, "addSubview:");
    v16 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", *(double *)&v9[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics]);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v16);

      v19 = OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView;
      v20 = *(void **)&v9[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView];
      *(_QWORD *)&v9[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView] = v18;

      objc_msgSend(v9, "addSubview:", *(_QWORD *)&v9[v19]);
      sub_10027A198();
      v21 = sub_10006922C((uint64_t *)&unk_1006444C0);
      v22 = swift_allocObject(v21, 48, 7);
      *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v22 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
      *(_QWORD *)(v22 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
      v23 = v9;
      v24 = UIView.registerForTraitChanges<A>(_:handler:)(v22, sub_10027B9D0, 0, ObjectType);
      swift_unknownObjectRelease(v24);
      swift_bridgeObjectRelease(v22);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall DOCTabBarVariableBlurBackgroundView.layoutSubviews()()
{
  char *v0;
  char *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  objc_super v31;
  _QWORD v32[4];
  char v33;
  CGRect v34;
  CGRect v35;

  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  objc_msgSendSuper2(&v31, "layoutSubviews");
  v1 = &v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds];
  v2 = *(double *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds];
  v3 = *(double *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds + 8];
  v4 = *(double *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds + 16];
  v5 = *(double *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_lastSeenBounds + 24];
  objc_msgSend(v0, "bounds");
  v35.origin.x = v6;
  v35.origin.y = v7;
  v35.size.width = v8;
  v35.size.height = v9;
  v34.origin.x = v2;
  v34.origin.y = v3;
  v34.size.width = v4;
  v34.size.height = v5;
  v10 = CGRectEqualToRect(v34, v35);
  objc_msgSend(v0, "bounds");
  *(_QWORD *)v1 = v11;
  *((_QWORD *)v1 + 1) = v12;
  *((_QWORD *)v1 + 2) = v13;
  *((_QWORD *)v1 + 3) = v14;
  if (!v10)
  {
    objc_msgSend(v0, "bounds");
    v16 = v15;
    v18 = v17;
    v19 = *(double *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 8];
    v20 = -v19;
    v22 = v21 + v19;
    v23 = OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_blurView], "setFrame:", v16, -v19);
    v24 = *(void **)&v0[v23];
    *(double *)v32 = v16;
    *(double *)&v32[1] = v20;
    *(double *)&v32[2] = v18;
    *(double *)&v32[3] = v22;
    v33 = 0;
    v25 = v24;
    sub_100279A50((uint64_t)v32);
    v27 = v26;
    objc_msgSend(v25, "setEffect:", v26);

    v28 = OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView;
    v29 = *(void **)&v0[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView];
    if (v29)
    {
      objc_msgSend(v29, "setAlpha:", 1.0);
      v30 = *(void **)&v0[v28];
      if (v30)
      {
        objc_msgSend(v30, "setFrame:", v16, v20, v18, v22);
        sub_10027A198();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCTabBarVariableBlurBackgroundView()
{
  return objc_opt_self(_TtC5Files35DOCTabBarVariableBlurBackgroundView);
}

void sub_100279A50(uint64_t a1)
{
  char *v1;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v6;
  id v7;
  CGFloat *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;
  CGRect v22;
  char v23;
  CGRect v24;

  v6 = *(double *)&v1[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics];
  sub_100070EDC(a1, (uint64_t)&v22, &qword_10064A6C0);
  if ((v23 & 1) != 0
    || (x = v22.origin.x, y = v22.origin.y, width = v22.size.width, height = v22.size.height, CGRectIsEmpty(v22)))
  {
    if (objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", v6))
      return;
    __break(1u);
  }
  v24.origin.x = x;
  v24.origin.y = y;
  v24.size.width = width;
  v24.size.height = height;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", 1.0, CGRectGetHeight(v24));
  v8 = (CGFloat *)swift_allocObject(&unk_1005D6940, 56, 7);
  *((_QWORD *)v8 + 2) = v1;
  v8[3] = x;
  v8[4] = y;
  v8[5] = width;
  v8[6] = height;
  v9 = swift_allocObject(&unk_1005D6968, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10027BD80;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000D9F90;
  v21 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10039318C;
  aBlock[3] = &unk_1005D6980;
  v10 = _Block_copy(aBlock);
  v11 = v21;
  v12 = v1;
  swift_retain();
  v13 = objc_msgSend(v7, "imageWithActions:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v9, "", 111, 104, 36, 1);
  *(_QWORD *)&v14 = swift_release(v9).n128_u64[0];
  if ((v10 & 1) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v13, "size", v14);
  v16 = v15;
  v18 = v17;
  v19 = (id)objc_opt_self(UIBlurEffect);
  if (v16 != 0.0 || v18 != 0.0)
  {
LABEL_10:
    if (objc_msgSend(v19, "_effectWithVariableBlurRadius:imageMask:scale:", v13, v6, 1.0))
      goto LABEL_11;
LABEL_14:
    __break(1u);
    return;
  }
  v19 = objc_msgSend(v19, "effectWithBlurRadius:", v6);
  if (!v19)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  swift_release(v8);

}

void sub_100279CE0(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  double v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  double *v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  Class isa;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  Class v44;
  Class v45;
  id v46;
  void *v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;

  v12 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 24);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v48 = v12;
    *(_QWORD *)&v49 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v13);
    sub_100155270(0, 0, 0);
    v15 = _swiftEmptyArrayStorage;
    v16 = *(_QWORD *)(v13 + 16);
    if (v16)
    {
      v47 = a1;
      v17 = (double)(v14 - 1);
      v18 = (void *)objc_opt_self(UIColor);
      swift_bridgeObjectRetain(v13);
      v19 = 0;
      do
      {
        v20 = *(double *)(v13 + 8 * v19 + 32);
        v21 = objc_msgSend(v18, "blackColor");
        v22 = objc_msgSend(v21, "colorWithAlphaComponent:", v20);

        *(_QWORD *)&v49 = v15;
        v24 = v15[2];
        v23 = v15[3];
        if (v24 >= v23 >> 1)
        {
          sub_100155270(v23 > 1, v24 + 1, 1);
          v15 = (_QWORD *)v49;
        }
        v25 = (double)v19++ / v17;
        v15[2] = v24 + 1;
        v26 = (double *)&v15[2 * v24];
        v26[4] = v25;
        *((_QWORD *)v26 + 5) = v22;
      }
      while (v16 != v19);
      swift_bridgeObjectRelease(v13);
      a1 = v47;
    }
    swift_bridgeObjectRelease(v13);
    v27 = v15[2];
    if (v27)
    {
      *(_QWORD *)&v49 = _swiftEmptyArrayStorage;
      sub_100081858(0, v27, 0);
      v28 = _swiftEmptyArrayStorage;
      v29 = _swiftEmptyArrayStorage[2];
      v30 = 4;
      v31 = v27;
      do
      {
        v32 = v15[v30];
        *(_QWORD *)&v49 = v28;
        v33 = v28[3];
        if (v29 >= v33 >> 1)
        {
          sub_100081858(v33 > 1, v29 + 1, 1);
          v28 = (_QWORD *)v49;
        }
        v28[2] = v29 + 1;
        v28[v29 + 4] = v32;
        v30 += 2;
        ++v29;
        --v31;
      }
      while (v31);
      v34 = sub_10043BB60((uint64_t)v28);
      swift_bridgeObjectRelease(v28);
      sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v48, "setLocations:", isa, swift_bridgeObjectRelease(v34).n128_f64[0]);

      v51 = _swiftEmptyArrayStorage;
      sub_100154DE8(0, v27, 0);
      v36 = 5;
      v37 = _swiftEmptyArrayStorage;
      do
      {
        v38 = (id)v15[v36];
        v39 = objc_msgSend(v38, "CGColor");
        type metadata accessor for CGColor(0);
        v50 = v40;

        *(_QWORD *)&v49 = v39;
        v51 = v37;
        v42 = v37[2];
        v41 = v37[3];
        if (v42 >= v41 >> 1)
        {
          sub_100154DE8(v41 > 1, v42 + 1, 1);
          v37 = v51;
        }
        v37[2] = v42 + 1;
        sub_100079B28(&v49, &v37[4 * v42 + 4]);
        v36 += 2;
        --v27;
      }
      while (v27);
      swift_release(v15);
    }
    else
    {
      v37 = _swiftEmptyArrayStorage;
      v43 = sub_10043BB60((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
      v44 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v48, "setLocations:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);
      swift_release(v15);

    }
    v45 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v48, "setColors:", v45, swift_bridgeObjectRelease(v37).n128_f64[0]);

    objc_msgSend(v48, "setStartPoint:", 0.5, 0.0);
    objc_msgSend(v48, "setEndPoint:", 0.5, 1.0);
    objc_msgSend(v48, "setFrame:", a3, a4, a5, a6);
    v46 = objc_msgSend(a1, "CGContext");
    objc_msgSend(v48, "renderInContext:", v46);

  }
  else
  {

  }
}

void sub_10027A198()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  double *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  id v26;
  _OWORD v27[3];
  uint64_t v28;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_blackColor;
  if (v3 != (id)2)
    v5 = &selRef_whiteColor;
  v6 = objc_msgSend(v4, *v5);
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 32];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v26 = v6;
    *(_QWORD *)&v27[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v7);
    sub_100155270(0, 0, 0);
    v9 = _swiftEmptyArrayStorage;
    v10 = *(_QWORD *)(v7 + 16);
    if (v10)
    {
      v11 = (double)(v8 - 1);
      swift_bridgeObjectRetain(v7);
      v12 = 0;
      do
      {
        v13 = objc_msgSend(v26, "colorWithAlphaComponent:", *(double *)(v7 + 8 * v12 + 32));
        *(_QWORD *)&v27[0] = v9;
        v15 = v9[2];
        v14 = v9[3];
        if (v15 >= v14 >> 1)
        {
          sub_100155270(v14 > 1, v15 + 1, 1);
          v9 = *(_QWORD **)&v27[0];
        }
        v16 = (double)v12++ / v11;
        v9[2] = v15 + 1;
        v17 = (double *)&v9[2 * v15];
        v17[4] = v16;
        *((_QWORD *)v17 + 5) = v13;
      }
      while (v10 != v12);
      swift_bridgeObjectRelease(v7);
    }
    swift_bridgeObjectRelease(v7);
    v18 = *(char **)&v1[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView];
    if (v18)
    {
      v19 = &v18[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradient];
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradient
                          + 8];
      *(_QWORD *)&v18[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradient + 8] = v9;
      v21 = v18;
      swift_retain();
      swift_bridgeObjectRelease(v20);
      v22 = *(_OWORD *)v19;
      v23 = *((_OWORD *)v19 + 1);
      v24 = *((_OWORD *)v19 + 2);
      v28 = *((_QWORD *)v19 + 6);
      v27[1] = v23;
      v27[2] = v24;
      v27[0] = v22;
      v25 = *(void **)&v21[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer];
      sub_10027BCAC((uint64_t)v27);
      sub_10027A83C(v25);
      sub_10027BCEC((uint64_t)v27);

      swift_release(v9);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

  }
}

void sub_10027A404()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_metrics + 32));
  swift_bridgeObjectRelease(v1);

}

id DOCTabBarVariableBlurBackgroundView.__deallocating_deinit(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCTabBarVariableBlurBackgroundView);
}

void sub_10027A4B4()
{
  id v0;
  NSString v1;
  NSString v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectViewBackdropCaptureGroup), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setGroupName:", v1);

  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setGroupNamespace:", v2);

  qword_10064AB20 = (uint64_t)v0;
}

char *sub_10027A574(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v37;
  objc_super v38;

  v3 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer;
  v4 = objc_allocWithZone((Class)CAGradientLayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration;
  if (qword_100640EE0 != -1)
    swift_once(&qword_100640EE0, sub_10027A4B4);
  v7 = (void *)qword_10064AB20;
  v8 = type metadata accessor for DOCBackdropConfiguration();
  swift_allocObject(v8, 72, 7);
  *(_QWORD *)&v5[v6] = sub_10027B03C(1, (uint64_t)v7, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  v9 = &v5[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradient];
  v11 = *(_OWORD *)(a1 + 16);
  v10 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)a1;
  *((_QWORD *)v9 + 6) = *(_QWORD *)(a1 + 48);
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = v10;
  *(_OWORD *)v9 = v12;
  sub_10027BCAC(a1);

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for BackdropGradientView();
  v13 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration;
  v15 = *(_QWORD *)(*(_QWORD *)&v13[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration]
                  + 40);
  v16 = v13;
  objc_msgSend(v16, "setCaptureGroup:", v15);
  v17 = objc_msgSend(v16, "backdropLayer");
  v37 = 23;
  type metadata accessor for CGBlendMode(0);
  v19 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, v18);
  objc_msgSend(v17, "setCompositingFilter:", v19);

  swift_unknownObjectRelease(v19);
  v20 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer;
  v21 = *(id *)&v16[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer];
  sub_10027A83C(v21);

  v22 = objc_msgSend(v16, "backdropLayer");
  objc_msgSend(v22, "setMask:", *(_QWORD *)&v16[v20]);

  v23 = *(id *)&v16[v20];
  v24 = objc_msgSend(v16, "backdropLayer");
  objc_msgSend(v24, "bounds");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;

  objc_msgSend(v23, "setFrame:", v26, v28, v30, v32);
  sub_10027BCEC(a1);

  v33 = *(_QWORD *)&v13[v14];
  v34 = swift_allocObject(&unk_1005D6918, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16);
  v35 = *(_QWORD *)(v33 + 64);
  *(_QWORD *)(v33 + 56) = sub_10027BD54;
  *(_QWORD *)(v33 + 64) = v34;
  swift_release(v35);
  return v16;
}

id sub_10027A83C(void *a1)
{
  double *v1;
  double *v2;
  double v4;
  Class v5;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  NSArray v13;
  Class isa;
  double v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE v28[8];
  objc_class *v29;

  v2 = v1;
  objc_msgSend(a1, "setType:", *(_QWORD *)v1);
  v5 = (Class)*((_QWORD *)v1 + 1);
  if (v5)
  {
    v6 = *((_QWORD *)v5 + 2);
    v7 = _swiftEmptyArrayStorage;
    if (v6)
    {
      *(_QWORD *)&v25 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v5);
      sub_100081858(0, v6, 0);
      v7 = _swiftEmptyArrayStorage;
      v8 = _swiftEmptyArrayStorage[2];
      v9 = 32;
      do
      {
        v10 = *(_QWORD *)((char *)v5 + v9);
        *(_QWORD *)&v25 = v7;
        v11 = v7[3];
        if (v8 >= v11 >> 1)
        {
          sub_100081858(v11 > 1, v8 + 1, 1);
          v7 = (_QWORD *)v25;
        }
        v7[2] = v8 + 1;
        v7[v8 + 4] = v10;
        v9 += 16;
        ++v8;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease(v5);
    }
    v12 = sub_10043BB60((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
    v13.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13.super.isa = 0;
  }
  objc_msgSend(a1, "setLocations:", v13.super.isa, v4);

  sub_100070EDC((uint64_t)(v2 + 2), (uint64_t)v28, &qword_10064AD20);
  sub_100070EDC((uint64_t)v28, (uint64_t)&v29, &qword_10064AD20);
  isa = v29;
  if (v29)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_100648CF0, CAMediaTimingFunction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(a1, "setInterpolations:", isa);

  if (v5)
  {
    v16 = *((_QWORD *)v5 + 2);
    v17 = _swiftEmptyArrayStorage;
    if (v16)
    {
      v27 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v5);
      sub_100154DE8(0, v16, 0);
      v18 = 40;
      v17 = _swiftEmptyArrayStorage;
      do
      {
        v19 = *(id *)((char *)v5 + v18);
        v20 = objc_msgSend(v19, "CGColor");
        type metadata accessor for CGColor(0);
        v26 = v21;

        *(_QWORD *)&v25 = v20;
        v27 = v17;
        v23 = v17[2];
        v22 = v17[3];
        if (v23 >= v22 >> 1)
        {
          sub_100154DE8(v22 > 1, v23 + 1, 1);
          v17 = v27;
        }
        v17[2] = v23 + 1;
        sub_100079B28(&v25, &v17[4 * v23 + 4]);
        v18 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease(v5);
    }
    v5 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  objc_msgSend(a1, "setColors:", v5, v15);

  objc_msgSend(a1, "setStartPoint:", v2[3], v2[4]);
  return objc_msgSend(a1, "setEndPoint:", v2[5], v2[6]);
}

void sub_10027AB48(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  double Height;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  char v25[24];
  CGRect v26;
  CGRect v27;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + 48);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = a2 + 16;
    swift_beginAccess(v6, v25, 0, 0);
    v7 = (char *)swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "bounds");
      Height = CGRectGetHeight(v26);
      objc_msgSend(v5, "bounds");
      v11 = v10;
      v13 = v12;
      objc_msgSend(v5, "bounds");
      objc_msgSend(*(id *)(a1 + 16), "setFrame:", v11, CGRectGetMaxY(v27) - Height, v13, Height);
      objc_msgSend(*(id *)(a1 + 16), "setTranslatesAutoresizingMaskIntoConstraints:", 1);
      objc_msgSend(*(id *)(a1 + 16), "setAutoresizingMask:", 10);
      v14 = *(id *)&v8[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer];
      v15 = objc_msgSend(v8, "backdropLayer");
      objc_msgSend(v15, "bounds");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      objc_msgSend(v14, "setFrame:", v17, v19, v21, v23);
      objc_msgSend(v5, "sendSubviewToBack:", *(_QWORD *)(a1 + 16));
      objc_msgSend(v5, "sendSubviewToBack:", *(_QWORD *)(a1 + 24));
      v24 = objc_msgSend(v8, "effectiveAppearance");
      sub_10027AE68(v24);

    }
  }
}

double sub_10027AD30()
{
  char *v0;
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, __n128);
  __n128 v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for BackdropGradientView();
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration];
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (Strong)
  {
    v4 = (void *)Strong;
    swift_retain();

    v6 = *(void (**)(uint64_t, __n128))(v1 + 56);
    v5 = *(_QWORD *)(v1 + 64);
    v7 = swift_retain();
    v6(v1, v7);
    swift_release(v1);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_10027AE68(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v14[4];

  v3 = *(void **)(*(_QWORD *)(v1
                            + OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration)
                + 24);
  if (a1)
  {
    v4 = v3;
    v5 = a1;
  }
  else
  {
    v6 = objc_allocWithZone((Class)DOCAppearance);
    v7 = v3;
    v5 = objc_msgSend(v6, "init");
  }
  v8 = a1;
  v9 = objc_msgSend(v5, "copy");
  _bridgeAnyObjectToAny(_:)(v14, v9);
  swift_unknownObjectRelease(v9);
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr);
  swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, v10, 7);
  v11 = v13;

  objc_msgSend(v11, "setForceClearBackground:", 0);
  v12 = objc_msgSend(v11, "backgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v12);

}

id sub_10027AFA4()
{
  return sub_1001405E0(0, type metadata accessor for BackdropGradientView);
}

uint64_t type metadata accessor for BackdropGradientView()
{
  return objc_opt_self(_TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView);
}

_QWORD *sub_10027B03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id v9;
  id v10;

  swift_unknownObjectWeakInit(v4 + 6, 0);
  v9 = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectBackdropView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v9, "setRenderMode:", 1);
  objc_msgSend(v9, "setCaptureGroup:", a2);
  v4[4] = a1;
  v4[5] = a2;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4[2] = v9;
  v4[3] = v10;
  v4[7] = a3;
  v4[8] = a4;
  return v4;
}

double sub_10027B0F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  void *v26;
  double result;
  uint64_t v28;
  void (*v29)(uint64_t, __n128);
  __n128 v30;

  v2 = v1;
  v4 = v1 + 48;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 48);
  if (!Strong
    || (v6 = (void *)Strong,
        sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr),
        v7 = a1,
        v8 = static NSObject.== infix(_:_:)(v7, v6),
        v7,
        v7,
        v6,
        (v8 & 1) == 0))
  {
    sub_10027B430();
  }
  swift_unknownObjectWeakAssign(v4, a1);
  objc_msgSend(a1, "addSubview:", *(_QWORD *)(v2 + 24));
  objc_msgSend(a1, "addSubview:", *(_QWORD *)(v2 + 16));
  objc_msgSend(*(id *)(v2 + 24), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = (void *)objc_opt_self(NSLayoutConstraint);
  v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004DAC10;
  v12 = objc_msgSend(*(id *)(v2 + 24), "leadingAnchor");
  v13 = objc_msgSend(*(id *)(v2 + 16), "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v11 + 32) = v14;
  v15 = objc_msgSend(*(id *)(v2 + 24), "trailingAnchor");
  v16 = objc_msgSend(*(id *)(v2 + 16), "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v11 + 40) = v17;
  v18 = objc_msgSend(*(id *)(v2 + 24), "topAnchor");
  v19 = objc_msgSend(*(id *)(v2 + 16), "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v11 + 48) = v20;
  v21 = objc_msgSend(*(id *)(v2 + 24), "bottomAnchor");
  v22 = objc_msgSend(*(id *)(v2 + 16), "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v11 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v26 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v26)
  {

    v29 = *(void (**)(uint64_t, __n128))(v2 + 56);
    v28 = *(_QWORD *)(v2 + 64);
    v30 = swift_retain();
    v29(v2, v30);
    *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  }
  return result;
}

void sub_10027B430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v1 = v0;
  v2 = v0 + 48;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 48);
  if (Strong)
  {
    v8 = (id)Strong;
    v4 = objc_msgSend(*(id *)(v0 + 16), "superview");
    if (!v4)
      goto LABEL_5;
    v5 = v4;
    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v8 = v8;
    v6 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v6, v8);

    if ((v5 & 1) != 0)
    {
      objc_msgSend(*(id *)(v1 + 24), "removeFromSuperview");
      v7 = *(id *)(v1 + 16);
      objc_msgSend(v7, "removeFromSuperview");

      swift_unknownObjectWeakAssign(v2, 0);
    }
    else
    {
LABEL_5:

    }
  }
}

uint64_t sub_10027B558()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for DOCBackdropConfiguration()
{
  return objc_opt_self(_TtC5Files24DOCBackdropConfiguration);
}

uint64_t destroy for Gradient(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = v3;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t destroy for DOCTabBarVariableBlurBackgroundView.Metrics(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for DOCTabBarVariableBlurBackgroundView.Metrics(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for DOCTabBarVariableBlurBackgroundView.Metrics(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a2[3];
  v5 = a1[3];
  a1[3] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[4];
  v7 = a1[4];
  a1[4] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for DOCTabBarVariableBlurBackgroundView.Metrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCTabBarVariableBlurBackgroundView.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCTabBarVariableBlurBackgroundView.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTabBarVariableBlurBackgroundView.Metrics()
{
  return &type metadata for DOCTabBarVariableBlurBackgroundView.Metrics;
}

uint64_t sub_10027B910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v2 = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 8);
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  return static NSObject.== infix(_:_:)(v3, v2) & 1;
}

BOOL sub_10027B978(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_10027B9F0((uint64_t)v5, (uint64_t)v7);
}

void sub_10027B9D0()
{
  sub_10027A198();
}

BOOL sub_10027B9F0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;

  v4 = *(void **)a1;
  v22 = *(id *)a2;
  v23 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  if (v5 == v8 && v7 == v9)
  {
    sub_10007C3B8(&v23);
    sub_10007C3B8(&v22);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10007C390(&v22);
    sub_10007C390(&v23);
LABEL_8:
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a2 + 8);
    if (v14)
    {
      if (!v15)
        return 0;
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + 8));
      v16 = swift_bridgeObjectRetain(v14);
      v17 = sub_10023D344(v16, v15);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) == 0)
        return 0;
    }
    else if (v15)
    {
      return 0;
    }
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a2 + 16);
    if (v18)
    {
      if (!v19)
        return 0;
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + 16));
      v20 = swift_bridgeObjectRetain(v18);
      v21 = sub_10023D474(v20, v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      if ((v21 & 1) == 0)
        return 0;
      return *(double *)(a1 + 24) == *(double *)(a2 + 24)
          && *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48);
    }
    if (!v19)
      return *(double *)(a1 + 24) == *(double *)(a2 + 24)
          && *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48);
    return 0;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  sub_10007C3B8(&v23);
  sub_10007C3B8(&v22);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  sub_10007C390(&v22);
  sub_10007C390(&v23);
  result = 0;
  if ((v12 & 1) != 0)
    goto LABEL_8;
  return result;
}

void sub_10027BBB8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_gradientMaskLayer;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v3 = OBJC_IVAR____TtC5FilesP33_927EDC10B2E512953ACC1C78BA98F69520BackdropGradientView_backdropConfiguration;
  if (qword_100640EE0 != -1)
    swift_once(&qword_100640EE0, sub_10027A4B4);
  v4 = (void *)qword_10064AB20;
  v5 = type metadata accessor for DOCBackdropConfiguration();
  swift_allocObject(v5, 72, 7);
  *(_QWORD *)&v1[v3] = sub_10027B03C(1, (uint64_t)v4, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/UIKit+DOCAdditionsCore.swift", 34, 2, 12, 0);
  __break(1u);
}

uint64_t sub_10027BCAC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
  v4 = v3;
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_10027BCEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_10027BD30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10027BD54(uint64_t a1)
{
  uint64_t v1;

  sub_10027AB48(a1, v1);
}

uint64_t sub_10027BD5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

void sub_10027BD80(void *a1)
{
  uint64_t v1;

  sub_100279CE0(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_10027BD90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for LocationColor()
{
  return &type metadata for LocationColor;
}

double sub_10027BDB0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10027CEB4(a1, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, a2);
}

double sub_10027BDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027CF28(a1, a2, a3, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem);
}

void sub_10027BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  int v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  double v18;
  uint64_t v19;

  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = sub_10027CF28((uint64_t)v7, a1, a2, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, double))(a2 + 32))(a1, a2, v9);
  v11 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus);
  v12 = swift_release(v10);
  if (v11 == 1)
  {
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v12);
    if (v13)
    {
      v15 = v13;
      v16 = v14;
      ObjectType = swift_getObjectType(v13);
      v18 = sub_10027CEB4(a2, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v7);
      (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, double))(v16 + 16))(v2, a2, v7, ObjectType, v16, v18);
      swift_unknownObjectRelease(v15);
      sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
    }
  }
}

id sub_10027BF14(void *a1, uint64_t a2, uint64_t a3)
{
  id result;
  uint64_t v7;

  result = objc_msgSend(a1, "input");
  if (result)
  {

    v7 = sub_10027D5E0();
    return (id)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 40))(v7, ((unint64_t)objc_msgSend(a1, "modifierFlags") >> 18) & 2 | ((unint64_t)objc_msgSend(a1, "modifierFlags") >> 17) & 1, a2, a3);
  }
  return result;
}

uint64_t sub_10027BFCC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, double);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t, double);
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  _QWORD *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD aBlock[5];
  _QWORD *v82;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v77 = *(_QWORD *)(v10 - 8);
  v78 = v10;
  __chkstk_darwin(v10);
  v76 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v74 = *(_QWORD *)(v12 - 8);
  v75 = v12;
  __chkstk_darwin(v12);
  v73 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v69 = v16;
  v70 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v17);
  v79 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v66 - v20;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v66 - v24;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, double))(a4 + 8);
  v80 = a4;
  v27 = v26(a3, a4, v23);
  if (v27)
  {
    v30 = v27;
    v31 = v28;
    ObjectType = swift_getObjectType(v27);
    (*(void (**)(void *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 64))(v5, v80, a1, a2 & 1, ObjectType, v31);
    v29 = swift_unknownObjectRelease(v30);
  }
  v72 = a2;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v71 = a1;
  v68 = v33;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v25, a1, v14, v29);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v15 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v34)(v25, 0, 1, v14);
  v35 = v80;
  v36 = sub_10027CF28((uint64_t)v25, a3, v80, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem);
  v34(v25, 1, 1, v14, v36);
  sub_10027CF28((uint64_t)v25, a3, v35, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart);
  v37 = sub_10006922C(&qword_100644BD0);
  v38 = *(unsigned __int8 *)(v15 + 80);
  v39 = a3;
  v40 = (v38 + 32) & ~v38;
  v41 = v40 + *(_QWORD *)(v15 + 72);
  v67 = v38 | 7;
  v42 = swift_allocObject(v37, v41, v38 | 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004D9670;
  v43 = sub_10027CEB4(v35, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v21);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t, double))(v15 + 48);
  result = v44(v21, 1, v14, v43);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v46 = v42 + v40;
    v66 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v66(v46, v21, v14);
    sub_10027CAA0(v42, 0, 0);
    swift_setDeallocating(v42);
    swift_arrayDestroy(v46, *(_QWORD *)(v42 + 16), v14);
    swift_deallocClassInstance(v42, 32, 7);
    v47 = v79;
    v48 = sub_10027CEB4(v80, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v79);
    result = v44((char *)v47, 1, v14, v48);
    if ((_DWORD)result != 1)
    {
      v49 = v80;
      sub_10027CFEC(v47, v39, v80);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v47, v14);
      v50 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v51 = (void *)static OS_dispatch_queue.main.getter(v50);
      v52 = v70;
      v68(v70, v71, v14);
      v53 = (v38 + 40) & ~v38;
      v54 = v53 + v69;
      v55 = (_QWORD *)swift_allocObject(&unk_1005D6A48, v53 + v69 + 1, v67);
      v55[2] = v39;
      v55[3] = v49;
      v55[4] = v5;
      v66((uint64_t)v55 + v53, v52, v14);
      *((_BYTE *)v55 + v54) = v72 & 1;
      aBlock[4] = sub_10027EAAC;
      v82 = v55;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D6A60;
      v56 = _Block_copy(aBlock);
      v57 = v82;
      v58 = v5;
      swift_release(v57);
      v59 = v73;
      static DispatchQoS.unspecified.getter(v60);
      aBlock[0] = _swiftEmptyArrayStorage;
      v61 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v62 = sub_10006922C((uint64_t *)&unk_100647540);
      v63 = sub_1000791AC();
      v64 = v76;
      v65 = v78;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v62, v63, v78, v61);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v64, v56);
      _Block_release(v56);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v65);
      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v59, v75);
    }
  }
  __break(1u);
  return result;
}

id sub_10027C4E0(uint64_t a1, unint64_t a2, char *a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  id v27;
  id result;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t, double);
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  id v50;
  char v51;
  const void *v52;
  uint64_t ObjectType;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE v58[24];
  char v59[24];

  v5 = v4;
  v56 = a2;
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - v13;
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100640EF0 != -1)
    swift_once(&qword_100640EF0, sub_10027CFA4);
  v19 = sub_10007E788(v15, (uint64_t)qword_10064AD28);
  v20 = swift_beginAccess(v19, v59, 0, 0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v18, v19, v15, v20);
  v22 = Date.timeIntervalSinceNow.getter(v21);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *(double *)&qword_10064AD40 = -v22;
  Date.init()(v23);
  v24 = swift_beginAccess(v19, v58, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v16 + 40))(v19, v18, v15, v24);
  swift_endAccess(v58);
  sub_10027E964();
  v25 = objc_msgSend(v5, "effectiveUserInterfaceLayoutDirection");
  v57 = a4;
  if (a1 == 4)
  {
    if (v25 == (id)1)
      a1 = 3;
    else
      a1 = 4;
  }
  else if (a1 == 3)
  {
    if (v25 == (id)1)
      a1 = 4;
    else
      a1 = 3;
  }
  v26 = v56 & 3;
  v27 = objc_msgSend(v5, "indexPathsForSelectedItems");
  if (v27)
  {

    result = objc_msgSend(v5, "indexPathsForSelectedItems");
    if (!result)
    {
      __break(1u);
      goto LABEL_33;
    }
    v29 = result;
    v30 = type metadata accessor for IndexPath(0);
    v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

    v32 = *(_QWORD *)(v31 + 16);
    swift_bridgeObjectRelease(v31);
    if (v32)
    {
      v33 = sub_10027CEB4(v57, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v14);
      v34 = *(_QWORD *)(v30 - 8);
      v35 = *(uint64_t (**)(char *, uint64_t, uint64_t, double))(v34 + 48);
      v36 = v35(v14, 1, v30, v33);
      v27 = (id)sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
      if (v36 != 1 && v26 != 2)
      {
        if ((v56 & 1) == 0)
        {
LABEL_17:
          if (qword_100640EE8 != -1)
            v27 = (id)swift_once(&qword_100640EE8, sub_10027CDDC);
          static os_log_type_t.debug.getter(v27);
          v37 = sub_10006922C((uint64_t *)&unk_100644560);
          v38 = swift_allocObject(v37, 72, 7);
          *(_OWORD *)(v38 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v38 + 56) = a3;
          *(_QWORD *)(v38 + 64) = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a3);
          *(_QWORD *)(v38 + 32) = v5;
          v5;
          os_log(_:dso:log:type:_:)("Changing focus in in %p", v52);
          swift_bridgeObjectRelease(v38);
          return (id)sub_10027E278(a1, (uint64_t)a3, v57);
        }
        if ((objc_msgSend(v5, "isEditing") & 1) != 0)
          return (id)sub_10027D830(a1, (v56 >> 1) & 1, a3, v57);
        v27 = (id)(*(uint64_t (**)(char *))(v57 + 8))(a3);
        if (!v27)
          goto LABEL_17;
        v54 = v43;
        v55 = v27;
        v44 = sub_10006922C(&qword_100644BD0);
        v45 = *(unsigned __int8 *)(v34 + 80);
        v46 = (v45 + 32) & ~v45;
        v47 = swift_allocObject(v44, v46 + *(_QWORD *)(v34 + 72), v45 | 7);
        *(_OWORD *)(v47 + 16) = xmmword_1004D9670;
        v48 = sub_10027CEB4(v57, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v11);
        result = (id)v35(v11, 1, v30, v48);
        if ((_DWORD)result != 1)
        {
          v49 = v47 + v46;
          v50 = v55;
          ObjectType = swift_getObjectType(v55);
          (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v49, v11, v30);
          v51 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v54 + 96))(v5, v57, v47, ObjectType);
          swift_setDeallocating(v47);
          swift_arrayDestroy(v49, *(_QWORD *)(v47 + 16), v30);
          swift_deallocClassInstance(v47, 32, 7);
          swift_unknownObjectRelease(v50);
          if ((v51 & 1) == 0)
            goto LABEL_17;
          return (id)sub_10027D830(a1, (v56 >> 1) & 1, a3, v57);
        }
LABEL_33:
        __break(1u);
        return result;
      }
    }
  }
  if (qword_100640EE8 != -1)
    v27 = (id)swift_once(&qword_100640EE8, sub_10027CDDC);
  static os_log_type_t.debug.getter(v27);
  v39 = sub_10006922C((uint64_t *)&unk_100644560);
  v40 = swift_allocObject(v39, 72, 7);
  *(_OWORD *)(v40 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v40 + 56) = a3;
  *(_QWORD *)(v40 + 64) = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a3);
  *(_QWORD *)(v40 + 32) = v5;
  v41 = v5;
  os_log(_:dso:log:type:_:)("Focusing inital item in %p", v52);
  swift_bridgeObjectRelease(v40);
  if (v26 == 2)
  {
    v42 = v57;
    if ((unint64_t)(a1 - 1) <= 3)
      a1 = qword_1004DF370[a1 - 1];
  }
  else
  {
    v42 = v57;
  }
  return (id)sub_10027E704(a1, v26 == 2, (uint64_t)a3, v42);
}

double sub_10027CAA0(uint64_t a1, int a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  Class v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  int v42;
  id v43;

  v4 = v3;
  v41 = a3;
  v42 = a2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  v43 = v4;
  v20 = objc_msgSend(v4, "indexPathsForSelectedItems", v17);
  v38 = a1;
  if (v20)
  {
    v22 = v20;
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v6);

    v24 = *(_QWORD *)(v23 + 16);
    v37 = v23;
    if (v24)
    {
      v25 = v23 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      v39 = *(_QWORD *)(v7 + 72);
      v40 = v26;
      swift_bridgeObjectRetain(v23);
      while (1)
      {
        v40(v19, v25, v6);
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v27(v19, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v6) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v19, v6);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v43, "deselectItemAtIndexPath:animated:", isa, v42 & 1);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        v25 += v39;
        if (!--v24)
          goto LABEL_8;
      }
    }
    else
    {
      v29 = v23;
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain(v29);
LABEL_8:
      v27(v19, 1, 1, v6);
    }
    swift_bridgeObjectRelease_n(v37, 2);
    a1 = v38;
  }
  if (a1)
  {
    v30 = *(_QWORD *)(a1 + 16);
    if (v30)
    {
      v31 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 72);
      v32 = a1;
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain(v32);
      while (1)
      {
        v33(v15, v31, v6);
        v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v34(v15, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v15, v6);
        v35 = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v43, "selectItemAtIndexPath:animated:scrollPosition:", v35, v42 & 1, v41);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v31 += (uint64_t)v40;
        if (!--v30)
          goto LABEL_17;
      }
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain(a1);
LABEL_17:
      v34(v15, 1, 1, v6);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  return result;
}

uint64_t sub_10027CDDC()
{
  uint64_t result;

  sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000019, 0x8000000100512330, 0x6472616F6279654BLL, 0xED00007375636F46);
  qword_100672AC8 = result;
  return result;
}

uint64_t sub_10027CE54()
{
  uint64_t v0;

  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t *)&unk_100642710);
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, (uint64_t *)&unk_100642710);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10027CEAC()
{
  return type metadata accessor for DOCFocusableCollectionViewState(0);
}

double sub_10027CEB4@<D0>(uint64_t a1@<X1>, _QWORD *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v5 = (*(uint64_t (**)(void))(a1 + 32))();
  v6 = v5 + *a2;
  swift_beginAccess(v6, v8, 0, 0);
  sub_1000271D4(v6, a3, (uint64_t *)&unk_100642710);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_10027CF28(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[24];

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  v7 = v6 + *a4;
  swift_beginAccess(v7, v9, 33, 0);
  sub_1000B33AC(a1, v7);
  swift_endAccess(v9);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10027CFA4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Date(0);
  sub_10007E874(v0, qword_10064AD28);
  v1 = sub_10007E788(v0, (uint64_t)qword_10064AD28);
  return Date.init()(v1);
}

void sub_10027CFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  double top;
  double v30;
  double left;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Class v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  double v71;
  double MinY;
  CGFloat v73;
  double MaxY;
  uint64_t v75;
  CGFloat v76;
  double v77;
  double v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = IndexPath.section.getter(v12);
  v14 = objc_msgSend(v4, "numberOfSections");
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  if (v13 >= (uint64_t)v14)
  {
    v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    goto LABEL_7;
  }
  v16 = IndexPath.item.getter(v15);
  v17 = objc_msgSend(v4, "numberOfItemsInSection:", IndexPath.section.getter(v16));
  v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v16 >= (uint64_t)v17)
  {
LABEL_7:
    v32 = static os_log_type_t.error.getter(v18);
    v33 = sub_10006922C((uint64_t *)&unk_100644560);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
    v35 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v36 = dispatch thunk of CustomStringConvertible.description.getter(v8, v35);
    v38 = v37;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_10006A638();
    *(_QWORD *)(v34 + 32) = v36;
    *(_QWORD *)(v34 + 40) = v38;
    v39 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v40 = (Class)static OS_os_log.default.getter(v39);
    os_log(_:dso:log:type:_:)("Unable to determine frame of cell for item at index beyond bounds: %@", 69, 2, &_mh_execute_header, v40, v32, v34);
LABEL_8:
    swift_bridgeObjectRelease(v34);
    goto LABEL_9;
  }
  v19 = objc_msgSend(v4, "collectionViewLayout");
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v19, "layoutAttributesForItemAtIndexPath:", isa);

  if (!v21)
  {
    v41 = static os_log_type_t.error.getter(v22);
    v42 = sub_10006922C((uint64_t *)&unk_100644560);
    v34 = swift_allocObject(v42, 72, 7);
    *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
    v43 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v44 = dispatch thunk of CustomStringConvertible.description.getter(v8, v43);
    v46 = v45;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_10006A638();
    *(_QWORD *)(v34 + 32) = v44;
    *(_QWORD *)(v34 + 40) = v46;
    v47 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v40 = (Class)static OS_os_log.default.getter(v47);
    os_log(_:dso:log:type:_:)("Unable to determine frame of cell for item: %@", 46, 2, &_mh_execute_header, v40, v41, v34);
    goto LABEL_8;
  }
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  if (v23)
  {
    v26 = v23;
    v27 = v24;
    ObjectType = swift_getObjectType(v23);
    top = (*(double (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 48))(v4, a3, a1, ObjectType, v27);
    left = v30;
    *(_QWORD *)&v25 = swift_unknownObjectRelease(v26).n128_u64[0];
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
  }
  objc_msgSend(v21, "frame", v25);
  v52 = sub_10007EAFC(v48, v49, v50, v51, top, left);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  objc_msgSend(v4, "_effectiveContentInset");
  v60 = v59;
  v62 = v61;
  v78 = v63;
  v65 = v64;
  objc_msgSend(v4, "contentOffset");
  v67 = v62 + v66;
  objc_msgSend(v4, "contentOffset");
  v77 = v60 + v68;
  objc_msgSend(v4, "bounds");
  v69 = CGRectGetWidth(v79) - v62 - v65;
  v70 = v52;
  objc_msgSend(v4, "bounds");
  v71 = CGRectGetHeight(v80) - v60 - v78;
  v81.origin.x = v52;
  v81.origin.y = v54;
  v81.size.width = v56;
  v81.size.height = v58;
  MinY = CGRectGetMinY(v81);
  v76 = v67;
  v82.origin.x = v67;
  v73 = v77;
  v82.origin.y = v77;
  v78 = v69;
  v82.size.width = v69;
  v82.size.height = v71;
  if (MinY < CGRectGetMinY(v82))
    goto LABEL_14;
  v83.origin.x = v70;
  v83.origin.y = v54;
  v83.size.width = v56;
  v83.size.height = v58;
  MaxY = CGRectGetMaxY(v83);
  v84.origin.x = v76;
  v84.origin.y = v73;
  v84.size.width = v78;
  v84.size.height = v71;
  if (CGRectGetMaxY(v84) < MaxY)
  {
LABEL_14:
    objc_msgSend(v4, "scrollRectToVisible:animated:", 0, v70, v54, v56, v58);
    objc_msgSend(v4, "_flashScrollIndicatorsPersistingPreviousFlashes");
  }
  v40 = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "scrollToItemAtIndexPath:atScrollPosition:animated:", v40, 0, 0);

LABEL_9:
}

uint64_t sub_10027D4FC(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  Class isa;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  UIAccessibilityPostNotification(0x3FCu, v11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  if (result)
  {
    v14 = result;
    v15 = v13;
    ObjectType = swift_getObjectType(result, v13);
    (*(void (**)(void *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 72))(a1, a5, a2, a3 & 1, ObjectType, v15);
    return swift_unknownObjectRelease(v14);
  }
  return result;
}

uint64_t sub_10027D5E0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v1 = objc_msgSend(v0, "input");
  if (!v1)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x800000010051FB00, "Files/DOCFocusableCollectionView.swift", 38, 2, 372, 0);
    goto LABEL_30;
  }
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  if (v6 == v3 && v7 == v5)
  {
    v11 = 1;
LABEL_9:
    swift_bridgeObjectRelease(v5);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v3, v5, 0);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
    v11 = 1;
LABEL_10:
    swift_bridgeObjectRelease(v5);
    return v11;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  if (v13 == v3 && v14 == v5)
  {
    v11 = 2;
    goto LABEL_9;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v3, v5, 0);
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
  {
    v11 = 2;
    goto LABEL_10;
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v20 = v19;
  if (v18 == v3 && v19 == v5)
  {
    v11 = 3;
    goto LABEL_9;
  }
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v3, v5, 0);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
  {
    v11 = 3;
    goto LABEL_10;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v24 = v23;
  if (v22 == v3 && v23 == v5)
  {
    v11 = 4;
    goto LABEL_9;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v3, v5, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) == 0)
  {
    while (1)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x800000010051FB30, "Files/DOCFocusableCollectionView.swift", 38, 2, 379, 0);
LABEL_30:
      __break(1u);
    }
  }
  return 4;
}

uint64_t sub_10027D830(uint64_t a1, int a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __n128 v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  char *v70;
  double v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  void (*v89)(char *, uint64_t, double);
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  uint64_t v99;
  double v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t result;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t (*v156)(char *, uint64_t);
  char *v157;
  unsigned int (*v158)(char *, uint64_t, uint64_t, double);
  uint64_t v159;

  v5 = v4;
  LODWORD(v156) = a2;
  v149 = a1;
  v144 = sub_10006922C(&qword_100649188);
  __chkstk_darwin(v144);
  v143 = (uint64_t *)((char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10006922C(&qword_100649190);
  __chkstk_darwin(v9);
  v150 = (uint64_t *)((char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v155 = (char *)&v139 - v12;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v141 = (char *)&v139 - v18;
  __chkstk_darwin(v19);
  v148 = (char *)&v139 - v20;
  v21 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v21);
  v145 = (uint64_t)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v151 = (char *)&v139 - v24;
  __chkstk_darwin(v25);
  v146 = (uint64_t)&v139 - v26;
  __chkstk_darwin(v27);
  v153 = (uint64_t)&v139 - v28;
  __chkstk_darwin(v29);
  v139 = (uint64_t)&v139 - v30;
  __chkstk_darwin(v31);
  v147 = (char *)&v139 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v139 - v34;
  __chkstk_darwin(v36);
  v152 = (uint64_t)&v139 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v139 - v39;
  v157 = a3;
  v159 = v5;
  v41 = sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, (uint64_t)&v139 - v39);
  v154 = v14;
  v42 = v13;
  v158 = *(unsigned int (**)(char *, uint64_t, uint64_t, double))(v14 + 48);
  LODWORD(a3) = v158(v40, 1, v13, v41);
  sub_10000CB4C((uint64_t)v40, (uint64_t *)&unk_100642710);
  if ((_DWORD)a3 == 1)
  {
    v44 = v152;
    v45 = (uint64_t)v157;
    sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v152);
    v43.n128_f64[0] = sub_10027CF28(v44, v45, a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart);
  }
  v46 = v159;
  v140 = v16;
  v142 = a4;
  if ((v156 & 1) == 0
    || (v156 = *(uint64_t (**)(char *, uint64_t))(a4 + 8),
        (v47 = ((uint64_t (*)(char *, uint64_t, __n128))v156)(v157, a4, v43)) == 0)
    || (v49 = v47,
        v50 = v48,
        v51 = swift_getObjectType(v47),
        v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 80))(v46, a4, v149, v51, v50), v53 = swift_unknownObjectRelease(v49), (v52 & 1) == 0))
  {
    v70 = v157;
    v71 = sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v35);
    if (v158(v35, 1, v13, v71) == 1)
    {
LABEL_33:
      sub_10000CB4C((uint64_t)v35, (uint64_t *)&unk_100642710);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000048, 0x800000010051D1C0, "Files/DOCFocusableCollectionView.swift", 38, 2, 278, 0);
      __break(1u);
      return result;
    }
    v72 = v154;
    v73 = *(void (**)(char *, char *, uint64_t))(v154 + 32);
    v74 = v148;
    v73(v148, v35, v13);
    v156 = *(uint64_t (**)(char *, uint64_t))(a4 + 8);
    v75 = v156(v70, a4);
    v35 = v70;
    if (v75)
    {
      v77 = v75;
      v78 = v76;
      ObjectType = swift_getObjectType(v75);
      v80 = v147;
      (*(void (**)(uint64_t, uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 32))(v46, a4, v74, v149, 0, ObjectType, v78);
      v81 = v77;
      v82 = (uint64_t)v80;
      v83 = swift_unknownObjectRelease(v81);
      if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v158)(v80, 1, v13, v83) != 1)
      {
        v84 = v141;
        v73(v141, v80, v13);
        v85 = v152;
        (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v152, v84, v13);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v85, 0, 1, v13);
        v86 = v85;
        v87 = v159;
        v88 = sub_10027CF28(v86, (uint64_t)v35, a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem);
        v89 = *(void (**)(char *, uint64_t, double))(v72 + 8);
        v89(v84, v13, v88);
        ((void (*)(char *, uint64_t))v89)(v74, v13);
LABEL_15:
        v90 = v156(v35, a4);
        v92 = (uint64_t *)v155;
        v93 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, double))v158;
        if (!v90)
        {
          v113 = sub_10006922C(&qword_100649198);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v92, 1, 1, v113);
          v63 = v92;
          goto LABEL_21;
        }
        v94 = v87;
        v95 = v90;
        v96 = v91;
        v97 = v153;
        v98 = sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, v153);
        if (v93(v97, 1, v13, v98) == 1)
        {
          __break(1u);
        }
        else
        {
          v99 = v146;
          v100 = sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v146);
          v101 = v99;
          if (v93(v99, 1, v13, v100) != 1)
          {
            v102 = a4;
            v103 = swift_getObjectType(v95);
            v104 = sub_10006922C(&qword_100649198);
            v105 = (uint64_t *)v155;
            v106 = v94;
            v107 = v102;
            v108 = v153;
            v109 = v101;
            v110 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 40))(&v155[*(int *)(v104 + 48)], v106, v107, v153, v101, v103, v96);
            v111 = swift_unknownObjectRelease(v95);
            ((void (*)(uint64_t, uint64_t, __n128))v89)(v109, v13, v111);
            v112 = v108;
            v63 = v105;
            ((void (*)(uint64_t, uint64_t))v89)(v112, v13);
            *v105 = v110;
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v105, 0, 1, v104);
            goto LABEL_19;
          }
        }
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      v82 = (uint64_t)v147;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v147, 1, 1, v13);
    }
    v89 = *(void (**)(char *, uint64_t, double))(v72 + 8);
    ((void (*)(char *, uint64_t))v89)(v74, v13);
    sub_10000CB4C(v82, (uint64_t *)&unk_100642710);
    v87 = v159;
    goto LABEL_15;
  }
  v54 = v157;
  v55 = ((uint64_t (*)(char *, uint64_t, __n128))v156)(v157, a4, v53);
  if (!v55)
  {
    v138 = sub_10006922C(&qword_100649198);
    v63 = (uint64_t *)v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v155, 1, 1, v138);
    v35 = v54;
    goto LABEL_21;
  }
  v57 = v55;
  v35 = v56;
  v58 = v139;
  v59 = sub_10027CEB4(a4, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v139);
  v60 = v58;
  v61 = v58;
  v13 = v42;
  v62 = v158((char *)v61, 1, v42, v59);
  v63 = (uint64_t *)v155;
  if (v62 == 1)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v64 = swift_getObjectType(v57);
  v65 = sub_10006922C(&qword_100649198);
  v66 = v46;
  v67 = v60;
  v68 = (*((uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))v35 + 11))((char *)v63 + *(int *)(v65 + 48), v66, a4, v60, v149, v64, v35);
  v69 = swift_unknownObjectRelease(v57);
  (*(void (**)(uint64_t, uint64_t, __n128))(v154 + 8))(v67, v42, v69);
  *v63 = v68;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v63, 0, 1, v65);
LABEL_19:
  v35 = v157;
LABEL_21:
  v114 = v150;
  sub_1000271D4((uint64_t)v63, (uint64_t)v150, &qword_100649190);
  v115 = sub_10006922C(&qword_100649198);
  v116 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 48))(v114, 1, v115);
  v117 = (uint64_t)v151;
  if (v116 == 1)
  {
    sub_10000CB4C((uint64_t)v114, &qword_100649190);
    v118 = (uint64_t)v63;
    v119 = &qword_100649190;
  }
  else
  {
    v120 = *v114;
    v121 = (uint64_t)v114 + *(int *)(v115 + 48);
    v123 = v143;
    v122 = v144;
    v124 = (uint64_t)v143 + *(int *)(v144 + 48);
    *v143 = v120;
    sub_10016CC70(v121, v124);
    v125 = *v123;
    sub_10016CC70((uint64_t)v123 + *(int *)(v122 + 48), v117);
    v126 = v159;
    v127 = v142;
    v128 = v156(v35, v142);
    if (v128)
    {
      v130 = v128;
      v131 = v129;
      v132 = swift_getObjectType(v128);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 104))(v126, v127, v125, v132, v131);
      swift_unknownObjectRelease(v130);
    }
    swift_bridgeObjectRelease(v125);
    v133 = v145;
    sub_1000271D4(v117, v145, (uint64_t *)&unk_100642710);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v158)(v133, 1, v13) == 1)
    {
      sub_10000CB4C(v117, (uint64_t *)&unk_100642710);
      sub_10000CB4C((uint64_t)v63, &qword_100649190);
      v118 = v133;
      v119 = (uint64_t *)&unk_100642710;
    }
    else
    {
      v134 = v154;
      v135 = (uint64_t)v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 32))(v140, v133, v13);
      v136 = v152;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v152, v135, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v134 + 56))(v136, 0, 1, v13);
      sub_10027CF28(v136, (uint64_t)v35, v127, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem);
      sub_10027CFEC(v135, (uint64_t)v35, v127);
      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v13);
      sub_10000CB4C(v117, (uint64_t *)&unk_100642710);
      v119 = &qword_100649190;
      v118 = (uint64_t)v63;
    }
  }
  return sub_10000CB4C(v118, v119);
}

uint64_t sub_10027E278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Class isa;
  uint64_t v42;
  unint64_t v43;
  NSIndexPath v44;
  __n128 v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v4 = v3;
  v60 = a1;
  v7 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v7);
  v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v56 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v56 - v17;
  v19 = sub_10027CEB4(a3, &OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, (uint64_t)v12);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t, double))(v14 + 48);
  if (v20(v12, 1, v13, v19) == 1)
    return sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
  v57 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v57(v18, v12, v13);
  v22 = a2;
  v23 = *(uint64_t (**)(void))(a3 + 8);
  v59 = v22;
  v24 = v23();
  if (v24)
  {
    v26 = v24;
    v27 = v25;
    ObjectType = swift_getObjectType(v24);
    LOBYTE(v27) = (*(uint64_t (**)(void *, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v27 + 112))(v4, a3, v60, v18, ObjectType, v27);
    v29 = swift_unknownObjectRelease(v26);
    if ((v27 & 1) == 0)
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v18, v13, v29);
  }
  v30 = ((uint64_t (*)(uint64_t, uint64_t))v23)(v59, a3);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    goto LABEL_11;
  }
  v32 = v30;
  v33 = v31;
  v34 = swift_getObjectType(v30);
  (*(void (**)(void *, uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 32))(v4, a3, v18, v60, 0, v34, v33);
  v35 = swift_unknownObjectRelease(v32);
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v20)(v9, 1, v13, v35) == 1)
  {
LABEL_11:
    sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100642710);
    v47 = ((uint64_t (*)(uint64_t, uint64_t))v23)(v59, a3);
    if (v47)
    {
      v49 = v47;
      v50 = v48;
      v51 = swift_getObjectType(v47);
      v52 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 120))(v4, a3, v60, v51, v50);
      v54 = v53;
      v29 = swift_unknownObjectRelease(v49);
      if (v52)
      {
        (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 64))(v59, a3, v29);
        v55 = swift_getObjectType(v52);
        sub_10027E704(v60, 0, v55, v54);

      }
    }
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v18, v13, v29);
  }
  v36 = v58;
  v37 = ((uint64_t (*)(char *, char *, uint64_t))v57)(v58, v9, v13);
  if (qword_100640EE8 != -1)
    v37 = swift_once(&qword_100640EE8, sub_10027CDDC);
  v60 = qword_100672AC8;
  LODWORD(v57) = static os_log_type_t.debug.getter(v37);
  v38 = sub_10006922C((uint64_t *)&unk_100644560);
  v39 = swift_allocObject(v38, 152, 7);
  *(_OWORD *)(v39 + 16) = xmmword_1004D9880;
  v40 = v59;
  *(_QWORD *)(v39 + 56) = v59;
  *(_QWORD *)(v39 + 64) = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v40);
  *(_QWORD *)(v39 + 32) = v4;
  v56[1] = v4;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v42 = sub_10004F2F0(0, &qword_1006428E0, NSIndexPath_ptr);
  *(_QWORD *)(v39 + 96) = v42;
  v43 = sub_100252678();
  *(_QWORD *)(v39 + 104) = v43;
  *(_QWORD *)(v39 + 72) = isa;
  v44.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)(v39 + 136) = v42;
  *(_QWORD *)(v39 + 144) = v43;
  *(NSIndexPath *)(v39 + 112) = v44;
  os_log(_:dso:log:type:_:)("Will change focus in collection view %p from %@ to %@", 53, 2, &_mh_execute_header, v60, v57, v39);
  v45 = swift_bridgeObjectRelease(v39);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(a3 + 56))(v36, 1, v40, a3, v45);
  v46 = *(void (**)(char *, uint64_t))(v14 + 8);
  v46(v36, v13);
  return ((uint64_t (*)(char *, uint64_t))v46)(v18, v13);
}

uint64_t sub_10027E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027E704(a1, 0, a2, a3);
}

uint64_t sub_10027E6C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_10027E9B0(a1, a2, a3, a4, (SEL *)&selRef_directionalKeyCommandsWithAction_prioritize_);
}

uint64_t sub_10027E6E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_10027E9B0(a1, a2, a3, a4, (SEL *)&selRef_systemProvidedDirectionalKeyCommandsWithAction_prioritize_);
}

uint64_t sub_10027E704(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  id v25;
  uint64_t v26;
  int v27;

  v5 = v4;
  v27 = a2;
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    ObjectType = swift_getObjectType(v16, v17);
    (*(void (**)(void *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 24))(v5, a4, a1, v27 & 1, ObjectType, v19);
    swift_unknownObjectRelease(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 56))(v15, 1, a3, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100642710);
  if (qword_100640EE8 != -1)
    swift_once(&qword_100640EE8, sub_10027CDDC);
  static os_log_type_t.debug.getter();
  v22 = sub_10006922C((uint64_t *)&unk_100644560);
  v23 = swift_allocObject(v22, 112, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v23 + 56) = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a3);
  *(_QWORD *)(v23 + 32) = v5;
  *(_QWORD *)(v23 + 96) = &type metadata for Int;
  *(_QWORD *)(v23 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v23 + 64) = WitnessTable;
  *(_QWORD *)(v23 + 72) = a1;
  v25 = v5;
  os_log(_:dso:log:type:_:)("There is no item to focus initially with for direction %ld", v26);
  return swift_bridgeObjectRelease(v23);
}

uint64_t sub_10027E964()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(DOCDeprecatedUIMenuController), "shared");
  objc_msgSend(v0, "hideMenuIfActive");
  return swift_unknownObjectRelease(v0);
}

uint64_t sub_10027E9B0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  id v5;
  uint64_t v6;
  uint64_t v7;

  v5 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), *a5, a1, a2 & 1);
  v6 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  return v7;
}

uint64_t sub_10027EA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10027EAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10027D4FC(*(void **)(v0 + 32), v0 + v4, *(_BYTE *)(v0 + v4 + *(_QWORD *)(v3 + 64)), v1, v2);
}

char *sub_10027EB04(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  void (*v25)(char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  char *v26;
  __n128 v27;
  __n128 v28;
  void *v29;
  id v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v36;
  objc_super v37;

  v9 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_adaptablePresenter;
  v10 = objc_allocWithZone((Class)type metadata accessor for DOCCardPopoverAdaptablePresenter());
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer____lazy_storage___dismissButtonItem] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeightKVO] = 0;
  v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeight] = 0;
  v12 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListViewController(0));
  v13 = swift_unknownObjectRetain(a1);
  v14 = sub_100449A4C(v13, a2, BYTE1(a3) & 1);
  v15 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController] = v14;
  v16 = &v11[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_configuration];
  *v16 = a3 & 1;
  v16[1] = BYTE1(a3) & 1;
  v16[2] = BYTE2(a3) & 1;

  v17 = *(_QWORD *)&v11[v15];
  v37.receiver = v11;
  v37.super_class = (Class)type metadata accessor for DOCProgressCollectionViewer();
  v18 = (char *)objc_msgSendSuper2(&v37, "initWithRootViewController:", v17);
  objc_msgSend(v18, "setNavigationBarHidden:", (a3 >> 8) & 1);
  v19 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController;
  v20 = objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController], "editButtonItem");
  v21 = *(_QWORD *)(a4 + 16);
  swift_bridgeObjectRelease(a4);
  objc_msgSend(v20, "setHidden:", v21 == 0);

  ObjectType = swift_getObjectType(a1, v22);
  v24 = swift_allocObject(&unk_1005D6A98, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v18);
  v25 = *(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(a2 + 16);
  v26 = v18;
  v27 = swift_retain();
  v25(v26, sub_1002803EC, v24, ObjectType, a2, v27);

  swift_release_n(v24, 2, v28);
  v29 = *(void **)&v18[v19];
  v30 = objc_msgSend(v29, "editButtonItem");
  objc_msgSend(v30, "setTarget:", v26);
  objc_msgSend(v30, "setAction:", "toggleEditTapped");

  v36 = sub_100449F8C();
  KeyPath = swift_getKeyPath(&unk_1004DF3C0);
  v32 = swift_allocObject(&unk_1005D6A98, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v26);
  v33 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100280444, v32, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v32);

  v34 = *(void **)&v26[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeightKVO];
  *(_QWORD *)&v26[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeightKVO] = v33;

  swift_unknownObjectRelease(a1);
  return v26;
}

void sub_10027EE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  _BYTE v12[24];

  ObjectType = swift_getObjectType(a1, a2);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  if (!v7)
  {
    v8 = a3 + 16;
    swift_beginAccess(v8, v12, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v8, v9);
    if (Strong)
    {
      v11 = Strong;
      objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

uint64_t sub_10027EE98(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;

  v3 = v2;
  v4 = (_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController]
                + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source);
  v5 = *v4;
  v6 = v4[1];
  ObjectType = swift_getObjectType(*v4, a2);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  swift_unknownObjectRetain(v5);
  v9 = v8(ObjectType, v6);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = swift_bridgeObjectRelease(v9);
  if (!v10)
  {
    if (qword_100640DA0 != -1)
      v11 = swift_once(&qword_100640DA0, sub_100083308);
    v13 = qword_1006726B0;
    v14 = static os_log_type_t.default.getter(v11);
    if (!os_log_type_enabled(v13, v14))
      goto LABEL_12;
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    v16 = "progressViwer.canPresent == false: no content";
    goto LABEL_11;
  }
  v12 = objc_msgSend(v3, "doc_hasAppearedOrIsAppearing");
  if (!(_DWORD)v12)
  {
    v17 = 1;
    goto LABEL_14;
  }
  if (qword_100640DA0 != -1)
    v12 = (id)swift_once(&qword_100640DA0, sub_100083308);
  v13 = qword_1006726B0;
  v14 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    v16 = "progressViwer.canPresent == false: already presented or presenting";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v16, v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }
LABEL_12:
  v17 = 0;
LABEL_14:
  swift_unknownObjectRelease(v5);
  return v17;
}

uint64_t sub_10027F040(void *a1, void *a2, void *a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  char v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  unint64_t v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t Strong;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void *);
  uint64_t (**v51)(void *);
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)(void *);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  id v65;
  void *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  __objc2_prot *v74;
  __objc2_prot *v75;
  unint64_t v76[3];
  char v77[56];

  v5 = v4;
  v10 = sub_10027EE98((uint64_t)a1, (uint64_t)a2);
  v11 = v10;
  if ((v10 & 1) == 0)
    return v11 & 1;
  v69 = a4;
  v73 = v10;
  v12 = *(void **)&v4[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController];
  sub_10044A4B8();
  v13 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize;
  if ((v5[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] & 1) == 0)
  {
    v5[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] = 1;

    v14 = sub_100449F8C();
    objc_msgSend(v14, "fittingHeight");
    v16 = v15;

    sub_10027FF00(v16);
    v5[v13] = 0;
  }
  v17 = swift_allocObject(&unk_1005D6A98, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v5);
  v70 = v17 + 16;
  if (a2)
  {
    v74 = &OBJC_PROTOCOL____TtP5Files23DOCPopoverSourceControl_;
    v18 = swift_dynamicCastObjCProtocolConditional(a2, 1, &v74);
    if (v18)
    {
      v19 = v18;
      v20 = a2;
LABEL_10:
      v21 = v20;
      goto LABEL_12;
    }
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_12;
  }
  v75 = &OBJC_PROTOCOL____TtP5Files23DOCPopoverSourceControl_;
  v19 = swift_dynamicCastObjCProtocolConditional(a3, 1, &v75);
  if (v19)
  {
    v20 = a3;
    goto LABEL_10;
  }
LABEL_12:
  v22 = sub_10006922C(&qword_100646C68);
  inited = swift_initStackObject(v22, v77);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  if (a2)
  {
    v24 = objc_msgSend(a2, "_doc_ipi_view", swift_retain().n128_f64[0]);
  }
  else
  {
    swift_retain();
    v24 = 0;
  }
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(inited + 40) = a3;
  v76[0] = inited;
  specialized Array._endMutation()(v24);
  v25 = v76[0];
  v76[0] = (unint64_t)_swiftEmptyArrayStorage;
  v26 = *(void **)(v25 + 32);
  if (v26)
  {
    v27 = v26;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a3);
    v29 = *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
    specialized Array._endMutation()(v30);
  }
  else
  {
    v31 = a3;
  }
  v32 = *(void **)(v25 + 40);
  if (v32)
  {
    v33 = v32;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
    v35 = *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v34 = *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v34 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
    v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
    specialized Array._endMutation()(v36);
  }
  v71 = v19;
  v72 = v17;
  v37 = v76[0];
  swift_bridgeObjectRelease(v25);
  if ((unint64_t)v37 >> 62)
    goto LABEL_43;
  v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v37);
  for (; v38; v38 = _CocoaArrayWrapper.endIndex.getter(v68))
  {
    v39 = 4;
    while (1)
    {
      v40 = (v37 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39 - 4, v37)
          : *(id *)(v37 + 8 * v39);
      v41 = v40;
      v42 = v39 - 3;
      if (__OFADD__(v39 - 4, 1))
        break;
      v43 = objc_msgSend(v40, "window");

      if (v43)
      {
        v47 = v72;
        swift_release(v72);

        swift_bridgeObjectRelease_n(v37, 2);
        v48 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_adaptablePresenter;
        v49 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_adaptablePresenter];
        v50 = (uint64_t (*)(void *))swift_allocObject(&unk_1005D6AC0, 56, 7);
        *((_QWORD *)v50 + 2) = a2;
        *((_QWORD *)v50 + 3) = a3;
        *((_QWORD *)v50 + 4) = v69;
        *((_QWORD *)v50 + 5) = sub_10028044C;
        *((_QWORD *)v50 + 6) = v72;
        v51 = (uint64_t (**)(void *))(v49
                                              + OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_willPresentPopoverHandler);
        v52 = *(_QWORD *)(v49 + OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_willPresentPopoverHandler);
        v53 = (uint64_t)v51[1];
        *v51 = sub_100280488;
        v51[1] = v50;
        v54 = a3;
        swift_retain();
        v55 = a2;
        sub_100087534(v52, v53);
        v56 = *(_QWORD *)&v5[v48];
        v57 = swift_allocObject(&unk_1005D6AE8, 32, 7);
        *(_QWORD *)(v57 + 16) = sub_10028044C;
        *(_QWORD *)(v57 + 24) = v72;
        v58 = (uint64_t (**)(void *))(v56
                                              + OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_willPresentCardHandler);
        v59 = *(_QWORD *)(v56 + OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_willPresentCardHandler);
        v60 = (uint64_t)v58[1];
        *v58 = sub_10028051C;
        v58[1] = (uint64_t (*)(void *))v57;
        swift_retain();
        sub_100087534(v59, v60);
        v61 = *(void **)&v5[v48];
        v62 = v71;
        swift_unknownObjectRetain(v71);
        v63 = v61;
        sub_1002BEC10(a1, v5, v71);
        v11 = v73;
        goto LABEL_40;
      }

      ++v39;
      if (v42 == v38)
        goto LABEL_33;
    }
    __break(1u);
LABEL_43:
    if (v37 < 0)
      v68 = v37;
    else
      v68 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v37);
  }
LABEL_33:
  swift_bridgeObjectRelease_n(v37, 2);
  swift_beginAccess(v70, v76, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v70, v44);
  if (Strong)
  {
    v46 = (void *)Strong;
    sub_10027FB7C();
    v47 = v72;
    swift_release(v72);

  }
  else
  {
    v47 = v72;
    swift_release(v72);
  }
  v11 = v73;
  v62 = v71;
  v64 = *(char **)&v5[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_adaptablePresenter];
  swift_unknownObjectWeakAssign(&v64[OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_presented], v5);
  swift_unknownObjectWeakAssign(&v64[OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_presentationSource], v71);
  v63 = v64;
  swift_unknownObjectRetain(v71);
  objc_msgSend(v5, "setModalPresentationStyle:", 2);
  v65 = objc_msgSend(v5, "presentationController");
  if (v65)
  {
    v66 = v65;
    objc_msgSend(v65, "setDelegate:", v63);

  }
  objc_msgSend(a1, "presentViewController:animated:completion:", v5, 1, 0);
LABEL_40:
  swift_release(v47);

  swift_unknownObjectRelease_n(v62, 2);
  return v11 & 1;
}

BOOL sub_10027F5F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    sub_10027FB7C();

  }
  return Strong == 0;
}

uint64_t sub_10027F648(void *a1, uint64_t (*a2)(id))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  Class isa;

  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004DA350;
  v6 = (void *)objc_opt_self(UISheetPresentationControllerDetent);
  *(_QWORD *)(v5 + 32) = objc_msgSend(v6, "mediumDetent");
  v7 = objc_msgSend(v6, "largeDetent");
  *(_QWORD *)(v5 + 40) = v7;
  specialized Array._endMutation()(v7);
  sub_10004F2F0(0, &qword_10064D880, UISheetPresentationControllerDetent_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(a1, "setDetents:", isa);

  return a2(objc_msgSend(a1, "setSelectedDetentIdentifier:", UISheetPresentationControllerDetentIdentifierMedium));
}

void sub_10027F76C(char a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[5];
  uint64_t v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCProgressCollectionViewer();
  objc_msgSendSuper2(&v12, "viewWillAppear:", a1 & 1);
  v3 = (void *)objc_opt_self(UIView);
  v4 = swift_allocObject(&unk_1005D6B60, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v5 = swift_allocObject(&unk_1005D6B88, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10028056C;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_10006657C;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10006655C;
  v10[3] = &unk_1005D6BA0;
  v6 = _Block_copy(v10);
  v7 = v11;
  v8 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 124, 134, 40, 1);
  swift_release(v4);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_10027F8C0(char *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  double v6;
  double v7;

  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "layoutIfNeeded");

    v4 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize;
    if ((a1[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] & 1) == 0)
    {
      a1[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] = 1;

      v5 = sub_100449F8C();
      objc_msgSend(v5, "fittingHeight");
      v7 = v6;

      sub_10027FF00(v7);
      a1[v4] = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10027F9C4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  double v6;
  double v7;
  objc_super v8;

  v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCProgressCollectionViewer();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v4 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize;
  if ((v2[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] & 1) == 0)
  {
    v2[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize] = 1;

    v5 = sub_100449F8C();
    objc_msgSend(v5, "fittingHeight");
    v7 = v6;

    sub_10027FF00(v7);
    v2[v4] = 0;
  }
}

void sub_10027FB7C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  v13 = sub_10027FCD8();
  if (objc_msgSend(v13, "systemItem") == (id)24)
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController];
    v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton) = v13;
    v14 = v13;

    sub_10044AB6C();
    v3 = v14;
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_adaptablePresenter]
                   + OBJC_IVAR____TtC5Files32DOCCardPopoverAdaptablePresenter_activePresentationController);
    if (v4 && (v5 = objc_opt_self(UIPopoverPresentationController), swift_dynamicCastObjCClass(v4, v5)))
    {
      v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController];
      v7 = *(void **)(v6 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton);
      *(_QWORD *)(v6 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton) = 0;

      sub_10044AB6C();
      v3 = v13;
    }
    else
    {
      v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController];
      if ((objc_msgSend(v0, "isEditing") & 1) != 0)
      {
        v9 = 0;
      }
      else
      {
        v10 = v13;
        v9 = v13;
      }
      v11 = *(void **)(v8 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton);
      *(_QWORD *)(v8 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton) = v9;
      v12 = v9;

      sub_10044AB6C();
      v3 = v12;
    }
  }

}

id sub_10027FCD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer____lazy_storage___dismissButtonItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer____lazy_storage___dismissButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer____lazy_storage___dismissButtonItem);
  }
  else
  {
    v4 = v0;
    sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v5 = swift_allocObject(&unk_1005D6A98, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v7 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v6, 0, 0, 0, sub_1000E6BE8, v5);
    v8 = sub_1004581A4(2, (uint64_t)v7);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

void sub_10027FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  _BYTE v11[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (_BYTE *)Strong;
    v7 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize) & 1) == 0)
    {
      *(_BYTE *)(Strong + OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_isUpdatingPreferredContentSize) = 1;
      objc_release(objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                         + OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listViewController), "view")));
      v8 = sub_100449F8C();
      objc_msgSend(v8, "fittingHeight");
      v10 = v9;

      sub_10027FF00(v10);
      v6[v7] = 0;
    }

  }
}

void sub_10027FF00(double a1)
{
  _BYTE *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  id v17;
  double v18;
  double v19;
  objc_super v20;
  CGRect v21;

  v2 = OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeight;
  v3 = *(double *)&v1[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeight];
  *(double *)&v1[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_listFittingHeight] = a1;
  if (v3 != a1)
  {
    if (qword_100641168 != -1)
    {
      swift_once(&qword_100641168, sub_100449C8C);
      a1 = *(double *)&v1[v2];
    }
    v4 = fmin(a1, 500.0);
    if (*(double *)&qword_100672DF8 > v4)
      v5 = *(double *)&qword_100672DF8;
    else
      v5 = v4;
    if (v1[OBJC_IVAR____TtC5Files27DOCProgressCollectionViewer_configuration + 2])
      v6 = 0.7;
    else
      v6 = 0.3;
    v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v21.origin.x = v9;
    v21.origin.y = v11;
    v21.size.width = v13;
    v21.size.height = v15;
    v16 = v6 * CGRectGetWidth(v21);
    v17 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v17, "scaledValueForValue:", 475.0);
    v19 = v18;

    if (v19 >= v16)
      v19 = v16;
    v20.receiver = v1;
    v20.super_class = (Class)type metadata accessor for DOCProgressCollectionViewer();
    objc_msgSendSuper2(&v20, "setPreferredContentSize:", v19, v5);
  }
}

void sub_1002802D4()
{
  uint64_t v0;

}

id sub_100280320()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCProgressCollectionViewer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCProgressCollectionViewer()
{
  return objc_opt_self(_TtC5Files27DOCProgressCollectionViewer);
}

uint64_t sub_1002803C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002803EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10027EE08(a1, a2, v2);
}

const char *sub_1002803F4()
{
  return "fittingHeight";
}

id sub_100280400@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "fittingHeight");
  *a2 = v4;
  return result;
}

id sub_100280430(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setFittingHeight:", *a1);
}

void sub_100280444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10027FE38(a1, a2, v2);
}

BOOL sub_10028044C()
{
  uint64_t v0;

  return sub_10027F5F0(v0);
}

uint64_t sub_100280454()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100280488(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(id);

  v3 = v1[3];
  v4 = v1[4];
  v5 = (uint64_t (*)(id))v1[5];
  objc_msgSend(a1, "setBarButtonItem:", v1[2]);
  objc_msgSend(a1, "setSourceView:", v3);
  return v5(objc_msgSend(a1, "setPermittedArrowDirections:", v4));
}

uint64_t sub_1002804F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028051C(void *a1)
{
  uint64_t v1;

  return sub_10027F648(a1, *(uint64_t (**)(id))(v1 + 16));
}

uint64_t sub_100280524()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100280548()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10028056C()
{
  uint64_t v0;

  sub_10027F8C0(*(char **)(v0 + 16));
}

uint64_t sub_100280574()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10028058C()
{
  qword_10064AEB0 = 0x402E000000000000;
}

void sub_10028059C()
{
  qword_10064AEB8 = 0x402E000000000000;
}

void sub_1002805AC()
{
  qword_10064AEC0 = 0x407C200000000000;
}

void sub_1002805C0()
{
  qword_10064AEC8 = 0x4044000000000000;
}

int64x2_t sub_1002805D0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4067400000000000uLL);
  xmmword_10064AED0 = (__int128)result;
  return result;
}

NSString sub_1002805EC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10064AEE0 = (uint64_t)result;
  return result;
}

unint64_t sub_100280620(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  unint64_t v3;
  const char *v4;
  objc_class *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSBundle v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  objc_class *v13;
  uint64_t countAndFlagsBits;
  objc_class *v15;
  unint64_t v17;

  switch((char)a1)
  {
    case 2:
      v1 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x100280850);
      }
      v2 = v1;
      v3 = 0x1000000000000083;
      v17 = 0x80000001005204A0;
      v4 = "You can’t use a name that begins with a dot “.”, because these names are reserved for the system. Please choo"
           "se another name.";
      goto LABEL_6;
    case 3:
      v15 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v15)
        goto LABEL_20;
      v2 = v15;
      v12 = 0xD000000000000034;
      v17 = 0x8000000100520530;
      v6 = 0x80000001005204E0;
      v3 = 0x1000000000000049;
      goto LABEL_14;
    case 4:
      v5 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v5)
        goto LABEL_18;
      v2 = v5;
      v3 = 0xD000000000000018;
      v17 = 0x80000001005203D0;
      v4 = "Filename did not change.";
LABEL_6:
      v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v2;
      v10 = 0;
      v11 = 0xE000000000000000;
      v12 = 0xD000000000000036;
      break;
    case 5:
      v13 = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (!v13)
        goto LABEL_19;
      v2 = v13;
      v3 = 0xD00000000000001BLL;
      v12 = 0xD00000000000002DLL;
      v17 = 0x8000000100520380;
      v6 = 0x8000000100520360;
LABEL_14:
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v2;
      v10 = 0;
      v11 = 0xE000000000000000;
      break;
    default:
      if ((a1 & 1) != 0)
        return 0xD00000000000003DLL;
      else
        return 0xD000000000000042;
  }
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v7, v9, *(Swift::String *)&v10, *(Swift::String *)(&v17 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

unint64_t sub_100280860()
{
  unsigned __int8 *v0;

  return sub_100280620(*v0);
}

double sub_100280874(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  id v18;
  CGFloat Width;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  objc_msgSend(v4, "clearButtonRectForBounds:");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = objc_msgSend(v4, "traitCollection");
  v18 = objc_msgSend(v17, "layoutDirection");

  if (v18 == (id)1)
  {
    v26.origin.x = v10;
    v26.origin.y = v12;
    v26.size.width = v14;
    v26.size.height = v16;
    Width = CGRectGetWidth(v26);
    v20 = a3;
    v21 = a4;
    v22 = v10 + v10 + Width;
  }
  else
  {
    v27.origin.x = a1;
    v27.origin.y = a2;
    v27.size.width = a3;
    v27.size.height = a4;
    v25 = a3;
    v21 = a4;
    v23 = CGRectGetWidth(v27);
    v28.origin.x = v10;
    v28.origin.y = v12;
    v28.size.width = v14;
    v28.size.height = v16;
    v22 = v23 - CGRectGetMaxX(v28);
    v29.origin.x = v10;
    v29.origin.y = v12;
    v29.size.width = v14;
    v29.size.height = v16;
    CGRectGetWidth(v29);
    v20 = v25;
  }
  return sub_10007EAFC(a1, a2, v20, v21, 0.0, v22);
}

id sub_100280AF4()
{
  return sub_1001405E0(0, type metadata accessor for DOCInsetTextField);
}

uint64_t type metadata accessor for DOCInsetTextField()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7517DOCInsetTextField);
}

char *sub_100280B34(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  Class isa;
  void *v29;
  id v30;
  uint64_t v31;
  void **v32;
  __n128 v33;
  uint64_t v34;
  id v36;
  objc_super v37;
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_safeBottomConstraint] = 0;
  v4 = &v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_visibilityState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_safeAreaView] = a1;
  v5 = a1;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38.receiver = v1;
  v38.super_class = ObjectType;
  v37.receiver = objc_msgSendSuper2(&v38, "initWithEffect:", 0);
  v37.super_class = ObjectType;
  v6 = (char *)v37.receiver;
  v7 = objc_msgSendSuper2(&v37, "contentView");
  objc_msgSend(v7, "addSubview:", v5);
  v8 = objc_msgSend(v7, "bottomAnchor");
  v9 = objc_msgSend(v5, "bottomAnchor");
  objc_msgSend(v6, "safeAreaInsets");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, v10);

  v36 = (id)objc_opt_self(NSLayoutConstraint);
  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004DAC10;
  v14 = objc_msgSend(v7, "safeAreaLayoutGuide");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v5, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v13 + 32) = v17;
  v18 = objc_msgSend(v5, "trailingAnchor");
  v19 = objc_msgSend(v7, "safeAreaLayoutGuide");
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v13 + 40) = v21;
  v22 = objc_msgSend(v7, "safeAreaLayoutGuide");
  v23 = objc_msgSend(v22, "topAnchor");

  v24 = objc_msgSend(v5, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v13 + 48) = v25;
  *(_QWORD *)(v13 + 56) = v11;
  specialized Array._endMutation()(v26);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v27 = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v29 = *(void **)&v6[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_safeBottomConstraint];
  *(_QWORD *)&v6[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_safeBottomConstraint] = v27;
  v30 = v27;

  v31 = swift_allocObject(&unk_1005D7658, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16);
  swift_retain();
  v32 = sub_1002F2520((uint64_t)sub_10028A95C, v31, (uint64_t)sub_10028A95C, v31);
  swift_release_n(v31, 2, v33);

  v34 = *(_QWORD *)&v6[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations];
  *(_QWORD *)&v6[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations] = v32;
  swift_bridgeObjectRelease(v34);
  return v6;
}

void sub_100280F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100280FA8();

  }
}

uint64_t sub_100280FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  _BYTE v12[40];
  __int128 v13;
  __int128 v14;

  v1 = v0;
  result = sub_100076430(*(unsigned __int8 *)(v0+ OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_visibilityState), (uint64_t)&off_1005C0358);
  if ((result & 1) != 0)
  {
    v3 = Notification.userInfo.getter(result);
    if (v3)
    {
      v4 = v3;
      *(_QWORD *)&v11[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
      *((_QWORD *)&v11[0] + 1) = v5;
      AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v4 + 16) && (v6 = sub_100067654((uint64_t)v12), (v7 & 1) != 0))
      {
        sub_100069BD8(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v13);
      }
      else
      {
        v13 = 0u;
        v14 = 0u;
      }
      swift_bridgeObjectRelease(v4);
      sub_100067748((uint64_t)v12);
      if (*((_QWORD *)&v14 + 1))
      {
        type metadata accessor for CGRect(0);
        if ((swift_dynamicCast(v11, &v13, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
        {
          v9 = v11[1];
          v10 = v1 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame;
          *(_OWORD *)v10 = v11[0];
          *(_OWORD *)(v10 + 16) = v9;
          *(_BYTE *)(v10 + 32) = 0;
        }
      }
      else
      {
        sub_10000CB4C((uint64_t)&v13, &qword_100642730);
      }
    }
    return sub_10028135C();
  }
  return result;
}

id sub_1002810D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  objc_super v15;

  ObjectType = swift_getObjectType(v2, a2);
  v13 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations;
  v14 = (objc_class *)ObjectType;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations];
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations], 2);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v4, 2);
    v12 = *(_QWORD *)&v2[v13];
    *(_QWORD *)&v2[v13] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v12);
    v15.receiver = v2;
    v15.super_class = v14;
    return objc_msgSendSuper2(&v15, "dealloc");
  }
  if (v4 < 0)
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations];
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardObservations], 2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v5)
    goto LABEL_13;
LABEL_3:
  result = (id)objc_opt_self(NSNotificationCenter);
  if (v5 >= 1)
  {
    v7 = result;
    v8 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
      }
      else
      {
        v9 = *(_QWORD *)(v4 + 8 * v8 + 32);
        swift_unknownObjectRetain(v9);
      }
      ++v8;
      v10 = objc_msgSend(v7, "defaultCenter", v13);
      objc_msgSend(v10, "removeObserver:", v9);
      swift_unknownObjectRelease(v9);

    }
    while (v5 != v8);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10028135C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100281610();
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_visibilityState) == 1)
    objc_msgSend(v0, "layoutIfNeeded");
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1005D6F78, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_10028A268;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D6F90;
  v13 = _Block_copy(aBlock);
  v14 = v22;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v19 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_100281610()
{
  char *v0;
  double v1;
  double v2;
  double Height;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  double Width;
  id result;
  double v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  objc_msgSend(v0, "safeAreaInsets");
  v2 = v1;
  Height = 0.0;
  if ((v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame + 32] & 1) == 0)
  {
    objc_msgSend(v0, "convertRect:fromView:", 0, *(double *)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame], *(double *)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame + 8], *(double *)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame + 16], *(double *)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_keyboardFrame + 24]);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
    objc_msgSend(v0, "bounds");
    v33.origin.x = v12;
    v33.origin.y = v13;
    v33.size.width = v14;
    v33.size.height = v15;
    v29.origin.x = v5;
    v29.origin.y = v7;
    v29.size.width = v9;
    v29.size.height = v11;
    v30 = CGRectIntersection(v29, v33);
    Height = CGRectGetHeight(v30);
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17 = objc_msgSend(v16, "bundleIdentifier");

    if (v17)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
      if (v18 == v21 && v20 == v22)
      {
        swift_bridgeObjectRelease_n(v20, 2);
      }
      else
      {
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v20);
        if ((v25 & 1) == 0)
        {
          objc_msgSend(v0, "bounds");
          Width = CGRectGetWidth(v31);
          objc_msgSend(v0, "bounds");
          if (Width < CGRectGetHeight(v32))
            Height = Height + 40.0;
        }
      }
    }
  }
  result = *(id *)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_safeBottomConstraint];
  if (result)
  {
    if (v2 > Height)
      v28 = v2;
    else
      v28 = Height;
    return objc_msgSend(result, "setConstant:", v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002817F8(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v2;
  if (qword_100640F20 != -1)
  {
    swift_once(&qword_100640F20, sub_1002805EC);
    v2 = v3;
  }
  objc_msgSend(v2, "postNotificationName:object:", qword_10064AEE0, a1);

}

uint64_t type metadata accessor for DOCSafeAreaView()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView);
}

void sub_100281A90()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void **v7;
  void *v8;
  double v9;
  char v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v1 = objc_msgSend(v0, "image");
  if (v1
    && (v2 = v1, objc_msgSend(v1, "size"), v4 = v3, objc_msgSend(v2, "size"), v6 = v5, v2, v6 != 0.0))
  {
    v7 = (void **)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7518DOCAspectImageView_aspectConstraint];
    v8 = *(void **)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7518DOCAspectImageView_aspectConstraint];
    v9 = v4 / v6;
    if (!v8)
      goto LABEL_14;
    v10 = 0;
  }
  else
  {
    v7 = (void **)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7518DOCAspectImageView_aspectConstraint];
    v8 = *(void **)&v0[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7518DOCAspectImageView_aspectConstraint];
    if (!v8)
      return;
    v9 = 0.0;
    v10 = 1;
  }
  objc_msgSend(v8, "multiplier");
  if ((v10 & 1) != 0 || v11 != v9)
  {
    if (*v7)
      objc_msgSend(v0, "removeConstraint:");
    if ((v10 & 1) != 0)
    {
      v12 = *v7;
      *v7 = 0;
LABEL_15:

      return;
    }
LABEL_14:
    v13 = objc_msgSend(v0, "widthAnchor");
    v14 = objc_msgSend(v0, "heightAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:multiplier:", v14, v9);

    objc_msgSend(v15, "setActive:", 1);
    v12 = *v7;
    *v7 = v15;
    goto LABEL_15;
  }
}

id sub_100281C60()
{
  return sub_1001405E0(0, type metadata accessor for DOCAspectImageView);
}

uint64_t type metadata accessor for DOCAspectImageView()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7518DOCAspectImageView);
}

void sub_100281CA0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  _QWORD v26[4];

  v3 = v2;
  v4 = *(void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_item];
  if (v4)
  {
    v25 = v4;
    v5 = objc_msgSend(v2, "traitCollection");
    v6 = sub_10023B9F4(&off_1005C0380);
    v8 = v7;
    swift_arrayDestroy(&unk_1005C03A0, 2, &_s6TraitsVN);
    v9 = sub_10007B5C0(v6);
    swift_bridgeObjectRelease(v8);

    if (v9)
    {
      v10 = objc_msgSend(v3, "traitCollection");
      v11 = (unint64_t)objc_msgSend(v10, "userInterfaceStyle");

      if (v11 >= 3)
      {
        type metadata accessor for UIUserInterfaceStyle(0);
        v26[3] = v14;
        v26[0] = v11;
        doc_warnUnrecognizedEnumValueEncountered(_:)(v26);
        sub_100068588(v26);
        v12 = 1;
      }
      else
      {
        v12 = qword_1004DF860[v11];
      }
      v15 = *(double *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_maxThumbnailSize];
      v16 = *(double *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_maxThumbnailSize
                         + 8];
      v17 = objc_msgSend(v3, "traitCollection");
      objc_msgSend(v17, "displayScale");
      v19 = v18;

      v20 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:scale:style:isFolded:isInteractive:isFolder:", v12, 1, 0, objc_msgSend(v25, "isFolder"), v15, v16, v19);
      v21 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
      v22 = objc_msgSend(v21, "thumbnailForNode:descriptor:", v25, v20);

      v23 = *(void **)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail];
      *(_QWORD *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail] = v22;
      swift_unknownObjectRetain(v22);
      sub_10028200C(v23, v24);

      swift_unknownObjectRelease(v23);
      swift_unknownObjectRelease(v22);
    }
    else
    {

    }
  }
  else
  {
    v13 = *(void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail] = 0;
    sub_10028200C(v13, a2);
    swift_unknownObjectRelease(v13);
  }
}

void *sub_100281F3C()
{
  uint64_t v0;
  void **v1;
  _QWORD *v2;
  void *v3;
  unsigned int v4;
  void *result;

  v1 = (void **)(v0 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail);
  v2 = (_QWORD *)(v0
                + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail);
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail))
  {
    v3 = (void *)*v2;
    if (*v2)
    {
      if ((objc_msgSend((id)swift_unknownObjectRetain(*v2), "isLoading") & 1) == 0)
        goto LABEL_9;
      swift_unknownObjectRelease(v3);
    }
    v3 = *v1;
    if (!*v1)
      return 0;
  }
  else
  {
    v3 = (void *)*v2;
    if (!*v2)
      return 0;
  }
  swift_unknownObjectRetain(v3);
LABEL_9:
  v4 = objc_msgSend(v3, "isRepresentativeIcon");
  swift_unknownObjectRelease(v3);
  if (!v4)
    return 0;
  result = *(void **)(v0 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_item);
  if (result)
    return (void *)(objc_msgSend(result, "isFolder") ^ 1);
  return result;
}

objc_class *sub_10028200C(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *result;
  objc_class *v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  void **v9;
  id v10;
  unsigned __int8 v11;
  objc_super v12;

  result = (objc_class *)swift_getObjectType(v2, a2);
  v5 = result;
  v6 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail;
  v7 = *(void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail];
  if (a1)
  {
    if (v7)
      v8 = a1 == v7;
    else
      v8 = 0;
    if (v8)
      return result;
    v9 = (void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail];
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail])
    {
LABEL_13:
      if (!v7)
      {
        v10 = 0;
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    if (!v7)
    {
      v7 = *(void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail];
LABEL_14:
      swift_unknownObjectRetain(v7);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v7)
      return result;
    v9 = (void **)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail];
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail])
      goto LABEL_14;
  }
  if ((objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail]), "isLoading") & 1) != 0)
  {
    swift_unknownObjectRelease(v7);
    v7 = *v9;
    goto LABEL_13;
  }
LABEL_15:
  v10 = objc_msgSend(v7, "thumbnail");
  swift_unknownObjectRelease(v7);
LABEL_16:
  v12.receiver = v2;
  v12.super_class = v5;
  objc_msgSendSuper2(&v12, "setImage:", v10);
  v11 = sub_100281F3C();
  sub_10028A4B8(v2, v11 & 1);

  if (a1)
    objc_msgSend(a1, "removeListener:", v2);
  result = *(objc_class **)&v2[v6];
  if (result)
    return (objc_class *)-[objc_class addListener:](result, "addListener:", v2);
  return result;
}

id sub_100282214(void *a1, void *a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  double *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  objc_super v26;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v11 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_item;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_item] = 0;
  v12 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail] = 0;
  v13 = *(void **)&v5[v11];
  *(_QWORD *)&v5[v11] = a1;
  v14 = v5;
  v15 = a1;

  v16 = *(_QWORD *)&v5[v12];
  *(_QWORD *)&v5[v12] = a2;
  swift_unknownObjectRetain(a2);
  swift_unknownObjectRelease(v16);
  v17 = (double *)&v14[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_maxThumbnailSize];
  *v17 = a3;
  v17[1] = a4;

  if (a2)
    v18 = objc_msgSend(a2, "thumbnail");
  else
    v18 = 0;
  v26.receiver = v14;
  v26.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v26, "initWithImage:", v18);

  v20 = v19;
  objc_msgSend(v20, "setContentMode:", 1);
  objc_msgSend(v20, "setAccessibilityIgnoresInvertColors:", 1);
  v21 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v22 = swift_allocObject(v21, 64, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v22 + 32) = type metadata accessor for UITraitDisplayScale(0);
  *(_QWORD *)(v22 + 40) = &protocol witness table for UITraitDisplayScale;
  *(_QWORD *)(v22 + 48) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v22 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  v23 = v20;
  v24 = UIView.registerForTraitChanges<A>(_:handler:)(v22, sub_10028A458, 0, ObjectType);
  swift_unknownObjectRelease(v24);
  swift_bridgeObjectRelease(v22);

  swift_unknownObjectRelease(a2);
  return v23;
}

void sub_100282554(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  BOOL v7;
  uint64_t v8;
  char *v9;
  unsigned __int8 v10;
  objc_super v11;
  char v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong
                  + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail);
    if (v6)
      v7 = v6 == a2;
    else
      v7 = 0;
    if (!v7)
      goto LABEL_15;
    v8 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail;
    if (*(_QWORD *)(Strong
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail))
    {
      if ((objc_msgSend((id)swift_unknownObjectRetain(a2), "isLoading") & 1) == 0)
      {
LABEL_13:
        v9 = (char *)objc_msgSend(a2, "thumbnail");
        swift_unknownObjectRelease(a2);
        goto LABEL_14;
      }
      swift_unknownObjectRelease(a2);
      a2 = *(void **)&v5[v8];
      if (!a2)
      {
        v9 = 0;
LABEL_14:
        v11.receiver = v5;
        v11.super_class = (Class)type metadata accessor for DOCRenameThumbnailView();
        objc_msgSendSuper2(&v11, "setImage:", v9);
        v10 = sub_100281F3C();
        sub_10028A4B8(v5, v10 & 1);

        v5 = v9;
LABEL_15:

        return;
      }
    }
    else
    {
      a2 = *(void **)(Strong
                    + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail);
    }
    swift_unknownObjectRetain(a2);
    goto LABEL_13;
  }
}

uint64_t sub_10028278C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_initialThumbnail));
  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView_fullSizeThumbnail));
}

uint64_t type metadata accessor for DOCRenameThumbnailView()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCRenameThumbnailView);
}

id sub_100282830(id a1)
{
  char *v1;
  uint64_t v3;
  id result;
  BOOL v5;
  id v6;

  v3 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail;
  result = *(id *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail];
  if (!a1)
  {
    if (!result)
      return result;
LABEL_9:
    v6 = objc_msgSend(result, "thumbnail");
    goto LABEL_10;
  }
  if (result)
    v5 = a1 == result;
  else
    v5 = 0;
  if (v5)
    return result;
  if (result)
    goto LABEL_9;
  v6 = 0;
LABEL_10:
  objc_msgSend(v1, "setImage:", v6);

  if (a1)
    objc_msgSend(a1, "removeListener:", v1);
  result = *(id *)&v1[v3];
  if (result)
    return objc_msgSend(result, "addListener:", v1);
  return result;
}

id sub_1002828EC(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t ObjectType;
  double *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail] = 0;
  v8 = (double *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_maxThumbnailSize];
  *v8 = a2;
  v8[1] = a3;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_item] = a1;
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for DOCFolderThumbnailView();
  v9 = a1;
  v10 = objc_msgSendSuper2(&v16, "initWithImage:", 0);
  objc_msgSend(v10, "setContentMode:", 1, v16.receiver, v16.super_class);
  objc_msgSend(v10, "setAccessibilityIgnoresInvertColors:", 1);
  v11 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitDisplayScale(0);
  *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitDisplayScale;
  *(_QWORD *)(v12 + 48) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v12 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  v13 = v10;
  v14 = UIView.registerForTraitChanges<A>(_:handler:)(v12, sub_10028A478, 0, ObjectType);
  swift_unknownObjectRelease(v14);
  swift_bridgeObjectRelease(v12);

  return v13;
}

void sub_100282B34(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *Strong;
  id v6;
  void *v7;
  BOOL v8;
  char *v9;
  char v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(void **)&Strong[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail];
    if (v7)
      v8 = v7 == a2;
    else
      v8 = 0;
    if (v8)
    {
      v9 = Strong;
      v6 = objc_msgSend(a2, "thumbnail");
      objc_msgSend(v9, "setImage:", v6);

    }
  }
}

void sub_100282C08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v12 = swift_allocObject(a4, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = swift_allocObject(a5, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a3;
  v17[4] = a6;
  v18 = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = a7;
  v14 = _Block_copy(v17);
  v15 = v18;
  swift_unknownObjectRetain_n(a3, 2);
  v16 = a1;
  swift_release(v15);
  DOCRunInMainThread(v14);
  _Block_release(v14);
  swift_unknownObjectRelease(a3);

}

void sub_100282CF0()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  id v7;
  double v8;
  double v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  _QWORD v19[4];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10023B9F4(&off_1005C03D0);
  v5 = v4;
  swift_arrayDestroy(&unk_1005C03F0, 2, &_s6TraitsVN);
  v6 = sub_10007B5C0(v3);
  swift_bridgeObjectRelease(v5);

  if (v6)
  {
    v7 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v7, "displayScale");
    v9 = v8;

    v10 = objc_msgSend(v1, "traitCollection");
    v11 = (unint64_t)objc_msgSend(v10, "userInterfaceStyle");

    if (v11 >= 3)
    {
      type metadata accessor for UIUserInterfaceStyle(0);
      v19[3] = v13;
      v19[0] = v11;
      doc_warnUnrecognizedEnumValueEncountered(_:)(v19);
      sub_100068588(v19);
      v12 = 1;
    }
    else
    {
      v12 = qword_1004DF860[v11];
    }
    v14 = *(void **)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_item];
    v15 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:scale:style:isFolded:isInteractive:isFolder:", v12, 1, 0, objc_msgSend(v14, "isFolder"), *(double *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_maxThumbnailSize], *(double *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_maxThumbnailSize+ 8], v9);
    v16 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
    v17 = objc_msgSend(v16, "iconForNode:descriptor:", v14, v15);

    v18 = *(void **)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail];
    *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail] = v17;
    swift_unknownObjectRetain(v17);
    sub_100282830(v18);

    swift_unknownObjectRelease(v18);
    swift_unknownObjectRelease(v17);
  }
}

void sub_100283014(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11;

  v11 = a3;
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, a6, a7, 0);
  __break(1u);
}

uint64_t sub_100283054()
{
  uint64_t v0;

  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView_thumbnail));
}

id sub_100283080()
{
  return sub_1001405E0(0, type metadata accessor for DOCFolderThumbnailView);
}

uint64_t type metadata accessor for DOCFolderThumbnailView()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7522DOCFolderThumbnailView);
}

Swift::Int sub_1002830E8()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  switch(v1)
  {
    case 2:
      v2 = 1;
      break;
    case 3:
      v2 = 2;
      break;
    case 4:
      v2 = 3;
      break;
    default:
      Hasher._combine(_:)(0);
      Hasher._combine(_:)(v1 & 1);
      return Hasher._finalize()();
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10028317C()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  Swift::UInt8 v3;

  v1 = *v0;
  switch(v1)
  {
    case 2:
      v2 = 1;
      goto LABEL_7;
    case 3:
      v2 = 2;
      goto LABEL_7;
    case 4:
      v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      return;
  }
  v3 = v1 & 1;
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1002831E8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  switch(v2)
  {
    case 2:
      v3 = 1;
      break;
    case 3:
      v3 = 2;
      break;
    case 4:
      v3 = 3;
      break;
    default:
      Hasher._combine(_:)(0);
      Hasher._combine(_:)(v2 & 1);
      return Hasher._finalize()();
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_100283278(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  unsigned int v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  v4 = v3 - 2;
  v5 = v3 == 2;
  v6 = v3 == 3;
  v7 = v3 == 4;
  v8 = ((v2 & 1) == 0) ^ v3;
  if (v4 < 3)
    v8 = 0;
  if (v2 == 4)
    v8 = v7;
  if (v2 == 3)
    v8 = v6;
  if (v2 == 2)
    return v5;
  else
    return v8;
}

char *sub_1002832DC(void *a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  NSString *v12;
  id v13;
  uint64_t v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  char *result;
  char *v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  void *object;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  Class isa;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  id v51;
  id v52;
  double v53;
  double v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  Class v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  id v97;
  id v98;
  objc_class *ObjectType;
  objc_super v100;
  uint64_t v101;
  Swift::String v102;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files15DOCFilenameView_textFieldTextStyle] = UIFontTextStyleTitle2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates] = &_swiftEmptySetSingleton;
  v8 = OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView] = a1;
  v9 = type metadata accessor for DOCInsetTextField();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9));
  v11 = v4;
  v12 = UIFontTextStyleTitle2;
  v98 = a1;
  v13 = objc_msgSend(v10, "init");
  v14 = OBJC_IVAR____TtC5Files15DOCFilenameView_textField;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files15DOCFilenameView_textField] = v13;
  LODWORD(v15) = 1148846080;
  objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 1, v15);
  v16 = (void *)objc_opt_self(UIFont);
  v17 = v13;
  v18 = objc_msgSend(v16, "preferredFontForTextStyle:", v12);
  objc_msgSend(v17, "setFont:", v18);

  v19 = *(void **)&v11[v14];
  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v19, "setBorderStyle:", 0);
  objc_msgSend(v19, "setReturnKeyType:", 9);
  objc_msgSend(v19, "setClearButtonMode:", 3);
  v20 = objc_msgSend(v19, "layer");
  objc_msgSend(v20, "setCornerCurve:", kCACornerCurveContinuous);

  v21 = objc_msgSend(*(id *)&v11[v14], "layer");
  objc_msgSend(v21, "setCornerRadius:", 10.0);

  v22 = *(void **)&v11[v14];
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v22;
  v25 = objc_msgSend(v23, "tertiarySystemBackgroundColor");
  objc_msgSend(v24, "setBackgroundColor:", v25);

  v26 = *(void **)&v11[v14];
  objc_msgSend(v26, "setEnablesReturnKeyAutomatically:", 1);
  v27 = v26;
  result = (char *)(id)_DocumentManagerBundle(v27);
  if (result)
  {
    v29 = result;
    v30._object = (void *)0xEB00000000656D61;
    v102._object = (void *)0x8000000100520690;
    v30._countAndFlagsBits = 0x6E207265646C6F46;
    v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v31.value._object = (void *)0xEB00000000656C62;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v102._countAndFlagsBits = 0xD000000000000030;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v102)._object;

    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v27, "setAccessibilityLabel:", v34);

    v35 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v36 = swift_allocObject(v35, 48, 7);
    v37 = *(void **)&v4[v8];
    *(_OWORD *)(v36 + 16) = xmmword_1004DA350;
    *(_QWORD *)(v36 + 32) = v37;
    v38 = *(void **)&v11[v14];
    *(_QWORD *)(v36 + 40) = v38;
    v101 = v36;
    specialized Array._endMutation()(v36);
    v39 = objc_allocWithZone((Class)UIStackView);
    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v40 = v37;
    v41 = v38;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v101);
    v43 = objc_msgSend(v39, "initWithArrangedSubviews:", isa);

    v44 = OBJC_IVAR____TtC5Files15DOCFilenameView_contentView;
    *(_QWORD *)&v11[OBJC_IVAR____TtC5Files15DOCFilenameView_contentView] = v43;
    objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v43, "setAlignment:", 3);
    v45 = qword_100640F10;
    v46 = v43;
    if (v45 != -1)
      swift_once(&qword_100640F10, sub_1002805C0);
    objc_msgSend(v46, "setSpacing:", *(double *)&qword_10064AEC8);

    v47 = objc_msgSend(*(id *)&v11[v14], "widthAnchor");
    v48 = objc_msgSend(*(id *)&v11[v44], "widthAnchor");
    v49 = objc_msgSend(v47, "constraintLessThanOrEqualToAnchor:multiplier:", v48, 1.0);

    *(_QWORD *)&v11[OBJC_IVAR____TtC5Files15DOCFilenameView_maxTextFieldWidthLandscapeConstraint] = v49;
    v100.receiver = v11;
    v100.super_class = ObjectType;
    v50 = (char *)objc_msgSendSuper2(&v100, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v51 = objc_msgSend(v50, "traitCollection");
    v52 = objc_msgSend(v16, "preferredFontForTextStyle:compatibleWithTraitCollection:", *(_QWORD *)&v50[OBJC_IVAR____TtC5Files15DOCFilenameView_textFieldTextStyle], v51);
    objc_msgSend(v52, "lineHeight");
    v54 = v53;

    v55 = OBJC_IVAR____TtC5Files15DOCFilenameView_textField;
    v56 = objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC5Files15DOCFilenameView_textField], "heightAnchor");
    v57 = objc_msgSend(v56, "constraintGreaterThanOrEqualToConstant:", v54 + 24.0);

    v58 = OBJC_IVAR____TtC5Files15DOCFilenameView_contentView;
    v59 = *(void **)&v50[OBJC_IVAR____TtC5Files15DOCFilenameView_contentView];
    objc_msgSend(v50, "addSubview:", v59);
    v97 = (id)objc_opt_self(NSLayoutConstraint);
    v60 = swift_allocObject(v35, 112, 7);
    *(_OWORD *)(v60 + 16) = xmmword_1004DE9C0;
    v61 = objc_msgSend(v50, "leadingAnchor");
    v62 = objc_msgSend(v59, "leadingAnchor");
    if (qword_100640F00 != -1)
      swift_once(&qword_100640F00, sub_10028059C);
    v63 = objc_msgSend(v61, "constraintLessThanOrEqualToAnchor:constant:", v62, -*(double *)&qword_10064AEB8);

    *(_QWORD *)(v60 + 32) = v63;
    v64 = objc_msgSend(v50, "trailingAnchor");
    v65 = objc_msgSend(*(id *)&v50[v58], "trailingAnchor");
    v66 = objc_msgSend(v64, "constraintGreaterThanOrEqualToAnchor:constant:", v65, *(double *)&qword_10064AEB8);

    *(_QWORD *)(v60 + 40) = v66;
    v67 = objc_msgSend(*(id *)&v50[v58], "centerXAnchor");
    v68 = objc_msgSend(v50, "centerXAnchor");
    v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

    *(_QWORD *)(v60 + 48) = v69;
    v70 = OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView;
    v71 = objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView], "widthAnchor");
    v72 = objc_msgSend(v71, "constraintLessThanOrEqualToConstant:", a3);

    *(_QWORD *)(v60 + 56) = v72;
    v73 = objc_msgSend(*(id *)&v50[v55], "widthAnchor");
    if (qword_100640F08 != -1)
      swift_once(&qword_100640F08, sub_1002805AC);
    v74 = objc_msgSend(v73, "constraintEqualToConstant:", *(double *)&qword_10064AEC0);

    v75 = (id)DOCConstraintWithPriority(v74, 999.0);
    *(_QWORD *)(v60 + 64) = v75;
    v76 = objc_msgSend(v50, "topAnchor");
    v77 = objc_msgSend(*(id *)&v50[v58], "topAnchor");
    if (qword_100640EF8 != -1)
      swift_once(&qword_100640EF8, sub_10028058C);
    v78 = objc_msgSend(v76, "constraintLessThanOrEqualToAnchor:constant:", v77, -*(double *)&qword_10064AEB0);

    *(_QWORD *)(v60 + 72) = v78;
    v79 = objc_msgSend(v50, "bottomAnchor");
    v80 = objc_msgSend(*(id *)&v50[v58], "bottomAnchor");
    v81 = objc_msgSend(v79, "constraintGreaterThanOrEqualToAnchor:constant:", v80, *(double *)&qword_10064AEB0);

    *(_QWORD *)(v60 + 80) = v81;
    v82 = objc_msgSend(*(id *)&v50[v58], "centerYAnchor");
    v83 = objc_msgSend(v50, "centerYAnchor");
    v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

    *(_QWORD *)(v60 + 88) = v84;
    v85 = objc_msgSend(*(id *)&v50[v70], "heightAnchor");
    v86 = objc_msgSend(v85, "constraintLessThanOrEqualToConstant:", a4);

    *(_QWORD *)(v60 + 96) = v86;
    *(_QWORD *)(v60 + 104) = v57;
    v101 = v60;
    specialized Array._endMutation()(v87);
    v88 = v101;
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v89 = v57;
    v90 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v88);
    objc_msgSend(v97, "activateConstraints:", v90);

    v91 = sub_10006922C((uint64_t *)&unk_1006444C0);
    v92 = swift_allocObject(v91, 48, 7);
    *(_OWORD *)(v92 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v92 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v92 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v93 = swift_allocObject(&unk_1005D7478, 32, 7);
    *(_QWORD *)(v93 + 16) = v89;
    *(_QWORD *)(v93 + 24) = ObjectType;
    v94 = v50;
    v95 = v89;
    v96 = UIView.registerForTraitChanges<A>(_:handler:)(v92, sub_10028A848, v93, ObjectType);

    swift_unknownObjectRelease(v96);
    swift_bridgeObjectRelease(v92);
    swift_release(v93);

    return v94;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100283DC8(char *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  double v7;
  double v8;

  v5 = objc_msgSend(a1, "traitCollection");
  v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", *(_QWORD *)&a1[OBJC_IVAR____TtC5Files15DOCFilenameView_textFieldTextStyle], v5);
  objc_msgSend(v6, "lineHeight");
  v8 = v7;

  return objc_msgSend(a3, "setConstant:", v8 + 24.0);
}

id sub_100283F08()
{
  char *v0;
  id v1;
  id v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  BOOL v7;
  BOOL v8;
  _BOOL4 v9;
  void *v10;
  char **v11;
  double v12;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "layoutDirection");

  objc_msgSend(v0, "bounds");
  v7 = sub_10028A64C(v3, v4, v5, v6);
  if (v7)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_contentView], "setAxis:", 0);
    v8 = v2 == (id)1;
    v9 = v2 == (id)1;
    v10 = *(void **)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_textField];
    if (v8)
      v11 = &selRef_setPaddingRight_;
    else
      v11 = &selRef_setPaddingLeft_;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_textField], "setTextAlignment:", 2 * v9);
    LODWORD(v12) = 15.0;
    objc_msgSend(v10, *v11, v12);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_contentView], "setAxis:", 1);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_textField], "setTextAlignment:", 1);
  }
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files15DOCFilenameView_maxTextFieldWidthLandscapeConstraint], "setActive:", v7);
}

uint64_t sub_10028402C()
{
  uint64_t v0;
  void *v1;
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  CGRect v24;
  CGRect v25;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_textField);
  objc_msgSend(v1, "frame");
  v25.origin.x = 0.0;
  v25.origin.y = 0.0;
  v25.size.width = 0.0;
  v25.size.height = 0.0;
  result = CGRectEqualToRect(v24, v25);
  if ((result & 1) != 0)
    return result;
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates, v23, 33, 0);
  v4 = *v3;
  if (!*(_QWORD *)(*v3 + 16))
    return swift_endAccess(v23);
  while (1)
  {
    v5 = *(_QWORD *)(v4 + 56);
    if (v5)
    {
      v6 = 0;
LABEL_8:
      v7 = __clz(__rbit64(v5)) + (v6 << 6);
      goto LABEL_9;
    }
    v15 = *(unsigned __int8 *)(v4 + 32);
    v16 = v15 & 0x3F;
    v7 = 1 << v15;
    if (v16 < 7)
      goto LABEL_9;
    v5 = *(_QWORD *)(v4 + 64);
    if (v5)
    {
      v6 = 1;
      goto LABEL_8;
    }
    if (v16 < 8)
      goto LABEL_9;
    v5 = *(_QWORD *)(v4 + 72);
    if (v5)
    {
      v6 = 2;
      goto LABEL_8;
    }
    v5 = *(_QWORD *)(v4 + 80);
    if (v5)
    {
      v6 = 3;
      goto LABEL_8;
    }
    v19 = 0;
    v20 = (v7 + 63) >> 6;
    if (v20 <= 4)
      v20 = 4;
    v21 = v20 - 4;
    while (v21 != v19)
    {
      v5 = *(_QWORD *)(v4 + 88 + 8 * v19++);
      if (v5)
      {
        v6 = v19 + 3;
        goto LABEL_8;
      }
    }
LABEL_9:
    v8 = *(_DWORD *)(v4 + 36);
    result = swift_isUniquelyReferenced_nonNull_native(v4);
    if ((v7 & 0x8000000000000000) != 0)
      break;
    v9 = *v3;
    if ((uint64_t)v7 >= 1 << *(_BYTE *)(*v3 + 32))
      break;
    if (((*(_QWORD *)(v9 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v7) & 1) == 0)
      goto LABEL_44;
    if (v8 != *(_DWORD *)(v9 + 36))
      goto LABEL_45;
    v22 = *v3;
    *v3 = 0x8000000000000000;
    if ((result & 1) == 0)
    {
      sub_1000CDC3C();
      v9 = v22;
    }
    v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v7);
    sub_10044580C(v7);
    v11 = *v3;
    *v3 = v22;
    swift_bridgeObjectRelease(v11);
    swift_endAccess(v23);
    if (v10 == 2)
    {
      if ((objc_msgSend(v1, "isFirstResponder") & 1) != 0)
        objc_msgSend(v1, "resignFirstResponder");
    }
    else if (v10 == 3)
    {
      v17 = objc_msgSend(v1, "window");
      if (v17)
      {
        v18 = v17;
        if ((objc_msgSend(v17, "isKeyWindow") & 1) == 0)
          objc_msgSend(v18, "makeKeyWindow");

      }
    }
    else if (v10 == 4
           || (objc_msgSend(v1, "isFirstResponder") & 1) == 0
           && (objc_msgSend(v1, "becomeFirstResponder"), (v10 & 1) != 0))
    {
      v12 = objc_msgSend(v1, "beginningOfDocument");
      v13 = objc_msgSend(v1, "endOfDocument");
      v14 = objc_msgSend(v1, "textRangeFromPosition:toPosition:", v12, v13);

      objc_msgSend(v1, "setSelectedTextRange:", v14);
    }
    swift_beginAccess(v3, v23, 33, 0);
    v4 = *v3;
    if (!*(_QWORD *)(*v3 + 16))
      return swift_endAccess(v23);
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

void sub_100284428(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_100284488(int a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t *v4;
  unint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[9];
  _BYTE v39[24];

  v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates, v39, 33, 0);
  v5 = *v4;
  Hasher.init(_seed:)(v38, *(_QWORD *)(*v4 + 40));
  Hasher._combine(_:)(2uLL);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    while (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v8) != 3)
    {
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v36 = *v4;
    v11 = *v4;
    *v4 = 0x8000000000000000;
    v12 = *(_QWORD *)(v11 + 16);
    if (*(_QWORD *)(v11 + 24) <= v12)
    {
      v13 = v12 + 1;
      if (isUniquelyReferenced_nonNull_native)
        sub_1000CB2A0(v13);
      else
        sub_1000CF898(v13);
      v11 = v36;
      Hasher.init(_seed:)(v38, *(_QWORD *)(v36 + 40));
      Hasher._combine(_:)(2uLL);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v36 + 32);
      v8 = v14 & ~v15;
      if (((*(_QWORD *)(v36 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
      {
        v16 = ~v15;
        while (*(_BYTE *)(*(_QWORD *)(v36 + 48) + v8) != 3)
        {
          v8 = (v8 + 1) & v16;
          if (((*(_QWORD *)(v36 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
            goto LABEL_15;
        }
        goto LABEL_34;
      }
    }
    else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000CDC3C();
      v11 = v36;
    }
LABEL_15:
    *(_QWORD *)(v11 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v8) = 3;
    v17 = *(_QWORD *)(v11 + 16);
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_39;
    *(_QWORD *)(v11 + 16) = v19;
    v20 = *v4;
    *v4 = v11;
    swift_bridgeObjectRelease(v20);
  }
  swift_endAccess(v39);
  LOBYTE(v8) = a1 & 1;
  swift_beginAccess(v4, v39, 33, 0);
  v21 = *v4;
  Hasher.init(_seed:)(v38, *(_QWORD *)(*v4 + 40));
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1 & 1);
  v22 = Hasher._finalize()();
  v23 = -1 << *(_BYTE *)(v21 + 32);
  v11 = v22 & ~v23;
  if (((*(_QWORD *)(v21 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v24 = ~v23;
    do
    {
      v25 = *(unsigned __int8 *)(*(_QWORD *)(v21 + 48) + v11);
      if ((v25 - 2) >= 3 && ((((v25 & 1) == 0) ^ a1) & 1) != 0)
        goto LABEL_37;
      v11 = (v11 + 1) & v24;
    }
    while (((*(_QWORD *)(v21 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  v26 = swift_isUniquelyReferenced_nonNull_native(*v4);
  v37 = *v4;
  v2 = (_QWORD *)*v4;
  *v4 = 0x8000000000000000;
  v27 = v2[2];
  if (v2[3] > v27)
  {
    if ((v26 & 1) == 0)
    {
      sub_1000CDC3C();
      v2 = (_QWORD *)v37;
    }
    goto LABEL_35;
  }
  v28 = v27 + 1;
  if (v26)
    sub_1000CB2A0(v28);
  else
    sub_1000CF898(v28);
  v2 = (_QWORD *)v37;
  Hasher.init(_seed:)(v38, *(_QWORD *)(v37 + 40));
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1 & 1);
  v29 = Hasher._finalize()();
  v30 = -1 << *(_BYTE *)(v37 + 32);
  v11 = v29 & ~v30;
  if (((*(_QWORD *)(v37 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    goto LABEL_35;
  v31 = ~v30;
  while (1)
  {
    v32 = *(unsigned __int8 *)(*(_QWORD *)(v37 + 48) + v11);
    if ((v32 - 2) >= 3 && ((v32 & 1) == 0) != (a1 & 1))
      break;
    v11 = (v11 + 1) & v31;
    if (((*(_QWORD *)(v37 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_35;
  }
LABEL_34:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCFilenameView.DOCFilenameViewTextFieldUpdateType);
  __break(1u);
LABEL_35:
  *(_QWORD *)((char *)v2 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v11;
  *(_BYTE *)(v2[6] + v11) = v8;
  v33 = v2[2];
  v18 = __OFADD__(v33, 1);
  v34 = v33 + 1;
  if (!v18)
  {
    v2[2] = v34;
    v35 = *v4;
    *v4 = (unint64_t)v2;
    swift_bridgeObjectRelease(v35);
LABEL_37:
    swift_endAccess(v39);
    sub_10028402C();
    return;
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_1002848AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[9];
  _BYTE v21[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates, v21, 33, 0);
  v2 = *v1;
  Hasher.init(_seed:)(v20, *(_QWORD *)(*v1 + 40));
  Hasher._combine(_:)(1uLL);
  v3 = Hasher._finalize()();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    while (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5) != 2)
    {
      v5 = (v5 + 1) & v6;
      if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_5:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v19 = *v1;
  v8 = (_QWORD *)*v1;
  *v1 = 0x8000000000000000;
  v9 = v8[2];
  if (v8[3] <= v9)
  {
    v10 = v9 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_1000CB2A0(v10);
    else
      sub_1000CF898(v10);
    v8 = (_QWORD *)v19;
    Hasher.init(_seed:)(v20, *(_QWORD *)(v19 + 40));
    Hasher._combine(_:)(1uLL);
    v11 = Hasher._finalize()();
    v12 = -1 << *(_BYTE *)(v19 + 32);
    v5 = v11 & ~v12;
    if (((*(_QWORD *)(v19 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v13 = ~v12;
      while (*(_BYTE *)(*(_QWORD *)(v19 + 48) + v5) != 2)
      {
        v5 = (v5 + 1) & v13;
        if (((*(_QWORD *)(v19 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
      }
      goto LABEL_19;
    }
  }
  else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000CDC3C();
    v8 = (_QWORD *)v19;
  }
LABEL_15:
  *(_QWORD *)((char *)v8 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v5;
  *(_BYTE *)(v8[6] + v5) = 2;
  v14 = v8[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (!v15)
  {
    v8[2] = v16;
    v17 = *v1;
    *v1 = v8;
    swift_bridgeObjectRelease(v17);
LABEL_17:
    swift_endAccess(v21);
    return sub_10028402C();
  }
  __break(1u);
LABEL_19:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCFilenameView.DOCFilenameViewTextFieldUpdateType);
  __break(1u);
  return result;
}

uint64_t sub_100284ABC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  Swift::Int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[9];
  _BYTE v21[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files15DOCFilenameView_postLayoutTextFieldUpdates, v21, 33, 0);
  v2 = *v1;
  Hasher.init(_seed:)(v20, *(_QWORD *)(*v1 + 40));
  Hasher._combine(_:)(3uLL);
  v3 = Hasher._finalize()();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    while (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v5) != 4)
    {
      v5 = (v5 + 1) & v6;
      if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_5:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v19 = *v1;
  v8 = (_QWORD *)*v1;
  *v1 = 0x8000000000000000;
  v9 = v8[2];
  if (v8[3] <= v9)
  {
    v10 = v9 + 1;
    if (isUniquelyReferenced_nonNull_native)
      sub_1000CB2A0(v10);
    else
      sub_1000CF898(v10);
    v8 = (_QWORD *)v19;
    Hasher.init(_seed:)(v20, *(_QWORD *)(v19 + 40));
    Hasher._combine(_:)(3uLL);
    v11 = Hasher._finalize()();
    v12 = -1 << *(_BYTE *)(v19 + 32);
    v5 = v11 & ~v12;
    if (((*(_QWORD *)(v19 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v13 = ~v12;
      while (*(_BYTE *)(*(_QWORD *)(v19 + 48) + v5) != 4)
      {
        v5 = (v5 + 1) & v13;
        if (((*(_QWORD *)(v19 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
      }
      goto LABEL_19;
    }
  }
  else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000CDC3C();
    v8 = (_QWORD *)v19;
  }
LABEL_15:
  *(_QWORD *)((char *)v8 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v5;
  *(_BYTE *)(v8[6] + v5) = 4;
  v14 = v8[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (!v15)
  {
    v8[2] = v16;
    v17 = *v1;
    *v1 = v8;
    swift_bridgeObjectRelease(v17);
LABEL_17:
    swift_endAccess(v21);
    return sub_10028402C();
  }
  __break(1u);
LABEL_19:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCFilenameView.DOCFilenameViewTextFieldUpdateType);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCFilenameView()
{
  return objc_opt_self(_TtC5Files15DOCFilenameView);
}

id sub_100284D94()
{
  char *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = type metadata accessor for DOCSafeAreaView();
    v4 = swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
    v5 = OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing;
    if ((v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing] & 1) != 0)
      v6 = 3;
    else
      v6 = v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState];
    *(_BYTE *)(v4 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_visibilityState) = v6;

    return objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView]+ OBJC_IVAR____TtC5Files15DOCFilenameView_textField), "setUserInteractionEnabled:", (v0[v5] & 1) == 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100284E5C()
{
  unsigned __int8 *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  id v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    return;
  }
  v2 = v1;
  v3 = type metadata accessor for DOCSafeAreaView();
  v4 = swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  if ((v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing] & 1) != 0)
    v5 = 3;
  else
    v5 = v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState];
  *(_BYTE *)(v4 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7515DOCSafeAreaView_visibilityState) = v5;

  sub_100286390();
  v6 = v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState];
  if (v6 >= 2)
  {
    if (v6 == 2)
    {
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView], "setAlpha:", 1.0);
      v7 = objc_msgSend(v0, "navigationController");
      if (!v7)
        return;
      v9 = v7;
      objc_msgSend(v7, "setNavigationBarHidden:animated:", 0, 1);
    }
    else
    {
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView], "setAlpha:", 0.0);
      v8 = objc_msgSend(v0, "navigationController");
      if (!v8)
        return;
      v9 = v8;
      objc_msgSend(v8, "setNavigationBarHidden:animated:", 1, 1);
    }

  }
}

char *sub_100284FC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  _BYTE *v8;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  __int128 v18;
  id v19;
  uint64_t v20;
  char *v21;
  id v22;
  NSString v23;
  char *v24;
  NSString v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v39;
  id v40;
  uint64_t ObjectType;
  _QWORD v42[3];
  uint64_t v43;
  objc_super v44;

  ObjectType = swift_getObjectType(v8, a2);
  v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_keyboardWasOnScreenInViewWillAppear] = 2;
  v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing] = 0;
  v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_transitionProxy] = a1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_item] = a2;
  v15 = qword_100640F18;
  v16 = v8;
  swift_unknownObjectRetain(a1);
  v40 = a2;
  v17 = a5;
  if (v15 != -1)
    swift_once(&qword_100640F18, sub_1002805D0);
  v18 = xmmword_10064AED0;
  v19 = objc_allocWithZone((Class)type metadata accessor for DOCFilenameView());
  v21 = sub_1002832DC(v17, v20, *(double *)&v18, *((double *)&v18 + 1));
  v39 = v17;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView] = v21;
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "setAlpha:", 0.0);
  v22 = *(id *)&v21[OBJC_IVAR____TtC5Files15DOCFilenameView_textField];
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  objc_msgSend(v22, "setText:", v23);

  v16[OBJC_IVAR____TtC5Files25DOCFilenameViewController_contentMustBeSelected] = a8 & 1;
  v44.receiver = v16;
  v44.super_class = (Class)type metadata accessor for DOCFilenameViewController();
  v24 = (char *)objc_msgSendSuper2(&v44, "initWithNibName:bundle:", 0, 0);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a7);
  objc_msgSend(v24, "setTitle:", v25);

  v26 = *(void **)(*(_QWORD *)&v24[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView]
                 + OBJC_IVAR____TtC5Files15DOCFilenameView_textField);
  objc_msgSend(v26, "addTarget:action:forControlEvents:", v24, "editingDidEnd:", 0x80000);
  objc_msgSend(v26, "addTarget:action:forControlEvents:", v24, "editingDidChange:", 0x20000);
  v27 = objc_msgSend(v24, "navigationItem");
  v43 = swift_getObjectType(v24, v28);
  v42[0] = v24;
  v29 = objc_allocWithZone((Class)UIBarButtonItem);
  v30 = v24;
  swift_unknownObjectRetain(v30);
  v31 = _bridgeAnythingToObjectiveC<A>(_:)(v42, v43);
  sub_100068588(v42);
  v32 = objc_msgSend(v29, "initWithBarButtonSystemItem:target:action:", 0, v31, "editingDidEnd:");
  swift_unknownObjectRelease(v31);
  objc_msgSend(v27, "setRightBarButtonItem:", v32);

  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v33 = sub_100458778(1, (uint64_t)v30, (uint64_t)"cancelViewController");
  objc_msgSend(v27, "setLeftBarButtonItem:", v33);

  v34 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v35 = swift_allocObject(v34, 48, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v35 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v35 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v36 = v30;
  v37 = UIViewController.registerForTraitChanges<A>(_:handler:)(v35, sub_10028A498, 0, ObjectType);
  swift_unknownObjectRelease(v37);
  swift_bridgeObjectRelease(v35);

  swift_unknownObjectRelease(a1);
  return v36;
}

uint64_t sub_100285448(void *a1, char a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Class isa;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  id v13;
  uint64_t result;
  void *v15;
  id v16;
  objc_super v17;
  uint64_t v18;

  v5 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
  v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v7 + 32) = v2;
  v18 = v7;
  specialized Array._endMutation()(v7);
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v8 = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  objc_msgSend(v5, "setViewControllers:animated:", isa, 0);

  objc_msgSend(v5, "setModalPresentationStyle:", 4);
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files25DOCFilenameViewController_transitionProxy];
  v11 = (objc_class *)type metadata accessor for DOCFilenameTransitioningDelegate();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitioningDelegate_transitionProxy] = v10;
  v17.receiver = v12;
  v17.super_class = v11;
  swift_unknownObjectRetain(v10);
  v13 = objc_msgSendSuper2(&v17, "init");
  objc_msgSend(v5, "setTransitioningDelegate:", v13);
  objc_setAssociatedObject(v5, "DOCFilenameTransitioningDelegate", v13, (void *)1);
  result = (uint64_t)objc_msgSend(v8, "view");
  if (result)
  {
    v15 = (void *)result;
    objc_msgSend((id)result, "layoutIfNeeded");

    v16 = objc_msgSend(v5, "navigationBar");
    objc_msgSend(v16, "setTranslucent:", 1);

    objc_msgSend(a1, "presentViewController:animated:completion:", v5, a2 & 1, 0);
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100285868()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x8000000100520720, "Files/DOCFilenameViewController.swift", 37, 2, 750, 0);
  __break(1u);
}

void sub_1002858C0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing) & 1) == 0)
  {
    v1 = v0;
    *((_BYTE *)v0 + OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing) = 1;
    sub_100284D94();
    sub_1002848AC();
    v2 = swift_allocObject(&unk_1005D7608, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v4[4] = sub_10028A930;
    v5 = v2;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_10004A82C;
    v4[3] = &unk_1005D7620;
    v3 = _Block_copy(v4);
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v3, swift_release(v5).n128_f64[0]);
    _Block_release(v3);
  }
}

void sub_100285A90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  void *object;
  NSString v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, _QWORD, void (*)(char), uint64_t);
  _QWORD *v50;
  uint64_t v51;
  _QWORD v52[3];
  _BYTE v53[8];
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;

  v1 = v0;
  v2 = type metadata accessor for CharacterSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(*(id *)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView)+ OBJC_IVAR____TtC5Files15DOCFilenameView_textField), "text", v4);
  if (v7)
  {
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;

    if (v9)
      v12 = 0;
    else
      v12 = v11 == 0xE000000000000000;
    if (v12)
    {
      swift_bridgeObjectRelease(0xE000000000000000);
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, 0, 0xE000000000000000, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(v11);
        return;
      }
      v13._countAndFlagsBits = 46;
      v13._object = (void *)0xE100000000000000;
      if (String.hasPrefix(_:)(v13))
      {
        v14 = sub_10028A0E8();
        v15 = swift_allocError(&type metadata for FilenameValidationError, v14, 0, 0);
        *v16 = 2;
        goto LABEL_14;
      }
      CharacterSet.init(charactersIn:)(58, 0xE100000000000000);
      v54 = v9;
      v55 = v11;
      v17 = sub_10008B9BC();
      StringProtocol.rangeOfCharacter(from:options:range:)(v6, 0, 0, 0, 1, &type metadata for String, v17);
      if ((v18 & 1) == 0)
      {
        v19 = sub_10028A0E8();
        v15 = swift_allocError(&type metadata for FilenameValidationError, v19, 0, 0);
        *v20 = 3;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
LABEL_14:
        swift_bridgeObjectRelease(v11);
        swift_getErrorValue(v15, v53, v52);
        v21 = Error.localizedDescription.getter(v52[1], v52[2]);
        v23 = v22;
        swift_bridgeObjectRetain(v22);
        v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v23);
        v25 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v24, 1);

        v27 = (id)_DocumentManagerBundle(v26);
        if (!v27)
        {
LABEL_34:
          __break(1u);
          return;
        }
        v28 = v27;
        v56._object = (void *)0xE200000000000000;
        v29._countAndFlagsBits = 19279;
        v29._object = (void *)0xE200000000000000;
        v30.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v30.value._object = (void *)0xEB00000000656C62;
        v31._countAndFlagsBits = 0;
        v31._object = (void *)0xE000000000000000;
        v56._countAndFlagsBits = 19279;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v56)._object;

        v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v34 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, 0, 0);

        objc_msgSend(v25, "addAction:", v34);
        v35 = v25;
        v36 = objc_msgSend(v35, "actions");
        v37 = sub_10004F2F0(0, &qword_1006572A0, UIAlertAction_ptr);
        v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

        if ((unint64_t)v38 >> 62)
        {
          if (v38 < 0)
            v51 = v38;
          else
            v51 = v38 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v38);
          v39 = _CocoaArrayWrapper.endIndex.getter(v51);
          swift_bridgeObjectRelease(v38);
          if (v39)
          {
LABEL_17:
            v40 = v39 - 1;
            if (!__OFSUB__(v39, 1))
            {
              if ((v38 & 0xC000000000000001) == 0)
              {
                if ((v40 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v40 < *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v41 = *(id *)(v38 + 8 * v40 + 32);
LABEL_22:
                  v42 = v41;
                  objc_msgSend(v35, "setPreferredAction:", v41, swift_bridgeObjectRelease(v38).n128_f64[0]);

                  v43 = *(id *)DOCLog.UI.unsafeMutableAddressor(objc_msgSend(v1, "presentViewController:animated:completion:", v35, 1, 0));
                  v44 = static os_log_type_t.debug.getter(v43);
                  v45 = sub_10006922C((uint64_t *)&unk_100644560);
                  v46 = swift_allocObject(v45, 112, 7);
                  *(_OWORD *)(v46 + 16) = xmmword_1004D4CE0;
                  *(_QWORD *)(v46 + 56) = &type metadata for String;
                  v47 = sub_10006A638();
                  *(_QWORD *)(v46 + 32) = 0xD000000000000011;
                  *(_QWORD *)(v46 + 40) = 0x8000000100520700;
                  *(_QWORD *)(v46 + 96) = &type metadata for String;
                  *(_QWORD *)(v46 + 104) = v47;
                  *(_QWORD *)(v46 + 64) = v47;
                  *(_QWORD *)(v46 + 72) = v21;
                  *(_QWORD *)(v46 + 80) = v23;
                  os_log(_:dso:log:type:_:)("%@: prompting user with message: %@", 35, 2, &_mh_execute_header, v43, v44, v46);

                  swift_bridgeObjectRelease(v46);
                  swift_errorRelease(v15);
                  return;
                }
                __break(1u);
                goto LABEL_34;
              }
LABEL_31:
              v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
              goto LABEL_22;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
        else
        {
          v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v39)
            goto LABEL_17;
        }
        swift_bridgeObjectRelease(v38);
        __break(1u);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      sub_1002848AC();
      v48 = swift_allocObject(&unk_1005D7590, 24, 7);
      *(_QWORD *)(v48 + 16) = v1;
      v49 = *(void (**)(uint64_t, uint64_t, _QWORD, void (*)(char), uint64_t))((swift_isaMask & *v1)
                                                                                                + 0xF0);
      v50 = v1;
      v49(v9, v11, 0, sub_10028A8F8, v48);
      swift_bridgeObjectRelease(v11);
      swift_release(v48);
    }
  }
}

void sub_100286008(char a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v4 = swift_allocObject(&unk_1005D75B8, 32, 7);
  *(_BYTE *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v8[4] = sub_10028A924;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004A82C;
  v8[3] = &unk_1005D75D0;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a2;
  swift_release(v6);
  DOCRunInMainThread(v5);
  _Block_release(v5);
}

void sub_1002860B8(char a1, _BYTE *a2)
{
  if ((a1 & 1) != 0)
  {
    if ((a2[OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing] & 1) == 0)
    {
      a2[OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing] = 1;
      sub_100284D94();
      objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
    }
  }
  else
  {
    sub_100284488(0);
  }
}

void sub_100286134()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  id v8;
  id v9;
  id v10;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView]+ OBJC_IVAR____TtC5Files15DOCFilenameView_textField), "text");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    if (v3)
      v6 = 0;
    else
      v6 = v5 == 0xE000000000000000;
    if (v6)
    {
      swift_bridgeObjectRelease(0xE000000000000000);
    }
    else
    {
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0, 0xE000000000000000, 0);
      swift_bridgeObjectRelease(v5);
      if ((v7 & 1) == 0)
      {
        v8 = objc_msgSend(v0, "navigationItem");
        v10 = objc_msgSend(v8, "rightBarButtonItem");

        if (!v10)
          return;
        objc_msgSend(v10, "setEnabled:", 1);
        goto LABEL_12;
      }
    }
  }
  v9 = objc_msgSend(v0, "navigationItem");
  v10 = objc_msgSend(v9, "rightBarButtonItem");

  if (!v10)
    return;
  objc_msgSend(v10, "setEnabled:", 0);
LABEL_12:

}

uint64_t sub_1002862AC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  id v7;
  __n128 v8;
  _QWORD v10[4];

  swift_unknownObjectRetain(a3);
  v7 = a1;
  _bridgeAnyObjectToAny(_:)(v10, a3);
  v8 = swift_unknownObjectRelease(a3);
  a4(v8);

  return sub_100068588(v10);
}

void sub_100286390()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  Class isa;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD v26[4];

  v1 = v0;
  v2 = objc_msgSend(v0, "view");
  if (!v2)
    goto LABEL_12;
  v3 = v2;
  v4 = type metadata accessor for DOCSafeAreaView();
  v5 = swift_dynamicCastClass(v3, v4);
  if (!v5)
    goto LABEL_11;
  v6 = (void *)v5;
  if (sub_100076430(v0[OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState], (uint64_t)&off_1005C0420))
  {
    objc_msgSend(v6, "setEffect:", 0);
LABEL_11:

LABEL_12:
    v14 = *(char **)&v1[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView];
    v15 = *(id *)&v14[OBJC_IVAR____TtC5Files15DOCFilenameView_textField];
    v16 = objc_msgSend(v14, "tintColor");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend((id)objc_opt_self(UIColor), "_doc_safeTintColor:", v16);

      objc_msgSend(v15, "setTintColor:", v18);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  v7 = objc_msgSend(v0, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceStyle");

  if (!v8)
    goto LABEL_11;
  if (v8 != (id)1)
  {
    if (v8 != (id)2)
    {
      v23 = objc_msgSend(v1, "traitCollection");
      v24 = objc_msgSend(v23, "userInterfaceStyle");

      type metadata accessor for UIUserInterfaceStyle(0);
      v26[3] = v25;
      v26[0] = v24;
      doc_warnUnrecognizedEnumValueEncountered(_:)(v26);

      sub_100068588(v26);
      goto LABEL_12;
    }
    v9 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.125, 1.0);
    v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v11 = swift_allocObject(v10, 56, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9720;
    *(_QWORD *)(v11 + 32) = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 2.0);
    v12 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 45.0);
    if (!v12)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v11 + 40) = v12;
    v13 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCompositingColor:withMode:alpha:", v9, 5, 1.0);
    if (!v13)
    {
      __break(1u);
      goto LABEL_11;
    }
LABEL_16:
    *(_QWORD *)(v11 + 48) = v13;
    v26[0] = v11;
    specialized Array._endMutation()(v13);
    sub_10004F2F0(0, &qword_10064B288, UIVisualEffect_ptr);
    v21 = v3;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v6, "setBackgroundEffects:", isa);

    goto LABEL_12;
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.92, 1.0);
  v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v11 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9720;
  *(_QWORD *)(v11 + 32) = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 2.0);
  v20 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 45.0);
  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v11 + 40) = v20;
  v13 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCompositingColor:withMode:alpha:", v9, 1, 1.0);
  if (v13)
    goto LABEL_16;
LABEL_21:
  __break(1u);
}

id sub_100286894(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCFilenameViewController);
}

uint64_t type metadata accessor for DOCFilenameViewController()
{
  return objc_opt_self(_TtC5Files25DOCFilenameViewController);
}

char *sub_100286908(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char *result;
  objc_class *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSBundle v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  Swift::String v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  __int128 v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  unint64_t v43;
  void *object;
  void *v45;

  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&object - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&object - v12;
  v14 = v3 + OBJC_IVAR____TtC5Files23DOCRenameViewController_delegate;
  *(_QWORD *)(v14 + 8) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = objc_msgSend(a1, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v15);

  static UTType.folder.getter();
  LOBYTE(v15) = static UTType.== infix(_:_:)(v13, v11);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v17 = ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
  result = (char *)(id)_DocumentManagerBundle(v17);
  v19 = (objc_class *)result;
  if ((v15 & 1) != 0)
  {
    if (result)
    {
      v43 = 0x8000000100520870;
      v20 = 0x4620656D616E6552;
      v21 = 0xED00007265646C6FLL;
      v22 = 0x617A696C61636F4CLL;
      v23 = 0xEB00000000656C62;
      v24.super.isa = v19;
      v25 = 0;
      v26 = 0xE000000000000000;
      v27 = 0xD000000000000033;
      goto LABEL_6;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (!result)
    goto LABEL_14;
  v27 = 0xD000000000000035;
  v43 = 0x8000000100520830;
  v20 = 0x4420656D616E6552;
  v21 = 0xEF746E656D75636FLL;
  v22 = 0x617A696C61636F4CLL;
  v23 = 0xEB00000000656C62;
  v24.super.isa = v19;
  v25 = 0;
  v26 = 0xE000000000000000;
LABEL_6:
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, *(Swift::String_optional *)&v22, v24, *(Swift::String *)&v25, *(Swift::String *)&v27);

  object = v28._object;
  if (a3 && objc_msgSend(a3, "isRepresentativeIcon", object))
  {
    swift_unknownObjectRetain(a3);
    v29 = a3;
  }
  else
  {
    v29 = 0;
  }
  v45 = a3;
  v30 = a2;
  v31 = qword_100640F18;
  v32 = a1;
  swift_unknownObjectRetain(v29);
  if (v31 != -1)
    swift_once(&qword_100640F18, sub_1002805D0);
  v33 = xmmword_10064AED0;
  v34 = objc_allocWithZone((Class)type metadata accessor for DOCRenameThumbnailView());
  v35 = sub_100282214(v32, v29, *(double *)&v33, *((double *)&v33 + 1));
  v36 = v32;
  v37 = objc_msgSend(v36, "displayName");
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = v35;
  v42 = sub_100284FC4(v30, v32, v38, v40, v41, v28._countAndFlagsBits, (uint64_t)object, 0);

  swift_unknownObjectRelease(v29);
  swift_unknownObjectRelease(v45);
  return v42;
}

char *sub_100286C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *result;
  objc_class *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  NSBundle v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(char *, uint64_t);
  Swift::String v41;
  uint64_t v42;
  NSURL *v43;
  void *v44;
  void *v45;
  id v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a4;
  v52 = a2;
  v53 = a3;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_10064B290);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10006922C(&qword_100643EC0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v50 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v50 - v20;
  v54 = v4;
  v22 = v4 + OBJC_IVAR____TtC5Files23DOCRenameViewController_delegate;
  *(_QWORD *)(v22 + 8) = 0;
  v23 = swift_unknownObjectWeakInit(v22);
  v55 = a1;
  v24 = URL.contentType.getter(v23);
  static UTType.folder.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_10028A9A8((uint64_t)v21, (uint64_t)v12);
  sub_10028A9A8((uint64_t)v19, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v26((uint64_t)v12, 1, v6) == 1)
  {
    sub_10000CB4C((uint64_t)v19, &qword_100643EC0);
    sub_10000CB4C((uint64_t)v21, &qword_100643EC0);
    if (v26(v25, 1, v6) == 1)
    {
      v27 = sub_10000CB4C((uint64_t)v12, &qword_100643EC0);
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_10028A9A8((uint64_t)v12, (uint64_t)v16);
  if (v26(v25, 1, v6) == 1)
  {
    sub_10000CB4C((uint64_t)v19, &qword_100643EC0);
    sub_10000CB4C((uint64_t)v21, &qword_100643EC0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_6:
    v27 = sub_10000CB4C((uint64_t)v12, &qword_10064B290);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v25, v6);
  v38 = sub_10005A360((unint64_t *)&qword_100641980, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
  v39 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v9, v6, v38);
  v40 = *(void (**)(char *, uint64_t))(v7 + 8);
  v40(v9, v6);
  sub_10000CB4C((uint64_t)v19, &qword_100643EC0);
  sub_10000CB4C((uint64_t)v21, &qword_100643EC0);
  v40(v16, v6);
  v27 = sub_10000CB4C((uint64_t)v12, &qword_100643EC0);
  if ((v39 & 1) != 0)
  {
LABEL_10:
    result = (char *)(id)_DocumentManagerBundle(v27);
    if (result)
    {
      v29 = (objc_class *)result;
      v49 = 0x8000000100520870;
      v31 = 0x4620656D616E6552;
      v32 = 0xED00007265646C6FLL;
      v33 = 0x617A696C61636F4CLL;
      v34 = 0xEB00000000656C62;
      v35.super.isa = v29;
      v36 = 0;
      v37 = 0xE000000000000000;
      v30 = 0xD000000000000033;
      goto LABEL_12;
    }
    goto LABEL_14;
  }
LABEL_7:
  result = (char *)(id)_DocumentManagerBundle(v27);
  if (result)
  {
    v29 = (objc_class *)result;
    v30 = 0xD000000000000035;
    v49 = 0x8000000100520830;
    v31 = 0x4420656D616E6552;
    v32 = 0xEF746E656D75636FLL;
    v33 = 0x617A696C61636F4CLL;
    v34 = 0xEB00000000656C62;
    v35.super.isa = v29;
    v36 = 0;
    v37 = 0xE000000000000000;
LABEL_12:
    v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v31, *(Swift::String_optional *)&v33, v35, *(Swift::String *)&v36, *(Swift::String *)&v30);

    v42 = v55;
    URL._bridgeToObjectiveC()(v43);
    v45 = v44;
    v46 = (id)DOCNewThumbnailFittingImageView(186.0, 186.0);

    v47 = sub_100284FC4(v51, 0, v52, v53, v46, v41._countAndFlagsBits, (uint64_t)v41._object, 0);
    v48 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v42, v48);
    return v47;
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_1002870F0(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, __n128), uint64_t a5)
{
  char *v5;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  __n128 v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;

  Strong = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Files23DOCRenameViewController_delegate]);
  if (!Strong)
  {
    v16 = *(void **)&v5[OBJC_IVAR____TtC5Files25DOCFilenameViewController_item];
    if (!v16)
    {
      __break(1u);
      return;
    }
    v28 = v16;
    v17 = objc_msgSend(v28, "displayName");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    if (v18 == a1 && v20 == a2)
    {
      v23 = swift_bridgeObjectRelease(v20);
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v18, v20, 0);
      v23 = swift_bridgeObjectRelease(v20);
      if ((v22 & 1) == 0)
      {
        v24 = swift_allocObject(&unk_1005D74A0, 24, 7);
        swift_unknownObjectWeakInit(v24 + 16);
        v25 = (_QWORD *)swift_allocObject(&unk_1005D74C8, 48, 7);
        v25[2] = a4;
        v25[3] = a5;
        v25[4] = v24;
        v25[5] = v28;
        v26 = (void *)objc_opt_self(FPItemManager);
        v28 = v28;
        v27 = objc_msgSend(v26, "defaultManager", swift_retain().n128_f64[0]);
        if ((a3 & 1) != 0)
          sub_10047C130(v28, a1, a2, v5, 1, (void **)sub_10028A884, (uint64_t)v25, 0, 0);
        else
          sub_10047C58C(v28, a1, a2, v5, 1, (uint64_t)sub_10028A884, (uint64_t)v25, 0, 0);

        swift_release(v25);
        goto LABEL_18;
      }
    }
    a4(1, v23);
LABEL_18:

    return;
  }
  v12 = Strong;
  v13 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext)
                  + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  if (v13)
  {
    if (*(_QWORD *)(v13 + 16) == 1)
    {
      swift_bridgeObjectRetain(a2);
      v14 = sub_1000D6978();
      v15 = String._bridgeToObjectiveC()();
      sub_10028A890(a1, a2);
      objc_msgSend(v14, "setText:", v15);

    }
  }
  ((void (*)(uint64_t))a4)(1);
  swift_unknownObjectRelease(v12);
}

void sub_1002873A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v10 = (_QWORD *)swift_allocObject(&unk_1005D74F0, 56, 7);
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a1;
  v10[5] = a4;
  v10[6] = a5;
  v14[4] = sub_10028A8D4;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10004A82C;
  v14[3] = &unk_1005D7508;
  v11 = _Block_copy(v14);
  v12 = v15;
  swift_retain();
  swift_errorRetain(a1);
  swift_retain();
  v13 = a5;
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

uint64_t sub_100287480(void (*a1)(BOOL, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v27 - 8);
  v13.n128_f64[0] = __chkstk_darwin(v27);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(a3 == 0, v13);
  v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_1005D7540, 32, 7);
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  aBlock[4] = sub_10028A8F0;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D7558;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  swift_retain();
  v21 = a5;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10006922C((uint64_t *)&unk_100647540);
  v25 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v9, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v27);
}

void sub_1002876A4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id *v10;
  void (*v11)(void);
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files25DOCFilenameViewController_transitionProxy);
    swift_unknownObjectRetain(v6);

    if (v6)
    {
      swift_getObjectType(v6);
      v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v8 = swift_allocObject(v7, 40, 7);
      *(_OWORD *)(v8 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v8 + 32) = a2;
      v13 = v8;
      specialized Array._endMutation()(v8);
      v9 = a2;
      sub_1002C3170(v13, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
      swift_bridgeObjectRelease(v13);
      swift_unknownObjectRelease(v6);
    }
  }
  v10 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(Strong);
  v11 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v10) + 0xA0);
  v12 = *v10;
  v11();

}

uint64_t sub_1002877C0()
{
  uint64_t v0;

  return sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files23DOCRenameViewController_delegate);
}

id sub_1002877D0(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCRenameViewController);
}

uint64_t type metadata accessor for DOCRenameViewController()
{
  return objc_opt_self(_TtC5Files23DOCRenameViewController);
}

char *sub_10028780C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  id v11;
  char *result;
  char *v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  id v21;
  id v22;
  char *v23;
  Swift::String v24;

  v5 = v4;
  v10 = v5 + OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_delegate;
  *(_QWORD *)(v10 + 8) = 0;
  swift_unknownObjectWeakInit(v10);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_parentItem) = a1;
  v11 = a1;
  result = (char *)(id)_DocumentManagerBundle(v11);
  if (result)
  {
    v13 = result;
    v24._countAndFlagsBits = 0xD000000000000033;
    v24._object = (void *)0x8000000100520650;
    v14._object = (void *)0x8000000100520630;
    v14._countAndFlagsBits = 0xD000000000000012;
    v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v15.value._object = (void *)0xEB00000000656C62;
    v16._countAndFlagsBits = 0x646C6F462077654ELL;
    v16._object = (void *)0xEA00000000007265;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v24);

    v18 = qword_100640F18;
    v19 = v11;
    if (v18 != -1)
      swift_once(&qword_100640F18, sub_1002805D0);
    v20 = xmmword_10064AED0;
    v21 = objc_allocWithZone((Class)type metadata accessor for DOCFolderThumbnailView());
    v22 = sub_1002828EC(v19, *(double *)&v20, *((double *)&v20 + 1));
    v23 = sub_100284FC4(a4, 0, a2, a3, v22, v17._countAndFlagsBits, (uint64_t)v17._object, 1);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100287A48(char *a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5)
{
  char *v8;
  id v9;

  v8 = &a1[*a4];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCFilenameViewController.swift", 37, 2, a5, 0);
  __break(1u);
}

double sub_100287ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  double result;

  v10 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v11 = *(void **)&v5[OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_parentItem];
  v12 = swift_allocObject(&unk_1005D7428, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = (_QWORD *)swift_allocObject(&unk_1005D7450, 40, 7);
  v13[2] = v12;
  v13[3] = a4;
  v13[4] = a5;
  swift_retain();
  swift_retain();
  sub_1004864E8(v11, a1, a2, 0, v5, (uint64_t)sub_10028A818, (uint64_t)v13);

  swift_release(v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_100287BCC(void *a1, uint64_t a2, uint64_t (*a3)(BOOL))
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  char v20[24];

  if (a1)
  {
    v5 = a2 + 16;
    swift_beginAccess(a2 + 16, v20, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (char *)Strong;
      v8 = Strong + OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_delegate;
      v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_delegate);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)(v8 + 8);
        ObjectType = swift_getObjectType(v9);
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v11 + 8))(v7, a1, ObjectType, v11);
        swift_unknownObjectRelease(v10);
      }
      else
      {
        v13 = a1;
      }
      v14 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files25DOCFilenameViewController_transitionProxy];
      if (v14)
      {
        swift_getObjectType(*(_QWORD *)&v7[OBJC_IVAR____TtC5Files25DOCFilenameViewController_transitionProxy]);
        v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v16 = swift_allocObject(v15, 40, 7);
        *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v16 + 32) = a1;
        v19 = v16;
        specialized Array._endMutation()(v16);
        v17 = a1;
        swift_unknownObjectRetain(v14);
        sub_1002C3170(v19, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
        swift_bridgeObjectRelease(v19);

        swift_unknownObjectRelease(v14);
      }
      else
      {

      }
    }
  }
  return a3(a1 != 0);
}

uint64_t sub_100287D3C()
{
  uint64_t v0;

  return sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files29DOCCreateFolderViewController_delegate);
}

uint64_t type metadata accessor for DOCCreateFolderViewController()
{
  return objc_opt_self(_TtC5Files29DOCCreateFolderViewController);
}

id sub_100287DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v3 = objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(a1, v3);
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "topViewController");
  if (!v5)
    return 0;
  v6 = v5;
  v7 = type metadata accessor for DOCFilenameViewController();
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8)
  {
    v9 = *(void **)(v8 + OBJC_IVAR____TtC5Files25DOCFilenameViewController_item);
    if (v9)
    {
      v10 = *(void **)(v1
                     + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitioningDelegate_transitionProxy);
      objc_allocWithZone((Class)type metadata accessor for DOCFilenameTransitionCoordinator());
      swift_unknownObjectRetain(v10);
      v11 = sub_10028806C(v9, v10);
    }
    else
    {
      v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCFilenameTransitionCoordinator()), "init");
    }
    v12 = v11;

  }
  else
  {

    return 0;
  }
  return v12;
}

uint64_t type metadata accessor for DOCFilenameTransitioningDelegate()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitioningDelegate);
}

id sub_10028806C(void *a1, void *a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnail] = 0;
  v7 = &v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v3[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  v9 = OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_group;
  v10 = v3;
  *(_QWORD *)&v3[v9] = dispatch_group_create();

  v19.receiver = v10;
  v19.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v19, "init");
  if (a2)
  {
    v12 = swift_allocObject(&unk_1005D7388, 24, 7);
    *(_QWORD *)(v12 + 16) = v11;
    v17[4] = sub_10028A734;
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_100018CC0;
    v17[3] = &unk_1005D73A0;
    v13 = _Block_copy(v17);
    v14 = v18;
    v15 = v11;
    swift_unknownObjectRetain(a2);
    objc_msgSend(a2, "getTransitionControllerForItem:completionBlock:", a1, v13, swift_release(v14).n128_f64[0]);

    swift_unknownObjectRelease(a2);
    _Block_release(v13);
    swift_unknownObjectRelease(a2);
  }
  else
  {

  }
  return v11;
}

void sub_1002881E8(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  if (a1)
  {
    v4 = swift_allocObject(&unk_1005D73D8, 24, 7);
    *(_QWORD *)(v4 + 16) = a2;
    v8[4] = sub_10028A73C;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1002882A8;
    v8[3] = &unk_1005D73F0;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = a2;
    objc_msgSend(a1, "getDisplayInformation:withCompletionBlock:", 0, v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
  }
}

void sub_1002882A8(uint64_t a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13;
  void (*v14)(void *, uint64_t, double, double, double, double);
  id v15;

  v14 = *(void (**)(void *, uint64_t, double, double, double, double))(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  swift_retain(v13);
  v15 = a2;
  v14(a2, a3, a4, a5, a6, a7);
  swift_release(v13);

}

double sub_100288344(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double result;
  _QWORD v18[2];
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_group];
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1005D6CF8, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v1;
  aBlock[4] = sub_10028A138;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D6D10;
  v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v1);
  v20 = _swiftEmptyArrayStorage;
  v14 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10006922C((uint64_t *)&unk_100647540);
  v16 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v15, v16, v3, v14);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v9, v5, v11, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

void sub_100288554(void *a1)
{
  char **v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  char **v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  char **v12;
  uint64_t v13;
  char *v14;
  id v15;

  v2 = &selRef_setAccessibilityValue_;
  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = v3;
  v15 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v15)
  {
LABEL_14:
    __break(1u);
LABEL_15:

    goto LABEL_16;
  }
  v5 = objc_opt_self(UINavigationController);
  v6 = (void *)swift_dynamicCastObjCClass(v15, v5);
  if (v6)
  {
    v7 = (char **)objc_msgSend(v6, "topViewController");
    if (v7)
    {
      v2 = v7;
      v8 = type metadata accessor for DOCFilenameViewController();
      v9 = (_BYTE *)swift_dynamicCastClass(v2, v8);
      if (v9)
      {
        sub_1002886A0(v9, a1);
LABEL_12:

        return;
      }

    }
  }
  v10 = objc_opt_self(UINavigationController);
  v11 = (void *)swift_dynamicCastObjCClass(v4, v10);
  if (v11)
  {
    v12 = (char **)objc_msgSend(v11, "topViewController");
    if (v12)
    {
      v2 = v12;
      v13 = type metadata accessor for DOCFilenameViewController();
      v14 = (char *)swift_dynamicCastClass(v2, v13);
      if (v14)
      {
        sub_100288E6C(v14, a1);
        goto LABEL_12;
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  __break(1u);
}

void sub_1002886A0(_BYTE *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  uint64_t v22;
  unsigned __int8 v23;
  id v24;
  int IsHardwareKeyboardAttached;
  uint64_t *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  NSObject *v40;
  uint64_t v41;
  id v42;
  double v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  _BYTE *v61;
  double v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  id v79;
  _BYTE *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char v91[24];
  void **aBlock;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  _QWORD *v97;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v86 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v85 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, "containerView", v11);
  v14 = objc_msgSend(a2, "viewForKey:", UITransitionContextToViewKey);
  if (v14)
  {
    v15 = v14;
    v83 = v7;
    v84 = v6;
    objc_msgSend(v14, "setAutoresizingMask:", 18);
    objc_msgSend(v13, "bounds");
    objc_msgSend(v15, "setFrame:");
    objc_msgSend(v15, "setAlpha:", 0.0);
    objc_msgSend(v13, "addSubview:", v15);
    objc_msgSend(v15, "layoutBelowIfNeeded");
    v87 = a2;
    v16 = objc_msgSend(a2, "viewControllerForKey:", UITransitionContextToViewControllerKey);
    if (v16
      && (v17 = v16,
          v18 = type metadata accessor for DOCFilenameViewController(),
          v19 = swift_dynamicCastClass(v17, v18),
          v17,
          v19))
    {
      objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView], "setAlpha:", 0.0);
      v20 = 1;
    }
    else
    {
      v20 = 0;
    }
    v21 = dispatch_group_create();
    v22 = swift_allocObject(&unk_1005D6D48, 32, 7);
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
    v89 = v22;
    v23 = a1[OBJC_IVAR____TtC5Files25DOCFilenameViewController_contentMustBeSelected];
    v88 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView];
    sub_100284488(v23);
    if ((v23 & 1) != 0
      || (v24 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
          IsHardwareKeyboardAttached = GSEventIsHardwareKeyboardAttached(),
          v24,
          IsHardwareKeyboardAttached))
    {
      sub_100284ABC();
    }
    v26 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect);
    if ((*(_BYTE *)(v3
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect
                   + 32) & 1) != 0
      || (v27 = *(void **)(v3
                         + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnail)) == 0
      || (*(_BYTE *)(v3
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle
                   + 8) & 1) != 0)
    {
      dispatch_group_enter(v21);
      v28 = swift_allocObject(&unk_1005D6D70, 48, 7);
      *(_BYTE *)(v28 + 16) = v20;
      *(_QWORD *)(v28 + 24) = 0x3FD999999999999ALL;
      *(_QWORD *)(v28 + 32) = a1;
      *(_QWORD *)(v28 + 40) = v21;
      v29 = v89;
      *(_QWORD *)(v89 + 16) = sub_10028A198;
      *(_QWORD *)(v29 + 24) = v28;
    }
    else
    {
      v68 = v26[2];
      v67 = v26[3];
      v70 = *v26;
      v69 = v26[1];
      v71 = *(_QWORD *)(v3
                      + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle);
      v72 = v27;
      dispatch_group_enter(v21);
      v73 = swift_allocObject(&unk_1005D6E60, 105, 7);
      v74 = v87;
      *(_QWORD *)(v73 + 16) = v13;
      *(_QWORD *)(v73 + 24) = v74;
      *(_QWORD *)(v73 + 32) = 0x3FD999999999999ALL;
      *(_QWORD *)(v73 + 40) = a1;
      *(_QWORD *)(v73 + 48) = v72;
      *(_QWORD *)(v73 + 56) = v71;
      *(_QWORD *)(v73 + 64) = v70;
      *(_QWORD *)(v73 + 72) = v69;
      *(_QWORD *)(v73 + 80) = v68;
      *(_QWORD *)(v73 + 88) = v67;
      *(_QWORD *)(v73 + 96) = v21;
      *(_BYTE *)(v73 + 104) = v20;
      v75 = v89;
      *(_QWORD *)(v89 + 16) = sub_10028A244;
      *(_QWORD *)(v75 + 24) = v73;
      v76 = v13;
      swift_unknownObjectRetain(v74);
    }
    v81 = v10;
    v82 = v9;
    v77 = v13;
    v30 = a1;
    v31 = v21;
    sub_100087534(0, 0);
    v32 = swift_allocObject(&unk_1005D6D98, 24, 7);
    *(_QWORD *)(v32 + 16) = 0;
    v33 = v32 + 16;
    dispatch_group_enter(v31);
    v79 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_100640F20 != -1)
      swift_once(&qword_100640F20, sub_1002805EC);
    v78 = qword_10064AEE0;
    v34 = objc_msgSend(v30, "view");
    v35 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
    v36 = (_QWORD *)swift_allocObject(&unk_1005D6DC0, 64, 7);
    v37 = v89;
    v36[2] = v32;
    v36[3] = v37;
    v36[4] = v30;
    v36[5] = v15;
    v36[6] = 0x3FD999999999999ALL;
    v36[7] = v31;
    v96 = sub_10028A1EC;
    v97 = v36;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v94 = sub_1000B3580;
    v95 = &unk_1005D6DD8;
    v38 = _Block_copy(&aBlock);
    v39 = v97;
    v80 = v30;
    v40 = v31;
    swift_retain();
    v41 = v32;
    swift_retain();
    v42 = v15;
    *(_QWORD *)&v43 = swift_release(v39).n128_u64[0];
    v44 = v79;
    v45 = objc_msgSend(v79, "addObserverForName:object:queue:usingBlock:", v78, v34, v35, v38, v43);
    _Block_release(v38);

    swift_beginAccess(v33, v91, 1, 0);
    v46 = *(_QWORD *)(v41 + 16);
    *(_QWORD *)(v41 + 16) = v45;
    swift_unknownObjectRelease(v46);
    v47 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v48 = (void *)static OS_dispatch_queue.main.getter(v47);
    v49 = swift_allocObject(&unk_1005D6E10, 24, 7);
    v50 = v87;
    *(_QWORD *)(v49 + 16) = v87;
    v96 = sub_10028AD48;
    v97 = (_QWORD *)v49;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v94 = sub_10004A82C;
    v95 = &unk_1005D6E28;
    v51 = _Block_copy(&aBlock);
    v52 = swift_unknownObjectRetain(v50);
    v53 = v85;
    static DispatchQoS.unspecified.getter(v52);
    v90 = _swiftEmptyArrayStorage;
    v54 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v55 = sub_10006922C((uint64_t *)&unk_100647540);
    v56 = sub_1000791AC();
    v57 = v82;
    v58 = v84;
    v59 = v54;
    v60 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v55, v56, v84, v59);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v53, v57, v48, v51);
    v61 = v80;
    _Block_release(v51);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v57, v58);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v81);
    *(_QWORD *)&v62 = swift_release(v97).n128_u64[0];
    if (objc_msgSend(*(id *)(v88 + OBJC_IVAR____TtC5Files15DOCFilenameView_textField), "isFirstResponder", v62)&& (v61[OBJC_IVAR____TtC5Files25DOCFilenameViewController_keyboardWasOnScreenInViewWillAppear] & 1) == 0&& !objc_msgSend((id)objc_opt_self(UIKeyboard), "shouldMinimizeForHardwareKeyboard"))
    {
      swift_release(v89);
      swift_release(v41);
      v64 = v77;
      goto LABEL_20;
    }
    v63 = objc_msgSend(v61, "view");
    v64 = v77;
    if (v63)
    {
      v65 = v63;
      v66 = type metadata accessor for DOCSafeAreaView();
      swift_dynamicCastClassUnconditional(v65, v66, 0, 0, 0);
      sub_10028135C();
      swift_release(v89);
      swift_release(v41);

LABEL_20:
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100288E6C(char *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  double *v12;
  char v13;
  void *v14;
  _UNKNOWN **v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  NSObject *v34;
  char *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  id v58;
  id v59;
  NSObject *v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  const void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  _QWORD *v82;
  void **aBlock;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  _QWORD *v88;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v80 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v77 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  v8 = __chkstk_darwin(v7);
  v76 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = objc_msgSend(a2, "containerView", v8);
  v75 = objc_msgSend(a2, "viewForKey:", UITransitionContextFromViewKey);
  if (v75)
  {
    v74 = v5;
    v10 = dispatch_group_create();
    v11 = v10;
    v12 = (double *)(v2
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect);
    v13 = *(_BYTE *)(v2
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect
                   + 32);
    v73 = a2;
    if ((v13 & 1) != 0
      || (v14 = *(void **)(v2
                         + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnail)) == 0
      || (*(_BYTE *)(v2
                   + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle
                   + 8) & 1) != 0)
    {
      dispatch_group_enter(v10);
      v15 = DSConflictStrategy_ptr;
      v16 = (void *)objc_opt_self(UIView);
      v17 = swift_allocObject(&unk_1005D71A8, 24, 7);
      *(_QWORD *)(v17 + 16) = a1;
      v87 = sub_10028A344;
      v88 = (_QWORD *)v17;
      aBlock = _NSConcreteStackBlock;
      v84 = 1107296256;
      v85 = sub_10004A82C;
      v86 = &unk_1005D71C0;
      v18 = _Block_copy(&aBlock);
      v19 = v88;
      v20 = a1;
      swift_release(v19);
      v21 = swift_allocObject(&unk_1005D71F8, 24, 7);
      *(_QWORD *)(v21 + 16) = v11;
      v87 = sub_1000A8854;
      v88 = (_QWORD *)v21;
      aBlock = _NSConcreteStackBlock;
      v84 = 1107296256;
      v85 = sub_10016C02C;
      v86 = &unk_1005D7210;
      v22 = _Block_copy(&aBlock);
      v23 = v88;
      v24 = v11;
      swift_release(v23);
      objc_msgSend(v16, "animateWithDuration:delay:options:animations:completion:", 0, v18, v22, 0.4, 0.0);
      _Block_release(v22);
      _Block_release(v18);
    }
    else
    {
      v50 = v12[2];
      v49 = v12[3];
      v52 = *v12;
      v51 = v12[1];
      v72 = *(_QWORD *)(v2
                      + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle);
      v53 = v14;
      dispatch_group_enter(v11);
      v71 = (id)objc_opt_self(DOCTransitionUtils);
      v70 = v81;
      v69 = objc_msgSend(a2, "viewForKey:", UITransitionContextFromViewKey);
      v68 = objc_msgSend(a2, "viewForKey:", UITransitionContextToViewKey);
      v54 = *(void **)(*(_QWORD *)&a1[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView]
                     + OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView);
      v55 = swift_allocObject(&unk_1005D7338, 24, 7);
      *(_QWORD *)(v55 + 16) = v11;
      v87 = sub_10028ACA4;
      v88 = (_QWORD *)v55;
      aBlock = _NSConcreteStackBlock;
      v84 = 1107296256;
      v85 = sub_10016C02C;
      v86 = &unk_1005D7350;
      v56 = _Block_copy(&aBlock);
      v67 = v56;
      v57 = v88;
      v58 = v53;
      v59 = v54;
      v60 = v11;
      swift_release(v57);
      v65 = v56;
      LOWORD(v64) = 257;
      v61 = v70;
      v62 = v69;
      v63 = v68;
      objc_msgSend(v71, "performZoomTransitionInContainer:withSourceView:destinationView:duration:alterativeView:thumbnail:thumbnailStyle:location:presenting:fadingSource:completion:", v70, v69, v68, v59, v58, v72, 0.48, v52, v51, v50, v49, v64, v65);
      _Block_release(v67);

      v15 = DSConflictStrategy_ptr;
    }
    dispatch_group_enter(v11);
    v25 = (void *)objc_opt_self(v15[240]);
    v26 = swift_allocObject(&unk_1005D7248, 24, 7);
    *(_QWORD *)(v26 + 16) = a1;
    v87 = sub_10028A370;
    v88 = (_QWORD *)v26;
    aBlock = _NSConcreteStackBlock;
    v84 = 1107296256;
    v85 = sub_10004A82C;
    v86 = &unk_1005D7260;
    v27 = _Block_copy(&aBlock);
    v28 = v88;
    v29 = a1;
    swift_release(v28);
    v30 = (_QWORD *)swift_allocObject(&unk_1005D7298, 40, 7);
    v31 = v75;
    v30[2] = v75;
    v30[3] = v29;
    v30[4] = v11;
    v87 = sub_10028A3D4;
    v88 = v30;
    aBlock = _NSConcreteStackBlock;
    v84 = 1107296256;
    v85 = sub_10016C02C;
    v86 = &unk_1005D72B0;
    v32 = _Block_copy(&aBlock);
    v33 = v88;
    v34 = v11;
    v35 = v29;
    v36 = v31;
    swift_release(v33);
    objc_msgSend(v25, "animateWithDuration:animations:completion:", v27, v32, 0.48);
    _Block_release(v32);
    _Block_release(v27);
    v37 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v38 = (void *)static OS_dispatch_queue.main.getter(v37);
    v39 = swift_allocObject(&unk_1005D72E8, 24, 7);
    v40 = v73;
    *(_QWORD *)(v39 + 16) = v73;
    v87 = sub_10028A444;
    v88 = (_QWORD *)v39;
    aBlock = _NSConcreteStackBlock;
    v84 = 1107296256;
    v85 = sub_10004A82C;
    v86 = &unk_1005D7300;
    v41 = _Block_copy(&aBlock);
    v42 = swift_unknownObjectRetain(v40);
    v43 = v76;
    static DispatchQoS.unspecified.getter(v42);
    v82 = _swiftEmptyArrayStorage;
    v44 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v45 = sub_10006922C((uint64_t *)&unk_100647540);
    v46 = sub_1000791AC();
    v47 = v77;
    v48 = v74;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v45, v46, v74, v44);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v43, v47, v38, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v79);
    swift_release(v88);
  }
  else
  {
    __break(1u);
  }
}

void sub_100289558(uint64_t a1, void *a2, char *a3, uint64_t a4, uint64_t a5, void *a6, char a7, double a8, double a9, double a10, double a11, double a12)
{
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;

  v22 = (void *)objc_opt_self(DOCTransitionUtils);
  v23 = objc_msgSend(a2, "viewForKey:", UITransitionContextFromViewKey);
  v24 = objc_msgSend(a2, "viewForKey:", UITransitionContextToViewKey);
  v25 = *(void **)(*(_QWORD *)&a3[OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView]
                 + OBJC_IVAR____TtC5Files15DOCFilenameView_thumbnailView);
  v26 = swift_allocObject(&unk_1005D6E88, 24, 7);
  *(_QWORD *)(v26 + 16) = a6;
  v46 = sub_10028ACA4;
  v47 = v26;
  aBlock = _NSConcreteStackBlock;
  v43 = 1107296256;
  v44 = sub_10016C02C;
  v45 = &unk_1005D6EA0;
  v27 = _Block_copy(&aBlock);
  v28 = v47;
  v29 = v25;
  v30 = a6;
  swift_release(v28);
  LOWORD(v39) = 256;
  objc_msgSend(v22, "performZoomTransitionInContainer:withSourceView:destinationView:duration:alterativeView:thumbnail:thumbnailStyle:location:presenting:fadingSource:completion:", a1, v23, v24, v29, a4, a5, a8, a9, a10, a11, a12, v39, v27);
  _Block_release(v27);

  v31 = (void *)objc_opt_self(UIView);
  if ((a7 & 1) != 0)
  {
    v32 = swift_allocObject(&unk_1005D6F28, 24, 7);
    *(_QWORD *)(v32 + 16) = a3;
    v46 = sub_10028ACAC;
    v47 = v32;
    aBlock = _NSConcreteStackBlock;
    v43 = 1107296256;
    v44 = sub_10004A82C;
    v45 = &unk_1005D6F40;
    v33 = _Block_copy(&aBlock);
    v34 = v47;
    v35 = a3;
    swift_release(v34);
    objc_msgSend(v31, "animateWithDuration:delay:options:animations:completion:", 0, v33, 0, a8 * 0.33, a8 * 0.67);
  }
  else
  {
    v36 = swift_allocObject(&unk_1005D6ED8, 24, 7);
    *(_QWORD *)(v36 + 16) = a3;
    v46 = sub_10028ACA8;
    v47 = v36;
    aBlock = _NSConcreteStackBlock;
    v43 = 1107296256;
    v44 = sub_10004A82C;
    v45 = &unk_1005D6EF0;
    v33 = _Block_copy(&aBlock);
    v37 = v47;
    v38 = a3;
    swift_release(v37);
    objc_msgSend(v31, "animateWithDuration:delay:options:animations:completion:", 0, v33, 0, a8 * 0.33, 0.0);
  }
  _Block_release(v33);
}

void sub_100289860(char a1, void *a2, void *a3, double a4)
{
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void **v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v8 = (void *)objc_opt_self(UIView);
  if ((a1 & 1) != 0)
  {
    v9 = swift_allocObject(&unk_1005D7108, 24, 7);
    *(_QWORD *)(v9 + 16) = a2;
    v27 = sub_10028A324;
    v28 = v9;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10004A82C;
    v26 = &unk_1005D7120;
    v10 = _Block_copy(&v23);
    v11 = v28;
    v12 = a2;
    swift_release(v11);
    v13 = swift_allocObject(&unk_1005D7158, 24, 7);
    *(_QWORD *)(v13 + 16) = a3;
    v27 = sub_10028ACA4;
    v28 = v13;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10016C02C;
    v26 = &unk_1005D7170;
    v14 = _Block_copy(&v23);
    v15 = v28;
    v16 = a3;
    swift_release(v15);
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 0, v10, v14, a4 * 0.33, a4 * 0.67);
  }
  else
  {
    v17 = swift_allocObject(&unk_1005D7068, 24, 7);
    *(_QWORD *)(v17 + 16) = a2;
    v27 = sub_10028A304;
    v28 = v17;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10004A82C;
    v26 = &unk_1005D7080;
    v10 = _Block_copy(&v23);
    v18 = v28;
    v19 = a2;
    swift_release(v18);
    v20 = swift_allocObject(&unk_1005D70B8, 24, 7);
    *(_QWORD *)(v20 + 16) = a3;
    v27 = sub_10028ACA4;
    v28 = v20;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10016C02C;
    v26 = &unk_1005D70D0;
    v14 = _Block_copy(&v23);
    v21 = v28;
    v22 = a3;
    swift_release(v21);
    objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 0, v10, v14, a4 * 0.33, 0.0);
  }
  _Block_release(v14);
  _Block_release(v10);
}

void sub_100289AB8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  uint64_t *v13;
  void (**v14)(__n128);
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  double v19;
  void (*v20)(__n128);
  uint64_t v21;
  __n128 v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  void **aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  void (*v39)();
  uint64_t v40;
  char v41[24];
  char v42[24];
  char v43[24];

  v13 = (uint64_t *)(a3 + 16);
  v14 = (void (**)(__n128))(a4 + 16);
  swift_beginAccess(a3 + 16, v43, 0, 0);
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v16 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v15);
    v17 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v17, "removeObserver:", v15);
    swift_unknownObjectRelease(v15);

  }
  swift_beginAccess(v13, v42, 1, 0);
  v18 = *v13;
  *v13 = 0;
  swift_unknownObjectRelease(v18);
  *(_QWORD *)&v19 = swift_beginAccess(v14, v41, 0, 0).n128_u64[0];
  v20 = *v14;
  if (v20)
  {
    v21 = *(_QWORD *)(a4 + 24);
    v22 = swift_retain();
    v20(v22);
    sub_100087534((uint64_t)v20, v21);
  }
  v23 = objc_msgSend(a5, "navigationController", v19);
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "setNavigationBarHidden:animated:", 1, 0);

  }
  objc_msgSend(a6, "setAlpha:", 1.0);
  v25 = (void *)objc_opt_self(UIView);
  v26 = swift_allocObject(&unk_1005D6FC8, 24, 7);
  *(_QWORD *)(v26 + 16) = a5;
  v39 = sub_10028A270;
  v40 = v26;
  aBlock = _NSConcreteStackBlock;
  v36 = 1107296256;
  v37 = sub_10004A82C;
  v38 = &unk_1005D6FE0;
  v27 = _Block_copy(&aBlock);
  v28 = v40;
  v29 = a5;
  swift_release(v28);
  v30 = swift_allocObject(&unk_1005D7018, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a7;
  v39 = sub_10028A2CC;
  v40 = v30;
  aBlock = _NSConcreteStackBlock;
  v36 = 1107296256;
  v37 = sub_10016C02C;
  v38 = &unk_1005D7030;
  v31 = _Block_copy(&aBlock);
  v32 = v40;
  v33 = v29;
  v34 = a7;
  swift_release(v32);
  objc_msgSend(v25, "animateWithDuration:animations:completion:", v27, v31, a1);
  _Block_release(v31);
  _Block_release(v27);
}

void sub_100289D34(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setAlpha:", 0.0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for DOCFilenameTransitionCoordinator()
{
  return objc_opt_self(_TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator);
}

uint64_t getEnumTagSinglePayload for DOCFilenameView.DOCFilenameViewTextFieldUpdateType(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_100289E28 + 4 * byte_1004DF410[v4]))();
}

uint64_t storeEnumTagSinglePayload for DOCFilenameView.DOCFilenameViewTextFieldUpdateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100289ED4 + 4 * byte_1004DF41A[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100289F08 + 4 * byte_1004DF415[v5]))();
}

uint64_t sub_100289F08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289F10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100289F18);
  return result;
}

uint64_t sub_100289F24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100289F2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100289F30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289F38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100289F44(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_100289F60(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCFilenameView.DOCFilenameViewTextFieldUpdateType()
{
  return &type metadata for DOCFilenameView.DOCFilenameViewTextFieldUpdateType;
}

uint64_t storeEnumTagSinglePayload for VisibilityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100289FD4 + 4 * byte_1004DF424[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10028A008 + 4 * byte_1004DF41F[v4]))();
}

uint64_t sub_10028A008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028A010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10028A018);
  return result;
}

uint64_t sub_10028A024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10028A02CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10028A030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028A038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityState()
{
  return &type metadata for VisibilityState;
}

unint64_t sub_10028A058()
{
  unint64_t result;

  result = qword_10064B210;
  if (!qword_10064B210)
  {
    result = swift_getWitnessTable(&unk_1004DF674, &type metadata for VisibilityState);
    atomic_store(result, (unint64_t *)&qword_10064B210);
  }
  return result;
}

unint64_t sub_10028A0A0()
{
  unint64_t result;

  result = qword_10064B218;
  if (!qword_10064B218)
  {
    result = swift_getWitnessTable(&unk_1004DF69C, &type metadata for DOCFilenameView.DOCFilenameViewTextFieldUpdateType);
    atomic_store(result, (unint64_t *)&qword_10064B218);
  }
  return result;
}

unint64_t sub_10028A0E8()
{
  unint64_t result;

  result = qword_10064B220;
  if (!qword_10064B220)
  {
    result = swift_getWitnessTable(&unk_1004DF74C, &type metadata for FilenameValidationError);
    atomic_store(result, (unint64_t *)&qword_10064B220);
  }
  return result;
}

uint64_t sub_10028A12C()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

void sub_10028A138()
{
  uint64_t v0;

  sub_100288554(*(void **)(v0 + 16));
}

uint64_t sub_10028A140()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028A16C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10028A198()
{
  uint64_t v0;

  sub_100289860(*(_BYTE *)(v0 + 16), *(void **)(v0 + 32), *(void **)(v0 + 40), *(double *)(v0 + 24));
}

uint64_t sub_10028A1A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 64, 7);
}

void sub_10028A1EC(uint64_t a1)
{
  uint64_t v1;

  sub_100289AB8(*(double *)(v1 + 48), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 56));
}

uint64_t sub_10028A200()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 105, 7);
}

void sub_10028A244()
{
  uint64_t v0;

  sub_100289558(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 96), *(_BYTE *)(v0 + 104), *(double *)(v0 + 32), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88));
}

void sub_10028A268()
{
  uint64_t v0;

  sub_1002817F8(*(_QWORD *)(v0 + 16));
}

void sub_10028A270()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState) = 2;
  sub_100284E5C();
}

uint64_t sub_10028A2A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10028A2CC()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 24);
  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState) = 1;
  sub_100284E5C();
  dispatch_group_leave(v1);
}

id sub_10028A304()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView), "setAlpha:", 0.0);
}

id sub_10028A324()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_filenameView), "setAlpha:", 1.0);
}

void sub_10028A344()
{
  uint64_t v0;

  sub_100289D34(*(void **)(v0 + 16));
}

uint64_t sub_10028A34C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10028A370()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState) = 3;
  sub_100284E5C();
}

uint64_t sub_10028A3A0()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10028A3D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(NSObject **)(v0 + 32);
  objc_msgSend(*(id *)(v0 + 16), "removeFromSuperview");
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files25DOCFilenameViewController_visibilityState) = 0;
  sub_100284E5C();
  dispatch_group_leave(v2);
}

uint64_t sub_10028A420()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10028A444()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "completeTransition:", 1);
}

void sub_10028A458(uint64_t a1, uint64_t a2)
{
  sub_100281CA0(a1, a2);
}

void sub_10028A478()
{
  sub_100282CF0();
}

void sub_10028A498()
{
  sub_100286390();
}

id sub_10028A4B8(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  double Width;
  double Height;
  double v9;
  id v10;
  CGRect v12;
  CGRect v13;

  if ((a2 & 1) != 0)
  {
    objc_msgSend(a1, "setClipsToBounds:", 1);
    v3 = objc_msgSend(a1, "layer");
    objc_msgSend(v3, "setBorderWidth:", 1.0);

    v4 = objc_msgSend(a1, "layer");
    v5 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.121568627);
    v6 = objc_msgSend(v5, "CGColor");

    objc_msgSend(v4, "setBorderColor:", v6);
    objc_msgSend(a1, "bounds");
    Width = CGRectGetWidth(v12);
    objc_msgSend(a1, "bounds");
    Height = CGRectGetHeight(v13);
    if (Width > Height)
      Height = Width;
    v9 = Height * 6.0 * 0.0078125 + -1.0;
  }
  else
  {
    objc_msgSend(a1, "setClipsToBounds:", 0);
    v10 = objc_msgSend(a1, "layer");
    v9 = 0.0;
    objc_msgSend(v10, "setBorderWidth:", 0.0);

  }
  return objc_msgSend(a1, "_setContinuousCornerRadius:", v9);
}

BOOL sub_10028A64C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  int v8;
  double Width;
  double Height;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  v8 = DOCUsePadIdiomForTraits(0);
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  Width = CGRectGetWidth(v12);
  if (!v8)
    return Width >= 430.0;
  if (Width > 551.0)
  {
    v13.origin.x = a1;
    v13.origin.y = a2;
    v13.size.width = a3;
    v13.size.height = a4;
    Height = CGRectGetHeight(v13);
    v14.origin.x = a1;
    v14.origin.y = a2;
    v14.size.width = a3;
    v14.size.height = a4;
    if (Height / fmax(CGRectGetWidth(v14), 1.0) <= 0.7)
      return 1;
  }
  return 0;
}

void sub_10028A734(void *a1)
{
  uint64_t v1;

  sub_1002881E8(a1, *(void **)(v1 + 16));
}

void sub_10028A73C(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(void **)(v12
                 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnail);
  *(_QWORD *)(v12
            + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnail) = a1;
  v14 = a1;

  v15 = v12
      + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_thumbnailStyle;
  *(_QWORD *)v15 = a2;
  *(_BYTE *)(v15 + 8) = 0;
  v16 = v12 + OBJC_IVAR____TtC5FilesP33_03C5E21A9DFBF0EC7F1C3AC78C186A7532DOCFilenameTransitionCoordinator_sourceRect;
  *(double *)v16 = a3;
  *(double *)(v16 + 8) = a4;
  *(double *)(v16 + 16) = a5;
  *(double *)(v16 + 24) = a6;
  *(_BYTE *)(v16 + 32) = 0;
}

uint64_t sub_10028A7C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028A7EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10028A818(void *a1)
{
  uint64_t v1;

  return sub_100287BCC(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(BOOL))(v1 + 24));
}

uint64_t sub_10028A824()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10028A848(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100283DC8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10028A850()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10028A884(uint64_t a1)
{
  uint64_t v1;

  sub_1002873A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10028A890(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10028A898()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_errorRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10028A8D4()
{
  uint64_t v0;

  return sub_100287480(*(void (**)(BOOL, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10028A8E4()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_10028A8F0()
{
  uint64_t v0;

  sub_1002876A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10028A8F8(char a1)
{
  uint64_t v1;

  sub_100286008(a1, *(void **)(v1 + 16));
}

uint64_t sub_10028A900()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10028A924()
{
  uint64_t v0;

  sub_1002860B8(*(_BYTE *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

id sub_10028A930()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files25DOCFilenameViewController_dismissing) = 0;
  return sub_100284D94();
}

void sub_10028A95C(uint64_t a1)
{
  uint64_t v1;

  sub_100280F50(a1, v1);
}

void sub_10028A968()
{
  uint64_t v0;

  sub_100282B34(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10028A974()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10028A9A0()
{
  uint64_t v0;

  sub_100282554(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10028A9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100643EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for FilenameValidationError(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 5)
      return v7 - 4;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10028AA40 + 4 * byte_1004DF429[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FilenameValidationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10028AAEC + 4 * byte_1004DF433[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10028AB20 + 4 * byte_1004DF42E[v5]))();
}

uint64_t sub_10028AB20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028AB28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10028AB30);
  return result;
}

uint64_t sub_10028AB3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10028AB44);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10028AB48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028AB50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028AB5C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_10028AB70(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FilenameValidationError()
{
  return &type metadata for FilenameValidationError;
}

uint64_t storeEnumTagSinglePayload for FilenameValidationError._ProgrammerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10028ABDC + 4 * byte_1004DF43D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10028AC10 + 4 * byte_1004DF438[v4]))();
}

uint64_t sub_10028AC10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028AC18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10028AC20);
  return result;
}

uint64_t sub_10028AC2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10028AC34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10028AC38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028AC40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FilenameValidationError._ProgrammerError()
{
  return &type metadata for FilenameValidationError._ProgrammerError;
}

unint64_t sub_10028AC60()
{
  unint64_t result;

  result = qword_10064B298;
  if (!qword_10064B298)
  {
    result = swift_getWitnessTable(&unk_1004DF834, &type metadata for FilenameValidationError._ProgrammerError);
    atomic_store(result, (unint64_t *)&qword_10064B298);
  }
  return result;
}

void sub_10028ADAC(void *a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = sub_10006922C(&qword_1006438A0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "preferredFormattedName", v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName + 8];
  *v11 = v8;
  v11[1] = v10;
  swift_bridgeObjectRelease(v12);
  sub_10028B214();
  v13 = objc_msgSend(objc_allocWithZone((Class)SYDocumentSenderAvatar), "initWithDocumentSender:", a1);
  v14 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v14, "displayScale");
  v16 = v15;

  v17 = objc_msgSend(v1, "traitCollection");
  v18 = objc_msgSend(v17, "layoutDirection");

  v19 = v18 == (id)1;
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  v21 = swift_allocObject(&unk_1005D7920, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  type metadata accessor for MainActor(0);
  v22 = v13;
  v23 = a1;
  swift_retain();
  v25 = static MainActor.shared.getter(v24);
  v26 = swift_allocObject(&unk_1005D79C0, 72, 7);
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v26 + 32) = v22;
  *(_QWORD *)(v26 + 40) = v16;
  *(_BYTE *)(v26 + 48) = v19;
  *(_QWORD *)(v26 + 56) = v23;
  *(_QWORD *)(v26 + 64) = v21;
  swift_release(v21);
  v27 = sub_100174E78((uint64_t)v6, (uint64_t)&unk_10064B348, v26);
  swift_release(v27);

}

id sub_10028B1E4()
{
  return sub_1001405E0(0, type metadata accessor for RoundImageView);
}

uint64_t type metadata accessor for RoundImageView()
{
  return objc_opt_self(_TtC5FilesP33_2CDE72793B16146F97C3D59460763C8F14RoundImageView);
}

id sub_10028B214()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(_QWORD **, _QWORD);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  void (*v89)(_QWORD **, _QWORD);
  unint64_t v90;
  uint64_t v91;
  void *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  _QWORD *v124;
  char v125;

  v1 = v0;
  v105 = sub_10006922C(&qword_10064B358);
  v2 = __chkstk_darwin(v105);
  v104 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AttributedString.Runs.Run(0, v2);
  v121 = *(_QWORD *)(v4 - 8);
  v122 = v4;
  __chkstk_darwin(v4);
  v119 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_10064B360);
  v7 = __chkstk_darwin(v6);
  v120 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for AttributedString.Runs.Index(0, v7);
  v108 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v115 = (uint64_t *)((char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v10);
  v114 = (char *)&v98 - v12;
  v118 = type metadata accessor for AttributedString.Runs(0, v11);
  v109 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_10006922C(&qword_10064B368);
  __chkstk_darwin(v112);
  v103 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v117 = (uint64_t)&v98 - v17;
  v113 = type metadata accessor for AttributedString.FormattingOptions(0, v16);
  __chkstk_darwin(v113);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10006922C(&qword_10064B370);
  __chkstk_darwin(v20);
  v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for String.LocalizationValue(0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for String.LocalizationValue.StringInterpolation(0, v24);
  __chkstk_darwin(v27);
  v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for AttributedString(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v98 - v36;
  v38 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName + 8);
  if (!v38)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_textLabel), "setAttributedText:", 0, v35);
  v111 = v1;
  v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName);
  swift_bridgeObjectRetain(v38);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1);
  v40._countAndFlagsBits = 0x2A2A206D6F7246;
  v40._object = (void *)0xE700000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v40);
  v41._countAndFlagsBits = v39;
  v41._object = v38;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v41);
  swift_bridgeObjectRelease(v38);
  v42._countAndFlagsBits = 10794;
  v42._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
  String.LocalizationValue.init(stringInterpolation:)(v29);
  v43 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v22, 1, 1, v43);
  v124 = _swiftEmptyArrayStorage;
  v44 = sub_10005A360(&qword_10064B378, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions, (uint64_t)&protocol conformance descriptor for AttributedString.FormattingOptions);
  v45 = sub_10006922C(&qword_10064B380);
  v46 = sub_100062698(&qword_10064B388, &qword_10064B380, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v124, v45, v46, v113, v44);
  AttributedString.init(doc_localized:options:locale:comment:)(v26, v19, v22, "Title shown in Return to Sender pill in the item's Info view", 60, 2);
  v47 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v106 = v37;
  v99 = v47;
  v48 = ((uint64_t (*)(char *, char *, uint64_t))v47)(v33, v37, v30);
  v49 = v116;
  AttributedString.runs.getter(v48);
  v50 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
  v101 = v33;
  v102 = v30;
  v100 = v50;
  v50(v33, v30);
  v51 = v109;
  v52 = (uint64_t)v103;
  v53 = v118;
  v110 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  v110(v103, v49, v118);
  v54 = sub_10005A360(&qword_10064B390, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs, (uint64_t)&protocol conformance descriptor for AttributedString.Runs);
  v55 = v114;
  v113 = v54;
  dispatch thunk of Collection.startIndex.getter(v53);
  v109 = *(_QWORD *)(v51 + 8);
  ((void (*)(char *, uint64_t))v109)(v49, v53);
  v56 = v112;
  v57 = v108;
  v58 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v52 + *(int *)(v112 + 36), v55, v107);
  v59 = v117;
  sub_100070EDC(v52, v117, &qword_10064B368);
  v60 = v59 + *(int *)(v56 + 36);
  v112 = *(_QWORD *)(v57 + 16);
  v61 = v59;
  ((void (*)(char *, uint64_t, uint64_t))v112)(v55, v60, v58);
  while (1)
  {
    v62 = (char *)v115;
    v63 = v55;
    v64 = v60;
    v65 = v61;
    v66 = v118;
    v67 = v113;
    dispatch thunk of Collection.endIndex.getter((char *)v115, v118, v113);
    v68 = sub_10005A360(&qword_10064B398, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Runs.Index);
    v69 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v62, v58, v68);
    v70 = *(void (**)(char *, uint64_t))(v57 + 8);
    v70(v62, v58);
    v70(v63, v58);
    if ((v69 & 1) != 0)
      break;
    v71 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v124, v64, v66, v67);
    v72 = v120;
    v73 = v121;
    v74 = v122;
    (*(void (**)(char *))(v121 + 16))(v120);
    v71(&v124, 0);
    v75 = v116;
    v110(v116, (char *)v65, v66);
    dispatch thunk of Collection.formIndex(after:)(v64, v66, v67);
    ((void (*)(char *, uint64_t))v109)(v75, v66);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v72, 0, 1, v74);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v72, 1, v74) == 1)
      goto LABEL_15;
    v60 = v64;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v119, v120, v122);
    KeyPath = swift_getKeyPath(&unk_1004DF8C8);
    __chkstk_darwin(KeyPath);
    *(&v98 - 2) = v77;
    v78 = swift_getKeyPath(&unk_1004DF8F8);
    v79 = sub_10028D9B0();
    AttributedString.Runs.Run.subscript.getter(&v124, v78, v79);
    swift_release(v78);
    if (v125 != 1 && (v124 & 2) != 0)
    {
      v80 = sub_10028C164();
      if (!v80)
      {
LABEL_3:
        (*(void (**)(char *, uint64_t))(v121 + 8))(v119, v122);
        goto LABEL_4;
      }
    }
    else
    {
      v80 = sub_10028C078();
      if (!v80)
        goto LABEL_3;
    }
    v81 = v80;
    v82 = (uint64_t)v104;
    v83 = v119;
    AttributedString.Runs.Run.range.getter();
    v84 = swift_getKeyPath(&unk_1004DF938);
    __chkstk_darwin(v84);
    *(&v98 - 2) = v85;
    v86 = swift_getKeyPath(&unk_1004DF968);
    v123 = v80;
    v87 = v81;
    v88 = sub_100062698(&qword_10064B3A8, &qword_10064B358, (uint64_t)&protocol conformance descriptor for Range<A>);
    v89 = (void (*)(_QWORD **, _QWORD))AttributedString.subscript.modify(&v124, v82, v105, v88);
    v90 = sub_1002793FC();
    v91 = v121;
    v58 = v107;
    AttributedSubstring.subscript.setter(&v123, v86, v90);
    v89(&v124, 0);

    v57 = v108;
    sub_10000CB4C(v82, &qword_10064B358);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v83, v122);
LABEL_4:
    v55 = v114;
    v61 = v117;
    ((void (*)(char *, uint64_t, uint64_t))v112)(v114, v60, v58);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v120, 1, 1, v122);
LABEL_15:
  sub_10000CB4C(v117, &qword_10064B368);
  v93 = *(void **)(v111 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_textLabel);
  sub_10004F2F0(0, &qword_10064A0C0, NSAttributedString_ptr);
  v94 = v101;
  v95 = v106;
  v96 = v102;
  v99(v101, v106, v102);
  v97 = (void *)NSAttributedString.init(_:)(v94);
  objc_msgSend(v93, "setAttributedText:", v97);

  return (id)v100(v95, v96);
}

uint64_t sub_10028BBC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_10006922C((uint64_t *)&unk_10064B3B0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

id sub_10028BC20(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  objc_super v22;

  v9 = &v4[OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu] = 0;
  v10 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_backgroundView;
  v11 = (void *)objc_opt_self(UIBlurEffect);
  v12 = v4;
  v13 = objc_msgSend(v11, "effectWithStyle:", 8);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v13);

  *(_QWORD *)&v4[v10] = v14;
  v15 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_containerView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_imageView;
  v17 = type metadata accessor for RoundImageView();
  *(_QWORD *)&v12[v16] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_textLabel;
  *(_QWORD *)&v12[v18] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v19 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_chevronView;
  *(_QWORD *)&v12[v19] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___baseFont] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___senderFont] = 1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___chevronFont] = 1;

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for DOCAttributionPillView();
  v20 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  sub_10028C3C4();

  return v20;
}

void sub_10028BEE4(char a1)
{
  void *v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  uint64_t v8;

  if (objc_msgSend(v1, "isHighlighted") != (a1 & 1))
  {
    if (objc_msgSend(v1, "isHighlighted"))
      v2 = 0.6;
    else
      v2 = 1.0;
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1005D7920, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    v5 = swift_allocObject(&unk_1005D7970, 32, 7);
    *(_QWORD *)(v5 + 16) = v4;
    *(double *)(v5 + 24) = v2;
    v7[4] = sub_10028D86C;
    v8 = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_10004A82C;
    v7[3] = &unk_1005D7988;
    v6 = _Block_copy(v7);
    swift_release(v8);
    objc_msgSend(v3, "animateWithDuration:animations:", v6, 0.25);
    _Block_release(v6);
  }
}

void sub_10028C010(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = Strong;
    objc_msgSend(Strong, "setAlpha:", a2);

  }
}

id sub_10028C078()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___baseFont;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___baseFont);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleCaption1);
    v5 = objc_msgSend(v4, "fontDescriptorWithSymbolicTraits:", 0x8000);

    if (v5)
    {
      v3 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v5, 0.0);

    }
    else
    {
      v3 = 0;
    }
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v7 = v3;
    sub_10008D9C4(v6);
  }
  sub_1000B0268(v2);
  return v3;
}

id sub_10028C164()
{
  return sub_10028C194(&OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___senderFont, 32770, &UIFontWeightSemibold);
}

id sub_10028C17C()
{
  return sub_10028C194(&OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___chevronFont, 0x8000, &UIFontWeightMedium);
}

id sub_10028C194(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString *v16;
  NSString *v17;
  unint64_t v18;
  unint64_t v19;
  Class isa;
  id v21;
  void *v22;
  id v23;
  _BYTE v25[48];
  _BYTE v26[72];

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  v6 = v5;
  if (v5 == (void *)1)
  {
    v9 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleCaption1);
    v10 = objc_msgSend(v9, "fontDescriptorWithSymbolicTraits:", a2);

    if (v10)
    {
      v11 = sub_10006922C((uint64_t *)&unk_1006484A0);
      inited = swift_initStackObject(v11, v26);
      *(_OWORD *)(inited + 16) = xmmword_1004D9670;
      *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
      v13 = sub_10006922C(&qword_100645B90);
      v14 = swift_initStackObject(v13, v25);
      *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v14 + 32) = UIFontWeightTrait;
      *(_QWORD *)(v14 + 40) = *a3;
      v15 = v10;
      v16 = UIFontDescriptorTraitsAttribute;
      v17 = UIFontWeightTrait;
      v18 = sub_10008B0E8(v14);
      *(_QWORD *)(inited + 64) = sub_10006922C(&qword_100645B98);
      *(_QWORD *)(inited + 40) = v18;
      v19 = sub_10008B0CC(inited);
      type metadata accessor for AttributeName(0);
      sub_10005A360((unint64_t *)&qword_100645BA0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004D915C);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v21 = objc_msgSend(v15, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

      v6 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v21, 0.0);
    }
    else
    {
      v6 = 0;
    }
    v22 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v6;
    v23 = v6;
    sub_10008D9C4(v22);
  }
  sub_1000B0268(v5);
  return v6;
}

void sub_10028C3C4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  Class isa;
  Class v72;
  double v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;

  v77 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleTap:");
  objc_msgSend(v0, "addGestureRecognizer:");
  v1 = sub_10028C17C();
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v1, 1);

    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    v78 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v5, v4);

    v76 = v4;
    v6 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_chevronView];
    objc_msgSend(v6, "setImage:", v78);
    v7 = (void *)objc_opt_self(UIColor);
    v8 = objc_msgSend(v7, "secondaryLabelColor");
    objc_msgSend(v6, "setTintColor:", v8);

    v9 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_backgroundView];
    v10 = objc_msgSend(v9, "contentView");
    v11 = objc_msgSend(v7, "tertiarySystemFillColor");
    objc_msgSend(v10, "setBackgroundColor:", v11);

    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v12 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_containerView];
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_imageView];
    objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v14 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_textLabel];
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = objc_msgSend(v7, "darkGrayColor");
    objc_msgSend(v13, "setBackgroundColor:", v15);

    v16 = objc_msgSend(v13, "layer");
    objc_msgSend(v16, "setMinificationFilter:", kCAFilterTrilinear);

    LODWORD(v17) = 1148846080;
    objc_msgSend(v14, "setContentHuggingPriority:forAxis:", 0, v17);
    LODWORD(v18) = 1148846080;
    objc_msgSend(v14, "setContentHuggingPriority:forAxis:", 1, v18);
    objc_msgSend(v0, "addSubview:", v9);
    v19 = objc_msgSend(v9, "contentView");
    objc_msgSend(v19, "addSubview:", v12);

    objc_msgSend(v12, "addSubview:", v13);
    objc_msgSend(v12, "addSubview:", v14);
    objc_msgSend(v12, "addSubview:", v6);
    v75 = (id)objc_opt_self(NSLayoutConstraint);
    v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v21 = swift_allocObject(v20, 152, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004DF880;
    v22 = objc_msgSend(v13, "topAnchor");
    v23 = objc_msgSend(v12, "topAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

    *(_QWORD *)(v21 + 32) = v24;
    v25 = objc_msgSend(v13, "leadingAnchor");
    v26 = objc_msgSend(v12, "leadingAnchor");
    v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

    *(_QWORD *)(v21 + 40) = v27;
    v28 = objc_msgSend(v13, "bottomAnchor");
    v29 = objc_msgSend(v12, "bottomAnchor");
    v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

    *(_QWORD *)(v21 + 48) = v30;
    v31 = objc_msgSend(v13, "widthAnchor");
    v32 = objc_msgSend(v13, "heightAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:multiplier:", v32, 1.0);

    *(_QWORD *)(v21 + 56) = v33;
    v34 = objc_msgSend(v13, "heightAnchor");
    v35 = objc_msgSend(v14, "heightAnchor");
    v36 = objc_msgSend(v34, "constraintEqualToAnchor:multiplier:", v35, 1.0);

    *(_QWORD *)(v21 + 64) = v36;
    v37 = objc_msgSend(v14, "leadingAnchor");
    v38 = objc_msgSend(v13, "trailingAnchor");
    v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, 4.0);

    *(_QWORD *)(v21 + 72) = v39;
    v40 = objc_msgSend(v14, "topAnchor");
    v41 = objc_msgSend(v12, "topAnchor");
    v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

    *(_QWORD *)(v21 + 80) = v42;
    v43 = objc_msgSend(v14, "bottomAnchor");
    v44 = objc_msgSend(v12, "bottomAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v21 + 88) = v45;
    v46 = objc_msgSend(v6, "leadingAnchor");
    v47 = v14;
    v48 = v0;
    v49 = objc_msgSend(v47, "trailingAnchor");
    v50 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v49, 3.0);

    *(_QWORD *)(v21 + 96) = v50;
    v51 = objc_msgSend(v6, "trailingAnchor");
    v52 = objc_msgSend(v12, "trailingAnchor");
    v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

    *(_QWORD *)(v21 + 104) = v53;
    v54 = objc_msgSend(v6, "centerYAnchor");
    v55 = objc_msgSend(v12, "centerYAnchor");
    v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

    *(_QWORD *)(v21 + 112) = v56;
    v57 = objc_msgSend(v9, "topAnchor");
    v58 = objc_msgSend(v0, "topAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

    *(_QWORD *)(v21 + 120) = v59;
    v60 = objc_msgSend(v9, "leadingAnchor");
    v61 = objc_msgSend(v0, "leadingAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v21 + 128) = v62;
    v63 = objc_msgSend(v9, "bottomAnchor");
    v64 = objc_msgSend(v0, "bottomAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(v21 + 136) = v65;
    v66 = objc_msgSend(v9, "trailingAnchor");
    v67 = objc_msgSend(v48, "trailingAnchor");
    v68 = objc_msgSend(v66, "constraintLessThanOrEqualToAnchor:", v67);

    *(_QWORD *)(v21 + 144) = v68;
    specialized Array._endMutation()(v69);
    v70 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v75, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

    v72 = (Class)(id)DOCConstraintsToResizeWithSuperview(v12, 4.0, 4.0, 4.0, 4.0);
    if (!v72)
    {
      v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v70);
      v72 = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v73 = swift_bridgeObjectRelease(v74).n128_u64[0];
    }
    objc_msgSend(v75, "activateConstraints:", v72, v73);

    objc_msgSend(v48, "setContextMenuInteractionEnabled:", 1);
  }
  else
  {
    __break(1u);
  }
}

void *sub_10028CEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (!Strong)
    return 0;
  v5 = (void *)Strong;
  v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu);
  v7 = v6;

  return v6;
}

id sub_10028CFA4(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCAttributionPillView);
}

uint64_t type metadata accessor for DOCAttributionPillView()
{
  return objc_opt_self(_TtC5Files22DOCAttributionPillView);
}

uint64_t sub_10028D08C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 168) = a7;
  *(_QWORD *)(v8 + 176) = a8;
  *(_BYTE *)(v8 + 208) = a6;
  *(double *)(v8 + 160) = a1;
  *(_QWORD *)(v8 + 152) = a5;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 184) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 192) = v10;
  *(_QWORD *)(v8 + 200) = v11;
  return swift_task_switch(sub_10028D104, v10, v11);
}

uint64_t sub_10028D104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 16;
  v2 = *(unsigned __int8 *)(v0 + 208);
  v3 = *(double *)(v0 + 160);
  v4 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10028D1B0;
  v5 = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_10028D52C;
  v6[3] = &unk_1005D79D8;
  v6[4] = v5;
  objc_msgSend(v4, "fetchThumbnailImagesWithScale:isRTL:completion:", v2, v6, v3);
  return swift_continuation_await(v1);
}

uint64_t sub_10028D1B0()
{
  uint64_t v0;

  return swift_task_switch(sub_10028D1F4, *(_QWORD *)(*(_QWORD *)v0 + 192), *(_QWORD *)(*(_QWORD *)v0 + 200));
}

uint64_t sub_10028D1F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  swift_release(*(_QWORD *)(v0 + 184));
  v2 = *(_QWORD **)(v0 + 128);
  if (!v2)
    goto LABEL_8;
  if (!v2[2])
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
LABEL_8:
    v16 = *(void **)(v0 + 168);
    v17 = *(id *)DOCLog.UI.unsafeMutableAddressor(v1);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = sub_10006922C((uint64_t *)&unk_100644560);
    v20 = swift_allocObject(v19, 72, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
    v21 = v16;
    v22 = objc_msgSend(v21, "description");
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    *(_QWORD *)(v20 + 56) = &type metadata for String;
    *(_QWORD *)(v20 + 64) = sub_10006A638();
    *(_QWORD *)(v20 + 32) = v23;
    *(_QWORD *)(v20 + 40) = v25;
    os_log(_:dso:log:type:_:)("Could not fetch avatar from Synapse for sender %@", 49, 2, &_mh_execute_header, v17, v18, v20);
    swift_bridgeObjectRelease(v20);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v2[4];
  v4 = v2[5];
  sub_10012F5E0(v3, v4);
  swift_bridgeObjectRelease(v2);
  v5 = objc_allocWithZone((Class)UIImage);
  sub_10012F5E0(v3, v4);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithData:", isa);
  sub_1000D4C00(v3, v4);

  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 176) + 16;
    swift_beginAccess(v9, v0 + 128, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v11 = (void *)Strong;
      v12 = swift_allocObject(&unk_1005D7A00, 32, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_QWORD *)(v12 + 24) = v7;
      *(_QWORD *)(v0 + 112) = sub_10028D978;
      *(_QWORD *)(v0 + 120) = v12;
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 88) = 1107296256;
      *(_QWORD *)(v0 + 96) = sub_10004A82C;
      *(_QWORD *)(v0 + 104) = &unk_1005D7A18;
      v13 = _Block_copy((const void *)(v0 + 80));
      v14 = *(_QWORD *)(v0 + 120);
      v15 = v11;
      v7 = v7;
      swift_release(v14);
      DOCRunInMainThread(v13);
      _Block_release(v13);

    }
  }
  else
  {
    v26 = *(void **)(v0 + 168);
    v27 = *(id *)DOCLog.UI.unsafeMutableAddressor(v8);
    v28 = static os_log_type_t.error.getter(v27);
    v29 = sub_10006922C((uint64_t *)&unk_100644560);
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_1004D9670;
    v31 = v26;
    v32 = objc_msgSend(v31, "description");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = sub_10006A638();
    *(_QWORD *)(v30 + 32) = v33;
    *(_QWORD *)(v30 + 40) = v35;
    os_log(_:dso:log:type:_:)("Could not decode avatar data from Synapse for sender %@", 55, 2, &_mh_execute_header, v27, v28, v30);
    swift_bridgeObjectRelease(v30);

  }
  sub_1000D4C00(v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028D52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for Data);
  else
    v3 = 0;
  v5 = v3;
  sub_100070EDC((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40), &qword_10064B350);
  return swift_continuation_resume(v2);
}

void sub_10028D594()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = &v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_senderName];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu] = 0;
  v2 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_backgroundView;
  v3 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 8);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v3);

  *(_QWORD *)&v0[v2] = v4;
  v5 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_containerView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_imageView;
  v7 = type metadata accessor for RoundImageView();
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7)), "init");
  v8 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_textLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_chevronView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___baseFont] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___senderFont] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCAttributionPillView____lazy_storage___chevronFont] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x726F707075736E75, 0xEB00000000646574, "Files/DOCAttributionPillView.swift", 34, 2, 84, 0);
  __break(1u);
}

id sub_10028D720()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v0 = swift_allocObject(&unk_1005D7920, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v6[4] = sub_10028D840;
  v7 = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1001B1644;
  v6[3] = &unk_1005D7938;
  v2 = _Block_copy(v6);
  v3 = v7;
  swift_retain_n(v0, 2);
  v4 = objc_msgSend(v1, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v2, swift_release(v3).n128_f64[0]);
  swift_release(v0);
  _Block_release(v2);
  swift_release(v0);
  return v4;
}

uint64_t sub_10028D81C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void *sub_10028D840(uint64_t a1)
{
  uint64_t v1;

  return sub_10028CEF4(a1, v1);
}

uint64_t sub_10028D848()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10028D86C()
{
  uint64_t v0;

  sub_10028C010(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_10028D878()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10028D8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(double *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc(dword_10064B344);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1000EA854;
  return sub_10028D08C(v7, a1, v4, v5, v6, v8, v10, v9);
}

uint64_t sub_10028D94C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10028D978()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files22DOCAttributionPillView_imageView), "setImage:", *(_QWORD *)(v0 + 24));
}

void sub_10028D994()
{
  AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter();
  __break(1u);
}

unint64_t sub_10028D9B0()
{
  unint64_t result;

  result = qword_10064B3A0;
  if (!qword_10064B3A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute, &type metadata for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute);
    atomic_store(result, (unint64_t *)&qword_10064B3A0);
  }
  return result;
}

void sub_10028D9F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10028D9B0();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10028DA18()
{
  return 8;
}

uint64_t sub_10028DA24(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10028DA2C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10028DA3C()
{
  uint64_t v0;

  v0 = sub_10006922C((uint64_t *)&unk_10064B3B0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_10028DA80(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10028DA98()
{
  return 8;
}

char *DOCCopyOperation.__allocating_init(urls:destinationFolder:undoManager:)(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return DOCCopyOperation.init(urls:destinationFolder:undoManager:)(a1, a2, a3);
}

uint64_t (*sub_10028DB10(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t (*sub_10028DB54(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *DOCCopyOperation.init(urls:destinationFolder:undoManager:)(uint64_t a1, void *a2, void *a3)
{
  _BYTE *v3;
  id v7;
  id v8;
  Class isa;
  char *v10;
  void *v11;
  char *v12;
  objc_super v14;

  v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_allowDSCopyEngine] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsTransferResults] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsItemIDToPlaceholderID] = 0;
  v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_engineTypeUsed] = 0;
  v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager] = a3;
  type metadata accessor for URL(0);
  v7 = a2;
  v8 = a3;
  swift_bridgeObjectRetain(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCCopyOperation();
  v10 = (char *)objc_msgSendSuper2(&v14, "initWithURLs:destinationFolder:", isa, v7);

  v11 = *(void **)&v10[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager];
  v12 = v10;
  objc_msgSend(v11, "registerUndoOperationForSender:", v12);

  return v12;
}

uint64_t type metadata accessor for DOCCopyOperation()
{
  return objc_opt_self(_TtC5Files16DOCCopyOperation);
}

char *DOCCopyOperation.__allocating_init(items:destinationFolder:isDuplication:undoManager:)(uint64_t a1, void *a2, char a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(a1, a2, a3, a4);
}

char *DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(uint64_t a1, void *a2, char a3, void *a4)
{
  _BYTE *v4;
  uint64_t v8;
  id v9;
  id v10;
  Class isa;
  char *v12;
  void *v13;
  char *v14;
  objc_super v16;

  v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_allowDSCopyEngine] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsTransferResults] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsItemIDToPlaceholderID] = 0;
  v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_engineTypeUsed] = 0;
  v8 = OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication;
  v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem] = a2;
  v4[v8] = a3;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager] = a4;
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  swift_bridgeObjectRetain(a1);
  v9 = a2;
  v10 = a4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for DOCCopyOperation();
  v12 = (char *)objc_msgSendSuper2(&v16, "initWithItems:destinationFolder:", isa, v9);

  v13 = *(void **)&v12[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager];
  v14 = v12;
  objc_msgSend(v13, "registerUndoOperationForSender:", v14);

  return v14;
}

Swift::Void __swiftcall DOCCopyOperation.presendNotifications()()
{
  void *v0;
  objc_super v1;

  if (!DOCCopyOperation.handlePresendNotifications_asDSCopy()())
  {
    v1.receiver = v0;
    v1.super_class = (Class)type metadata accessor for DOCCopyOperation();
    objc_msgSendSuper2(&v1, "presendNotifications");
  }
}

Swift::Void __swiftcall DOCCopyOperation.actionMain()()
{
  void *v0;
  uint64_t *v1;
  objc_super v2;
  __int128 v3;
  uint64_t v4;
  _QWORD v5[5];

  sub_1002D7C1C((uint64_t)&v3);
  if (v4)
  {
    sub_1000E85C4(&v3, (uint64_t)v5);
    v1 = sub_10007E7A0(v5, v5[3]);
    sub_100291584(*v1, (uint64_t)v0);
    sub_100068588(v5);
  }
  else
  {
    sub_10000CB4C((uint64_t)&v3, (uint64_t *)&unk_10064B420);
    v2.receiver = v0;
    v2.super_class = (Class)type metadata accessor for DOCCopyOperation();
    objc_msgSendSuper2(&v2, "actionMain");
  }
}

void DOCCopyOperation.actionNameForUndoing.getter(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs) + 16))
    sub_10028E894(a1);
  else
    sub_10028E348(a1);
}

char *DOCCopyOperation.operationForRedoing()()
{
  uint64_t v0;
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  id v6;

  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs) + 16))
    return 0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem);
  v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager);
  v6 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
  swift_bridgeObjectRetain(v2);
  return DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(v2, v3, v4, v5);
}

id DOCCopyOperation.operationForUndoing()()
{
  char *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  id v13;
  char *v14;

  result = objc_msgSend(v0, "transferResults");
  if (result)
  {
    v2 = result;
    v3 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, v3, &protocol witness table for AnyHashable);

    if (*(_QWORD *)(v4 + 16))
    {
      v5 = sub_100290034(v4, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_100290B7C);
      v6 = swift_bridgeObjectRelease(v4);
      if (*(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs] + 16))
      {
        v7 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager];
        v8 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation(0, v6));
        v9 = v7;
        v10 = v5;
        v11 = 0;
      }
      else
      {
        v12 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager];
        objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation(0, v6));
        v13 = v12;
        v14 = v0;
        v10 = v5;
        v11 = v0;
        v9 = v13;
      }
      return (id)DOCDeleteOperation.init(items:originalOperation:undoManager:)(v10, v11, v9);
    }
    else
    {
      swift_bridgeObjectRelease(v4);
      return 0;
    }
  }
  return result;
}

Swift::Void __swiftcall DOCCopyOperation.registerUndo()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyOperation_undoManager), "registerUndoOperationForSender:", v0);
}

void sub_10028E348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  id v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t countAndFlagsBits;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems);
    else
      v39 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems));
    v40 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v2);
    if (v40 >= 1)
    {
LABEL_3:
      v3 = (id)_DocumentManagerBundle(a1);
      if (v3)
      {
        v4 = v3;
        v5._countAndFlagsBits = 0x1000000000000026;
        v41._countAndFlagsBits = 0xD00000000000003ALL;
        v41._object = (void *)0x8000000100520D20;
        v5._object = (void *)0x8000000100520CD0;
        v6._object = (void *)0x8000000100520D00;
        v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v7.value._object = (void *)0xEB00000000656C62;
        v6._countAndFlagsBits = 0x1000000000000010;
        v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v7, (NSBundle)v4, v6, v41);

        v9._countAndFlagsBits = 0xD000000000000040;
        v10._object = (void *)0x8000000100520D60;
        v9._object = (void *)0x8000000100520D90;
        v10._countAndFlagsBits = 0xD000000000000027;
        v11 = DOCLocalizedDictionaryString(_:comment:)(v10, v9);
        object = v11._object;
        v13 = (id)_DocumentManagerBundle(v11._countAndFlagsBits);
        if (!v13)
        {
LABEL_38:
          __break(1u);
LABEL_39:
          swift_bridgeObjectRelease(v2);
          __break(1u);
          return;
        }
        v14 = v13;
        v15._countAndFlagsBits = 0x1000000000000015;
        v16._countAndFlagsBits = 0x100000000000002BLL;
        v42._countAndFlagsBits = 0xD00000000000003ELL;
        v42._object = (void *)0x8000000100520E30;
        v16._object = (void *)0x8000000100520DE0;
        v15._object = (void *)0x8000000100520E10;
        v17.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v17.value._object = (void *)0xEB00000000656C62;
        v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v14, v15, v42);

        v19._countAndFlagsBits = 0xD00000000000002CLL;
        v20._countAndFlagsBits = 0xD000000000000044;
        v19._object = (void *)0x8000000100520E70;
        v20._object = (void *)0x8000000100520EA0;
        v21 = DOCLocalizedDictionaryString(_:comment:)(v19, v20);
        if ((unint64_t)v2 >> 62)
        {
          if (v2 < 0)
            v24 = v2;
          else
            v24 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v23 = _CocoaArrayWrapper.endIndex.getter(v24);
          swift_bridgeObjectRelease(v2);
          swift_bridgeObjectRetain(v2);
          v22 = _CocoaArrayWrapper.endIndex.getter(v24);
        }
        else
        {
          v22 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v2);
          v23 = v22;
        }
        if (!v22)
          goto LABEL_39;
        if ((v2 & 0xC000000000000001) != 0)
        {
          countAndFlagsBits = v8._countAndFlagsBits;
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
LABEL_15:
          v27 = v26;
          v28 = objc_msgSend(v26, "displayName", swift_bridgeObjectRelease(v2).n128_f64[0]);

          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          v31 = v30;

          v32 = OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication;
          if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication) == 1)
          {
            if (v23 == 1)
            {
              swift_bridgeObjectRelease(v21._object);
              swift_bridgeObjectRelease(v11._object);
              swift_bridgeObjectRelease(v8._object);
              v35 = sub_10006922C((uint64_t *)&unk_100644560);
              v34 = swift_allocObject(v35, 72, 7);
              *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
              *(_QWORD *)(v34 + 56) = &type metadata for String;
              *(_QWORD *)(v34 + 64) = sub_10006A638();
              *(_QWORD *)(v34 + 32) = v29;
              *(_QWORD *)(v34 + 40) = v31;
              static String.localizedStringWithFormat(_:_:)(v18._countAndFlagsBits, v18._object, v34);
              object = v18._object;
              goto LABEL_29;
            }
            swift_bridgeObjectRelease(v18._object);
            if ((*(_BYTE *)(v1 + v32) & 1) == 0)
            {
              swift_bridgeObjectRelease(v21._object);
LABEL_27:
              swift_bridgeObjectRelease(v31);
              swift_bridgeObjectRelease(v8._object);
              v38 = sub_10006922C((uint64_t *)&unk_100644560);
              v34 = swift_allocObject(v38, 72, 7);
              *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
              *(_QWORD *)(v34 + 56) = &type metadata for Int;
              *(_QWORD *)(v34 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v34 + 32) = v23;
              v37 = v11._countAndFlagsBits;
              goto LABEL_28;
            }
LABEL_21:
            swift_bridgeObjectRelease(v31);
            swift_bridgeObjectRelease(v11._object);
            swift_bridgeObjectRelease(v8._object);
            v33 = sub_10006922C((uint64_t *)&unk_100644560);
            v34 = swift_allocObject(v33, 72, 7);
            *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
            *(_QWORD *)(v34 + 56) = &type metadata for Int;
            *(_QWORD *)(v34 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v34 + 32) = v23;
            static String.localizedStringWithFormat(_:_:)(v21._countAndFlagsBits, v21._object, v34);
            object = v21._object;
LABEL_29:
            swift_bridgeObjectRelease(object);
            swift_bridgeObjectRelease(v34);
            return;
          }
          swift_bridgeObjectRelease(v18._object);
          if ((*(_BYTE *)(v1 + v32) & 1) != 0)
          {
            if (v23 != 1)
              goto LABEL_21;
            swift_bridgeObjectRelease(v21._object);
            if ((*(_BYTE *)(v1 + v32) & 1) != 0)
              goto LABEL_27;
          }
          else
          {
            swift_bridgeObjectRelease(v21._object);
            if ((*(_BYTE *)(v1 + v32) & 1) != 0 || v23 != 1)
              goto LABEL_27;
          }
          swift_bridgeObjectRelease(v11._object);
          v36 = sub_10006922C((uint64_t *)&unk_100644560);
          v34 = swift_allocObject(v36, 72, 7);
          *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v34 + 56) = &type metadata for String;
          *(_QWORD *)(v34 + 64) = sub_10006A638();
          *(_QWORD *)(v34 + 32) = v29;
          *(_QWORD *)(v34 + 40) = v31;
          v37 = countAndFlagsBits;
          object = v8._object;
LABEL_28:
          static String.localizedStringWithFormat(_:_:)(v37, object, v34);
          goto LABEL_29;
        }
        if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          countAndFlagsBits = v8._countAndFlagsBits;
          v26 = *(id *)(v2 + 32);
          goto LABEL_15;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_38;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
    goto LABEL_3;
  }
}

id sub_10028E894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  void *object;
  Swift::String v18;
  Swift::String v19;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v4 = result;
    v18._countAndFlagsBits = 0xD00000000000003DLL;
    v18._object = (void *)0x8000000100520C20;
    v5._object = (void *)0x8000000100520C00;
    v5._countAndFlagsBits = 0xD00000000000001ELL;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0x656C69462077654ELL;
    v7._object = (void *)0xE800000000000000;
    v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v18);
    countAndFlagsBits = v8._countAndFlagsBits;

    result = (id)_DocumentManagerBundle(v10);
    if (result)
    {
      v11 = result;
      v12._countAndFlagsBits = 0xD00000000000001FLL;
      v19._countAndFlagsBits = 0xD000000000000045;
      v19._object = (void *)0x8000000100520C80;
      v12._object = (void *)0x8000000100520C60;
      v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13.value._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 0x656C69462077654ELL;
      v14._object = (void *)0xE900000000000073;
      v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v19);

      v16 = *(_QWORD *)(v2 + 16);
      if (v16 == 1)
        object = v15._object;
      else
        object = v8._object;
      if (v16 != 1)
        countAndFlagsBits = v15._countAndFlagsBits;
      swift_bridgeObjectRelease(object);
      return (id)countAndFlagsBits;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id DOCCopyOperation.__allocating_init(items:destinationFolder:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithItems:destinationFolder:", isa, a2, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v7;
}

void DOCCopyOperation.init(items:destinationFolder:)(uint64_t a1, uint64_t a2)
{
  sub_10028EDDC(a1, a2, (uint64_t)"init(items:destinationFolder:)", 30);
}

id DOCCopyOperation.__allocating_init(urls:destinationFolder:)(uint64_t a1, void *a2)
{
  return sub_10028EAE4(a1, a2, (SEL *)&selRef_initWithURLs_destinationFolder_);
}

id sub_10028EAE4(uint64_t a1, void *a2, SEL *a3)
{
  objc_class *v3;
  id v7;
  Class isa;
  id v9;

  v7 = objc_allocWithZone(v3);
  type metadata accessor for URL(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9 = objc_msgSend(v7, *a3, isa, a2);

  return v9;
}

void DOCCopyOperation.init(urls:destinationFolder:)(uint64_t a1, uint64_t a2)
{
  sub_10028EDDC(a1, a2, (uint64_t)"init(urls:destinationFolder:)", 29);
}

id DOCCopyOperation.__allocating_init(items:destinationURL:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  NSURL *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = objc_allocWithZone(v2);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  URL._bridgeToObjectiveC()(v7);
  v9 = v8;
  v10 = objc_msgSend(v5, "initWithItems:destinationURL:", isa, v8);

  v11 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a2, v11);
  return v10;
}

void DOCCopyOperation.init(items:destinationURL:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCCopyOperation", 22, "init(items:destinationURL:)", 27, 0);
  __break(1u);
}

id DOCCopyOperation.__allocating_init(sourceURLs:destinationFolder:)(uint64_t a1, void *a2)
{
  return sub_10028EAE4(a1, a2, (SEL *)&selRef_initWithSourceURLs_destinationFolder_);
}

void DOCCopyOperation.init(sourceURLs:destinationFolder:)(uint64_t a1, uint64_t a2)
{
  sub_10028EDDC(a1, a2, (uint64_t)"init(sourceURLs:destinationFolder:)", 35);
}

id DOCCopyOperation.__allocating_init(sourceURLsAndNames:destinationFolder:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  type metadata accessor for URL(0);
  sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithSourceURLsAndNames:destinationFolder:", isa, a2, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v7;
}

void DOCCopyOperation.init(sourceURLsAndNames:destinationFolder:)(uint64_t a1, uint64_t a2)
{
  sub_10028EDDC(a1, a2, (uint64_t)"init(sourceURLsAndNames:destinationFolder:)", 43);
}

void sub_10028EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCCopyOperation", 22, a3, a4, 0);
  __break(1u);
}

void sub_10028EE0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCCopyOperation", 22, a5, a6, 0);
  __break(1u);
}

id DOCCopyOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCopyOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_10028EF0C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v1 = sub_100290120((uint64_t)&v9, (uint64_t)(v4 + 4), v2, v1);
    swift_bridgeObjectRelease(v9);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v7 = v1;
    else
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_10028F010(uint64_t a1)
{
  return sub_10028FAA8(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_100142C4C);
}

_QWORD *sub_10028F01C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10028F744(a1, a2, a3, a4, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
}

_QWORD *sub_10028F030(uint64_t a1)
{
  return sub_10028FAA8(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_100142C70);
}

_QWORD *sub_10028F03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C(&qword_10064B480);
  v4 = *(_QWORD *)(sub_10006922C(&qword_100644B40) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_10006922C(&qword_100644B40) - 8) + 80);
      v12 = sub_100290284(&v14, (uint64_t)v8 + ((v11 + 32) & ~v11), v1, a1);
      v13 = v14;
      swift_bridgeObjectRetain(a1);
      sub_10021C590(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10028F174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C((uint64_t *)&unk_10064B470);
  v4 = (_QWORD *)swift_allocObject(v3, 32 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 1;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 5);
  v7 = sub_1002905B8(&v10, (uint64_t)(v4 + 4), v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10021C590(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t *sub_10028F258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C(&qword_100644B10);
  v4 = (uint64_t *)swift_allocObject(v3, 24 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 24);
  v6 = sub_100290768((uint64_t)&v9, v4 + 4, v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain(a1);
  sub_10021C590(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_10028F34C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    sub_10006922C((uint64_t *)&unk_1006424B0);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10028F4D0(uint64_t a1)
{
  return sub_10028FAA8(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_100142E8C);
}

_QWORD *sub_10028F4DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C(&qword_100643CC0);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_100290980((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10021C590(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_10028F5C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 16 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_10006922C(&qword_100644A30);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 17;
  v10[2] = v5;
  v10[3] = 2 * (v12 >> 4);
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = v10 + 4;
  v14 = a2 + 16 * a3;
  if (v14 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)v13 >= v14 + v8)
  {
    swift_arrayInitWithCopy(v13);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10028F730(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10028F744(a1, a2, a3, a4, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

_QWORD *sub_10028F744(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v7)
    return _swiftEmptyArrayStorage;
  v12 = 8 * v7;
  if (v7 <= 0)
  {
    v14 = _swiftEmptyArrayStorage;
    if (v6 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v14 = (_QWORD *)swift_allocObject(v13, v12 + 32, 7);
  v15 = j__malloc_size(v14);
  v16 = v15 - 32;
  if (v15 < 32)
    v16 = v15 - 25;
  v14[2] = v7;
  v14[3] = (2 * (v16 >> 3)) | 1;
  if (v6 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v7 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v17 = a2 + 8 * a3;
  if (v17 >= (unint64_t)&v14[(unint64_t)v12 / 8 + 4] || (unint64_t)(v14 + 4) >= v17 + v12)
  {
    sub_10004F2F0(0, a5, a6);
    swift_arrayInitWithCopy(v14 + 4);
    return v14;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10028F8DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10028F744(a1, a2, a3, a4, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
}

_QWORD *sub_10028F8F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10028F744(a1, a2, a3, a4, (unint64_t *)&qword_1006419B0, FPItem_ptr);
}

_QWORD *sub_10028F904(uint64_t a1)
{
  return sub_100290034(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_100290B7C);
}

_QWORD *sub_10028F910(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  size_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_16;
  if (!v5)
    return _swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = sub_10006922C(&qword_100644CD0);
    v9 = (_QWORD *)swift_allocObject(v8, 48 * v5 + 32, 7);
    v10 = j__malloc_size(v9);
    v9[2] = v5;
    v9[3] = 2 * ((uint64_t)(v10 - 32) / 48);
    if (v4 != a3)
      goto LABEL_5;
    goto LABEL_15;
  }
  v9 = _swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  if (v5 < 0)
  {
LABEL_17:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_18;
  }
  v11 = (unint64_t)(v9 + 4);
  v12 = a2 + 48 * a3;
  if (v12 >= (unint64_t)&v9[6 * v5 + 4] || v11 >= v12 + 48 * v5)
  {
    swift_arrayInitWithCopy(v11);
    return v9;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_10028FA9C(uint64_t a1)
{
  return sub_10028FAA8(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

_QWORD *sub_10028FAA8(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

_QWORD *sub_10028FBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C((uint64_t *)&unk_100644550);
  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      swift_bridgeObjectRetain(a1);
      sub_100290D74(&v13, (char *)v8 + v7, v1, a1);
      v12 = v11;
      sub_10021C590(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10028FCA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    type metadata accessor for DOCGoToRecentLocation();
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10028FE20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10006922C((uint64_t *)&unk_10064B460);
  v4 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = sub_1002910C4(&v13, (uint64_t)v8 + v7, v1, a1);
      v12 = v13;
      swift_bridgeObjectRetain(a1);
      sub_10021C590(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10028FF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t **v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12[4];

  v3 = a1 - a2;
  if (__OFSUB__(a1, a2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  if (v3)
  {
    if (v3 <= 0)
    {
      v8 = (uint64_t **)_swiftEmptyArrayStorage;
    }
    else
    {
      v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v8 = (uint64_t **)swift_allocObject(v7, 8 * v3 + 32, 7);
      v9 = j__malloc_size(v8);
      v10 = v9 - 32;
      if (v9 < 32)
        v10 = v9 - 25;
      v8[2] = (uint64_t *)v3;
      v8[3] = (uint64_t *)((2 * (v10 >> 3)) | 1);
    }
    swift_bridgeObjectRetain(a3);
    v11 = sub_100292068(v12, v8 + 4, v3, a1, a2, a3);
    swift_bridgeObjectRelease(v12[2]);
    if (v11 != (uint64_t *)v3)
      goto LABEL_12;
  }
}

_QWORD *sub_100290028(uint64_t a1)
{
  return sub_100290034(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_10029138C);
}

_QWORD *sub_100290034(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v6 = (_QWORD *)swift_allocObject(v5, 8 * v2 + 32, 7);
  v7 = j__malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 25;
  v6[2] = v2;
  v6[3] = (2 * (v8 >> 3)) | 1;
  v9 = a2(&v12, v6 + 4, v2, a1);
  v10 = v12;
  swift_bridgeObjectRetain(a1);
  sub_10021C590(v10);
  if (v9 != v2)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t sub_100290120(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;

  v7 = (_QWORD *)result;
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v16 = a4;
    else
      v16 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a4);
    if (!a2)
      goto LABEL_29;
  }
  else
  {
    v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!a2)
      goto LABEL_29;
  }
  if (!a3)
  {
LABEL_30:
    *v7 = a4;
    v7[1] = v8;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (!v8)
  {
LABEL_29:
    a3 = 0;
    goto LABEL_30;
  }
  if ((a4 & 0xC000000000000001) != 0)
  {
    v9 = __OFSUB__(v8--, 1);
    if (!v9)
    {
      v10 = 0;
      do
      {
        result = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a4);
        *(_QWORD *)(a2 + 8 * v10) = result;
        if (a3 - 1 == v10)
          goto LABEL_30;
        if (!v8)
        {
          a3 = v10 + 1;
          goto LABEL_30;
        }
        ++v10;
        v9 = __OFSUB__(v8--, 1);
      }
      while (!v9);
    }
    __break(1u);
  }
  v11 = (void *)(v8 - 1);
  if (!__OFSUB__(v8, 1))
  {
    v12 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v11 >= v12)
    {
LABEL_20:
      __break(1u);
    }
    else
    {
      v13 = 0;
      while (1)
      {
        v11 = *(void **)(a4 + 24 + 8 * v8);
        *(_QWORD *)(a2 + 8 * v13) = v11;
        if (a3 - 1 == v13)
          break;
        if (v8 == 1)
        {
          v8 = 0;
          a3 = v13 + 1;
          goto LABEL_22;
        }
        v14 = v11;
        v11 = (void *)(v8 - 2);
        ++v13;
        --v8;
        if ((unint64_t)v11 >= v12)
          goto LABEL_20;
      }
    }
    --v8;
LABEL_22:
    v15 = v11;
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100290284(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = sub_10006922C(&qword_100644B40);
  v40 = *(_QWORD *)(v42 - 8);
  v8 = __chkstk_darwin(v42);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v41 = (uint64_t)&v34 - v12;
  v43 = a4;
  v15 = *(_QWORD *)(a4 + 64);
  v14 = a4 + 64;
  v13 = v15;
  v38 = v14;
  v16 = -1 << *(_BYTE *)(v14 - 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v13;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v33 = v38;
    *a1 = v43;
    a1[1] = v33;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v35 = -1 << *(_BYTE *)(v14 - 32);
  v36 = a1;
  v19 = 0;
  v20 = 0;
  v37 = (unint64_t)(63 - v16) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    v26 = *(_QWORD *)(v43 + 56);
    v27 = *(_QWORD *)(v43 + 48) + 24 * v22;
    v28 = *(_QWORD *)v27;
    v29 = *(_QWORD *)(v27 + 8);
    v30 = *(_BYTE *)(v27 + 16);
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(&v10[*(int *)(v42 + 48)], v26 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v22, v31);
    *(_QWORD *)v10 = v28;
    *((_QWORD *)v10 + 1) = v29;
    v10[16] = v30;
    v32 = v41;
    sub_100070EDC((uint64_t)v10, v41, &qword_100644B40);
    sub_100070EDC(v32, a2, &qword_100644B40);
    a3 = v39;
    if (v20 == v39)
    {
      sub_100292218(v28, v29, v30);
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v40 + 72);
    result = sub_100292218(v28, v29, v30);
    if (v18)
      goto LABEL_8;
LABEL_9:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v23 >= v37)
      goto LABEL_33;
    v24 = *(_QWORD *)(v38 + 8 * v23);
    if (!v24)
    {
      v19 += 2;
      if (v23 + 1 >= v37)
      {
        v18 = 0;
        v19 = v23;
      }
      else
      {
        v24 = *(_QWORD *)(v38 + 8 * v19);
        if (v24)
          goto LABEL_14;
        v25 = v23 + 2;
        if (v23 + 2 >= v37)
          goto LABEL_33;
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (v24)
        {
LABEL_17:
          v23 = v25;
          goto LABEL_18;
        }
        v19 = v23 + 3;
        if (v23 + 3 < v37)
        {
          v24 = *(_QWORD *)(v38 + 8 * v19);
          if (v24)
          {
LABEL_14:
            v23 = v19;
            goto LABEL_18;
          }
          v25 = v23 + 4;
          if (v23 + 4 >= v37)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v24 = *(_QWORD *)(v38 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              v23 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_42;
              if (v23 >= v37)
              {
                v18 = 0;
                v19 = v34;
                goto LABEL_37;
              }
              v24 = *(_QWORD *)(v38 + 8 * v23);
              ++v25;
              if (v24)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v23 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v35;
      a1 = v36;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v19 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1002905B8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = *(_QWORD *)(a4 + 48) + 24 * v12;
    v14 = *(_BYTE *)(v13 + 16);
    v15 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v12);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_BYTE *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v15;
    a2 += 32;
    if (v9 == a3)
      goto LABEL_35;
  }
  v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v16 >= v10)
    goto LABEL_30;
  v17 = *(_QWORD *)(v4 + 8 * v16);
  if (v17)
    goto LABEL_19;
  v8 += 2;
  if (v16 + 1 >= v10)
  {
    v7 = 0;
    v8 = v16;
    goto LABEL_34;
  }
  v17 = *(_QWORD *)(v4 + 8 * v8);
  if (v17)
  {
LABEL_15:
    v16 = v8;
LABEL_19:
    v19 = __clz(__rbit64(v17));
    v7 = (v17 - 1) & v17;
    v12 = v19 + (v16 << 6);
    v8 = v16;
    goto LABEL_8;
  }
  v18 = v16 + 2;
  if (v16 + 2 >= v10)
    goto LABEL_30;
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v16 = v18;
    goto LABEL_19;
  }
  v8 = v16 + 3;
  if (v16 + 3 >= v10)
  {
    v7 = 0;
    v8 = v16 + 2;
    goto LABEL_34;
  }
  v17 = *(_QWORD *)(v4 + 8 * v8);
  if (v17)
    goto LABEL_15;
  v18 = v16 + 4;
  if (v16 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
    goto LABEL_18;
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100290768(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v22;
    v11[2] = v23;
    if (v13 == v10)
    {
      sub_100292204(v21, v22);
      swift_unknownObjectRetain(v23);
      goto LABEL_38;
    }
    v11 += 3;
    sub_100292204(v21, v22);
    result = swift_unknownObjectRetain(v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100290980(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_100290B7C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_100290D74(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v41 = *(_QWORD *)(v11 - 8);
  v12.n128_f64[0] = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_10000CB4C((uint64_t)v10, &qword_100643470);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_1002910C4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10029138C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      swift_retain(v20);
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain(v20);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100291584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, _QWORD *);
  int v36;
  dispatch_semaphore_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  NSObject *v43;
  id v44;
  _QWORD *v45;
  double v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  void *v75;
  NSObject *v76;
  uint64_t v77;
  int v78;
  _QWORD *v79;
  uint64_t v80;
  void *v81;
  __n128 v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  NSObject *v97;
  uint64_t v98;
  uint64_t v99;
  char v100[24];
  _QWORD v101[3];
  char v102[24];
  _BYTE v103[24];
  _QWORD aBlock[5];
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _UNKNOWN **v108;

  v92 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v92);
  v93 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  v91 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v90 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)type metadata accessor for URL(0);
  v96 = *(v8 - 1);
  __chkstk_darwin(v8);
  v94 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v98 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v85 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v85 - v16;
  v107 = type metadata accessor for DOCDSCopyEngineXPCConnection();
  v108 = &off_1005DAE48;
  v106 = a1;
  swift_retain();
  v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
  v20 = static os_log_type_t.debug.getter(v19);
  v21 = sub_10006922C((uint64_t *)&unk_100644560);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10006A638();
  *(_QWORD *)(v22 + 32) = 0xD000000000000018;
  *(_QWORD *)(v22 + 40) = 0x8000000100520F20;
  os_log(_:dso:log:type:_:)("%@: Running DesktopServices copy", 32, 2, &_mh_execute_header, v19, v20, v22);

  v23 = v22;
  v24 = a2;
  swift_bridgeObjectRelease(v23);
  v25 = *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem);
  v26 = *(NSObject **)(a2 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceURLs);
  v27 = swift_allocObject(&unk_1005D7B40, 24, 7);
  v99 = v27;
  *(_QWORD *)(v27 + 16) = 0;
  v95 = (_QWORD *)(v27 + 16);
  v97 = v26;
  swift_bridgeObjectRetain(v26);
  v28 = objc_msgSend(v25, "fileURL");
  if (v28)
  {
    v29 = v28;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  v31 = v96;
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v96 + 56))(v17, v30, 1, v8);
  v32 = swift_allocBox(v10);
  v34 = v33;
  sub_100070EDC((uint64_t)v17, v33, &qword_100643470);
  sub_1002320B8(v34, (uint64_t)v14);
  v35 = *(uint64_t (**)(char *, uint64_t, _QWORD *))(v31 + 48);
  v36 = v35(v14, 1, v8);
  sub_10000CB4C((uint64_t)v14, &qword_100643470);
  if (v36 == 1)
  {
    v37 = dispatch_semaphore_create(0);
    v87 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v38 = (_QWORD *)swift_allocObject(&unk_1005D7B68, 48, 7);
    v38[2] = v37;
    v38[3] = v25;
    v38[4] = v99;
    v38[5] = v32;
    aBlock[4] = sub_100292290;
    v105 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100175118;
    aBlock[3] = &unk_1005D7B80;
    v39 = _Block_copy(aBlock);
    v40 = v24;
    v41 = v8;
    v42 = v105;
    v43 = v37;
    v44 = v25;
    swift_retain();
    swift_retain();
    v45 = v42;
    v8 = v41;
    v24 = v40;
    *(_QWORD *)&v46 = swift_release(v45).n128_u64[0];
    v47 = v87;
    objc_msgSend(v87, "fetchURLForItem:completionHandler:", v44, v39, v46);
    _Block_release(v39);

    OS_dispatch_semaphore.wait()();
  }
  swift_beginAccess(v34, aBlock, 0, 0);
  v48 = v98;
  sub_1002320B8(v34, v98);
  if (v35((char *)v48, 1, v8) == 1)
  {
    swift_bridgeObjectRelease(v97);
    sub_10000CB4C(v48, &qword_100643470);
    v49 = v95;
    swift_beginAccess(v95, v103, 0, 0);
    v50 = *v49;
    if (*v49)
    {
      swift_errorRetain(*v49);
      v51 = (void *)_convertErrorToNSError(_:)(v50);
      swift_errorRelease(v50);
    }
    else
    {
      v51 = 0;
    }
    objc_msgSend((id)v24, "completedWithResult:error:", 0, v51);
    swift_release(v99);
    swift_release(v32);

  }
  else
  {
    v52 = v94;
    (*(void (**)(char *, uint64_t, _QWORD *))(v96 + 32))(v94, v48, v8);
    v53 = sub_1003F2428((uint64_t)_swiftEmptyArrayStorage);
    v54 = (unint64_t *)(v24 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL);
    swift_beginAccess(v24 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL, v103, 1, 0);
    v55 = *v54;
    *v54 = v53;
    swift_bridgeObjectRelease(v55);
    v56 = sub_1003F25C0((uint64_t)_swiftEmptyArrayStorage);
    v57 = (unint64_t *)(v24 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem);
    swift_beginAccess(v24 + OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem, v102, 1, 0);
    v58 = *v57;
    *v57 = v56;
    swift_bridgeObjectRelease(v58);
    v59 = swift_allocObject(&unk_1005D7BB8, 24, 7);
    v98 = v59;
    v60 = v97;
    *(_QWORD *)(v59 + 16) = v97;
    v61 = (uint64_t *)(v59 + 16);
    if (!v60[2].isa)
    {
      v87 = (id)(v59 + 16);
      v97 = dispatch_group_create();
      sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v62 = v90;
      v63 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v88 + 104))(v90, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v89);
      v64 = v91;
      static DispatchQoS.unspecified.getter(v63);
      v101[0] = _swiftEmptyArrayStorage;
      v65 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
      v66 = sub_10006922C((uint64_t *)&unk_100641280);
      v67 = sub_10016E444();
      v68 = v93;
      dispatch thunk of SetAlgebra.init<A>(_:)(v101, v66, v67, v92, v65);
      v69 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000038, 0x8000000100520F40, v64, v68, v62, 0);
      v70 = *(_QWORD *)(v24 + OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems);
      v86 = v32;
      if ((unint64_t)v70 >> 62)
        goto LABEL_32;
      v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v70);
      while (1)
      {
        v93 = (char *)v8;
        v72 = (void *)v24;
        if (!v71)
          break;
        v24 = 4;
        while (1)
        {
          v73 = (v70 & 0xC000000000000001) != 0
              ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v70)
              : *(id *)(v70 + 8 * v24);
          v8 = v73;
          v74 = v24 - 3;
          if (__OFADD__(v24 - 4, 1))
            break;
          v75 = objc_autoreleasePoolPush();
          sub_1002D903C(v8, v98, v72, v97, v99, v69);
          objc_autoreleasePoolPop(v75);

          ++v24;
          if (v74 == v71)
            goto LABEL_22;
        }
        __break(1u);
LABEL_32:
        if (v70 < 0)
          v84 = v70;
        else
          v84 = v70 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v70, 2);
        v71 = _CocoaArrayWrapper.endIndex.getter(v84);
        swift_bridgeObjectRelease(v70);
      }
LABEL_22:
      swift_bridgeObjectRelease(v70);
      v76 = v97;
      OS_dispatch_group.wait()();

      v24 = (uint64_t)v72;
      v8 = v93;
      v52 = v94;
      v32 = v86;
      v61 = (uint64_t *)v87;
    }
    swift_beginAccess(v61, v101, 0, 0);
    v77 = *v61;
    if (*(_QWORD *)(v77 + 16))
    {
      sub_10007E7A0(&v106, v107);
      v78 = swift_bridgeObjectRetain(v77);
      sub_1002D9A94(v78, (int)v52, (unsigned __int8 *)v24);
      v82 = swift_bridgeObjectRelease(v77);
    }
    else
    {
      v79 = v95;
      swift_beginAccess(v95, v100, 0, 0);
      v80 = *v79;
      if (*v79)
      {
        swift_errorRetain(*v79);
        v81 = (void *)_convertErrorToNSError(_:)(v80);
        swift_errorRelease(v80);
      }
      else
      {
        v81 = 0;
      }
      objc_msgSend((id)v24, "completedWithResult:error:", 0, v81);

    }
    (*(void (**)(char *, _QWORD *, __n128))(v96 + 8))(v52, v8, v82);
    swift_release(v99);
    swift_release(v32);
    swift_release(v98);
  }
  return sub_100068588(&v106);
}

uint64_t storeEnumTagSinglePayload for DOCCopyOperation.EngineType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100291FA0 + 4 * byte_1004DF9B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100291FD4 + 4 * byte_1004DF9B0[v4]))();
}

uint64_t sub_100291FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100291FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100291FE4);
  return result;
}

uint64_t sub_100291FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100291FF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100291FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100292004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCCopyOperation.EngineType()
{
  return &type metadata for DOCCopyOperation.EngineType;
}

unint64_t sub_100292024()
{
  unint64_t result;

  result = qword_10064B458;
  if (!qword_10064B458)
  {
    result = swift_getWitnessTable(&unk_1004DFA1C, &type metadata for DOCCopyOperation.EngineType);
    atomic_store(result, (unint64_t *)&qword_10064B458);
  }
  return result;
}

uint64_t *sub_100292068(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v11 = a4;
LABEL_7:
    *v10 = a4;
    v10[1] = a5;
    v10[2] = a6;
    v10[3] = v11;
    return (uint64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_24;
  if (a4 == a5)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  v14 = a4 - a5;
  v15 = a3;
  if (a4 <= a5)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    v11 = a4 + v6 - 1;
    a3 = v15;
    goto LABEL_7;
  }
  v12 = a2;
  v6 = 0;
  v16 = a6 + 8 * a4 + 24;
  v17 = a6 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    v13 = a4 + v6 - 1;
    if ((a6 & 0xC000000000000001) != 0)
    {
      result = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(a4 + v6 - 1, a6);
      goto LABEL_15;
    }
    if (a4 + v6 < 1)
      break;
    if ((unint64_t)v13 >= *(_QWORD *)(v17 + 16))
      goto LABEL_23;
    result = (uint64_t *)*(id *)(v16 + 8 * v6);
LABEL_15:
    *v12 = result;
    if (!(v15 - 1 + v6))
      goto LABEL_20;
    if (!(v14 - 1 + v6))
    {
      v11 = a5;
      a3 = v14;
      goto LABEL_7;
    }
    if (v13 <= a4)
    {
      ++v12;
      --v6;
      if (v13 > a5)
        continue;
    }
    goto LABEL_19;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

unint64_t sub_1002921AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006419E0;
  if (!qword_1006419E0)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&unk_100641970, FINode_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1006419E0);
  }
  return result;
}

uint64_t sub_100292204(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100292218(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100292230()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100292254()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

Swift::Int sub_100292290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002D8CF0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10029229C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_1002922C0(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_preferredIconColor] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties];
  v4 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___progressIndicatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___errorImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___finishedImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___mainContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView(0);
  swift_retain();
  v5 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100292810();

  swift_release(a1);
  return v5;
}

void sub_1002923B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_preferredIconColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_preferredIconColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_preferredIconColor) = a1;
  v12 = a1;
  if (!a1)
  {
    if (!v5)
    {
      v6 = 0;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!v5
    || (sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr),
        v6 = v5,
        v7 = v12,
        v8 = static NSObject.== infix(_:_:)(v7, v6),
        v7,
        v6,
        (v8 & 1) == 0))
  {
LABEL_6:
    v7 = sub_100292A8C();
    v9 = type metadata accessor for DOCProgressCollectionIndicatorPresenterView();
    if (swift_dynamicCastClass(v7, v9))
    {
      v10 = *(void **)(v2 + v4);
      v11 = v10;
      sub_100407BFC(v10);
    }

    v6 = v12;
  }
  v12 = v7;
LABEL_10:

}

id sub_1002924B4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  id result;
  char *v26;
  void *v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  char v34[24];

  v3 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = sub_10006922C(&qword_10064B4F8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = sub_10006922C(&qword_10064B500);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v1;
  v18 = (uint64_t)&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties], v34, 0, 0);
  v19 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_1002932C0(v18, (uint64_t)v17);
  sub_1002932C0(a1, v19);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v17, 1, v3) == 1)
  {
    if (v20(v19, 1, v3) == 1)
    {
      v21 = (uint64_t)v17;
      return (id)sub_10000CB4C(v21, &qword_10064B4F8);
    }
  }
  else
  {
    sub_1002932C0((uint64_t)v17, (uint64_t)v14);
    if (v20(v19, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v8, v19, v3);
      v22 = sub_100293308();
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v8, v3, v22);
      v24 = *(void (**)(char *, uint64_t))(v4 + 8);
      v24(v8, v3);
      v24(v14, v3);
      result = (id)sub_10000CB4C((uint64_t)v17, &qword_10064B4F8);
      if ((v23 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
  }
  sub_10000CB4C((uint64_t)v17, &qword_10064B500);
LABEL_8:
  sub_1002932C0(v18, (uint64_t)v11);
  if (v20((uint64_t)v11, 1, v3) == 1)
  {
    v21 = (uint64_t)v11;
    return (id)sub_10000CB4C(v21, &qword_10064B4F8);
  }
  v26 = v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v33, v11, v3);
  result = objc_msgSend(v32, "tintColor");
  if (result)
  {
    v27 = result;
    isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)result).super.isa;

    v29 = sub_100292C74();
    objc_msgSend(v29, "setTintColor:", isa);

    v30 = sub_100292C88();
    objc_msgSend(v30, "setTintColor:", isa);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002927EC(uint64_t a1, char a2)
{
  sub_100292E64(a2);
}

void sub_100292810()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = sub_100292DA4();
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004DAC10;
  v5 = sub_100292DA4();
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v0, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_100292DA4();
  v10 = objc_msgSend(v9, "trailingAnchor");

  v11 = objc_msgSend(v0, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = sub_100292DA4();
  v14 = objc_msgSend(v13, "topAnchor");

  v15 = objc_msgSend(v0, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 48) = v16;
  v17 = sub_100292DA4();
  v18 = objc_msgSend(v17, "bottomAnchor");

  v19 = objc_msgSend(v0, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v4 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_100292A8C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___progressIndicatorView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___progressIndicatorView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___progressIndicatorView];
  }
  else
  {
    v4 = sub_100292AEC(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100292AEC(char *a1)
{
  id v2;
  NSString v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  id result;
  id v13;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "BOOLForKey:", v3);

  if (v4)
  {
    if (qword_100640FD0 != -1)
      swift_once(&qword_100640FD0, sub_1003188B4);
    v5 = &qword_100672BD0;
  }
  else
  {
    v5 = (uint64_t *)(*(_QWORD *)&a1[OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel]
                   + 48);
  }
  v6 = *v5;
  v7 = objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection", swift_retain().n128_f64[0]);
  v8 = objc_msgSend(a1, "traitCollection");
  v9 = objc_msgSend(v8, "sourceOutlineStyle");

  if (v9 != (id)1)
  {
    if (v9)
    {
      v13 = v9;
      result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCSourceOutlineStyle, &v13, &type metadata for DOCSourceOutlineStyle, &type metadata for Int);
      __break(1u);
      return result;
    }
    LODWORD(v9) = 257;
  }
  if (v7)
    v10 = 8;
  else
    v10 = 4;
  v11 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorPresenterView());
  return sub_100293350((int)v9, v6, v10, v11);
}

id sub_100292C74()
{
  return sub_100292C9C(&OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___errorImageView, (SEL *)&selRef_iconForSyncError);
}

id sub_100292C88()
{
  return sub_100292C9C(&OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___finishedImageView, (SEL *)&selRef_iconForCompletedSync);
}

id sub_100292C9C(uint64_t *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = type metadata accessor for DOCSourceListInterface_Default();
    v8 = objc_msgSend((id)swift_initStaticObject(v7, &unk_100641248), *a2);
    v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleBody);
    v10 = objc_msgSend(v8, "imageWithConfiguration:", v9);

    v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
    v12 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v11;
    v5 = v11;

    v4 = 0;
  }
  v13 = v4;
  return v5;
}

id sub_100292DA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___mainContainer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___mainContainer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___mainContainer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setDistribution:", 0);
    objc_msgSend(v4, "setAlignment:", 3);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_100292E64(char a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;

  v2 = sub_100292DA4();
  v3 = objc_msgSend(v2, "arrangedSubviews");

  v4 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v11 = v5;
    else
      v11 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v11);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    else
      v8 = *(id *)(v5 + 8 * v7 + 32);
    v9 = v8;
    ++v7;
    v10 = sub_100292DA4();
    objc_msgSend(v10, "removeArrangedSubview:", v9);

    objc_msgSend(v9, "removeFromSuperview");
  }
  while (v6 != v7);
LABEL_13:
  swift_bridgeObjectRelease_n(v5, 2);
  if (!a1)
  {
    v12 = sub_100292DA4();
    v13 = sub_100292C74();
LABEL_18:
    v14 = v13;
    objc_msgSend(v12, "addArrangedSubview:");

    return;
  }
  if (a1 != 1)
  {
    v12 = sub_100292DA4();
    v13 = sub_100292A8C();
    goto LABEL_18;
  }
}

void sub_100293054()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_preferredIconColor));
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties, &qword_10064B4F8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___progressIndicatorView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___errorImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___finishedImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView____lazy_storage___mainContainer));
}

id sub_1002930D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10029319C()
{
  return type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView(0);
}

uint64_t type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView(uint64_t a1)
{
  uint64_t result;

  result = qword_10064B4E0;
  if (!qword_10064B4E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCFileProviderSyncStateSidebarCellAccessoryItemView);
  return result;
}

void sub_1002931E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  sub_10029326C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = "\b";
    v4[4] = "\b";
    v4[5] = "\b";
    v4[6] = "\b";
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_10029326C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10064B4F0)
  {
    v2 = type metadata accessor for UIListContentConfiguration.ImageProperties(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10064B4F0);
  }
}

uint64_t sub_1002932C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_10064B4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100293308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064B508;
  if (!qword_10064B508)
  {
    v1 = type metadata accessor for UIListContentConfiguration.ImageProperties(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIListContentConfiguration.ImageProperties, v1);
    atomic_store(result, (unint64_t *)&qword_10064B508);
  }
  return result;
}

id sub_100293350(int a1, uint64_t a2, uint64_t a3, char *a4)
{
  _BYTE *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&a4[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor] = 0;
  v8 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorView());
  v9 = a4;
  swift_retain();
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView] = sub_1004119FC(a1 & 1, a2, v8, 0.3);
  v10 = (uint64_t *)&v9[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressSource];
  *v10 = a2;
  v10[1] = (uint64_t)&protocol witness table for DOCFilterableOperationProgressCollectionSource<A>;
  v11 = &v9[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration];
  *v11 = a1 & 1;
  v11[1] = BYTE1(a1) & 1;
  v11[2] = BYTE2(a1) & 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_popoverArrowDirection] = a3;
  swift_retain();

  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorPresenterView();
  v12 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100407E88();

  swift_release(a2);
  return v12;
}

id DOCNodeContextMenuConfiguration.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeContextMenuConfiguration();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for DOCNodeContextMenuConfiguration()
{
  return objc_opt_self(_TtC5Files31DOCNodeContextMenuConfiguration);
}

id DOCNodeContextMenuConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeContextMenuConfiguration();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002935C4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char *v47;
  char v48[24];
  _QWORD *v49;
  char v50[24];

  v2 = v1;
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16);
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  *(_BYTE *)(v2 + 88) = 3;
  *(_QWORD *)(v2 + 32) = a1;
  v4 = type metadata accessor for DOCProviderDomainStateManager(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = a1;
  *(_QWORD *)(v2 + 40) = sub_10009DBA4((uint64_t)v5);
  v6 = type metadata accessor for DOCFileProviderSyncStateProvider();
  swift_allocObject(v6, 64, 7);
  v7 = v5;
  v8 = sub_100489428(v7, 0);

  *(_QWORD *)(v2 + 64) = v8;
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCFileOperationsManager(0));
  v10 = swift_retain_n(v8, 2);
  v11 = sub_1000A7394(v10, v9, (uint64_t (*)(_QWORD))type metadata accessor for DOCFileProviderSyncStateProvider, (uint64_t)&off_1005EFDB0);
  v12 = type metadata accessor for DOCFileOperationCollectionSource(0);
  *(_QWORD *)(swift_allocObject(v12, 56, 7) + 48) = v11;
  v13 = (char *)v11;
  v14 = sub_10008C000(0, 0);
  v46 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  v47 = v13;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers];
  swift_beginAccess(v15 + 16, v50, 1, 0);
  v16 = *(_QWORD *)(v15 + 16);
  v49 = _swiftEmptyArrayStorage;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v27 = v16;
    else
      v27 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v16);
    result = _CocoaArrayWrapper.endIndex.getter(v27);
    v17 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v16);
    v26 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_retain();
  result = swift_bridgeObjectRetain(v16);
  if (!v17)
    goto LABEL_17;
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
    return result;
  }
  v43 = v8;
  v44 = v6;
  v45 = v7;
  for (i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
    }
    else
    {
      v21 = *(_QWORD *)(v16 + 8 * i + 32);
      swift_retain();
    }
    Strong = swift_unknownObjectWeakLoadStrong(v21 + 16, v20);
    if (Strong)
    {
      v23 = swift_unknownObjectRelease(Strong);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v24 = v49[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
      v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
      specialized ContiguousArray._endMutation()(v25);
    }
    else
    {
      swift_release(v21);
    }
  }
  swift_bridgeObjectRelease(v16);
  v26 = v49;
  v6 = v44;
  v7 = v45;
  v8 = v43;
LABEL_18:
  v28 = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v15 + 16) = v26;
  swift_bridgeObjectRelease(v28);
  v29 = *(_QWORD *)(v15 + 16);
  __chkstk_darwin(v30);
  v42[2] = v14;
  swift_bridgeObjectRetain(v29);
  v31 = sub_100089DB8((uint64_t (*)(uint64_t *))sub_100294C38, (uint64_t)v42, v29);
  swift_release(v15);
  swift_bridgeObjectRelease(v29);
  v32 = v47;
  if ((v31 & 1) == 0)
  {
    v33 = *(_QWORD *)&v47[v46];
    swift_retain();
    sub_1000B1E54((uint64_t)v14, v33);
    swift_release(v33);
    sub_1000A786C();
    sub_10000CDB4();
  }
  swift_release(v14);

  *(_QWORD *)(v2 + 48) = v14;
  swift_allocObject(v6, 64, 7);
  v34 = sub_100489428(v7, 0);
  swift_release(v8);

  *(_QWORD *)(v2 + 56) = v34;
  v35 = swift_allocObject(&unk_1005D7D20, 24, 7);
  swift_weakInit(v35 + 16, v2);
  swift_beginAccess(v34 + 32, &v49, 1, 0);
  v36 = *(_QWORD *)(v34 + 32);
  v37 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v34 + 32) = sub_100294CA8;
  *(_QWORD *)(v34 + 40) = v35;
  sub_100087534(v36, v37);
  v38 = *(_QWORD *)(v2 + 56);
  v39 = swift_allocObject(&unk_1005D7D20, 24, 7);
  swift_weakInit(v39 + 16, v2);
  swift_beginAccess(v38 + 48, v48, 1, 0);
  v40 = *(_QWORD *)(v38 + 48);
  v41 = *(_QWORD *)(v38 + 56);
  *(_QWORD *)(v38 + 48) = sub_100294CB0;
  *(_QWORD *)(v38 + 56) = v39;
  sub_100087534(v40, v41);
  return v2;
}

uint64_t sub_1002939E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 56);
    swift_weakInit(&v6, result);
    swift_retain();
    sub_100488A14(v5, (uint64_t)&v6);
    swift_release(v4);
    swift_weakDestroy(&v6);
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_100293A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 56);
    swift_weakInit(&v7, result);
    v5 = *(void **)(*(_QWORD *)(v4 + 16) + 136);
    v6 = v5;
    swift_retain();
    sub_100293D40(v5, (uint64_t)&v7);
    swift_release(v4);

    swift_weakDestroy(&v7);
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_100293B00(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  if (!a1)
  {
    v6 = 0xEC00000064657463;
    v7 = 0x656E6E6F63736964;
LABEL_6:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, 0x657463656E6E6F63, 0xE900000000000064, 0);
    swift_bridgeObjectRelease(v6);
    v5 = v8 & 1;
    return a4(v5);
  }
  if (a1 != 1)
  {
    v6 = 0xE700000000000000;
    v7 = 0x676E69646E6570;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease(0xE900000000000064);
  v5 = 1;
  return a4(v5);
}

uint64_t sub_100293BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _BYTE v13[8];

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    v2 = *(_QWORD *)(v1 + 16);
    swift_retain();
    sub_10001A7A0(v3, v2);
    swift_release(v1);
  }
  v4 = *(_QWORD *)(v0 + 64);
  if ((*(_BYTE *)(v4 + 24) & 1) == 0)
  {
    *(_BYTE *)(v4 + 24) = 1;
    v5 = *(_QWORD *)(v4 + 16);
    swift_retain();
    sub_10001A7A0(v6, v5);
    swift_release(v4);
  }
  v7 = *(_QWORD *)(v0 + 56);
  swift_weakInit(v13, v0);
  swift_retain();
  sub_100488A14(v8, (uint64_t)v13);
  swift_release(v7);
  swift_weakDestroy(v13);
  v9 = *(_QWORD *)(v0 + 56);
  swift_weakInit(v13, v0);
  v10 = *(void **)(*(_QWORD *)(v9 + 16) + 136);
  v11 = v10;
  swift_retain();
  sub_100293D40(v10, (uint64_t)v13);
  swift_release(v9);

  return swift_weakDestroy(v13);
}

void sub_100293CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    *(_BYTE *)(v1 + 24) = 0;
    v2 = *(_QWORD *)(v1 + 16);
    swift_retain();
    sub_1004891E8(v3, v2);
    swift_release(v1);
  }
  v4 = *(_QWORD *)(v0 + 64);
  if (*(_BYTE *)(v4 + 24) == 1)
  {
    *(_BYTE *)(v4 + 24) = 0;
    v5 = *(_QWORD *)(v4 + 16);
    swift_retain();
    sub_1004891E8(v6, v5);
    swift_release(v4);
  }
  *(_BYTE *)(v0 + 88) = 3;
}

uint64_t sub_100293D40(void *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  unsigned __int8 v9;
  __n128 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __n128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _BYTE v21[24];

  swift_beginAccess(a2, v21, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v5 = result;
    v6 = *(void **)(result + 80);
    *(_QWORD *)(result + 80) = a1;
    v7 = a1;

    *(_BYTE *)(*(_QWORD *)(v5 + 40) + 16) = 0;
    v8 = swift_allocObject(&unk_1005D7D20, 24, 7);
    swift_weakInit(v8 + 16, v5);
    swift_retain_n(v8, 2);
    if ((sub_1002941CC() & 1) != 0
      || (v11 = *(void **)(v5 + 80)) != 0
      && (!objc_msgSend(v11, "contentType")
       || (v12 = *(void **)(v5 + 80)) != 0 && objc_msgSend(v12, "contentType") == (id)2))
    {
      v9 = 0;
    }
    else
    {
      if ((sub_1002941CC() & 1) != 0
        || (v18 = *(void **)(v5 + 80)) != 0
        && (!objc_msgSend(v18, "contentType")
         || (v19 = *(void **)(v5 + 80)) != 0 && objc_msgSend(v19, "contentType") == (id)2)
        || (sub_1002940C8(), v20 <= 0))
      {
        v13 = *(_QWORD *)(v5 + 40);
        v14 = swift_allocObject(&unk_1005D7D48, 32, 7);
        *(_QWORD *)(v14 + 16) = sub_100294CB8;
        *(_QWORD *)(v14 + 24) = v8;
        sub_100086BF0();
        swift_retain();
        swift_retain();
        v16 = (void *)static OS_dispatch_queue.main.getter(v15);
        sub_100450A68(v16, (uint64_t)sub_100294CC0, v14);
        swift_release_n(v8, 2, v17);
        swift_release(v13);
        swift_release(v14);

        goto LABEL_11;
      }
      v9 = 2;
    }
    sub_100293F34(v9, v8);
    swift_release_n(v8, 2, v10);
LABEL_11:
    swift_release(v5);

    return swift_release(v8);
  }
  return result;
}

uint64_t sub_100293F34(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  NSString v7;
  unsigned int v8;
  uint64_t v9;
  unsigned __int8 v10;
  int v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD aBlock[5];
  uint64_t v18;
  char v19[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "BOOLForKey:", v7);

    if (v8)
      v10 = 2;
    else
      v10 = a1;
    v11 = *(unsigned __int8 *)(v5 + 88);
    if ((v11 == 3 || v11 != v10)
      && (*(_BYTE *)(v5 + 88) = v10, (Strong = swift_unknownObjectWeakLoadStrong(v5 + 16, v9)) != 0))
    {
      v13 = Strong;
      v14 = swift_allocObject(&unk_1005D7D70, 25, 7);
      *(_QWORD *)(v14 + 16) = v13;
      *(_BYTE *)(v14 + 24) = v10;
      aBlock[4] = sub_100294CEC;
      v18 = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D7D88;
      v15 = _Block_copy(aBlock);
      v16 = v18;
      swift_unknownObjectRetain(v13);
      swift_release(v16);
      DOCRunInMainThread(v15);
      _Block_release(v15);
      swift_release(v5);
      return swift_unknownObjectRelease(v13);
    }
    else
    {
      return swift_release(v5);
    }
  }
  return result;
}

void sub_1002940C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = type metadata accessor for DOCFileOperation(0);
  __chkstk_darwin(v1);
  v4 = (id *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(v0 + 72);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v8 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
      v9 = 0;
      while (1)
      {
        sub_100294F04(v7, (uint64_t)v4);
        v10 = v4[5];
        v11 = sub_100172A28((uint64_t)v4);
        v12 = NSProgress.fileTotalCount.getter(v11);
        v14 = v13;

        v15 = (v14 & 1) != 0 ? 0 : v12;
        v16 = __OFADD__(v9, v15);
        v9 += v15;
        if (v16)
          break;
        v7 += v8;
        if (!--v6)
        {
          swift_bridgeObjectRelease(v5);
          return;
        }
      }
      __break(1u);
    }
  }
}

uint64_t sub_1002941CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  char **v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = type metadata accessor for DOCFileOperation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (id *)((char *)&v21 - v6);
  v8 = *(_QWORD *)(v0 + 72);
  if (!v8)
    return 0;
  v9 = _swiftEmptyArrayStorage;
  v22 = _swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(v8 + 16);
  result = swift_bridgeObjectRetain(v8);
  if (v10)
  {
    v12 = 0;
    v13 = &selRef_viewOptionsRoot;
    v21 = v10;
    while (v12 < *(_QWORD *)(v8 + 16))
    {
      v14 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v15 = *(_QWORD *)(v2 + 72);
      sub_100294F04(v8 + v14 + v15 * v12, (uint64_t)v7);
      if (objc_msgSend(v7[5], v13[6]))
      {
        v16 = (uint64_t)v5;
        sub_1000E828C((uint64_t)v7, (uint64_t)v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          sub_100154E30(0, v9[2] + 1, 1);
        v9 = v22;
        v18 = v22[2];
        v17 = v22[3];
        if (v18 >= v17 >> 1)
        {
          sub_100154E30(v17 > 1, v18 + 1, 1);
          v9 = v22;
        }
        v9[2] = v18 + 1;
        v19 = (uint64_t)v9 + v14 + v18 * v15;
        v5 = (char *)v16;
        result = sub_1000E828C(v16, v19);
        v10 = v21;
        v13 = &selRef_viewOptionsRoot;
      }
      else
      {
        result = sub_100172A28((uint64_t)v7);
      }
      if (v10 == ++v12)
      {
        v9 = v22;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease(v8);
    v20 = v9[2];
    swift_release(v9);
    return v20 != 0;
  }
  return result;
}

uint64_t sub_100294398()
{
  uint64_t v0;

  sub_10008F5C0(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  return v0;
}

uint64_t sub_1002943EC()
{
  uint64_t v0;

  sub_100294398();
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel()
{
  return objc_opt_self(_TtC5Files57DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel);
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100294478 + 4 * byte_1004DFAE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002944AC + 4 * asc_1004DFAE0[v4]))();
}

uint64_t sub_1002944AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002944B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002944BCLL);
  return result;
}

uint64_t sub_1002944C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002944D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002944D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002944DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel.State()
{
  return &type metadata for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel.State;
}

unint64_t sub_1002944FC()
{
  unint64_t result;

  result = qword_10064B758;
  if (!qword_10064B758)
  {
    result = swift_getWitnessTable(&unk_1004DFBC0, &type metadata for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel.State);
    atomic_store(result, (unint64_t *)&qword_10064B758);
  }
  return result;
}

double sub_100294540(int a1)
{
  uint64_t (**v1)(__int128 *, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (**v16)(__int128 *, __n128);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(__int128 *, __n128);
  uint64_t v23;
  __n128 v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (**v29)(__int128 *, __n128);
  uint64_t (*v30)(__int128 *, __n128);
  uint64_t (*v31)(__int128 *, __n128);
  uint64_t v32;
  uint64_t (*v33)(__int128 *, __n128);
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  double result;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  uint64_t (*v61)(__int128 *, __n128);
  unint64_t v62;
  uint64_t (**v63)(__int128 *, __n128);
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __int128 v69;
  __int128 v70;
  _UNKNOWN **v71;
  char v72[24];
  char v73[32];

  v64 = type metadata accessor for DOCFileOperation(0);
  v3 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v60 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  swift_beginAccess(v1 + 2, v73, 1, 0);
  v11 = (uint64_t (*)(uint64_t))*((_QWORD *)*v1 + 22);
  v61 = v1[2];
  v12 = swift_bridgeObjectRetain(v61);
  v13 = v11(v12);
  v14 = _swiftEmptyArrayStorage;
  v65[0] = _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(v13 + 16);
  v16 = v1 + 3;
  v63 = v1;
  swift_retain();
  swift_beginAccess(v1 + 3, v72, 0, 0);
  v59 = v3;
  if (v15)
  {
    v58 = a1;
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v18 = *(_QWORD *)(v3 + 72);
    v57 = v13;
    v62 = v17;
    v19 = v13 + v17;
    v20 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_100294F04(v19, (uint64_t)v10);
      *((_QWORD *)&v70 + 1) = v64;
      v71 = &protocol witness table for DOCFileOperation;
      v21 = sub_10006CBAC(&v69);
      sub_100294F04((uint64_t)v10, (uint64_t)v21);
      v22 = *v16;
      if (!*v16)
        break;
      v23 = (uint64_t)v63[4];
      v24 = swift_retain();
      v25 = v22(&v69, v24);
      sub_100087534((uint64_t)v22, v23);
      sub_100068588(&v69);
      if ((v25 & 1) != 0)
        goto LABEL_9;
      sub_100172A28((uint64_t)v10);
LABEL_4:
      v19 += v18;
      if (!--v15)
      {
        v14 = (_QWORD *)v65[0];
        LOBYTE(a1) = v58;
        v28 = v57;
        goto LABEL_16;
      }
    }
    sub_100068588(&v69);
LABEL_9:
    sub_1000E828C((uint64_t)v10, (uint64_t)v7);
    if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      sub_100154E30(0, v20[2] + 1, 1);
    v20 = (_QWORD *)v65[0];
    v27 = *(_QWORD *)(v65[0] + 16);
    v26 = *(_QWORD *)(v65[0] + 24);
    if (v27 >= v26 >> 1)
    {
      sub_100154E30(v26 > 1, v27 + 1, 1);
      v20 = (_QWORD *)v65[0];
    }
    v20[2] = v27 + 1;
    sub_1000E828C((uint64_t)v7, (uint64_t)v20 + v62 + v27 * v18);
    goto LABEL_4;
  }
  v28 = v13;
LABEL_16:
  swift_bridgeObjectRelease(v28);
  v29 = v63;
  swift_release(v63);
  v30 = sub_1000815E0((uint64_t)v14);
  v31 = (uint64_t)v29[2];
  v29[2] = (uint64_t (*)(__int128 *, __n128))v30;
  swift_bridgeObjectRelease((uint64_t (*)(__int128 *, __n128))v31);
  v32 = (uint64_t)v60;
  if ((a1 & 1) != 0)
  {
    v33 = v61;
    v34 = *((_QWORD *)v61 + 2);
    if (v34)
    {
      v68 = _swiftEmptyArrayStorage;
      sub_100154E78(0, v34, 0);
      v35 = (uint64_t)v33 + 32;
      v36 = v68;
      do
      {
        sub_100092328(v35, (uint64_t)v65);
        v37 = v66;
        v38 = v67;
        sub_10007E7A0(v65, v66);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v38 + 8))(&v69, v37, v38);
        sub_100068588(v65);
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_100154E78(0, v36[2] + 1, 1);
          v36 = v68;
        }
        v40 = v36[2];
        v39 = v36[3];
        if (v40 >= v39 >> 1)
        {
          sub_100154E78(v39 > 1, v40 + 1, 1);
          v36 = v68;
        }
        v36[2] = v40 + 1;
        v41 = &v36[5 * v40];
        v42 = v69;
        v43 = v70;
        v41[8] = v71;
        *((_OWORD *)v41 + 2) = v42;
        *((_OWORD *)v41 + 3) = v43;
        v35 += 40;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease(v61);
    }
    else
    {
      swift_bridgeObjectRelease(v61);
      v36 = _swiftEmptyArrayStorage;
    }
    v45 = sub_1000D02C8((uint64_t)v36);
    swift_bridgeObjectRelease(v36);
    v46 = v14[2];
    if (v46)
    {
      v65[0] = _swiftEmptyArrayStorage;
      sub_100154E78(0, v46, 0);
      v47 = (uint64_t)v14 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
      v48 = *(_QWORD *)(v59 + 72);
      do
      {
        sub_100294F04(v47, v32);
        sub_10006777C(v32, (uint64_t)&v69);
        sub_100172A28(v32);
        v49 = (_QWORD *)v65[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v65[0]) & 1) == 0)
        {
          sub_100154E78(0, v49[2] + 1, 1);
          v49 = (_QWORD *)v65[0];
        }
        v51 = v49[2];
        v50 = v49[3];
        if (v51 >= v50 >> 1)
        {
          sub_100154E78(v50 > 1, v51 + 1, 1);
          v49 = (_QWORD *)v65[0];
        }
        v49[2] = v51 + 1;
        v52 = &v49[5 * v51];
        v53 = v69;
        v54 = v70;
        v52[8] = v71;
        *((_OWORD *)v52 + 2) = v53;
        *((_OWORD *)v52 + 3) = v54;
        v47 += v48;
        --v46;
      }
      while (v46);
      swift_release(v14);
    }
    else
    {
      swift_release(v14);
      v49 = _swiftEmptyArrayStorage;
    }
    v55 = sub_1000D02C8((uint64_t)v49);
    swift_bridgeObjectRelease(v49);
    v56 = sub_100087ED8(v45, v55);
    swift_bridgeObjectRelease(v45);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v55).n128_u64[0];
    if ((v56 & 1) == 0)
      return sub_100294A80();
  }
  else
  {
    swift_release(v14);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v61).n128_u64[0];
  }
  return result;
}

double sub_100294A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, __n128);
  __n128 v13;
  double result;
  __int128 v15;
  _QWORD v16[2];
  _BYTE v17[24];

  v1 = v0;
  swift_beginAccess(v0 + 40, v17, 0, 0);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v16[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v2);
    sub_100154E5C(0, v3, 0);
    v4 = _swiftEmptyArrayStorage;
    v5 = _swiftEmptyArrayStorage[2];
    v6 = 40;
    do
    {
      v7 = *(_OWORD *)(v2 + v6);
      v16[0] = v4;
      v8 = v4[3];
      v15 = v7;
      swift_retain();
      if (v5 >= v8 >> 1)
      {
        sub_100154E5C(v8 > 1, v5 + 1, 1);
        v4 = (_QWORD *)v16[0];
      }
      v4[2] = v5 + 1;
      *(_OWORD *)&v4[2 * v5 + 4] = v15;
      v6 += 24;
      ++v5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  v9 = v4[2];
  if (v9)
  {
    swift_bridgeObjectRetain(v4);
    v10 = v4 + 5;
    do
    {
      v12 = (void (*)(_QWORD *, __n128))*(v10 - 1);
      v11 = *v10;
      v16[0] = v1;
      v16[1] = &protocol witness table for DOCFilterableOperationProgressCollectionSource<A>;
      v13 = swift_retain();
      v12(v16, v13);
      swift_release(v11);
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v4);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_100294BD8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(*a1 + 16, a2);
  if (result)
  {
    v4 = result;
    swift_unknownObjectRelease(result);
    return v4 == a2;
  }
  return result;
}

id sub_100294C24(uint64_t a1, char *a2)
{
  return sub_1000A7394(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DOCDSFileServiceConnection, (uint64_t)&off_1005E2840);
}

uint64_t sub_100294C38(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 + 16);
  result = swift_unknownObjectWeakLoadStrong(*a1 + 16, a2);
  if (result)
  {
    v5 = result;
    swift_unknownObjectRelease(result);
    return v5 == v3;
  }
  return result;
}

uint64_t sub_100294C84()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100294CA8()
{
  uint64_t v0;

  return sub_1002939E0(v0);
}

uint64_t sub_100294CB0()
{
  uint64_t v0;

  return sub_100293A60(v0);
}

uint64_t sub_100294CB8(unsigned __int8 a1)
{
  uint64_t v1;

  return sub_100293F34(a1, v1);
}

uint64_t sub_100294CC0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100293B00(a1, a2, a3, *(uint64_t (**)(uint64_t))(v3 + 16));
}

uint64_t sub_100294CC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100294CEC()
{
  uint64_t v0;

  sub_1002927EC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100294CF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __n128 v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _BYTE v20[24];

  swift_beginAccess(a2, v20, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 72);
    *(_QWORD *)(result + 72) = a1;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRelease(v6);
    *(_BYTE *)(*(_QWORD *)(v5 + 40) + 16) = 0;
    v7 = swift_allocObject(&unk_1005D7D20, 24, 7);
    swift_weakInit(v7 + 16, v5);
    swift_retain_n(v7, 2);
    if ((sub_1002941CC() & 1) != 0
      || (v10 = *(void **)(v5 + 80)) != 0
      && (!objc_msgSend(v10, "contentType")
       || (v11 = *(void **)(v5 + 80)) != 0 && objc_msgSend(v11, "contentType") == (id)2))
    {
      v8 = 0;
    }
    else
    {
      if ((sub_1002941CC() & 1) != 0
        || (v17 = *(void **)(v5 + 80)) != 0
        && (!objc_msgSend(v17, "contentType")
         || (v18 = *(void **)(v5 + 80)) != 0 && objc_msgSend(v18, "contentType") == (id)2)
        || (sub_1002940C8(), v19 <= 0))
      {
        v12 = *(_QWORD *)(v5 + 40);
        v13 = swift_allocObject(&unk_1005D7DC0, 32, 7);
        *(_QWORD *)(v13 + 16) = sub_100294CB8;
        *(_QWORD *)(v13 + 24) = v7;
        sub_100086BF0();
        swift_retain();
        swift_retain();
        v15 = (void *)static OS_dispatch_queue.main.getter(v14);
        sub_100450A68(v15, (uint64_t)sub_100294F4C, v13);
        swift_release_n(v7, 2, v16);
        swift_release(v12);
        swift_release(v13);

        goto LABEL_11;
      }
      v8 = 2;
    }
    sub_100293F34(v8, v7);
    swift_release_n(v7, 2, v9);
LABEL_11:
    swift_release(v5);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_100294EE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100294F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCFileOperation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void destroy for DOCItemCollectionListSpec(uint64_t a1)
{

}

uint64_t initializeWithCopy for DOCItemCollectionListSpec(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionListSpec(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 _s14descr1005E3D29O4SpecV13LayoutMetricsVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionListSpec(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionListSpec(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionListSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionListSpec()
{
  return &type metadata for DOCItemCollectionListSpec;
}

uint64_t sub_100295164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[8];
  id v21;
  id v22;
  id v23;

  v23 = *(id *)v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v5 = v4;
  v6 = v23;
  String.hash(into:)(a1, v3, v5);
  swift_bridgeObjectRelease(v5);
  sub_10007C390(&v23);
  v22 = *(id *)(v1 + 8);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v9 = v8;
  v10 = v22;
  String.hash(into:)(a1, v7, v9);
  swift_bridgeObjectRelease(v9);
  sub_10007C390(&v22);
  v21 = *(id *)(v1 + 16);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v13 = v12;
  v14 = v21;
  String.hash(into:)(a1, v11, v13);
  swift_bridgeObjectRelease(v13);
  sub_10007C390(&v21);
  Hasher._combine(_:)(*(unsigned __int8 *)(v1 + 24) - 1);
  v15 = *(_OWORD *)(v1 + 112);
  v20[4] = *(_OWORD *)(v1 + 96);
  v20[5] = v15;
  v16 = *(_OWORD *)(v1 + 144);
  v20[6] = *(_OWORD *)(v1 + 128);
  v20[7] = v16;
  v17 = *(_OWORD *)(v1 + 48);
  v20[0] = *(_OWORD *)(v1 + 32);
  v20[1] = v17;
  v18 = *(_OWORD *)(v1 + 80);
  v20[2] = *(_OWORD *)(v1 + 64);
  v20[3] = v18;
  sub_100027B74((uint64_t)v20);
  sub_1002F2ED0(a1);
  return sub_10003BDA0((uint64_t)v20);
}

BOOL sub_10029529C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[10];
  _OWORD v14[10];

  v2 = a1[7];
  v13[6] = a1[6];
  v13[7] = v2;
  v3 = a1[9];
  v13[8] = a1[8];
  v13[9] = v3;
  v4 = a1[3];
  v13[2] = a1[2];
  v13[3] = v4;
  v5 = a1[5];
  v13[4] = a1[4];
  v13[5] = v5;
  v6 = a1[1];
  v13[0] = *a1;
  v13[1] = v6;
  v7 = a2[7];
  v14[6] = a2[6];
  v14[7] = v7;
  v8 = a2[9];
  v14[8] = a2[8];
  v14[9] = v8;
  v9 = a2[3];
  v14[2] = a2[2];
  v14[3] = v9;
  v10 = a2[5];
  v14[4] = a2[4];
  v14[5] = v10;
  v11 = a2[1];
  v14[0] = *a2;
  v14[1] = v11;
  return sub_100295464((uint64_t)v13, (uint64_t)v14);
}

Swift::Int sub_10029531C()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD v7[9];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v1 = v0[7];
  v14 = v0[6];
  v15 = v1;
  v2 = v0[9];
  v16 = v0[8];
  v17 = v2;
  v3 = v0[3];
  v10 = v0[2];
  v11 = v3;
  v4 = v0[5];
  v12 = v0[4];
  v13 = v4;
  v5 = v0[1];
  v8 = *v0;
  v9 = v5;
  Hasher.init(_seed:)(v7, 0);
  sub_100295164((uint64_t)v7);
  return Hasher._finalize()();
}

uint64_t sub_100295388(uint64_t a1)
{
  return sub_100295164(a1);
}

Swift::Int sub_1002953D8(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _QWORD v8[9];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v2 = v1[7];
  v15 = v1[6];
  v16 = v2;
  v3 = v1[9];
  v17 = v1[8];
  v18 = v3;
  v4 = v1[3];
  v11 = v1[2];
  v12 = v4;
  v5 = v1[5];
  v13 = v1[4];
  v14 = v5;
  v6 = v1[1];
  v9 = *v1;
  v10 = v6;
  Hasher.init(_seed:)(v8, a1);
  sub_100295164((uint64_t)v8);
  return Hasher._finalize()();
}

void *sub_100295440()
{
  void *result;

  result = (void *)sub_1003F0CD4((uint64_t)_swiftEmptyArrayStorage);
  off_10064B768 = result;
  return result;
}

BOOL sub_100295464(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  BOOL v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v41[8];
  _OWORD v42[8];
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;

  v4 = *(void **)a1;
  v47 = *(id *)a2;
  v48 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  if (v5 == v8 && v7 == v9)
  {
    sub_10007C3B8(&v48);
    sub_10007C3B8(&v47);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10007C390(&v47);
    sub_10007C390(&v48);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    sub_10007C3B8(&v48);
    sub_10007C3B8(&v47);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    sub_10007C390(&v47);
    sub_10007C390(&v48);
    v13 = 0;
    if ((v12 & 1) == 0)
      return v13;
  }
  v14 = *(void **)(a1 + 8);
  v45 = *(id *)(a2 + 8);
  v46 = v14;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v20 = v18;
  if (v15 == v19 && v17 == v18)
  {
    sub_10007C3B8(&v46);
    sub_10007C3B8(&v45);
    swift_bridgeObjectRelease_n(v17, 2);
    sub_10007C390(&v45);
    sub_10007C390(&v46);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
    sub_10007C3B8(&v46);
    sub_10007C3B8(&v45);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v20);
    sub_10007C390(&v45);
    sub_10007C390(&v46);
    v13 = 0;
    if ((v21 & 1) == 0)
      return v13;
  }
  v22 = *(void **)(a1 + 16);
  v43 = *(id *)(a2 + 16);
  v44 = v22;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {
    sub_10007C3B8(&v44);
    sub_10007C3B8(&v43);
    swift_bridgeObjectRelease_n(v25, 2);
    sub_10007C390(&v43);
    sub_10007C390(&v44);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);
    sub_10007C3B8(&v44);
    sub_10007C3B8(&v43);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v28);
    sub_10007C390(&v43);
    sub_10007C390(&v44);
    v13 = 0;
    if ((v29 & 1) == 0)
      return v13;
  }
  if (*(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
  {
    v30 = *(_OWORD *)(a1 + 112);
    v42[4] = *(_OWORD *)(a1 + 96);
    v42[5] = v30;
    v31 = *(_OWORD *)(a1 + 144);
    v42[6] = *(_OWORD *)(a1 + 128);
    v42[7] = v31;
    v32 = *(_OWORD *)(a1 + 48);
    v42[0] = *(_OWORD *)(a1 + 32);
    v42[1] = v32;
    v33 = *(_OWORD *)(a1 + 80);
    v42[2] = *(_OWORD *)(a1 + 64);
    v42[3] = v33;
    v34 = *(_OWORD *)(a2 + 32);
    v35 = *(_OWORD *)(a2 + 48);
    v36 = *(_OWORD *)(a2 + 80);
    v41[2] = *(_OWORD *)(a2 + 64);
    v41[3] = v36;
    v41[0] = v34;
    v41[1] = v35;
    v37 = *(_OWORD *)(a2 + 96);
    v38 = *(_OWORD *)(a2 + 112);
    v39 = *(_OWORD *)(a2 + 144);
    v41[6] = *(_OWORD *)(a2 + 128);
    v41[7] = v39;
    v41[4] = v37;
    v41[5] = v38;
    return sub_10007C194((uint64_t)v42, (uint64_t)v41);
  }
  else
  {
    return 0;
  }
}

void destroy for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(id *a1)
{

}

uint64_t initializeWithCopy for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v8;
  v9 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v9;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 40);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v18 = v16;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v19 = *(void **)(a2 + 104);
  v20 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v19;
  v21 = v19;

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors()
{
  return &type metadata for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors;
}

unint64_t sub_100295AD8()
{
  unint64_t result;

  result = qword_10064B770;
  if (!qword_10064B770)
  {
    result = swift_getWitnessTable(&unk_1004DFCB0, &type metadata for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors);
    atomic_store(result, (unint64_t *)&qword_10064B770);
  }
  return result;
}

uint64_t sub_100295B1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  _QWORD v45[2];
  _BYTE v46[40];

  v43 = a1;
  v3 = type metadata accessor for Date(0);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v41);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100643900);
  v7 = __chkstk_darwin(v6);
  v40 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for UTType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = UUID.init()(v17);
  v21 = UUID.uuidString.getter(v20);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v24 = v43;
  NSProgress.iconUTType.getter((uint64_t)v14);
  v45[0] = v21;
  v45[1] = v23;
  v25 = v11;
  v26 = v14;
  v27 = (uint64_t)v37;
  v28 = v38;
  v29 = v39;
  AnyHashable.init<A>(_:)(v45, &type metadata for String, &protocol witness table for String);
  v30 = v24;
  Date.init(timeIntervalSinceNow:)(0.0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v29);
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  v42 = v26;
  v43 = (void *)v25;
  v31(v27, v26, v25);
  swift_storeEnumTagMultiPayload(v27, v41, 0);
  sub_10006777C((uint64_t)v46, a2);
  *(_QWORD *)(a2 + 40) = v30;
  v32 = v40;
  sub_1001114C4((uint64_t)v10, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v32, 1, v29) == 1)
  {
    v33 = v44;
    Date.init(timeIntervalSinceNow:)(0.0);
    sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100643900);
    sub_100067748((uint64_t)v46);
    sub_10000CB4C(v32, (uint64_t *)&unk_100643900);
  }
  else
  {
    sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100643900);
    sub_100067748((uint64_t)v46);
    v33 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v44, v32, v29);
  }
  v34 = type metadata accessor for DOCFileOperation(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(a2 + *(int *)(v34 + 24), v33, v29);
  sub_100295FD8(v27, a2 + *(int *)(v34 + 28));
  return (*(uint64_t (**)(char *, void *))(v12 + 8))(v42, v43);
}

NSString sub_100295E48()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100672AF8 = (uint64_t)result;
  return result;
}

uint64_t sub_100295E7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v6 = sub_10006922C(&qword_100643470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v17 - v10;
  v12 = *a1;
  v13 = a1[1];
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a2, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  URL.init(string:relativeTo:)(v12, v13, v9);
  sub_10000CB4C((uint64_t)v9, &qword_100643470);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v11, v14);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCProgressTestability()
{
  return objc_opt_self(_TtC5Files22DOCProgressTestability);
}

uint64_t sub_100295FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10029601C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  unsigned __int8 v20;
  id v21;
  NSString v22;
  unsigned int v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void *object;
  Swift::String v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD v43[2];
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self(NSFileManager);
  v8 = objc_msgSend(v7, "defaultManager");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "containerURLForSecurityApplicationGroupIdentifier:", v9);

  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
LABEL_13:
    __break(1u);
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
  if ((_DWORD)v11 == 1)
    goto LABEL_13;
  v12 = URL.path.getter(v11);
  v14 = v13;
  v46 = *(void (**)(char *, uint64_t))(v1 + 8);
  v46(v6, v0);
  v51 = v12;
  v52 = v14;
  swift_bridgeObjectRetain(v14);
  v15._object = (void *)0x80000001005212D0;
  v15._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v17 = v51;
  v16 = v52;
  v18 = objc_msgSend(v7, "defaultManager");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "fileExistsAtPath:", v19);

  v47 = v3;
  v48 = v0;
  v44 = v17;
  v45 = v16;
  if ((v20 & 1) == 0)
  {
    v21 = objc_msgSend(v7, "defaultManager");
    v22 = String._bridgeToObjectiveC()();
    v51 = 0;
    v23 = objc_msgSend(v21, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v22, 1, 0, &v51);

    v24 = v51;
    if (v23)
    {
      v25 = (id)v51;
    }
    else
    {
      v26 = (id)v51;
      v27 = _convertNSErrorToError(_:)(v24);

      swift_willThrow();
      swift_errorRelease(v27);
    }
  }
  v43[1] = 0;
  v50 = _swiftEmptyArrayStorage;
  sub_100081774(0, 10, 0);
  v28 = 0;
  v29 = (uint64_t)v50;
  do
  {
    v51 = 0x656C694674736554;
    v52 = 0xE90000000000002DLL;
    v49 = v28;
    v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(object);
    v32._countAndFlagsBits = 1717858350;
    v32._object = (void *)0xE400000000000000;
    String.append(_:)(v32);
    v34 = v51;
    v33 = v52;
    v50 = (_QWORD *)v29;
    v36 = *(_QWORD *)(v29 + 16);
    v35 = *(_QWORD *)(v29 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_100081774(v35 > 1, v36 + 1, 1);
      v29 = (uint64_t)v50;
    }
    ++v28;
    *(_QWORD *)(v29 + 16) = v36 + 1;
    v37 = v29 + 16 * v36;
    *(_QWORD *)(v37 + 32) = v34;
    *(_QWORD *)(v37 + 40) = v33;
  }
  while (v28 != 10);
  v38 = v47;
  v39 = v45;
  URL.init(fileURLWithPath:)(v44, v45);
  v40 = swift_bridgeObjectRelease(v39);
  __chkstk_darwin(v40);
  v43[-2] = v38;
  v41 = sub_1004A8D6C((void (*)(_QWORD *))sub_100296480, (uint64_t)&v43[-4], v29);
  v46(v38, v48);
  swift_release(v29);
  return v41;
}

uint64_t sub_100296480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100295E7C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10029649C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(char *);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(__n128);
  __n128 v40;
  uint64_t v41;
  void *v42;
  char *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  id v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  unint64_t v84;
  unint64_t v85;
  double v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  id v111;
  id v112;
  char *v113;
  char *v114;
  char *v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  NSObject *v129;
  os_log_type_t v130;
  uint64_t v131;
  uint64_t v132;
  double v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  id v138;
  id v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  void *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint8_t *v153;
  uint64_t v154;
  _QWORD v156[2];
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(char *);
  uint64_t v169;
  id v170;
  unint64_t v171;
  _BYTE v172[9];

  v2 = v1;
  v166 = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v162 = (char *)v156 - v9;
  v10 = __chkstk_darwin(v8);
  v163 = (char *)v156 - v11;
  v12 = __chkstk_darwin(v10);
  v160 = (char *)v156 - v13;
  v14 = __chkstk_darwin(v12);
  v159 = (char *)v156 - v15;
  v16 = __chkstk_darwin(v14);
  v164 = (char *)v156 - v17;
  v18 = __chkstk_darwin(v16);
  v165 = (char *)v156 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)v156 - v21;
  v23 = Logger.Rename.unsafeMutableAddressor(v20);
  v24 = *(uint64_t (**)(char *))(v4 + 16);
  v169 = v23;
  v25 = v24(v22);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter();
  v28 = os_log_type_enabled(v26, v27);
  v168 = v24;
  v161 = v2;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = v7;
    v31 = v3;
    v32 = swift_slowAlloc(32, -1);
    v171 = v32;
    *(_DWORD *)v29 = 136315138;
    v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Erase] %s 1. START", v29, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    v33 = v32;
    v3 = v31;
    v7 = v30;
    swift_slowDealloc(v33, -1, -1);
    v34 = v29;
    v24 = v168;
    swift_slowDealloc(v34, -1, -1);
  }

  v35 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  v36 = v35(v22, v3);
  v172[0] = 0;
  v37 = DOCUSBFormatting.shared.unsafeMutableAddressor(v36);
  v38 = *(_QWORD *)v37;
  v39 = *(uint64_t (**)(__n128))(**(_QWORD **)v37 + 136);
  v40 = swift_retain();
  v41 = v39(v40);
  v167 = v38;
  if (!v41)
  {
    v57 = v162;
    v58 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v162, v169, v3);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(12, -1);
      v62 = swift_slowAlloc(32, -1);
      v171 = v62;
      *(_DWORD *)v61 = 136315138;
      v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "[Erase] %s 8. No current erase operation", v61, 0xCu);
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      v63 = v162;
    }
    else
    {

      v63 = v57;
    }
    v35(v63, v3);
    goto LABEL_35;
  }
  v42 = (void *)v41;
  v162 = v7;
  v43 = v165;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v165, v169, v3);
  v44 = v42;
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc(22, -1);
    v158 = v3;
    v48 = v47;
    v157 = swift_slowAlloc(64, -1);
    v171 = v157;
    *(_DWORD *)v48 = 136315394;
    v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
    *(_WORD *)(v48 + 12) = 2080;
    v156[1] = v48 + 14;
    v49 = v44;
    v50 = objc_msgSend(v49, "description");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    v54 = v51;
    v24 = v168;
    v170 = (id)sub_1000544FC(v54, v53, (uint64_t *)&v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);

    swift_bridgeObjectRelease(v53);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "[Erase] %s 2. erase operation: %s", (uint8_t *)v48, 0x16u);
    v55 = v157;
    swift_arrayDestroy(v157, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    v56 = v48;
    v3 = v158;
    swift_slowDealloc(v56, -1, -1);

    v35(v165, v3);
  }
  else
  {

    v35(v43, v3);
  }
  v64 = v163;
  v65 = v164;
  v66 = (char *)v44;
  v67 = sub_100297FD4(v166, (uint64_t)v66);

  if (v67)
  {
    v68 = type metadata accessor for DOCExternalDeviceSource();
    v69 = swift_dynamicCastClass(v67, v68);
    if (v69)
    {
      v70 = (void *)v69;
      ((void (*)(char *, uint64_t, uint64_t))v24)(v65, v169, v3);
      v71 = v66;
      v72 = v67;
      v73 = v71;
      v165 = (char *)v72;
      v74 = Logger.logObject.getter(v165);
      v75 = static os_log_type_t.debug.getter();
      v76 = os_log_type_enabled(v74, v75);
      v156[0] = v35;
      v157 = (uint64_t)v70;
      if (v76)
      {
        v77 = swift_slowAlloc(32, -1);
        v78 = swift_slowAlloc(96, -1);
        v158 = v3;
        v163 = (char *)v78;
        v171 = v78;
        *(_DWORD *)v77 = 136315650;
        v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
        *(_QWORD *)&v79 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171).n128_u64[0];
        *(_WORD *)(v77 + 12) = 2080;
        v170 = objc_msgSend(*(id *)&v73[direct field offset for DOCUSBEraseOperation.source], "identifier", v79);
        type metadata accessor for DOCDocumentSourceIdentifier(0);
        v81 = v80;
        v82 = String.init<A>(describing:)(&v170, v80);
        v83 = v70;
        v85 = v84;
        v170 = (id)sub_1000544FC(v82, v84, (uint64_t *)&v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);

        *(_QWORD *)&v86 = swift_bridgeObjectRelease(v85).n128_u64[0];
        *(_WORD *)(v77 + 22) = 2080;
        v24 = v168;
        v170 = objc_msgSend(v83, "identifier", v86);
        v87 = String.init<A>(describing:)(&v170, v81);
        v89 = v88;
        v170 = (id)sub_1000544FC(v87, v88, (uint64_t *)&v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
        v90 = v165;

        swift_bridgeObjectRelease(v89);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "[Erase] %s 3. Found real source: %s matching USB erase source: %s.", (uint8_t *)v77, 0x20u);
        v91 = v163;
        swift_arrayDestroy(v163, 3, (char *)&type metadata for Any + 8);
        v3 = v158;
        swift_slowDealloc(v91, -1, -1);
        v92 = v77;
        v35 = (uint64_t (*)(char *, uint64_t))v156[0];
        swift_slowDealloc(v92, -1, -1);

        v93 = v164;
      }
      else
      {

        v111 = v165;
        v93 = v65;
      }
      v35(v93, v3);
      v112 = objc_msgSend(v73, "operationState");
      v113 = v160;
      if (v112 == (id)2)
      {
        v114 = v159;
        ((void (*)(char *, uint64_t, uint64_t))v24)(v159, v169, v3);
        v115 = v73;
        v116 = Logger.logObject.getter(v115);
        v117 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v116, v117))
        {
          v118 = swift_slowAlloc(22, -1);
          v119 = swift_slowAlloc(64, -1);
          v171 = v119;
          *(_DWORD *)v118 = 136315394;
          v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
          *(_QWORD *)&v120 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171).n128_u64[0];
          *(_WORD *)(v118 + 12) = 2080;
          v170 = objc_msgSend(*(id *)&v115[direct field offset for DOCUSBEraseOperation.source], "identifier", v120);
          type metadata accessor for DOCDocumentSourceIdentifier(0);
          v121 = v114;
          v123 = String.init<A>(describing:)(&v170, v122);
          v125 = v124;
          v170 = (id)sub_1000544FC(v123, v124, (uint64_t *)&v171);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);

          swift_bridgeObjectRelease(v125);
          _os_log_impl((void *)&_mh_execute_header, v116, v117, "[Erase] %s 4. Operation state is finished: %s. Not adding fake sidebar item.", (uint8_t *)v118, 0x16u);
          swift_arrayDestroy(v119, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v119, -1, -1);
          v126 = v118;
          v24 = v168;
          swift_slowDealloc(v126, -1, -1);

          v127 = v121;
        }
        else
        {

          v127 = v114;
        }
        v35 = (uint64_t (*)(char *, uint64_t))v156[0];
        ((void (*)(char *, uint64_t))v156[0])(v127, v3);
        v7 = v162;
        goto LABEL_35;
      }
      ((void (*)(char *, uint64_t, uint64_t))v24)(v160, v169, v3);
      v128 = v73;
      v129 = Logger.logObject.getter(v128);
      v130 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v129, v130))
      {
        v131 = swift_slowAlloc(22, -1);
        v132 = swift_slowAlloc(64, -1);
        v171 = v132;
        *(_DWORD *)v131 = 136315394;
        v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
        *(_QWORD *)&v133 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171).n128_u64[0];
        *(_WORD *)(v131 + 12) = 2080;
        v170 = objc_msgSend(v128, "operationState", v133);
        v134 = String.init<A>(describing:)(&v170, &type metadata for DOCUSBEraseOperation.State);
        v136 = v135;
        v170 = (id)sub_1000544FC(v134, v135, (uint64_t *)&v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);

        swift_bridgeObjectRelease(v136);
        _os_log_impl((void *)&_mh_execute_header, v129, v130, "[Erase] %s 5. Operation isn't finished. Its state is: %s. Attempting to hide the re-mounted disk until finished. ", (uint8_t *)v131, 0x16u);
        swift_arrayDestroy(v132, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v132, -1, -1);
        swift_slowDealloc(v131, -1, -1);

        v35(v160, v3);
      }
      else
      {

        v35(v113, v3);
      }
      v146 = v161;
      v7 = v162;
      v147 = (void *)v157;
      v148 = v165;
      v149 = v166;
      swift_bridgeObjectRetain(v166);
      sub_10023C51C(2, v146, v149, v147, v172);

      swift_bridgeObjectRelease(v149);
      goto LABEL_34;
    }

  }
  v94 = *(void **)&v66[direct field offset for DOCUSBEraseOperation.source];
  v95 = type metadata accessor for DOCExternalDeviceSource();
  v96 = swift_dynamicCastClass(v94, v95);
  if (!v96)
  {

    v7 = v162;
    goto LABEL_35;
  }
  v97 = (void *)v96;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v64, v169, v3);
  v98 = v94;
  v99 = Logger.logObject.getter(v98);
  v100 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v99, v100))
  {
    v101 = swift_slowAlloc(22, -1);
    v158 = v3;
    v102 = v101;
    v103 = swift_slowAlloc(64, -1);
    v171 = v103;
    *(_DWORD *)v102 = 136315394;
    v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
    *(_QWORD *)&v104 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171).n128_u64[0];
    *(_WORD *)(v102 + 12) = 2080;
    v170 = objc_msgSend(v97, "identifier", v104);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v106 = String.init<A>(describing:)(&v170, v105);
    v108 = v107;
    v170 = (id)sub_1000544FC(v106, v107, (uint64_t *)&v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);

    swift_bridgeObjectRelease(v108);
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "[Erase] %s 6. Source Observer There is an erase operation item: %s", (uint8_t *)v102, 0x16u);
    swift_arrayDestroy(v103, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v103, -1, -1);
    v109 = v102;
    v3 = v158;
    swift_slowDealloc(v109, -1, -1);

    v110 = v163;
  }
  else
  {

    v110 = v64;
  }
  v35(v110, v3);
  v137 = v166;
  v171 = v166;
  v138 = v98;
  swift_bridgeObjectRetain(v137);
  v139 = v138;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v139);
  v141 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v140 = *(_QWORD *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v141 >= v140 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v140 > 1, v141 + 1, 1);
  v142 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v141, v97);
  specialized Array._endMutation()(v142);
  v143 = v171;

  v144 = sub_10004A858(v143, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v143);
  v145 = v139;
  swift_bridgeObjectRetain(v144);
  sub_10023C664(2, v161, v144, v97, v172);

  swift_bridgeObjectRelease_n(v144, 2);
  v7 = v162;
LABEL_34:
  v24 = v168;
LABEL_35:
  v150 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v7, v169, v3);
  v151 = Logger.logObject.getter(v150);
  v152 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v151, v152))
  {
    v153 = (uint8_t *)swift_slowAlloc(12, -1);
    v154 = swift_slowAlloc(32, -1);
    v171 = v154;
    *(_DWORD *)v153 = 136315138;
    v170 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v170, &v171);
    _os_log_impl((void *)&_mh_execute_header, v151, v152, "[Erase] %s 9. Source observer update END", v153, 0xCu);
    swift_arrayDestroy(v154, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v154, -1, -1);
    swift_slowDealloc(v153, -1, -1);
  }

  swift_release(v167);
  v35(v7, v3);
  return v172[0];
}

uint64_t sub_1002974E0(unint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD **v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD **v22;
  void **v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD **v28;
  uint64_t v29;
  int v30;
  uint64_t result;
  char *v32;
  _QWORD **v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  _QWORD *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  _QWORD *v76;
  _QWORD v77[2];
  char v78;
  uint64_t v79;
  id v80;
  _BYTE v81[24];

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v74 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v71 - v13;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v4 = a2;
    else
      v4 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = (_QWORD **)_swiftEmptyArrayStorage;
  v71 = a1;
  v72 = a4;
  v75 = v14;
  if (v15)
  {
    v76 = _swiftEmptyArrayStorage;
    v16 = &v76;
    sub_1000817E4(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    v73 = v10;
    v17 = v9;
    v16 = (_QWORD **)v76;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v15; ++i)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
        v76 = v16;
        v21 = (unint64_t)v16[2];
        v20 = (unint64_t)v16[3];
        if (v21 >= v20 >> 1)
        {
          sub_1000817E4(v20 > 1, v21 + 1, 1);
          v16 = (_QWORD **)v76;
        }
        v16[2] = (_QWORD *)(v21 + 1);
        v22 = &v16[4 * v21];
        v22[5] = 0;
        v22[6] = 0;
        v22[4] = (_QWORD *)v19;
        *((_BYTE *)v22 + 56) = 1;
      }
    }
    else
    {
      v23 = (void **)(a2 + 32);
      do
      {
        v24 = *v23;
        v76 = v16;
        v25 = (unint64_t)v16[2];
        v26 = (unint64_t)v16[3];
        v27 = v24;
        if (v25 >= v26 >> 1)
        {
          sub_1000817E4(v26 > 1, v25 + 1, 1);
          v16 = (_QWORD **)v76;
        }
        v16[2] = (_QWORD *)(v25 + 1);
        v28 = &v16[4 * v25];
        v28[5] = 0;
        v28[6] = 0;
        v28[4] = v27;
        *((_BYTE *)v28 + 56) = 1;
        ++v23;
        --v15;
      }
      while (v15);
    }
    v9 = v17;
    v10 = v73;
  }
  a2 = a3;
  v29 = swift_bridgeObjectRetain(v16);
  a1 = sub_1002981B0(v29, (void *)a2);
  LODWORD(v4) = v30;
  swift_bridgeObjectRelease(v16);

  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRelease(v16);
    v59 = Logger.Rename.unsafeMutableAddressor(v58);
    v60 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v75, v59, v9);
    v61 = (id)a2;
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc(22, -1);
      v65 = (_QWORD *)swift_slowAlloc(64, -1);
      v76 = v65;
      *(_DWORD *)v64 = 136315394;
      LODWORD(v71) = v4;
      v80 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, (uint64_t *)&v76);
      *(_QWORD *)&v66 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81).n128_u64[0];
      *(_WORD *)(v64 + 12) = 2080;
      v80 = objc_msgSend(v61, "identifier", v66);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      v68 = String.init<A>(describing:)(&v80, v67);
      v70 = v69;
      v80 = (id)sub_1000544FC(v68, v69, (uint64_t *)&v76);
      LOBYTE(v4) = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81);

      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[Erase] %s 5.1 Did not find an existing sidebar item to replace for source ID: %s. Skipping", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v75, v9);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v60, v9);
    }
    return !(v4 & 1);
  }
  v15 = (uint64_t)(id)a2;
  result = swift_isUniquelyReferenced_nonNull_native(v16);
  if ((result & 1) != 0)
  {
    v32 = v74;
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_19;
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_33:
  result = (uint64_t)sub_100452BF4(v16);
  v16 = (_QWORD **)result;
  v32 = v74;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_34;
LABEL_19:
  if (a1 < (unint64_t)v16[2])
  {
    v33 = &v16[4 * a1];
    v34 = v33[4];
    v35 = (uint64_t)v33[5];
    v36 = (uint64_t)v33[6];
    v33[5] = 0;
    v33[6] = 0;
    v33[4] = (_QWORD *)a2;
    v37 = *((_BYTE *)v33 + 56);
    *((_BYTE *)v33 + 56) = 4;
    sub_1000E4FD0(v34, v35, v36, v37);
    v38 = v71;
    swift_beginAccess(v71 + 88, &v80, 1, 0);
    v39 = *(_QWORD *)(v38 + 88);
    *(_QWORD *)(v38 + 88) = v16;
    swift_bridgeObjectRelease(v39);
    v41 = Logger.Rename.unsafeMutableAddressor(v40);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v32, v41, v9);
    v42 = (id)v15;
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc(42, -1);
      v73 = v10;
      v46 = v45;
      v47 = swift_slowAlloc(96, -1);
      v75 = (char *)v9;
      v48 = v47;
      v79 = v47;
      *(_DWORD *)v46 = 136315906;
      LODWORD(v71) = v4;
      v76 = (_QWORD *)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      *(_WORD *)(v46 + 12) = 2048;
      v76 = (_QWORD *)a1;
      *(_QWORD *)&v49 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77).n128_u64[0];
      *(_WORD *)(v46 + 22) = 2080;
      v76 = objc_msgSend(v42, "identifier", v49);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      v51 = String.init<A>(describing:)(&v76, v50);
      v53 = v52;
      v76 = (_QWORD *)sub_1000544FC(v51, v52, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);

      swift_bridgeObjectRelease(v53);
      *(_WORD *)(v46 + 32) = 2080;
      v77[0] = 0;
      v77[1] = 0;
      v76 = (_QWORD *)a2;
      v78 = 4;
      v54 = v42;
      v55 = String.init<A>(describing:)(&v76, &type metadata for DOCSidebarItem);
      v57 = v56;
      v76 = (_QWORD *)sub_1000544FC(v55, v56, &v79);
      LOBYTE(v4) = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);

      swift_bridgeObjectRelease(v57);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[Erase] %s 5.1 Replacing item at index: %ld of source ID: %s with item: %s", (uint8_t *)v46, 0x2Au);
      swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      (*(void (**)(char *, char *))(v73 + 8))(v74, v75);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);
    }
    *v72 = 1;
    return !(v4 & 1);
  }
LABEL_35:
  __break(1u);
  return result;
}

id sub_100297BFC@<X0>(void **a1@<X0>, void *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id result;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  id v47;
  id v48;
  _QWORD v49[2];
  char v50;
  uint64_t v51;

  v46 = a4;
  v45 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = objc_msgSend(v10, "identifier");
  v47 = a2;
  v12 = objc_msgSend(a2, "identifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  if (v13 == v16 && v15 == v17)
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);

    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
    {
      v21 = v46;
      *(_QWORD *)(v46 + 8) = 0;
      *(_QWORD *)(v21 + 16) = 0;
      *(_QWORD *)v21 = v10;
      *(_BYTE *)(v21 + 24) = 1;
      return v10;
    }
  }
  v23 = v47;
  v24 = v47;
  v25 = Logger.Rename.unsafeMutableAddressor(v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v6);
  v26 = v24;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(32, -1);
    v43 = v9;
    v30 = v29;
    v31 = swift_slowAlloc(96, -1);
    v51 = v31;
    *(_DWORD *)v30 = 136315650;
    v48 = (id)sub_1000544FC(0xD000000000000032, 0x80000001005212F0, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);
    *(_WORD *)(v30 + 12) = 2080;
    v49[0] = 0;
    v49[1] = 0;
    v48 = v47;
    v50 = 4;
    v32 = v26;
    v33 = String.init<A>(describing:)(&v48, &type metadata for DOCSidebarItem);
    v44 = v6;
    v35 = v34;
    v48 = (id)sub_1000544FC(v33, v34, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);

    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
    *(_WORD *)(v30 + 22) = 2080;
    v48 = objc_msgSend(v32, "identifier", v36);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v38 = String.init<A>(describing:)(&v48, v37);
    v40 = v39;
    v48 = (id)sub_1000544FC(v38, v39, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49);

    v41 = v40;
    v23 = v47;
    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[Erase] %s 7. Source Observer There is an Erase item adding sidebar item: %s for source id: %s", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy(v31, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v43, v44);
  }
  else
  {

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v42 = v46;
  *v45 = 1;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)v42 = v23;
  *(_BYTE *)(v42 + 24) = 4;
  return result;
}

void *sub_100297FD4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v23 = v3 & 0xC000000000000001;
    v21 = v3;
    v22 = *(id *)(a2 + direct field offset for DOCUSBEraseOperation.source);
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if (!v23)
        break;
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      a2 = i - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_18;
LABEL_9:
      v8 = v7;
      v9 = objc_msgSend(v7, "identifier");
      v10 = objc_msgSend(v22, "identifier");
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      if (v11 == v14 && v13 == v15)
      {

        swift_bridgeObjectRelease_n(v13, 2);
LABEL_17:
        swift_bridgeObjectRelease(v21);
        return v8;
      }
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) != 0)
        goto LABEL_17;

      v3 = v21;
      if (a2 == v4)
      {
        swift_bridgeObjectRelease(v21);
        return 0;
      }
    }
    v7 = *(id *)(v3 + 8 * i);
    a2 = i - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_9;
LABEL_18:
    __break(1u);
LABEL_19:
    if (v3 < 0)
      v20 = v3;
    else
      v20 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  swift_bridgeObjectRelease(v3);
  return 0;
}

uint64_t sub_1002981B0(uint64_t a1, void *a2)
{
  uint64_t v2;
  char *i;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v23;
  void *v24;

  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
    return 0;
  v2 = 0;
  for (i = (char *)(a1 + 56); ; i += 32)
  {
    v23 = v2;
    v4 = (void *)*((_QWORD *)i - 3);
    v5 = *((_QWORD *)i - 2);
    v6 = *((_QWORD *)i - 1);
    v7 = *i;
    sub_1000E4F7C(v4, v5, v6, *i);
    v24 = v4;
    sub_100201260((uint64_t)v4, v5, v6, v7);
    v9 = v8;
    v10 = objc_msgSend(v8, "sourceIdentifier");

    v11 = objc_msgSend(a2, "identifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    if (v12 == v15 && v14 == v16)
    {

      swift_bridgeObjectRelease_n(v14, 2);
      sub_1000E4FD0(v24, v5, v6, v7);
      return v23;
    }
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);

    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v18);
    sub_1000E4FD0(v24, v5, v6, v7);
    if ((v19 & 1) != 0)
      break;
    v2 = v23 + 1;
    if (v21 == v23 + 1)
      return 0;
  }
  return v23;
}

void sub_1002983D0(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;

  v2 = (id)_DocumentManagerBundle(a1);
  if (!v2)
    goto LABEL_24;
  v3 = v2;
  v4._countAndFlagsBits = 0x1000000000000026;
  v30._countAndFlagsBits = 0xD000000000000039;
  v30._object = (void *)0x80000001005121A0;
  v4._object = (void *)0x8000000100512150;
  v5._object = (void *)0x8000000100512180;
  v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v5._countAndFlagsBits = 0x1000000000000010;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v6, (NSBundle)v3, v5, v30);
  object = v7._object;

  v9._countAndFlagsBits = 0xD00000000000003FLL;
  v10._object = (void *)0x80000001005121E0;
  v9._object = (void *)0x8000000100512210;
  v10._countAndFlagsBits = 0xD000000000000027;
  v11 = DOCLocalizedDictionaryString(_:comment:)(v10, v9);
  v12 = objc_msgSend(v1, "items");
  v13 = sub_100298B84();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v27 = v14;
    else
      v27 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = objc_msgSend(v1, "items", swift_bridgeObjectRelease(v14).n128_f64[0]);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v13);

  if (!((unint64_t)v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_21:
    swift_bridgeObjectRelease(v17);
    __break(1u);
    goto LABEL_22;
  }
  if (v17 < 0)
    v28 = v17;
  else
    v28 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v17);
  if (!v29)
    goto LABEL_21;
LABEL_6:
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v18 = *(id *)(v17 + 32);
LABEL_9:
  v19 = v18;
  v20 = objc_msgSend(v18, "displayName", swift_bridgeObjectRelease(v17).n128_f64[0]);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (v15 == 1)
  {
    swift_bridgeObjectRelease(v11._object);
    v24 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v24, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v25 + 56) = &type metadata for String;
    *(_QWORD *)(v25 + 64) = sub_10006A638();
    *(_QWORD *)(v25 + 32) = v21;
    *(_QWORD *)(v25 + 40) = v23;
    static String.localizedStringWithFormat(_:_:)(v7._countAndFlagsBits, v7._object, v25);
  }
  else
  {
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v7._object);
    v26 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v25 + 56) = &type metadata for Int;
    *(_QWORD *)(v25 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v25 + 32) = v15;
    static String.localizedStringWithFormat(_:_:)(v11._countAndFlagsBits, v11._object, v25);
    object = v11._object;
  }
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v25);
}

char *sub_10029873C()
{
  char *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v12;

  v1 = objc_msgSend(v0, "items");
  v2 = sub_100298B84();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v12 = v3;
    else
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v4 < 1)
    return 0;
  v6 = objc_msgSend(v0, "items", v5);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v2);

  v8 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCUntrashOperation_restoreDirectory];
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCUntrashOperation_undoManager];
  v10 = v8;
  return sub_100298A8C(v7, v8, v9);
}

char *sub_10029887C()
{
  char *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;

  v1 = objc_msgSend(v0, "items");
  v2 = sub_100298B84();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v4 < 1)
    return 0;
  v6 = objc_msgSend(v0, "items", v5);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v2);

  v8 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCUntrashOperation_undoManager];
  v9 = objc_allocWithZone((Class)type metadata accessor for DOCTrashOperation());
  return sub_1002BE708(v7, v8);
}

id sub_100298A04()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUntrashOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCUntrashOperation()
{
  return objc_opt_self(_TtC5Files19DOCUntrashOperation);
}

char *sub_100298A8C(uint64_t a1, void *a2, void *a3)
{
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  Class isa;
  double v11;
  char *v12;
  void *v13;
  char *v14;
  objc_super v16;

  v6 = (objc_class *)type metadata accessor for DOCUntrashOperation();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCUntrashOperation_restoreDirectory] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files19DOCUntrashOperation_undoManager] = a3;
  sub_100298B84();
  v8 = a2;
  v9 = a3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(a1).n128_u64[0];
  v16.receiver = v7;
  v16.super_class = v6;
  v12 = (char *)objc_msgSendSuper2(&v16, "initWithItems:restoreDirectory:", isa, v8, v11);

  v13 = *(void **)&v12[OBJC_IVAR____TtC5Files19DOCUntrashOperation_undoManager];
  v14 = v12;
  objc_msgSend(v13, "registerUndoOperationForSender:", v14);

  return v14;
}

unint64_t sub_100298B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006419B0;
  if (!qword_1006419B0)
  {
    v1 = objc_opt_self(FPItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006419B0);
  }
  return result;
}

double sub_100298BC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  double result;

  v4 = a3;
  swift_retain();
  sub_100294540(1);

  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_100298BFC()
{
  uint64_t v0;

}

_QWORD *DOCFilterableOperationProgressCollectionSource.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  sub_100087534(v0[3], v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return v0;
}

uint64_t sub_100298C30()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  sub_100087534(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t DOCFilterableOperationProgressCollectionSource.unorderedItems.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 16, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t DOCFilterableOperationProgressCollectionSource.filteringPredicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 24, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  sub_10008BA00(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t DOCFilterableOperationProgressCollectionSource.filteringPredicate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 24, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return sub_100087534(v5, v6);
}

uint64_t (*DOCFilterableOperationProgressCollectionSource.filteringPredicate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100298D88()
{
  uint64_t v0;

  return static Array._allocateUninitialized(_:)(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t DOCFilterableOperationProgressCollectionSource.__deallocating_deinit()
{
  uint64_t v0;

  DOCFilterableOperationProgressCollectionSource.deinit();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_100298DB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100298DDC(_QWORD *a1)
{
  uint64_t v1;

  return sub_100347D94(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

double DOCTabbedBrowserViewController.performGoToNamedLocation(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  _QWORD *v8;
  id v9;
  double result;

  v7 = objc_msgSend(v3, "namedLocationResolver");
  v8 = (_QWORD *)swift_allocObject(&unk_1005D80B0, 40, 7);
  v8[2] = v3;
  v8[3] = a2;
  v8[4] = a3;
  v9 = v3;
  sub_10008BA00(a2, a3);
  sub_10036EE38(a1, (uint64_t)sub_10021C614, (uint64_t)v8);

  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void DOCTabbedBrowserViewController.selectAll(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, "splitBrowserViewController");
  v4 = objc_msgSend(v3, "fullDocumentManagerViewController");

  sub_10039E974(a1, 0);
}

void sub_100298FB4()
{
  void *v0;
  id v1;
  char *v2;
  void *v3;
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  _BYTE v12[24];

  v1 = objc_msgSend(v0, "splitBrowserViewController");
  v11 = objc_msgSend(v1, "fullDocumentManagerViewController");

  v2 = (char *)objc_msgSend(v11, "effectiveBrowserViewController");
  if (v2)
  {
    v3 = v2;
    v4 = (void **)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v12, 0, 0);
    v5 = *v4;
    if (*v4
      && (v6 = type metadata accessor for DOCItemCollectionViewController(0),
          (v7 = swift_dynamicCastClass(v5, v6)) != 0))
    {
      v8 = v7;
      v9 = v5;

      v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if (*(_BYTE *)(v8 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) != 1)
      {
        *(_BYTE *)(v8 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
        sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
        *(_BYTE *)(v8 + v10) = 0;
      }

    }
    else
    {

    }
  }
  else
  {

  }
}

void DOCTabbedBrowserViewController.canPerformKeyCommandAction(_:with:)(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  void *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  id v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  if ((static Selector.== infix(_:_:)("performGoToRecents:", a1) & 1) != 0
    || (static Selector.== infix(_:_:)("performGoToShared:", a1) & 1) != 0)
  {
    objc_msgSend(v1, "isShowingMovePanel");
    return;
  }
  if ((static Selector.== infix(_:_:)("performConnectToServer:", a1) & 1) != 0)
  {
    v3 = objc_msgSend(v1, "configuration");
    sub_10003796C(v3);

    return;
  }
  if ((static Selector.== infix(_:_:)("performGoToBrowse:", a1) & 1) == 0
    && (static Selector.== infix(_:_:)("performGoToDesktop:", a1) & 1) == 0
    && (static Selector.== infix(_:_:)("performGoToDocuments:", a1) & 1) == 0
    && (static Selector.== infix(_:_:)("performGoToDownloads:", a1) & 1) == 0
    && (static Selector.== infix(_:_:)("performGoToICloudDrive:", a1) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("performGoToEnclosingFolder:", a1) & 1) != 0)
    {
      if (objc_msgSend(v1, "effectiveTabSwitcherTab") == (id)2)
      {
        v4 = objc_msgSend(v1, "splitBrowserViewController");
        v5 = objc_msgSend(v4, "fullDocumentManagerViewController");

        objc_msgSend(v5, "canGoToEnclosingFolder");
      }
    }
    else if ((static Selector.== infix(_:_:)("selectAll:", a1) & 1) != 0)
    {
      v6 = objc_msgSend(v1, "effectiveFullBrowser");
      v7 = (char *)objc_msgSend(v6, "effectiveBrowserViewController");
      if (v7)
      {
        v8 = v7;
        v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v25, 0, 0);
        v10 = *v9;
        if (v10
          && (v11 = type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass(v10, v11)))
        {
          v12 = v10;

          sub_10024F2B0();
        }
        else
        {

        }
      }
      else
      {

      }
    }
    else if ((static Selector.== infix(_:_:)("performDeselectAll:", a1) & 1) != 0)
    {
      v13 = objc_msgSend(v1, "effectiveFullBrowser");
      v14 = (char *)objc_msgSend(v13, "effectiveBrowserViewController");
      if (!v14)
      {

        return;
      }
      v15 = v14;
      v16 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v25, 0, 0);
      v17 = *v16;
      if (*v16
        && (v18 = type metadata accessor for DOCItemCollectionViewController(0),
            (v19 = swift_dynamicCastClass(v17, v18)) != 0))
      {
        v20 = v19;
        v21 = v17;
        v22 = v15;
        v15 = v21;

        if (!*(_QWORD *)(v20 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
        {
          __break(1u);
          return;
        }
        v23 = sub_10004FD50();
        v24 = v23;
        if ((unint64_t)v23 >> 62)
        {
          if (v23 >= 0)
            v23 &= 0xFFFFFFFFFFFFFF8uLL;
          _CocoaArrayWrapper.endIndex.getter(v23);
        }
        swift_bridgeObjectRelease(v24);
      }
      else
      {

      }
    }
  }
}

uint64_t sub_10029997C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSURL *v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  _QWORD *v41;

  v38 = a3;
  v39 = a4;
  v37 = a2;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  v16 = *(id *)DOCLog.UI.unsafeMutableAddressor(v15);
  v18 = static os_log_type_t.info.getter(v17);
  v19 = sub_10006922C((uint64_t *)&unk_100644560);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
  sub_1002320B8(a1, (uint64_t)v14);
  v21 = String.init<A>(describing:)(v14, v9);
  v23 = v22;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_10006A638();
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v23;
  os_log(_:dso:log:type:_:)("Did resolve named location for key command to URL: %@", 53, 2, &_mh_execute_header, v16, v18, v20);

  v24 = v5;
  swift_bridgeObjectRelease(v20);
  sub_1002320B8(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    return sub_10000CB4C((uint64_t)v11, &qword_100643470);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
  URL._bridgeToObjectiveC()(v26);
  v28 = v27;
  v29 = (_QWORD *)swift_allocObject(&unk_1005D8178, 40, 7);
  v30 = v37;
  v31 = v38;
  v29[2] = v37;
  v29[3] = v31;
  v32 = v39;
  v29[4] = v39;
  aBlock[4] = sub_100299C44;
  v41 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005D8190;
  v33 = _Block_copy(aBlock);
  v34 = v41;
  v35 = v30;
  sub_10008BA00(v31, v32);
  swift_release(v34);
  objc_msgSend(v35, "revealDocumentAtURL:importIfNeeded:openDocument:revealContents:updateLastUsedDate:completion:", v28, 0, 0, 1, 1, v33);
  _Block_release(v33);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
}

id sub_100299C44(id result, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t (*v4)(id);

  if (!a2)
  {
    v3 = result;
    v4 = *(uint64_t (**)(id))(v2 + 24);
    result = objc_msgSend(*(id *)(v2 + 16), "switchToTab:", 2);
    if (v4)
      return (id)v4(v3);
  }
  return result;
}

double sub_100299C94(void *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  double result;

  v2 = (void *)objc_opt_self(UIDevice);

  static UIButton.Configuration.borderless()(v3);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, 3);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v4);
  v5 = a1;
  *(_QWORD *)&result = UIButton.Configuration.image.setter(a1).n128_u64[0];
  return result;
}

id sub_100299D74(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t ObjectType;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  objc_super v24;

  v3 = v2;
  ObjectType = swift_getObjectType(v2);
  v7 = &v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionManager];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionManager]);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionDelegate]);
  v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown] = 1;
  v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions] = _swiftEmptyArrayStorage;
  v8 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout;
  v9 = type metadata accessor for DOCInfoActionsView.ActionsLayout();
  v10 = (_QWORD *)swift_allocObject(v9, 40, 7);
  v11 = v3;
  v10[2] = sub_1003F1EF8((uint64_t)_swiftEmptyArrayStorage);
  v10[3] = _swiftEmptyArrayStorage;
  v10[4] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v3[v8] = v10;
  swift_unknownObjectWeakAssign(v7, a1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files18DOCInfoActionsView_configuration] = a2;
  v12 = a2;

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for DOCInfoActionsView();
  v13 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = qword_100640F48;
  v15 = v13;
  if (v14 != -1)
    swift_once(&qword_100640F48, sub_10029B924);
  objc_msgSend(v15, "setSpacing:", *(double *)&qword_100672B00);
  objc_msgSend(v15, "setDistribution:", 3);
  objc_msgSend(v15, "setAlignment:", 2);
  LODWORD(v16) = 1148846080;
  objc_msgSend(v15, "setContentHuggingPriority:forAxis:", 0, v16);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 0, v17);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v18);
  v19 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v20 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v20 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v21 = v15;
  v22 = UIView.registerForTraitChanges<A>(_:handler:)(v20, sub_10029B934, 0, ObjectType);
  swift_unknownObjectRelease(v22);
  swift_bridgeObjectRelease(v20);

  return v21;
}

void sub_10029A0E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double bottom;
  double v10;
  id v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout];
  v2 = qword_100640F40;
  swift_retain();
  if (v2 != -1)
    swift_once(&qword_100640F40, sub_10029A884);
  v3 = qword_10064BA40;
  swift_beginAccess(v1 + 32, v13, 1, 0);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  swift_release(v1);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v6 = 0.0;
  v7 = 0.0;
  if (v0[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown] == 1)
  {
    objc_msgSend(v0, "spacing", v5);
    v7 = v8;
  }
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  if (v0[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] == 1)
  {
    objc_msgSend(v0, "spacing");
    v6 = v10;
  }
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  v11 = objc_msgSend(v0, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, v7, bottom, v6);
  sub_10029AC1C((uint64_t)v11, v12);
}

double sub_10029A2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v3 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes) = a1;
  v5 = swift_bridgeObjectRetain(a1);
  v6 = == infix(_:_:)(v5, v4);
  swift_bridgeObjectRelease(a1);
  if ((v6 & 1) == 0)
  {
    v7 = *(_QWORD *)(v1 + v3);
    v8 = swift_bridgeObjectRetain(v7);
    sub_10029A78C(v8);
    swift_bridgeObjectRelease(v4);
    v4 = v7;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10029A35C()
{
  char *v0;
  double v1;
  double v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;
  CGRect v8;
  CGRect v9;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCInfoActionsView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  objc_msgSend(v0, "frame");
  if (!CGRectIsEmpty(v8))
  {
    objc_msgSend(v0, "systemLayoutSizeFittingSize:", 0.0, 0.0);
    v2 = v1;
    objc_msgSend(v0, "frame");
    if (CGRectGetWidth(v9) < v2)
    {
      v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout];
      swift_retain();
      v4 = sub_10029A944();
      swift_release(v3);
      if ((v4 & 1) != 0)
        sub_10029AC1C(v5, v6);
    }
  }
}

id sub_10029A484(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for DOCInfoActionsView();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_10029A4D4(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7, SEL *a8)
{
  objc_class *v15;
  const char *v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  objc_super v24;
  objc_super v25;

  v15 = (objc_class *)type metadata accessor for DOCInfoActionsView();
  v25.receiver = a1;
  v25.super_class = v15;
  v16 = *a7;
  v17 = a1;
  objc_msgSendSuper2(&v25, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24.receiver = v17;
  v24.super_class = v15;
  objc_msgSendSuper2(&v24, *a8, a2, a3, a4, a5);
  sub_10029A5B0(a7, v19, v21, v23);

}

void sub_10029A5B0(SEL *a1, double a2, double a3, double a4)
{
  char *v4;
  id v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v6 = objc_msgSend(v4, *a1);
  if ((v9 != 0.0 || v8 != 0.0) && v8 != a4)
  {
    if (v8 > a4)
    {
      v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout];
      v13 = qword_100640F40;
      swift_retain();
      if (v13 != -1)
        swift_once(&qword_100640F40, sub_10029A884);
      v14 = qword_10064BA40;
      swift_beginAccess(v12 + 32, v16, 1, 0);
      v15 = *(_QWORD *)(v12 + 32);
      *(_QWORD *)(v12 + 32) = v14;
      swift_bridgeObjectRetain(v14);
      swift_release(v12);
      swift_bridgeObjectRelease(v15);
    }
    sub_10029AC1C((uint64_t)v6, v7);
  }
}

void sub_10029A688(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v3 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions);
  v5 = swift_bridgeObjectRetain(v4);
  LOBYTE(a1) = sub_10023DEDC(v5, a1);
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout);
    v7 = *(_QWORD *)(v1 + v3);
    v8 = *(_QWORD *)(v6 + 24);
    *(_QWORD *)(v6 + 24) = v7;
    swift_bridgeObjectRetain_n(v7, 2);
    swift_retain();
    swift_bridgeObjectRelease(v8);
    if (qword_100640F40 != -1)
      swift_once(&qword_100640F40, sub_10029A884);
    v9 = qword_10064BA40;
    swift_beginAccess(v6 + 32, v13, 1, 0);
    v10 = *(_QWORD *)(v6 + 32);
    *(_QWORD *)(v6 + 32) = v9;
    swift_bridgeObjectRetain(v9);
    swift_release(v6);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
    sub_10029AC1C(v11, v12);
  }
}

void sub_10029A78C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions] = _swiftEmptyArrayStorage;
  sub_10029A688(v5);
  swift_bridgeObjectRelease(v5);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionManager]);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = UIDocumentBrowserActionAvailabilityPreviewPanel;
    v9 = *(id *)&v2[OBJC_IVAR____TtC5Files18DOCInfoActionsView_configuration];
    v10 = sub_10034F94C(a1, v8, 0, (uint64_t)v9, 0, 0);

    v11 = *(_QWORD *)&v2[v4];
    *(_QWORD *)&v2[v4] = v10;
    sub_10029A688(v11);

    swift_bridgeObjectRelease(v11);
  }
  else
  {
    objc_msgSend(v1, "setHidden:", 1);
  }
}

uint64_t sub_10029A884()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  uint64_t result;
  uint64_t v7;

  v0 = sub_10006922C(&qword_100643CC0);
  inited = swift_initStackObject(v0, &v7);
  *(_OWORD *)(inited + 16) = xmmword_1004D9880;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(WFReduceFileSizeFilesActionIdentifier);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(WFExportAsFilesActionIdentifier);
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(WFRemoveBackgroundFilesActionIdentifier);
  *(_QWORD *)(inited + 72) = v4;
  v5 = sub_1003F98B8(inited);
  swift_setDeallocating(inited);
  result = swift_arrayDestroy(inited + 32, 3, &type metadata for String);
  qword_10064BA40 = v5;
  return result;
}

unint64_t sub_10029A944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t result;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD v28[3];
  uint64_t v29[2];
  char v30[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  v28[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v2 >> 62)
    goto LABEL_27;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain(v2);
LABEL_3:
  v27 = (uint64_t *)(v1 + 32);
  swift_beginAccess(v1 + 32, v30, 0, 0);
  if (v3)
  {
    v4 = 0;
    v26 = v1;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          if (v2 < 0)
            v25 = v2;
          else
            v25 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_retain();
          swift_bridgeObjectRetain(v2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v25);
          goto LABEL_3;
        }
        v7 = *(id *)(v2 + 8 * v4 + 32);
      }
      v8 = v7;
      v9 = v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_26;
      v1 = v3;
      v10 = *v27;
      swift_bridgeObjectRetain(*v27);
      v11 = objc_msgSend(v8, "identifier");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      LOBYTE(v11) = sub_100477BFC(v12, v14, v10);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v10);
      if ((v11 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v5 = *(_QWORD *)(v28[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
        v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
        specialized ContiguousArray._endMutation()(v6);
      }
      v3 = v1;
      ++v4;
      if (v9 == v1)
      {
        v16 = v28[0];
        v1 = v26;
        goto LABEL_16;
      }
    }
  }
  v16 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_16:
  swift_bridgeObjectRelease(v2);
  swift_release(v1);
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
      goto LABEL_19;
LABEL_32:
    swift_release(v16);
    return v17 != 0;
  }
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v17)
    goto LABEL_32;
LABEL_19:
  result = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_35:
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v16);
    goto LABEL_24;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v16 + 16))
  {
    v19 = *(id *)(v16 + 8 * result + 32);
LABEL_24:
    v20 = v19;
    v21 = objc_msgSend(v19, "identifier", swift_release(v16).n128_f64[0]);
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    swift_beginAccess(v27, v28, 33, 0);
    sub_10007AB00(v29, v22, v24);
    swift_endAccess(v28);

    swift_bridgeObjectRelease(v29[1]);
    return v17 != 0;
  }
  __break(1u);
  return result;
}

void sub_10029AC1C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double leading;
  double bottom;
  double trailing;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  double v44;
  NSString v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  id v59;
  id v60;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  UIFontTextStyle v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  Swift::Int v85;
  unint64_t v86;
  uint64_t *v87;
  char *v88;
  _QWORD *v89;
  _BYTE v90[24];
  char v91[24];
  char v92[32];

  v3 = type metadata accessor for UIButton.Configuration(0, a2);
  v81 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v80 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (uint64_t)&v78 - v7;
  v9 = objc_msgSend(v2, "arrangedSubviews", v6);
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v16 = v11;
    else
      v16 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v11);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  v13 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    else
      v14 = *(id *)(v11 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    objc_msgSend(v88, "removeArrangedSubview:", v14);
    objc_msgSend(v15, "removeFromSuperview");

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease(v11);
  v17 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout;
  v18 = (uint64_t)v88;
  v19 = *(_QWORD *)&v88[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout];
  swift_beginAccess(v19 + 16, v92, 1, 0);
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v19 + 16) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions);
  v82 = v3;
  if ((unint64_t)v21 >> 62)
    goto LABEL_59;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v21);
  if (v22)
    goto LABEL_15;
LABEL_35:
  swift_bridgeObjectRelease(v21);
  v21 = *(_QWORD *)(v18 + v17);
  v18 = *(_QWORD *)(v21 + 24);
  v89 = _swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v77 = v18;
    else
      v77 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v18);
    v63 = _CocoaArrayWrapper.endIndex.getter(v77);
  }
  else
  {
    v63 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain(v18);
  }
  v87 = (uint64_t *)(v21 + 32);
  swift_beginAccess(v21 + 32, v90, 0, 0);
  if (v63)
  {
    v64 = 0;
    v85 = v21;
    v86 = v18 & 0xC000000000000001;
    while (1)
    {
      if (v86)
      {
        v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v18);
      }
      else
      {
        if (v64 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          if (v21 < 0)
            v76 = v21;
          else
            v76 = v21 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v21);
          v22 = _CocoaArrayWrapper.endIndex.getter(v76);
          if (!v22)
            goto LABEL_35;
LABEL_15:
          v23 = v8;
          v84 = 0;
          v86 = v21 & 0xC000000000000001;
          v24 = 4;
          leading = NSDirectionalEdgeInsetsZero.leading;
          bottom = NSDirectionalEdgeInsetsZero.bottom;
          trailing = NSDirectionalEdgeInsetsZero.trailing;
          v78 = UIFontTextStyleBody;
          v79 = v17;
          v85 = v21;
          v83 = (uint64_t *)v22;
          while (1)
          {
            if (v86)
              v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v21);
            else
              v28 = *(id *)(v21 + 8 * v24);
            v29 = v28;
            if (__OFADD__(v24 - 4, 1))
              goto LABEL_56;
            v87 = (uint64_t *)(v24 - 3);
            v30 = *(_QWORD *)(v18 + v17);
            swift_beginAccess(v30 + 32, v91, 0, 0);
            v21 = *(_QWORD *)(v30 + 32);
            swift_retain();
            swift_bridgeObjectRetain(v21);
            v31 = objc_msgSend(v29, "identifier");
            v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
            v34 = v33;

            v8 = sub_100477BFC(v32, v34, v21);
            swift_release(v30);
            swift_bridgeObjectRelease(v34);
            *(_QWORD *)&v35 = swift_bridgeObjectRelease(v21).n128_u64[0];
            if ((v8 & 1) != 0)
            {
              v8 = (uint64_t)v29;
            }
            else
            {
              v36 = v82;
              if (__OFADD__(v84, 1))
                goto LABEL_57;
              if (v84 + 1 >= 5)
              {

                v21 = v85;
                goto LABEL_35;
              }
              ++v84;
              v37 = objc_msgSend(v29, "image", v35);
              v38 = (void *)objc_opt_self(UIDevice);

              static UIButton.Configuration.borderless()(v39);
              UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
              v40 = (void *)objc_opt_self(UIImageSymbolConfiguration);
              UIButton.Configuration.preferredSymbolConfigurationForImage.setter(objc_msgSend(v40, "configurationWithTextStyle:scale:", v78, 3));
              UIButton.Configuration.image.setter(v37);
              sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
              v41 = v81;
              v42 = v80;
              (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v23, v36);
              v43 = (void *)UIButton.init(configuration:primaryAction:)(v42, 0);
              objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
              LODWORD(v44) = 1148846080;
              objc_msgSend(v43, "setContentHuggingPriority:forAxis:", 0, v44);
              v8 = v43;
              v45 = objc_msgSend(v29, "localizedTitle");
              if (!v45)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(0);
                v48 = v47;
                v45 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v46 = swift_bridgeObjectRelease(v48).n128_u64[0];
              }
              objc_msgSend((id)v8, "setAccessibilityLabel:", v45, v46, v78);

              sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
              v49 = swift_allocObject(&unk_1005D81C8, 24, 7);
              swift_unknownObjectWeakInit(v49 + 16);
              v50 = swift_allocObject(&unk_1005D81F0, 24, 7);
              v18 = (uint64_t)v88;
              swift_unknownObjectWeakInit(v50 + 16);
              v51 = swift_allocObject(&unk_1005D8218, 32, 7);
              *(_QWORD *)(v51 + 16) = v49;
              *(_QWORD *)(v51 + 24) = v50;
              v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v52, 0, 0, 0, sub_10029BA2C, v51);
              objc_msgSend((id)v8, "setDoc_primaryAction:", v53);

              (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v23, v36);
              v17 = v79;
              v54 = *(_QWORD *)(v18 + v79);
              swift_beginAccess(v54 + 16, v90, 33, 0);
              v21 = *(_QWORD *)(v54 + 16);
              if ((v21 & 0xC000000000000001) != 0)
              {
                if (v21 >= 0)
                  v21 &= 0xFFFFFFFFFFFFFF8uLL;
                v55 = (id)v8;
                swift_retain();
                v56 = v29;
                v58 = __CocoaDictionary.count.getter(v21, v57);
                if (__OFADD__(v58, 1))
                  goto LABEL_58;
                v21 = sub_1002DA8A0(v21, v58 + 1);
                *(_QWORD *)(v54 + 16) = v21;
              }
              else
              {
                v59 = (id)v8;
                swift_retain();
                v60 = v29;
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
              v89 = *(_QWORD **)(v54 + 16);
              *(_QWORD *)(v54 + 16) = 0x8000000000000000;
              sub_1003573FC((uint64_t)v29, (void *)v8, isUniquelyReferenced_nonNull_native);
              v62 = *(_QWORD *)(v54 + 16);
              *(_QWORD *)(v54 + 16) = v89;
              swift_bridgeObjectRelease(v62);
              swift_endAccess(v90);
              swift_release(v54);

              objc_msgSend((id)v18, "addArrangedSubview:", v8);
            }
            v21 = v85;

            ++v24;
            if (v87 == v83)
              goto LABEL_35;
          }
        }
        v66 = *(id *)(v18 + 8 * v64 + 32);
      }
      v67 = v66;
      v17 = v64 + 1;
      if (__OFADD__(v64, 1))
        goto LABEL_55;
      v68 = *v87;
      swift_bridgeObjectRetain(*v87);
      v69 = objc_msgSend(v67, "identifier");
      v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
      v21 = v71;

      v8 = sub_100477BFC(v70, v21, v68);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v68);
      if ((v8 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v72);
        v21 = v89[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
        v65 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v67);
        specialized ContiguousArray._endMutation()(v65);
      }
      ++v64;
      if (v17 == v63)
      {
        v73 = v88;
        v74 = (unint64_t)v89;
        v21 = v85;
        goto LABEL_50;
      }
    }
  }
  v74 = (unint64_t)_swiftEmptyArrayStorage;
  v73 = v88;
LABEL_50:
  swift_bridgeObjectRelease(v18);
  swift_release(v21);
  if ((v74 & 0x8000000000000000) != 0 || (v74 & 0x4000000000000000) != 0)
    v75 = _CocoaArrayWrapper.endIndex.getter(v74);
  else
    v75 = *(_QWORD *)(v74 + 16);
  objc_msgSend(v73, "setHidden:", v75 == 0, swift_release(v74).n128_f64[0]);
}

void sub_10029B510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, &v10, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (v8)
    {
      v9 = (void *)v8;
      sub_10029B598(v6);

      v6 = v9;
    }

  }
}

void sub_10029B598(void *a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void (**v17)(_QWORD, _QWORD, _QWORD);
  Class isa;
  _BYTE v19[24];

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionDelegate);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionManager);
    if (!v5)
    {
      swift_unknownObjectRelease(v4);
      return;
    }
    v6 = (void *)v5;
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout);
    swift_beginAccess(v7 + 16, v19, 0, 0);
    v8 = *(_QWORD *)(v7 + 16);
    v9 = a1;
    swift_bridgeObjectRetain(v8);
    v10 = sub_1001D3620(v9, v8);

    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v8).n128_u64[0];
    if (!v10)
    {
      swift_unknownObjectRelease(v4);

      return;
    }
    v12 = objc_msgSend(v4, "actionContextFrom:", v9, v11);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes);
    swift_bridgeObjectRetain(v13);
    if (objc_msgSend(v10, "requiresResolvedItems"))
    {
      v14 = v10;
      v15 = v12;
      sub_10035E100(v13, v14, v15);
      swift_bridgeObjectRelease(v13);

    }
    else
    {
      v16 = objc_msgSend(v10, "unresolvedHandler");
      if (!v16)
      {

        swift_bridgeObjectRelease(v13);
        goto LABEL_12;
      }
      v17 = (void (**)(_QWORD, _QWORD, _QWORD))v16;
      v15 = v12;
      _Block_copy(v17);
      sub_10006922C((uint64_t *)&unk_1006424B0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, id))v17)[2](v17, isa, v15);

      _Block_release(v17);
      _Block_release(v17);
      swift_bridgeObjectRelease(v13);
    }

LABEL_12:
    swift_unknownObjectRelease(v4);

  }
}

double sub_10029B7D0()
{
  uint64_t v0;
  double result;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionManager);

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionDelegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_loadedActions));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout)).n128_u64[0];
  return result;
}

id sub_10029B83C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInfoActionsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCInfoActionsView()
{
  return objc_opt_self(_TtC5Files18DOCInfoActionsView);
}

uint64_t type metadata accessor for DOCInfoActionsView.ActionsLayout()
{
  return objc_opt_self(_TtCC5Files18DOCInfoActionsViewP33_3F6D46ED66C67E429CED8D28665D192413ActionsLayout);
}

void sub_10029B924()
{
  qword_100672B00 = 0x4032000000000000;
}

void sub_10029B934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout);
  v2 = qword_100640F40;
  swift_retain();
  if (v2 != -1)
    swift_once(&qword_100640F40, sub_10029A884);
  v3 = qword_10064BA40;
  swift_beginAccess(v1 + 32, v7, 1, 0);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v3;
  swift_bridgeObjectRetain(v3);
  swift_release(v1);
  swift_bridgeObjectRelease(v4);
  sub_10029AC1C(v5, v6);
}

uint64_t sub_10029B9DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10029BA00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10029BA2C(uint64_t a1)
{
  uint64_t v1;

  sub_10029B510(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10029BA38(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::Int v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  uint64_t v44;

  v32 = a5;
  v33 = a8;
  v38 = a1;
  v39 = a2;
  v31 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8));
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = __chkstk_darwin(AssociatedTypeWitness);
  v36 = (char *)&v29 - v16;
  v41 = a4;
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness(0, a6);
  v34 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v21)
    return static Array._allocateUninitialized(_:)(0, v41);
  v22 = v21;
  v30 = v18;
  v23 = v41;
  v44 = ContiguousArray.init()(v41);
  v37 = type metadata accessor for ContiguousArray(0, v23);
  ContiguousArray.reserveCapacity(_:)(v22);
  v41 = v20;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v35;
    v25 = v36;
    while (1)
    {
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v43, v41, a3, a6);
      (*(void (**)(char *))(v14 + 16))(v25);
      v27(v43, 0);
      v28 = v42;
      v38(v25, v40);
      if (v28)
        break;
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v26, v37);
      dispatch thunk of Collection.formIndex(after:)(v41, a3, a6);
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
        return v44;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
    swift_release(v44);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v40, v32);
  }
  return result;
}

uint64_t DOCGenericOperationCombinedProgress.__allocating_init(operations:observing:)(uint64_t a1, uint64_t a2)
{
  return sub_10029BD2C(a1, a2, DOCGenericOperationCombinedProgress.init(operations:observing:));
}

uint64_t DOCFileOperationCombinedProgress.__allocating_init(operations:observing:)(uint64_t a1, uint64_t a2)
{
  return sub_10029BD2C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))DOCFileOperationCombinedProgress.init(operations:observing:));
}

uint64_t sub_10029BD2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;

  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return a3(a1, a2);
}

void DOCFileOperationCombinedProgress.init(operations:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v24 = sub_10006922C(&qword_100644CB0);
  v5 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v22 = a2;
    v23 = v2;
    v25 = _swiftEmptyArrayStorage;
    sub_10015528C(0, v8, 0);
    v9 = v25;
    v10 = type metadata accessor for DOCFileOperation(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v21 = a1;
    v13 = a1 + ((v12 + 32) & ~v12);
    v14 = *(_QWORD *)(v11 + 72);
    v15 = v24;
    do
    {
      v16 = &v7[*(int *)(v15 + 28)];
      *((_QWORD *)v16 + 3) = v10;
      *((_QWORD *)v16 + 4) = &protocol witness table for DOCFileOperation;
      v17 = sub_10006CBAC(v16);
      sub_100294F04(v13, (uint64_t)v17);
      sub_100294F04((uint64_t)v17, (uint64_t)v7);
      v25 = v9;
      v19 = v9[2];
      v18 = v9[3];
      if (v19 >= v18 >> 1)
      {
        sub_10015528C(v18 > 1, v19 + 1, 1);
        v15 = v24;
        v9 = v25;
      }
      v9[2] = v19 + 1;
      sub_10029EE80((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v19);
      v13 += v14;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v21);
    a2 = v22;
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v9 = _swiftEmptyArrayStorage;
  }
  sub_10029C190((uint64_t)v9, a2);
}

uint64_t sub_10029BF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v38[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (_QWORD *)(v3 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(v3 + direct field offset for DOCOperationCombinedProgress.state) = 4;
  v11 = v3 + direct field offset for DOCOperationCombinedProgress.progressValue;
  *(_QWORD *)v11 = 0;
  *(_WORD *)(v11 + 8) = 256;
  v12 = (uint64_t *)(v3 + qword_10064BBD0);
  swift_retain();
  v14 = UUID.init()(v13);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = sub_100087794(6, v15, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease(v17);
  *v12 = v18;
  v12[1] = v20;
  v12[2] = v22;
  v12[3] = v24;
  v25 = (unint64_t *)(v3 + qword_10064BBE0);
  *v25 = sub_10008AFB0((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + qword_10064BBD8) = a2;
  v26 = sub_10008AFB0((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(v25, v38, 1, 0);
  v27 = *v25;
  *v25 = v26;
  swift_release(v3);
  swift_bridgeObjectRelease(v27);
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)(v3 + 32) = 0;
  v28 = v3 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v29 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)(v3 + 16) = 0x3FE0000000000000;
  v31 = *(_QWORD *)(v3 + 32);
  v32 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    *(_QWORD *)(v3 + 32) = v32;
    v33 = *(_QWORD *)(a1 + 16);
    if (v33)
    {
      swift_retain_n(v3, 2);
      swift_bridgeObjectRetain(a1);
      v34 = (_QWORD *)(a1 + 64);
      do
      {
        sub_10029DB44((uint64_t)(v34 - 4), v34);
        v34 += 9;
        --v33;
      }
      while (v33);
      result = swift_bridgeObjectRelease(a1);
      v35 = *(_QWORD *)(v3 + 32);
      v36 = v35 - 1;
      if (!__OFSUB__(v35, 1))
        goto LABEL_6;
    }
    else
    {
      result = swift_retain_n(v3, 2);
      v36 = v32 - 1;
      if (!__OFSUB__(v32, 1))
      {
LABEL_6:
        *(_QWORD *)(v3 + 32) = v36;
        swift_release(v3);
        swift_bridgeObjectRelease(a1);
        sub_10009F3B8();
        swift_release(v3);
        return v3;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10029C190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (_QWORD *)(v3 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(v3 + direct field offset for DOCOperationCombinedProgress.state) = 4;
  v11 = v3 + direct field offset for DOCOperationCombinedProgress.progressValue;
  *(_QWORD *)v11 = 0;
  *(_WORD *)(v11 + 8) = 256;
  v12 = (uint64_t *)(v3 + qword_10064BBD0);
  swift_retain();
  v14 = UUID.init()(v13);
  v15 = UUID.uuidString.getter(v14);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = sub_100087794(6, v15, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease(v17);
  *v12 = v18;
  v12[1] = v20;
  v12[2] = v22;
  v12[3] = v24;
  v25 = (unint64_t *)(v3 + qword_10064BBE0);
  *v25 = sub_1003F2754((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + qword_10064BBD8) = a2;
  v26 = sub_1003F2754((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(v25, v40, 1, 0);
  v27 = *v25;
  *v25 = v26;
  swift_release(v3);
  swift_bridgeObjectRelease(v27);
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)(v3 + 32) = 0;
  v28 = v3 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v29 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)(v3 + 16) = 0x3FE0000000000000;
  v30 = *(_QWORD *)(v3 + 32);
  v31 = v30 + 1;
  if (!__OFADD__(v30, 1))
  {
    *(_QWORD *)(v3 + 32) = v31;
    v32 = *(_QWORD *)(a1 + 16);
    if (v32)
    {
      v33 = sub_10006922C(&qword_100644CB0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = a1 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      v36 = *(_QWORD *)(v34 + 72);
      swift_retain_n(v3, 2);
      swift_bridgeObjectRetain(a1);
      do
      {
        sub_10029DE44(v35, (_QWORD *)(v35 + *(int *)(v33 + 28)));
        v35 += v36;
        --v32;
      }
      while (v32);
      swift_bridgeObjectRelease(a1);
      v37 = *(_QWORD *)(v3 + 32);
      v38 = v37 - 1;
      if (!__OFSUB__(v37, 1))
        goto LABEL_6;
    }
    else
    {
      swift_retain_n(v3, 2);
      v38 = v31 - 1;
      if (!__OFSUB__(v31, 1))
      {
LABEL_6:
        *(_QWORD *)(v3 + 32) = v38;
        swift_release(v3);
        swift_bridgeObjectRelease(a1);
        sub_1004056B4();
        swift_release(v3);
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t DOCFileOperationCombinedProgress.add(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v8;

  v2 = sub_10006922C(&qword_100644CB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100294F04(a1, (uint64_t)v4);
  v5 = &v4[*(int *)(v2 + 28)];
  *((_QWORD *)v5 + 3) = type metadata accessor for DOCFileOperation(0);
  *((_QWORD *)v5 + 4) = &protocol witness table for DOCFileOperation;
  v6 = sub_10006CBAC(v5);
  sub_100294F04(a1, (uint64_t)v6);
  sub_10029DE44((uint64_t)v4, v5);
  return sub_10000CB4C((uint64_t)v4, &qword_100644CB0);
}

uint64_t DOCGenericOperationCombinedProgress.deinit()
{
  return sub_10029E848((void (*)(_QWORD, _QWORD))sub_10029F02C);
}

uint64_t DOCOperationCombinedProgress.deinit()
{
  uint64_t v0;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  sub_100087534(*(_QWORD *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler), *(_QWORD *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBD0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBD8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBE0));
  return v0;
}

uint64_t DOCGenericOperationCombinedProgress.__deallocating_deinit()
{
  return sub_10029E8CC((void (*)(_QWORD, _QWORD))sub_10029F02C);
}

uint64_t DOCOperationCombinedProgress.updateHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler, v4, 0, 0);
  v2 = *v1;
  sub_10008BA00(*v1, v1[1]);
  return v2;
}

uint64_t DOCOperationCombinedProgress.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100087534(v6, v7);
}

uint64_t (*DOCOperationCombinedProgress.updateHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + direct field offset for DOCOperationCombinedProgress.updateHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t DOCOperationCombinedProgress.state.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + direct field offset for DOCOperationCombinedProgress.state);
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.state, v3, 0, 0);
  return *v1;
}

uint64_t DOCOperationCombinedProgress.state.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + direct field offset for DOCOperationCombinedProgress.state);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*DOCOperationCombinedProgress.state.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + direct field offset for DOCOperationCombinedProgress.state, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t DOCOperationCombinedProgress.progressValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + direct field offset for DOCOperationCombinedProgress.progressValue;
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.progressValue, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t DOCOperationCombinedProgress.progressValue.setter(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2;
  *(_BYTE *)(v5 + 9) = HIBYTE(a2) & 1;
  return result;
}

uint64_t (*DOCOperationCombinedProgress.progressValue.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + direct field offset for DOCOperationCombinedProgress.progressValue, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Void __swiftcall DOCOperationCombinedProgress.reset()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v1 = *v0;
  v2 = (uint64_t *)((char *)v0 + qword_10064BBE0);
  swift_beginAccess(v2, v16, 0, 0);
  v15 = *v2;
  v14 = *(_QWORD *)(v1 + 296);
  v5 = type metadata accessor for DOCOperationProgress(255, v14, v3, v4);
  v7 = type metadata accessor for Dictionary(0, &type metadata for AnyHashable, v5, &protocol witness table for AnyHashable, v6);
  swift_bridgeObjectRetain(v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v7);
  v10 = sub_10029BA38((void (*)(char *, char *))sub_10029EEC8, (uint64_t)&v13, v7, (char *)&type metadata for AnyHashable, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
  swift_bridgeObjectRelease(v15);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + 32;
    swift_bridgeObjectRetain(v10);
    do
    {
      sub_10029DA2C(v12);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v10);
  }
}

uint64_t DOCOperationCombinedProgress.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;

  v1 = v0;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = _typeName(_:qualified:)(*v0, 0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x496775626564203ALL;
  v4._object = (void *)0xEC000000203D2044;
  String.append(_:)(v4);
  v5 = *(_QWORD *)((char *)v0 + qword_10064BBD0);
  v6 = *(_QWORD *)((char *)v1 + qword_10064BBD0 + 8);
  v7 = *(_QWORD *)((char *)v1 + qword_10064BBD0 + 16);
  v8 = *(_QWORD *)((char *)v1 + qword_10064BBD0 + 24);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = static String._fromSubstring(_:)(v5, v6, v7, v8);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 0x20736D657469203BLL;
  v11._object = (void *)0xEB0000000028203DLL;
  String.append(_:)(v11);
  v12._countAndFlagsBits = sub_10029CAA4();
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._countAndFlagsBits = 15913;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  return 60;
}

uint64_t sub_10029CAA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v1 = *v0;
  v2 = (uint64_t *)((char *)v0 + qword_10064BBE0);
  swift_beginAccess((char *)v0 + qword_10064BBE0, v18, 0, 0);
  v17 = *v2;
  v16 = *(_QWORD *)(v1 + 296);
  v5 = type metadata accessor for DOCOperationProgress(255, v16, v3, v4);
  v7 = type metadata accessor for Dictionary(0, &type metadata for AnyHashable, v5, &protocol witness table for AnyHashable, v6);
  swift_bridgeObjectRetain(v17);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v7);
  v10 = sub_10029BA38((void (*)(char *, char *))sub_10029F008, (uint64_t)&v15, v7, (char *)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
  swift_bridgeObjectRelease(v17);
  v17 = v10;
  v11 = sub_10006922C(&qword_10064F390);
  v12 = sub_1000DBBA4();
  v13 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v11, v12);
  swift_bridgeObjectRelease(v10);
  return v13;
}

uint64_t sub_10029CBCC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v1 = (uint64_t *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler, v5, 1, 0);
  v2 = *v1;
  v3 = v1[1];
  *v1 = 0;
  v1[1] = 0;
  return sub_100087534(v2, v3);
}

uint64_t sub_10029CC18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = *v0;
  v2 = (uint64_t *)((char *)v0 + qword_10064BBE0);
  swift_beginAccess((char *)v0 + qword_10064BBE0, v15, 0, 0);
  v14 = *v2;
  v13 = *(_QWORD *)(v1 + 296);
  v5 = (char *)type metadata accessor for DOCOperationProgress(255, v13, v3, v4);
  v7 = type metadata accessor for Dictionary(0, &type metadata for AnyHashable, v5, &protocol witness table for AnyHashable, v6);
  swift_bridgeObjectRetain(v14);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v7);
  v10 = sub_10029BA38((void (*)(char *, char *))sub_10029EF84, (uint64_t)&v12, v7, v5, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
  swift_bridgeObjectRelease(v14);
  return v10;
}

uint64_t sub_10029CCFC()
{
  uint64_t v0;
  char v1;
  char v2;
  double v3;
  __int16 v4;
  __int16 v5;
  _BYTE *v6;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  sub_10029E350();
  v2 = v1;
  v3 = COERCE_DOUBLE(sub_10029E4A8());
  v5 = v4;
  v6 = (_BYTE *)(v0 + direct field offset for DOCOperationCombinedProgress.state);
  v7 = 1;
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.state, v15, 1, 0);
  v8 = *v6;
  switch(v8)
  {
    case 2:
      if (v2 == 2)
        goto LABEL_10;
      goto LABEL_8;
    case 3:
      if (v2 == 3)
        goto LABEL_10;
LABEL_8:
      v7 = 1;
      goto LABEL_16;
    case 4:
      goto LABEL_16;
  }
  if ((v2 & 0xFE) == 2 || (v2 & 1) == ((v8 & 1) == 0))
    goto LABEL_8;
LABEL_10:
  v9 = v0 + direct field offset for DOCOperationCombinedProgress.progressValue;
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.progressValue, v13, 0, 0);
  v10 = *(unsigned __int8 *)(v9 + 9) & ((unsigned __int16)(v5 & 0x100) >> 8);
  if ((*(_BYTE *)(v9 + 9) & 1) == 0 && (v5 & 0x100) == 0)
  {
    LOBYTE(v10) = *(_BYTE *)(v9 + 8) & v5;
    if ((*(_BYTE *)(v9 + 8) & 1) == 0 && (v5 & 1) == 0)
      LOBYTE(v10) = *(double *)v9 == v3;
  }
  v7 = v10 ^ 1;
LABEL_16:
  *v6 = v2;
  v11 = v0 + direct field offset for DOCOperationCombinedProgress.progressValue;
  swift_beginAccess(v11, v14, 1, 0);
  *(double *)v11 = v3;
  *(_BYTE *)(v11 + 8) = v5;
  *(_BYTE *)(v11 + 9) = HIBYTE(v5) & 1;
  return v7 & 1;
}

void sub_10029CE64()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, __n128);
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v1 = v0 + direct field offset for DOCOperationCombinedProgress.updateHandler;
  swift_beginAccess(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler, v5, 0, 0);
  v2 = *(void (**)(uint64_t, __n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain();
    v2(v0, v4);
    sub_100087534((uint64_t)v2, v3);
  }
}

double sub_10029CED8()
{
  return sub_10029CEF0((uint64_t)sub_10029EF6C);
}

double sub_10029CEE4()
{
  return sub_10029CEF0((uint64_t)sub_10029EF54);
}

double sub_10029CEF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t WitnessTable;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v1;
  v12 = sub_10029CC18();
  v11 = *(_QWORD *)(v3 + 296);
  v6 = type metadata accessor for DOCOperationProgress(255, v11, v4, v5);
  v7 = type metadata accessor for Array(0, v6);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  Sequence.forEach(_:)(a1, &v10, v7, WitnessTable);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_10029CF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  _QWORD v53[5];
  _BYTE v54[32];

  v0 = sub_10040568C();
  v1 = v0;
  v53[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v1);
    v8 = (unint64_t)_swiftEmptyArrayStorage;
    v9 = v46;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_40;
    goto LABEL_19;
  }
  if (v0 >= 0)
    v0 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = _CocoaArrayWrapper.endIndex.getter(v0);
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      v5 = v4;
    }
    else
    {
      v5 = *(_QWORD *)(v1 + 8 * i + 32);
      swift_retain();
    }
    if ((*(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 336)) & 0xFE) == 2
      || (*(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 336)) & 1) == 0)
    {
      swift_release(v5);
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v6 = *(_QWORD *)(v53[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v5);
      specialized ContiguousArray._endMutation()(v7);
    }
  }
  swift_bridgeObjectRelease(v1);
  v8 = v53[0];
  v9 = v46;
  if ((v53[0] & 0x8000000000000000) != 0)
    goto LABEL_40;
LABEL_19:
  if ((v8 & 0x4000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v8 + 16);
    v11 = swift_retain();
    if (!v10)
    {
LABEL_41:
      swift_release_n(v8, 2, v11);
      return;
    }
    goto LABEL_21;
  }
LABEL_40:
  swift_retain();
  v10 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v10)
    goto LABEL_41;
LABEL_21:
  if (v10 >= 1)
  {
    v12 = (_QWORD *)(v9 + qword_10064BBE0);
    v13 = v8 & 0xC000000000000001;
    swift_beginAccess(v12, v54, 0, 0);
    v14 = 0;
    v43 = v8 & 0xC000000000000001;
    v44 = v10;
    v45 = (_QWORD *)v8;
    do
    {
      if (v13)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v8);
      }
      else
      {
        v15 = *(_QWORD *)(v8 + 8 * v14 + 32);
        swift_retain();
      }
      sub_10006777C(v15 + *(_QWORD *)(*(_QWORD *)v15 + 320), (uint64_t)v53);
      v16 = *v12;
      if (*(_QWORD *)(*v12 + 16))
      {
        swift_bridgeObjectRetain(*v12);
        v17 = sub_100067654((uint64_t)v53);
        if ((v18 & 1) != 0)
        {
          v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
          swift_retain();
          swift_bridgeObjectRelease(v16);
          *(_BYTE *)(v19 + 25) = 1;
          swift_beginAccess(v19 + 24, v52, 1, 0);
          v20 = *(unsigned __int8 *)(v19 + 24);
          *(_BYTE *)(v19 + 24) = 0;
          if (v20 == 1)
          {
            v47 = v19;
            v21 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
            swift_retain();
            v22 = sub_10006922C((uint64_t *)&unk_100649060);
            swift_dynamicCast(&v48, &v47, v21, v22, 7);
            v23 = v50;
            v24 = v51;
            sub_10007E7A0(&v48, v50);
            (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
            sub_100068588(&v48);
          }
          v47 = v19;
          v25 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
          swift_retain();
          v26 = sub_10006922C((uint64_t *)&unk_100649060);
          swift_dynamicCast(&v48, &v47, v25, v26, 7);
          v27 = v50;
          v28 = v51;
          sub_10007E7A0(&v48, v50);
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
          sub_100068588(&v48);
          v47 = v19;
          swift_retain();
          swift_dynamicCast(&v48, &v47, v25, v26, 7);
          v29 = v50;
          v30 = v51;
          sub_10007E7A0(&v48, v50);
          (*(void (**)(uint64_t, uint64_t))(v30 + 40))(v29, v30);
          sub_100068588(&v48);
          swift_beginAccess(v12, &v48, 33, 0);
          v31 = *v12;
          swift_bridgeObjectRetain(*v12);
          v32 = sub_100067654((uint64_t)v53);
          v34 = v33;
          swift_bridgeObjectRelease(v31);
          v35 = 0;
          if ((v34 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
            v37 = *v12;
            v47 = *v12;
            *v12 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1002E5D1C();
              v37 = v47;
            }
            sub_100067748(*(_QWORD *)(v37 + 48) + 40 * v32);
            v35 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v32);
            sub_1002E3EE4(v32, v37);
            v38 = *v12;
            *v12 = v37;
            swift_bridgeObjectRelease(v38);
          }
          swift_endAccess(&v48);
          swift_release(v35);
          if (*(uint64_t *)(v46 + 32) <= 0)
          {
            v48 = 0;
            v49 = 0xE000000000000000;
            _StringGuts.grow(_:)(37);
            v39._countAndFlagsBits = 0xD000000000000023;
            v39._object = (void *)0x800000010051CD00;
            String.append(_:)(v39);
            v47 = v46;
            _print_unlocked<A, B>(_:_:)(&v47, &v48, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            swift_bridgeObjectRelease(v49);
            v47 = v46;
            swift_retain();
            swift_dynamicCast(&v48, &v47, v25, v26, 7);
            v40 = v50;
            v41 = v51;
            sub_10007E7A0(&v48, v50);
            LODWORD(v40) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
            sub_100068588(&v48);
            if ((_DWORD)v40)
              sub_10025F05C(1);
          }
          swift_release(v19);
          v10 = v44;
          v8 = (unint64_t)v45;
          v13 = v43;
        }
        else
        {
          swift_bridgeObjectRelease(v16);
        }
      }
      ++v14;
      sub_100067748((uint64_t)v53);
      swift_release(v15);
    }
    while (v10 != v14);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
}

void sub_10029D4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  _QWORD v53[5];
  _BYTE v54[32];

  v0 = sub_1004056A0();
  v1 = v0;
  v53[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v1);
    v8 = (unint64_t)_swiftEmptyArrayStorage;
    v9 = v46;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_40;
    goto LABEL_19;
  }
  if (v0 >= 0)
    v0 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = _CocoaArrayWrapper.endIndex.getter(v0);
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      v5 = v4;
    }
    else
    {
      v5 = *(_QWORD *)(v1 + 8 * i + 32);
      swift_retain();
    }
    if ((*(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 336)) & 0xFE) == 2
      || (*(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 336)) & 1) == 0)
    {
      swift_release(v5);
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v6 = *(_QWORD *)(v53[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v5);
      specialized ContiguousArray._endMutation()(v7);
    }
  }
  swift_bridgeObjectRelease(v1);
  v8 = v53[0];
  v9 = v46;
  if ((v53[0] & 0x8000000000000000) != 0)
    goto LABEL_40;
LABEL_19:
  if ((v8 & 0x4000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v8 + 16);
    v11 = swift_retain();
    if (!v10)
    {
LABEL_41:
      swift_release_n(v8, 2, v11);
      return;
    }
    goto LABEL_21;
  }
LABEL_40:
  swift_retain();
  v10 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v10)
    goto LABEL_41;
LABEL_21:
  if (v10 >= 1)
  {
    v12 = (_QWORD *)(v9 + qword_10064BBE0);
    v13 = v8 & 0xC000000000000001;
    swift_beginAccess(v12, v54, 0, 0);
    v14 = 0;
    v43 = v8 & 0xC000000000000001;
    v44 = v10;
    v45 = (_QWORD *)v8;
    do
    {
      if (v13)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v8);
      }
      else
      {
        v15 = *(_QWORD *)(v8 + 8 * v14 + 32);
        swift_retain();
      }
      sub_10006777C(v15 + *(_QWORD *)(*(_QWORD *)v15 + 320), (uint64_t)v53);
      v16 = *v12;
      if (*(_QWORD *)(*v12 + 16))
      {
        swift_bridgeObjectRetain(*v12);
        v17 = sub_100067654((uint64_t)v53);
        if ((v18 & 1) != 0)
        {
          v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
          swift_retain();
          swift_bridgeObjectRelease(v16);
          *(_BYTE *)(v19 + 25) = 1;
          swift_beginAccess(v19 + 24, v52, 1, 0);
          v20 = *(unsigned __int8 *)(v19 + 24);
          *(_BYTE *)(v19 + 24) = 0;
          if (v20 == 1)
          {
            v47 = v19;
            v21 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
            swift_retain();
            v22 = sub_10006922C((uint64_t *)&unk_100649060);
            swift_dynamicCast(&v48, &v47, v21, v22, 7);
            v23 = v50;
            v24 = v51;
            sub_10007E7A0(&v48, v50);
            (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
            sub_100068588(&v48);
          }
          v47 = v19;
          v25 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
          swift_retain();
          v26 = sub_10006922C((uint64_t *)&unk_100649060);
          swift_dynamicCast(&v48, &v47, v25, v26, 7);
          v27 = v50;
          v28 = v51;
          sub_10007E7A0(&v48, v50);
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
          sub_100068588(&v48);
          v47 = v19;
          swift_retain();
          swift_dynamicCast(&v48, &v47, v25, v26, 7);
          v29 = v50;
          v30 = v51;
          sub_10007E7A0(&v48, v50);
          (*(void (**)(uint64_t, uint64_t))(v30 + 40))(v29, v30);
          sub_100068588(&v48);
          swift_beginAccess(v12, &v48, 33, 0);
          v31 = *v12;
          swift_bridgeObjectRetain(*v12);
          v32 = sub_100067654((uint64_t)v53);
          v34 = v33;
          swift_bridgeObjectRelease(v31);
          v35 = 0;
          if ((v34 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
            v37 = *v12;
            v47 = *v12;
            *v12 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1002E9028();
              v37 = v47;
            }
            sub_100067748(*(_QWORD *)(v37 + 48) + 40 * v32);
            v35 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v32);
            sub_1002E3EE4(v32, v37);
            v38 = *v12;
            *v12 = v37;
            swift_bridgeObjectRelease(v38);
          }
          swift_endAccess(&v48);
          swift_release(v35);
          if (*(uint64_t *)(v46 + 32) <= 0)
          {
            v48 = 0;
            v49 = 0xE000000000000000;
            _StringGuts.grow(_:)(37);
            v39._countAndFlagsBits = 0xD000000000000023;
            v39._object = (void *)0x800000010051CD00;
            String.append(_:)(v39);
            v47 = v46;
            _print_unlocked<A, B>(_:_:)(&v47, &v48, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            swift_bridgeObjectRelease(v49);
            v47 = v46;
            swift_retain();
            swift_dynamicCast(&v48, &v47, v25, v26, 7);
            v40 = v50;
            v41 = v51;
            sub_10007E7A0(&v48, v50);
            LODWORD(v40) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
            sub_100068588(&v48);
            if ((_DWORD)v40)
              sub_10025F05C(1);
          }
          swift_release(v19);
          v10 = v44;
          v8 = (unint64_t)v45;
          v13 = v43;
        }
        else
        {
          swift_bridgeObjectRelease(v16);
        }
      }
      ++v14;
      sub_100067748((uint64_t)v53);
      v11 = swift_release(v15);
    }
    while (v10 != v14);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
}

double sub_10029DA2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  _QWORD v14[3];
  uint64_t v15;
  _BYTE v16[24];

  v3 = *v1;
  v4 = (uint64_t *)((char *)v1 + qword_10064BBE0);
  swift_beginAccess((char *)v1 + qword_10064BBE0, v16, 0, 0);
  v5 = *v4;
  v8 = type metadata accessor for DOCOperationProgress(0, *(_QWORD *)(v3 + 296), v6, v7);
  swift_bridgeObjectRetain(v5);
  Dictionary.subscript.getter(v14, a1, v5, &type metadata for AnyHashable, v8, &protocol witness table for AnyHashable);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  v10 = v14[0];
  if (v14[0])
  {
    DOCAbstractPacedPropertyUpdater.invalidate()();
    v11 = swift_beginAccess(v4, v14, 33, 0);
    v12 = type metadata accessor for Dictionary(0, &type metadata for AnyHashable, v8, &protocol witness table for AnyHashable, v11);
    Dictionary.removeValue(forKey:)(&v15, a1, v12);
    swift_endAccess(v14);
    v13 = swift_release(v15);
    sub_10029E230(v13);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

uint64_t sub_10029DB44(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD v29[3];
  _QWORD v30[5];
  _BYTE v31[32];
  _QWORD v32[3];
  uint64_t v33;
  _QWORD v34[5];
  _BYTE v35[24];
  _QWORD v36[5];

  v3 = v2;
  v6 = a2[3];
  v7 = a2[4];
  sub_10007E7A0(a2, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v36, v6, v7);
  v8 = (_QWORD *)(v2 + qword_10064BBE0);
  swift_beginAccess(v2 + qword_10064BBE0, v35, 0, 0);
  v9 = *v8;
  if (!*(_QWORD *)(*v8 + 16)
    || (swift_bridgeObjectRetain(*v8),
        sub_100067654((uint64_t)v36),
        v11 = v10,
        swift_bridgeObjectRelease(v9),
        (v11 & 1) == 0))
  {
    v12 = *(_QWORD *)(v3 + qword_10064BBD8);
    sub_100069BD8(a1, (uint64_t)v32);
    sub_100092328((uint64_t)a2, (uint64_t)v34);
    sub_100069BD8((uint64_t)v32, (uint64_t)v31);
    sub_100092328((uint64_t)v34, (uint64_t)v30);
    v13 = sub_10006922C(&qword_10064C228);
    swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    swift_bridgeObjectRetain_n(v12, 2);
    v14 = sub_100400FE8((uint64_t)v31, v30, v12);
    sub_10000CB4C((uint64_t)v32, &qword_100644CA0);
    swift_bridgeObjectRelease(v12);
    v15 = swift_allocObject(&unk_1005D8350, 24, 7);
    swift_weakInit(v15 + 16, v3);
    v16 = (uint64_t *)(v14 + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess(v14 + direct field offset for DOCOperationProgress.updateHandler, v30, 1, 0);
    v17 = *v16;
    v18 = v16[1];
    *v16 = (uint64_t)sub_10029F000;
    v16[1] = v15;
    sub_100087534(v17, v18);
    sub_10006777C((uint64_t)v36, (uint64_t)v32);
    swift_beginAccess(v8, v31, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
    v29[0] = *v8;
    *v8 = 0x8000000000000000;
    sub_100355A78(v14, (uint64_t)v32, isUniquelyReferenced_nonNull_native);
    v20 = *v8;
    *v8 = v29[0];
    swift_bridgeObjectRelease(v20);
    sub_100067748((uint64_t)v32);
    swift_endAccess(v31);
    swift_beginAccess(v3 + 24, v31, 0, 0);
    v21 = *(unsigned __int8 *)(v3 + 24);
    swift_beginAccess(v14 + 24, v29, 1, 0);
    v22 = *(unsigned __int8 *)(v14 + 24);
    *(_BYTE *)(v14 + 24) = v21;
    if (v21 != v22)
    {
      if (v21)
      {
        swift_retain();
        sub_10025EB70();
        swift_release(v14);
      }
      else
      {
        v28 = v14;
        v23 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
        swift_retain();
        v24 = sub_10006922C((uint64_t *)&unk_100649060);
        swift_dynamicCast(v32, &v28, v23, v24, 7);
        v25 = v33;
        v26 = v34[0];
        sub_10007E7A0(v32, v33);
        (*(void (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
        sub_100068588(v32);
      }
    }
    sub_10025EDC4(2);
    swift_release(v14);
  }
  return sub_100067748((uint64_t)v36);
}

uint64_t sub_10029DE44(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44[3];
  _BYTE v45[24];
  char v46[24];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;
  char v50[24];
  _QWORD v51[6];

  v3 = v2;
  v6 = type metadata accessor for DOCFileOperation(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100644CB0);
  __chkstk_darwin(v9);
  v11 = (char *)&v44[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2[3];
  v13 = a2[4];
  sub_10007E7A0(a2, v12);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v51, v12, v13);
  v14 = (_QWORD *)(v2 + qword_10064BBE0);
  swift_beginAccess(v2 + qword_10064BBE0, v50, 0, 0);
  v15 = *v14;
  if (!*(_QWORD *)(*v14 + 16)
    || (swift_bridgeObjectRetain(*v14),
        sub_100067654((uint64_t)v51),
        v17 = v16,
        swift_bridgeObjectRelease(v15),
        (v17 & 1) == 0))
  {
    v18 = *(_QWORD *)(v3 + qword_10064BBD8);
    sub_100294F04(a1, (uint64_t)v11);
    v19 = (uint64_t)&v11[*(int *)(v9 + 28)];
    sub_100092328((uint64_t)a2, v19);
    sub_100294F04((uint64_t)v11, (uint64_t)v8);
    sub_100092328(v19, (uint64_t)v47);
    v20 = sub_10006922C((uint64_t *)&unk_10064C230);
    v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v22 = v48;
    v23 = v49;
    v24 = sub_10007E7C8((uint64_t)v47, v48);
    v25 = __chkstk_darwin(v24);
    v27 = (char *)&v44[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v28 + 16))(v27, v25);
    swift_bridgeObjectRetain_n(v18, 2);
    v29 = sub_100403B80((uint64_t)v8, (uint64_t)v27, v18, v21, v22, v23);
    sub_100068588(v47);
    sub_10000CB4C((uint64_t)v11, &qword_100644CB0);
    swift_bridgeObjectRelease(v18);
    v30 = swift_allocObject(&unk_1005D8378, 24, 7);
    swift_weakInit(v30 + 16, v3);
    v31 = (uint64_t *)(v29 + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess(v29 + direct field offset for DOCOperationProgress.updateHandler, v46, 1, 0);
    v32 = *v31;
    v33 = v31[1];
    *v31 = (uint64_t)sub_10029F024;
    v31[1] = v30;
    sub_100087534(v32, v33);
    sub_10006777C((uint64_t)v51, (uint64_t)v47);
    swift_beginAccess(v14, v45, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
    v44[0] = *v14;
    *v14 = 0x8000000000000000;
    sub_100357818(v29, (uint64_t)v47, isUniquelyReferenced_nonNull_native);
    v35 = *v14;
    *v14 = v44[0];
    swift_bridgeObjectRelease(v35);
    sub_100067748((uint64_t)v47);
    swift_endAccess(v45);
    swift_beginAccess(v3 + 24, v45, 0, 0);
    v36 = *(unsigned __int8 *)(v3 + 24);
    swift_beginAccess(v29 + 24, v44, 1, 0);
    v37 = *(unsigned __int8 *)(v29 + 24);
    *(_BYTE *)(v29 + 24) = v36;
    if (v36 != v37)
    {
      if ((v36 & 1) != 0)
      {
        swift_retain();
        sub_10025EB70();
        swift_release(v29);
      }
      else
      {
        v43 = v29;
        v38 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
        swift_retain();
        v39 = sub_10006922C((uint64_t *)&unk_100649060);
        swift_dynamicCast(v47, &v43, v38, v39, 7);
        v40 = v48;
        v41 = v49;
        sub_10007E7A0(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v41 + 40))(v40, v41);
        sub_100068588(v47);
      }
    }
    sub_10029E234();
    swift_release(v29);
  }
  return sub_100067748((uint64_t)v51);
}

void sub_10029E234()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(uint64_t *)(v0 + 32) <= 0)
  {
    v1 = v0;
    v7 = 0;
    v8 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v2._object = (void *)0x800000010051CD00;
    v2._countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v2);
    v11 = v0;
    v3 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)(&v11, &v7, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_bridgeObjectRelease(v8);
    v11 = v1;
    swift_retain();
    v4 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(&v7, &v11, v3, v4, 7);
    v5 = v9;
    v6 = v10;
    sub_10007E7A0(&v7, v9);
    LODWORD(v3) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    sub_100068588(&v7);
    if ((_DWORD)v3)
      sub_10025F05C(1);
  }
}

void sub_10029E350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  v1 = *v0;
  v2 = sub_10029CC18();
  v3 = *(_QWORD *)(v1 + 296);
  v6 = type metadata accessor for DOCOperationProgress(0, v3, v4, v5);
  v7 = Array.count.getter(v2, v6);
  swift_bridgeObjectRelease(v2);
  if (v7 >= 1)
  {
    v13 = sub_10029CC18();
    __chkstk_darwin(v13);
    v12[2] = v3;
    v8 = type metadata accessor for Array(0, v6);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
    v11 = sub_10029BA38((void (*)(char *, char *))sub_10029EF3C, (uint64_t)v12, v8, (char *)&type metadata for DOCProgressState, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v10);
    swift_bridgeObjectRelease(v13);
    v13 = v11;
    swift_bridgeObjectRetain(v11);
    sub_100405CE0(&v13);
    swift_bridgeObjectRelease(v11);
    if (*(_QWORD *)(v13 + 16))
    {
      swift_release(v13);
    }
    else
    {
      swift_release(v13);
      __break(1u);
      swift_release(v13);
      __break(1u);
    }
  }
}

uint64_t sub_10029E4A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[7];
  uint64_t v15;
  double v16;
  char v17;

  v1 = *v0;
  v2 = sub_10029CC18();
  v3 = *(_QWORD *)(v1 + 296);
  v6 = type metadata accessor for DOCOperationProgress(0, v3, v4, v5);
  v7 = Array.count.getter(v2, v6);
  swift_bridgeObjectRelease(v2);
  if (v7 < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    v17 = 0;
    v16 = 0.0;
    v15 = sub_10029CC18();
    __chkstk_darwin(v15);
    v14[2] = v3;
    v14[3] = &v16;
    v14[4] = &v17;
    v8 = type metadata accessor for Array(0, v6);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
    Sequence.forEach(_:)(sub_10029EF20, v14, v8, WitnessTable);
    swift_bridgeObjectRelease(v15);
    if (v17 == 1)
    {
      v10 = v16;
      v11 = sub_10029CC18();
      v12 = Array.count.getter(v11, v6);
      swift_bridgeObjectRelease(v11);
      *(double *)&result = v10 / (double)v12;
    }
    else
    {
      *(double *)&result = 0.0;
    }
  }
  return result;
}

uint64_t DOCGenericOperationCombinedProgress.init(operations:observing:)(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;
  _QWORD *v24;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v24 = _swiftEmptyArrayStorage;
    sub_100154EDC(0, v4, 0);
    v5 = _swiftEmptyArrayStorage;
    v6 = a1 + 32;
    do
    {
      sub_100092328(v6, (uint64_t)&v18);
      v7 = v19;
      v8 = sub_10007E7A0(&v18, v19);
      *((_QWORD *)&v21 + 1) = v7;
      v9 = sub_10006CBAC(&v20);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v9, v8, v7);
      sub_1000E85C4(&v18, (uint64_t)v22);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      v24 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100154EDC(0, v5[2] + 1, 1);
        v5 = v24;
      }
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
      {
        sub_100154EDC(v11 > 1, v12 + 1, 1);
        v5 = v24;
      }
      v5[2] = v12 + 1;
      v13 = &v5[9 * v12];
      *((_OWORD *)v13 + 2) = v20;
      v14 = v21;
      v15 = v22[0];
      v16 = v22[1];
      v13[12] = v23;
      *((_OWORD *)v13 + 4) = v15;
      *((_OWORD *)v13 + 5) = v16;
      *((_OWORD *)v13 + 3) = v14;
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v5 = _swiftEmptyArrayStorage;
  }
  return sub_10029BF24((uint64_t)v5, a2);
}

uint64_t DOCGenericOperationCombinedProgress.add(_:)(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD v6[4];
  _QWORD v7[5];

  v2 = a1[3];
  v3 = sub_10007E7A0(a1, v2);
  v6[3] = v2;
  v4 = sub_10006CBAC(v6);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v4, v3, v2);
  sub_100092328((uint64_t)a1, (uint64_t)v7);
  sub_10029DB44((uint64_t)v6, v7);
  return sub_10000CB4C((uint64_t)v6, &qword_100644CA0);
}

uint64_t sub_10029E848(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C(v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  a1(*(_QWORD *)(v1 + direct field offset for DOCOperationCombinedProgress.updateHandler), *(_QWORD *)(v1 + direct field offset for DOCOperationCombinedProgress.updateHandler + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBD0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBD8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBE0));
  return v1;
}

uint64_t sub_10029E8CC(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C(v1 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  a1(*(_QWORD *)(v1 + direct field offset for DOCOperationCombinedProgress.updateHandler), *(_QWORD *)(v1 + direct field offset for DOCOperationCombinedProgress.updateHandler + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBD0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBD8));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + qword_10064BBE0));
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

void sub_10029E95C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *object;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  sub_10006777C(a1, (uint64_t)&v27);
  v29 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v29 + 344);
  v4 = *(_QWORD *)(v29 + v3);
  v5 = *(_QWORD *)(v29 + v3 + 8);
  v7 = *(_QWORD *)(v29 + v3 + 16);
  v6 = *(_QWORD *)(v29 + v3 + 24);
  swift_bridgeObjectRetain(v6);
  sub_100067748((uint64_t)&v27);
  v8 = sub_10006777C(a1, (uint64_t)&v27);
  v29 = *(_QWORD *)(a1 + 40);
  v9 = AnyHashable.description.getter(v8);
  v11 = v10;
  sub_100067748((uint64_t)&v27);
  v12 = sub_100087794(6, v9, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease(v11);
  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v28);
  v27 = 0x444967756265645BLL;
  v28 = 0xEB00000000203D20;
  v19._countAndFlagsBits = static String._fromSubstring(_:)(v4, v5, v7, v6);
  object = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(object);
  v21._countAndFlagsBits = 0x3D204449706F202CLL;
  v21._object = (void *)0xE900000000000020;
  String.append(_:)(v21);
  v22._countAndFlagsBits = static String._fromSubstring(_:)(v12, v14, v16, v18);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 93;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25 = v28;
  *a2 = v27;
  a2[1] = v25;
}

void sub_10029EB04(uint64_t *a1)
{
  uint64_t v1;
  int v2;
  _BYTE v3[24];

  v1 = *a1;
  swift_beginAccess(*a1 + 24, v3, 1, 0);
  v2 = *(unsigned __int8 *)(v1 + 24);
  *(_BYTE *)(v1 + 24) = 1;
  if (v2 != 1)
    sub_10025EB70();
}

void sub_10029EB64(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = *a1;
  swift_beginAccess(*a1 + 24, v11, 1, 0);
  v2 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(v1 + 24) = 0;
  if ((v2 & 1) != 0)
  {
    v7 = v1;
    v3 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    swift_retain();
    v4 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(v8, &v7, v3, v4, 7);
    v5 = v9;
    v6 = v10;
    sub_10007E7A0(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
    sub_100068588(v8);
  }
}

uint64_t sub_10029EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    sub_10025EDC4(1);
    sub_10029CF7C();
    return swift_release(v4);
  }
  return result;
}

double sub_10029EC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    DOCAbstractPacedPropertyUpdater.setNeedsUpdateProperties(notifyImmediately:)(0);
    sub_10029D4D4();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t **sub_10029ECD8(uint64_t **result, double *a2, _BYTE *a3)
{
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v3 = **result;
  if ((*((_BYTE *)*result + *(_QWORD *)(v3 + 336)) & 0xFE) == 2)
  {
    v4 = (double *)((char *)*result + *(_QWORD *)(v3 + 328));
    v5 = *a2;
    if (((_BYTE)v4[1] & 1) != 0)
    {
      *a2 = v5 + 0.0;
      return result;
    }
    v6 = *v4 + v5;
    goto LABEL_8;
  }
  if ((*((_BYTE *)*result + *(_QWORD *)(v3 + 336)) & 1) == 0)
  {
    v6 = *a2 + 1.0;
LABEL_8:
    *a2 = v6;
    *a3 = 1;
  }
  return result;
}

double sub_10029ED48()
{
  uint64_t v0;
  double result;

  sub_100087534(*(_QWORD *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler), *(_QWORD *)(v0 + direct field offset for DOCOperationCombinedProgress.updateHandler + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBD0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBD8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_10064BBE0)).n128_u64[0];
  return result;
}

uint64_t DOCOperationCombinedProgress.__deallocating_deinit()
{
  uint64_t v0;

  DOCOperationCombinedProgress.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10029EDC0()
{
  return sub_10029CBCC();
}

uint64_t sub_10029EDE0()
{
  return sub_10029CCFC();
}

void sub_10029EE00()
{
  sub_10029CE64();
}

double sub_10029EE20()
{
  return sub_10029CED8();
}

double sub_10029EE40()
{
  return sub_10029CEE4();
}

uint64_t sub_10029EE60()
{
  return DOCOperationCombinedProgress.description.getter();
}

uint64_t sub_10029EE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100644CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_10029EEC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  sub_10006777C(a1, (uint64_t)v5);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t type metadata accessor for DOCFileOperationCombinedProgress(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_10064BC10, (uint64_t)&nominal type descriptor for DOCFileOperationCombinedProgress);
}

uint64_t **sub_10029EF20(uint64_t **a1)
{
  uint64_t v1;

  return sub_10029ECD8(a1, *(double **)(v1 + 24), *(_BYTE **)(v1 + 32));
}

uint64_t sub_10029EF3C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + *(_QWORD *)(**(_QWORD **)result + 336));
  return result;
}

void sub_10029EF54(uint64_t *a1)
{
  sub_10029EB64(a1);
}

void sub_10029EF6C(uint64_t *a1)
{
  sub_10029EB04(a1);
}

uint64_t sub_10029EF84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _BYTE v5[40];
  uint64_t v6;

  sub_10006777C(a1, (uint64_t)v5);
  v6 = *(_QWORD *)(a1 + 40);
  *a2 = v6;
  swift_retain();
  return sub_100067748((uint64_t)v5);
}

uint64_t sub_10029EFDC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10029F000(uint64_t a1)
{
  uint64_t v1;

  return sub_10029EC20(a1, v1);
}

void sub_10029F008(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10029E95C(a1, a2);
}

double sub_10029F024(uint64_t a1)
{
  uint64_t v1;

  return sub_10029EC7C(a1, v1);
}

_QWORD *sub_10029F034(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100081774(0, v1, 0);
    v3 = type metadata accessor for UTType(0);
    v4 = *(_QWORD *)(v3 - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v3 = UTType.identifier.getter(v3);
      v7 = v3;
      v9 = v8;
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        v3 = sub_100081774(v10 > 1, v11 + 1, 1);
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10029F130()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch(sub_10029F148, 0, 0);
}

uint64_t sub_10029F148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[3];
  v2 = swift_allocObject(&unk_1005D8460, 24, 7);
  v0[4] = v2;
  swift_weakInit(v2 + 16, v1);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v3;
  v4 = sub_10006922C(&qword_10064C3B0);
  *v3 = v0;
  v3[1] = sub_10029F20C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x8000000100521890, sub_1002A2154, v2, v4);
}

uint64_t sub_10029F20C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10029F278;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 32));
    v4 = sub_100114C70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10029F278()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029F2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch(sub_10029F2C8, 0, 0);
}

uint64_t sub_10029F2C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = swift_allocObject(&unk_1005D8460, 24, 7);
  v0[6] = v4;
  swift_weakInit(v4 + 16, v1);
  v5 = (_QWORD *)swift_task_alloc(48);
  v0[7] = v5;
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v6;
  v7 = sub_10006922C(&qword_10064C3B0);
  *v6 = v0;
  v6[1] = sub_10029F3B0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000018, 0x8000000100521870, sub_1002A2044, v5, v7);
}

uint64_t sub_10029F3B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10029F424;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 56);
    swift_release(*(_QWORD *)(v2 + 48));
    swift_task_dealloc(v5);
    v4 = sub_100114C70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10029F424()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10029F460()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD);
  char *v10;
  NSObject *v11;
  __n128 v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  __n128 v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD, __n128);
  _QWORD v44[2];
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, void (*)(_QWORD, _QWORD), uint64_t, __n128);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t aBlock[5];
  uint64_t v52;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v49 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)v44 - v5;
  v8 = Logger.AppIntents.unsafeMutableAddressor(v7);
  v9 = *(void (**)(_QWORD))(v2 + 16);
  v46 = (void (*)(char *, uint64_t))v8;
  v47 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t, __n128))v9;
  v9(v6);
  v10 = v0;
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.info.getter(v12);
  v14 = os_log_type_enabled(v11, v13);
  v48 = v1;
  if (v14)
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = swift_slowAlloc(32, -1);
    aBlock[0] = v45;
    *(_DWORD *)v15 = 136315138;
    v44[1] = v15 + 4;
    v16 = objc_msgSend(v10, "description");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v50 = sub_1000544FC(v17, v19, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, aBlock);

    v20 = v19;
    v1 = v48;
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "FileEntitySpotlightFetcher (%s starting", v15, 0xCu);
    v21 = v45;
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  v22(v6, v1);
  v23 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection], "workingQueue");
  v24 = swift_allocObject(&unk_1005D84B0, 24, 7);
  *(_QWORD *)(v24 + 16) = v10;
  v25 = swift_allocObject(&unk_1005D84D8, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_1002A20C0;
  *(_QWORD *)(v25 + 24) = v24;
  aBlock[4] = (uint64_t)sub_10006657C;
  v52 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10006655C;
  aBlock[3] = (uint64_t)&unk_1005D84F0;
  v26 = _Block_copy(aBlock);
  v27 = v52;
  v28 = v10;
  swift_retain();
  swift_release(v27);
  dispatch_sync(v23, v26);

  _Block_release(v26);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation(v25, "", 123, 210, 47, 1);
  v29 = swift_release(v25);
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v30 = v49;
    v47(v49, (void (*)(_QWORD, _QWORD))v46, v1, v29);
    v31 = v1;
    v32 = v28;
    v33 = Logger.logObject.getter(v32);
    v35 = static os_log_type_t.info.getter(v34);
    if (os_log_type_enabled(v33, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v47 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t, __n128))v24;
      v38 = v37;
      aBlock[0] = v37;
      *(_DWORD *)v36 = 136315138;
      v39 = objc_msgSend(v32, "description");
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v46 = v22;
      v42 = v41;

      v50 = sub_1000544FC(v40, v42, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, aBlock);

      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v33, v35, "FileEntitySpotlightFetcher (%s started", v36, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      v46(v49, v48);
      v43 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v47;
    }
    else
    {

      v22(v30, v31);
      v43 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v24;
    }
    swift_release(v43);
  }
}

id sub_10029F910()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(id *)(v0 + 56);
  }
  else
  {
    v3 = sub_10029F968(v0);
    v4 = *(void **)(v0 + 56);
    *(_QWORD *)(v0 + 56) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_10029F968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  Class v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;

  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = objc_msgSend((id)objc_opt_self(DOCConfiguration), "configurationForOpeningDocumentsOfApplicationWithBundleIdentifier:", v4);

  objc_msgSend(v5, "setInProcess:", 1);
  objc_msgSend(v5, "setSupportsRemovableFileProviders:", 1);
  v6 = sub_10006922C(&qword_100643CC0);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierRename);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setForbiddenActionIdentifiers:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  objc_msgSend(v5, "setNeverCreateBookmarkForOpenInPlace:", 1);
  objc_msgSend(v5, "setSkipDownload:", 1);
  objc_msgSend(v5, "setMaximumNumberOfItemsToFetch:", objc_msgSend(*(id *)(a1 + 40), "integerValue"));
  objc_msgSend(v5, "setPresentingMakesCollectionFirstResponder:", 0);
  objc_msgSend(v5, "setPickingItemsShouldBumpLastOpenDate:", 0);
  objc_msgSend(v5, "setBrowserViewContext:", 2);
  type metadata accessor for UTType(0);
  v10 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setRecentDocumentsContentTypes:", v10);

  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v11 = swift_allocObject(v6, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
    *(_QWORD *)(v11 + 40) = v12;
    v13 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setHiddenSourcesIdentifiers:", v13, swift_bridgeObjectRelease(v11).n128_f64[0]);

  }
  return v5;
}

uint64_t sub_10029FBBC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSNumber v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;

  v3 = v2;
  v24 = a2;
  v23 = a1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v22);
  v25 = _swiftEmptyArrayStorage;
  v14 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_10006922C((uint64_t *)&unk_100641280);
  v16 = sub_10008825C((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v15, v16, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  *(_QWORD *)(v3 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003ALL, 0x8000000100521830, v13, v10, v7, 0);
  sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
  v17.super.super.isa = NSNumber.init(integerLiteral:)(50).super.super.isa;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(NSNumber *)(v3 + 40) = v17;
  *(_QWORD *)(v3 + 16) = v23;
  *(_BYTE *)(v3 + 24) = v24;
  v18 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v19 = DOCDocumentsAppBundleIdentifier;
  objc_msgSend(v18, "setHostIdentifier:", DOCDocumentsAppBundleIdentifier);

  v20 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  objc_msgSend(v20, "setHostIdentifier:", v19);

  return v3;
}

uint64_t sub_10029FE48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v6;
  id v7;
  Class isa;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  id v13;
  id v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  Class v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  void *v35;
  char *v36;
  void *v37;
  char *v38;
  _BYTE v40[80];

  v3 = v2;
  if (qword_100640F68 != -1)
    swift_once(&qword_100640F68, sub_1000AEA08);
  v6 = (void *)qword_100672B48;
  v7 = sub_10029F910();
  isa = (Class)objc_msgSend(v7, "recentDocumentsContentTypes");

  if (!isa)
  {
    v10 = type metadata accessor for UTType(0);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v10);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  objc_msgSend(v6, "setDocumentContentTypes:", isa, v9);

  v12 = v6;
  v13 = sub_10029F910();
  v14 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
  v15 = v12[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCItemCollectionViewIdentifier);
  sub_100051C68(v12, v13, 0, v14, v15, 0, v16, v17, (uint64_t)v40, 0);
  v18 = sub_10029F910();
  v19 = objc_msgSend(objc_allocWithZone((Class)DOCEnumerationProperties), "initWithConfiguration:tags:", v18, 0);

  objc_msgSend(v19, "setMaximumNumberOfItems:", v3[5]);
  v20 = sub_10029F910();
  v21 = (Class)objc_msgSend(v20, "recentDocumentsContentTypes");

  if (!v21)
  {
    v23 = type metadata accessor for UTType(0);
    v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v23);
    v21 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  objc_msgSend(v19, "setAllowedContentTypes:", v21, v22);

  v25 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v26 = _sSo13FPItemManagerC5FilesE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryE0CSo026DOCSpotlightEnumeratedItemG0a_So24DOCEnumerationPropertiesCSbtF_0(DOCSpotlightEnumeratedItemIdentifierRecentDocuments, v19, 1);

  v27 = DOCDocumentSourceIdentifierRecentDocuments;
  v28 = (void *)objc_opt_self(DOCManagedPermission);
  v29 = v26;
  v30 = v19;
  v31 = objc_msgSend(v28, "defaultPermission");
  v32 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0(v27, v19, v31, (uint64_t)v40, 0);

  objc_msgSend(v29, "setItemFilteringPredicate:", v32);
  objc_msgSend(v29, "setWorkingQueue:", v3[4]);
  objc_allocWithZone((Class)type metadata accessor for FileEntitySpotlight.Fetcher());
  v33 = (char *)v29;
  swift_retain();
  v34 = sub_1002A1168(v33, a1, a2);
  v35 = (void *)v3[6];
  v3[6] = v34;
  v36 = v34;

  v37 = (void *)v3[6];
  if (v37)
  {
    v38 = v37;
    sub_10029F460();

    v33 = v36;
    v36 = v38;
  }

  return sub_100029224((uint64_t)v40);
}

void sub_1002A01C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE v14[24];

  v4 = sub_10006922C(&qword_10064C3B8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v9 = Strong;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v4);
    v10 = *(unsigned __int8 *)(v5 + 80);
    v11 = (v10 + 16) & ~v10;
    v12 = swift_allocObject(&unk_1005D85C8, v11 + v6, v10 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v7, v4);
    sub_10029FE48((uint64_t)sub_1002A2054, v12);
    swift_release(v12);
    swift_release(v9);
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
    CheckedContinuation.resume(returning:)(&v13, v4);
  }
}

void sub_1002A02F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  Swift::String v46;
  Swift::String v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  void *object;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  Swift::String v66;
  void *v67;
  Swift::String v68;
  Swift::String v69;
  double v70;
  unint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  NSString v74;
  id v75;
  id v76;
  char *v77;
  void *v78;
  char *v79;
  void *v80;
  char *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  Swift::String v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  _BYTE v103[88];

  v5 = v4;
  v92 = objc_msgSend(objc_allocWithZone((Class)DOCEnumerationProperties), "init");
  objc_msgSend(v92, "setMaximumNumberOfItems:", *(_QWORD *)(v4 + 40));
  v10 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v11 = _sSo13FPItemManagerC5FilesE15queryCollection13forIdentifier10properties29supportRemovableFileProvidersSo07FPQueryE0CSo026DOCSpotlightEnumeratedItemG0a_So24DOCEnumerationPropertiesCSbtF_0(DOCSpotlightEnumeratedItemIdentifierSearch, v92, 1);

  v12 = objc_opt_self(FPSearchCollection);
  v13 = swift_dynamicCastObjCClass(v11, v12);
  if (v13)
  {
    v14 = (void *)v13;
    v90 = (uint64_t)a3;
    v91 = a4;
    v15 = (void *)objc_opt_self(DOCConcreteLocation);
    v16 = v11;
    v17 = objc_msgSend(v15, "emptyLocation");
    if (qword_100640F80 != -1)
      swift_once(&qword_100640F80, sub_1000AE894);
    v18 = (id)static DOCFileProviderSource.searchSource;
    v19 = sub_10029F910();
    v20 = objc_msgSend(v15, "searchLocation");
    v89 = v17;
    sub_100051C68(v18, v19, 2, v20, 7, v17, 0, 0, (uint64_t)v103, 0);
    v21 = DOCDocumentSourceIdentifierSearch;
    v22 = (void *)objc_opt_self(DOCManagedPermission);
    v23 = v16;
    v24 = v92;
    v25 = objc_msgSend(v22, "defaultPermission");
    v26 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0(v21, v92, v25, (uint64_t)v103, 0);

    objc_msgSend(v14, "setItemFilteringPredicate:", v26);
    objc_msgSend(v14, "setWorkingQueue:", *(_QWORD *)(v5 + 32));
    v27 = (char *)objc_msgSend(objc_allocWithZone((Class)NSFileProviderSearchQuery), "initWithSearchScope:", 0);
    v28 = *(_QWORD *)(v5 + 16);
    v29 = swift_bridgeObjectRetain(v28);
    v30 = sub_10029F034(v29);
    swift_bridgeObjectRelease(v28);
    v31 = sub_1000D03C0((uint64_t)v30);
    swift_bridgeObjectRelease(v30);
    isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "setAllowedContentTypes:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

    if (*(_BYTE *)(v5 + 24) == 1)
    {
      objc_msgSend(v27, "setTrashedItemsMembership:", 1);
      v33 = String.doc_searchQueryValue.getter(a1, a2);
      v35 = v34;
      v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSceneClassificationSynonyms);
      v99 = v36;
      v37._countAndFlagsBits = 540884256;
      v37._object = (void *)0xE400000000000000;
      String.append(_:)(v37);
      v38._countAndFlagsBits = v33;
      v38._object = v35;
      String.append(_:)(v38);
      v87 = v99;
      v88 = v94;
      v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSceneClassificationLabels);
      v100 = v39;
      v40._countAndFlagsBits = 540884256;
      v40._object = (void *)0xE400000000000000;
      String.append(_:)(v40);
      v41._countAndFlagsBits = v33;
      v41._object = v35;
      String.append(_:)(v41);
      v85 = v100;
      v86 = v95;
      v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemPhotosSeasons);
      v101 = v42;
      v43._countAndFlagsBits = 540884256;
      v43._object = (void *)0xE400000000000000;
      String.append(_:)(v43);
      v44._countAndFlagsBits = v33;
      v44._object = v35;
      String.append(_:)(v44);
      v83 = v101;
      v84 = v96;
      v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemTextContent);
      v102 = v45;
      v46._countAndFlagsBits = 540884256;
      v46._object = (void *)0xE400000000000000;
      String.append(_:)(v46);
      v47._countAndFlagsBits = v33;
      v47._object = v35;
      String.append(_:)(v47);
      v82 = v97;
      v93 = v23;
      v48 = v102;
      _StringGuts.grow(_:)(20);
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemFilename);
      v50 = v24;
      v52 = v51;
      swift_bridgeObjectRelease(0xE000000000000000);
      v98._countAndFlagsBits = v49;
      v98._object = v52;
      v24 = v50;
      v53._countAndFlagsBits = 540884256;
      v53._object = (void *)0xE400000000000000;
      String.append(_:)(v53);
      v54._countAndFlagsBits = v33;
      v54._object = v35;
      String.append(_:)(v54);
      v55._countAndFlagsBits = 545029152;
      v55._object = (void *)0xE400000000000000;
      String.append(_:)(v55);
      v56._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(MDItemDisplayName);
      object = v56._object;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(object);
      v58._countAndFlagsBits = 540884256;
      v58._object = (void *)0xE400000000000000;
      String.append(_:)(v58);
      v59._countAndFlagsBits = v33;
      v59._object = v35;
      String.append(_:)(v59);
      swift_bridgeObjectRelease(v35);
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease(0xE000000000000000);
      v60._countAndFlagsBits = v88;
      v60._object = v87;
      String.append(_:)(v60);
      swift_bridgeObjectRelease(v87);
      v61._countAndFlagsBits = 545029152;
      v61._object = (void *)0xE400000000000000;
      String.append(_:)(v61);
      v62._countAndFlagsBits = v86;
      v62._object = v85;
      String.append(_:)(v62);
      swift_bridgeObjectRelease(v85);
      v63._countAndFlagsBits = 545029152;
      v63._object = (void *)0xE400000000000000;
      String.append(_:)(v63);
      v64._countAndFlagsBits = v84;
      v64._object = v83;
      String.append(_:)(v64);
      swift_bridgeObjectRelease(v83);
      v65._countAndFlagsBits = 545029152;
      v65._object = (void *)0xE400000000000000;
      String.append(_:)(v65);
      v66._countAndFlagsBits = v82;
      v66._object = v48;
      String.append(_:)(v66);
      v67 = v48;
      v23 = v93;
      swift_bridgeObjectRelease(v67);
      v68._countAndFlagsBits = 545029152;
      v68._object = (void *)0xE400000000000000;
      String.append(_:)(v68);
      String.append(_:)(v98);
      swift_bridgeObjectRelease(v98._object);
      v69._countAndFlagsBits = 41;
      v69._object = (void *)0xE100000000000000;
      String.append(_:)(v69);
      sub_10045C708(40, (void *)0xE100000000000000);
      *(_QWORD *)&v70 = swift_bridgeObjectRelease(0xE100000000000000).n128_u64[0];
    }
    else
    {
      v74 = String._bridgeToObjectiveC()();
      objc_msgSend(v27, "setFilename:", v74);

    }
    objc_msgSend(v14, "setSearchQuery:", v27, v70);
    v75 = objc_allocWithZone((Class)type metadata accessor for FileEntitySpotlight.Fetcher());
    v76 = v23;
    swift_retain();
    v77 = sub_1002A1168(v14, v90, v91);
    v78 = *(void **)(v5 + 48);
    *(_QWORD *)(v5 + 48) = v77;
    v79 = v77;

    v80 = *(void **)(v5 + 48);
    if (v80)
    {
      v81 = v80;
      sub_10029F460();

      v27 = v79;
      v79 = v81;
    }

    sub_100029224((uint64_t)v103);
  }
  else
  {

    v71 = sub_1002A2058();
    v72 = swift_allocError(&type metadata for FileEntitySpotlight.FetchingError, v71, 0, 0);
    *v73 = 1;
    a3(v72, 1);
    swift_errorRelease(v72);

  }
}

void sub_1002A0A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v17[24];

  v8 = sub_10006922C(&qword_10064C3B8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v8);
    v13 = *(unsigned __int8 *)(v9 + 80);
    v14 = (v13 + 16) & ~v13;
    v15 = swift_allocObject(&unk_1005D8488, v14 + v10, v13 | 7);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v15 + v14, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v8);
    sub_1002A02F0(a3, a4, (void (*)(uint64_t, uint64_t))sub_1002A2054, v15);
    swift_release(v15);
    swift_release(v12);
  }
  else
  {
    v16 = _swiftEmptyArrayStorage;
    CheckedContinuation.resume(returning:)(&v16, v8);
  }
}

uint64_t sub_1002A0B88(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v4 = sub_10006922C(&qword_10064C3B8);
    return CheckedContinuation.resume(throwing:)(&v5, v4);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v2 = sub_10006922C(&qword_10064C3B8);
    return CheckedContinuation.resume(returning:)(&v5, v2);
  }
}

void sub_1002A0BF4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, __n128);
  char *v11;
  NSObject *v12;
  __n128 v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(uint64_t, uint64_t, __n128);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  __n128 v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  __n128 v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, __n128);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t aBlock[5];
  uint64_t v59;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v51 - v6;
  v9 = Logger.AppIntents.unsafeMutableAddressor(v8);
  v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v53 = v9;
  v54 = v10;
  ((void (*)(char *))v10)(v7);
  v11 = v0;
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.info.getter(v13);
  v15 = os_log_type_enabled(v12, v14);
  v55 = v1;
  v56 = v4;
  if (v15)
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v52 = swift_slowAlloc(32, -1);
    aBlock[0] = v52;
    *(_DWORD *)v16 = 136315138;
    v51[1] = v16 + 4;
    v17 = objc_msgSend(v11, "description");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v57 = sub_1000544FC(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, aBlock);

    v21 = v20;
    v1 = v55;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "FileEntitySpotlightFetcher (%s stoping", v16, 0xCu);
    v22 = v52;
    swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

  }
  v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v7, v1);
  v24 = *(void (**)(uint64_t, uint64_t, __n128))&v11[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  if (v24)
  {
    v25 = *(_QWORD *)&v11[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler
                        + 8];
    v26 = sub_1002A2058();
    v27 = swift_allocError(&type metadata for FileEntitySpotlight.FetchingError, v26, 0, 0);
    *v28 = 0;
    v29 = swift_retain();
    v24(v27, 1, v29);
    sub_100087534((uint64_t)v24, v25);
    swift_errorRelease(v27);
  }
  v30 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection], "workingQueue");
  v31 = swift_allocObject(&unk_1005D8550, 24, 7);
  *(_QWORD *)(v31 + 16) = v11;
  v32 = swift_allocObject(&unk_1005D8578, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_1002A2128;
  *(_QWORD *)(v32 + 24) = v31;
  aBlock[4] = (uint64_t)sub_10010DB64;
  v59 = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10006655C;
  aBlock[3] = (uint64_t)&unk_1005D8590;
  v33 = _Block_copy(aBlock);
  v34 = v59;
  v35 = v11;
  swift_retain();
  swift_release(v34);
  dispatch_sync(v30, v33);

  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v32, "", 123, 219, 47, 1);
  v36 = swift_release(v32);
  if ((v33 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v37 = v56;
    v54(v56, v53, v1, v36);
    v38 = v1;
    v39 = v35;
    v40 = Logger.logObject.getter(v39);
    v42 = static os_log_type_t.info.getter(v41);
    if (os_log_type_enabled(v40, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v54 = (void (*)(char *, uint64_t, uint64_t, __n128))v23;
      v45 = v44;
      aBlock[0] = v44;
      *(_DWORD *)v43 = 136315138;
      v46 = objc_msgSend(v39, "description");
      v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v53 = v31;
      v49 = v48;

      v57 = sub_1000544FC(v47, v49, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, aBlock);

      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v40, v42, "FileEntitySpotlightFetcher (%s stoped", v43, 0xCu);
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v43, -1, -1);

      ((void (*)(char *, uint64_t))v54)(v56, v55);
      v50 = v53;
    }
    else
    {

      v23(v37, v38);
      v50 = v31;
    }
    swift_release(v50);
  }
}

uint64_t sub_1002A1104()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for FileEntitySpotlight.Source()
{
  return objc_opt_self(_TtCO5Files19FileEntitySpotlight6Source);
}

char *sub_1002A1168(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t (*v16)(uint64_t, char);
  uint64_t (**v17)(uint64_t, char);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection] = a1;
  v41.receiver = v4;
  v41.super_class = ObjectType;
  v14 = a1;
  v15 = (char *)objc_msgSendSuper2(&v41, "init");
  v16 = (uint64_t (*)(uint64_t, char))swift_allocObject(&unk_1005D8528, 40, 7);
  *((_QWORD *)v16 + 2) = v15;
  *((_QWORD *)v16 + 3) = a2;
  *((_QWORD *)v16 + 4) = a3;
  v17 = (uint64_t (**)(uint64_t, char))&v15[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  v18 = *(_QWORD *)&v15[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler
                      + 8];
  *v17 = sub_1002A2118;
  v17[1] = v16;
  v20 = v15;
  v38 = a3;
  swift_retain();
  sub_100087534(v18, v19);
  v21 = Logger.AppIntents.unsafeMutableAddressor(objc_msgSend(*(id *)&v20[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection], "setDelegate:", v20));
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
  v22 = v20;
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.info.getter(v24);
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v37 = v9;
    v28 = v27;
    v40 = v27;
    v36 = v10;
    *(_DWORD *)v26 = 136315138;
    v34[1] = v26 + 4;
    v29 = objc_msgSend(v22, "description");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v35 = v14;
    v32 = v31;

    v39 = sub_1000544FC(v30, v32, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);

    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v23, v25, "FileEntitySpotlightFetcher (%s init", v26, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    swift_release(v38);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  }
  else
  {

    swift_release(v38);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v22;
}

uint64_t sub_1002A1458(uint64_t a1, char a2, char *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  __n128 v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = a2 & 1;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &a3[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  v13 = *(_QWORD *)&a3[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
  v14 = *(_QWORD *)&a3[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler
                     + 8];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  sub_100087534(v13, v14);
  sub_1002A0BF4();
  v15 = a4(a1, v7);
  v16 = Logger.AppIntents.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
  v17 = a3;
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v18, v20))
  {
    v31 = v8;
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v33 = v22;
    *(_DWORD *)v21 = 136315138;
    v29[1] = v21 + 4;
    v23 = objc_msgSend(v17, "description");
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v30 = v9;
    v25 = v24;
    v27 = v26;

    v32 = sub_1000544FC(v25, v27, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);

    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "FileEntitySpotlightFetcher (%s completed", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t type metadata accessor for FileEntitySpotlight.Fetcher()
{
  return objc_opt_self(_TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher);
}

uint64_t sub_1002A1720(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1005D83E8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v12 = swift_allocObject(&unk_1005D8410, 32, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1002A2018;
  v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D8428;
  v13 = _Block_copy(aBlock);
  v14 = v24;
  v15 = a1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v19 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1002A1954(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  id v50;
  void (*v51)(_QWORD *, _QWORD, __n128);
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *Strong;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _BYTE v66[24];

  v4 = type metadata accessor for Logger(0);
  v58 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100643900);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  v15 = (int *)type metadata accessor for DOCFileEntity(0);
  v63 = *((_QWORD *)v15 - 1);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v64 = (uint64_t)&v55 - v19;
  a1 += 16;
  swift_beginAccess(a1, v66, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v20 = objc_msgSend(a2, "items");
    v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v54 = v22;
      else
        v54 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v24 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v25 = _swiftEmptyArrayStorage;
    v62 = (_QWORD *)v24;
    if (v24)
    {
      v65 = _swiftEmptyArrayStorage;
      sub_1001550AC(0, v24 & ~(v24 >> 63), 0);
      if (v24 < 0)
      {
        __break(1u);
        return;
      }
      v55 = v4;
      v60 = v22 & 0xC000000000000001;
      v59 = sub_10006922C((uint64_t *)&unk_100643910);
      v26 = 0;
      v61 = v22;
      do
      {
        if (v60)
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v22);
        else
          v27 = *(id *)(v22 + 8 * (_QWORD)v26 + 32);
        v28 = v27;
        v29 = v15[5];
        *(_QWORD *)&v17[v29] = EntityProperty<>.init()();
        v30 = v15[6];
        *(_QWORD *)&v17[v30] = EntityProperty<>.init()();
        FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v28, "itemID"));
        *(_QWORD *)&v17[v15[7]] = v28;
        v31 = v28;
        v32 = objc_msgSend(v31, "creationDate");
        if (v32)
        {
          v33 = v32;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

          v34 = type metadata accessor for Date(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v14, 0, 1, v34);
        }
        else
        {
          v35 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 1, 1, v35);
        }
        sub_1001114C4((uint64_t)v14, (uint64_t)v11);
        EntityProperty.wrappedValue.setter(v11);
        sub_10011150C((uint64_t)v14);
        v36 = objc_msgSend(v31, "contentModificationDate");
        if (v36)
        {
          v37 = v36;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

          v38 = type metadata accessor for Date(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 0, 1, v38);
        }
        else
        {
          v39 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 1, 1, v39);
        }
        sub_1001114C4((uint64_t)v8, (uint64_t)v11);
        EntityProperty.wrappedValue.setter(v11);
        sub_10011150C((uint64_t)v8);

        sub_10011154C((uint64_t)v17, v64);
        v25 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
        {
          sub_1001550AC(0, v25[2] + 1, 1);
          v25 = v65;
        }
        v41 = v25[2];
        v40 = v25[3];
        if (v41 >= v40 >> 1)
        {
          sub_1001550AC(v40 > 1, v41 + 1, 1);
          v25 = v65;
        }
        v26 = (_QWORD *)((char *)v26 + 1);
        v25[2] = v41 + 1;
        v23 = sub_10011154C(v64, (uint64_t)v25+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v41);
        v22 = v61;
      }
      while (v62 != v26);
      v4 = v55;
    }
    v42 = Logger.AppIntents.unsafeMutableAddressor(v23);
    v44 = v57;
    v43 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v42, v4);
    v45 = swift_bridgeObjectRetain(v22);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.debug.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = v22;
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v49 = 134217984;
      swift_bridgeObjectRelease(v48);
      v65 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
      swift_bridgeObjectRelease(v48);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "FileEntitySpotlightFetcher found %ld items", v49, 0xCu);
      swift_slowDealloc(v49, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v22, 2);
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v4);
    v50 = Strong;
    v51 = *(void (**)(_QWORD *, _QWORD, __n128))&Strong[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler];
    if (v51)
    {
      v52 = *(_QWORD *)&Strong[OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_completionHandler
                             + 8];
      v53 = swift_retain();
      v51(v25, 0, v53);
      sub_100087534((uint64_t)v51, v52);
      swift_bridgeObjectRelease(v25);

    }
    else
    {

      swift_bridgeObjectRelease(v25);
    }
  }
}

ValueMetadata *type metadata accessor for FileEntitySpotlight()
{
  return &type metadata for FileEntitySpotlight;
}

uint64_t sub_1002A1FC8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A1FEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A2018()
{
  uint64_t v0;

  sub_1002A1954(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002A2020()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002A2044(uint64_t a1)
{
  uint64_t *v1;

  sub_1002A0A3C(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1002A2058()
{
  unint64_t result;

  result = qword_10064C3C0;
  if (!qword_10064C3C0)
  {
    result = swift_getWitnessTable(&unk_1004E001C, &type metadata for FileEntitySpotlight.FetchingError);
    atomic_store(result, (unint64_t *)&qword_10064C3C0);
  }
  return result;
}

uint64_t sub_1002A209C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002A20C0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection), "doc_startObserving");
}

uint64_t sub_1002A20DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A20EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002A2118(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1002A1458(a1, a2 & 1, *(char **)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
}

id sub_1002A2128()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtCO5Files19FileEntitySpotlightP33_1F971BE10FE1F60F4C2B5C564BBBC7C17Fetcher_queryCollection), "doc_stopObserving");
}

uint64_t sub_1002A2144()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A2154(uint64_t a1)
{
  uint64_t v1;

  sub_1002A01C8(a1, v1);
}

uint64_t sub_1002A2160(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_10006922C(&qword_10064C3B8);
  return sub_1002A0B88(a1, v3);
}

uint64_t storeEnumTagSinglePayload for FileEntitySpotlight.FetchingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002A2200 + 4 * byte_1004DFF35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A2234 + 4 * byte_1004DFF30[v4]))();
}

uint64_t sub_1002A2234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A223C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A2244);
  return result;
}

uint64_t sub_1002A2250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A2258);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002A225C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A2264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileEntitySpotlight.FetchingError()
{
  return &type metadata for FileEntitySpotlight.FetchingError;
}

unint64_t sub_1002A2284()
{
  unint64_t result;

  result = qword_10064C3D8;
  if (!qword_10064C3D8)
  {
    result = swift_getWitnessTable(&unk_1004DFFF4, &type metadata for FileEntitySpotlight.FetchingError);
    atomic_store(result, (unint64_t *)&qword_10064C3D8);
  }
  return result;
}

id sub_1002A22DC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTransitionableContext()), "init");
  qword_100672B20 = (uint64_t)result;
  return result;
}

unint64_t sub_1002A2358(char a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  if ((a1 & 1) != 0)
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  if ((a1 & 1) != 0)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v3);
  return 0xD00000000000001BLL;
}

unint64_t sub_1002A23F4()
{
  char *v0;

  return sub_1002A2358(*v0);
}

uint64_t sub_1002A23FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

id sub_1002A244C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTransitionableContext();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCTransitionableContext()
{
  return objc_opt_self(_TtC5Files24DOCTransitionableContext);
}

uint64_t sub_1002A24AC()
{
  return type metadata accessor for DOCTransitionableContext.SettingsTransaction(0);
}

uint64_t type metadata accessor for DOCTransitionableContext.SettingsTransaction(uint64_t a1)
{
  uint64_t result;

  result = qword_10064C440;
  if (!qword_10064C440)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCTransitionableContext.SettingsTransaction);
  return result;
}

uint64_t sub_1002A24F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1004E00A8;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCTransitionableContext.Settings(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002A25B0 + 4 * byte_1004E0065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A25E4 + 4 * byte_1004E0060[v4]))();
}

uint64_t sub_1002A25E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A25EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A25F4);
  return result;
}

uint64_t sub_1002A2600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A2608);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002A260C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A2614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCTransitionableContext.Settings()
{
  return &type metadata for DOCTransitionableContext.Settings;
}

void sub_1002A2630(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1002A263C()
{
  void *v0;
  id v1;

  v0 = (void *)UICellConfigurationState.traitCollection.getter();
  v1 = objc_msgSend(v0, "sourceOutlineStyle");

  if (v1 == (id)1)
    return static UIListContentConfiguration.prominentInsetGroupedHeader()();
  else
    return static UIListContentConfiguration.header()();
}

uint64_t sub_1002A26A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  swift_bridgeObjectRetain(v1);
  return UIListContentConfiguration.text.setter(v2, v1);
}

double sub_1002A26E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _BYTE v12[32];
  _BYTE v13[24];

  v1 = sub_10017361C();
  v2 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78));
  swift_beginAccess(v2, v13, 0, 0);
  v3 = *v2;
  swift_retain();
  v4 = swift_bridgeObjectRetain(v3);
  v5 = sub_100493AB4(v4, v1);
  swift_bridgeObjectRelease(v3);
  swift_release(v1);
  if ((v5 & 1) == 0)
  {
    swift_beginAccess(v2, v12, 33, 0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v1);
    specialized Array._endMutation()(v9);
    v10 = swift_endAccess(v12);
    sub_100393364(v10);
  }
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

void sub_1002A27F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t ObjCClassMetadata;
  void *ObjCClassFromMetadata;
  uint64_t v14;
  NSString v15;
  NSString v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;

  v5 = sub_10006922C(&qword_10064C6E0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a1;
  v22 = a2;
  v8 = objc_msgSend(v2, "window");
  v9 = v8;
  if (v8)

  v10 = __chkstk_darwin(v9 == 0);
  *(_QWORD *)&v20[-32] = sub_1002A2BB8;
  *(_QWORD *)&v20[-24] = v20;
  *(_QWORD *)&v20[-16] = v2;
  UIView.doc_performBlock(allowingAnimations:block:)(v10, sub_1002A2BF8);
  swift_bridgeObjectRelease(a2);
  v11 = objc_msgSend((id)objc_opt_self(DOCAXIdentifier), "sidebar");
  ObjCClassMetadata = swift_getObjCClassMetadata(v11);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(ObjCClassMetadata);
  sub_10048E3B4(v7);
  v14 = *(_QWORD *)&v7[*(int *)(v5 + 40) + 8];
  swift_bridgeObjectRetain(v14);
  sub_1002A2B78((uint64_t)v7);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(ObjCClassFromMetadata, "headerWithTitle:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v19).n128_u64[0];
  }
  objc_msgSend(v2, "setAccessibilityIdentifier:", v16, v17);

}

id sub_1002A29A4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  NSString v7;
  uint64_t v9;

  v2 = sub_10006922C(&qword_10064C6E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  sub_10048E3B4(v4);
  v6 = *(_QWORD *)&v4[*(int *)(v2 + 40) + 8];
  swift_bridgeObjectRetain(v6);
  sub_1002A2B78((uint64_t)v4);

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_1002A2A54(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v11, "initWithFrame:", a3, a4, a5, a6);
}

uint64_t sub_1002A2AC0()
{
  return type metadata accessor for DOCSidebarHeaderCell(0);
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCSidebarHeaderContentValueBinding(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for DOCGoToSuggestionsViewController.Section(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for DOCSidebarHeaderContentValueBinding(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for DOCSidebarHeaderContentValueBinding(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

void *sub_1002A2B6C()
{
  return &protocol witness table for UIListContentConfiguration;
}

uint64_t sub_1002A2B78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_10064C6E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002A2BB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = a1[1];
  swift_bridgeObjectRetain(v3);
  result = swift_bridgeObjectRelease(v5);
  *a1 = v4;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002A2BF8()
{
  uint64_t v0;

  return sub_10048F388(*(void (**)(char *, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

unint64_t sub_1002A2C0C()
{
  unint64_t result;

  result = qword_10064C6F0;
  if (!qword_10064C6F0)
  {
    result = swift_getWitnessTable(&unk_1004E01A0, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C6F0);
  }
  return result;
}

uint64_t sub_1002A2C50()
{
  return sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
}

unint64_t sub_1002A2C80()
{
  unint64_t result;

  result = qword_10064C6F8;
  if (!qword_10064C6F8)
  {
    result = swift_getWitnessTable(&unk_1004E01C8, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C6F8);
  }
  return result;
}

unint64_t sub_1002A2CC8()
{
  unint64_t result;

  result = qword_10064C700;
  if (!qword_10064C700)
  {
    result = swift_getWitnessTable(&unk_1004E0258, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C700);
  }
  return result;
}

unint64_t sub_1002A2D10()
{
  unint64_t result;

  result = qword_10064C708;
  if (!qword_10064C708)
  {
    result = swift_getWitnessTable(&unk_1004E0280, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C708);
  }
  return result;
}

uint64_t sub_1002A2D54(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10056BA6C, 1) + 8);
}

uint64_t sub_1002A2D78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056BA44, 1);
}

uint64_t sub_1002A2D88()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1002A2DB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10006922C(&qword_10064C750);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_10064C758);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1002A2C80();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for CreateFolderIntent, v6);
  v7._object = (void *)0x8000000100521B10;
  v7._countAndFlagsBits = 0xD000000000000023;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E0318);
  v9 = sub_10006922C(&qword_10064C760);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_1004E0340);
  v12 = sub_10006922C(&qword_10064C768);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CreateFolderIntent, v6);
  return IntentParameterSummary.init(_:table:_:)(v2, 0x6E65746E49707041, 0xEA00000000007374, sub_1002A2F80, 0, &type metadata for CreateFolderIntent, v6);
}

uint64_t sub_1002A2F80()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1004E0368);
  v1 = sub_1002A2C80();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain();
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for CreateFolderIntent, v1, v5);
  swift_bridgeObjectRelease(v8);
  swift_release(v2);
  return v6;
}

uint64_t sub_1002A3044()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672B30);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672B30);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

id sub_1002A309C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  qword_10064C6E8 = (uint64_t)result;
  return result;
}

uint64_t sub_1002A30D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_10006922C(&qword_100643360);
  v4[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DOCFileEntity(0);
  v4[9] = v6;
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002A3158, 0, 0);
}

uint64_t sub_1002A3158()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *v10;

  v1 = v0[9];
  v2 = (_QWORD *)v0[10];
  IntentParameter.wrappedValue.getter(v2);
  v3 = *(void **)((char *)v2 + *(int *)(v1 + 28));
  v0[11] = v3;
  v4 = v3;
  sub_1000EACF8((uint64_t)v2);
  v5 = IntentParameter.wrappedValue.getter(v0 + 2);
  v6 = v0[3];
  if (v6)
  {
    v7 = v0[2];
  }
  else
  {
    v8 = (uint64_t *)DOCCreateFolderOperation.untitledFolderName.unsafeMutableAddressor(v5);
    v7 = *v8;
    v6 = v8[1];
    swift_bridgeObjectRetain(v6);
  }
  v0[12] = v7;
  v0[13] = v6;
  if (qword_100640F60 != -1)
    swift_once(&qword_100640F60, sub_1002A309C);
  IntentParameter.wrappedValue.getter(v0 + 17);
  v9 = (*((_BYTE *)v0 + 136) == 2) | *((_BYTE *)v0 + 136);
  v10 = (_QWORD *)swift_task_alloc(dword_100657164);
  v0[14] = v10;
  *v10 = v0;
  v10[1] = sub_1002A3270;
  return FPItemManager.createNewFolder(parentItem:folderName:shouldBounceOnCollision:)((uint64_t)v4, v7, v6, v9 & 1);
}

uint64_t sub_1002A3270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  v3[15] = a1;
  v3[16] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1002A33F0;
  }
  else
  {
    swift_bridgeObjectRelease(v3[13]);
    v5 = sub_1002A32E4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002A32E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 88);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 64);
    v6 = v1;
    sub_10012BCCC(v6, v4);
    v7 = sub_10005A360((unint64_t *)&qword_100643928, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DB0C8);
    static IntentResult.result<A>(value:)(v4, v3, v7);

    sub_1000EACF8(v4);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
  }
  else
  {
    v8 = sub_10021CAC4();
    v9 = swift_allocError(&type metadata for DOCLinkDeferredLocalizedError, v8, 0, 0);
    *v10 = 1;
    swift_willThrow(v9);

    v11 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v11);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A33F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  type metadata accessor for DOCCreateFolderOperation(0);
  v2 = static DOCCreateFolderOperation.isFilenameCollisionError(_:)(v1);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  if ((v2 & 1) != 0)
  {
    v6 = *(void **)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = IntentParameter.projectedValue.getter(v2);
    v9 = static DOCCreateFolderOperation.renameCollisionFormattedString(folderName:)(v5, v4);
    v11 = v10;
    v12 = swift_bridgeObjectRelease(v4);
    IntentDialog.init(stringLiteral:)(v9, v11, v12);
    v13 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    v14 = type metadata accessor for AppIntentError(0);
    v15 = sub_10005A360(&qword_1006458C8, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v14, v15, 0, 0);
    IntentParameter.needsValueError(_:)(v7);
    swift_release(v8);
    v16 = sub_10017009C(v7);
    swift_willThrow(v16);

    swift_errorRelease(v3);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
    swift_errorRelease(v3);
    v17 = *(void **)(v0 + 88);
    v18 = sub_10021CAC4();
    v19 = swift_allocError(&type metadata for DOCLinkDeferredLocalizedError, v18, 0, 0);
    *v20 = 1;
    swift_willThrow(v19);

  }
  v21 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A35A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A3F10();
  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1002A35D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100640F58 != -1)
    swift_once(&qword_100640F58, sub_1002A3044);
  v2 = type metadata accessor for IntentAuthenticationPolicy(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_100672B30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1002A364C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_10064C74C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA854;
  return sub_1002A30D4(a1, v4, v5, v6);
}

uint64_t sub_1002A36B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1002A37B8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1002A36E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A2C80();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1002A370C()
{
  unint64_t result;

  result = qword_10064C718;
  if (!qword_10064C718)
  {
    result = swift_getWitnessTable(&unk_1004E02CC, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C718);
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateFolderIntent()
{
  return &type metadata for CreateFolderIntent;
}

uint64_t sub_1002A3760()
{
  return sub_100062698(&qword_10064C720, &qword_10064C728, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002A378C()
{
  return sub_100062698(&qword_10064C730, &qword_100658E70, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002A37B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  void (*v34)(char *);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  int v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void (*v67)(char *);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;

  v0 = sub_10006922C(&qword_1006458A8);
  __chkstk_darwin(v0);
  v81 = (char *)&v62 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  __chkstk_darwin(v2);
  v78 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v77 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v75 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = v8;
  __chkstk_darwin(v8);
  v76 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v12);
  v69 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for InputConnectionBehavior(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v18);
  v66 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - v21;
  v23 = sub_10006922C(&qword_10064C738);
  __chkstk_darwin(v23);
  v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v26);
  v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10006922C(&qword_10064C740);
  v73 = v10;
  v74 = v29;
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v30(v28, 1, 1, v10);
  v72 = v30;
  v31 = type metadata accessor for String.IntentInputOptions(0);
  v83 = 0;
  v84 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v25, 1, 1, v31);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v33(v22, 1, 1, v32);
  v82 = enum case for InputConnectionBehavior.default(_:);
  v34 = *(void (**)(char *))(v15 + 104);
  v68 = v14;
  v34(v17);
  v67 = v34;
  v63 = v28;
  v74 = IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v28, &v83, v25, v22, v17);
  v64 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v30(v28, 1, 1, v10);
  v35 = type metadata accessor for DOCFileEntity(0);
  v36 = v69;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v69, 1, 1, v35);
  v70 = v32;
  v71 = v33;
  v33(v22, 1, 1, v32);
  v37 = v66;
  v33(v66, 1, 1, v32);
  v38 = sub_10006922C((uint64_t *)&unk_10064B460);
  v39 = type metadata accessor for UTType(0);
  v40 = swift_allocObject(v38, ((*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80) | 7);
  *(_OWORD *)(v40 + 16) = xmmword_1004D9670;
  static UTType.folder.getter(v40);
  v41 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v41, 64, 7);
  v83 = sub_10029FBBC(v40, 1);
  v84 = 0;
  v65 = v17;
  ((void (*)(char *, _QWORD, uint64_t))v34)(v17, v82, v14);
  v42 = sub_100111434();
  v43 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  v44 = v63;
  v69 = (char *)IntentParameter<>.init<A>(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v63, v36, v22, v37, v17, &v83, &type metadata for LocationOptionsProvider, v42, v43);
  v66 = (char *)sub_10006922C(&qword_1006458B0);
  v45 = v75;
  v46 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001005219D0);
  v47 = v77;
  static Locale.current.getter(v46);
  v48 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v49 = v78;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 104);
  v51 = v80;
  v50(v78, enum case for LocalizedStringResource.BundleDescription.main(_:), v80);
  LOWORD(v60) = 2;
  v52 = v76;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("CREATE_FOLDER_INTENT_BOUNCE_PARAMETER_TITLE", 43, 2, v45, 0x6E65746E49707041, 0xEA00000000007374, v47, v49, "Title for the bounce on file collision parameter of the Create Folder action", 76, v60);
  v53 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100521A80);
  static Locale.current.getter(v53);
  v50(v49, v48, v51);
  LOWORD(v61) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("CREATE_FOLDER_INTENT_BOUNCE_PARAMETER_DESCRIPTION", 49, 2, v45, 0x6E65746E49707041, 0xEA00000000007374, v47, v49, "Description for the bounce on file collision parameter of the Create Folder action", 82, v61);
  v54 = v44;
  v72(v44, 0, 1, v73);
  LOBYTE(v83) = 1;
  v55 = type metadata accessor for Bool.IntentDisplayName(0);
  v56 = v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v81, 1, 1, v55);
  v57 = v22;
  v71(v22, 1, 1, v70);
  v58 = v65;
  ((void (*)(char *, _QWORD, uint64_t))v67)(v65, v82, v68);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v52, v54, &v83, v56, v57, v58);
  return v74;
}

uint64_t sub_1002A3E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002A3EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002A3EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1002A3F10()
{
  unint64_t result;

  result = qword_10064C770;
  if (!qword_10064C770)
  {
    result = swift_getWitnessTable(&unk_1004E029C, &type metadata for CreateFolderIntent);
    atomic_store(result, (unint64_t *)&qword_10064C770);
  }
  return result;
}

uint64_t sub_1002A3F54(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char v31;

  v2 = v1;
  v4 = swift_allocObject(&unk_1005D8990, 24, 7);
  *(_QWORD *)(v4 + 16) = 0;
  v5 = (id *)(v4 + 16);
  v6 = swift_allocObject(&unk_1005D89B8, 41, 7);
  v7 = v6;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = -1;
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (!v8)
  {
    *v5 = 0;
    *(_QWORD *)(v6 + 24) = 0;
    *(_QWORD *)(v6 + 32) = 0;
    *(_QWORD *)(v6 + 16) = 0;
    *(_BYTE *)(v6 + 40) = -1;
    goto LABEL_9;
  }
  v31 = a1;
  v9 = *(void **)(v8 + 24);
  *v5 = v9;
  v11 = *(void **)(v8 + 32);
  v10 = *(_QWORD *)(v8 + 40);
  v12 = *(_QWORD *)(v8 + 48);
  v13 = *(unsigned __int8 *)(v8 + 56);
  v14 = v9;
  sub_1000B1650(v11, v10, v12, v13);
  *(_QWORD *)(v7 + 16) = v11;
  *(_QWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 32) = v12;
  *(_BYTE *)(v7 + 40) = v13;
  if (!v9)
  {
LABEL_9:
    sub_1002A61FC(0xD000000000000017, 0x8000000100521B50, v7, v4, (uint64_t)v2);
LABEL_13:
    v21 = 1;
    goto LABEL_14;
  }
  v15 = (char *)v14;
  if (v13 == 255)
  {
    sub_1002A61FC(0xD000000000000017, 0x8000000100521B70, v7, v4, (uint64_t)v2);

    goto LABEL_13;
  }
  sub_1000B1650(v11, v10, v12, v13);
  sub_10039742C(0, v16);
  v17 = *(void **)&v15[qword_1006510B8];
  if (!v17 || (v18 = objc_msgSend(v17, "text")) == 0)
  {
    sub_1002A61FC(0xD00000000000001ELL, 0x8000000100521B90, v7, v4, (uint64_t)v2);
LABEL_11:

    sub_1000B1664(v11, v10, v12, v13);
    goto LABEL_13;
  }
  v19 = v18;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v30 = v20;

  v28 = v15;
  switch(v13)
  {
    case 0:
      sub_1000E4F7C(v11, v10, v12, 0);
      v21 = sub_1002A6ABC(v11, v29, (unint64_t)v30, v7, v4, v2);
      sub_1000B1664(v11, v10, v12, 0);
      swift_bridgeObjectRelease(v30);
      v22 = v11;
      v23 = v10;
      v24 = v12;
      v25 = 0;
      break;
    case 1:
      sub_1000E4F7C(v11, v10, v12, 1);
      v21 = sub_1002A7338(v11, v29, (unint64_t)v30, v7, v4, v2);
      sub_1000B1664(v11, v10, v12, 1);
      swift_bridgeObjectRelease(v30);
      v22 = v11;
      v23 = v10;
      v24 = v12;
      v25 = 1;
      break;
    case 2:
      sub_1000E4F7C(v11, v10, v12, 2);
      v21 = sub_1002A7CFC(v11, v29, v30, v31 & 1, v7, v4, (uint64_t)v2);
      sub_1000B1664(v11, v10, v12, 2);
      swift_bridgeObjectRelease(v30);
      v22 = v11;
      v23 = v10;
      v24 = v12;
      v25 = 2;
      break;
    case 3:
      v27 = v11;
      v21 = sub_1002A6ABC(v27, v29, (unint64_t)v30, v7, v4, v2);
      swift_bridgeObjectRelease(v30);

      v22 = v11;
      v23 = v10;
      v24 = v12;
      v25 = 3;
      break;
    default:
      swift_bridgeObjectRelease(v30);
      goto LABEL_11;
  }
  sub_1000B1664(v22, v23, v24, v25);

LABEL_14:
  sub_1002A5854((uint64_t)v2, v5);
  swift_release(v4);
  swift_release(v7);
  return v21 & 1;
}

BOOL DOCSidebarViewController.isEditing.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  return v1 && *(_BYTE *)(v1 + 17) != 0;
}

id DOCSidebarViewController.isEditing.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setEditing:animated:", a1 & 1, 0);
}

void sub_1002A4394(unsigned __int8 a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  NSString v16;
  NSString v17;
  uint64_t v18;
  _BOOL8 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  id v25;

  v5 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (!v6)
  {
    if (!a1)
      return;
    v7 = 0;
LABEL_10:
    v14 = 0;
    v15 = 0;
    if (a1 == 2)
      goto LABEL_12;
    goto LABEL_11;
  }
  v7 = *(unsigned __int8 *)(v6 + 17);
  if (v7 == a1)
    return;
  if (a1)
    goto LABEL_10;
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation];
  if (v8)
  {
    v9 = objc_msgSend(v2, "view", swift_retain().n128_f64[0]);
    if (!v9)
    {
      __break(1u);
      return;
    }
    v10 = v9;
    objc_msgSend(v9, "setUserInteractionEnabled:", 0);

    v11 = swift_allocObject(&unk_1005D8C38, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    v12 = *(_QWORD *)(v8 + 16);
    v13 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = sub_1002A889C;
    *(_QWORD *)(v8 + 24) = v11;
    sub_100087534(v12, v13);
    swift_release(v8);
  }
  v14 = 1;
LABEL_11:
  sub_1002A3F54(1);
  v15 = v14;
LABEL_12:
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "willChangeValueForKey:", v16);

  sub_1002341D4(a1);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "didChangeValueForKey:", v17);

  v18 = *(_QWORD *)&v2[v5];
  if (v18)
    v19 = *(unsigned __int8 *)(v18 + 17) != 0;
  else
    v19 = 0;
  v20 = sub_1002A4A44(v2);
  objc_msgSend(v20, "setEditing:animated:", v19, a2 & 1);

  if (a1 != 1)
  {
    v23 = *(_QWORD *)&v2[v5];
    v24 = !v23 || *(_BYTE *)(v23 + 17) == 0;
    __chkstk_darwin(v21);
    UIViewController.doc_performBlock(allowingAnimations:block:)(a2 & 1, sub_1002A886C);
    if (v7 == 1 && v24)
    {
      v25 = objc_msgSend(v2, "collectionViewLayout");
      objc_msgSend(v25, "doc_resetSwipedRows");

      v22 = *(_QWORD *)&v2[v5];
      if (!v22)
        goto LABEL_28;
      goto LABEL_25;
    }
  }
  v22 = *(_QWORD *)&v2[v5];
  if (v22)
  {
LABEL_25:
    if (v7 != 2 && *(_BYTE *)(v22 + 17) != 2)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (v7 == 2)
LABEL_27:
    sub_100013B5C(1, 1);
LABEL_28:
  if (v15)
    sub_1000A3FE8(0, 0);
}

Swift::Void __swiftcall DOCSidebarViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v6;
  sub_1002A46F8(_, animated);
  v7 = *(_QWORD *)(v2 + v3);
  v5 = __OFSUB__(v7, 1);
  v8 = v7 - 1;
  if (v5)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v2 + v3) = v8;
  if (!v8 && *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
  {
    v9 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    sub_100013B5C(v9, 1);
  }
}

void sub_1002A46F8(char a1, char a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  objc_super v22;

  if (!objc_msgSend(v2, "isViewLoaded") || objc_msgSend(v2, "isEditing") == (a1 & 1))
    return;
  if ((a1 & 1) != 0
    || (v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession]) == 0
    || !*(_BYTE *)(v5 + 17)
    || (sub_1002A3F54(0) & 1) != 0)
  {
    v22.receiver = v2;
    v22.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
    v6 = objc_msgSendSuper2(&v22, "collectionView");
    if (!v6)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v7 = v6;
    v8 = type metadata accessor for DOCSidebarCollectionView();
    v9 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0), "hasUncommittedUpdates");

    if ((v9 & 1) != 0)
      return;
    sub_10002D328();
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
    if ((a1 & 1) != 0)
    {
      if (v10 && *(_BYTE *)(v10 + 17))
        return;
      v11 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
      v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
      {
        __break(1u);
        goto LABEL_27;
      }
      *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount] = v14;
      sub_1002A4394(2u, a2 & 1);
      v15 = *(_QWORD *)&v2[v11];
      v13 = __OFSUB__(v15, 1);
      v10 = v15 - 1;
      if (!v13)
      {
LABEL_20:
        *(_QWORD *)&v2[v11] = v10;
        if (!v10 && v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] == 1)
        {
          v19 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
          sub_100013B5C(v19, 1);
        }
        return;
      }
      __break(1u);
    }
    if (!v10 || !*(_BYTE *)(v10 + 17))
      return;
    v11 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount];
    v13 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (!v13)
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount] = v17;
      sub_1002A4394(0, a2 & 1);
      v18 = *(_QWORD *)&v2[v11];
      v13 = __OFSUB__(v18, 1);
      v10 = v18 - 1;
      if (!v13)
        goto LABEL_20;
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = sub_1002A4A44(v2);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "setEditing:animated:", 1, 0);

  }
}

uint64_t sub_1002A4968()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A498C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_1000E4FD0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject(v0, 41, 7);
}

void sub_1002A49C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "view");

    if (v5)
    {
      objc_msgSend(v5, "setUserInteractionEnabled:", 1);

    }
    else
    {
      __break(1u);
    }
  }
}

void *sub_1002A4A44(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = objc_msgSend(a1, "parentViewController");
  if (!v2 || (v3 = v2, v4 = sub_1002A4A44(), v3, !v4))
  {
    v5 = objc_opt_self(DOCFullDocumentManagerViewController);
    if (swift_dynamicCastObjCClass(a1, v5)
      || (v6 = type metadata accessor for DOCSidebarViewController(0), swift_dynamicCastClass(a1, v6)))
    {
      v7 = a1;
      return a1;
    }
    else
    {
      return 0;
    }
  }
  return (void *)v4;
}

void sub_1002A4AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v1 = type metadata accessor for DOCSidebarViewController.SwipeToDeletePresentationContext();
  v2 = swift_allocObject(v1, 32, 7);
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation) = v2;
  swift_release(v3);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v4 && *(_BYTE *)(v4 + 17))
    return;
  v5 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v8;
  sub_1002A4394(1u, 1);
  v9 = *(_QWORD *)(v0 + v5);
  v7 = __OFSUB__(v9, 1);
  v10 = v9 - 1;
  if (v7)
  {
LABEL_10:
    __break(1u);
    return;
  }
  *(_QWORD *)(v0 + v5) = v10;
  if (!v10 && *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
  {
    v11 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    sub_100013B5C(v11, 1);
  }
}

void sub_1002A4BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation);
  if (v3)
  {
    v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      v5 = *(_QWORD *)(v3 + 24);
      swift_retain();
      v6 = sub_10008BA00((uint64_t)v4, v5);
      v4(v6);
      sub_100087534((uint64_t)v4, v5);
      v7 = *(_QWORD *)(v3 + 16);
    }
    else
    {
      swift_retain();
      v7 = 0;
    }
    v9 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 0;
    sub_100087534(v7, v9);
    swift_release(v3);
    v8 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v8);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v10 && *(_BYTE *)(v10 + 17) == 1)
  {
    v11 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v14;
      sub_1002A4394(0, 1);
      v15 = *(_QWORD *)(v1 + v11);
      v13 = __OFSUB__(v15, 1);
      v16 = v15 - 1;
      if (!v13)
      {
        *(_QWORD *)(v1 + v11) = v16;
        if (!v16 && *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
        {
          v17 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
          sub_100013B5C(v17, 1);
        }
        return;
      }
    }
    __break(1u);
  }
}

id sub_1002A4D24(__int128 *a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  NSString v9;
  void *v10;
  id v11;
  __int128 v13;
  _QWORD aBlock[5];
  uint64_t v15;
  _BYTE v16[32];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unsigned __int8 v20;

  v17 = *a1;
  v1 = v17;
  if (*(_BYTE *)(v17 + 49) != 1)
    return 0;
  sub_1002A88A4((uint64_t)(a1 + 1), (uint64_t)v16);
  sub_1002A88A4((uint64_t)v16, (uint64_t)&v18);
  v3 = v20;
  if (v20 == 255)
    return 0;
  v13 = v18;
  v4 = v19;
  v5 = *(_QWORD *)(v1 + 64);
  v6 = swift_allocObject(&unk_1005D8C38, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = swift_allocObject(&unk_1005D8C60, 97, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v13;
  *(_QWORD *)(v7 + 40) = v4;
  *(_BYTE *)(v7 + 48) = v3;
  v8 = a1[1];
  *(_OWORD *)(v7 + 56) = *a1;
  *(_OWORD *)(v7 + 72) = v8;
  *(_OWORD *)(v7 + 81) = *(__int128 *)((char *)a1 + 25);
  sub_1002A8974((uint64_t)v16);
  sub_1002A8974((uint64_t)v16);
  sub_1002A8974((uint64_t)v16);
  swift_bridgeObjectRetain(v5);
  swift_retain();
  sub_1002A89A4(&v17);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  aBlock[4] = sub_1002A8940;
  v15 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100449934;
  aBlock[3] = &unk_1005D8C78;
  v10 = _Block_copy(aBlock);
  v11 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v9, v10);

  _Block_release(v10);
  swift_release(v15);
  sub_1002A89CC((uint64_t)v16);
  swift_release(v6);
  return v11;
}

void sub_1002A4EFC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, char a9, __int128 *a10)
{
  void **v14;
  char v15;
  uint64_t v16;
  uint64_t Strong;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  id v34;
  char v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  char *v46;
  char *v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void (*v54)(void *, _QWORD, _QWORD, void (*)(uint64_t, uint64_t), _QWORD *, __n128);
  char *v55;
  _QWORD *v56;
  __n128 v57;
  char v58;
  void (*v59)(uint64_t);
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char v70;
  char *v71;
  char *v72;
  uint64_t *v73;
  __int128 *v74;
  void (*v75)(uint64_t);
  uint64_t *v76;
  uint64_t v77;
  __int128 *v78;
  char v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  void *v82;
  void (*v83)(char);
  id v85;
  void *v86;
  void **aBlock;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  void *v90;
  void (*v91)(char);
  uint64_t v92;
  _BYTE v93[24];
  char v94[24];
  _BYTE v95[32];
  __int128 v96;
  void *v97;
  __int128 *v98;
  uint64_t *v99;
  unsigned __int8 v100;

  v14 = *(void ***)a10;
  v80 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)a10 + 2);
  v81 = *((_QWORD *)a10 + 1);
  v82 = (void *)*((_QWORD *)a10 + 3);
  v83 = (void (*)(char))*((_QWORD *)a10 + 4);
  v15 = *((_BYTE *)a10 + 40);
  v16 = a5 + 16;
  swift_beginAccess(a5 + 16, v94, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v18 = (char *)Strong;
    v79 = v15;
    sub_10023380C(0x6F742D6570697773, 0xEF6574656C65642DLL);
    v96 = *a10;
    v19 = v96;
    sub_1002A88A4((uint64_t)(a10 + 1), (uint64_t)v95);
    v20 = swift_allocObject(&unk_1005D8CB0, 88, 7);
    v21 = a10[1];
    *(_OWORD *)(v20 + 16) = *a10;
    *(_OWORD *)(v20 + 32) = v21;
    *(_OWORD *)(v20 + 41) = *(__int128 *)((char *)a10 + 25);
    *(_QWORD *)(v20 + 64) = v18;
    *(_QWORD *)(v20 + 72) = a3;
    *(_QWORD *)(v20 + 80) = a4;
    v22 = a4;
    if (a9 == 3)
    {
      v30 = v19;
      v75 = a3;
      sub_1002A89A4(&v96);
      sub_1002A8974((uint64_t)v95);
      v31 = v18;
      swift_retain();
      sub_1002A89A4(&v96);
      sub_1002A8974((uint64_t)v95);
      v32 = v31;
      v77 = v22;
      swift_retain();
      v33 = a6;
      v34 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v33);
      DOCSmartFolderManager.delete(hotFolder:for:)(v33, a7, a8);

      sub_1002A88A4((uint64_t)v95, (uint64_t)&v97);
      v35 = v100;
      if (v100 != 255)
      {
        v85 = v33;
        aBlock = v14;
        v36 = v97;
        v73 = v99;
        v74 = v98;
        v88 = v81;
        v89 = v80;
        v90 = v82;
        v91 = v83;
        LOBYTE(v92) = v79;
        v37 = *(_BYTE *)(v30 + 16);
        v38 = *(_QWORD *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData];
        sub_1002A89A4(&v96);
        sub_1002A8974((uint64_t)v95);
        swift_retain();
        sub_10002944C();
        v40 = v39;
        swift_release(v38);
        v41 = type metadata accessor for DOCMutableSidebarSection();
        v42 = swift_dynamicCastClassUnconditional(v40, v41, 0, 0, 0);
        if ((sub_100491D08(v42, v36, v74, v73, v35, (uint64_t)v32, (uint64_t)&aBlock) & 1) != 0)
        {
          v43 = (uint64_t *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad];
          swift_beginAccess(&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad], v93, 0, 0);
          v44 = *v43;
          swift_bridgeObjectRetain(*v43);
          v45 = sub_1000069B8(v37, v44);
          swift_bridgeObjectRelease(v44);
          if (*(uint64_t *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] <= 0)
            sub_100013B5C((v45 & 1) == 0, 1);
          else
            sub_100235834();
        }
        swift_unknownObjectRelease(v40);
        sub_1002A8A58(&v96);
        sub_1002A89CC((uint64_t)v95);
        v75(1);
        sub_100233A38(0x6F742D6570697773, 0xEF6574656C65642DLL, 0);
        v33 = v85;
      }
      swift_release(v20);

      v22 = v77;
    }
    else
    {
      if (a9 == 2)
      {
        sub_1002A89A4(&v96);
        sub_1002A8974((uint64_t)v95);
        v46 = v18;
        swift_retain();
        sub_1002A89A4(&v96);
        sub_1002A8974((uint64_t)v95);
        v47 = v46;
        swift_retain();
        v48 = a7;
        v49 = sub_1000E4F7C(a6, a7, a8, 2);
        v50 = *(_QWORD **)DOCTagManager.shared.unsafeMutableAddressor(v49);
        v51 = swift_allocObject(&unk_1005D8CD8, 24, 7);
        swift_unknownObjectWeakInit(v51 + 16);
        v52 = (_QWORD *)swift_allocObject(&unk_1005D8D00, 48, 7);
        v52[2] = v51;
        v52[3] = sub_1002A8A48;
        v52[4] = v20;
        v52[5] = v47;
        v53 = v22;
        v54 = *(void (**)(void *, _QWORD, _QWORD, void (*)(uint64_t, uint64_t), _QWORD *, __n128))((swift_isaMask & *v50) + 0x60);
        v55 = v47;
        swift_retain();
        v56 = v50;
        v57 = swift_retain();
        v54(a6, 0, 0, sub_1002A8AB4, v52, v57);
        v22 = v53;

        swift_release(v51);
        swift_release(v52);
        sub_1000E4FD0(a6, v48, a8, 2);
      }
      else if (a9)
      {
        sub_1002A88A4((uint64_t)v95, (uint64_t)&v97);
        v58 = v100;
        if (v100 == 255)
        {
          sub_1002A89A4(&v96);
          v71 = v18;
          v22 = a4;
          swift_retain();
          sub_1002A89A4(&v96);
          v72 = v71;
          swift_retain();
        }
        else
        {
          v59 = a3;
          v86 = v97;
          aBlock = v14;
          v76 = v99;
          v78 = v98;
          v88 = v81;
          v89 = v80;
          v90 = v82;
          v91 = v83;
          LOBYTE(v92) = v79;
          v60 = *(_BYTE *)(v19 + 16);
          v61 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData];
          sub_1002A89A4(&v96);
          sub_1002A8974((uint64_t)v95);
          sub_1002A89A4(&v96);
          sub_1002A8974((uint64_t)v95);
          v62 = v18;
          swift_retain();
          sub_1002A89A4(&v96);
          sub_1002A8974((uint64_t)v95);
          v63 = v62;
          swift_retain();
          swift_retain();
          sub_10002944C();
          v65 = v64;
          swift_release(v61);
          v66 = type metadata accessor for DOCMutableSidebarSection();
          v67 = swift_dynamicCastClassUnconditional(v65, v66, 0, 0, 0);
          if ((sub_100491D08(v67, v86, v78, v76, v58, (uint64_t)v63, (uint64_t)&aBlock) & 1) != 0)
          {
            v68 = (uint64_t *)&v63[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad];
            swift_beginAccess(&v63[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad], v93, 0, 0);
            v69 = *v68;
            swift_bridgeObjectRetain(*v68);
            v70 = sub_1000069B8(v60, v69);
            swift_bridgeObjectRelease(v69);
            if (*(uint64_t *)&v63[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] <= 0)
              sub_100013B5C((v70 & 1) == 0, 1);
            else
              sub_100235834();
          }
          swift_unknownObjectRelease(v65);
          sub_1002A8A58(&v96);
          sub_1002A89CC((uint64_t)v95);
          v22 = a4;
          v59(1);
          sub_100233A38(0x6F742D6570697773, 0xEF6574656C65642DLL, 0);
        }
      }
      else
      {
        v23 = (void *)objc_opt_self(DOCFavoritesManager);
        sub_1002A89A4(&v96);
        sub_1002A8974((uint64_t)v95);
        v24 = v18;
        swift_retain();
        sub_1002A89A4(&v96);
        sub_1002A8974((uint64_t)v95);
        v25 = v24;
        swift_retain();
        sub_1000E4F7C(a6, a7, a8, 0);
        v26 = objc_msgSend(v23, "sharedManager");
        v27 = swift_allocObject(&unk_1005D8D28, 32, 7);
        *(_QWORD *)(v27 + 16) = sub_1002A8A48;
        *(_QWORD *)(v27 + 24) = v20;
        v91 = sub_1002A8AE4;
        v92 = v27;
        aBlock = _NSConcreteStackBlock;
        v88 = 1107296256;
        v89 = sub_10016C02C;
        v90 = &unk_1005D8D40;
        v28 = _Block_copy(&aBlock);
        v29 = v92;
        swift_retain();
        swift_release(v29);
        objc_msgSend(v26, "removeFavorite:completion:", a6, v28);
        _Block_release(v28);

        sub_1000E4FD0(a6, a7, a8, 0);
      }
      swift_release(v20);
    }
    sub_1002A8A58(&v96);
    sub_1002A89CC((uint64_t)v95);
    swift_release(v22);

  }
}

id sub_1002A56F8(char a1, __int128 *a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v7;
  char v8;
  id result;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[32];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  unsigned __int8 v20;

  if ((a1 & 1) != 0)
  {
    v11 = a2[1];
    v12 = *a2;
    v7 = *((_QWORD *)a2 + 4);
    v8 = *((_BYTE *)a2 + 40);
    sub_1002A88A4((uint64_t)(a2 + 1), (uint64_t)v14);
    result = (id)sub_1002A88A4((uint64_t)v14, (uint64_t)&v19);
    if (v20 == 255)
      return result;
    v13 = *a2;
    v15 = v12;
    v16 = v11;
    v17 = v7;
    v18 = v8;
    v10 = *(_BYTE *)(v13 + 16);
    __chkstk_darwin(result);
    sub_1002A8974((uint64_t)v14);
    sub_1002A89A4(&v13);
    sub_100233C70(v10, sub_1002A8AEC);
    sub_1002A8A58(&v13);
    sub_1002A89CC((uint64_t)v14);
  }
  a4(a1 & 1);
  return sub_100233A38(0x6F742D6570697773, 0xEF6574656C65642DLL, 0);
}

void sub_1002A5854(uint64_t a1, id *a2)
{
  uint64_t v3;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_class *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  objc_super v18;
  objc_super v19;
  objc_super v20;
  _BYTE v21[24];

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit) != 1)
    return;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit) = 0;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (!v3 || !*(_BYTE *)(v3 + 17))
    return;
  swift_beginAccess(a2, v21, 0, 0);
  if (*a2)
  {
    v5 = *a2;
    sub_10039742C(0, v6);
    v8 = *(void **)&v5[qword_1006510B8];
    if (v8)
      objc_msgSend(v8, "setUserInteractionEnabled:", 0);
    sub_100397170(0, v7);
    if (v5[qword_100651110] == 1)
    {
      v5[qword_100651110] = 0;
      v9 = (objc_class *)type metadata accessor for DOCSidebarItemCell(0);
      v20.receiver = v5;
      v20.super_class = v9;
      v10 = objc_msgSendSuper2(&v20, "isSelected");
      v19.receiver = v5;
      v19.super_class = v9;
      objc_msgSendSuper2(&v19, "setSelected:", 1);
      v18.receiver = v5;
      v18.super_class = v9;
      if (v10 != objc_msgSendSuper2(&v18, "isSelected"))
        objc_msgSend(v5, "setNeedsUpdateConfiguration");
    }

  }
  v11 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v14;
  sub_1002A4394(0, 1);
  v15 = *(_QWORD *)(a1 + v11);
  v13 = __OFSUB__(v15, 1);
  v16 = v15 - 1;
  if (v13)
  {
LABEL_18:
    __break(1u);
    return;
  }
  *(_QWORD *)(a1 + v11) = v16;
  if (!v16 && *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
  {
    v17 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    sub_100013B5C(v17, 1);
  }
}

id sub_1002A5A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  __n128 v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  id *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  double v37;
  id result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Sidebar.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = swift_retain_n(a1, 2);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.info.getter(v14);
  if (os_log_type_enabled(v13, (os_log_type_t)v15))
  {
    v42 = v15;
    v16 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v47[0] = v41;
    *(_DWORD *)v16 = 136315394;
    v45 = sub_1000544FC(0x6974696445646E65, 0xEC0000002928676ELL, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    *(_WORD *)(v16 + 12) = 2080;
    swift_beginAccess(a1 + 16, &v45, 0, 0);
    v17 = *(unsigned __int8 *)(a1 + 40);
    v43 = v6;
    if (v17 == 255)
    {
      v24 = 0;
      v26 = 0xE000000000000000;
    }
    else
    {
      v39 = a3;
      v40 = a2;
      v19 = *(_QWORD *)(a1 + 24);
      v18 = *(_QWORD *)(a1 + 32);
      v20 = *(void **)(a1 + 16);
      sub_1000E4F7C(v20, v19, v18, v17);
      sub_100201260((uint64_t)v20, v19, v18, v17);
      v22 = v21;
      sub_1000B1664(v20, v19, v18, v17);
      v23 = objc_msgSend(v22, "displayName");

      if (v23)
      {
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        v26 = v25;

      }
      else
      {
        v24 = 0;
        v26 = 0xE000000000000000;
      }
      a3 = v39;
      a2 = v40;
    }
    v44 = sub_1000544FC(v24, v26, v47);
    v28 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_release_n(a1, 2, v28);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v42, "%s: Finished editing: %s.", (uint8_t *)v16, 0x16u);
    v29 = v41;
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v43);
  }
  else
  {

    swift_release_n(a1, 2, v27);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v30 = (id *)(a3 + 16);
  v31 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v31)
  {
    v32 = *(void **)(v31 + 24);
    *(_QWORD *)(v31 + 24) = 0;
    swift_retain();

    v33 = *(void **)(v31 + 32);
    v34 = *(_QWORD *)(v31 + 40);
    v35 = *(_QWORD *)(v31 + 48);
    *(_QWORD *)(v31 + 40) = 0;
    *(_QWORD *)(v31 + 48) = 0;
    *(_QWORD *)(v31 + 32) = 0;
    v36 = *(_BYTE *)(v31 + 56);
    *(_BYTE *)(v31 + 56) = -1;
    sub_1000B1664(v33, v34, v35, v36);
    sub_1000A3FE8(0, 0);
    swift_release(v31);
  }
  *(_QWORD *)&v37 = swift_beginAccess(a3 + 16, v47, 0, 0).n128_u64[0];
  result = *v30;
  if (*v30)
    return objc_msgSend(result, "endEditing:", 1, v37);
  return result;
}

void sub_1002A5D98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v62, 0, 0);
  v14 = *(void **)(a3 + 16);
  if (v14)
  {
    v15 = v14;
    v16 = Logger.Sidebar.unsafeMutableAddressor(v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v16, v10);
    swift_retain_n(a4, 2);
    v17 = swift_bridgeObjectRetain_n(a2, 2);
    v18 = Logger.logObject.getter(v17);
    v57 = static os_log_type_t.error.getter(v18);
    if (os_log_type_enabled(v18, (os_log_type_t)v57))
    {
      v53 = v18;
      v54 = a1;
      v56 = v15;
      v19 = swift_slowAlloc(32, -1);
      v52 = swift_slowAlloc(96, -1);
      v61 = v52;
      *(_DWORD *)v19 = 136315650;
      v59 = sub_1000544FC(0xD00000000000001BLL, 0x8000000100521C00, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
      *(_WORD *)(v19 + 12) = 2080;
      swift_beginAccess(a4 + 16, &v59, 0, 0);
      v20 = *(unsigned __int8 *)(a4 + 40);
      v55 = v10;
      if (v20 == 255)
      {
        v27 = 0;
        v29 = 0xE000000000000000;
      }
      else
      {
        v50 = v14;
        v51 = a5;
        v22 = *(_QWORD *)(a4 + 24);
        v21 = *(_QWORD *)(a4 + 32);
        v23 = *(void **)(a4 + 16);
        sub_1000E4F7C(v23, v22, v21, v20);
        sub_100201260((uint64_t)v23, v22, v21, v20);
        v25 = v24;
        sub_1000B1664(v23, v22, v21, v20);
        v26 = objc_msgSend(v25, "displayName");

        if (v26)
        {
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
          v29 = v28;

        }
        else
        {
          v27 = 0;
          v29 = 0xE000000000000000;
        }
        v14 = v50;
        a5 = v51;
      }
      v58 = sub_1000544FC(v27, v29, &v61);
      v31 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      swift_release_n(a4, 2, v31);
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v19 + 22) = 2080;
      swift_bridgeObjectRetain(a2);
      v58 = sub_1000544FC(v54, a2, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      swift_bridgeObjectRelease_n(a2, 3);
      v32 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v57, "%s: Reverting editing of: %s for reason: %s.", (uint8_t *)v19, 0x20u);
      v33 = v52;
      swift_arrayDestroy(v52, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v55);
      v15 = v56;
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
      swift_release_n(a4, 2, v30);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    v34 = *(_QWORD *)(a5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
    if (v34)
    {
      v35 = *(void **)(v34 + 24);
      *(_QWORD *)(v34 + 24) = 0;
      swift_retain();

      v36 = *(void **)(v34 + 32);
      v37 = *(_QWORD *)(v34 + 40);
      v38 = *(_QWORD *)(v34 + 48);
      *(_QWORD *)(v34 + 40) = 0;
      *(_QWORD *)(v34 + 48) = 0;
      *(_QWORD *)(v34 + 32) = 0;
      v39 = *(_BYTE *)(v34 + 56);
      *(_BYTE *)(v34 + 56) = -1;
      sub_1000B1664(v36, v37, v38, v39);
      sub_1000A3FE8(0, 0);
      swift_release(v34);
    }
    v40 = (char *)sub_1003E4A2C(v14);
    if ((_BYTE)v43 != 0xFF)
    {
      v44 = v40;
      v45 = v41;
      v46 = v42;
      v47 = v43;
      v48 = sub_1003E5428(v14);
      if (v48)
      {
        v49 = v48;
        sub_10048FD74(v15, v44, v45, v46, v47, (uint64_t)v48);
        swift_unknownObjectRelease(v49);
      }
      sub_1000B1664(v44, v45, v46, v47);
    }

  }
}

id sub_1002A61FC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.Sidebar.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  swift_retain_n(a3, 2);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    v37 = v18;
    v38 = v11;
    v19 = swift_slowAlloc(32, -1);
    v36 = swift_slowAlloc(96, -1);
    v44 = v36;
    *(_DWORD *)v19 = 136315650;
    v42 = sub_1000544FC(0xD000000000000011, 0x8000000100521E90, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    *(_WORD *)(v19 + 12) = 2080;
    swift_beginAccess(a3 + 16, &v42, 0, 0);
    v20 = *(unsigned __int8 *)(a3 + 40);
    v39 = v10;
    v40 = a1;
    if (v20 == 255)
    {
      v27 = 0;
      v29 = 0xE000000000000000;
    }
    else
    {
      v34 = a5;
      v35 = a4;
      v22 = *(_QWORD *)(a3 + 24);
      v21 = *(_QWORD *)(a3 + 32);
      v23 = *(void **)(a3 + 16);
      sub_1000E4F7C(v23, v22, v21, v20);
      sub_100201260((uint64_t)v23, v22, v21, v20);
      v25 = v24;
      sub_1000B1664(v23, v22, v21, v20);
      v26 = objc_msgSend(v25, "displayName");

      if (v26)
      {
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

      }
      else
      {
        v27 = 0;
        v29 = 0xE000000000000000;
      }
      a5 = v34;
      a4 = v35;
    }
    v41 = sub_1000544FC(v27, v29, &v44);
    v31 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_release_n(a3, 2, v31);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v19 + 22) = 2080;
    swift_bridgeObjectRetain(a2);
    a1 = v40;
    v41 = sub_1000544FC(v40, a2, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v37, "%s: Failing to edit: %s for reason: %s.", (uint8_t *)v19, 0x20u);
    v32 = v36;
    swift_arrayDestroy(v36, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_release_n(a3, 2, v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  sub_1002A5D98(a1, a2, a4, a3, a5);
  return sub_1002A5A20(a3, a5, a4);
}

void sub_1002A657C(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  id v21;
  Swift::String v22;
  Swift::String v23;

  v4 = (id)_DocumentManagerBundle(a1);
  if (v4)
  {
    v5 = v4;
    v22._countAndFlagsBits = 0xD00000000000004ALL;
    v22._object = (void *)0x8000000100521E40;
    v6._object = (void *)0x8000000100521E20;
    v6._countAndFlagsBits = 0xD000000000000017;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v22)._object;

    swift_bridgeObjectRetain(a2);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v12 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v10, v11, 1);

    v14 = (id)_DocumentManagerBundle(v13);
    if (v14)
    {
      v15 = v14;
      v23._object = (void *)0xE200000000000000;
      v16._countAndFlagsBits = 19279;
      v16._object = (void *)0xE200000000000000;
      v17.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v17.value._object = (void *)0xEB00000000656C62;
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v23._countAndFlagsBits = 19279;
      v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v23)._object;

      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v19);
      v21 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v20, 0, 0);

      objc_msgSend(v12, "addAction:", v21);
      objc_msgSend(v12, "setPreferredAction:", v21);
      objc_msgSend(v2, "presentViewController:animated:completion:", v12, 1, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002A67A8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *object;
  uint64_t v11;
  id v12;
  void *v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  void *v31;
  NSString v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;

  v5 = (id)_DocumentManagerBundle(a1);
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = v5;
  v34._countAndFlagsBits = 0xD000000000000047;
  v34._object = (void *)0x8000000100521C40;
  v7._object = (void *)0x8000000100521C20;
  v7._countAndFlagsBits = 0xD000000000000014;
  v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v8.value._object = (void *)0xEB00000000656C62;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v34)._object;

  v12 = (id)_DocumentManagerBundle(v11);
  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v13 = v12;
  v35._countAndFlagsBits = 0xD00000000000004CLL;
  v35._object = (void *)0x8000000100521CC0;
  v14._object = (void *)0x8000000100521C90;
  v14._countAndFlagsBits = 0x1000000000000020;
  v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v15.value._object = (void *)0xEB00000000656C62;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v35);

  v18 = sub_10006922C((uint64_t *)&unk_100644560);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_10006A638();
  *(_QWORD *)(v19 + 32) = a1;
  *(_QWORD *)(v19 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v17._countAndFlagsBits, v17._object, v19);
  v21 = v20;
  swift_bridgeObjectRelease(v17._object);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v24 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v22, v23, 1);

  v26 = (id)_DocumentManagerBundle(v25);
  if (v26)
  {
    v27 = v26;
    v36._object = (void *)0xE200000000000000;
    v28._countAndFlagsBits = 19279;
    v28._object = (void *)0xE200000000000000;
    v29.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v29.value._object = (void *)0xEB00000000656C62;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 19279;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v36)._object;

    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v33 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v32, 0, 0);

    objc_msgSend(v24, "addAction:", v33);
    objc_msgSend(v24, "setPreferredAction:", v33);
    objc_msgSend(v2, "presentViewController:animated:completion:", v24, 1, 0);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1002A6ABC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  NSString v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  void *v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  unint64_t v38;
  uint64_t v39;
  Swift::String v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  Swift::String v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  char v71[8];
  void **aBlock;
  unint64_t v73;
  uint64_t (*v74)(uint64_t);
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;
  Swift::String v78;

  v12 = type metadata accessor for CharacterSet(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v16 = a2 & 0xFFFFFFFFFFFFLL;
  if (!v16)
  {
    sub_1002A61FC(0xD000000000000016, 0x8000000100521DD0, a4, a5, (uint64_t)a6);
    return 0;
  }
  v68 = a4;
  v69 = a5;
  v17 = objc_msgSend(a1, "displayName");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  if (v18 == a2 && v20 == a3)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_17;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v18, v20, 0);
  swift_bridgeObjectRelease(v20);
  if ((v22 & 1) != 0)
  {
LABEL_17:
    sub_1002A61FC(0xD000000000000024, 0x8000000100521DA0, v68, v69, (uint64_t)a6);
    return 1;
  }
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v23, "pathExtension");

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  swift_bridgeObjectRelease(v27);
  v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0)
    v29 = v25 & 0xFFFFFFFFFFFFLL;
  if (!v29)
  {
    v40._countAndFlagsBits = 46;
    v40._object = (void *)0xE100000000000000;
    if (String.hasPrefix(_:)(v40))
    {
      v41 = sub_10028A0E8();
      v42 = swift_allocError(&type metadata for FilenameValidationError, v41, 0, 0);
      *v43 = 2;
    }
    else
    {
      CharacterSet.init(charactersIn:)(58, 0xE100000000000000);
      aBlock = (void **)a2;
      v73 = a3;
      v44 = sub_10008B9BC();
      v39 = 1;
      StringProtocol.rangeOfCharacter(from:options:range:)(v15, 0, 0, 0, 1, &type metadata for String, v44);
      if ((v45 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        sub_10023380C(0x64456873696E6966, 0xED0000676E697469);
        v56 = (_QWORD *)swift_allocObject(&unk_1005D8A58, 56, 7);
        v58 = v68;
        v57 = v69;
        v56[2] = v69;
        v56[3] = v58;
        v56[4] = a6;
        v56[5] = a2;
        v56[6] = a3;
        v59 = (void *)objc_opt_self(FPItemManager);
        swift_retain();
        swift_retain();
        v60 = a6;
        swift_bridgeObjectRetain(a3);
        v61 = objc_msgSend(v59, "defaultManager");
        sub_10047C58C(a1, a2, a3, v60, 0, (uint64_t)sub_1002A8700, (uint64_t)v56, 0, 0);

        sub_1002A5A20(v58, (uint64_t)v60, v57);
        v62 = objc_opt_self(UIView);
        v63 = swift_allocObject(&unk_1005D8A80, 25, 7);
        *(_QWORD *)(v63 + 16) = v60;
        *(_BYTE *)(v63 + 24) = 1;
        v64 = swift_allocObject(&unk_1005D8AA8, 32, 7);
        *(_QWORD *)(v64 + 16) = sub_1002A8B20;
        *(_QWORD *)(v64 + 24) = v63;
        v76 = sub_10010DB64;
        v77 = v64;
        aBlock = _NSConcreteStackBlock;
        v73 = 1107296256;
        v74 = sub_10006655C;
        v75 = &unk_1005D8AC0;
        v65 = _Block_copy(&aBlock);
        v66 = v77;
        v67 = v60;
        swift_retain();
        swift_release(v66);
        objc_msgSend((id)v62, "performWithoutAnimation:", v65);
        _Block_release(v65);
        LOBYTE(v62) = swift_isEscapingClosureAtFileLocation(v64, "", 112, 253, 44, 1);
        swift_release(v56);
        swift_release(v63);
        result = swift_release(v64);
        if ((v62 & 1) == 0)
          return v39;
        __break(1u);
        goto LABEL_26;
      }
      v46 = sub_10028A0E8();
      v42 = swift_allocError(&type metadata for FilenameValidationError, v46, 0, 0);
      *v47 = 3;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    swift_getErrorValue(v42, v71, v70);
    v48 = v70[1];
    v49 = v70[2];
    swift_errorRetain(v42);
    v50 = Error.localizedDescription.getter(v48, v49);
    v52 = v51;
    aBlock = 0;
    v73 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v73);
    aBlock = (void **)0xD000000000000015;
    v73 = 0x8000000100521D80;
    v53._countAndFlagsBits = a2;
    v53._object = (void *)a3;
    String.append(_:)(v53);
    v54._countAndFlagsBits = 39;
    v54._object = (void *)0xE100000000000000;
    String.append(_:)(v54);
    v55 = v73;
    sub_1002A61FC((uint64_t)aBlock, v73, v68, v69, (uint64_t)a6);
    swift_bridgeObjectRelease(v55);
    sub_1002A657C(v50, v52);
    swift_errorRelease(v42);
    sub_1002A8744(v42, 0, 0, 1);
    swift_bridgeObjectRelease(v52);
    return 0;
  }
  result = (uint64_t)(id)_DocumentManagerBundle(v28);
  if (result)
  {
    v31 = (void *)result;
    v32._countAndFlagsBits = 0xD00000000000002FLL;
    v78._countAndFlagsBits = 0xD00000000000003CLL;
    v78._object = (void *)0x8000000100521D40;
    v32._object = (void *)0x8000000100521D10;
    v33.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v33.value._object = (void *)0xEB00000000656C62;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v78);

    aBlock = 0;
    v73 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v73);
    aBlock = (void **)0xD000000000000015;
    v73 = 0x8000000100521D80;
    v36._countAndFlagsBits = a2;
    v36._object = (void *)a3;
    String.append(_:)(v36);
    v37._countAndFlagsBits = 39;
    v37._object = (void *)0xE100000000000000;
    String.append(_:)(v37);
    v38 = v73;
    sub_1002A61FC((uint64_t)aBlock, v73, v68, v69, (uint64_t)a6);
    swift_bridgeObjectRelease(v38);
    sub_1002A657C(v35._countAndFlagsBits, (uint64_t)v35._object);
    swift_bridgeObjectRelease(v35._object);
    return 0;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1002A7130(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  _QWORD v16[5];
  _QWORD *v17;

  v12 = (_QWORD *)swift_allocObject(&unk_1005D8AF8, 64, 7);
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  v16[4] = sub_1002A8798;
  v17 = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10004A82C;
  v16[3] = &unk_1005D8B10;
  v13 = _Block_copy(v16);
  v14 = v17;
  swift_errorRetain(a1);
  swift_retain();
  swift_retain();
  v15 = a4;
  swift_bridgeObjectRetain(a6);
  swift_release(v14);
  DOCRunInMainThread(v13);
  _Block_release(v13);
}

double sub_1002A7224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id *v12;
  void (*v13)(void);
  id v14;
  double result;
  Swift::String v16;
  Swift::String v17;

  v12 = (id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(a1);
  v13 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v12) + 0xA0);
  v14 = *v12;
  v13();

  if (a1)
  {
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease(0xE000000000000000);
    v16._countAndFlagsBits = a5;
    v16._object = a6;
    String.append(_:)(v16);
    v17._countAndFlagsBits = 39;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    sub_1002A5D98(0xD000000000000024, 0x8000000100521DF0, a2, a3, a4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(0x8000000100521DF0).n128_u64[0];
  }
  return result;
}

BOOL sub_1002A7338(void *a1, uint64_t a2, unint64_t a3, uint64_t isEscapingClosureAtFileLocation, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _QWORD *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(id, uint64_t, unint64_t, _QWORD *, _QWORD, void (*)(uint64_t), _QWORD *, _QWORD, __n128, _QWORD);
  __n128 v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v34;

  if ((a3 & 0x2000000000000000) != 0)
    v9 = HIBYTE(a3) & 0xF;
  else
    v9 = a2 & 0xFFFFFFFFFFFFLL;
  if (!v9)
    goto LABEL_12;
  v13 = objc_msgSend(a1, "displayName");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  if (v14 == a2 && v16 == a3)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_14;
  }
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v14, v16, 0);
  swift_bridgeObjectRelease(v16);
  if ((v18 & 1) != 0)
  {
LABEL_14:
    v31 = 0xD000000000000024;
    v30 = 0x8000000100521DA0;
    goto LABEL_15;
  }
  sub_10023380C(0x64456873696E6966, 0xED0000676E697469);
  v19 = (_QWORD *)swift_allocObject(&unk_1005D8B48, 64, 7);
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a5;
  v19[6] = isEscapingClosureAtFileLocation;
  v19[7] = a6;
  v20 = a1;
  swift_bridgeObjectRetain(a3);
  swift_retain();
  swift_retain();
  v21 = a6;
  v22 = DOCUSBRenaming.shared.unsafeMutableAddressor();
  v23 = *(_QWORD *)v22;
  v24 = *(void (**)(id, uint64_t, unint64_t, _QWORD *, _QWORD, void (*)(uint64_t), _QWORD *, _QWORD, __n128, _QWORD))(**(_QWORD **)v22 + 136);
  v25 = swift_retain();
  v24(v20, a2, a3, v21, 0, sub_1002A87EC, v19, 0, v25, 0);
  swift_release(v23);
  sub_1002A5A20(isEscapingClosureAtFileLocation, (uint64_t)v21, a5);
  v26 = (void *)objc_opt_self(UIView);
  a5 = swift_allocObject(&unk_1005D8B70, 25, 7);
  *(_QWORD *)(a5 + 16) = v21;
  *(_BYTE *)(a5 + 24) = 1;
  a6 = (_QWORD *)swift_allocObject(&unk_1005D8B98, 32, 7);
  a6[2] = sub_1002A8B20;
  a6[3] = a5;
  aBlock[4] = sub_10010DB64;
  v34 = a6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005D8BB0;
  v27 = _Block_copy(aBlock);
  v28 = v34;
  v29 = v21;
  swift_retain();
  swift_release(v28);
  objc_msgSend(v26, "performWithoutAnimation:", v27);
  _Block_release(v27);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(a6, "", 112, 253, 44, 1);
  swift_release(v19);
  swift_release(a5);
  swift_release(a6);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_12:
    v30 = 0x8000000100521DD0;
    v31 = 0xD000000000000016;
LABEL_15:
    sub_1002A61FC(v31, v30, isEscapingClosureAtFileLocation, a5, (uint64_t)a6);
  }
  return v9 != 0;
}

void sub_1002A7638(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  v14 = (_QWORD *)swift_allocObject(&unk_1005D8BE8, 72, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a5;
  v14[7] = a6;
  v14[8] = a7;
  v19[4] = sub_1002A8858;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10004A82C;
  v19[3] = &unk_1005D8C00;
  v15 = _Block_copy(v19);
  v16 = v20;
  swift_errorRetain(a1);
  v17 = a2;
  swift_bridgeObjectRetain(a4);
  swift_retain();
  swift_retain();
  v18 = a7;
  swift_release(v16);
  DOCRunInMainThread(v15);
  _Block_release(v15);
}

void sub_1002A7738(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  unint64_t v54;
  _QWORD *v55;
  int v56;
  os_log_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v63 = (uint64_t)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v55 - v19;
  v21 = Logger.Rename.unsafeMutableAddressor(v18);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  if (a1)
  {
    v62 = a5;
    v22(v63, v21, v14);
    v23 = a2;
    swift_bridgeObjectRetain(a4);
    swift_errorRetain(a1);
    v24 = v23;
    swift_bridgeObjectRetain(a4);
    v25 = swift_errorRetain(a1);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc(32, -1);
      v59 = (_QWORD *)a6;
      v30 = v29;
      v55 = (_QWORD *)swift_slowAlloc(8, -1);
      v58 = swift_slowAlloc(64, -1);
      v64 = v58;
      *(_DWORD *)v30 = 138412802;
      v60 = v14;
      v61 = v15;
      v57 = v26;
      v66 = (uint64_t)v24;
      v31 = v24;
      v56 = v28;
      v32 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      v33 = v55;
      *v55 = v24;

      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain(a4);
      v66 = sub_1000544FC(a3, (unint64_t)a4, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v30 + 22) = 2080;
      v66 = a1;
      swift_errorRetain(a1);
      v34 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v35 = String.init<A>(describing:)(&v66, v34);
      v37 = v36;
      v66 = sub_1000544FC(v35, v36, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_bridgeObjectRelease(v37);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      v38 = v57;
      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "Renaming source: %@ to: %s failed with error: %s ", (uint8_t *)v30, 0x20u);
      v39 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v33, 1, v39);
      swift_slowDealloc(v33, -1, -1);
      v40 = v58;
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      v41 = v30;
      a6 = (uint64_t)v59;
      swift_slowDealloc(v41, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v60);
    }
    else
    {
      swift_bridgeObjectRelease_n(a4, 2);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v63, v14);
    }
    v64 = 0;
    v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease(v65);
    v64 = 0xD000000000000024;
    v65 = 0x8000000100521DF0;
    v52._countAndFlagsBits = a3;
    v52._object = a4;
    String.append(_:)(v52);
    v53._countAndFlagsBits = 39;
    v53._object = (void *)0xE100000000000000;
    String.append(_:)(v53);
    v54 = v65;
    sub_1002A5D98(v64, v65, v62, a6, a7);
    swift_bridgeObjectRelease(v54);
  }
  else
  {
    v63 = a3;
    v22((uint64_t)v20, v21, v14);
    v42 = a2;
    swift_bridgeObjectRetain_n(a4, 2);
    v43 = v42;
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc(22, -1);
      v61 = v15;
      v47 = v46;
      v59 = (_QWORD *)swift_slowAlloc(8, -1);
      v62 = swift_slowAlloc(32, -1);
      v64 = v62;
      *(_DWORD *)v47 = 138412546;
      v60 = v14;
      v66 = (uint64_t)v43;
      v48 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      v49 = v59;
      *v59 = v43;

      *(_WORD *)(v47 + 12) = 2080;
      swift_bridgeObjectRetain(a4);
      v66 = sub_1000544FC(v63, (unint64_t)a4, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Renaming source: %@ to: %s succeeded.", (uint8_t *)v47, 0x16u);
      v50 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v49, 1, v50);
      swift_slowDealloc(v49, -1, -1);
      v51 = v62;
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v60);
    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
  }
}

uint64_t sub_1002A7CFC(void *a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  char v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  Swift::String v37;
  Swift::String v38;
  char v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  char v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t result;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  Swift::String v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  __int128 aBlock;
  uint64_t (*v71)(uint64_t);
  void *v72;
  uint64_t (*v73)();
  uint64_t v74;

  v14 = (void *)objc_opt_self(DOCTagRegistry);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "sanitizedTagName:", v15);

  if (!v16)
  {
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease(0xE000000000000000);
    strcpy((char *)&aBlock, "Invalid tag '");
    HIWORD(aBlock) = -4864;
    v37._countAndFlagsBits = a2;
    v37._object = a3;
    String.append(_:)(v37);
    v38._countAndFlagsBits = 39;
    v38._object = (void *)0xE100000000000000;
    String.append(_:)(v38);
    sub_1002A61FC(aBlock, *((unint64_t *)&aBlock + 1), a5, a6, a7);
    swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
    sub_1002A67A8(a2, (uint64_t)a3);
    return 0;
  }
  v65 = a3;
  v66 = a2;
  v67 = a5;
  v68 = a6;
  v69 = (void *)a7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  swift_bridgeObjectRetain(v18);
  v19 = objc_msgSend(a1, "labelIndex");
  v20 = objc_msgSend(a1, "type");
  v21 = a4;
  v22 = objc_msgSend(a1, "itemCount");
  v23 = objc_msgSend(a1, "sidebarVisible");
  v24 = objc_msgSend(a1, "sidebarPinned");
  v25 = objc_allocWithZone((Class)DOCTag);
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "initWithDisplayName:labelIndex:type:itemCount:sidebarVisible:sidebarPinned:", v26, v19, v20, v22, v23, v24, swift_bridgeObjectRelease(v18).n128_f64[0]);
  swift_bridgeObjectRelease(v18);

  if ((v21 & 1) == 0 && (sub_1002A8390(a1, v27) & 1) == 0)
  {
    v46 = objc_msgSend(v27, "displayName");
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v49 = v48;

    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease(0xE000000000000000);
    strcpy((char *)&aBlock, "Invalid tag '");
    HIWORD(aBlock) = -4864;
    v50._countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    v51._countAndFlagsBits = 39;
    v51._object = (void *)0xE100000000000000;
    String.append(_:)(v51);
    sub_1002A61FC(aBlock, *((unint64_t *)&aBlock + 1), v67, v68, (uint64_t)v69);
    swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
    sub_1002A67A8(v47, (uint64_t)v49);
    swift_bridgeObjectRelease(v49);

    return 0;
  }
  v28 = objc_msgSend(v27, "displayName");
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  v32 = objc_msgSend(a1, "displayName");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v35 = v34;

  if (v29 == v33 && v31 == v35)
  {
    swift_bridgeObjectRelease_n(v31, 2);
    v36 = v65;
    goto LABEL_9;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v35, 0);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v35);
  v36 = v65;
  if ((v39 & 1) != 0)
  {
LABEL_9:
    v40 = objc_msgSend(v27, "displayName");
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    if (v41 == v66 && v43 == v36)
    {
      swift_bridgeObjectRelease(v36);
    }
    else
    {
      v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v36, v41, v43, 0);
      swift_bridgeObjectRelease(v43);
      if ((v44 & 1) == 0)
        sub_1002A5D98(0xD000000000000025, 0x8000000100521BD0, v68, v67, (uint64_t)v69);
    }
    sub_1002A5A20(v67, (uint64_t)v69, v68);

    return 1;
  }
  sub_10023380C(0x64456873696E6966, 0xED0000676E697469);
  if ((sub_1002A84FC(a1, v27) & 1) == 0)
  {
    _StringGuts.grow(_:)(28);
    v53 = objc_msgSend(v27, "displayName", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    v57._countAndFlagsBits = v54;
    v57._object = v56;
    String.append(_:)(v57);
    swift_bridgeObjectRelease(v56);
    v58._countAndFlagsBits = 39;
    v58._object = (void *)0xE100000000000000;
    String.append(_:)(v58);
    sub_1002A5D98(0xD000000000000019, 0x8000000100521BB0, v68, v67, (uint64_t)v69);
    swift_bridgeObjectRelease(0x8000000100521BB0);
  }
  sub_1002A5A20(v67, (uint64_t)v69, v68);
  v59 = (void *)objc_opt_self(UIView);
  v60 = swift_allocObject(&unk_1005D89E0, 25, 7);
  *(_QWORD *)(v60 + 16) = v69;
  v45 = 1;
  *(_BYTE *)(v60 + 24) = 1;
  v61 = swift_allocObject(&unk_1005D8A08, 32, 7);
  *(_QWORD *)(v61 + 16) = sub_1002A866C;
  *(_QWORD *)(v61 + 24) = v60;
  v73 = sub_10006657C;
  v74 = v61;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v71 = sub_10006655C;
  v72 = &unk_1005D8A20;
  v62 = _Block_copy(&aBlock);
  v63 = v74;
  v64 = v69;
  swift_retain();
  swift_release(v63);
  objc_msgSend(v59, "performWithoutAnimation:", v62);
  _Block_release(v62);
  LOBYTE(v62) = swift_isEscapingClosureAtFileLocation(v61, "", 112, 253, 44, 1);

  swift_release(v60);
  result = swift_release(v61);
  if ((v62 & 1) == 0)
    return v45;
  __break(1u);
  return result;
}

uint64_t sub_1002A8390(void *a1, id a2)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  id v20;

  v4 = objc_msgSend(a2, "displayName");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  swift_bridgeObjectRelease(v7);
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = objc_msgSend(a2, "displayName");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v13 = objc_msgSend(a1, "displayName");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    if (v10 == v14 && v12 == v16)
    {
      swift_bridgeObjectRelease_n(v12, 2);
    }
    else
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v16, 0);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v16);
      if ((v17 & 1) == 0)
      {
        v20 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
        v18 = objc_msgSend(v20, "canReplaceTag:withTag:", a1, a2);

        return (uint64_t)v18;
      }
    }
  }
  return 1;
}

uint64_t sub_1002A84FC(void *a1, id a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  unsigned int v15;
  id *v16;
  void (*v17)(void *, id, uint64_t, _QWORD, _QWORD);
  id v18;

  v4 = objc_msgSend(a2, "displayName");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = objc_msgSend(a1, "displayName");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v11, 0);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  if ((v13 & 1) != 0)
    return 1;
  v14 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
  v15 = objc_msgSend(v14, "replaceTag:withTag:", a1, a2);

  if (v15)
  {
    v16 = (id *)DOCTagManager.shared.unsafeMutableAddressor();
    v17 = *(void (**)(void *, id, uint64_t, _QWORD, _QWORD))((swift_isaMask & *(_QWORD *)*v16) + 0x60);
    v18 = *v16;
    v17(a1, a2, 2, 0, 0);

    return 1;
  }
  return 0;
}

id sub_1002A866C()
{
  uint64_t v0;

  return sub_100233A38(0x64456873696E6966, 0xED0000676E697469, *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1002A86B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A86C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002A8700(uint64_t a1)
{
  uint64_t v1;

  sub_1002A7130(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1002A8710()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002A8734()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A8744(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return sub_10028A890(a1, a2);
}

uint64_t sub_1002A8754()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double sub_1002A8798()
{
  uint64_t v0;

  return sub_1002A7224(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_1002A87A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1002A87EC(uint64_t a1)
{
  uint64_t v1;

  sub_1002A7638(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_1002A87FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A880C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

void sub_1002A8858()
{
  uint64_t v0;

  sub_1002A7738(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_1002A886C()
{
  uint64_t v0;

  sub_1003E5E30(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1002A8878()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002A889C()
{
  uint64_t v0;

  sub_1002A49C0(v0);
}

uint64_t sub_1002A88A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_10064C778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A88EC()
{
  uint64_t v0;
  int v1;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255)
    sub_1000E4FD0(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1);
  return swift_deallocObject(v0, 97, 7);
}

void sub_1002A8940(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_1002A4EFC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_BYTE *)(v4 + 48), (__int128 *)(v4 + 56));
}

uint64_t sub_1002A8974(uint64_t a1)
{
  sub_1000B1650(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

_QWORD *sub_1002A89A4(_QWORD *a1)
{
  swift_unknownObjectRetain(*a1);
  return a1;
}

uint64_t sub_1002A89CC(uint64_t a1)
{
  sub_1000B1664(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

uint64_t sub_1002A89FC()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255)
    sub_1000E4FD0(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1);

  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

id sub_1002A8A48(char a1)
{
  uint64_t v1;

  return sub_1002A56F8(a1, (__int128 *)(v1 + 16), *(_QWORD *)(v1 + 64), *(void (**)(_QWORD))(v1 + 72));
}

_QWORD *sub_1002A8A58(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
  return a1;
}

uint64_t sub_1002A8A80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002A8AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002026EC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1002A8AC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002A8AE4(char a1)
{
  uint64_t v1;

  sub_100201C30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1002A8AEC(uint64_t a1)
{
  uint64_t v1;

  return sub_100491D08(a1, *(void **)(v1 + 16), *(__int128 **)(v1 + 24), *(uint64_t **)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t *DOCFileProviderSource.searchSource.unsafeMutableAddressor()
{
  if (qword_100640F80 != -1)
    swift_once(&qword_100640F80, sub_1000AE894);
  return &static DOCFileProviderSource.searchSource;
}

uint64_t sub_1002A8B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier);
  v4 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier
                 + 8);
  v5 = v3;
  if (v4 == 1)
  {
    v5 = sub_1002A9D24(v1);
    v6 = *v2;
    v7 = v2[1];
    *v2 = v5;
    v2[1] = v8;
    swift_bridgeObjectRetain(v8);
    sub_10008A644(v6, v7);
  }
  sub_1002ADDCC(v3, v4);
  return v5;
}

uint64_t _s5Files21DOCFileProviderSourceC10domainNameSSSgvg_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName + 8);
  v4 = v2;
  if (v3 == 1)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v6, "domainDisplayName");
      if (v7)
      {
        v8 = v7;
        v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v10 = v9;

LABEL_7:
        v11 = *v1;
        v12 = v1[1];
        *v1 = v4;
        v1[1] = v10;
        swift_bridgeObjectRetain(v10);
        sub_10008A644(v11, v12);
        goto LABEL_8;
      }

    }
    v4 = 0;
    v10 = 0;
    goto LABEL_7;
  }
LABEL_8:
  sub_1002ADDCC(v2, v3);
  return v4;
}

uint64_t DOCFileProviderSource.isSpotlightBacked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8);
}

void sub_1002A8CE4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  id v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v1)
  {
    v2 = (void *)objc_opt_self(FPItemManager);
    v3 = v1;
    v10 = objc_msgSend(v2, "defaultManager");
    sub_10047CD08(v3);

  }
  else
  {
    _StringGuts.grow(_:)(61);
    v4._object = (void *)0x80000001005224C0;
    v4._countAndFlagsBits = 0xD00000000000003BLL;
    String.append(_:)(v4);
    v5 = objc_msgSend(v0, "description");
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9._countAndFlagsBits = v6;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v8);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCFileProviderSource.swift", 33, 2, 409, 0);
    __break(1u);
  }
}

void sub_1002A8E30(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  unsigned int v15;
  id v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  char *v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char *v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unsigned int v64;
  char v65;
  id v66[2];
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  _BYTE v77[16];
  uint64_t v78;
  _QWORD v79[2];
  unsigned __int8 v80;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  v11 = (char *)v66 - v10;
  v12 = *(void **)&v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v12)
  {
    v73 = v9;
    v74 = a1;
    v13 = v12;
    v80 = objc_msgSend(v13, "isHidden");
    v14 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedApps");
    v15 = objc_msgSend(v14, "isEnabled");

    if (v15)
    {
      v16 = objc_msgSend(v13, "isHidden");
      if ((_DWORD)v16)
      {
        v17 = Logger.UI.unsafeMutableAddressor(v16);
        v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
        v69 = v17;
        v70 = v18;
        ((void (*)(char *))v18)(v11);
        v19 = v3;
        swift_bridgeObjectRetain_n(a2, 2);
        v20 = v19;
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.debug.getter();
        v72 = v22;
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc(42, -1);
          v71 = v6;
          v24 = v23;
          v68 = swift_slowAlloc(128, -1);
          v76 = v68;
          *(_DWORD *)v24 = 136315906;
          v67 = v21;
          v78 = sub_1000544FC(0xD000000000000021, 0x8000000100522490, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);
          *(_WORD *)(v24 + 12) = 2080;
          v78 = (uint64_t)v12;
          v66[0] = v13;
          v25 = sub_10006922C((uint64_t *)&unk_100647CC0);
          v26 = String.init<A>(describing:)(&v78, v25);
          v28 = v27;
          v78 = sub_1000544FC(v26, v27, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);

          *(_QWORD *)&v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
          *(_WORD *)(v24 + 22) = 2080;
          v66[1] = (id)(v24 + 24);
          v30 = objc_msgSend(v66[0], "topLevelBundleIdentifier", v29);
          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
          v33 = v32;

          v78 = v31;
          v79[0] = v33;
          v34 = sub_10006922C(&qword_100648C80);
          v35 = String.init<A>(describing:)(&v78, v34);
          v37 = v36;
          v78 = sub_1000544FC(v35, v36, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);

          swift_bridgeObjectRelease(v37);
          *(_WORD *)(v24 + 32) = 2080;
          swift_bridgeObjectRetain(a2);
          v38 = v74;
          v78 = sub_1000544FC(v74, a2, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);
          swift_bridgeObjectRelease_n(a2, 3);
          v39 = v67;
          _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v72, "[PROTECTED APPS] %s providerDomain: %s topLevelBundleIdentifier: %s hostIdentifier: %s", (uint8_t *)v24, 0x2Au);
          v40 = v68;
          swift_arrayDestroy(v68, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v40, -1, -1);
          v41 = v24;
          v6 = v71;
          swift_slowDealloc(v41, -1, -1);

          v42 = *(void (**)(char *, uint64_t))(v7 + 8);
          v42(v11, v6);
        }
        else
        {

          swift_bridgeObjectRelease_n(a2, 2);
          v42 = *(void (**)(char *, uint64_t))(v7 + 8);
          v42(v11, v6);
          v38 = v74;
        }
        if (objc_msgSend(v13, "owningApplicationIsHidden"))
        {
          v44 = objc_msgSend(v13, "topLevelBundleIdentifier");
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v47 = v46;

          if (v45 == v38 && v47 == a2)
          {
            v43 = swift_bridgeObjectRelease(a2).n128_u64[0];
            v48 = 0;
          }
          else
          {
            v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, a2, v45, v47, 0);
            v43 = swift_bridgeObjectRelease(v47).n128_u64[0];
            v48 = v49 ^ 1;
          }
        }
        else
        {
          v48 = 1;
        }
        if (objc_msgSend(v13, "owningApplicationIsHidden", *(double *)&v43)
          && (v48 & 1) == 0
          && (objc_msgSend(v13, "isHiddenByProvider") & 1) == 0
          && (objc_msgSend(v13, "isHiddenByUser") & 1) == 0)
        {
          v80 = 0;
          v50 = v73;
          v70((uint64_t)v73, v69, v6);
          v51 = v13;
          v52 = Logger.logObject.getter(v51);
          v53 = static os_log_type_t.debug.getter();
          v54 = v53;
          if (os_log_type_enabled(v52, v53))
          {
            v55 = swift_slowAlloc(28, -1);
            v74 = swift_slowAlloc(64, -1);
            v78 = v74;
            *(_DWORD *)v55 = 136315650;
            v72 = v54;
            v76 = sub_1000544FC(0xD000000000000021, 0x8000000100522490, &v78);
            v71 = v6;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
            *(_WORD *)(v55 + 12) = 2080;
            v70 = (void (*)(uint64_t, uint64_t, uint64_t))(v55 + 14);
            v56 = v51;
            v57 = objc_msgSend(v56, "description");
            v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
            v60 = v59;

            v76 = sub_1000544FC(v58, v60, &v78);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);

            swift_bridgeObjectRelease(v60);
            *(_WORD *)(v55 + 22) = 1024;
            swift_beginAccess(&v80, &v76, 0, 0);
            v75 = v80;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76);
            _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v72, "[PROTECTED APPS] %s providerDomain: %s shouldHide: %{BOOL}d", (uint8_t *)v55, 0x1Cu);
            v61 = v74;
            swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v61, -1, -1);
            swift_slowDealloc(v55, -1, -1);

            v62 = v73;
            v63 = v71;
          }
          else
          {

            v62 = v50;
            v63 = v6;
          }
          v42(v62, v63);
        }
      }
    }
    v64 = objc_msgSend(v13, "isEnabled");

    if (v64)
    {
      swift_beginAccess(&v80, &v78, 0, 0);
      v65 = v80 ^ 1;
    }
    else
    {
      v65 = 0;
    }
    v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = v65 & 1;
  }
}

uint64_t sub_1002A9540(uint64_t a1, uint64_t a2)
{
  return sub_1002AD344(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void *DOCFileProviderSource.providerDomain.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  v2 = v1;
  return v1;
}

_QWORD *sub_1002A95CC(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  _QWORD *v6;

  v2 = objc_msgSend((id)objc_opt_self(FPUIManager), "actionsForProviderDomain:", a1);
  v3 = sub_10004F2F0(0, &qword_10064C918, FPUIAction_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v5 = a1;
  v6 = sub_1002AD458(v4, v5);
  swift_bridgeObjectRelease(v4);

  return v6;
}

void sub_1002A967C(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t All;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  id v25;
  unint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Class isa;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  _QWORD aBlock[5];
  uint64_t v55;
  char *v56;

  sub_100069BD8(a2, (uint64_t)aBlock);
  v9 = type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast(&v56, aBlock, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    return;
  v10 = v56;
  v11 = objc_msgSend(a3, "uiActionProviderIdentifier");
  if (!v11)
  {

    return;
  }
  v12 = v11;
  v13 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v13);
  if (!All)
  {
LABEL_31:

    return;
  }
  v15 = All;
  if ((unint64_t)All >> 62)
  {
    if (All >= 0)
      All &= 0xFFFFFFFFFFFFFF8uLL;
    v16 = _CocoaArrayWrapper.endIndex.getter(All);
    if (v16)
      goto LABEL_6;
LABEL_19:
    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v15).n128_u64[0];
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  v16 = *(_QWORD *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
    goto LABEL_19;
LABEL_6:
  v52 = a3;
  v53 = v12;
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001552B8(0, v16 & ~(v16 >> 63), 0);
  if (v16 < 0)
  {
    __break(1u);
    return;
  }
  v17 = 0;
  v18 = (_QWORD *)aBlock[0];
  do
  {
    if ((v15 & 0xC000000000000001) != 0)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
    else
      v19 = *(id *)(v15 + 8 * v17 + 32);
    v20 = v19;
    v21 = objc_msgSend(v19, "itemIdentifier");

    aBlock[0] = v18;
    v23 = v18[2];
    v22 = v18[3];
    if (v23 >= v22 >> 1)
    {
      sub_1001552B8(v22 > 1, v23 + 1, 1);
      v18 = (_QWORD *)aBlock[0];
    }
    ++v17;
    v18[2] = v23 + 1;
    v18[v23 + 4] = v21;
  }
  while (v16 != v17);
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v15).n128_u64[0];
  v12 = v53;
  a3 = v52;
LABEL_20:
  v25 = objc_msgSend(a3, "identifier", v24);
  v27 = v25;
  if ((a4 & 1) == 0)
  {
    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v43 = v42;
      v27 = String._bridgeToObjectiveC()();
      v26 = swift_bridgeObjectRelease(v43).n128_u64[0];
    }
    v44 = objc_msgSend(a3, "localizedTitle", *(double *)&v26);
    if (!v44)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v46 = v45;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v46);
    }
    v47 = (void *)objc_opt_self(FPUIActionViewController);
    type metadata accessor for NSFileProviderItemIdentifier(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v49 = objc_msgSend(a5, "identifier", swift_bridgeObjectRelease(v18).n128_f64[0]);
    v50 = objc_msgSend(v47, "actionControllerForActionIdentifier:actionTitle:items:providerIdentifier:domainIdentifier:", v27, v44, isa, v12, v49);

    v51 = *(id *)&v10[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
    objc_msgSend(v51, "presentViewController:animated:completion:", v50, 1, 0);

    goto LABEL_31;
  }
  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v29 = v28;
    v27 = String._bridgeToObjectiveC()();
    v26 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  v30 = objc_msgSend(a3, "localizedTitle", *(double *)&v26);
  if (!v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v32 = v31;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
  }
  v33 = (void *)objc_opt_self(FPUIActionController);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(a5, "identifier", swift_bridgeObjectRelease(v18).n128_f64[0]);
  v36 = objc_msgSend(v33, "actionControllerForActionIdentifier:actionTitle:items:providerIdentifier:domainIdentifier:", v27, v30, v34, v12, v35);

  v37 = swift_allocObject(&unk_1005D9010, 24, 7);
  *(_QWORD *)(v37 + 16) = a3;
  aBlock[4] = sub_1002ADE24;
  v55 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10015936C;
  aBlock[3] = &unk_1005D9028;
  v38 = _Block_copy(aBlock);
  v39 = v55;
  v40 = a3;
  swift_release(v39);
  v41 = objc_msgSend(v36, "performActionWithCompletionHandler:", v38);

  _Block_release(v38);
}

double sub_1002A9B34(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;

  if (a1)
  {
    v3 = (void *)_convertErrorToNSError(_:)(a1);
    v4 = *(id *)DOCLog.UI.unsafeMutableAddressor(v3);
    v5 = static os_log_type_t.error.getter(v4);
    v6 = sub_10006922C((uint64_t *)&unk_100644560);
    v7 = swift_allocObject(v6, 112, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D4CE0;
    v8 = objc_msgSend(a2, "identifier");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_10006A638();
    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v11;
    *(_QWORD *)(v7 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v7 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v7 + 72) = v3;
    v12 = v3;
    os_log(_:dso:log:type:_:)("Action %@ failed with error: %@", 31, 2, &_mh_execute_header, v4, v5, v7);

  }
  else
  {
    v4 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v13 = static os_log_type_t.info.getter();
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v7 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
    v15 = objc_msgSend(a2, "identifier");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    *(_QWORD *)(v7 + 56) = &type metadata for String;
    *(_QWORD *)(v7 + 64) = sub_10006A638();
    *(_QWORD *)(v7 + 32) = v16;
    *(_QWORD *)(v7 + 40) = v18;
    os_log(_:dso:log:type:_:)("Action %@ succeeded finished successfully", 41, 2, &_mh_execute_header, v4, v13, v7);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_1002A9D24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void (*v19)(_BYTE *, _BYTE *, uint64_t);
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  _BYTE v31[16];

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v31[-v10];
  __chkstk_darwin(v12);
  v14 = &v31[-v13];
  v15 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v15)
    return 0;
  v16 = v15;
  v17 = objc_msgSend(v16, "extensionBundleURL");
  if (!v17)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_6;
  }
  v18 = v17;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v19(v4, v11, v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_6:

    sub_10000CB4C((uint64_t)v4, &qword_100643470);
    return 0;
  }
  v19(v14, v4, v5);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v14, v5);
  v20 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
  v21 = sub_1002AD23C((uint64_t)v8);
  v22 = v21;
  if (!v21)
    goto LABEL_14;
  v23 = objc_msgSend(v21, "containingBundleRecord");
  if (!v23)
  {
LABEL_13:

LABEL_14:
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v5);
    return 0;
  }
  v24 = v23;
  v25 = objc_opt_self(LSApplicationRecord);
  v26 = (void *)swift_dynamicCastObjCClass(v24, v25);
  if (!v26)
  {

    goto LABEL_13;
  }
  v27 = objc_msgSend(v26, "bundleIdentifier");
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);

  }
  else
  {

    v29 = 0;
  }
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v5);
  return v29;
}

void DOCFileProviderSource.displayName.setter()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x8000000100521EB0, "Files/DOCFileProviderSource.swift", 33, 2, 156, 0);
  __break(1u);
}

void DOCFileProviderSource.providerName.setter()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000039, 0x8000000100521EF0, "Files/DOCFileProviderSource.swift", 33, 2, 174, 0);
  __break(1u);
}

void DOCFileProviderSource.domainName.setter()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000037, 0x8000000100521F30, "Files/DOCFileProviderSource.swift", 33, 2, 192, 0);
  __break(1u);
}

id DOCFileProviderSource.loadIcon(forSize:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v2)
    return objc_msgSend((id)objc_opt_self(DOCDocumentSource), "iconForFileProvider:size:", v2, a1);
  else
    return 0;
}

uint64_t sub_1002AA35C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t ObjectType;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  double v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _BYTE v39[32];

  v9 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069BD8(a1, (uint64_t)v39);
  v13 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v38, v39, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0;
  v15 = v38;
  ObjectType = swift_getObjectType(v38, v14);
  if ((objc_msgSend(v15, "isTrashed") & 1) != 0
    || (DOCNode.isSharedServerNode.getter(ObjectType) & 1) != 0)
  {
    goto LABEL_4;
  }
  v18 = objc_msgSend(a3, "recentDocumentsContentTypes");
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v9);

  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    swift_unknownObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    return 0;
  }
  v35 = a5;
  v36 = a4;
  v21 = v19;
  v34 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22 = v19 + v34;
  v23 = *(_QWORD *)(v10 + 72);
  v37 = v21;
  swift_bridgeObjectRetain(v21);
  while (1)
  {
    v24 = objc_msgSend(v15, "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v24);

    LOBYTE(v24) = UTType.conforms(to:)(v22);
    v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v12, v9);
    if ((v24 & 1) != 0)
      break;
    v22 += v23;
    if (!--v20)
    {
      swift_unknownObjectRelease(v15);
      swift_bridgeObjectRelease_n(v37, 2);
      return 0;
    }
  }
  swift_bridgeObjectRelease_n(v37, 2);
  v27 = *(_QWORD *)(v36 + 16);
  if (v27)
  {
    v28 = v36 + v34;
    swift_bridgeObjectRetain(v36);
    while (1)
    {
      v29 = objc_msgSend(v15, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v29);

      LOBYTE(v29) = UTType.conforms(to:)(v28);
      v25(v12, v9);
      if ((v29 & 1) != 0)
        break;
      v28 += v23;
      if (!--v27)
      {
        *(_QWORD *)&v26 = swift_bridgeObjectRelease(v36).n128_u64[0];
        goto LABEL_18;
      }
    }
    swift_unknownObjectRelease(v15);
    swift_bridgeObjectRelease(v36);
    return 0;
  }
LABEL_18:
  if ((objc_msgSend(v35, "canHostAppPerformAction:targetNode:", 2, v15, v26) & 1) == 0)
  {
LABEL_4:
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v30 = objc_msgSend(v15, "cachedDomain");
    if (!v30)
    {
      swift_unknownObjectRelease(v15);
      return 1;
    }
    v31 = v30;
    if ((objc_msgSend(v30, "isEnabled") & 1) != 0)
    {
      v32 = objc_msgSend(v31, "needsAuthentication");
      swift_unknownObjectRelease(v15);

      return v32 ^ 1;
    }
    swift_unknownObjectRelease(v15);

  }
  return 0;
}

uint64_t sub_1002AA664(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t ObjectType;
  id v17;
  void *v18;
  unsigned int v19;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE v34[32];

  v9 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069BD8(a1, (uint64_t)v34);
  v13 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v33, v34, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0;
  v15 = v33;
  ObjectType = swift_getObjectType(v33, v14);
  if ((objc_msgSend(v15, "isTrashed") & 1) != 0
    || (objc_msgSend(v15, "isTopLevelSharedItem") & 1) == 0
    || (DOCNode.isSharedServerNode.getter(ObjectType) & 1) != 0)
  {
    goto LABEL_10;
  }
  if ((objc_msgSend(v15, "isFolder") & 1) == 0)
  {
    v21 = objc_msgSend(a3, "recentDocumentsContentTypes");
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v9);

    v23 = *(_QWORD *)(v22 + 16);
    if (!v23)
    {
      swift_unknownObjectRelease(v15);
      swift_bridgeObjectRelease(v22);
      return 0;
    }
    v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v31 = v22;
    v24 = v22 + v30;
    v32 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain(v22);
    while (1)
    {
      v25 = objc_msgSend(v15, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v25);

      LOBYTE(v25) = UTType.conforms(to:)(v24);
      v26 = *(void (**)(char *, uint64_t))(v10 + 8);
      v26(v12, v9);
      if ((v25 & 1) != 0)
        break;
      v24 += v32;
      if (!--v23)
      {
        swift_unknownObjectRelease(v15);
        swift_bridgeObjectRelease_n(v31, 2);
        return 0;
      }
    }
    swift_bridgeObjectRelease_n(v31, 2);
    v27 = *(_QWORD *)(a4 + 16);
    if (v27)
    {
      v28 = a4 + v30;
      swift_bridgeObjectRetain(a4);
      while (1)
      {
        v29 = objc_msgSend(v15, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v29);

        LOBYTE(v29) = UTType.conforms(to:)(v28);
        v26(v12, v9);
        if ((v29 & 1) != 0)
          break;
        v28 += v32;
        if (!--v27)
        {
          swift_bridgeObjectRelease(a4);
          goto LABEL_6;
        }
      }
      swift_unknownObjectRelease(v15);
      swift_bridgeObjectRelease(a4);
      return 0;
    }
  }
LABEL_6:
  if ((objc_msgSend(a5, "canHostAppPerformAction:targetNode:", 2, v15) & 1) == 0)
  {
LABEL_10:
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v17 = objc_msgSend(v15, "cachedDomain");
    if (!v17)
    {
      swift_unknownObjectRelease(v15);
      return 1;
    }
    v18 = v17;
    if ((objc_msgSend(v17, "isEnabled") & 1) != 0)
    {
      v19 = objc_msgSend(v18, "needsAuthentication");
      swift_unknownObjectRelease(v15);

      return v19 ^ 1;
    }
    swift_unknownObjectRelease(v15);

  }
  return 0;
}

id sub_1002AA9A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t ObjectType;
  id v8;
  void *v10;
  _BYTE v11[32];

  sub_100069BD8(a1, (uint64_t)v11);
  v4 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
  {
    v6 = v10;
    ObjectType = swift_getObjectType(v10, v5);
    if (objc_msgSend(v6, "isTrashed") && (DOCNode.isSharedServerNode.getter(ObjectType) & 1) == 0)
    {
      v8 = objc_msgSend(a3, "canHostAppPerformAction:targetNode:", 2, v6);
      swift_unknownObjectRelease(v6);
      return v8;
    }
    swift_unknownObjectRelease(v6);
  }
  return 0;
}

id sub_1002AAA6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t ObjectType;
  id v8;
  void *v10;
  _BYTE v11[32];

  sub_100069BD8(a1, (uint64_t)v11);
  v4 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
  {
    v6 = v10;
    ObjectType = swift_getObjectType(v10, v5);
    if ((objc_msgSend(v6, "isTrashed") & 1) == 0
      && (DOCNode.isSharedServerNode.getter(ObjectType) & 1) == 0)
    {
      v8 = objc_msgSend(a3, "canHostAppPerformAction:targetNode:", 2, v6);
      swift_unknownObjectRelease(v6);
      return v8;
    }
    swift_unknownObjectRelease(v6);
  }
  return 0;
}

uint64_t sub_1002AAB38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  unsigned int v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  _BYTE v36[32];

  v9 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069BD8(a1, (uint64_t)v36);
  v13 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v35, v36, (char *)&type metadata for Any + 8, v13, 6) & 1) == 0)
    return 0;
  v34 = a4;
  v14 = v35;
  if ((objc_msgSend(v35, "isFolder") & 1) != 0)
    goto LABEL_3;
  v33 = a5;
  v19 = objc_msgSend(a3, "documentContentTypes");
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v9);

  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    swift_unknownObjectRelease(v14);
    v26 = v20;
LABEL_22:
    swift_bridgeObjectRelease(v26);
    return 0;
  }
  v31 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v32 = v20;
  v22 = v20 + v31;
  v23 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain(v20);
  while (1)
  {
    v24 = objc_msgSend(v14, "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v24);

    LOBYTE(v24) = UTType.conforms(to:)(v22);
    v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v12, v9);
    if ((v24 & 1) != 0)
      break;
    v22 += v23;
    if (!--v21)
    {
      swift_unknownObjectRelease(v14);
      swift_bridgeObjectRelease_n(v32, 2);
      return 0;
    }
  }
  swift_bridgeObjectRelease_n(v32, 2);
  a5 = v33;
  v27 = *(_QWORD *)(v34 + 16);
  if (v27)
  {
    v28 = v34 + v31;
    swift_bridgeObjectRetain(v34);
    while (1)
    {
      v29 = objc_msgSend(v14, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v29);

      LOBYTE(v29) = UTType.conforms(to:)(v28);
      v25(v12, v9);
      if ((v29 & 1) != 0)
        break;
      v28 += v23;
      if (!--v27)
      {
        swift_bridgeObjectRelease(v34);
        a5 = v33;
        goto LABEL_3;
      }
    }
    swift_unknownObjectRelease(v14);
    v26 = v34;
    goto LABEL_22;
  }
LABEL_3:
  if ((objc_msgSend(a5, "canHostAppPerformAction:targetNode:", 2, v14) & 1) != 0)
  {
    v15 = objc_msgSend(v14, "cachedDomain");
    if (!v15)
    {
      swift_unknownObjectRelease(v14);
      return 1;
    }
    v16 = v15;
    if ((objc_msgSend(v15, "isEnabled") & 1) != 0)
    {
      v17 = objc_msgSend(v16, "needsAuthentication");
      swift_unknownObjectRelease(v14);

      return v17 ^ 1;
    }
    swift_unknownObjectRelease(v14);

  }
  else
  {
    swift_unknownObjectRelease(v14);
  }
  return 0;
}

id sub_1002AAE24(uint64_t a1, uint64_t a2, void *a3, void *a4, _QWORD *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t ObjectType;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  _BYTE v45[32];

  v11 = type metadata accessor for UTType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069BD8(a1, (uint64_t)v45);
  v15 = sub_10006922C((uint64_t *)&unk_1006424B0);
  if ((swift_dynamicCast(&v44, v45, (char *)&type metadata for Any + 8, v15, 6) & 1) == 0)
    return 0;
  v16 = v44;
  if (!a3)
    goto LABEL_8;
  v17 = objc_msgSend(a3, "tagIdentifiers");
  if (!v17)
    goto LABEL_8;
  v18 = v17;
  v19 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String);

  ObjectType = swift_getObjectType(v16, v20);
  v22 = objc_msgSend(v16, "tags");
  if (!v22)
  {
    swift_unknownObjectRelease(v16);
    v29 = v19;
    goto LABEL_12;
  }
  v23 = v22;
  v43 = a6;
  v24 = sub_10004F2F0(0, (unint64_t *)&unk_100646CB0, FPTag_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  swift_bridgeObjectRetain(v19);
  v26 = sub_1002AD7D8(v25, v19);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease_n(v19, 2);
  if ((objc_msgSend(v16, "isTrashed") & 1) == 0
    && (v26 & 1) != 0
    && (DOCNode.isSharedServerNode.getter(ObjectType) & 1) == 0)
  {
    if ((objc_msgSend(v16, "isFolder") & 1) != 0)
    {
LABEL_14:
      v27 = objc_msgSend(v43, "canHostAppPerformAction:targetNode:", 2, v16);
      swift_unknownObjectRelease(v16);
      return v27;
    }
    v30 = objc_msgSend(a4, "recentDocumentsContentTypes");
    v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v11);

    v42 = v31;
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v41 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v33 = v42 + v41;
      v34 = *(_QWORD *)(v12 + 72);
      swift_bridgeObjectRetain(v42);
      while (1)
      {
        v35 = objc_msgSend(v16, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v35);

        LOBYTE(v35) = UTType.conforms(to:)(v33);
        v36 = *(void (**)(char *, uint64_t))(v12 + 8);
        v36(v14, v11);
        if ((v35 & 1) != 0)
          break;
        v33 += v34;
        if (!--v32)
        {
          swift_unknownObjectRelease(v16);
          swift_bridgeObjectRelease_n(v42, 2);
          return 0;
        }
      }
      swift_bridgeObjectRelease_n(v42, 2);
      v37 = a5[2];
      if (!v37)
        goto LABEL_14;
      v38 = (uint64_t)a5 + v41;
      swift_bridgeObjectRetain(a5);
      while (1)
      {
        v39 = objc_msgSend(v16, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v39);

        LOBYTE(v39) = UTType.conforms(to:)(v38);
        v36(v14, v11);
        if ((v39 & 1) != 0)
          break;
        v38 += v34;
        if (!--v37)
        {
          swift_bridgeObjectRelease(a5);
          goto LABEL_14;
        }
      }
      swift_unknownObjectRelease(v16);
      v29 = a5;
    }
    else
    {
      swift_unknownObjectRelease(v16);
      v29 = (_QWORD *)v42;
    }
LABEL_12:
    swift_bridgeObjectRelease(v29);
    return 0;
  }
LABEL_8:
  swift_unknownObjectRelease(v16);
  return 0;
}

uint64_t DOCFileProviderSource.isAvailableSystemWide.getter()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) & 1) != 0)
    return 1;
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (result)
    return (uint64_t)objc_msgSend((id)result, "isAvailableSystemWide");
  __break(1u);
  return result;
}

uint64_t DOCFileProviderSource.status.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
  if (v1 == 2)
    return 2;
  else
    return (v1 & 1) == 0;
}

uint64_t DOCFileProviderSource.supportedSearchFilters.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "supportedSearchFilters");
  if (!v2)
    return 0;
  v3 = v2;
  type metadata accessor for NSFileProviderSearchFilter(0);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  return v5;
}

BOOL DOCFileProviderSource.appearsInMoveUI.getter()
{
  _BYTE *v0;

  return (v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0
      && ((unint64_t)objc_msgSend(v0, "status") & 0xFFFFFFFFFFFFFFFDLL) == 0;
}

uint64_t DOCFileProviderSource.description.getter()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v14;
  objc_super v15;
  _QWORD v16[2];
  objc_super v17;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v1)
  {
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    v15.receiver = v0;
    v15.super_class = (Class)type metadata accessor for DOCFileProviderSource();
    v2 = v1;
    v3 = objc_msgSendSuper2(&v15, "description");
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    v7._countAndFlagsBits = v4;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(v6);
    v8._countAndFlagsBits = 0x3A6469203ALL;
    v8._object = (void *)0xE500000000000000;
    String.append(_:)(v8);
    v9 = objc_msgSend(v2, "identifier");
    v14 = v9;
    type metadata accessor for FPProviderDomainID(0);
    _print_unlocked<A, B>(_:_:)(&v14, v16, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);

    return v16[0];
  }
  else
  {
    v17.receiver = v0;
    v17.super_class = (Class)type metadata accessor for DOCFileProviderSource();
    v12 = objc_msgSendSuper2(&v17, "description");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);

  }
  return v11;
}

uint64_t DOCFileProviderSource.isEqual(_:)(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  unsigned int v11;
  int v12;
  uint64_t result;
  int v14;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;
  objc_super v24;
  _QWORD v25[3];
  uint64_t v26;

  sub_1000685A8(a1, (uint64_t)v25);
  v3 = v26;
  if (v26)
  {
    v4 = sub_10007E7A0(v25, v26);
    v5 = *(_QWORD *)(v3 - 8);
    v6 = __chkstk_darwin(v4);
    v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v5 + 16))(v8, v6);
    v9 = _bridgeAnythingToObjectiveC<A>(_:)(v8, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    sub_100068588(v25);
  }
  else
  {
    v9 = 0;
  }
  v10 = (objc_class *)type metadata accessor for DOCFileProviderSource();
  v24.receiver = v1;
  v24.super_class = v10;
  v11 = objc_msgSendSuper2(&v24, "isEqual:", v9);
  swift_unknownObjectRelease(v9);
  sub_1000685A8(a1, (uint64_t)v25);
  if (!v11)
  {
    v16 = v25;
LABEL_15:
    sub_10000CB4C((uint64_t)v16, &qword_100642730);
    goto LABEL_16;
  }
  sub_10007EBDC((uint64_t)v25, (uint64_t)v22);
  if (!v23)
  {
    v16 = v22;
    goto LABEL_15;
  }
  if ((swift_dynamicCast(v21, v22, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_16:
    sub_1000685A8(a1, (uint64_t)v22);
    sub_10000CB4C((uint64_t)v22, &qword_100642730);
    v15 = 0;
    return v15 & 1;
  }

  sub_1000685A8(a1, (uint64_t)v22);
  v12 = v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled];
  result = sub_1000685A8((uint64_t)v22, (uint64_t)&v19);
  if (v20)
  {
    sub_10000CB4C((uint64_t)v22, &qword_100642730);
    sub_100079B28(&v19, v21);
    swift_dynamicCast(&v18, v21, (char *)&type metadata for Any + 8, v10, 7);
    v14 = v18[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled];

    v15 = v12 == 2;
    if (v14 != 2)
      v15 = 0;
    if (v12 != 2 && v14 != 2)
      v15 = ((v12 & 1) == 0) ^ v14;
    return v15 & 1;
  }
  __break(1u);
  return result;
}

id static DOCFileProviderSource.searchSource.getter()
{
  if (qword_100640F80 != -1)
    swift_once(&qword_100640F80, sub_1000AE894);
  return (id)static DOCFileProviderSource.searchSource;
}

double sub_1002AB840(void *a1, uint64_t a2, void *a3)
{
  char **v5;
  double result;

  v5 = (char **)sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  swift_getObjectType(a1);
  if ((sub_1003F7F94((uint64_t)a1, v5) & 1) != 0)
    return sub_1003F4868(a1, a3);
  return result;
}

void sub_1002AB8BC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void **v13;
  dispatch_semaphore_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char **v29;
  void *v30;
  id v31;
  id v32;
  __n128 v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v44 = a3;
  v45 = a4;
  v42 = a2;
  v43 = a1;
  v47 = type metadata accessor for DispatchTimeInterval(0);
  v4 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = type metadata accessor for DispatchTime(0);
  v46 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = swift_allocObject(&unk_1005D8EF8, 24, 7);
  *(_QWORD *)(v12 + 16) = 0;
  v13 = (void **)(v12 + 16);
  v14 = dispatch_semaphore_create(0);
  v15 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v16 = swift_allocObject(&unk_1005D8F20, 32, 7);
  *(_QWORD *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = v14;
  aBlock[4] = sub_10016E200;
  v51 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005D8F38;
  v17 = _Block_copy(aBlock);
  v18 = v51;
  v49 = v12;
  swift_retain();
  v19 = v14;
  swift_release(v18);
  objc_msgSend(v15, "doc_fetchRootItemForProviderDomain:completionHandler:", v45, v17);
  _Block_release(v17);

  static DispatchTime.now()(v20);
  *v6 = 1;
  v21 = v47;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchTimeInterval.seconds(_:), v47);
  + infix(_:_:)(v8, v6);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v21);
  v22 = *(void (**)(char *, uint64_t))(v46 + 8);
  v23 = v8;
  v24 = v48;
  v22(v23, v48);
  v25 = OS_dispatch_semaphore.wait(timeout:)(v11) & 1;
  v22(v11, v24);
  v26 = static DispatchTimeoutResult.== infix(_:_:)(v25, 0);
  if ((v26 & 1) != 0 && (swift_beginAccess(v13, aBlock, 0, 0), (v27 = *v13) != 0))
  {
    v28 = swift_allocObject(&unk_1005D8F70, 24, 7);
    *(_QWORD *)(v28 + 16) = v27;
    v29 = (char **)sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v30 = v43;
    swift_getObjectType(v43);
    v31 = v27;
    if ((sub_1003F7F94((uint64_t)v30, v29) & 1) != 0)
    {
      v32 = v31;
      swift_retain();
      sub_1003FC3A8(v30, v44, (uint64_t)v29, v32, v42, (void (*)(_QWORD, __n128))sub_1002ADD78, v28);
      swift_release(v49);

      swift_release_n(v28, 2, v33);
    }
    else
    {
      v38 = objc_msgSend(v30, "items", v42);
      v39 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
      v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

      swift_retain();
      sub_1003FB784(v40, v31, v44, sub_1002ADD78, v28);
      swift_release(v49);
      v41 = swift_bridgeObjectRelease(v40);
      swift_release_n(v28, 2, v41);

    }
  }
  else
  {
    v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v26);
    v35 = static os_log_type_t.error.getter(v34);
    v36 = sub_10006922C((uint64_t *)&unk_100644560);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_10006A638();
    *(_QWORD *)(v37 + 32) = 0xD000000000000018;
    *(_QWORD *)(v37 + 40) = 0x8000000100522410;
    os_log(_:dso:log:type:_:)("%@: Failed to fetch root item", 29, 2, &_mh_execute_header, v34, v35, v37, v42);
    swift_release(v49);

    swift_bridgeObjectRelease(v37);
  }
}

double sub_1002ABD34(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double result;

  if (a1)
  {
    v4 = swift_bridgeObjectRetain(a1);
    v5 = *(id *)DOCLog.UI.unsafeMutableAddressor(v4);
    v6 = static os_log_type_t.debug.getter();
    v7 = sub_10006922C((uint64_t *)&unk_100644560);
    v8 = swift_allocObject(v7, 152, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v8 + 56) = &type metadata for String;
    *(_QWORD *)(v8 + 64) = sub_10006A638();
    *(_QWORD *)(v8 + 32) = 0xD000000000000018;
    *(_QWORD *)(v8 + 40) = 0x8000000100522410;
    *(_QWORD *)(v8 + 96) = sub_10006922C(&qword_100644580);
    *(_QWORD *)(v8 + 104) = sub_1002ADD80();
    *(_QWORD *)(v8 + 72) = a1;
    *(_QWORD *)(v8 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v8 + 144) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v8 + 112) = a2;
    v9 = a2;
    os_log(_:dso:log:type:_:)("%@: Did successfully drop %@ under %@", 37, 2, &_mh_execute_header, v5, v6, v8);
  }
  else
  {
    v5 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v10 = static os_log_type_t.debug.getter();
    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v8 = swift_allocObject(v11, 112, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v8 + 56) = &type metadata for String;
    *(_QWORD *)(v8 + 64) = sub_10006A638();
    *(_QWORD *)(v8 + 32) = 0xD000000000000018;
    *(_QWORD *)(v8 + 40) = 0x8000000100522410;
    *(_QWORD *)(v8 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v8 + 104) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v8 + 72) = a2;
    v12 = a2;
    os_log(_:dso:log:type:_:)("%@: Failed to drop items under %@", 33, 2, &_mh_execute_header, v5, v10, v8);
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

double sub_1002ABF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, __n128), uint64_t a6)
{
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  double result;
  uint64_t v22;

  v12 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "eligibleActionsForDroppingItems:underItem:", isa, a3);

  type metadata accessor for FPAction(0);
  v16 = v15;
  v17 = sub_1002041DC();
  v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, v16, v17);

  v22 = v18;
  if (a4 != 3)
  {
    v19 = FPActionReparent;
    v20 = (void *)sub_1004448B8((uint64_t)v19);

    v18 = v22;
  }
  sub_1003FACEC(a1, a3, v18, a2, a5, a6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
  return result;
}

id DOCFileProviderSource.isiCloudBased.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (result)
    return objc_msgSend(result, "isiCloudDriveProvider");
  return result;
}

void DOCFileProviderSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCFileProviderSource", 27, "init()", 6, 0);
  __break(1u);
}

id DOCFileProviderSource.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCFileProviderSource);
}

double static DOCFileProviderSource.getMainICloudSourceIfEnabled(configuration:sourceObserver:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  double result;
  _QWORD v13[5];
  uint64_t v14;

  v8 = swift_allocObject(&unk_1005D8D78, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  objc_msgSend(a2, "startObservingSources", swift_retain().n128_f64[0]);
  v9 = swift_allocObject(&unk_1005D8DA0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1002AD9D4;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_1002AD9DC;
  v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10002E508;
  v13[3] = &unk_1005D8DB8;
  v10 = _Block_copy(v13);
  v11 = v14;
  swift_retain();
  objc_msgSend(a2, "retrieveSourcesForConfiguration:usingBlock:", a1, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_1002AC31C(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = 4;
    v6 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      goto LABEL_6;
    }
    while (1)
    {
      v7 = (char *)*(id *)(a1 + 8 * v5);
LABEL_6:
      v8 = v7;
      v9 = __OFADD__(v6, 1);
      v10 = v6 + 1;
      if (v9)
        break;
      v11 = *(void **)&v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v11)
      {
        v14 = v8;
        if ((objc_msgSend(v11, "isMainiCloudDriveDomain") & 1) != 0)
        {
          swift_bridgeObjectRelease(a1);
          v12 = v14;
          goto LABEL_21;
        }

        if (v10 == v4)
          goto LABEL_20;
      }
      else
      {

        if (v10 == v4)
          goto LABEL_20;
      }
      v6 = ++v5 - 4;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  v12 = 0;
LABEL_21:
  v15 = v12;
  a2();

}

void static DOCFileProviderSource.getICloudSourcesIfEnabled(configuration:sourceObserver:completion:)(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  objc_msgSend(a2, "startObservingSources");
  v8 = swift_allocObject(&unk_1005D8DF0, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v11[4] = sub_1002ADFC0;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10002E508;
  v11[3] = &unk_1005D8E08;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain();
  objc_msgSend(a2, "retrieveSourcesForConfiguration:usingBlock:", a1, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
}

double sub_1002AC53C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, __n128), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  __n128 v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  _QWORD *v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD *, __n128);
  _QWORD v45[3];
  _BYTE v46[16];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a4;
  v44 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.notOnQueue(_:), v10);
  v15 = _dispatchPreconditionTest(_:)(v13);
  v16 = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) == 0)
    goto LABEL_22;
  v17 = Logger.UI.unsafeMutableAddressor(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  swift_errorRetain(a2);
  v18 = swift_errorRetain(a2);
  v19 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.info.getter(v20);
  if (os_log_type_enabled(v19, v21))
  {
    v42 = v6;
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v49 = v23;
    *(_DWORD *)v22 = 136315138;
    if (a2)
    {
      swift_getErrorValue(a2, v46, v45);
      v24 = Error.localizedDescription.getter(v45[1], v45[2]);
      v26 = v25;
    }
    else
    {
      v26 = 0xE300000000000000;
      v24 = 7104878;
    }
    v48 = sub_1000544FC(v24, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "[Default Source UI]: Got list of sources with error: %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v42);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v49 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_23;
  v27 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v27; v27 = _CocoaArrayWrapper.endIndex.getter(v39))
  {
    v28 = 4;
    while (1)
    {
      v30 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28 - 4, a1)
          : *(id *)(a1 + 8 * v28);
      v31 = v30;
      v32 = v28 - 3;
      if (__OFADD__(v28 - 4, 1))
        break;
      v48 = (uint64_t)v30;
      sub_1002AC930((void **)&v48, &v47);

      v34 = v47;
      if (v47)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
        v36 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        specialized Array._endMutation()(v29);
      }
      ++v28;
      if (v32 == v27)
      {
        v37 = swift_bridgeObjectRelease(a1);
        v38 = (_QWORD *)v49;
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    if (a1 < 0)
      v39 = a1;
    else
      v39 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v37 = swift_bridgeObjectRelease(a1);
  v38 = _swiftEmptyArrayStorage;
LABEL_28:
  v44(v38, v37);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
  return result;
}

void sub_1002AC930(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  NSObject *v18;
  __n128 v19;
  os_log_type_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  __n128 v52;
  os_log_type_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  unsigned __int8 v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  os_log_t v87;
  uint64_t v88;
  int v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(void (**)(char *, uint64_t))(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v86 - v12;
  v14 = *a1;
  v15 = Logger.UI.unsafeMutableAddressor(v11);
  v16 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v7 + 2);
  v92 = v15;
  v93 = v16;
  ((void (*)(char *))v16)(v13);
  v17 = v14;
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  v21 = v20;
  v22 = os_log_type_enabled(v18, v20);
  v95 = a2;
  v96 = v6;
  v94 = v10;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v89 = v21;
    v24 = v23;
    v90 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc(64, -1);
    v99 = v90;
    *(_DWORD *)v24 = 136315394;
    v25 = objc_msgSend(v17, "displayName");
    v91 = v7;
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    v97 = sub_1000544FC(v27, v29, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v24 + 12) = 2080;
    v88 = v24 + 14;
    v30 = v17;
    v31 = objc_msgSend(v30, "description");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v87 = v18;
    v33 = v32;
    v35 = v34;

    a2 = v95;
    v36 = v33;
    v3 = v2;
    v97 = sub_1000544FC(v36, v35, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    v6 = v96;
    v37 = v35;
    v10 = v94;
    swift_bridgeObjectRelease(v37);
    v38 = v87;
    _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v89, "[Default Source UI]: \t %s — %s", (uint8_t *)v24, 0x16u);
    v39 = v90;
    swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    v40 = (void (*)(char *, uint64_t))*((_QWORD *)v91 + 1);
  }
  else
  {

    v40 = (void (*)(char *, uint64_t))*((_QWORD *)v7 + 1);
  }
  v40(v13, v6);
  v41 = type metadata accessor for DOCFileProviderSource();
  v42 = swift_dynamicCastClass(v17, v41);
  if (v42)
  {
    v43 = v42;
    v44 = *(void **)(v42 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v44)
    {
      v91 = v40;
      v45 = v10;
      v46 = v17;
      v47 = v44;
      if (objc_msgSend(v47, "isiCloudDriveProvider")
        && objc_msgSend(v47, "isEnabled")
        && (objc_msgSend(v47, "isHidden") & 1) == 0
        && (v48 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager"),
            v90 = (void (*)(char *, uint64_t, uint64_t))objc_msgSend(v48, "ubiquityIdentityToken"),
            swift_unknownObjectRelease(v90),
            v48,
            v6 = v96,
            v90))
      {
        v49 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
        LODWORD(v90) = objc_msgSend(v49, "canHostAppPerformAction:fileProviderDomain:", 1, v47);

        v6 = v96;
        v47 = v46;
        if ((_DWORD)v90)
          goto LABEL_28;
      }
      else
      {

      }
      v10 = v45;
      v40 = v91;
    }
  }
  v93(v10, v92, v6);
  v50 = v17;
  v51 = Logger.logObject.getter(v50);
  v53 = static os_log_type_t.info.getter(v52);
  if (os_log_type_enabled(v51, v53))
  {
    v91 = v40;
    v92 = v3;
    v54 = swift_slowAlloc(52, -1);
    v93 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc(160, -1);
    v99 = v93;
    *(_DWORD *)v54 = 136316162;
    v55 = objc_msgSend(v50, "displayName");
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v58 = v57;

    v97 = sub_1000544FC(v56, v58, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    swift_bridgeObjectRelease(v58);
    *(_WORD *)(v54 + 12) = 2080;
    v59 = swift_dynamicCastClass(v50, v41);
    if (v59)
    {
      v60 = *(void **)(v59 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      v61 = v60;
    }
    else
    {
      v60 = 0;
    }
    v97 = (uint64_t)v60;
    v62 = sub_10006922C((uint64_t *)&unk_100647CC0);
    v63 = String.init<A>(describing:)(&v97, v62);
    v65 = v64;
    v97 = sub_1000544FC(v63, v64, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    swift_bridgeObjectRelease(v65);
    *(_WORD *)(v54 + 22) = 2080;
    v66 = swift_dynamicCastClass(v50, v41);
    if (v66 && (v67 = *(void **)(v66 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
      v68 = objc_msgSend(v67, "isEnabled");
    else
      v68 = 2;
    LOBYTE(v97) = v68;
    v69 = sub_10006922C(&qword_100643A40);
    v70 = String.init<A>(describing:)(&v97, v69);
    v72 = v71;
    v97 = sub_1000544FC(v70, v71, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    swift_bridgeObjectRelease(v72);
    *(_WORD *)(v54 + 32) = 2080;
    v73 = swift_dynamicCastClass(v50, v41);
    if (v73 && (v74 = *(void **)(v73 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
      v75 = objc_msgSend(v74, "isHidden");
    else
      v75 = 2;
    LOBYTE(v97) = v75;
    v76 = String.init<A>(describing:)(&v97, v69);
    v78 = v77;
    v97 = sub_1000544FC(v76, v77, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);

    swift_bridgeObjectRelease(v78);
    *(_WORD *)(v54 + 42) = 2080;
    v79 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v80 = objc_msgSend(v79, "ubiquityIdentityToken");

    v97 = (uint64_t)v80;
    v81 = sub_10006922C(&qword_10064C920);
    v82 = String.init<A>(describing:)(&v97, v81);
    v84 = v83;
    v97 = sub_1000544FC(v82, v83, (uint64_t *)&v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);
    swift_bridgeObjectRelease(v84);
    _os_log_impl((void *)&_mh_execute_header, v51, v53, "[Default Source UI]: Filtered OUT source %s: \n\t domain: %s \n\t isEnabled: %s \n\t isHidden: %s \n\t ubiquityToken %s ", (uint8_t *)v54, 0x34u);
    v85 = v93;
    swift_arrayDestroy(v93, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v54, -1, -1);

    v91(v94, v96);
    v43 = 0;
    a2 = v95;
  }
  else
  {

    v40(v10, v6);
    v43 = 0;
  }
LABEL_28:
  *a2 = v43;
}

uint64_t sub_1002AD138()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5Files21DOCTrashedItemsSource____lazy_storage____displayName
                                             + 8));
}

id sub_1002AD14C()
{
  return sub_1000DB3A0(type metadata accessor for DOCTrashedItemsSource);
}

void sub_1002AD184(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  uint64_t v10;
  objc_super v11;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v7 = v6;
  v8 = a1;
  v9 = String._bridgeToObjectiveC()();
  v10 = swift_bridgeObjectRelease(v7);
  v11.receiver = v8;
  v11.super_class = (Class)a4(v10);
  objc_msgSendSuper2(&v11, "setDisplayName:", v9);

}

uint64_t sub_1002AD208()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5Files24DOCSharedDocumentsSource____lazy_storage____displayName
                                             + 8));
}

id sub_1002AD21C()
{
  return sub_1000DB3A0(type metadata accessor for DOCSharedDocumentsSource);
}

id sub_1002AD23C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14;

  v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v5 = v4;
  v14 = 0;
  v6 = objc_msgSend(v2, "initWithURL:error:", v4, &v14);

  v7 = v14;
  if (v6)
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow();
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_1002AD344(void *a1, char a2, void *a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  id v16;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
    {
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v8 = v7;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v11 = v9;
      if (v6 != v10 || v8 != v9)
      {
LABEL_11:
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v11, 0);
        goto LABEL_12;
      }
LABEL_9:
      v14 = 1;
LABEL_12:
      v15 = a1;
      v16 = a3;
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v11);

      return v14 & 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v8 = v12;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v11 = v13;
    if (v6 != v10 || v8 != v13)
      goto LABEL_11;
    goto LABEL_9;
  }
  v14 = 0;
  return v14 & 1;
}

_QWORD *sub_1002AD458(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  id v36;
  unsigned __int8 v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;
  _QWORD *v41;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v3)
      break;
    v41 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v3);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    v5 = 0;
    v31 = v2 & 0xC000000000000001;
    v32 = v3;
    v33 = v2;
    while (v3 != v5)
    {
      if (v31)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      v38 = v5 + 1;
      v37 = objc_msgSend(v6, "isNonUIAction");
      v8 = objc_msgSend(v7, "identifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v10 = v9;

      v36 = objc_msgSend(v7, "uiActionProviderIdentifier");
      v35 = objc_msgSend(a2, "providerID");
      v11 = objc_msgSend(v7, "displayName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v13 = v12;

      v14 = objc_msgSend(v7, "predicate");
      v15 = objc_msgSend(v7, "displayInline");
      v16 = objc_allocWithZone((Class)UIDocumentBrowserActionDescriptor);
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v16, "initWithIdentifier:uiActionProviderIdentifier:fileProviderIdentifier:displayName:predicate:displayInline:", v17, v36, v35, v18, v14, v15, swift_bridgeObjectRelease(v13).n128_f64[0]);

      v20 = objc_msgSend(objc_allocWithZone((Class)UIDocumentBrowserAction), "initWithUIActionDescriptor:providerDomain:", v19, a2);
      objc_msgSend(v20, "setAvailability:", 1);
      v21 = swift_allocObject(&unk_1005D8FC0, 40, 7);
      *(_QWORD *)(v21 + 16) = v20;
      *(_BYTE *)(v21 + 24) = v37;
      *(_QWORD *)(v21 + 32) = a2;
      aBlock[4] = sub_1002ADE14;
      v40 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100120C10;
      aBlock[3] = &unk_1005D8FD8;
      v22 = _Block_copy(aBlock);
      v23 = v40;
      v24 = v20;
      v25 = a2;
      swift_release(v23);
      objc_msgSend(v24, "setUnresolvedHandler:", v22);

      _Block_release(v22);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = v41[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
      v28 = v24;
      v5 = v38;
      v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v28);
      specialized ContiguousArray._endMutation()(v29);
      v3 = v32;
      v2 = v33;
      if (v32 == v38)
        return v41;
    }
    __break(1u);
LABEL_14:
    if (v2 < 0)
      v30 = v2;
    else
      v30 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v2);
  }
  return result;
}

uint64_t sub_1002AD7D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;

  if ((unint64_t)a1 >> 62)
    goto LABEL_30;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v4 = 0;
    v24 = v3;
    v5 = a2[2];
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1)
         : *(id *)(a1 + 32 + 8 * v4);
      v7 = v6;
      if (__OFADD__(v4++, 1))
        break;
      v9 = objc_msgSend(v6, "label");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      if (v5)
      {
        v13 = a2[4];
        v14 = a2[5];
        v15 = v13 == v10 && v14 == v12;
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v10, v12, 0) & 1) != 0)
        {
LABEL_25:

          swift_bridgeObjectRelease(v12);
          v3 = 1;
          goto LABEL_26;
        }
        if (v5 != 1)
        {
          v16 = a2 + 7;
          v17 = 1;
          while (1)
          {
            v18 = v17 + 1;
            if (__OFADD__(v17, 1))
              break;
            v19 = *(v16 - 1);
            v20 = *v16;
            v21 = v19 == v10 && v20 == v12;
            if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v10, v12, 0) & 1) != 0)
              goto LABEL_25;
            v16 += 2;
            ++v17;
            if (v18 == v5)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
LABEL_4:

      swift_bridgeObjectRelease(v12);
      if (v4 == v24)
      {
        v3 = 0;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_30:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_26:
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_1002AD9B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1002AD9D4(uint64_t a1)
{
  uint64_t v1;

  sub_1002AC31C(a1, *(void (**)(void))(v1 + 16));
}

double sub_1002AD9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AC53C(a1, a2, *(void (**)(_QWORD *, __n128))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t initializeBufferWithCopyOfBuffer for DOCFileProviderSourceType(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for DOCFileProviderSourceType(id *a1)
{

}

uint64_t assignWithCopy for DOCFileProviderSourceType(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for DOCFileProviderSourceType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for DOCFileProviderSourceType()
{
  return &type metadata for DOCFileProviderSourceType;
}

char *sub_1002ADAD4(void *a1, uint64_t a2, unint64_t a3)
{
  id v6;
  int v7;
  objc_class *v8;
  id v9;
  int v10;
  id v11;
  int v12;
  id v13;
  id v15;
  char *v16;

  v6 = objc_msgSend(a1, "identifier");
  v7 = DOCProviderDomainIDIsLegacyWebDAV();

  if (v7)
  {
    v8 = (objc_class *)type metadata accessor for DOCFileProviderSource();
LABEL_7:
    v13 = objc_allocWithZone(v8);
    return sub_100053C4C(a1);
  }
  v9 = objc_msgSend(a1, "identifier");
  v10 = DOCProviderDomainIDIsSharedServerDomainID(v9);

  if (v10)
  {
    v8 = (objc_class *)type metadata accessor for DOCSharedServerSource();
    goto LABEL_7;
  }
  v11 = objc_msgSend(a1, "identifier");
  v12 = DOCProviderDomainIDIsExternalDevice(v11);

  if (v12)
  {
    v8 = (objc_class *)type metadata accessor for DOCExternalDeviceSource();
    goto LABEL_7;
  }
  v15 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSource());
  v16 = sub_100053C4C(a1);
  sub_1002A8E30(a2, a3);
  return v16;
}

void sub_1002ADBD8()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = &v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager] = 0;
  *(_OWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier] = xmmword_1004DB490;
  v2 = &v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName];
  *v3 = 0;
  v3[1] = 0;
  *(_OWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName] = xmmword_1004DB490;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = &off_1005C04A8;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode] = 5;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_1005C04D0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_errorCount] = 0;
  v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x80000001005223F0, "Files/DOCFileProviderSource.swift", 33, 2, 561, 0);
  __break(1u);
}

uint64_t sub_1002ADD20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002ADD44(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1002AB8BC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1002ADD4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1002ADD78(uint64_t a1)
{
  uint64_t v1;

  return sub_1002ABD34(a1, *(void **)(v1 + 16));
}

unint64_t sub_1002ADD80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064C908;
  if (!qword_10064C908)
  {
    v1 = sub_10007E830(&qword_100644580);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10064C908);
  }
  return result;
}

uint64_t sub_1002ADDCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

_QWORD *sub_1002ADDE0()
{
  uint64_t v0;

  return sub_1002A95CC(*(void **)(v0 + 16));
}

uint64_t sub_1002ADDE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1002ADE14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1002A967C(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24), *(void **)(v2 + 32));
}

double sub_1002ADE24(uint64_t a1)
{
  uint64_t v1;

  return sub_1002A9B34(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002ADE2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002ADE58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

id sub_1002ADE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AAE24(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1002ADEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AAB38(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

id sub_1002ADEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AAA6C(a1, a2, *(void **)(v2 + 16));
}

id sub_1002ADEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AA9A0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1002ADEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AA664(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1002ADED4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002ADF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002AA35C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1002ADF14()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_100068588((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002AE018()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, double);
  id v8;
  void *v9;
  void *v10;
  _BYTE v11[24];

  v1 = *(double *)(v0 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted);
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_contentView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_contentView, v11, 33, 0);
  v4 = (void *)*v2;
  if (*v2)
  {
    v5 = v2[1];
    ObjectType = swift_getObjectType(*v2, v3);
    v10 = v4;
    v7 = *(void (**)(uint64_t, uint64_t, double))(v5 + 16);
    v8 = v4;
    v7(ObjectType, v5, v1);
    v9 = (void *)*v2;
    *v2 = v10;
    v2[1] = v5;
    swift_endAccess(v11);

  }
  else
  {
    __break(1u);
  }
}

void sub_1002AE0D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  void **v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _BYTE v18[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_preferredIconColor;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_preferredIconColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_preferredIconColor) = a1;
  v17 = a1;
  if (a1)
  {
    if (v5)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
      v6 = v5;
      v16 = v17;
      v7 = static NSObject.== infix(_:_:)(v16, v6);

      if ((v7 & 1) != 0)
      {

        return;
      }
    }
  }
  else if (!v5)
  {

    return;
  }
  v8 = (void **)(v2 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_contentView);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_contentView, v18, 0, 0);
  v9 = *v8;
  if (v9 && (v10 = type metadata accessor for DOCCircularProgressView(), (v11 = swift_dynamicCastClass(v9, v10)) != 0))
  {
    v12 = *(void **)(v2 + v4);
    v13 = *(void **)(v11
                   + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_preferredIconColor);
    *(_QWORD *)(v11
              + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_preferredIconColor) = v12;
    v14 = v12;
    v15 = v9;

    sub_1000AACD8();
  }
  else
  {

  }
}

void sub_1002AE250()
{
  uint64_t v0;

}

id sub_1002AE27C(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCProgressIndicatorView);
}

void sub_1002AE2C0(double a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  float v5;
  id v6;
  double v7;
  id v8;
  double v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[5];
  uint64_t v14;

  v3 = swift_allocObject(&unk_1005D9430, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(double *)(v3 + 24) = a1;
  v4 = v1;
  objc_msgSend(v4, "progress");
  if (v5 > 1.0 || (v4[OBJC_IVAR____TtC5Files28DOCHorizontalBarProgressView_changeAnimationDuration + 8] & 1) != 0)
  {
    v6 = objc_msgSend(v4, "window");

    if (v6)
      v8 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    else
      v8 = 0;
    *(float *)&v7 = a1;
    objc_msgSend(v4, "setProgress:animated:", v8, v7);
    swift_release(v3);
  }
  else
  {
    v9 = *(double *)&v4[OBJC_IVAR____TtC5Files28DOCHorizontalBarProgressView_changeAnimationDuration];
    v10 = (void *)objc_opt_self(UIView);
    v13[4] = sub_1002AED9C;
    v14 = v3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10004A82C;
    v13[3] = &unk_1005D9448;
    v11 = _Block_copy(v13);
    v12 = v14;
    swift_retain();
    swift_release(v12);
    objc_msgSend(v10, "animateWithDuration:animations:", v11, v9);
    swift_release(v3);
    _Block_release(v11);
  }
}

id sub_1002AE454(void *a1, double a2)
{
  id v4;
  double v5;
  id v6;

  v4 = objc_msgSend(a1, "window");

  if (v4)
    v6 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
  else
    v6 = 0;
  *(float *)&v5 = a2;
  return objc_msgSend(a1, "setProgress:animated:", v6, v5);
}

id sub_1002AE5B0(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCHorizontalBarProgressView);
}

uint64_t type metadata accessor for DOCHorizontalBarProgressView()
{
  return objc_opt_self(_TtC5Files28DOCHorizontalBarProgressView);
}

void sub_1002AE5DC(double a1)
{
  sub_1002AE2C0(a1);
}

void sub_1002AE678(void *a1)
{
  char *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  double MidX;
  id v9;
  double v10;
  id v11;
  double v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for DOCCircularProgressView();
  objc_msgSendSuper2(&v13, "layoutSublayersOfLayer:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressLayer];
  v4 = *(void **)&v1[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer];
  v5 = *(id *)&v1[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_borderLayer];
  v6 = v3;
  v7 = v4;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v5, "setBounds:");
  objc_msgSend(a1, "bounds");
  MidX = CGRectGetMidX(v14);
  objc_msgSend(a1, "bounds");
  objc_msgSend(v5, "setPosition:", MidX, CGRectGetMidY(v15));

  v9 = v6;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v9, "setBounds:");
  objc_msgSend(a1, "bounds");
  v10 = CGRectGetMidX(v16);
  objc_msgSend(a1, "bounds");
  objc_msgSend(v9, "setPosition:", v10, CGRectGetMidY(v17));

  v11 = v7;
  objc_msgSend(a1, "bounds");
  objc_msgSend(v11, "setBounds:");
  objc_msgSend(a1, "bounds");
  v12 = CGRectGetMidX(v18);
  objc_msgSend(a1, "bounds");
  objc_msgSend(v11, "setPosition:", v12, CGRectGetMidY(v19));

  sub_10003C988();
}

id sub_1002AE8A8()
{
  return sub_1001405E0(0, type metadata accessor for DOCCircularProgressView);
}

void sub_1002AE940(double a1)
{
  _QWORD *v1;

  *(double *)(*v1 + OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_fractionCompleted) = a1;
  sub_10003C988();
}

char *sub_1002AE96C(void *a1, double a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t inited;
  double *v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  char v28[32];

  v4 = type metadata accessor for DOCHorizontalBarProgressView();
  v5 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  static DOCVibrancy.Style.stroke(_:)(1);
  v6 = sub_10006922C(&qword_10064CA10);
  inited = swift_initStackObject(v6, v28);
  *(_QWORD *)(inited + 16) = v5;
  v8 = (double *)&v5[OBJC_IVAR____TtC5Files28DOCHorizontalBarProgressView_changeAnimationDuration];
  *v8 = a2;
  *((_BYTE *)v8 + 8) = 0;
  v9 = v5;
  DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter(0);
  v10 = objc_msgSend(a1, "tintColor");
  objc_msgSend(v9, "setTintColor:", v10);

  UIView.addSubview<A>(_:)(inited);
  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004DAC10;
  v14 = (void *)DOCViewDecorator.widthAnchor.getter();
  v15 = objc_msgSend(v14, "constraintGreaterThanOrEqualToConstant:", 20.0);

  *(_QWORD *)(v13 + 32) = v15;
  v16 = (void *)DOCViewDecorator.centerYAnchor.getter();
  v17 = objc_msgSend(a1, "centerYAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v13 + 40) = v18;
  v19 = (void *)DOCViewDecorator.leadingAnchor.getter();
  v20 = objc_msgSend(a1, "leadingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v13 + 48) = v21;
  v22 = (void *)DOCViewDecorator.trailingAnchor.getter();
  v23 = objc_msgSend(a1, "trailingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v13 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v11, "activateConstraints:", isa);

  return v9;
}

void sub_1002AEC28()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_fractionCompleted] = 0;
  v1 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_borderLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v2 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_indeterminateLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  __asm { FMOV            V0.2D, #20.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_minSize] = _Q0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_preferredIconColor] = 0;
  v9 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressBorderColor;
  v10 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v0[v9] = objc_msgSend(v10, "systemBlueColor");
  v11 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressFillColor;
  *(_QWORD *)&v0[v11] = objc_msgSend(v10, "systemBlueColor");
  v12 = OBJC_IVAR____TtC5FilesP33_6C1A47974E8480CF19F978326BC049AE23DOCCircularProgressView_progressBackgroundColor;
  *(_QWORD *)&v0[v12] = objc_msgSend(v10, "systemBackgroundColor");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCProgressIndicatorView.swift", 36, 2, 153, 0);
  __break(1u);
}

uint64_t sub_1002AED78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1002AED9C()
{
  uint64_t v0;

  return sub_1002AE454(*(void **)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t storeEnumTagSinglePayload for DOCProgressIndicatorView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002AEDF4 + 4 * byte_1004E04A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002AEE28 + 4 * byte_1004E04A0[v4]))();
}

uint64_t sub_1002AEE28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002AEE30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002AEE38);
  return result;
}

uint64_t sub_1002AEE44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002AEE4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002AEE50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002AEE58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressIndicatorView.Style()
{
  return &type metadata for DOCProgressIndicatorView.Style;
}

unint64_t sub_1002AEE78()
{
  unint64_t result;

  result = qword_10064CA20;
  if (!qword_10064CA20)
  {
    result = swift_getWitnessTable(&unk_1004E05A0, &type metadata for DOCProgressIndicatorView.Style);
    atomic_store(result, (unint64_t *)&qword_10064CA20);
  }
  return result;
}

unint64_t sub_1002AEEC0()
{
  unint64_t result;

  result = qword_10064CA28;
  if (!qword_10064CA28)
  {
    result = swift_getWitnessTable(&unk_1004E066C, &type metadata for SaveToFilesIntent);
    atomic_store(result, (unint64_t *)&qword_10064CA28);
  }
  return result;
}

unint64_t sub_1002AEF08()
{
  unint64_t result;

  result = qword_10064CA30;
  if (!qword_10064CA30)
  {
    result = swift_getWitnessTable(&unk_1004E0694, &type metadata for SaveToFilesIntent);
    atomic_store(result, (unint64_t *)&qword_10064CA30);
  }
  return result;
}

uint64_t sub_1002AEF4C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10056C07C, 1) + 8);
}

uint64_t sub_1002AEF70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056C054, 1);
}

uint64_t sub_1002AEF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672B68);
  sub_10007E788(v10, (uint64_t)qword_100672B68);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x206F542065766153, 0xED000073656C6946);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SAVE_TO_FILES_INTENT_TITLE", 26, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Save To Files intent", 34, v13);
}

uint64_t sub_1002AF12C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10006922C(&qword_10064CAA0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_10064CAA8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1002B1A6C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for SaveToFilesIntent, v6);
  v7._object = (void *)0x8000000100522A70;
  v7._countAndFlagsBits = 0xD000000000000023;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E06C8);
  v9 = sub_10006922C(&qword_10064CAB0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_1004E06F0);
  v12 = sub_10006922C(&qword_10064CAB8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for SaveToFilesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for SaveToFilesIntent, v6);
}

uint64_t sub_1002AF2E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672B80);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672B80);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_1002AF340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = *(_QWORD *)(type metadata accessor for DOCFileEntity(0) - 8);
  v3[8] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[9] = swift_task_alloc(v5);
  v3[10] = swift_task_alloc(v5);
  v6 = type metadata accessor for Logger(0);
  v3[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[12] = v7;
  v3[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002AF3D8, 0, 0);
}

uint64_t sub_1002AF3D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = v1[12];
  v2 = v1[13];
  v4 = v1[11];
  v5 = Logger.AppIntents.unsafeMutableAddressor(a1);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[SaveToFilesIntent] Performing Save To Files Intent", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  v11 = v1[12];
  v10 = v1[13];
  v13 = (_QWORD *)v1[10];
  v12 = v1[11];

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  IntentParameter.wrappedValue.getter(v1 + 2);
  v14 = v1[2];
  v1[14] = v14;
  IntentParameter.wrappedValue.getter(v13);
  v15 = (_QWORD *)swift_task_alloc(dword_10064CA84);
  v1[15] = v15;
  *v15 = v1;
  v15[1] = sub_1002AF508;
  return sub_1002AF744(v14, v1[10], v1[6], v1[7]);
}

uint64_t sub_1002AF508(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *v2;
  v4 = (*v2)[15];
  v3[16] = a1;
  v3[17] = v1;
  swift_task_dealloc(v4);
  v5 = v3[14];
  sub_1000EACF8(v3[10]);
  swift_bridgeObjectRelease(v5);
  if (v1)
    v6 = sub_1002AF6F4;
  else
    v6 = sub_1002AF590;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002AF590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 128);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 64) + 80);
    *(_QWORD *)(v0 + 24) = v1;
    sub_1000EACB4(v1 + ((v4 + 32) & ~v4), v3);
    v5 = sub_1003795D0(v3);
    *(_QWORD *)(v0 + 32) = v5;
    v6 = sub_10006922C(&qword_10064C3B0);
    v7 = sub_100111590();
    v8 = sub_100170058();
    static IntentResult.result<A, B>(value:opensIntent:)(v0 + 24, v0 + 32, v6, &type metadata for RevealFileIntent, v7, v8);
    swift_release(v5);
    swift_bridgeObjectRelease(v1);
    swift_task_dealloc(v2);
    swift_task_dealloc(v15);
    swift_task_dealloc(v3);
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    v9 = sub_1002B1AB0();
    v10 = swift_allocError(&type metadata for SaveToFilesIntent.PerformError, v9, 0, 0);
    *v11 = 1;
    swift_willThrow(v10);
    v13 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AF6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002AF744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C((uint64_t *)&unk_100643900) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[7] = swift_task_alloc(v5);
  v4[8] = swift_task_alloc(v5);
  v4[9] = swift_task_alloc(v5);
  v6 = type metadata accessor for DOCFileEntity(0);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[12] = swift_task_alloc(v8);
  v4[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for UTType(0);
  v4[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[15] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[16] = swift_task_alloc(v11);
  v4[17] = swift_task_alloc(v11);
  return swift_task_switch(sub_1002AF830, 0, 0);
}

uint64_t sub_1002AF830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(int *)(*(_QWORD *)(v0 + 80) + 28);
  v7 = objc_msgSend(*(id *)(v5 + v6), "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v7);

  static UTType.folder.getter(v8);
  LOBYTE(v7) = static UTType.== infix(_:_:)(v2, v1);
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v1, v3);
  v9(v2, v3);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 24);
    v11 = *(_QWORD *)(v5 + v6);
    v12 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 144) = v12;
    *(_OWORD *)(v12 + 16) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v12 + 32) = v10;
    *(_QWORD *)(v12 + 40) = v11;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 152) = v13;
    v14 = sub_10006922C(&qword_100644580);
    *v13 = v0;
    v13[1] = sub_1002AFA04;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x743A5F2865766173, 0xEB00000000293A6FLL, sub_1002B1AF4, v12, v14);
  }
  else
  {
    v16 = sub_1002B1AB0();
    v17 = swift_allocError(&type metadata for SaveToFilesIntent.PerformError, v16, 0, 0);
    *v18 = 0;
    swift_willThrow(v17);
    v19 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 64);
    v22 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1002AFA04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002AFE10;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 144));
    v4 = sub_1002AFA70;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002AFA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(v1);
LABEL_25:
    v32 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 104);
    v36 = *(_QWORD *)(v0 + 64);
    v35 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  if (v1 < 0)
    v31 = *(_QWORD *)(v0 + 16);
  else
    v31 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  v2 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v1);
  if (!v2)
    goto LABEL_24;
LABEL_3:
  result = sub_1001550AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v39 = *(_QWORD *)(v0 + 80);
    v40 = *(_QWORD *)(v0 + 88);
    v38 = v1 & 0xC000000000000001;
    sub_10006922C((uint64_t *)&unk_100643910);
    v4 = 0;
    v41 = v1;
    v42 = v2;
    do
    {
      if (v38)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 80);
      v9 = *(int *)(v39 + 20);
      *(_QWORD *)(v7 + v9) = EntityProperty<>.init()();
      v10 = *(int *)(v39 + 24);
      *(_QWORD *)(v7 + v10) = EntityProperty<>.init()();
      FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v6, "itemID"));
      *(_QWORD *)(v7 + *(int *)(v8 + 28)) = v6;
      v11 = v6;
      v12 = objc_msgSend(v11, "creationDate");
      v13 = *(_QWORD *)(v0 + 72);
      if (v12)
      {
        v14 = v12;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

        v15 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
      }
      else
      {
        v16 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
      }
      v17 = *(_QWORD *)(v0 + 64);
      v18 = *(_QWORD *)(v0 + 72);
      sub_1001114C4(v18, v17);
      EntityProperty.wrappedValue.setter(v17);
      sub_10011150C(v18);
      v19 = objc_msgSend(v11, "contentModificationDate");
      v20 = *(_QWORD *)(v0 + 56);
      if (v19)
      {
        v21 = v19;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

        v22 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 0, 1, v22);
      }
      else
      {
        v23 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
      }
      v25 = *(_QWORD *)(v0 + 96);
      v24 = *(_QWORD *)(v0 + 104);
      v26 = *(_QWORD *)(v0 + 56);
      v27 = *(_QWORD *)(v0 + 64);
      sub_1001114C4(v26, v27);
      EntityProperty.wrappedValue.setter(v27);
      sub_10011150C(v26);

      sub_10011154C(v25, v24);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_1001550AC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v29 = _swiftEmptyArrayStorage[2];
      v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1)
        sub_1001550AC(v28 > 1, v29 + 1, 1);
      v30 = *(_QWORD *)(v0 + 104);
      ++v4;
      _swiftEmptyArrayStorage[2] = v29 + 1;
      sub_10011154C(v30, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v29);
      v1 = v41;
    }
    while (v42 != v4);
    swift_bridgeObjectRelease(v41);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002AFE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1002AFEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v8 = sub_10006922C(&qword_10064CA90);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_1005D95C8, v13 + v10, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_1002B0CC0(a4, a5, (uint64_t)sub_1002B1B64, v14);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1002AFF88(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v4 = sub_10006922C(&qword_10064CA90);
    return CheckedContinuation.resume(throwing:)(&v5, v4);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v2 = sub_10006922C(&qword_10064CA90);
    return CheckedContinuation.resume(returning:)(&v5, v2);
  }
}

void sub_1002AFFF4(uint64_t a1, void (*a2)(id, uint64_t), void *a3, void *a4, void (*a5)(id, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(id, uint64_t);
  void *v32;
  _QWORD *v33;
  id v34;
  void (*v35)(id, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  void *v41;
  void (*v42)(id, uint64_t);
  id v43;
  void *v44;
  void *v45;
  void (*v46)(id, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[5];
  _QWORD *v51;

  v45 = a4;
  v46 = a5;
  v8 = type metadata accessor for Logger(0);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v45 = a3;
    v46 = a2;
    v19 = (void *)_convertErrorToNSError(_:)(a1);
    v20 = Logger.AppIntents.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v10, v20, v48);
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v25 = (_QWORD *)swift_slowAlloc(8, -1);
      v44 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = (uint64_t)v44;
      *(_DWORD *)v24 = 136315394;
      v49 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100522A00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, aBlock);
      *(_WORD *)(v24 + 12) = 2112;
      v49 = (uint64_t)v21;
      v26 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, aBlock);
      *v25 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s: Copy Operation failed: %@", (uint8_t *)v24, 0x16u);
      v27 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v25, 1, v27);
      swift_slowDealloc(v25, -1, -1);
      v28 = v44;
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
    v42 = v46;
    v43 = v21;
    v42(v21, 1);

  }
  else
  {
    v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v48 = static OS_dispatch_queue.main.getter(v29);
    v30 = (_QWORD *)swift_allocObject(&unk_1005D9640, 48, 7);
    v47 = v12;
    v32 = v45;
    v31 = v46;
    v30[2] = v45;
    v30[3] = v31;
    v30[4] = a2;
    v30[5] = a3;
    aBlock[4] = (uint64_t)sub_1002B1C80;
    v51 = v30;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005D9658;
    v44 = _Block_copy(aBlock);
    v33 = v51;
    v34 = v32;
    v35 = v31;
    swift_retain();
    swift_release(v33);
    static DispatchQoS.unspecified.getter(v36);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v37 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_10006922C((uint64_t *)&unk_100647540);
    v39 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v38, v39, v11, v37);
    v40 = v44;
    v41 = (void *)v48;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v18, v14, v44);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

void sub_1002B044C(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  void *v28;
  uint64_t v29;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = objc_msgSend(v10, "bundleIdentifier");

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v14 = a1;
    Date.init()(v14);
    v15 = objc_allocWithZone((Class)DOCHotFolderEvent);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v15, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v16, v14, 1, isa, 1.0);

    v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v19);
    DOCSmartFolderManager.register(event:)(v18);

  }
  v21 = objc_msgSend(a2, "transferResults");
  if (v21)
  {
    v22 = v21;
    v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v24 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for AnyHashable, v23, &protocol witness table for AnyHashable);

    v25 = swift_bridgeObjectRetain(v24);
    v26 = sub_10028F904(v25);
    v27 = swift_bridgeObjectRelease(v24);
    ((void (*)(_QWORD *, _QWORD, __n128))a3)(v26, 0, v27);
    swift_bridgeObjectRelease(v24);
    swift_release(v26);
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v28 = (void *)static NSError.noSuchFileError.getter();
    a3(v28, 1);

  }
}

uint64_t sub_1002B0694@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100640F88, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672B68, (uint64_t)sub_1002AEF80, a1);
}

uint64_t sub_1002B06B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100640F90, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672B80, (uint64_t)sub_1002AF2E8, a1);
}

uint64_t sub_1002B06E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_10064CA7C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000EA854;
  return sub_1002AF340(a1, v5, v4);
}

uint64_t sub_1002B0744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1002B1310();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002B0768(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1A6C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for SaveToFilesIntent(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s5Files17SaveToFilesIntentVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SaveToFilesIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for SaveToFilesIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SaveToFilesIntent()
{
  return &type metadata for SaveToFilesIntent;
}

uint64_t sub_1002B0898()
{
  return sub_100062698(&qword_10064CA40, &qword_10064CA48, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1002B08C4()
{
  return sub_100062698(&qword_10064CA50, &qword_10064CA58, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1002B08F0()
{
  return sub_100062698(&qword_10064CA60, &qword_10064CA58, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

void sub_1002B091C(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  v7 = (void *)a1[4];
  v45 = a1[5];
  v8 = a1[6];
  swift_bridgeObjectRetain(a1);
  v49 = v7;
  v9 = (_QWORD *)*a3;
  v10 = v7;
  swift_bridgeObjectRetain(v8);
  v12 = sub_100140E34((uint64_t)v10);
  v13 = v9[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (v9[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1002E9034();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_QWORD *)(v21[6] + 8 * v12) = v10;
    v22 = (_QWORD *)(v21[7] + 16 * v12);
    *v22 = v45;
    v22[1] = v8;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v27 = a1 + 9;
    while (1)
    {
      v28 = *(v27 - 1);
      v8 = *v27;
      v49 = (id)*(v27 - 2);
      v29 = (_QWORD *)*a3;
      v10 = v49;
      swift_bridgeObjectRetain(v8);
      v30 = sub_100140E34((uint64_t)v10);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v24 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v24)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_1002E0A90(v34, 1);
        v30 = sub_100140E34((uint64_t)v10);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      *(_QWORD *)(v37[6] + 8 * v30) = v10;
      v38 = (_QWORD *)(v37[7] + 16 * v30);
      *v38 = v28;
      v38[1] = v8;
      v39 = v37[2];
      v24 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v24)
        goto LABEL_24;
      v27 += 3;
      v37[2] = v40;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1002E0A90(v15, a2 & 1);
  v17 = sub_100140E34((uint64_t)v10);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v19);
    v48 = v19;
    swift_errorRetain(v19);
    v20 = sub_10006922C((uint64_t *)&unk_100643490);
    if ((swift_dynamicCast(v20, &v48, v20, &type metadata for _MergeError, 0) & 1) == 0)
    {

      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v48);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  v41 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v41);
  __break(1u);
LABEL_26:
  v46 = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v42._object = (void *)0x8000000100522A50;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v42);
  v43 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  _print_unlocked<A, B>(_:_:)(&v49, &v46, v43, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v44._countAndFlagsBits = 39;
  v44._object = (void *)0xE100000000000000;
  String.append(_:)(v44);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v46, v47, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void sub_1002B0CC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void **v44;
  _QWORD *v45;
  void **v46;
  Class isa;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  char *v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  NSObject **v61;
  NSObject *v62;
  uint64_t v63;
  id v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t aBlock;
  _QWORD v75[4];
  _QWORD *v76;

  v67 = a3;
  v68 = a4;
  v69 = type metadata accessor for Logger(0);
  v72 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v71 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for DOCFileEntity(0);
  v7 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - v11;
  v13 = _swiftEmptyArrayStorage;
  aBlock = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  v70 = a1;
  if (v14)
  {
    v66 = a2;
    v15 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v16 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain(a1);
    v17 = v14;
    do
    {
      sub_1000EACB4(v15, (uint64_t)v12);
      v18 = *(id *)&v12[*(int *)(v73 + 28)];
      v19 = sub_1000EACF8((uint64_t)v12);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
      v21 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      v20 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v21 >= v20 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
      v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized Array._endMutation()(v22);
      v15 += v16;
      --v17;
    }
    while (v17);
    a1 = v70;
    swift_bridgeObjectRelease(v70);
    v13 = (_QWORD *)aBlock;
    a2 = v66;
  }
  v23 = (void *)objc_opt_self(DOCUndoManager);
  v24 = a2;
  v25 = objc_msgSend(v23, "shared");
  v26 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
  v27 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)((uint64_t)v13, v24, 0, v25);
  v28 = v27;
  if (v14)
  {
    v66 = v24;
    v29 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v30 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain(a1);
    v65 = v28;
    v31 = v28;
    v32 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000EACB4(v29, (uint64_t)v9);
      v33 = *(id *)&v9[*(int *)(v73 + 28)];
      v34 = objc_msgSend(v33, "displayName");
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      sub_1000EACF8((uint64_t)v9);
      if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
        v32 = sub_100154550(0, v32[2] + 1, 1, v32);
      v39 = v32[2];
      v38 = v32[3];
      if (v39 >= v38 >> 1)
        v32 = sub_100154550((_QWORD *)(v38 > 1), v39 + 1, 1, v32);
      v32[2] = v39 + 1;
      v40 = &v32[3 * v39];
      v40[4] = v33;
      v40[5] = v35;
      v40[6] = v37;
      v29 += v30;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease(v70);
    v28 = v65;
    v24 = v66;
  }
  else
  {
    v41 = v27;
    v32 = _swiftEmptyArrayStorage;
  }
  v42 = v32[2];
  v43 = v69;
  if (v42)
  {
    sub_10006922C(&qword_10064CA98);
    v44 = (void **)static _DictionaryStorage.allocate(capacity:)(v42);
  }
  else
  {
    v44 = (void **)&_swiftEmptyDictionarySingleton;
  }
  aBlock = (unint64_t)v44;
  v45 = (_QWORD *)swift_bridgeObjectRetain(v32);
  sub_1002B091C(v45, 1, &aBlock);
  swift_bridgeObjectRelease(v32);
  v46 = (void **)aBlock;
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  sub_1002B1BB4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "setTargetFilenamesByItem:", isa, swift_release(v46).n128_f64[0]);

  objc_msgSend(v28, "setLastUsageUpdatePolicy:", 2);
  objc_msgSend(v28, "setShouldBounceOnCollision:", 1);
  v48 = (_QWORD *)swift_allocObject(&unk_1005D95F0, 48, 7);
  v49 = v68;
  v48[2] = v67;
  v48[3] = v49;
  v48[4] = v24;
  v48[5] = v28;
  v75[3] = sub_1002B1C40;
  v76 = v48;
  aBlock = (unint64_t)_NSConcreteStackBlock;
  v75[0] = 1107296256;
  v75[1] = sub_10015936C;
  v75[2] = &unk_1005D9608;
  v50 = _Block_copy(&aBlock);
  v51 = v76;
  v52 = v28;
  v53 = v24;
  v54 = v52;
  swift_retain();
  objc_msgSend(v54, "setActionCompletionBlock:", v50, swift_release(v51).n128_f64[0]);
  _Block_release(v50);

  v56 = Logger.AppIntents.unsafeMutableAddressor(v55);
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v56, v43);
  v57 = v54;
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.debug.getter(v58);
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(12, -1);
    v61 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v60 = 138412290;
    aBlock = (unint64_t)v57;
    v62 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v75);
    *v61 = v57;

    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Adding copy operation %@", v60, 0xCu);
    v63 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v61, 1, v63);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v60, -1, -1);
  }
  else
  {

    v58 = v57;
  }

  (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v43);
  v64 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  objc_msgSend(v64, "scheduleAction:", v57);

}

uint64_t sub_1002B1310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v68;
  unsigned int v69;
  void (*v70)(char *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[4];

  v0 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v0);
  v75 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for InputConnectionBehavior(0);
  v74 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v80 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v3);
  v79 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v78 = (char *)&v60 - v6;
  v7 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v7);
  v76 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  __chkstk_darwin(v9);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  v68 = v20;
  __chkstk_darwin(v20);
  v77 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_10006922C(&qword_100643368);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x736D657449, 0xE500000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v64 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v62 = v11;
  v25(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  v63 = v25;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SAVE_TO_FILES_INTENT_FILES_PARAM_TITLE", 38, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Title of the Items parameter of the Save To Files Intent", 56, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100522870);
  static Locale.current.getter(v26);
  v25(v13, v24, v11);
  LOWORD(v57) = 2;
  v27 = v76;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SAVE_TO_FILES_INTENT_FILES_PARAM_DESCRIPTION", 44, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Description of the Items parameter of the Save To Files Intent", 62, v57);
  v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v67(v27, 0, 1, v20);
  v82[0] = 0;
  v28 = sub_10006922C((uint64_t *)&unk_10064B460);
  v73 = v28;
  v29 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = *(unsigned __int8 *)(v29 + 80);
  v65 = v30;
  v66 = (v31 + 32) & ~v31;
  v72 = v31 | 7;
  v32 = swift_allocObject(v28, v66 + 2 * v30, v31 | 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004D4CE0;
  v33 = static UTType.item.getter(v32);
  static UTType.folder.getter(v33);
  v34 = type metadata accessor for IntentDialog(0);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v61 = v35;
  v36 = v78;
  v35(v78, 1, 1, v34);
  v37 = v79;
  v35(v79, 1, 1, v34);
  v69 = enum case for InputConnectionBehavior.default(_:);
  v70 = *(void (**)(char *))(v74 + 104);
  v38 = v80;
  v70(v80);
  v39 = sub_10005A360(&qword_10064CA68, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAD80);
  v40 = v76;
  v74 = IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v77, v76, v82, v32, v36, v37, v38, v39);
  v71 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v41);
  v42 = v64;
  v43 = v62;
  v44 = v63;
  v63(v13, v64, v62);
  LOWORD(v58) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SAVE_TO_FILES_INTENT_FOLDER_PARAM_TITLE", 39, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Title of the Folder parameter of the Save To Files Intent", 57, v58);
  v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x8000000100522970);
  static Locale.current.getter(v45);
  v44(v13, v42, v43);
  LOWORD(v59) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("SAVE_TO_FILES_INTENT_FOLDER_PARAM_DESCRIPTION", 45, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Description of the Folder parameter of the Save To Files Intent", 63, v59);
  v67(v40, 0, 1, v68);
  v46 = type metadata accessor for DOCFileEntity(0);
  v47 = v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v75, 1, 1, v46);
  v48 = v78;
  v49 = v61;
  v61(v78, 1, 1, v34);
  v50 = v79;
  v49(v79, 1, 1, v34);
  v51 = swift_allocObject(v73, v66 + v65, v72);
  *(_OWORD *)(v51 + 16) = xmmword_1004D9670;
  static UTType.folder.getter(v51);
  v52 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v52, 64, 7);
  v82[0] = sub_10029FBBC(v51, 1);
  v82[1] = 0;
  v53 = v80;
  ((void (*)(char *, _QWORD, uint64_t))v70)(v80, v69, v81);
  v54 = sub_100111434();
  v55 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v77, v40, v47, v48, v50, v53, v82, &type metadata for LocationOptionsProvider, v54, v55);
  return v74;
}

unint64_t sub_1002B1A6C()
{
  unint64_t result;

  result = qword_10064CA70;
  if (!qword_10064CA70)
  {
    result = swift_getWitnessTable(&unk_1004E05DC, &type metadata for SaveToFilesIntent);
    atomic_store(result, &qword_10064CA70);
  }
  return result;
}

unint64_t sub_1002B1AB0()
{
  unint64_t result;

  result = qword_10064CA88;
  if (!qword_10064CA88)
  {
    result = swift_getWitnessTable(&unk_1004E078C, &type metadata for SaveToFilesIntent.PerformError);
    atomic_store(result, (unint64_t *)&qword_10064CA88);
  }
  return result;
}

double sub_1002B1AF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1002AFEA0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1002B1B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_10064CA90);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002B1B64(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_10006922C(&qword_10064CA90);
  return sub_1002AFF88(a1, v3);
}

unint64_t sub_1002B1BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100657330;
  if (!qword_100657330)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100657330);
  }
  return result;
}

uint64_t sub_1002B1C0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1002B1C40(uint64_t a1)
{
  uint64_t v1;

  sub_1002AFFF4(a1, *(void (**)(id, uint64_t))(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void (**)(id, uint64_t))(v1 + 40));
}

uint64_t sub_1002B1C4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1002B1C80()
{
  uint64_t v0;

  sub_1002B044C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

uint64_t sub_1002B1C8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002B1CB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for SaveToFilesIntent.PerformError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002B1D28 + 4 * byte_1004E05D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002B1D5C + 4 * byte_1004E05D0[v4]))();
}

uint64_t sub_1002B1D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B1D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002B1D6CLL);
  return result;
}

uint64_t sub_1002B1D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002B1D80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002B1D84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B1D8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SaveToFilesIntent.PerformError()
{
  return &type metadata for SaveToFilesIntent.PerformError;
}

unint64_t sub_1002B1DAC()
{
  unint64_t result;

  result = qword_10064CAC0;
  if (!qword_10064CAC0)
  {
    result = swift_getWitnessTable(&unk_1004E0764, &type metadata for SaveToFilesIntent.PerformError);
    atomic_store(result, (unint64_t *)&qword_10064CAC0);
  }
  return result;
}

uint64_t sub_1002B1DF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  id v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  uint64_t v20;
  id v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  v2 = _typeName(_:qualified:)(*v0, 0);
  v4 = v3;
  swift_bridgeObjectRelease(0xE000000000000000);
  v23 = v2;
  v24 = v4;
  v5._countAndFlagsBits = 0x3A7365646F6E203ALL;
  v5._object = (void *)0xE900000000000020;
  String.append(_:)(v5);
  swift_beginAccess(v0 + 2, v22, 0, 0);
  v6 = v0[2];
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v20 = v1[2];
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1[2]);
    v7 = (void *)_CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(void **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = v7;
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0x6E61707845736920;
  v10._object = (void *)0xED0000203A646564;
  String.append(_:)(v10);
  if (*((_BYTE *)v1 + 24))
    v11 = 1702195828;
  else
    v11 = 0x65736C6166;
  if (*((_BYTE *)v1 + 24))
    v12 = 0xE400000000000000;
  else
    v12 = 0xE500000000000000;
  v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v12);
  v14._countAndFlagsBits = 0x203A67617420;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v21 = (id)v1[4];
  v15 = v21;
  v16 = sub_10006922C(&qword_10064CD48);
  v17._countAndFlagsBits = String.init<A>(describing:)(&v21, v16);
  v18 = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v18);
  return v23;
}

uint64_t sub_1002B1FBC()
{
  return sub_1002B1DF8();
}

uint64_t sub_1002B1FDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002B2020(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002B2074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t (*v28)(char *, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  void *v89;
  Swift::String v90;
  Swift::String_optional v91;
  Swift::String v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  unint64_t *v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  __int128 v134;
  char *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  __int128 v144;
  unint64_t v145[3];
  uint64_t v146;
  uint64_t v147[2];
  Swift::String v148;
  uint64_t v149;
  _QWORD v150[5];
  Swift::String v151;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v7);
  v132 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v144 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v144 - 8);
  v10 = __chkstk_darwin(v144);
  v128 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v140 = (char *)&v124 - v12;
  v13 = swift_bridgeObjectRetain(a1);
  v130 = sub_100147588(v13);
  v126 = v14;
  v129 = v15;
  v125 = v16;
  v136 = sub_1003F123C((uint64_t)_swiftEmptyArrayStorage);
  v146 = (uint64_t)_swiftEmptyArrayStorage;
  v127 = v1;
  v17 = *(_QWORD *)(v1 + 16);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v86 = *(_QWORD *)(v1 + 16);
    else
      v86 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    v18 = _CocoaArrayWrapper.endIndex.getter(v86);
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v17);
    if (v18)
    {
LABEL_3:
      if (v18 >= 1)
      {
        v135 = v6;
        v20 = 0;
        v137 = v17 & 0xC000000000000001;
        *(_QWORD *)&v19 = 136315138;
        v134 = v19;
        v133 = (char *)&type metadata for Any + 8;
        v139 = v9;
        v141 = v17;
        v138 = v18;
        v142 = v4;
        v143 = (_QWORD *)v3;
        while (1)
        {
          if (v137)
          {
            v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v17);
          }
          else
          {
            v21 = *(void **)(v17 + 8 * v20 + 32);
            swift_unknownObjectRetain(v21);
          }
          v22 = objc_msgSend(v21, "contentType");
          v23 = v140;
          static UTType._unconditionallyBridgeFromObjectiveC(_:)(v22);

          v25 = UTType.identifier.getter(v24);
          v27 = v26;
          v28 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
          v28(v23, v144);
          if (qword_100640D78 != -1)
            swift_once(&qword_100640D78, sub_100146B5C);
          swift_beginAccess(&off_100644610, v147, 32, 0);
          v29 = off_100644610;
          if (*((_QWORD *)off_100644610 + 2))
          {
            swift_bridgeObjectRetain(v27);
            v30 = sub_10007EF08(v25, v27);
            if ((v31 & 1) != 0)
            {
              v32 = (uint64_t *)(v29[7] + 16 * v30);
              v34 = *v32;
              v33 = (void *)v32[1];
              swift_endAccess(v147);
              sub_1000D1378(v34, (unint64_t)v33);
              v35 = swift_bridgeObjectRelease(v27);
              goto LABEL_20;
            }
            swift_bridgeObjectRelease(v27);
          }
          swift_endAccess(v147);
          v36._countAndFlagsBits = 778991972;
          v36._object = (void *)0xE400000000000000;
          v35 = String.hasPrefix(_:)(v36);
          if ((v35 & 1) != 0)
            goto LABEL_21;
          swift_bridgeObjectRetain(v27);
          v37 = (uint64_t)v132;
          UTType.init(_:)(v25, v27);
          v38 = v144;
          if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v9 + 48))(v37, 1, v144) == 1)
          {
            v35 = sub_10000CB4C(v37, &qword_100643EC0);
LABEL_21:
            v43 = Logger.UI.unsafeMutableAddressor(v35);
            v45 = v142;
            v44 = v143;
            v46 = v135;
            (*(void (**)(char *, uint64_t, _QWORD *))(v142 + 16))(v135, v43, v143);
            v47 = swift_bridgeObjectRetain_n(v27, 2);
            v48 = Logger.logObject.getter(v47);
            v49 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v48, v49))
            {
              v50 = swift_slowAlloc(12, -1);
              v51 = swift_slowAlloc(32, -1);
              v147[0] = v51;
              *(_DWORD *)v50 = v134;
              swift_bridgeObjectRetain(v27);
              *(_QWORD *)(v50 + 4) = sub_1000544FC(v25, v27, v147);
              swift_bridgeObjectRelease_n(v27, 3);
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "Could not map %s to a category DOCItemFileTypeGroupCategory", (uint8_t *)v50, 0xCu);
              swift_arrayDestroy(v51, 1, v133);
              v52 = v51;
              v45 = v142;
              swift_slowDealloc(v52, -1, -1);
              v53 = v50;
              v44 = v143;
              swift_slowDealloc(v53, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n(v27, 2);
            }
            (*(void (**)(char *, _QWORD *))(v45 + 8))(v46, v44);
            swift_bridgeObjectRelease(v27);
            v54 = swift_unknownObjectRetain(v21);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
            v56 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v55 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
            v17 = v141;
            if (v56 >= v55 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
            v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v21);
            specialized Array._endMutation()(v57);
LABEL_27:
            v9 = v139;
            goto LABEL_6;
          }
          v39 = v128;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v128, v37, v38);
          v34 = sub_100148AA4(v39, v130, v129);
          v40 = v38;
          v33 = v41;
          v42 = v39;
          v17 = v141;
          v35 = v28(v42, v40);
          if (v33 == (void *)11)
            goto LABEL_21;
LABEL_20:
          if (v33 == (void *)10)
            goto LABEL_21;
          swift_bridgeObjectRelease(v27);
          v58 = v136;
          if (!*(_QWORD *)(v136 + 16)
            || (sub_1000D1378(v34, (unint64_t)v33),
                sub_1001409B0(v34, (uint64_t)v33),
                v60 = v59,
                sub_1000D13D0(v34, (unint64_t)v33),
                (v60 & 1) == 0))
          {
            v61 = 0xED000073746E656DLL;
            v62 = 0x75636F4420464450;
            switch((unint64_t)v33)
            {
              case 0uLL:
                break;
              case 1uLL:
                v61 = 0xE600000000000000;
                v62 = 0x736567616D49;
                break;
              case 2uLL:
                v61 = 0xE500000000000000;
                v62 = 0x636973754DLL;
                break;
              case 3uLL:
                v61 = 0xE600000000000000;
                v62 = 0x736569766F4DLL;
                break;
              case 4uLL:
                v61 = 0xE900000000000073;
                v62 = 0x746E656D75636F44;
                break;
              case 5uLL:
                v61 = 0xEC00000073746565;
                v62 = 0x6873646165727053;
                break;
              case 6uLL:
                v61 = 0xED0000736E6F6974;
                v62 = 0x61746E6573657250;
                break;
              case 7uLL:
                v62 = 0x65706F6C65766544;
                v61 = 0xE900000000000072;
                break;
              case 8uLL:
                v61 = 0xE800000000000000;
                v62 = 0x7365766968637241;
                break;
              case 9uLL:
                v61 = 0xE700000000000000;
                v62 = 0x737265646C6F46;
                break;
              default:
                strcpy((char *)v147, "Custom group ");
                HIWORD(v147[1]) = -4864;
                v63._countAndFlagsBits = v34;
                v63._object = v33;
                String.append(_:)(v63);
                v62 = v147[0];
                v61 = v147[1];
                break;
            }
            v131 = v62;
            v64 = sub_100146578(v34, (unint64_t)v33);
            v66 = v65;
            v67 = type metadata accessor for DOCCollectionNodes();
            v68 = swift_allocObject(v67, 40, 7);
            *(_QWORD *)(v68 + 16) = _swiftEmptyArrayStorage;
            *(_WORD *)(v68 + 24) = 0;
            *(_QWORD *)(v68 + 32) = 0;
            swift_beginAccess(v68 + 16, v147, 33, 0);
            sub_1000683EC((uint64_t)_swiftEmptyArrayStorage);
            swift_endAccess(v147);
            *(_BYTE *)(v68 + 24) = 0;
            v150[0] = v131;
            v150[1] = v61;
            v150[2] = v64;
            v150[3] = v66;
            v150[4] = v68;
            sub_1000D1378(v34, (unint64_t)v33);
            swift_bridgeObjectRetain(v61);
            swift_bridgeObjectRetain(v66);
            swift_retain(v68);
            v69 = v136;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v136);
            v147[0] = v69;
            sub_100355EA0((uint64_t)v150, v34, (unint64_t)v33, isUniquelyReferenced_nonNull_native);
            v58 = v147[0];
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_1000D13D0(v34, (unint64_t)v33);
            swift_release(v68);
            swift_bridgeObjectRelease(v66);
            swift_bridgeObjectRelease(v61);
            v9 = v139;
            v17 = v141;
          }
          v71 = *(_QWORD *)(v58 + 16);
          v136 = v58;
          if (v71)
          {
            v72 = sub_1001409B0(v34, (uint64_t)v33);
            if ((v73 & 1) != 0)
            {
              v74 = (uint64_t *)(*(_QWORD *)(v58 + 56) + 40 * v72);
              v75 = *v74;
              v76 = v74[1];
              v77 = v74[2];
              v78 = v74[3];
              v79 = v74[4];
              swift_bridgeObjectRetain(v76);
              swift_bridgeObjectRetain(v78);
              swift_retain(v79);
              sub_1000D13D0(v34, (unint64_t)v33);
              swift_retain(v79);
              sub_1001D09CC(v75, v76, v77, v78, v79);
              swift_beginAccess(v79 + 16, v147, 33, 0);
              v80 = swift_unknownObjectRetain(v21);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v80);
              v82 = *(_QWORD *)((*(_QWORD *)(v79 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
              v81 = *(_QWORD *)((*(_QWORD *)(v79 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v82 >= v81 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, v82 + 1, 1);
              v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v82, v21);
              specialized Array._endMutation()(v83);
              swift_endAccess(v147);
              swift_release(v79);
              goto LABEL_27;
            }
          }
          sub_1000D13D0(v34, (unint64_t)v33);
LABEL_6:
          ++v20;
          swift_unknownObjectRelease(v21);
          if (v138 == v20)
          {
            v84 = swift_bridgeObjectRelease(v17);
            v85 = v146;
            goto LABEL_53;
          }
        }
      }
      __break(1u);
LABEL_76:
      __break(1u);
      JUMPOUT(0x1002B2D80);
    }
  }
  v84 = swift_bridgeObjectRelease(v17);
  v85 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_53:
  v87 = v136;
  if ((unint64_t)v85 >> 62)
  {
    if (v85 < 0)
      v98 = v85;
    else
      v98 = v85 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v85);
    v99 = _CocoaArrayWrapper.endIndex.getter(v98);
    v84 = swift_bridgeObjectRelease(v85);
    if (v99 >= 1)
      goto LABEL_55;
LABEL_61:
    v97 = v85;
    goto LABEL_62;
  }
  if (*(uint64_t *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_61;
LABEL_55:
  v88 = (id)_DocumentManagerBundle(v84);
  if (!v88)
    goto LABEL_76;
  v89 = v88;
  v151._object = (void *)0x8000000100511100;
  v90._countAndFlagsBits = 0x726568744FLL;
  v90._object = (void *)0xE500000000000000;
  v91.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v91.value._object = (void *)0xEB00000000656C62;
  v92._countAndFlagsBits = 0;
  v92._object = (void *)0xE000000000000000;
  v151._countAndFlagsBits = 0xD00000000000004FLL;
  v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, v91, (NSBundle)v89, v92, v151);

  v94 = type metadata accessor for DOCCollectionNodes();
  v95 = swift_allocObject(v94, 40, 7);
  *(_QWORD *)(v95 + 16) = _swiftEmptyArrayStorage;
  *(_WORD *)(v95 + 24) = 0;
  *(_QWORD *)(v95 + 32) = 0;
  swift_beginAccess(v95 + 16, v147, 33, 0);
  sub_1000683EC(v85);
  swift_endAccess(v147);
  *(_BYTE *)(v95 + 24) = 0;
  v147[0] = 0x726568744FLL;
  v147[1] = 0xE500000000000000;
  v148 = v93;
  v149 = v95;
  v96 = swift_isUniquelyReferenced_nonNull_native(v87);
  v145[0] = v87;
  sub_100355EA0((uint64_t)v147, 0, 0xAuLL, v96);
  v87 = v145[0];
  v97 = 0x8000000000000000;
LABEL_62:
  swift_bridgeObjectRelease(v97);
  v100 = v130;
  v101 = v126;
  v102 = v129;
  v103 = v125;
  v104 = sub_100146B80(v130, v126, v129, v125);
  swift_bridgeObjectRelease(v103);
  swift_bridgeObjectRelease(v102);
  swift_bridgeObjectRelease(v101);
  swift_bridgeObjectRelease(v100);
  v105 = v104[2];
  v143 = v104;
  if (v105)
  {
    v106 = v104 + 5;
    v107 = _swiftEmptyArrayStorage;
    v136 = v87;
    do
    {
      if (*(_QWORD *)(v87 + 16))
      {
        v108 = *(v106 - 1);
        v109 = *v106;
        sub_1000D1378(v108, *v106);
        v110 = sub_1001409B0(v108, v109);
        if ((v111 & 1) != 0)
        {
          v112 = *(_QWORD *)(v87 + 56) + 40 * v110;
          v113 = *(_QWORD *)v112;
          v114 = *(_QWORD *)(v112 + 8);
          v115 = *(_QWORD *)(v112 + 16);
          v144 = *(_OWORD *)(v112 + 24);
          swift_bridgeObjectRetain(v114);
          v116 = v144;
          swift_bridgeObjectRetain(v144);
          v117 = *((_QWORD *)&v144 + 1);
          swift_retain(*((_QWORD *)&v144 + 1));
          sub_1000D13D0(v108, v109);
          swift_bridgeObjectRetain(v114);
          swift_bridgeObjectRetain(v116);
          swift_retain(v117);
          if ((swift_isUniquelyReferenced_nonNull_native(v107) & 1) == 0)
            v107 = sub_100153434(0, v107[2] + 1, 1, v107);
          v119 = v107[2];
          v118 = v107[3];
          if (v119 >= v118 >> 1)
            v107 = sub_100153434((_QWORD *)(v118 > 1), v119 + 1, 1, v107);
          v107[2] = v119 + 1;
          v120 = &v107[5 * v119];
          v120[4] = v113;
          v120[5] = v114;
          v120[6] = v115;
          *(_OWORD *)(v120 + 7) = v144;
          swift_release(v117);
          swift_bridgeObjectRelease(v116);
          swift_bridgeObjectRelease(v114);
          v87 = v136;
        }
        else
        {
          sub_1000D13D0(v108, v109);
        }
      }
      v106 += 2;
      --v105;
    }
    while (v105);
  }
  else
  {
    v107 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v143);
  v121 = v127;
  swift_beginAccess(v127 + 24, v145, 1, 0);
  v122 = *(_QWORD *)(v121 + 24);
  *(_QWORD *)(v121 + 24) = v107;
  swift_bridgeObjectRelease(v122);
  return swift_bridgeObjectRelease(v87);
}

uint64_t sub_1002B2DA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t object;
  uint64_t countAndFlagsBits;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD **v65;
  _QWORD *v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  Swift::String v75;
  Swift::String_optional v76;
  Swift::String v77;
  Swift::String v78;
  uint64_t v79;
  _QWORD *v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  char *v92;
  unint64_t v93;
  char *v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  __int128 v114;
  unint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  Swift::String v118;

  v97 = a1;
  v109 = sub_10006922C(&qword_100644B40);
  v89 = *(_QWORD *)(v109 - 8);
  v3 = __chkstk_darwin(v109);
  v108 = (char **)((char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v107 = (uint64_t)&v88 - v5;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD **)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v92 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v88 - v10;
  v12 = sub_10006922C((uint64_t *)&unk_100643900);
  v13 = __chkstk_darwin(v12);
  v91 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v94 = (char *)&v88 - v16;
  v17 = __chkstk_darwin(v15);
  v100 = (char *)&v88 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char **)((char *)&v88 - v20);
  v22 = __chkstk_darwin(v19);
  v95 = (char *)&v88 - v23;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v88 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v88 - v27;
  object = sub_1003F1258((uint64_t)_swiftEmptyArrayStorage);
  v117 = (uint64_t)_swiftEmptyArrayStorage;
  v96 = sub_1003F13D0((uint64_t)_swiftEmptyArrayStorage);
  v90 = v1;
  v101 = v1[2];
  countAndFlagsBits = v101;
  if ((unint64_t)v101 >> 62)
  {
    if (v101 < 0)
      v32 = v101;
    else
      v32 = v101 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v101);
    v33 = v32;
    countAndFlagsBits = v101;
    v31 = _CocoaArrayWrapper.endIndex.getter(v33);
    v111 = v6;
    v112 = v7;
    if (v31)
      goto LABEL_3;
LABEL_12:
    v115 = object;
    swift_bridgeObjectRelease(countAndFlagsBits);
    v34 = v96;
    swift_bridgeObjectRetain_n(v96, 2);
    v35 = sub_10028F03C(v34);
    swift_bridgeObjectRelease(v34);
    v116 = v35;
    sub_1002B58E0(&v116);
    swift_bridgeObjectRelease(v34);
    v36 = v116;
    v37 = v116[2];
    if (v37)
    {
      v116 = _swiftEmptyArrayStorage;
      sub_100154F6C(0, v37, 0);
      v38 = (uint64_t)v36 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
      v39 = *(_QWORD *)(v89 + 72);
      v113 = (uint64_t)v36;
      *(_QWORD *)&v114 = v39;
      do
      {
        v40 = v107;
        sub_1000271D4(v38, v107, &qword_100644B40);
        v41 = v108;
        v42 = *(int *)(v109 + 48);
        v43 = (char *)v108 + v42;
        v44 = *(_QWORD *)v40;
        v45 = *(_QWORD *)(v40 + 8);
        v46 = *(_BYTE *)(v40 + 16);
        *v108 = *(_QWORD *)v40;
        v41[1] = v45;
        *((_BYTE *)v41 + 16) = v46;
        v47 = v111;
        ((void (*)(char *, uint64_t, uint64_t))v7[2])(v43, v40 + v42, v111);
        sub_100292218(v44, v45, v46);
        ((void (*)(char *, uint64_t))v7[1])(v43, v47);
        sub_10000CB4C(v40, &qword_100644B40);
        v48 = v116;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) == 0)
        {
          sub_100154F6C(0, v48[2] + 1, 1);
          v48 = v116;
        }
        v50 = v48[2];
        v49 = v48[3];
        if (v50 >= v49 >> 1)
        {
          sub_100154F6C(v49 > 1, v50 + 1, 1);
          v48 = v116;
        }
        v48[2] = v50 + 1;
        v51 = &v48[3 * v50];
        v51[4] = v44;
        v51[5] = v45;
        *((_BYTE *)v51 + 48) = v46;
        v38 += v114;
        --v37;
        v7 = v112;
      }
      while (v37);
      swift_release(v113);
      v34 = v96;
    }
    else
    {
      swift_release(v116);
      v48 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v34);
    v52 = v48[2];
    v53 = v115;
    if (v52)
    {
      v112 = v90 + 3;
      v54 = (unsigned __int8 *)(v48 + 6);
      do
      {
        if (*(_QWORD *)(v53 + 16))
        {
          v55 = *((_QWORD *)v54 - 2);
          v56 = *((_QWORD *)v54 - 1);
          v57 = *v54;
          sub_100292218(v55, v56, *v54);
          v58 = sub_1001409C4(v55, v56, v57);
          if ((v59 & 1) != 0)
          {
            v60 = *(_QWORD *)(v53 + 56) + 40 * v58;
            v62 = *(_QWORD *)v60;
            v61 = *(_QWORD *)(v60 + 8);
            v113 = *(_QWORD *)(v60 + 16);
            v114 = *(_OWORD *)(v60 + 24);
            swift_bridgeObjectRetain(v61);
            v63 = v114;
            swift_bridgeObjectRetain(v114);
            v64 = *((_QWORD *)&v114 + 1);
            swift_retain(*((_QWORD *)&v114 + 1));
            sub_1002B81DC(v55, v56, v57);
            v65 = (_QWORD **)v112;
            swift_beginAccess(v112, &v116, 33, 0);
            v66 = *v65;
            swift_bridgeObjectRetain(v61);
            swift_bridgeObjectRetain(v63);
            swift_retain(v64);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
            *v65 = v66;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v66 = sub_100153434(0, v66[2] + 1, 1, v66);
              *v112 = v66;
            }
            v69 = v66[2];
            v68 = v66[3];
            if (v69 >= v68 >> 1)
            {
              v66 = sub_100153434((_QWORD *)(v68 > 1), v69 + 1, 1, v66);
              *v112 = v66;
            }
            v66[2] = v69 + 1;
            v70 = &v66[5 * v69];
            v70[4] = v62;
            v70[5] = v61;
            v70[6] = v113;
            *(_OWORD *)(v70 + 7) = v114;
            swift_endAccess(&v116);
            swift_release(v64);
            swift_bridgeObjectRelease(v63);
            swift_bridgeObjectRelease(v61);
            v53 = v115;
          }
          else
          {
            sub_1002B81DC(v55, v56, v57);
          }
        }
        v54 += 24;
        --v52;
      }
      while (v52);
    }
    v71 = swift_bridgeObjectRelease(v48);
    v72 = v117;
    if ((unint64_t)v117 >> 62)
    {
      if (v117 < 0)
        v85 = v117;
      else
        v85 = v117 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v117);
      v86 = _CocoaArrayWrapper.endIndex.getter(v85);
      v71 = swift_bridgeObjectRelease(v72);
      if (v86 >= 1)
      {
LABEL_34:
        v73 = (id)_DocumentManagerBundle(v71);
        if (!v73)
        {
          __break(1u);
          swift_release(v116);
          __break(1u);
          JUMPOUT(0x1002B40C4);
        }
        v74 = v73;
        v2 = 0x726568744FLL;
        v118._countAndFlagsBits = 0xD00000000000004FLL;
        v118._object = (void *)0x8000000100511100;
        v75._countAndFlagsBits = 0x726568744FLL;
        v75._object = (void *)0xE500000000000000;
        v76.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v76.value._object = (void *)0xEB00000000656C62;
        v77._countAndFlagsBits = 0;
        v77._object = (void *)0xE000000000000000;
        v78 = NSLocalizedString(_:tableName:bundle:value:comment:)(v75, v76, (NSBundle)v74, v77, v118);
        countAndFlagsBits = v78._countAndFlagsBits;
        object = (unint64_t)v78._object;

        v79 = type metadata accessor for DOCCollectionNodes();
        v11 = (char *)swift_allocObject(v79, 40, 7);
        *((_QWORD *)v11 + 2) = _swiftEmptyArrayStorage;
        *((_WORD *)v11 + 12) = 0;
        *((_QWORD *)v11 + 4) = 0;
        swift_beginAccess(v11 + 16, &v116, 33, 0);
        sub_1000683EC(v72);
        swift_endAccess(&v116);
        v11[24] = 0;
        v80 = v90;
        v1 = v90 + 3;
        swift_beginAccess(v90 + 3, &v116, 33, 0);
        v21 = (_QWORD *)v80[3];
        v81 = swift_isUniquelyReferenced_nonNull_native(v21);
        v80[3] = v21;
        if ((v81 & 1) != 0)
          goto LABEL_36;
        goto LABEL_46;
      }
    }
    else if (*(uint64_t *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
      goto LABEL_34;
    }
    swift_bridgeObjectRelease(v72);
    return swift_bridgeObjectRelease(v53);
  }
  v1 = *(_QWORD **)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v101);
  v31 = (uint64_t)v1;
  v111 = v6;
  v112 = v7;
  if (!v1)
    goto LABEL_12;
LABEL_3:
  if (v31 >= 1)
  {
    v110 = v11;
    v104 = countAndFlagsBits & 0xC000000000000001;
    v103 = v97;
    v102 = "ed";
    v93 = 0x800000010050B9E0;
    v88 = " files with no size";
    v99 = v21;
    v98 = v26;
    v106 = v28;
    v105 = v31;
    if ((countAndFlagsBits & 0xC000000000000001) != 0)
    {
      *(_QWORD *)&v114 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
    }
    else
    {
      *(_QWORD *)&v114 = *(_QWORD *)(countAndFlagsBits + 32);
      swift_unknownObjectRetain(v114);
    }
    v113 = 1;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7])(v28, 1, 1, v6);
    v115 = object;
    __asm { BR              X8 }
  }
  __break(1u);
LABEL_46:
  v21 = sub_100153434(0, v21[2] + 1, 1, v21);
  *v1 = v21;
LABEL_36:
  v83 = v21[2];
  v82 = v21[3];
  if (v83 >= v82 >> 1)
  {
    v21 = sub_100153434((_QWORD *)(v82 > 1), v83 + 1, 1, v21);
    *v1 = v21;
  }
  v21[2] = v83 + 1;
  v84 = &v21[5 * v83];
  v84[4] = v2;
  v84[5] = 0xE500000000000000;
  v84[6] = countAndFlagsBits;
  v84[7] = object;
  v84[8] = v11;
  swift_endAccess(&v116);
  v53 = v115;
  return swift_bridgeObjectRelease(v53);
}

uint64_t sub_1002B4108()
{
  uint64_t v0;
  SEL *countAndFlagsBits;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t object;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  void *v73;
  Swift::String v74;
  Swift::String_optional v75;
  Swift::String v76;
  Swift::String v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  _QWORD **v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98[4];
  uint64_t v99;
  _QWORD v100[6];
  Swift::String v101;

  v2 = _swiftEmptyArrayStorage;
  v3 = sub_1003F9374((uint64_t)_swiftEmptyArrayStorage);
  v99 = (uint64_t)_swiftEmptyArrayStorage;
  v4 = sub_1003F94B0((uint64_t)_swiftEmptyArrayStorage);
  v86 = v0;
  object = *(_QWORD *)(v0 + 16);
  if ((unint64_t)object >> 62)
    goto LABEL_36;
  v6 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  if (!v6)
  {
LABEL_40:
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRetain_n(v4, 2);
    v44 = sub_10028F174(v4);
    swift_bridgeObjectRelease(v4);
    v98[0] = (uint64_t)v44;
    sub_1002B5964(v98, sub_1004656C4, sub_1002B63DC);
    swift_bridgeObjectRelease(v4);
    v45 = v98[0];
    v46 = *(_QWORD *)(v98[0] + 16);
    if (v46)
    {
      v47 = v4;
      v98[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100154F88(0, v46, 0);
      v48 = 0;
      v49 = (_QWORD *)v98[0];
      v50 = *(_QWORD *)(v98[0] + 16);
      v51 = 3 * v50;
      do
      {
        v52 = *(_OWORD *)(v45 + v48 + 32);
        v53 = *(_BYTE *)(v45 + v48 + 48);
        v98[0] = (uint64_t)v49;
        v54 = v49[3];
        v55 = v50 + 1;
        if (v50 >= v54 >> 1)
        {
          v96 = v52;
          sub_100154F88(v54 > 1, v50 + 1, 1);
          v52 = v96;
          v49 = (_QWORD *)v98[0];
        }
        v49[2] = v55;
        v56 = &v49[v51];
        *((_OWORD *)v56 + 2) = v52;
        *((_BYTE *)v56 + 48) = v53;
        v51 += 3;
        v48 += 32;
        v50 = v55;
        --v46;
      }
      while (v46);
      swift_release(v45);
      v4 = v47;
    }
    else
    {
      swift_release(v98[0]);
      v49 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v4);
    v57 = v49[2];
    if (v57)
    {
      v92 = v3;
      v94 = (_QWORD **)(v86 + 24);
      v58 = (char *)(v49 + 6);
      do
      {
        if (*(_QWORD *)(v3 + 16))
        {
          v60 = sub_100140AAC(*((_QWORD *)v58 - 2), *((_QWORD *)v58 - 1), *v58);
          if ((v61 & 1) != 0)
          {
            v62 = *(_QWORD *)(v3 + 56) + 40 * v60;
            v64 = *(_QWORD *)v62;
            v63 = *(_QWORD *)(v62 + 8);
            v65 = *(_QWORD *)(v62 + 16);
            v97 = *(_OWORD *)(v62 + 24);
            swift_beginAccess(v94, v98, 33, 0);
            v66 = *v94;
            swift_bridgeObjectRetain_n(v63, 2);
            swift_bridgeObjectRetain_n(v97, 2);
            swift_retain_n(*((_QWORD *)&v97 + 1), 2);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
            *v94 = v66;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v66 = sub_100153434(0, v66[2] + 1, 1, v66);
              *v94 = v66;
            }
            v69 = v66[2];
            v68 = v66[3];
            if (v69 >= v68 >> 1)
            {
              v66 = sub_100153434((_QWORD *)(v68 > 1), v69 + 1, 1, v66);
              *v94 = v66;
            }
            v66[2] = v69 + 1;
            v59 = &v66[5 * v69];
            v59[4] = v64;
            v59[5] = v63;
            v59[6] = v65;
            *(_OWORD *)(v59 + 7) = v97;
            swift_endAccess(v98);
            swift_release(*((_QWORD *)&v97 + 1));
            swift_bridgeObjectRelease(v97);
            swift_bridgeObjectRelease(v63);
            v3 = v92;
          }
        }
        v58 += 24;
        --v57;
      }
      while (v57);
    }
    swift_bridgeObjectRelease(v49);
    v70 = v99;
    if ((unint64_t)v99 >> 62)
    {
      if (v99 < 0)
        v83 = v99;
      else
        v83 = v99 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v99);
      v84 = _CocoaArrayWrapper.endIndex.getter(v83);
      swift_bridgeObjectRelease(v70);
      if (v84 >= 1)
        goto LABEL_59;
    }
    else if (*(uint64_t *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_59:
      v71 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
      v72 = (id)_DocumentManagerBundle(v71);
      if (v72)
      {
        v73 = v72;
        v101._object = (void *)0x8000000100522BD0;
        v74._countAndFlagsBits = 2960685;
        v74._object = (void *)0xE300000000000000;
        v75.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v75.value._object = (void *)0xEB00000000656C62;
        v76._countAndFlagsBits = 0;
        v76._object = (void *)0xE000000000000000;
        v101._countAndFlagsBits = 0xD000000000000033;
        v77 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v75, (NSBundle)v73, v76, v101);
        countAndFlagsBits = (SEL *)v77._countAndFlagsBits;
        object = (uint64_t)v77._object;

        v78 = type metadata accessor for DOCCollectionNodes();
        v6 = swift_allocObject(v78, 40, 7);
        *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
        *(_WORD *)(v6 + 24) = 0;
        *(_QWORD *)(v6 + 32) = 0;
        swift_beginAccess(v6 + 16, v98, 33, 0);
        sub_1000683EC(v70);
        swift_endAccess(v98);
        *(_BYTE *)(v6 + 24) = 0;
        v2 = (_QWORD *)(v86 + 24);
        swift_beginAccess(v86 + 24, v98, 33, 0);
        v0 = *(_QWORD *)(v86 + 24);
        v79 = swift_isUniquelyReferenced_nonNull_native(v0);
        *(_QWORD *)(v86 + 24) = v0;
        if ((v79 & 1) == 0)
          goto LABEL_71;
        goto LABEL_61;
      }
      __break(1u);
      result = swift_release(v98[0]);
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease(v70);
    return swift_bridgeObjectRelease(v3);
  }
  while (v6 >= 1)
  {
    v7 = 0;
    v8 = object & 0xC000000000000001;
    countAndFlagsBits = (SEL *)&off_10061F000;
    v88 = v6;
    v89 = object;
    v87 = object & 0xC000000000000001;
    while (1)
    {
      if (v8)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, object);
      }
      else
      {
        v9 = *(void **)(object + 8 * v7 + 32);
        swift_unknownObjectRetain(v9);
      }
      if ((objc_msgSend(v9, countAndFlagsBits[426]) & 1) != 0
        || (v10 = objc_msgSend(v9, "fileSize")) == 0)
      {
        v14 = swift_unknownObjectRetain(v9);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v16 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v15 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v16 >= v15 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
        v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v9);
        specialized Array._endMutation()(v17);
        goto LABEL_6;
      }
      v11 = v10;
      v0 = (uint64_t)objc_msgSend(v10, "longLongValue");

      if (v0 < 100)
      {
        object = 0;
        v12 = 0;
        v13 = 100;
        if (!*(_QWORD *)(v3 + 16))
          goto LABEL_25;
        goto LABEL_24;
      }
      v18 = log10((double)v0);
      v19 = __exp10(floor(v18));
      if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
        break;
      if (v19 <= -9.22337204e18)
        goto LABEL_32;
      if (v19 >= 9.22337204e18)
        goto LABEL_33;
      v13 = (uint64_t)v19;
      object = 10 * (uint64_t)v19;
      if ((unsigned __int128)((uint64_t)v19 * (__int128)10) >> 64 != object >> 63)
        goto LABEL_34;
      if (object < v13)
        goto LABEL_35;
      v12 = 1;
      if (!*(_QWORD *)(v3 + 16))
      {
LABEL_25:
        v21 = sub_100347690(v13, object, v12);
        v91 = v22;
        v93 = v21;
        v95 = v4;
        v90 = sub_100347A20(v13, object, v12);
        v24 = v23;
        v25 = type metadata accessor for DOCCollectionNodes();
        v26 = swift_allocObject(v25, 40, 7);
        *(_QWORD *)(v26 + 16) = _swiftEmptyArrayStorage;
        *(_WORD *)(v26 + 24) = 0;
        *(_QWORD *)(v26 + 32) = 0;
        swift_beginAccess(v26 + 16, v98, 33, 0);
        sub_1000683EC((uint64_t)_swiftEmptyArrayStorage);
        swift_endAccess(v98);
        *(_BYTE *)(v26 + 24) = 0;
        v100[0] = v90;
        v100[1] = v24;
        v27 = v24;
        v100[2] = v93;
        v100[3] = v91;
        v100[4] = v26;
        swift_bridgeObjectRetain(v24);
        swift_bridgeObjectRetain(v91);
        swift_retain(v26);
        v28 = swift_isUniquelyReferenced_nonNull_native(v3);
        v98[0] = v3;
        sub_1003564A8((uint64_t)v100, v13, object, v12, v28);
        v3 = v98[0];
        swift_bridgeObjectRelease(0x8000000000000000);
        v29 = swift_isUniquelyReferenced_nonNull_native(v95);
        v98[0] = v95;
        sub_100356354(v0, v13, object, v12, v29);
        v30 = v98[0];
        swift_release(v26);
        v4 = v30;
        swift_bridgeObjectRelease(v91);
        v31 = v27;
        countAndFlagsBits = (SEL *)&off_10061F000;
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(0x8000000000000000);
        goto LABEL_26;
      }
LABEL_24:
      sub_100140AAC(v13, object, v12);
      if ((v20 & 1) == 0)
        goto LABEL_25;
LABEL_26:
      if (*(_QWORD *)(v3 + 16) && (v32 = sub_100140AAC(v13, object, v12), (v33 & 1) != 0))
      {
        v34 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 40 * v32);
        v35 = *v34;
        v36 = v34[1];
        v37 = v34[2];
        v38 = v34[3];
        v39 = v34[4];
        swift_bridgeObjectRetain(v36);
        swift_bridgeObjectRetain(v38);
        swift_retain_n(v39, 2);
        sub_1001D09CC(v35, v36, v37, v38, v39);
        swift_beginAccess(v39 + 16, v98, 33, 0);
        v40 = swift_unknownObjectRetain(v9);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
        v42 = *(_QWORD *)((*(_QWORD *)(v39 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
        v41 = *(_QWORD *)((*(_QWORD *)(v39 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
        v6 = v88;
        object = v89;
        v8 = v87;
        if (v42 >= v41 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
        v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v9);
        specialized Array._endMutation()(v43);
        swift_endAccess(v98);
        swift_release(v39);
        countAndFlagsBits = (SEL *)&off_10061F000;
      }
      else
      {
        v6 = v88;
        object = v89;
        v8 = v87;
      }
LABEL_6:
      ++v7;
      swift_unknownObjectRelease(v9);
      if (v6 == v7)
        goto LABEL_40;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    if (object < 0)
      v2 = (_QWORD *)object;
    else
      v2 = (_QWORD *)(object & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(object);
    v6 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (!v6)
      goto LABEL_40;
  }
  __break(1u);
LABEL_71:
  v0 = (uint64_t)sub_100153434(0, *(_QWORD *)(v0 + 16) + 1, 1, (_QWORD *)v0);
  *v2 = v0;
LABEL_61:
  v81 = *(_QWORD *)(v0 + 16);
  v80 = *(_QWORD *)(v0 + 24);
  if (v81 >= v80 >> 1)
  {
    v0 = (uint64_t)sub_100153434((_QWORD *)(v80 > 1), v81 + 1, 1, (_QWORD *)v0);
    *v2 = v0;
  }
  *(_QWORD *)(v0 + 16) = v81 + 1;
  v82 = (_QWORD *)(v0 + 40 * v81);
  v82[4] = 0x6E776F6E6B6E55;
  v82[5] = 0xE700000000000000;
  v82[6] = countAndFlagsBits;
  v82[7] = object;
  v82[8] = v6;
  swift_endAccess(v98);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1002B4A64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *countAndFlagsBits;
  unint64_t v9;
  _QWORD *v10;
  uint64_t object;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char **v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  Class isa;
  id v36;
  unint64_t v37;
  char v38;
  char v39;
  objc_class *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  int64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD **v86;
  _QWORD *v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  Swift::String v96;
  Swift::String_optional v97;
  Swift::String v98;
  Swift::String v99;
  uint64_t v100;
  _QWORD *v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t result;
  _QWORD *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  objc_class *v118;
  __int128 v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  _QWORD v124[6];
  Swift::String v125;

  v2 = sub_10006922C((uint64_t *)&unk_10064CD30);
  __chkstk_darwin(v2);
  v112 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PersonNameComponents(0);
  v113 = *(_QWORD *)(v4 - 8);
  v114 = v4;
  v5 = __chkstk_darwin(v4);
  v111 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v110 = (char *)&v109 - v7;
  countAndFlagsBits = _swiftEmptyArrayStorage;
  v9 = sub_1003F1580((uint64_t)_swiftEmptyArrayStorage);
  v123 = (uint64_t)_swiftEmptyArrayStorage;
  v10 = (_QWORD *)sub_1003F1708((uint64_t)_swiftEmptyArrayStorage);
  v109 = v0;
  object = v0[2];
  if ((unint64_t)object >> 62)
  {
    if (object < 0)
      v0 = (_QWORD *)v0[2];
    else
      v0 = (_QWORD *)(object & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(object);
    v12 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v0[2]);
    if (v12)
    {
LABEL_3:
      if (v12 >= 1)
      {
        *(_QWORD *)&v119 = v10;
        v13 = 0;
        v14 = object & 0xC000000000000001;
        v15 = &selRef_viewOptionsRoot;
        v116 = v12;
        v117 = (_QWORD *)object;
        v115 = object & 0xC000000000000001;
        while (1)
        {
          if (v14)
          {
            v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, object);
          }
          else
          {
            v16 = *(void **)(object + 8 * v13 + 32);
            swift_unknownObjectRetain(v16);
          }
          if (!objc_msgSend(v16, v15[136], v109))
          {
            v20 = swift_unknownObjectRetain(v16);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v22 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v21 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v22 >= v21 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v16);
            specialized Array._endMutation()(v23);
            goto LABEL_7;
          }
          v17 = objc_msgSend(v16, "isSharedByCurrentUser");
          v120 = v9;
          if ((v17 & 1) != 0)
          {
            v18 = 0;
            v19 = 0;
            if (!*(_QWORD *)(v9 + 16))
              goto LABEL_25;
            goto LABEL_24;
          }
          v24 = objc_msgSend(v16, "ownerNameComponents");
          if (v24)
          {
            v25 = v24;
            v26 = v111;
            static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

            v27 = (uint64_t)v112;
            v28 = v113;
            v29 = *(void (**)(char *, char *, uint64_t))(v113 + 32);
            v30 = v26;
            v31 = v114;
            v29(v112, v30, v114);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v31);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v31) != 1)
            {
              v32 = v110;
              v33 = v114;
              v29(v110, (char *)v27, v114);
              v34 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
              isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
              v36 = objc_msgSend(v34, "localizedStringFromPersonNameComponents:style:options:", isa, 0, 0);

              v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
              v19 = v37;

              (*(void (**)(char *, uint64_t))(v113 + 8))(v32, v33);
              goto LABEL_23;
            }
          }
          else
          {
            v27 = (uint64_t)v112;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v112, 1, 1, v114);
          }
          sub_10000CB4C(v27, (uint64_t *)&unk_10064CD30);
          v18 = 0;
          v19 = 1;
LABEL_23:
          v9 = v120;
          if (!*(_QWORD *)(v120 + 16))
            goto LABEL_25;
LABEL_24:
          sub_100292204(v18, v19);
          sub_100140B68(v18, v19);
          v39 = v38;
          sub_1002B81C8(v18, v19);
          if ((v39 & 1) == 0)
          {
LABEL_25:
            v40 = sub_10039A6A8(v18, v19);
            v42 = v41;
            v118 = v40;
            if (v19)
            {
              if (v19 == 1)
              {
                v44 = 0xE600000000000000;
                v43 = 0x646572616853;
              }
              else if (v19 == 2)
              {
                v43 = 0x7261685320746F4ELL;
                v44 = 0xEA00000000006465;
              }
              else
              {
                v121 = 0x6220646572616853;
                v122 = 0xEA00000000002079;
                v45._countAndFlagsBits = v18;
                v45._object = (void *)v19;
                String.append(_:)(v45);
                v43 = v121;
                v44 = v122;
              }
            }
            else
            {
              v44 = 0xEC000000654D2079;
              v43 = 0x6220646572616853;
            }
            v46 = type metadata accessor for DOCCollectionNodes();
            v47 = swift_allocObject(v46, 40, 7);
            *(_QWORD *)(v47 + 16) = _swiftEmptyArrayStorage;
            *(_WORD *)(v47 + 24) = 0;
            *(_QWORD *)(v47 + 32) = 0;
            swift_beginAccess(v47 + 16, &v121, 33, 0);
            sub_1000683EC((uint64_t)_swiftEmptyArrayStorage);
            swift_endAccess(&v121);
            *(_BYTE *)(v47 + 24) = 0;
            v124[0] = v43;
            v124[1] = v44;
            v124[2] = v118;
            v124[3] = v42;
            v124[4] = v47;
            sub_100292204(v18, v19);
            swift_bridgeObjectRetain(v44);
            swift_bridgeObjectRetain(v42);
            swift_retain(v47);
            v48 = v120;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v120);
            v121 = v48;
            sub_1003567A0((uint64_t)v124, v18, v19, isUniquelyReferenced_nonNull_native);
            v9 = v121;
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_1002B81C8(v18, v19);
            sub_100292204(v18, v19);
            swift_unknownObjectRetain(v16);
            v50 = v119;
            v51 = swift_isUniquelyReferenced_nonNull_native(v119);
            v121 = v50;
            sub_100356640((uint64_t)v16, v18, v19, v51);
            *(_QWORD *)&v119 = v121;
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_1002B81C8(v18, v19);
            swift_release(v47);
            swift_bridgeObjectRelease(v42);
            swift_bridgeObjectRelease(v44);
          }
          if (*(_QWORD *)(v9 + 16) && (v52 = sub_100140B68(v18, v19), (v53 & 1) != 0))
          {
            v54 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 40 * v52);
            v55 = *v54;
            v56 = v54[1];
            v57 = v54[2];
            v58 = v54[3];
            v59 = v54[4];
            swift_bridgeObjectRetain(v56);
            swift_bridgeObjectRetain(v58);
            swift_retain(v59);
            sub_1002B81C8(v18, v19);
            swift_retain(v59);
            sub_1001D09CC(v55, v56, v57, v58, v59);
            swift_beginAccess(v59 + 16, &v121, 33, 0);
            v60 = swift_unknownObjectRetain(v16);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
            v62 = *(_QWORD *)((*(_QWORD *)(v59 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
            v61 = *(_QWORD *)((*(_QWORD *)(v59 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v62 >= v61 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
            v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v16);
            specialized Array._endMutation()(v63);
            swift_endAccess(&v121);
            swift_release(v59);
          }
          else
          {
            sub_1002B81C8(v18, v19);
          }
          v12 = v116;
          object = (uint64_t)v117;
          v14 = v115;
          v15 = &selRef_viewOptionsRoot;
LABEL_7:
          ++v13;
          swift_unknownObjectRelease(v16);
          if (v12 == v13)
          {
            swift_bridgeObjectRelease(object);
            v10 = (_QWORD *)v119;
            goto LABEL_44;
          }
        }
      }
      __break(1u);
      goto LABEL_76;
    }
  }
  swift_bridgeObjectRelease(object);
LABEL_44:
  swift_bridgeObjectRetain_n(v10, 2);
  v64 = sub_10028F258((uint64_t)v10);
  swift_bridgeObjectRelease(v10);
  v121 = (uint64_t)v64;
  sub_1002B5964(&v121, (uint64_t (*)(uint64_t))sub_1004656D8, sub_1002B6ACC);
  swift_bridgeObjectRelease(v10);
  v65 = v121;
  v66 = *(_QWORD *)(v121 + 16);
  v120 = v9;
  if (v66)
  {
    v67 = v10;
    v121 = (uint64_t)_swiftEmptyArrayStorage;
    sub_100154FA4(0, v66, 0);
    v68 = (_QWORD *)v121;
    v69 = (unint64_t *)(v65 + 40);
    do
    {
      v70 = *(v69 - 1);
      v71 = *v69;
      sub_100292204(v70, *v69);
      v121 = (uint64_t)v68;
      v73 = v68[2];
      v72 = v68[3];
      if (v73 >= v72 >> 1)
      {
        sub_100154FA4(v72 > 1, v73 + 1, 1);
        v68 = (_QWORD *)v121;
      }
      v69 += 3;
      v68[2] = v73 + 1;
      v74 = &v68[2 * v73];
      v74[4] = v70;
      v74[5] = v71;
      --v66;
    }
    while (v66);
    swift_release(v65);
    v9 = v120;
    v10 = v67;
  }
  else
  {
    swift_release(v121);
    v68 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v10);
  v75 = v68[2];
  if (v75)
  {
    v117 = v109 + 3;
    v76 = v68 + 5;
    do
    {
      if (*(_QWORD *)(v9 + 16))
      {
        v77 = *(v76 - 1);
        v78 = *v76;
        sub_100292204(v77, *v76);
        v79 = sub_100140B68(v77, v78);
        if ((v80 & 1) != 0)
        {
          v81 = *(_QWORD *)(v9 + 56) + 40 * v79;
          v82 = *(_QWORD *)(v81 + 8);
          v118 = *(objc_class **)v81;
          v83 = *(_QWORD *)(v81 + 16);
          v119 = *(_OWORD *)(v81 + 24);
          swift_bridgeObjectRetain(v82);
          v84 = v119;
          swift_bridgeObjectRetain(v119);
          v85 = *((_QWORD *)&v119 + 1);
          swift_retain(*((_QWORD *)&v119 + 1));
          sub_1002B81C8(v77, v78);
          v86 = (_QWORD **)v117;
          swift_beginAccess(v117, &v121, 33, 0);
          v87 = *v86;
          swift_bridgeObjectRetain(v82);
          swift_bridgeObjectRetain(v84);
          swift_retain(v85);
          v88 = swift_isUniquelyReferenced_nonNull_native(v87);
          *v86 = v87;
          if ((v88 & 1) == 0)
          {
            v87 = sub_100153434(0, v87[2] + 1, 1, v87);
            *v117 = v87;
          }
          v90 = v87[2];
          v89 = v87[3];
          if (v90 >= v89 >> 1)
          {
            v87 = sub_100153434((_QWORD *)(v89 > 1), v90 + 1, 1, v87);
            *v117 = v87;
          }
          v87[2] = v90 + 1;
          v91 = &v87[5 * v90];
          v91[4] = v118;
          v91[5] = v82;
          v91[6] = v83;
          *(_OWORD *)(v91 + 7) = v119;
          swift_endAccess(&v121);
          swift_release(v85);
          swift_bridgeObjectRelease(v84);
          swift_bridgeObjectRelease(v82);
          v9 = v120;
        }
        else
        {
          sub_1002B81C8(v77, v78);
        }
      }
      v76 += 2;
      --v75;
    }
    while (v75);
  }
  v92 = swift_bridgeObjectRelease(v68);
  v93 = v123;
  if (!((unint64_t)v123 >> 62))
  {
    if (*(uint64_t *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_64;
LABEL_73:
    swift_bridgeObjectRelease(v93);
    return swift_bridgeObjectRelease(v9);
  }
  if (v123 < 0)
    v106 = v123;
  else
    v106 = v123 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v123);
  v107 = _CocoaArrayWrapper.endIndex.getter(v106);
  v92 = swift_bridgeObjectRelease(v93);
  if (v107 < 1)
    goto LABEL_73;
LABEL_64:
  v94 = (id)_DocumentManagerBundle(v92);
  if (v94)
  {
    v95 = v94;
    v125._object = (void *)0x8000000100522B90;
    v96._countAndFlagsBits = 0x7261685320746F4ELL;
    v96._object = (void *)0xEA00000000006465;
    v97.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v97.value._object = (void *)0xEB00000000656C62;
    v98._countAndFlagsBits = 0;
    v98._object = (void *)0xE000000000000000;
    v125._countAndFlagsBits = 0xD00000000000003ALL;
    v99 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, v97, (NSBundle)v95, v98, v125);
    countAndFlagsBits = (_QWORD *)v99._countAndFlagsBits;
    object = (uint64_t)v99._object;

    v100 = type metadata accessor for DOCCollectionNodes();
    v1 = swift_allocObject(v100, 40, 7);
    *(_QWORD *)(v1 + 16) = _swiftEmptyArrayStorage;
    *(_WORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    swift_beginAccess(v1 + 16, &v121, 33, 0);
    sub_1000683EC(v93);
    swift_endAccess(&v121);
    *(_BYTE *)(v1 + 24) = 0;
    v101 = v109;
    v0 = v109 + 3;
    swift_beginAccess(v109 + 3, &v121, 33, 0);
    v10 = (_QWORD *)v101[3];
    v102 = swift_isUniquelyReferenced_nonNull_native(v10);
    v101[3] = v10;
    if ((v102 & 1) != 0)
    {
LABEL_66:
      v104 = v10[2];
      v103 = v10[3];
      if (v104 >= v103 >> 1)
      {
        v10 = sub_100153434((_QWORD *)(v103 > 1), v104 + 1, 1, v10);
        *v0 = v10;
      }
      v10[2] = v104 + 1;
      v105 = &v10[5 * v104];
      v105[4] = 0x7261685320746F4ELL;
      v105[5] = 0xEA00000000006465;
      v105[6] = countAndFlagsBits;
      v105[7] = object;
      v105[8] = v1;
      swift_endAccess(&v121);
      v9 = v120;
      return swift_bridgeObjectRelease(v9);
    }
LABEL_76:
    v10 = sub_100153434(0, v10[2] + 1, 1, v10);
    *v0 = v10;
    goto LABEL_66;
  }
  __break(1u);
  result = swift_release(v121);
  __break(1u);
  return result;
}

_QWORD *assignWithCopy for DOCCollectionSection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

