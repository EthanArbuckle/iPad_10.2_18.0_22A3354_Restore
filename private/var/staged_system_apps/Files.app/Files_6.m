void sub_10032ECB8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10000ADBC(a2);

  }
}

uint64_t sub_10032ED10()
{
  return sub_10000C4A8((uint64_t)sub_100339258, (uint64_t)&unk_1005DEAF0);
}

void sub_10032ED24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  char *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  _BOOL4 v23;
  _QWORD *v24;
  uint64_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  os_unfair_lock_s *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  int v49;
  uint64_t v50;
  os_log_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[24];

  v2 = sub_10006922C(&qword_100643470);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v54 = (uint64_t)&v48 - v6;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v57, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v11);
  if (Strong)
  {
    v13 = (char *)Strong;
    v14 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    v15 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    *(&v48 - 2) = (uint8_t *)__chkstk_darwin(Strong);
    swift_retain(v15);
    os_unfair_lock_lock(v15 + 4);
    sub_10006A620(&v56);
    v16 = v56;
    os_unfair_lock_unlock(v15 + 4);
    v17 = swift_release(v15);
    if (v16 == 1)
    {
      v53 = v14;
      v18 = Logger.Enumeration.unsafeMutableAddressor(v17);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v7);
      v19 = v13;
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      v22 = v21;
      v23 = os_log_type_enabled(v20, v21);
      v24 = &unk_10064F000;
      v52 = v5;
      if (v23)
      {
        v51 = v20;
        v25 = swift_slowAlloc(12, -1);
        v49 = v22;
        v26 = (uint8_t *)v25;
        v50 = swift_slowAlloc(32, -1);
        v56 = v50;
        *(_DWORD *)v26 = 136315138;
        v48 = v26 + 4;
        v27 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode], "displayName", v26 + 4);
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v30 = v29;

        v31 = v28;
        v24 = (_QWORD *)&unk_10064F000;
        v55 = sub_1000544FC(v31, v30, &v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
        swift_bridgeObjectRelease(v30);

        v20 = v51;
        _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v49, "[DSEnumeration] stopObserving: DOCNode %s", v26, 0xCu);
        v32 = v50;
        swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v26, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v33 = *(void **)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer];
      v34 = v53;
      if (v33)
        objc_msgSend(v33, "stopObserving:", *(unsigned int *)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions]);
      v35 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken;
      v36 = *(void **)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken];
      if (v36)
      {
        v37 = *(void **)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver];
        v38 = v36;
        objc_msgSend(v37, "removeSubscriberForToken:", v38);
        v39 = *(void **)&v19[v35];
        *(_QWORD *)&v19[v35] = 0;

      }
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver], "stopObservingSources");
      v40 = *(os_unfair_lock_s **)&v13[v34];
      swift_retain(v40);
      os_unfair_lock_lock(v40 + 4);
      v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 0;
      os_unfair_lock_unlock(v40 + 4);
      swift_release(v40);
      objc_msgSend(v19, "setIsGathering:", 0);
      if (v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] == 1)
      {
        v41 = objc_msgSend(*(id *)&v19[v24[80]], "nodeURL");
        if (v41)
        {
          v42 = v41;
          v43 = (uint64_t)v52;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v41);

          v44 = type metadata accessor for URL(0);
          v45 = *(_QWORD *)(v44 - 8);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v43, 0, 1, v44);
        }
        else
        {
          v44 = type metadata accessor for URL(0);
          v45 = *(_QWORD *)(v44 - 8);
          v43 = (uint64_t)v52;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v52, 1, 1, v44);
        }
        v46 = v54;
        sub_1000B34E4(v43, v54);
        type metadata accessor for URL(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v46, 1, v44) == 1)
        {

          sub_10000CB4C(v54, &qword_100643470);
        }
        else
        {
          v47 = v54;
          URL.stopAccessingSecurityScopedResource()();

          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v44);
        }
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

uint64_t sub_10032F1FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  os_unfair_lock_s *v21;
  int v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Enumeration.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v25 = v12;
    *(_DWORD *)v11 = 136446210;
    v24 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528C60, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[DSEnumeration] %{public}s: Domain needs authentication", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate, v13);
  if (Strong)
  {
    v15 = Strong;
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderErrorDomain);
    v17 = v16;
    v18 = objc_allocWithZone((Class)NSError);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v20 = objc_msgSend(v18, "initWithDomain:code:userInfo:", v19, -1000, 0);

    sub_100164974((uint64_t)v20);
    Strong = swift_unknownObjectRelease(v15);
  }
  v21 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
  __chkstk_darwin(Strong);
  *(&v24 - 2) = a1;
  swift_retain(v21);
  os_unfair_lock_lock(v21 + 4);
  sub_10006A620(&v25);
  v22 = v25;
  os_unfair_lock_unlock(v21 + 4);
  result = swift_release(v21);
  if (v22 == 1)
    return sub_10032ED10();
  return result;
}

uint64_t sub_10032F49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  v12 = swift_allocObject(&unk_1005DE5B0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = (_QWORD *)swift_allocObject(&unk_1005DEEC0, 40, 7);
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100339474;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005DEED8;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain(a1);
  v15 = swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v15);
  v23 = _swiftEmptyArrayStorage;
  v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10006922C((uint64_t *)&unk_100647540);
  v18 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v5, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = v25;
  swift_release(v12);
  return swift_release(v19);
}

void sub_10032F6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  NSObject *v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;
  char v57[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v57, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v10);
  if (Strong)
  {
    v12 = (char *)Strong;
    v53 = v6;
    v13 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    v14 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    *(&v46 - 2) = (_QWORD *)__chkstk_darwin(Strong);
    swift_retain();
    os_unfair_lock_lock(v14 + 4);
    sub_10006A6B8(aBlock);
    v15 = aBlock[0];
    os_unfair_lock_unlock(v14 + 4);
    swift_release(v14);
    v16 = sub_100069C14(v15);
    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      v18 = Logger.Enumeration.unsafeMutableAddressor(v17);
      v19 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v53);
      v20 = v12;
      swift_bridgeObjectRetain_n(a2, 2);
      v21 = v20;
      v22 = Logger.logObject.getter(v21);
      v52 = static os_log_type_t.default.getter(v22);
      if (os_log_type_enabled(v22, (os_log_type_t)v52))
      {
        v50 = v22;
        v51 = v13;
        v46 = v16;
        v47 = a3;
        v23 = swift_slowAlloc(32, -1);
        v49 = swift_slowAlloc(64, -1);
        aBlock[0] = v49;
        *(_DWORD *)v23 = 136446722;
        v54 = sub_1000544FC(0xD00000000000002BLL, 0x8000000100528D50, aBlock);
        *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock).n128_u64[0];
        *(_WORD *)(v23 + 12) = 2080;
        v48 = v23 + 14;
        v25 = objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode], "displayName", v24);
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        v54 = sub_1000544FC(v26, v28, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
        swift_bridgeObjectRelease(v28);

        *(_WORD *)(v23 + 22) = 2048;
        if ((unint64_t)a2 >> 62)
        {
          if (a2 < 0)
            v45 = a2;
          else
            v45 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a2);
          v29 = _CocoaArrayWrapper.endIndex.getter(v45);
          swift_bridgeObjectRelease(a2);
        }
        else
        {
          v29 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v16 = v46;
        a3 = v47;
        swift_bridgeObjectRelease(a2);
        v54 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
        swift_bridgeObjectRelease(a2);
        v30 = v50;
        _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v52, "%{public}s: with DOCNode %s : %ld descriptors", (uint8_t *)v23, 0x20u);
        v31 = v49;
        swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v23, -1, -1);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v53);
        v13 = v51;
      }
      else
      {
        swift_bridgeObjectRelease_n(a2, 2);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
      }
      v32 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors];
      *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = a2;
      swift_bridgeObjectRetain(a2);
      swift_bridgeObjectRelease(v32);
      v33 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort];
      *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = a3;
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v33);
      v34 = (uint64_t)sub_100069A04();
      swift_bridgeObjectRelease(v16);
      if ((unint64_t)v34 >> 62)
      {
        if (v34 < 0)
          v43 = v34;
        else
          v43 = v34 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v34);
        v44 = sub_10006922C((uint64_t *)&unk_1006424B0);
        v36 = _bridgeCocoaArray<A>(_:)(v43, v44);
        swift_bridgeObjectRelease(v34);
      }
      else
      {
        v35 = swift_bridgeObjectRetain(v34);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
        v36 = v34;
      }
      swift_bridgeObjectRelease(v34);
      v37 = *(os_unfair_lock_s **)&v12[v13];
      swift_retain();
      os_unfair_lock_lock(v37 + 4);
      v38 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes];
      *(_QWORD *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = v36;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRelease(v38);
      os_unfair_lock_unlock(v37 + 4);
      swift_bridgeObjectRelease(v36);
      swift_release(v37);
      if ((sub_10006A52C() & 1) != 0)
      {
        v39 = swift_allocObject(&unk_1005DEF10, 24, 7);
        *(_QWORD *)(v39 + 16) = v21;
        aBlock[4] = (uint64_t)sub_100339480;
        v56 = v39;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10004A82C;
        aBlock[3] = (uint64_t)&unk_1005DEF28;
        v40 = _Block_copy(aBlock);
        v41 = v56;
        v42 = v21;
        swift_release(v41);
        DOCRunInMainThread(v40);
        _Block_release(v40);
      }
    }

  }
}

uint64_t sub_10032FC20(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = type metadata accessor for OSSignpostID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static os_signpost_type_t.event.getter(v4);
  v8 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  static OSSignpostID.exclusive.getter();
  v12 = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v7, &_mh_execute_header, v8, "Files-DOCFileSystemCollection", 29, 2, v6, "reorder data(forFileSystemCollectionShouldBeReloaded)", 53, v12, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate], v9);
  if (result)
  {
    v11 = result;
    sub_1000B0724(a1);
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

uint64_t sub_10032FD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  _BYTE v16[8];
  uint64_t v17;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  v7 = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    v8 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(v7);
    *(_QWORD *)&v16[-16] = v0;
    swift_retain(v8);
    os_unfair_lock_lock(v8 + 4);
    sub_10006A6B8(&v17);
    v1 = v17;
    os_unfair_lock_unlock(v8 + 4);
    result = swift_release(v8);
    if (!((unint64_t)v1 >> 62))
    {
      v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
        goto LABEL_4;
      return swift_bridgeObjectRelease(v1);
    }
  }
  else
  {
    __break(1u);
  }
  if (v1 < 0)
    v15 = v1;
  else
    v15 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v15);
  result = swift_bridgeObjectRelease(v1);
  if (!v10)
    return swift_bridgeObjectRelease(v1);
LABEL_4:
  if (v10 >= 1)
  {
    v11 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v1);
      }
      else
      {
        v13 = *(_QWORD *)(v1 + 8 * v11 + 32);
        swift_unknownObjectRetain(v13);
      }
      ++v11;
      ObjectType = swift_getObjectType(v13, v12);
      v16[4] = 1;
      DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(0x100000000, ObjectType);
      swift_unknownObjectRelease(v13);
    }
    while (v10 != v11);
    return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10032FF18(int a1)
{
  char *v1;
  char **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  char **v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(_QWORD, _QWORD);
  void (*v41)(_QWORD, _QWORD);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  int v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  void (*v56)(char *, char **);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unsigned int v69;
  BOOL v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  os_unfair_lock_s *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  NSObject *v79;
  char *v80;
  os_log_type_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  id v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  unint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  BOOL v130;
  __n128 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  os_unfair_lock_s *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint64_t v146;
  uint64_t v147;
  char **v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id *v153;
  uint64_t v154;
  id v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  char *v160;
  uint64_t v161;
  _BYTE *v162;
  char v163;
  char *v164;
  unsigned int v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  _BYTE *v169;
  unint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  char **v182;
  id *updated;
  void (*v184)(char *, char **);
  uint64_t v185;
  char *v186;
  int v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char **v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  void (*v197)(_QWORD, _QWORD);
  uint64_t v198;
  void (*v199)(char *, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t aBlock[5];
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v3 = (char **)type metadata accessor for OSSignpostID(0);
  v194 = (uint64_t)*(v3 - 1);
  __chkstk_darwin(v3);
  v193 = (char *)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v200 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v186 = (char *)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v190 = (char *)&v177 - v9;
  v10 = __chkstk_darwin(v8);
  v192 = (char **)((char *)&v177 - v11);
  v12 = __chkstk_darwin(v10);
  v189 = (char *)&v177 - v13;
  v14 = __chkstk_darwin(v12);
  v188 = (char *)&v177 - v15;
  v16 = __chkstk_darwin(v14);
  v191 = (char *)&v177 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v177 - v18;
  v20 = type metadata accessor for DispatchPredicate(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (uint64_t *)((char *)&v177 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  v25 = v24;
  v26 = _dispatchPreconditionTest(_:)(v23);
  v27 = (*(uint64_t (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v26 & 1) == 0)
    goto LABEL_68;
  v187 = a1;
  v28 = Logger.Enumeration.unsafeMutableAddressor(v27);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v200 + 16);
  v198 = v28;
  v199 = v29;
  ((void (*)(char *))v29)(v19);
  v30 = v1;
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc(22, -1);
    v197 = (void (*)(_QWORD, _QWORD))swift_slowAlloc(64, -1);
    aBlock[0] = (uint64_t)v197;
    *(_DWORD *)v33 = 136446466;
    v196 = v30;
    v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
    *(_WORD *)(v33 + 12) = 2080;
    v34 = v3;
    v35 = objc_msgSend(*(id *)&v196[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode], "displayName");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v195 = v5;
    v37 = v36;
    v39 = v38;

    v3 = v34;
    v203 = sub_1000544FC(v37, v39, aBlock);
    v30 = v196;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
    swift_bridgeObjectRelease(v39);

    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[DSEnumeration] %{public}s: DOCNode %s", (uint8_t *)v33, 0x16u);
    v40 = v197;
    swift_arrayDestroy(v197, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    v41 = *(void (**)(_QWORD, _QWORD))(v200 + 8);
    v42 = v19;
    v5 = v195;
  }
  else
  {

    v41 = *(void (**)(_QWORD, _QWORD))(v200 + 8);
    v42 = v19;
  }
  v197 = v41;
  v43 = ((uint64_t (*)(char *, uint64_t))v41)(v42, v5);
  v44 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  v45 = *(os_unfair_lock_s **)&v30[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
  __chkstk_darwin(v43);
  swift_retain(v45);
  os_unfair_lock_lock(v45 + 4);
  sub_10006A620(aBlock);
  v46 = LOBYTE(aBlock[0]);
  os_unfair_lock_unlock(v45 + 4);
  result = swift_release(v45);
  if (v46 == 1)
  {
    v48 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode;
    v49 = *(_QWORD *)&v30[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode];
    v50 = objc_opt_self(FINode);
    result = swift_dynamicCastObjCClass(v49, v50);
    if (result)
    {
      v51 = (void *)result;
      v181 = v48;
      v52 = swift_unknownObjectRetain(v49);
      v53 = static os_signpost_type_t.begin.getter(v52);
      updated = (id *)updateLogHandler.unsafeMutableAddressor();
      v54 = *updated;
      v55 = v193;
      static OSSignpostID.exclusive.getter();
      os_signpost(_:dso:log:name:signpostID:_:_:)(v53, &_mh_execute_header, v54, "Files-DOCFileSystemCollection-buildingNodes", 43, 2, v55, "Iterating, filtering, sorting", 29, 2, _swiftEmptyArrayStorage);

      v56 = *(void (**)(char *, char **))(v194 + 8);
      v56(v55, v3);
      v194 = (uint64_t)v51;
      v57 = (char *)sub_100338054(v51);
      v185 = v49;
      v184 = v56;
      if (v57)
      {
        v58 = v57;
        v180 = v44;
        v59 = v191;
        v199(v191, v198, v5);
        swift_unknownObjectRetain_n(v58, 3);
        v60 = v30;
        v61 = Logger.logObject.getter(v60);
        v62 = static os_log_type_t.info.getter();
        v195 = v5;
        v179 = v62;
        v63 = os_log_type_enabled(v61, v62);
        v186 = v58;
        v200 = (uint64_t)v60;
        v182 = v3;
        v196 = v30;
        if (v63)
        {
          v64 = swift_slowAlloc(32, -1);
          v178 = swift_slowAlloc(96, -1);
          aBlock[0] = v178;
          *(_DWORD *)v64 = 136446722;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          *(_WORD *)(v64 + 12) = 2080;
          v65 = objc_msgSend(*(id *)&v30[v181], "displayName");
          v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v68 = v67;

          v203 = sub_1000544FC(v66, v68, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_bridgeObjectRelease(v68);

          *(_WORD *)(v64 + 22) = 2080;
          v69 = objc_msgSend(v58, "fullyPopulated");
          v70 = v69 == 0;
          if (v69)
            v71 = 0;
          else
            v71 = 1953459744;
          if (v70)
            v72 = 0xE400000000000000;
          else
            v72 = 0xE000000000000000;
          v203 = sub_1000544FC(v71, v72, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_bridgeObjectRelease(v72);
          swift_unknownObjectRelease_n(v58, 2);
          _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v179, "[DSEnumeration] %{public}s: iterator for %s%s fully populated", (uint8_t *)v64, 0x20u);
          v73 = v178;
          swift_arrayDestroy(v178, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v73, -1, -1);
          swift_slowDealloc(v64, -1, -1);

          v74 = v191;
        }
        else
        {

          swift_unknownObjectRelease_n(v58, 2);
          v74 = v59;
        }
        v90 = v195;
        v197(v74, v195);
        v91 = v188;
        v92 = ((uint64_t (*)(char *, uint64_t, uint64_t))v199)(v188, v198, v90);
        v93 = Logger.logObject.getter(v92);
        v94 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = (uint8_t *)swift_slowAlloc(12, -1);
          v96 = swift_slowAlloc(32, -1);
          aBlock[0] = v96;
          *(_DWORD *)v95 = 136446210;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "[DSEnumeration] %{public}s: starting iteration", v95, 0xCu);
          swift_arrayDestroy(v96, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v96, -1, -1);
          swift_slowDealloc(v95, -1, -1);
        }

        v197(v91, v90);
        v3 = v192;
        v97 = v186;
        v21 = v200;
        v98 = v189;
        swift_unknownObjectRetain(v186);
        v99 = (unint64_t)sub_1003381F8((void *)v194, v97);
        swift_unknownObjectRelease(v97);
        v199(v98, v198, v90);
        v100 = swift_bridgeObjectRetain_n(v99, 2);
        v101 = Logger.logObject.getter(v100);
        v102 = static os_log_type_t.info.getter();
        v103 = os_log_type_enabled(v101, v102);
        v104 = v99 >> 62;
        v194 = v99;
        if (v103)
        {
          v105 = swift_slowAlloc(22, -1);
          v106 = swift_slowAlloc(32, -1);
          aBlock[0] = v106;
          *(_DWORD *)v105 = 136446466;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          *(_WORD *)(v105 + 12) = 2048;
          if (v104)
          {
            v107 = v194;
            if (v194 < 0)
              v174 = v194;
            else
              v174 = v194 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v194);
            v108 = _CocoaArrayWrapper.endIndex.getter(v174);
            swift_bridgeObjectRelease(v107);
          }
          else
          {
            v107 = v194;
            v108 = *(_QWORD *)((v194 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v21 = v200;
          swift_bridgeObjectRelease(v107);
          v203 = v108;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_bridgeObjectRelease(v107);
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "[DSEnumeration] %{public}s: iteratedNodes count = %ld", (uint8_t *)v105, 0x16u);
          swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v106, -1, -1);
          swift_slowDealloc(v105, -1, -1);

          v109 = v98;
          v110 = v195;
        }
        else
        {
          swift_bridgeObjectRelease_n(v99, 2);

          v109 = v98;
          v110 = v90;
        }
        v197(v109, v110);
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        if (v104)
          goto LABEL_69;
        v111 = v194;
        v112 = *(_QWORD *)((v194 & 0xFFFFFFFFFFFFF8) + 0x10);
        v113 = (id)v21;
LABEL_28:
        if (v112)
        {
          v114 = 0;
          v115 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate;
          v116 = v111 & 0xC000000000000001;
          v117 = v111 & 0xFFFFFFFFFFFFFF8;
          v3 = &selRef_setAccessibilityValue_;
          while (1)
          {
            if (v116)
            {
              v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v114, v111);
            }
            else
            {
              if (v114 >= *(_QWORD *)(v117 + 16))
              {
                __break(1u);
LABEL_67:
                __break(1u);
LABEL_68:
                __break(1u);
LABEL_69:
                v111 = v194;
                if (v194 < 0)
                  v170 = v194;
                else
                  v170 = v194 & 0xFFFFFFFFFFFFFF8;
                v171 = (id)v21;
                v112 = _CocoaArrayWrapper.endIndex.getter(v170);
                goto LABEL_28;
              }
              v118 = *(id *)(v111 + 8 * v114 + 32);
            }
            v119 = v118;
            v120 = v114 + 1;
            if (__OFADD__(v114, 1))
              goto LABEL_67;
            if (objc_msgSend(v118, "propertyAsBool:", 1987273324)
              && ((v121 = *(id *)(v21 + v115)) == 0
               || (v121 = objc_msgSend(v121, "evaluateWithObject:", v119), (v121 & 1) != 0)))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v121);
              v122 = *(_QWORD *)(aBlock[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v122);
              v123 = v122;
              v21 = v200;
              v124 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v119);
              specialized ContiguousArray._endMutation()(v124);
              v111 = v194;
            }
            else
            {

            }
            ++v114;
            if (v120 == v112)
            {
              v125 = aBlock[0];
              v3 = v192;
              goto LABEL_43;
            }
          }
        }
        v125 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_43:

        swift_bridgeObjectRelease(v111);
        v126 = v195;
        v199((char *)v3, v198, v195);
        v127 = swift_bridgeObjectRetain_n(v125, 2);
        v128 = Logger.logObject.getter(v127);
        v129 = static os_log_type_t.info.getter();
        v130 = os_log_type_enabled(v128, v129);
        v132 = v187;
        if (v130)
        {
          v133 = swift_slowAlloc(22, -1);
          v134 = swift_slowAlloc(32, -1);
          aBlock[0] = v134;
          *(_DWORD *)v133 = 136446466;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          *(_WORD *)(v133 + 12) = 2048;
          if (v125 < 0 || (v125 & 0x4000000000000000) != 0)
          {
            v175 = swift_bridgeObjectRetain(v125);
            v135 = _CocoaArrayWrapper.endIndex.getter(v175);
            swift_release(v125);
          }
          else
          {
            v135 = *(_QWORD *)(v125 + 16);
          }
          swift_release(v125);
          v203 = v135;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_release(v125);
          _os_log_impl((void *)&_mh_execute_header, v128, v129, "[DSEnumeration] %{public}s: filteredNodes count = %ld", (uint8_t *)v133, 0x16u);
          swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v134, -1, -1);
          swift_slowDealloc(v133, -1, -1);

          v197(v3, v126);
          v21 = v200;
        }
        else
        {
          swift_release_n(v125, 2, v131);

          v197(v3, v126);
        }
        v136 = (uint64_t)sub_100069A04();
        swift_release(v125);
        if ((unint64_t)v136 >> 62)
        {
          if (v136 < 0)
            v172 = v136;
          else
            v172 = v136 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v136);
          v173 = sub_10006922C((uint64_t *)&unk_1006424B0);
          v138 = _bridgeCocoaArray<A>(_:)(v172, v173);
          swift_bridgeObjectRelease(v136);
        }
        else
        {
          v137 = swift_bridgeObjectRetain(v136);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v137);
          v138 = v136;
        }
        v139 = *(os_unfair_lock_s **)&v196[v180];
        swift_retain(v139);
        os_unfair_lock_lock(v139 + 4);
        v140 = v21;
        v141 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes);
        *(_QWORD *)(v140 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes) = v138;
        swift_bridgeObjectRetain(v138);
        swift_bridgeObjectRelease(v141);
        os_unfair_lock_unlock(v139 + 4);
        swift_bridgeObjectRelease(v138);
        swift_release(v139);
        v142 = v190;
        v199(v190, v198, v126);
        v143 = swift_bridgeObjectRetain(v136);
        v144 = Logger.logObject.getter(v143);
        v145 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v144, v145))
        {
          v146 = swift_slowAlloc(22, -1);
          v147 = swift_slowAlloc(32, -1);
          aBlock[0] = v147;
          *(_DWORD *)v146 = 136446466;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          *(_WORD *)(v146 + 12) = 2048;
          v148 = v182;
          if ((unint64_t)v136 >> 62)
          {
            if (v136 < 0)
              v157 = v136;
            else
              v157 = v136 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v136);
            v149 = _CocoaArrayWrapper.endIndex.getter(v157);
            swift_bridgeObjectRelease(v136);
          }
          else
          {
            v149 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v151 = v185;
          swift_bridgeObjectRelease(v136);
          v203 = v149;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_bridgeObjectRelease(v136);
          _os_log_impl((void *)&_mh_execute_header, v144, v145, "[DSEnumeration] %{public}s: sorted nodes count = %ld", (uint8_t *)v146, 0x16u);
          swift_arrayDestroy(v147, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v147, -1, -1);
          swift_slowDealloc(v146, -1, -1);

          v150 = ((uint64_t (*)(char *, uint64_t))v197)(v190, v126);
        }
        else
        {
          swift_bridgeObjectRelease_n(v136, 2);

          v150 = ((uint64_t (*)(char *, uint64_t))v197)(v142, v126);
          v148 = v182;
          v151 = v185;
        }
        v158 = static os_signpost_type_t.end.getter(v150);
        v159 = *updated;
        v160 = v193;
        static OSSignpostID.exclusive.getter();
        LOBYTE(v176) = 2;
        os_signpost(_:dso:log:name:signpostID:_:_:)(v158, &_mh_execute_header, v159, "Files-DOCFileSystemCollection-buildingNodes", 43, 2, v160, "Iterating, filtering, sorting", 29, v176, _swiftEmptyArrayStorage);

        v184(v160, v148);
        if ((v132 & 1) != 0)
          sub_10032FD38();
        v161 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated;
        v162 = (_BYTE *)v200;
        v163 = *(_BYTE *)(v200 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated);
        v164 = v186;
        v165 = objc_msgSend(v186, "fullyPopulated");
        v162[v161] = v165;
        objc_msgSend(v162, "setIsGathering:", v165 ^ 1);
        v166 = swift_allocObject(&unk_1005DE8F8, 25, 7);
        *(_QWORD *)(v166 + 16) = v162;
        *(_BYTE *)(v166 + 24) = v163;
        aBlock[4] = (uint64_t)sub_10033916C;
        v202 = v166;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10004A82C;
        aBlock[3] = (uint64_t)&unk_1005DE910;
        v167 = _Block_copy(aBlock);
        v168 = v202;
        v169 = v162;
        swift_release(v168);
        DOCRunInMainThread(v167);
        _Block_release(v167);
        swift_unknownObjectRelease_n(v164, 2);
        return swift_unknownObjectRelease(v151);
      }
      else
      {
        v75 = *(os_unfair_lock_s **)&v30[v44];
        swift_retain(v75);
        os_unfair_lock_lock(v75 + 4);
        v76 = *(_QWORD *)&v30[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes];
        *(_QWORD *)&v30[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        swift_bridgeObjectRelease(v76);
        os_unfair_lock_unlock(v75 + 4);
        swift_release(v75);
        v30[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 1;
        objc_msgSend(v30, "setIsGathering:", 0);
        v77 = v186;
        v199(v186, v198, v5);
        v78 = v30;
        v79 = Logger.logObject.getter(v78);
        v80 = v30;
        v81 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v79, v81))
        {
          v82 = swift_slowAlloc(22, -1);
          v200 = swift_slowAlloc(64, -1);
          aBlock[0] = v200;
          *(_DWORD *)v82 = 136446466;
          v203 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, aBlock);
          v182 = v3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          *(_WORD *)(v82 + 12) = 2080;
          v83 = objc_msgSend(*(id *)&v80[v181], "displayName");
          v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
          v195 = v5;
          v86 = v85;

          v203 = sub_1000544FC(v84, v86, aBlock);
          v3 = v182;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
          swift_bridgeObjectRelease(v86);

          _os_log_impl((void *)&_mh_execute_header, v79, v81, "[DSEnumeration] %{public}s: %s does not support iteration. Is it a file?", (uint8_t *)v82, 0x16u);
          v87 = v200;
          swift_arrayDestroy(v200, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v87, -1, -1);
          swift_slowDealloc(v82, -1, -1);

          v88 = v186;
          v89 = v195;
        }
        else
        {

          v88 = v77;
          v89 = v5;
        }
        v152 = ((uint64_t (*)(char *, uint64_t))v197)(v88, v89);
        v153 = updated;
        v154 = static os_signpost_type_t.end.getter(v152);
        v155 = *v153;
        v156 = v193;
        static OSSignpostID.exclusive.getter();
        LOBYTE(v176) = 2;
        os_signpost(_:dso:log:name:signpostID:_:_:)(v154, &_mh_execute_header, v155, "Files-DOCFileSystemCollection-buildingNodes", 43, 2, v156, "Iterating, filtering, sorting -- node does not support enumeration.", 67, v176, _swiftEmptyArrayStorage);
        swift_unknownObjectRelease(v185);

        return ((uint64_t (*)(char *, char **))v184)(v156, v3);
      }
    }
  }
  return result;
}

uint64_t sub_100331400(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t v61;
  id *updated;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  LODWORD(v69) = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v66 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)v59 - v7;
  v9 = type metadata accessor for OSSignpostID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static os_signpost_type_t.event.getter(v11);
  updated = (id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v15 = *updated;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v14, &_mh_execute_header, v15, "Files-DOCFileSystemCollection", 29, 2, v13, "refresh node data(forFileSystemCollectionShouldBeReloaded)", 58, 2, _swiftEmptyArrayStorage);

  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v64 = v13;
  v65 = v9;
  v63 = v16;
  v17 = ((uint64_t (*)(char *, uint64_t))v16)(v13, v9);
  v18 = Logger.Enumeration.unsafeMutableAddressor(v17);
  v68 = v4;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v8, v18, v3);
  v20 = a1;
  v67 = v8;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v60 = swift_slowAlloc(64, -1);
    v71 = v60;
    *(_DWORD *)v23 = 136446466;
    v70 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, &v71);
    v61 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
    *(_WORD *)(v23 + 12) = 2080;
    v59[1] = v23 + 14;
    v24 = v3;
    v25 = objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode], "displayName");
    v26 = v19;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    v3 = v24;
    v30 = v27;
    v19 = v26;
    v70 = sub_1000544FC(v30, v29, &v71);
    v18 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);

    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[DSEnumeration] %{public}s: DOCNode %s : data(forFileSystemCollectionShouldBeReloaded:)", (uint8_t *)v23, 0x16u);
    v31 = v60;
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    v32 = *(void (**)(char *, uint64_t))(v68 + 8);
    v32(v67, v24);
  }
  else
  {

    v32 = *(void (**)(char *, uint64_t))(v68 + 8);
    v32(v67, v3);
  }
  v34 = &v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate];
  result = swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate], v33);
  if (result)
  {
    v36 = result;
    sub_1000B0724(v20);
    result = swift_unknownObjectRelease(v36);
  }
  if ((v69 & 1) == 0 && v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] == 1)
  {
    v37 = v66;
    v19(v66, v18, v3);
    v38 = v20;
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.info.getter();
    v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = swift_slowAlloc(22, -1);
      v69 = swift_slowAlloc(64, -1);
      v71 = v69;
      *(_DWORD *)v42 = 136446466;
      LODWORD(v68) = v41;
      v70 = sub_1000544FC(0xD000000000000021, 0x8000000100528B60, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
      *(_WORD *)(v42 + 12) = 2080;
      v43 = objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode], "displayName");
      v67 = (char *)v3;
      v44 = v43;
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v39;
      v48 = v47;

      v70 = sub_1000544FC(v45, v48, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);

      swift_bridgeObjectRelease(v48);
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v68, "[DSEnumeration] %{public}s: DOCNode %s : calling fileSystemCollectionDidFinishGathering", (uint8_t *)v42, 0x16u);
      v49 = v69;
      swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      v50 = v66;
      v51 = (uint64_t)v67;
    }
    else
    {

      v50 = v37;
      v51 = v3;
    }
    v52 = ((uint64_t (*)(char *, uint64_t))v32)(v50, v51);
    v53 = static os_signpost_type_t.event.getter(v52);
    v54 = *updated;
    v55 = v64;
    static OSSignpostID.exclusive.getter();
    LOBYTE(v58) = 2;
    os_signpost(_:dso:log:name:signpostID:_:_:)(v53, &_mh_execute_header, v54, "Files-DOCFileSystemCollection", 29, 2, v55, "refresh node didFinishGathering", 31, v58, _swiftEmptyArrayStorage);

    v63(v55, v65);
    result = swift_unknownObjectWeakLoadStrong(v34, v56);
    if (result)
    {
      v57 = result;
      sub_1000B0F28();
      return swift_unknownObjectRelease(v57);
    }
  }
  return result;
}

uint64_t sub_100331A00(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_10006922C(&qword_100643470);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v5);
  v10 = (char *)&v15 - v9;
  if ((a1 & 1) != 0)
  {
    v11 = objc_msgSend(a2, "fileURL");
    if (v11)
    {
      v12 = v11;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    }
    else
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
    }
    sub_1000B34E4((uint64_t)v7, (uint64_t)v10);
    type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
    {
      return sub_10000CB4C((uint64_t)v10, &qword_100643470);
    }
    else
    {
      URL.stopAccessingSecurityScopedResource()();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
  }
  return result;
}

id sub_100331B7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileSystemCollection(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100331CF8()
{
  return type metadata accessor for DOCFileSystemCollection(0);
}

uint64_t sub_100331D00(void *a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  id v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode;
  v13 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode];
  v14 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
  v15 = swift_unknownObjectRetain(v13);
  v16 = DOCNode.isEqualTo(node:)(v15, v14);
  swift_unknownObjectRelease(v13);
  if ((v16 & 1) == 0)
  {
    v42 = a2;
    v18 = Logger.Enumeration.unsafeMutableAddressor(v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
    swift_bridgeObjectRetain_n(a3, 2);
    v19 = v4;
    v20 = a1;
    v21 = v19;
    v22 = v8;
    v23 = v20;
    v24 = Logger.logObject.getter(v23);
    v43 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, (os_log_type_t)v43))
    {
      v38 = v21;
      v40 = v24;
      v41 = v22;
      v25 = swift_slowAlloc(32, -1);
      v37 = (uint64_t *)swift_slowAlloc(16, -1);
      v39 = swift_slowAlloc(32, -1);
      v45 = v39;
      *(_DWORD *)v25 = 136446722;
      swift_bridgeObjectRetain(a3);
      v44 = sub_1000544FC(v42, a3, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v25 + 12) = 2114;
      v26 = *(_QWORD *)&v4[v12];
      v27 = objc_opt_self(FINode);
      v28 = swift_dynamicCastObjCClass(v26, v27);
      v29 = v28;
      if (v28)
      {
        v44 = v28;
        swift_unknownObjectRetain(v26);
      }
      else
      {
        v44 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      v31 = v37;
      v30 = v38;
      *v37 = v29;

      *(_WORD *)(v25 + 22) = 2114;
      v44 = (uint64_t)v23;
      v32 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      v31[1] = (uint64_t)v23;

      v33 = v40;
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v43, "[DSEnumeration] %{public}s: Received notification for node not being observed.\n\tExpected: %{public}@\n\tReceived: %{public}@", (uint8_t *)v25, 0x20u);
      v34 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v31, 2, v34);
      swift_slowDealloc(v31, -1, -1);
      v35 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
    }
  }
  return v16 & 1;
}

double sub_100332098(void *a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a2, 0xD000000000000016, 0x8000000100528AA0) & 1) != 0)
  {
    v27 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v16 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16);
    v17 = swift_allocObject(&unk_1005DE8A8, 40, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_DWORD *)(v17 + 24) = a3;
    *(_QWORD *)(v17 + 32) = a1;
    aBlock[4] = sub_100339138;
    v30 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE8C0;
    v18 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter(a1);
    v28 = _swiftEmptyArrayStorage;
    v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_10006922C((uint64_t *)&unk_100647540);
    v26 = v11;
    v21 = v8;
    v22 = v20;
    v23 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v22, v23, v7, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v10, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
    v24 = v30;
    swift_release(v16);
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  return result;
}

void sub_1003322F8(uint64_t a1, Swift::UInt32 a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  char *v29;
  NSObject *v30;
  __n128 v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  double v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  Swift::UInt32 v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  __n128 v64;
  unint64_t v65;
  char v66;
  char v67;
  void *v68;
  uint64_t v69;
  id v70;
  BOOL v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_unfair_lock_s *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  NSObject *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  Swift::UInt32 v92;
  char v93[40];
  uint64_t v94[3];
  Swift::Int v95;
  _QWORD *v96;
  char v97[32];

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v97, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v15 = (char *)Strong;
    v89 = v9;
    v90 = v7;
    v91 = v6;
    v92 = a2;
    v16 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    v17 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(&v81 - 2) = v18;
    swift_retain();
    os_unfair_lock_lock(v17 + 4);
    sub_10006A620(v94);
    v19 = LOBYTE(v94[0]);
    os_unfair_lock_unlock(v17 + 4);
    swift_release(v17);
    if (v19 != 1)
      goto LABEL_6;
    v88 = v16;
    v21 = *(os_unfair_lock_s **)&v15[v16];
    __chkstk_darwin(v20);
    *(&v81 - 2) = (uint64_t)v15;
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_10006A6B8(v94);
    v22 = v94[0];
    os_unfair_lock_unlock(v21 + 4);
    swift_release(v21);
    v23 = sub_100069C14(v22);
    swift_bridgeObjectRelease(v22);
    if (!v23)
    {
LABEL_6:

      return;
    }
    v96 = v23;
    swift_bridgeObjectRetain(v23);
    v25 = Logger.Enumeration.unsafeMutableAddressor(v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
    v26 = a3;
    v27 = v15;
    v28 = v26;
    v29 = v27;
    v30 = Logger.logObject.getter(v29);
    v32 = static os_log_type_t.info.getter(v31);
    v33 = v32;
    v87 = v30;
    if (os_log_type_enabled(v30, v32))
    {
      v34 = swift_slowAlloc(42, -1);
      v83 = v33;
      v35 = v34;
      v84 = swift_slowAlloc(128, -1);
      v94[0] = v84;
      *(_DWORD *)v35 = 136446978;
      v86 = v29;
      v95 = sub_1000544FC(0xD000000000000016, 0x8000000100528AA0, v94);
      v82 = &v96;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);
      *(_WORD *)(v35 + 12) = 2082;
      v81 = v35 + 14;
      v36 = (void *)objc_opt_self(FINodeObserver);
      v37 = objc_msgSend(v36, "propertyName:", v92);
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v85 = v23;
      v39 = v28;
      v40 = v38;
      v42 = v41;

      v95 = sub_1000544FC(v40, v42, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);
      *(_QWORD *)&v43 = swift_bridgeObjectRelease(v42).n128_u64[0];
      *(_WORD *)(v35 + 22) = 2080;
      v44 = objc_msgSend(v39, "displayName", v43);
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

      v95 = sub_1000544FC(v45, v47, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v82);
      swift_bridgeObjectRelease(v47);

      *(_WORD *)(v35 + 32) = 2080;
      v82 = (_QWORD *)(v35 + 34);
      v48 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v48, v93);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v39;
      v95 = inited;
      specialized Array._endMutation()(inited);
      v50 = v95;
      v51 = v39;
      v52 = sub_100338428(v50);
      v54 = v53;
      swift_bridgeObjectRelease(v50);
      v55 = v52;
      v29 = v86;
      v95 = sub_1000544FC(v55, v54, v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);
      swift_bridgeObjectRelease(v54);

      v28 = v39;
      v23 = v85;
      v56 = v87;
      _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v83, "[DSEnumeration] %{public}s: Property %{public}s changed on %s%s", (uint8_t *)v35, 0x2Au);
      v57 = v84;
      swift_arrayDestroy(v84, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      v58 = v10;
      v59 = v92;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v59 = v92;
    }
    v61 = v89;
    v60 = v90;
    v62 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    LOBYTE(v94[0]) = 0;
    DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(v59, v62);
    if (objc_msgSend(v28, "propertyAsBool:", 1987273324)
      && ((v63 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate]) == 0
       || (objc_msgSend(v63, "evaluateWithObject:", v28) & 1) != 0))
    {
      v64 = swift_bridgeObjectRelease(v23);
    }
    else
    {
      v65 = sub_100174730((uint64_t)v28, (uint64_t)v23);
      v67 = v66;
      v64 = swift_bridgeObjectRelease(v23);
      if ((v67 & 1) == 0)

    }
    v68 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
    *v61 = v68;
    v69 = v91;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v60 + 104))(v61, enum case for DispatchPredicate.onQueue(_:), v91, v64);
    v70 = v68;
    LOBYTE(v68) = _dispatchPreconditionTest(_:)(v61);
    (*(void (**)(_QWORD *, uint64_t))(v60 + 8))(v61, v69);
    if ((v68 & 1) != 0)
    {
      v71 = sub_100477D30(v59, *(_QWORD *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort]);
      v72 = v96;
      if (!v71)
      {
        swift_bridgeObjectRelease(v96);
        goto LABEL_20;
      }
      v69 = (uint64_t)sub_100069A04();
      swift_bridgeObjectRelease(v72);
      if (!((unint64_t)v69 >> 62))
      {
        swift_bridgeObjectRetain(v69);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v73);
        v74 = v69;
LABEL_18:
        v75 = v88;
        swift_bridgeObjectRelease(v69);
        v76 = *(os_unfair_lock_s **)&v15[v75];
        swift_retain();
        os_unfair_lock_lock(v76 + 4);
        v77 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes];
        *(_QWORD *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = v74;
        swift_bridgeObjectRetain(v74);
        swift_bridgeObjectRelease(v77);
        os_unfair_lock_unlock(v76 + 4);
        swift_bridgeObjectRelease(v74);
        swift_release(v76);
LABEL_20:
        swift_beginAccess(&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates], v94, 33, 0);
        sub_100069C20(&v95, v28);
        v78 = (void *)v95;
        swift_endAccess(v94);

        sub_100069EDC();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    if (v69 < 0)
      v79 = v69;
    else
      v79 = v69 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v69);
    v80 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v74 = _bridgeCocoaArray<A>(_:)(v79, v80);
    swift_bridgeObjectRelease(v69);
    goto LABEL_18;
  }
}

double sub_100332B14(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a1, 0x286465676E616863, 0xEF293A726F663A5FLL) & 1) != 0)
  {
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v14 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    v23 = v6;
    v15 = v14;
    swift_unknownObjectWeakInit(v14 + 16);
    v16 = swift_allocObject(&unk_1005DE808, 36, 7);
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = a1;
    *(_DWORD *)(v16 + 32) = a2;
    aBlock[4] = sub_1003390C8;
    v27 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE820;
    v17 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter(a1);
    v25 = _swiftEmptyArrayStorage;
    v18 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v19 = sub_10006922C((uint64_t *)&unk_100647540);
    v20 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v19, v20, v5, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v21 = v27;
    swift_release(v15);
    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

void sub_100332D74(uint64_t a1, void *a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  void *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  __n128 v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  double v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  _BYTE v54[4];
  int v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unsigned int v60;
  char v61[40];
  uint64_t v62;
  uint64_t aBlock[5];
  uint64_t v64;
  char v65[32];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v65, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(_QWORD *)&v54[-16] = v13;
    swift_retain();
    os_unfair_lock_lock(v12 + 4);
    sub_10006A620(aBlock);
    v14 = LOBYTE(aBlock[0]);
    os_unfair_lock_unlock(v12 + 4);
    swift_release(v12);
    if (v14 == 1)
    {
      v15 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      LOBYTE(aBlock[0]) = 0;
      v16 = DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(a3, v15);
      v17 = Logger.Enumeration.unsafeMutableAddressor(v16);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
      v18 = a2;
      v19 = v11;
      v20 = v18;
      v21 = v19;
      v22 = Logger.logObject.getter(v21);
      v24 = static os_log_type_t.info.getter(v23);
      v25 = v24;
      if (os_log_type_enabled(v22, v24))
      {
        v26 = swift_slowAlloc(42, -1);
        v60 = a3;
        v27 = v26;
        v57 = swift_slowAlloc(128, -1);
        aBlock[0] = v57;
        *(_DWORD *)v27 = 136446978;
        v58 = v6;
        v62 = sub_1000544FC(0x286465676E616863, 0xEF293A726F663A5FLL, aBlock);
        v56 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, aBlock);
        *(_WORD *)(v27 + 12) = 2082;
        v28 = (void *)objc_opt_self(FINodeObserver);
        v29 = objc_msgSend(v28, "propertyName:", v60);
        v55 = v25;
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v59 = v21;
        v33 = v32;

        v62 = sub_1000544FC(v31, v33, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, aBlock);
        *(_QWORD *)&v34 = swift_bridgeObjectRelease(v33).n128_u64[0];
        *(_WORD *)(v27 + 22) = 2080;
        v35 = objc_msgSend(v20, "displayName", v34);
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v38 = v37;

        v62 = sub_1000544FC(v36, v38, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, aBlock);

        swift_bridgeObjectRelease(v38);
        *(_WORD *)(v27 + 32) = 2080;
        v39 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v39, v61);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v20;
        v62 = inited;
        specialized Array._endMutation()(inited);
        v41 = v62;
        v42 = v20;
        v43 = sub_100338428(v41);
        v45 = v44;
        swift_bridgeObjectRelease(v41);
        v62 = sub_1000544FC(v43, v45, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, aBlock);

        v21 = v59;
        swift_bridgeObjectRelease(v45);
        v46 = v56;
        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v55, "[DSEnumeration] %{public}s: Property %{public}s change on %s%s", (uint8_t *)v27, 0x2Au);
        v47 = v57;
        swift_arrayDestroy(v57, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        v48 = v27;
        a3 = v60;
        swift_slowDealloc(v48, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v58);
      }
      else
      {

        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      }
      v49 = swift_allocObject(&unk_1005DE858, 40, 7);
      *(_DWORD *)(v49 + 16) = a3;
      *(_QWORD *)(v49 + 24) = v20;
      *(_QWORD *)(v49 + 32) = v21;
      aBlock[4] = (uint64_t)sub_100339100;
      v64 = v49;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005DE870;
      v50 = _Block_copy(aBlock);
      v51 = v64;
      v52 = v20;
      v53 = v21;
      swift_release(v51);
      DOCRunInMainThread(v50);
      _Block_release(v50);
    }

  }
}

double sub_100333270(int a1, id a2, char *a3)
{
  id v5;
  double result;
  uint64_t Strong;
  uint64_t v8;
  id v9;
  os_unfair_lock_s *v10;
  int v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;

  if (a1 == 1969385844 && (v5 = objc_msgSend(a2, "enumeratorError")) != 0)
  {
    v14 = v5;
    Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate]);
    if (Strong)
    {
      v8 = Strong;
      sub_100164974((uint64_t)v14);
      swift_unknownObjectRelease(v8);
    }
    sub_10032ED10();

  }
  else if (a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] != 2)
  {
    v9 = objc_msgSend(a3, "isGathering");
    if ((v9 & 1) == 0)
    {
      v10 = *(os_unfair_lock_s **)&a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
      __chkstk_darwin(v9);
      swift_retain();
      os_unfair_lock_lock(v10 + 4);
      sub_10006A620(&v15);
      v11 = v15;
      os_unfair_lock_unlock(v10 + 4);
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
      if (v11 == 1)
      {
        v12 = (void *)swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate]);
        if (v12)
        {
          v13 = v12;
          sub_100338814(a2, v12);
          *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
        }
      }
    }
  }
  return result;
}

double sub_100333454(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a2, 0xD000000000000013, 0x8000000100528A50) & 1) != 0)
  {
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v14 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    v15 = swift_allocObject(&unk_1005DE7B8, 32, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = a1;
    aBlock[4] = sub_1003390B8;
    v28 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE7D0;
    v16 = _Block_copy(aBlock);
    v24 = v6;
    v17 = v16;
    swift_retain();
    swift_bridgeObjectRetain(a1);
    static DispatchQoS.unspecified.getter(v18);
    v26 = _swiftEmptyArrayStorage;
    v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_10006922C((uint64_t *)&unk_100647540);
    v21 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v5, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v22 = v28;
    swift_release(v14);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

void sub_1003336AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  char **v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, void *, __n128);
  unint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  __n128 v28;
  unint64_t v29;
  BOOL v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  Class v43;
  id v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t i;
  uint64_t v54;
  id v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  os_unfair_lock_s *v69;
  uint64_t v70;
  __n128 v71;
  unint64_t v72;
  uint64_t v73;
  NSObject *v74;
  __n128 v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, unint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t, void *, __n128);
  char **v91;
  void *v92;
  char *v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98[3];
  unint64_t v99;
  char v100[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (uint64_t)&v87 - v9;
  a1 += 16;
  swift_beginAccess(a1, v100, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (void *)Strong;
    v95 = a2;
    v13 = (char **)OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    v14 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(&v87 - 2) = v15;
    swift_retain();
    os_unfair_lock_lock(v14 + 4);
    sub_10006A620(v98);
    v16 = LOBYTE(v98[0]);
    os_unfair_lock_unlock(v14 + 4);
    swift_release(v14);
    if (v16 != 1)
      goto LABEL_9;
    v18 = *(os_unfair_lock_s **)((char *)v13 + (_QWORD)v12);
    __chkstk_darwin(v17);
    *(&v87 - 2) = (uint64_t)v12;
    swift_retain();
    os_unfair_lock_lock(v18 + 4);
    sub_10006A6B8(v98);
    v19 = v98[0];
    os_unfair_lock_unlock(v18 + 4);
    swift_release(v18);
    v20 = sub_100069C14(v19);
    swift_bridgeObjectRelease(v19);
    if (v20)
    {
      v93 = v7;
      v99 = (unint64_t)v20;
      v22 = Logger.Enumeration.unsafeMutableAddressor(v21);
      v23 = *(void (**)(char *, uint64_t, void *, __n128))(v5 + 16);
      v89 = v22;
      v90 = v23;
      ((void (*)(uint64_t))v23)(v10);
      v24 = v95;
      swift_bridgeObjectRetain_n(v95, 4);
      v92 = v12;
      v25 = v12;
      v26 = v24;
      v27 = Logger.logObject.getter(v25);
      LODWORD(v29) = static os_log_type_t.info.getter(v28);
      v30 = os_log_type_enabled(v27, (os_log_type_t)v29);
      v31 = (void *)(v24 >> 62);
      v96 = v25;
      v91 = v13;
      if (!v30)
      {
        swift_bridgeObjectRelease_n(v26, 4);

        v88 = *(void (**)(uint64_t, unint64_t))(v5 + 8);
        v88(v10, v4);
        goto LABEL_16;
      }
      v13 = (char **)swift_slowAlloc(32, -1);
      v87 = swift_slowAlloc(64, -1);
      v98[0] = v87;
      *(_DWORD *)v13 = 136446722;
      v97 = sub_1000544FC(0xD000000000000013, 0x8000000100528A50, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
      *((_WORD *)v13 + 6) = 2048;
      if (v31)
        goto LABEL_70;
      v32 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        swift_bridgeObjectRelease(v26);
        v97 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
        swift_bridgeObjectRelease(v26);
        *((_WORD *)v13 + 11) = 2080;
        v94 = v31;
        LODWORD(v88) = v29;
        if (v31)
        {
          if (v26 < 0)
            v36 = v26;
          else
            v36 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v26);
          v37 = sub_10006922C((uint64_t *)&unk_1006424B0);
          v35 = _bridgeCocoaArray<A>(_:)(v36, v37);
          swift_bridgeObjectRelease(v26);
          v33 = v26;
        }
        else
        {
          v33 = v26;
          swift_bridgeObjectRetain(v26);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v34);
          v35 = v26;
        }
        v38 = sub_100338428(v35);
        v29 = v39;
        swift_bridgeObjectRelease(v35);
        v97 = sub_1000544FC(v38, v29, v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
        swift_bridgeObjectRelease(v29);
        v25 = v96;

        swift_bridgeObjectRelease_n(v33, 2);
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v88, "[DSEnumeration] %{public}s: added %ld nodes%s", (uint8_t *)v13, 0x20u);
        v40 = v87;
        swift_arrayDestroy(v87, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v13, -1, -1);

        v88 = *(void (**)(uint64_t, unint64_t))(v5 + 8);
        v88(v10, v4);
        v26 = v33;
        v31 = v94;
LABEL_16:
        v98[0] = (uint64_t)_swiftEmptyArrayStorage;
        if (v31)
          goto LABEL_33;
        v41 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v26);
        v42 = v25;
        v94 = (void *)v4;
        if (v41)
        {
LABEL_18:
          v43 = 0;
          v29 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate;
          v4 = v26 & 0xC000000000000001;
          v27 = (v26 & 0xFFFFFFFFFFFFFF8);
          v13 = &selRef_setAccessibilityValue_;
          while (1)
          {
            if (v4)
            {
              v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v26);
            }
            else
            {
              if (v43 >= v27[2].isa)
              {
                __break(1u);
LABEL_32:
                __break(1u);
LABEL_33:
                if (v26 < 0)
                  v50 = v26;
                else
                  v50 = v26 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v26);
                v51 = v96;
                v52 = v50;
                v25 = v96;
                v41 = _CocoaArrayWrapper.endIndex.getter(v52);
                v94 = (void *)v4;
                if (!v41)
                  break;
                goto LABEL_18;
              }
              v44 = *(id *)(v26 + 8 * (_QWORD)v43 + 32);
            }
            v31 = v44;
            v45 = (char *)v43 + 1;
            if (__OFADD__(v43, 1))
              goto LABEL_32;
            if (objc_msgSend(v44, "propertyAsBool:", 1987273324)
              && ((v46 = *(id *)&v25[v29]) == 0
               || (v46 = objc_msgSend(v46, "evaluateWithObject:", v31), (v46 & 1) != 0)))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v46);
              v47 = *(_QWORD *)(v98[0] + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v47);
              v48 = v47;
              v25 = v96;
              v49 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v31);
              specialized ContiguousArray._endMutation()(v49);
              v26 = v95;
            }
            else
            {

            }
            v43 = (Class)((char *)v43 + 1);
            if (v45 == (char *)v41)
            {
              v10 = v98[0];
              goto LABEL_38;
            }
          }
        }
        v10 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_38:

        swift_bridgeObjectRelease(v26);
        if (v10 < 0 || (v10 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain(v10);
          v5 = _CocoaArrayWrapper.endIndex.getter(v63);
          if (!v5)
            goto LABEL_52;
        }
        else
        {
          v5 = *(_QWORD *)(v10 + 16);
          swift_bridgeObjectRetain(v10);
          if (!v5)
            goto LABEL_52;
        }
        if (v5 >= 1)
          break;
        __break(1u);
LABEL_70:
        if (v26 < 0)
          v86 = v26;
        else
          v86 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v26);
        v32 = _CocoaArrayWrapper.endIndex.getter(v86);
        swift_bridgeObjectRelease(v26);
      }
      for (i = 0; i != v5; ++i)
      {
        if ((v10 & 0xC000000000000001) != 0)
          v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
        else
          v55 = *(id *)(v10 + 8 * i + 32);
        v56 = v55;
        v57 = v99;
        v58 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
        swift_bridgeObjectRetain(v57);
        v59 = v56;
        LOBYTE(v56) = Array<A>.contains(node:)(v59, v57, v58);

        swift_bridgeObjectRelease(v57);
        if ((v56 & 1) == 0)
        {
          v60 = v59;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
          v62 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v61 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v62 >= v61 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
          v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
          specialized Array._endMutation()(v54);
        }

      }
LABEL_52:
      swift_release(v10);
      v64 = v99;
      v65 = (uint64_t)sub_100069A04();
      swift_bridgeObjectRelease(v64);
      if ((unint64_t)v65 >> 62)
      {
        if (v65 < 0)
          v84 = v65;
        else
          v84 = v65 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v65);
        v85 = sub_10006922C((uint64_t *)&unk_1006424B0);
        v67 = _bridgeCocoaArray<A>(_:)(v84, v85);
        swift_bridgeObjectRelease(v65);
      }
      else
      {
        swift_bridgeObjectRetain(v65);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v66);
        v67 = v65;
      }
      v68 = v93;
      v69 = *(os_unfair_lock_s **)((char *)v91 + (_QWORD)v92);
      swift_retain();
      os_unfair_lock_lock(v69 + 4);
      v70 = *(_QWORD *)&v96[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes];
      *(_QWORD *)&v96[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = v67;
      swift_bridgeObjectRetain(v67);
      swift_bridgeObjectRelease(v70);
      os_unfair_lock_unlock(v69 + 4);
      swift_bridgeObjectRelease(v67);
      v71 = swift_release(v69);
      v72 = (unint64_t)v94;
      v90(v68, v89, v94, v71);
      swift_bridgeObjectRetain(v65);
      v74 = Logger.logObject.getter(v73);
      v76 = static os_log_type_t.info.getter(v75);
      if (os_log_type_enabled(v74, v76))
      {
        v77 = swift_slowAlloc(22, -1);
        v78 = swift_slowAlloc(32, -1);
        v98[0] = v78;
        *(_DWORD *)v77 = 136446466;
        v97 = sub_1000544FC(0xD000000000000013, 0x8000000100528A50, v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
        *(_WORD *)(v77 + 12) = 2048;
        if ((unint64_t)v65 >> 62)
        {
          if (v65 < 0)
            v82 = v65;
          else
            v82 = v65 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v65);
          v79 = _CocoaArrayWrapper.endIndex.getter(v82);
          swift_bridgeObjectRelease(v65);
        }
        else
        {
          v79 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v65);
        v97 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
        swift_bridgeObjectRelease(v65);
        _os_log_impl((void *)&_mh_execute_header, v74, v76, "[DSEnumeration] %{public}s: nodes = %ld", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v78, -1, -1);
        swift_slowDealloc(v77, -1, -1);

        v80 = v93;
        v81 = (unint64_t)v94;
      }
      else
      {
        swift_bridgeObjectRelease_n(v65, 2);

        v80 = v68;
        v81 = v72;
      }
      v88((uint64_t)v80, v81);
      v83 = v96;
      swift_beginAccess(&v96[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates], v98, 33, 0);
      sub_10006A860(v10);
      swift_endAccess(v98);
      swift_release(v10);
      sub_100069EDC();

    }
    else
    {
LABEL_9:

    }
  }
}

double sub_10033407C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a2, 0xD000000000000017, 0x8000000100528A30) & 1) != 0)
  {
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v14 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    v15 = swift_allocObject(&unk_1005DE718, 32, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = a1;
    aBlock[4] = sub_10033880C;
    v28 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE730;
    v16 = _Block_copy(aBlock);
    v24 = v6;
    v17 = v16;
    swift_retain();
    swift_bridgeObjectRetain(a1);
    static DispatchQoS.unspecified.getter(v18);
    v26 = _swiftEmptyArrayStorage;
    v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_10006922C((uint64_t *)&unk_100647540);
    v21 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v5, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v22 = v28;
    swift_release(v14);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

void sub_1003342D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  BOOL v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  os_log_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  NSObject *v60;
  __n128 v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  os_unfair_lock_s *v83;
  uint64_t v84;
  __n128 v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  __n128 v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  _BYTE v132[16];
  uint64_t v133;
  uint64_t aBlock[5];
  uint64_t v135;
  uint64_t v136[2];
  char v137[32];
  uint64_t v138;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v119 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v119 - v12;
  a1 += 16;
  swift_beginAccess(a1, v137, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v15 = (char *)Strong;
  v129 = v7;
  v130 = v10;
  v16 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  v17 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
  __chkstk_darwin(Strong);
  *(&v119 - 2) = v18;
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  sub_10006A620(aBlock);
  v19 = LOBYTE(aBlock[0]);
  os_unfair_lock_unlock(v17 + 4);
  swift_release(v17);
  if (v19 != 1)
    goto LABEL_9;
  v128 = v16;
  v21 = *(os_unfair_lock_s **)&v15[v16];
  __chkstk_darwin(v20);
  *(&v119 - 2) = (uint64_t)v15;
  swift_retain();
  os_unfair_lock_lock(v21 + 4);
  sub_10006A6B8(aBlock);
  v22 = aBlock[0];
  os_unfair_lock_unlock(v21 + 4);
  swift_release(v21);
  v23 = sub_100069C14(v22);
  swift_bridgeObjectRelease(v22);
  if (!v23)
  {
LABEL_9:

    return;
  }
  v136[0] = (uint64_t)v23;
  v25 = Logger.Enumeration.unsafeMutableAddressor(v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v126 = v25;
  v127 = v26;
  ((void (*)(char *))v26)(v13);
  swift_bridgeObjectRetain_n(a2, 4);
  v27 = v15;
  v28 = Logger.logObject.getter(v27);
  LOBYTE(v30) = static os_log_type_t.info.getter(v29);
  v31 = os_log_type_enabled((os_log_t)v28, (os_log_type_t)v30);
  v32 = a2 >> 62;
  v124 = v4;
  v122 = a2 >> 62;
  v123 = v27;
  if (!v31)
  {
    swift_bridgeObjectRelease_n(a2, 4);

    v125 = *(NSObject **)(v5 + 8);
    ((void (*)(char *, uint64_t))v125)(v13, v4);
    v121 = a2 & 0x8000000000000000;
    goto LABEL_17;
  }
  v27 = (char *)swift_slowAlloc(32, -1);
  v120 = swift_slowAlloc(64, -1);
  aBlock[0] = v120;
  *(_DWORD *)v27 = 136446722;
  v131 = sub_1000544FC(0xD000000000000017, 0x8000000100528A30, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
  *((_WORD *)v27 + 6) = 2048;
  v33 = &v138;
  v121 = a2 & 0x8000000000000000;
  if (v32)
    goto LABEL_80;
  v34 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(a2);
    v131 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
    swift_bridgeObjectRelease(a2);
    *((_WORD *)v27 + 11) = 2080;
    v125 = v28;
    if (v32)
    {
      v35 = v30;
      v38 = v121 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v39 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v37 = _bridgeCocoaArray<A>(_:)(v38, v39);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v35 = v30;
      swift_bridgeObjectRetain(a2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
      v37 = a2;
    }
    v40 = sub_100338428(v37);
    v42 = v41;
    swift_bridgeObjectRelease(v37);
    v131 = sub_1000544FC(v40, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
    swift_bridgeObjectRelease(v42);
    v43 = v123;

    swift_bridgeObjectRelease_n(a2, 2);
    v44 = v125;
    _os_log_impl((void *)&_mh_execute_header, v125, v35, "[DSEnumeration] %{public}s: deleted %ld nodes%s", (uint8_t *)v27, 0x20u);
    v45 = v120;
    swift_arrayDestroy(v120, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    v46 = v27;
    v27 = v43;
    swift_slowDealloc(v46, -1, -1);

    v4 = v124;
    v125 = *(NSObject **)(v5 + 8);
    ((void (*)(char *, uint64_t))v125)(v13, v124);
    v32 = v122;
LABEL_17:
    v30 = v128;
    if (v32)
    {
      if (v121)
        v57 = a2;
      else
        v57 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v28 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (!v28)
      {
LABEL_31:
        swift_bridgeObjectRelease(a2);
        goto LABEL_32;
      }
    }
    else
    {
      v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      if (!v28)
        goto LABEL_31;
    }
    if (v28 >= 1)
      break;
    __break(1u);
LABEL_80:
    if (*(v33 - 32))
      v111 = a2;
    else
      v111 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v34 = _CocoaArrayWrapper.endIndex.getter(v111);
    swift_bridgeObjectRelease(a2);
  }
  v47 = &v27[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates];
  if ((a2 & 0xC000000000000001) != 0)
  {
    v48 = 0;
    do
    {
      v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v48++, a2);
      swift_beginAccess(v47, aBlock, 33, 0);
      v50 = (void *)sub_100444AC8(v49);
      swift_endAccess(aBlock);

      v51 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      LOBYTE(aBlock[0]) = 1;
      DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(0x100000000, v51);
      swift_unknownObjectRelease(v49);
    }
    while (v28 != v48);
  }
  else
  {
    v52 = 0;
    do
    {
      v53 = *(void **)(a2 + 8 * v52++ + 32);
      swift_beginAccess(v47, aBlock, 33, 0);
      v54 = v53;
      v55 = (void *)sub_100444AC8(v54);
      swift_endAccess(aBlock);

      v56 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      LOBYTE(aBlock[0]) = 1;
      DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(0x100000000, v56);

    }
    while (v28 != v52);
  }
  swift_bridgeObjectRelease(a2);
  v4 = v124;
  v30 = v128;
  v27 = v123;
LABEL_32:
  sub_100069EDC();
  v58 = v130;
  v127(v130, v126, v4);
  v59 = v27;
  v60 = Logger.logObject.getter(v59);
  v62 = static os_log_type_t.info.getter(v61);
  v63 = os_log_type_enabled(v60, v62);
  v123 = v59;
  if (v63)
  {
    v64 = swift_slowAlloc(32, -1);
    v65 = swift_slowAlloc(64, -1);
    aBlock[0] = v65;
    *(_DWORD *)v64 = 136446722;
    v131 = sub_1000544FC(0xD000000000000017, 0x8000000100528A30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
    *(_WORD *)(v64 + 12) = 2048;
    swift_beginAccess(v136, &v131, 0, 0);
    v66 = v136[0];
    if ((unint64_t)v136[0] >> 62)
    {
      if (v136[0] < 0)
        v112 = v136[0];
      else
        v112 = v136[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v136[0]);
      v67 = _CocoaArrayWrapper.endIndex.getter(v112);
      swift_bridgeObjectRelease(v66);
    }
    else
    {
      v67 = *(_QWORD *)((v136[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v133 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, aBlock);
    *(_WORD *)(v64 + 22) = 2080;
    if ((unint64_t)v66 >> 62)
    {
      v68 = v65;
      if (v66 < 0)
        v71 = v66;
      else
        v71 = v66 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v66);
      v72 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v70 = _bridgeCocoaArray<A>(_:)(v71, v72);
    }
    else
    {
      v68 = v65;
      v69 = swift_bridgeObjectRetain_n(v66, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v69);
      v70 = v66;
    }
    swift_bridgeObjectRelease(v66);
    v73 = sub_100338428(v70);
    v75 = v74;
    swift_bridgeObjectRelease(v70);
    v133 = sub_1000544FC(v73, v75, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, aBlock);
    swift_bridgeObjectRelease(v75);
    v76 = v123;

    _os_log_impl((void *)&_mh_execute_header, v60, v62, "[DSEnumeration] %{public}s: current %ld nodes%s", (uint8_t *)v64, 0x20u);
    swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v64, -1, -1);

    v4 = v124;
    ((void (*)(char *, uint64_t))v125)(v130, v124);
    v30 = v128;
  }
  else
  {

    ((void (*)(char *, uint64_t))v125)(v58, v4);
  }
  swift_beginAccess(v136, aBlock, 33, 0);
  swift_bridgeObjectRetain(a2);
  v77 = sub_100338BA8(v136, a2);
  swift_bridgeObjectRelease(a2);
  v78 = v136[0];
  if ((unint64_t)v136[0] >> 62)
  {
    if (v136[0] < 0)
      v108 = v136[0];
    else
      v108 = v136[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v136[0]);
    v79 = _CocoaArrayWrapper.endIndex.getter(v108);
    swift_bridgeObjectRelease(v78);
  }
  else
  {
    v79 = *(_QWORD *)((v136[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v80 = v123;
  if (v79 < v77)
  {
    __break(1u);
  }
  else
  {
    sub_10045C0E0(v77, v79);
    swift_endAccess(aBlock);
    v77 = v136[0];
    if (!((unint64_t)v136[0] >> 62))
    {
      v81 = swift_bridgeObjectRetain_n(v136[0], 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v81);
      v82 = v77;
      goto LABEL_48;
    }
  }
  if (v77 < 0)
    v109 = v77;
  else
    v109 = v77 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v77);
  v110 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v82 = _bridgeCocoaArray<A>(_:)(v109, v110);
LABEL_48:
  swift_bridgeObjectRelease(v77);
  v83 = *(os_unfair_lock_s **)&v15[v30];
  swift_retain();
  os_unfair_lock_lock(v83 + 4);
  v84 = *(_QWORD *)&v80[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes];
  *(_QWORD *)&v80[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = v82;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRelease(v84);
  os_unfair_lock_unlock(v83 + 4);
  swift_bridgeObjectRelease(v82);
  v85 = swift_release(v83);
  v86 = v129;
  v87 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v127)(v129, v126, v4, v85);
  v88 = Logger.logObject.getter(v87);
  v90 = static os_log_type_t.info.getter(v89);
  if (os_log_type_enabled(v88, v90))
  {
    v91 = swift_slowAlloc(22, -1);
    v92 = swift_slowAlloc(32, -1);
    aBlock[0] = v92;
    *(_DWORD *)v91 = 136446466;
    v133 = sub_1000544FC(0xD000000000000017, 0x8000000100528A30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, aBlock);
    *(_WORD *)(v91 + 12) = 2048;
    v93 = v136[0];
    if ((unint64_t)v136[0] >> 62)
    {
      if (v136[0] < 0)
        v113 = v136[0];
      else
        v113 = v136[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v136[0]);
      v94 = _CocoaArrayWrapper.endIndex.getter(v113);
      swift_bridgeObjectRelease(v93);
    }
    else
    {
      v94 = *(_QWORD *)((v136[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v133 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v88, v90, "[DSEnumeration] %{public}s: nodes = %ld", (uint8_t *)v91, 0x16u);
    swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v91, -1, -1);

    v95 = v129;
  }
  else
  {

    v95 = v86;
  }
  ((void (*)(char *, uint64_t))v125)(v95, v4);
  if ((sub_10006A52C() & 1) == 0)
  {
    swift_bridgeObjectRelease(v136[0]);

    return;
  }
  if (v122)
  {
    if (v121)
      v97 = a2;
    else
      v97 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v98 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v99 = _bridgeCocoaArray<A>(_:)(v97, v98);
    swift_bridgeObjectRelease(a2);
    a2 = v99;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v96);
  }
  if (a2 >> 62)
  {
    if ((a2 & 0x8000000000000000) != 0)
      v114 = a2;
    else
      v114 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v100 = _CocoaArrayWrapper.endIndex.getter(v114);
    swift_bridgeObjectRelease(a2);
    if (v100)
      goto LABEL_63;
LABEL_96:
    swift_bridgeObjectRelease(a2);
    v107 = _swiftEmptyArrayStorage;
LABEL_97:
    v115 = swift_allocObject(&unk_1005DE768, 32, 7);
    *(_QWORD *)(v115 + 16) = v80;
    *(_QWORD *)(v115 + 24) = v107;
    aBlock[4] = (uint64_t)sub_100339080;
    v135 = v115;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005DE780;
    v116 = _Block_copy(aBlock);
    v117 = v135;
    v118 = v80;
    swift_release(v117);
    DOCRunInMainThread(v116);
    _Block_release(v116);
    swift_bridgeObjectRelease(v136[0]);

    return;
  }
  v100 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v100)
    goto LABEL_96;
LABEL_63:
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v100);
  if ((v100 & 0x8000000000000000) == 0)
  {
    v101 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v102 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v101, a2);
      }
      else
      {
        v102 = *(void **)(a2 + 8 * v101 + 32);
        swift_unknownObjectRetain(v102);
      }
      ++v101;
      v103 = objc_msgSend(v102, "identifier");
      swift_unknownObjectRelease(v102);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v104);
      v105 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v105);
      v106 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v103);
      specialized ContiguousArray._endMutation()(v106);
    }
    while (v100 != v101);
    swift_bridgeObjectRelease(a2);
    v107 = (_QWORD *)aBlock[0];
    goto LABEL_97;
  }
  __break(1u);
}

double sub_100335104(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate);
  if (Strong)
  {
    v5 = Strong;
    sub_10002156C((uint64_t)_swiftEmptyArrayStorage, a2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

double sub_100335164(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  double result;

  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  v11 = a4;
  v12 = a1;
  a5(v10, v11);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

double sub_1003351EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a1, 0x28646574656C6564, 0xEB00000000293A5FLL) & 1) != 0)
  {
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v12 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    v21 = v4;
    v13 = v12;
    swift_unknownObjectWeakInit(v12 + 16);
    v14 = swift_allocObject(&unk_1005DE678, 32, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_1003387CC;
    v25 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE690;
    v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter(a1);
    v23 = _swiftEmptyArrayStorage;
    v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_10006922C((uint64_t *)&unk_100647540);
    v18 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v3, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = v25;
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  }
  return result;
}

void sub_100335440(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  __n128 v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  os_log_t v42;
  int v43;
  uint64_t v44;
  char v45[40];
  uint64_t v46;
  uint64_t aBlock[5];
  uint64_t v48;
  char v49[32];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = Logger.Enumeration.unsafeMutableAddressor(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    v11 = a2;
    v12 = v9;
    v13 = v11;
    v14 = v12;
    v15 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.info.getter(v16);
    v18 = v17;
    if (os_log_type_enabled(v15, v17))
    {
      v19 = swift_slowAlloc(32, -1);
      v43 = v18;
      v20 = v19;
      v44 = swift_slowAlloc(96, -1);
      aBlock[0] = v44;
      *(_DWORD *)v20 = 136446722;
      v42 = v15;
      v46 = sub_1000544FC(0x28646574656C6564, 0xEB00000000293A5FLL, aBlock);
      *(_QWORD *)&v21 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock).n128_u64[0];
      *(_WORD *)(v20 + 12) = 2080;
      v22 = objc_msgSend(v13, "displayName", v21);
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v41 = v4;
      v25 = v24;

      v46 = sub_1000544FC(v23, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock);

      swift_bridgeObjectRelease(v25);
      *(_WORD *)(v20 + 22) = 2080;
      v26 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v26, v45);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v13;
      v46 = inited;
      specialized Array._endMutation()(inited);
      v28 = v46;
      v29 = v13;
      v30 = sub_100338428(v28);
      v32 = v31;
      swift_bridgeObjectRelease(v28);
      v46 = sub_1000544FC(v30, v32, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock);

      swift_bridgeObjectRelease(v32);
      v33 = v42;
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v43, "[DSEnumeration] %{public}s: on %s%s", (uint8_t *)v20, 0x20u);
      v34 = v44;
      swift_arrayDestroy(v44, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v41);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    v35 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    LOBYTE(aBlock[0]) = 1;
    DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)(0x100000000, v35);
    if ((sub_10006A52C() & 1) != 0)
    {
      v36 = swift_allocObject(&unk_1005DE6C8, 32, 7);
      *(_QWORD *)(v36 + 16) = v14;
      *(_QWORD *)(v36 + 24) = v13;
      aBlock[4] = (uint64_t)sub_100338800;
      v48 = v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005DE6E0;
      v37 = _Block_copy(aBlock);
      v38 = v48;
      v39 = v13;
      v40 = v14;
      swift_release(v38);
      DOCRunInMainThread(v37);
      _Block_release(v37);
    }

  }
}

double sub_10033584C(uint64_t a1, void *a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate);
  if (Strong)
  {
    v5 = Strong;
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
    v8 = objc_msgSend(a2, "identifier");
    _bridgeAnyObjectToAny(_:)(v12, v8);
    swift_unknownObjectRelease(v8);
    v9 = v13;
    v10 = sub_10007E7A0(v12, v13);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
    *(_QWORD *)(v7 + 32) = v11;
    specialized Array._endMutation()(v11);
    sub_100068588(v12);
    sub_10002156C((uint64_t)_swiftEmptyArrayStorage, v7);
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

double sub_100335990(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a1, 0xD000000000000013, 0x80000001005289F0) & 1) != 0)
  {
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v12 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    v21 = v4;
    v13 = v12;
    swift_unknownObjectWeakInit(v12 + 16);
    v14 = swift_allocObject(&unk_1005DE628, 32, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_1003387BC;
    v25 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE640;
    v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter(a1);
    v23 = _swiftEmptyArrayStorage;
    v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_10006922C((uint64_t *)&unk_100647540);
    v18 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v3, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = v25;
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  }
  return result;
}

uint64_t sub_100335BE0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  __n128 v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t inited;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[40];
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v13 = (void *)result;
    v14 = static os_signpost_type_t.begin.getter(result);
    v15 = *(id *)updateLogHandler.unsafeMutableAddressor();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)(v14, &_mh_execute_header, v15, "Files-DOCFileSystemCollection-OpenSync", 38, 2, v11, "Open sync started", 17, 2, _swiftEmptyArrayStorage);

    v16 = (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    v17 = Logger.Enumeration.unsafeMutableAddressor(v16);
    v45 = v5;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
    v18 = a2;
    v19 = v13;
    v20 = v18;
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.info.getter(v23);
    v25 = v24;
    if (os_log_type_enabled(v22, v24))
    {
      v26 = swift_slowAlloc(32, -1);
      v43 = swift_slowAlloc(96, -1);
      v48 = v43;
      *(_DWORD *)v26 = 136446722;
      v47 = sub_1000544FC(0xD000000000000013, 0x80000001005289F0, &v48);
      v44 = v4;
      *(_QWORD *)&v27 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48).n128_u64[0];
      *(_WORD *)(v26 + 12) = 2080;
      v28 = objc_msgSend(v20, "displayName", v27);
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v42 = v25;
      v30 = v29;
      v32 = v31;

      v47 = sub_1000544FC(v30, v32, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);

      swift_bridgeObjectRelease(v32);
      *(_WORD *)(v26 + 22) = 2080;
      v33 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v33, v46);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v20;
      v47 = inited;
      specialized Array._endMutation()(inited);
      v35 = v47;
      v36 = v20;
      v37 = sub_100338428(v35);
      v39 = v38;
      swift_bridgeObjectRelease(v35);
      v47 = sub_1000544FC(v37, v39, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);

      swift_bridgeObjectRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v42, "[DSEnumeration] %{public}s: Open sync started on %s%s", (uint8_t *)v26, 0x20u);
      v40 = v43;
      swift_arrayDestroy(v43, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v7, v44);
    }
    else
    {

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v45 + 8))(v7, v4);
    }
  }
  return result;
}

double sub_100336040(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100331D00(a1, 0xD000000000000015, 0x8000000100528990) & 1) != 0)
  {
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    v12 = swift_allocObject(&unk_1005DE5B0, 24, 7);
    v21 = v4;
    v13 = v12;
    swift_unknownObjectWeakInit(v12 + 16);
    v14 = swift_allocObject(&unk_1005DE5D8, 32, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_1003378B0;
    v25 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005DE5F0;
    v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter(a1);
    v23 = _swiftEmptyArrayStorage;
    v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_10006922C((uint64_t *)&unk_100647540);
    v18 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v17, v18, v3, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = v25;
    swift_release(v13);
    *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  }
  return result;
}

void sub_100336290(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *);
  id v22;
  id v23;
  id v24;
  char *v25;
  NSObject *v26;
  __n128 v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  double v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  _BYTE *v53;
  uint64_t v54;
  NSObject *v55;
  __n128 v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  _BYTE v60[12];
  int v61;
  uint64_t v62;
  void (*v63)(_BYTE *);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char v68[40];
  uint64_t v69;
  uint64_t v70;
  char v71[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v60[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v60[-v9];
  v11 = type metadata accessor for OSSignpostID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v71, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v16 = (void *)Strong;
    v67 = v7;
    v17 = static os_signpost_type_t.end.getter(Strong);
    v18 = *(id *)updateLogHandler.unsafeMutableAddressor();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)(v17, &_mh_execute_header, v18, "Files-DOCFileSystemCollection-OpenSync", 38, 2, v14, "Open sync ended", 15, 2, _swiftEmptyArrayStorage);

    v19 = (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    v20 = Logger.Enumeration.unsafeMutableAddressor(v19);
    v21 = *(void (**)(_BYTE *))(v5 + 16);
    v66 = v20;
    v21(v10);
    v22 = a2;
    v23 = v16;
    v24 = v22;
    v25 = (char *)v23;
    v26 = Logger.logObject.getter(v25);
    v28 = static os_log_type_t.info.getter(v27);
    v29 = v28;
    if (os_log_type_enabled(v26, v28))
    {
      v30 = swift_slowAlloc(32, -1);
      v62 = swift_slowAlloc(96, -1);
      v70 = v62;
      *(_DWORD *)v30 = 136446722;
      v69 = sub_1000544FC(0xD000000000000015, 0x8000000100528990, &v70);
      v65 = v4;
      *(_QWORD *)&v31 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70).n128_u64[0];
      *(_WORD *)(v30 + 12) = 2080;
      v32 = objc_msgSend(v24, "displayName", v31);
      v63 = v21;
      v33 = v32;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v61 = v29;
      v35 = v34;
      v64 = v25;
      v37 = v36;

      v69 = sub_1000544FC(v35, v37, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

      swift_bridgeObjectRelease(v37);
      *(_WORD *)(v30 + 22) = 2080;
      v38 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v38, v68);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v24;
      v69 = inited;
      specialized Array._endMutation()(inited);
      v40 = v69;
      v41 = v24;
      v42 = sub_100338428(v40);
      v44 = v43;
      swift_bridgeObjectRelease(v40);
      v45 = v42;
      v25 = v64;
      v69 = sub_1000544FC(v45, v44, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

      v4 = v65;
      v46 = v44;
      v21 = v63;
      swift_bridgeObjectRelease(v46);
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v61, "[DSEnumeration] %{public}s: Open sync completed on %s%s", (uint8_t *)v30, 0x20u);
      v47 = v62;
      swift_arrayDestroy(v62, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    else
    {

    }
    v48 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v48(v10, v4);
    v49 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode];
    v50 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v51 = swift_unknownObjectRetain(v49);
    LOBYTE(v50) = DOCNode.isEqualTo(node:)(v51, v50);
    v52 = swift_unknownObjectRelease(v49);
    v53 = v67;
    if ((v50 & 1) != 0)
    {
      v54 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, __n128))v21)(v67, v66, v4, v52);
      v55 = Logger.logObject.getter(v54);
      v57 = static os_log_type_t.info.getter(v56);
      if (os_log_type_enabled(v55, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc(12, -1);
        v59 = swift_slowAlloc(32, -1);
        v70 = v59;
        *(_DWORD *)v58 = 136446210;
        v69 = sub_1000544FC(0xD000000000000015, 0x8000000100528990, &v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
        _os_log_impl((void *)&_mh_execute_header, v55, v57, "[DSEnumeration] %{public}s: Open sync completed on the collection's observed node, start refreshing items", v58, 0xCu);
        swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v58, -1, -1);
      }

      v48(v53, v4);
      sub_10032FF18(0);
    }

  }
}

uint64_t storeEnumTagSinglePayload for FileSystemCollectionDomainState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003368EC + 4 * byte_1004E31C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100336920 + 4 * byte_1004E31C0[v4]))();
}

uint64_t sub_100336920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100336930);
  return result;
}

uint64_t sub_10033693C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100336944);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100336948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100336950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileSystemCollectionDomainState()
{
  return &type metadata for FileSystemCollectionDomainState;
}

unint64_t sub_100336970()
{
  unint64_t result;

  result = qword_10064F378;
  if (!qword_10064F378)
  {
    result = swift_getWitnessTable(&unk_1004E3320, &type metadata for FileSystemCollectionDomainState);
    atomic_store(result, (unint64_t *)&qword_10064F378);
  }
  return result;
}

_QWORD *sub_1003369B4@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

id sub_1003369F0(uint64_t a1, void *a2, void *a3, uint64_t a4, _BYTE *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  char **v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  id v74;
  id v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  NSString v125;
  objc_class *v126;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  objc_super v160;
  uint64_t v161[2];

  v141 = a6;
  v153 = a4;
  v156 = a3;
  v146 = a2;
  v151 = a1;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v157 = v7;
  v158 = v8;
  v9 = __chkstk_darwin(v7);
  v142 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v143 = (char *)&v140 - v12;
  v13 = __chkstk_darwin(v11);
  v144 = (char *)&v140 - v14;
  __chkstk_darwin(v13);
  v145 = (char *)&v140 - v15;
  v16 = type metadata accessor for OSSignpostID(0);
  v154 = *(_QWORD *)(v16 - 8);
  v155 = v16;
  __chkstk_darwin(v16);
  v152 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v18);
  v150 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v148 = *(_QWORD *)(v20 - 8);
  v149 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v23);
  v25 = (char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isGathering] = 1;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 0;
  v26 = &a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate];
  *((_QWORD *)v26 + 1) = 0;
  swift_unknownObjectWeakInit(v26, 0);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = _swiftEmptyArrayStorage;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 0;
  v27 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  v28 = sub_10006922C((uint64_t *)&unk_10064F380);
  v29 = swift_allocObject(v28, 20, 7);
  *(_DWORD *)(v29 + 16) = 0;
  *(_QWORD *)&a5[v27] = v29;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] = 0;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 0;
  v30 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source;
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken] = 0;
  v147 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue;
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v161[0] = (uint64_t)_swiftEmptyArrayStorage;
  v31 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v32 = a5;
  v33 = sub_10006922C((uint64_t *)&unk_100641280);
  v34 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  v35 = v31;
  v36 = v156;
  dispatch thunk of SetAlgebra.init<A>(_:)(v161, v33, v34, v23, v35);
  v37 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v148 + 104))(v22, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v149);
  v38 = v150;
  static DispatchQoS.unspecified.getter(v37);
  v39 = v25;
  v40 = v151;
  v41 = v22;
  v42 = v32;
  v43 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x8000000100528880, v38, v39, v41, 0);
  *(_QWORD *)&a5[v147] = v43;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_iCloudRootNodeObservation] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = _swiftEmptyArrayStorage;
  v44 = &_swiftEmptySetSingleton;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_1003FC9EC((uint64_t)_swiftEmptyArrayStorage);
    else
      v44 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates] = v44;
  v45 = &v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval];
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval] = 100;
  v46 = enum case for DispatchTimeInterval.milliseconds(_:);
  v47 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
  v48 = &v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime];
  v49 = type metadata accessor for DispatchTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
  v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] = v40;
  v50 = *(void **)&a5[v30];
  *(_QWORD *)&a5[v30] = v36;
  swift_unknownObjectRetain(v40);
  v51 = v36;

  if ((v153 & (unint64_t)&_mh_execute_header) != 0)
    v53 = 19;
  else
    v53 = v153 | 0x13;
  *(_DWORD *)&v32[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions] = v53;
  v54 = static os_signpost_type_t.event.getter(v52);
  v55 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v56 = v152;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v54, &_mh_execute_header, v55, "Files-DOCFileSystemCollection", 29, 2, v56, "Init DOCFileSystemCollection", 28, 2, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v154 + 8))(v56, v155);
  v57 = type metadata accessor for DOCRootNode(0);
  v58 = swift_dynamicCastClass(v40, v57);
  v59 = v36;
  if (v58)
  {
    v60 = (void *)v58;
    v61 = swift_unknownObjectRetain(v40);
    v62 = Logger.Enumeration.unsafeMutableAddressor(v61);
    v64 = v157;
    v63 = v158;
    v65 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v145, v62, v157);
    v66 = swift_unknownObjectRetain_n(v40, 2);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.info.getter();
    v69 = v68;
    v70 = &selRef_setAccessibilityValue_;
    if (os_log_type_enabled(v67, v68))
    {
      v71 = swift_slowAlloc(22, -1);
      v155 = swift_slowAlloc(64, -1);
      v161[0] = v155;
      *(_DWORD *)v71 = 136446466;
      v159 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v161);
      LODWORD(v154) = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      *(_WORD *)(v71 + 12) = 2080;
      v153 = v71 + 14;
      v72 = v40;
      v73 = v42;
      v74 = objc_msgSend(v60, "source");
      v75 = objc_msgSend(v74, "displayName");

      v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
      v77 = v59;
      v79 = v78;

      v80 = v76;
      v42 = v73;
      v40 = v72;
      v70 = &selRef_setAccessibilityValue_;
      v159 = sub_1000544FC(v80, v79, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      swift_unknownObjectRelease_n(v40, 2);
      v81 = v79;
      v59 = v77;
      swift_bridgeObjectRelease(v81);
      _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v154, "[DSEnumeration] %{public}s: node is RootNode so using underlyingNode: %s", (uint8_t *)v71, 0x16u);
      v82 = v155;
      swift_arrayDestroy(v155, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v82, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      (*(void (**)(char *, uint64_t))(v158 + 8))(v145, v157);
    }
    else
    {

      swift_unknownObjectRelease_n(v40, 2);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v64);
    }
    v102 = v146;
    v103 = objc_msgSend(v60, v70[359]);
    swift_unknownObjectRelease(v40);
    goto LABEL_19;
  }
  v83 = type metadata accessor for DOCICloudRootNode(0);
  v84 = swift_dynamicCastClass(v40, v83);
  v86 = v157;
  v85 = v158;
  if (v84)
  {
    v87 = (_QWORD *)v84;
    v88 = swift_unknownObjectRetain(v40);
    v89 = Logger.Enumeration.unsafeMutableAddressor(v88);
    v90 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v144, v89, v86);
    v91 = swift_unknownObjectRetain_n(v40, 2);
    v92 = Logger.logObject.getter(v91);
    v93 = v40;
    v94 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v92, v94))
    {
      v95 = swift_slowAlloc(22, -1);
      v96 = swift_slowAlloc(64, -1);
      v161[0] = v96;
      *(_DWORD *)v95 = 136446466;
      v159 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v161);
      v97 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      *(_WORD *)(v95 + 12) = 2080;
      v98 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v87) + 0x78))(v97);

      if (v98)
        v99 = 0xD000000000000032;
      else
        v99 = 0xD00000000000002ALL;
      if (v98)
        v100 = 0x8000000100528920;
      else
        v100 = 0x8000000100528960;
      v159 = sub_1000544FC(v99, v100, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      swift_unknownObjectRelease_n(v93, 2);
      swift_bridgeObjectRelease(v100);
      _os_log_impl((void *)&_mh_execute_header, v92, v94, "[DSEnumeration] %{public}s: node is DOCICloudRootNode, using: %s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy(v96, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v96, -1, -1);
      swift_slowDealloc(v95, -1, -1);

      v101 = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v144, v157);
    }
    else
    {

      swift_unknownObjectRelease_n(v93, 2);
      v101 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v90, v86);
    }
    v102 = v146;
    v115 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v87) + 0x78))(v101);
    if (v115)
    {
      v116 = (_QWORD *)v115;
      swift_unknownObjectRelease(v93);
      v87 = v116;
    }
    *(_QWORD *)&v42[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v87;
    v59 = v156;
    v104 = 0;
    if (v102)
      goto LABEL_28;
  }
  else
  {
    v105 = objc_opt_self(FINode);
    v106 = swift_dynamicCastObjCClass(v40, v105);
    if (v106)
    {
      v103 = (id)v106;
      v107 = swift_unknownObjectRetain(v40);
      v108 = Logger.Enumeration.unsafeMutableAddressor(v107);
      v109 = v143;
      v110 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 16))(v143, v108, v86);
      v111 = Logger.logObject.getter(v110);
      v112 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = (uint8_t *)swift_slowAlloc(12, -1);
        v114 = swift_slowAlloc(32, -1);
        v161[0] = v114;
        *(_DWORD *)v113 = 136446210;
        v159 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
        _os_log_impl((void *)&_mh_execute_header, v111, v112, "[DSEnumeration] %{public}s: node is a regular node", v113, 0xCu);
        swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v114, -1, -1);
        swift_slowDealloc(v113, -1, -1);

        (*(void (**)(char *, uint64_t))(v158 + 8))(v143, v86);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v85 + 8))(v109, v86);
      }
      v102 = v146;
LABEL_19:
      *(_QWORD *)&v42[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v103;
      v104 = 0;
      if (!v102)
        goto LABEL_30;
      goto LABEL_28;
    }
    v128 = Logger.Enumeration.unsafeMutableAddressor(0);
    v129 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v142, v128, v86);
    v130 = swift_unknownObjectRetain_n(v40, 2);
    v131 = Logger.logObject.getter(v130);
    v132 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v131, v132))
    {
      v133 = swift_slowAlloc(22, -1);
      v134 = v40;
      v135 = swift_slowAlloc(64, -1);
      v161[0] = v135;
      *(_DWORD *)v133 = 136446466;
      v159 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      *(_WORD *)(v133 + 12) = 2080;
      v136 = DOCNode.nodeDescription.getter(v141);
      v138 = v137;
      v159 = sub_1000544FC(v136, v137, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
      swift_unknownObjectRelease_n(v134, 2);
      swift_bridgeObjectRelease(v138);
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "[DSEnumeration] %{public}s: DOCFileSystemCollection initiated with a non-FINode DOCNode %s", (uint8_t *)v133, 0x16u);
      swift_arrayDestroy(v135, 2, (char *)&type metadata for Any + 8);
      v139 = v135;
      v40 = v134;
      v59 = v156;
      swift_slowDealloc(v139, -1, -1);
      swift_slowDealloc(v133, -1, -1);

      (*(void (**)(char *, uint64_t))(v158 + 8))(v142, v86);
    }
    else
    {

      swift_unknownObjectRelease_n(v40, 2);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v129, v86);
    }
    v102 = v146;
    *(_QWORD *)&v42[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v40;
    swift_unknownObjectRetain(v40);
    v104 = 0;
    if (v102)
    {
LABEL_28:
      if (v59)
      {
        v117 = (void *)objc_opt_self(DOCManagedPermission);
        v118 = v102;
        v119 = objc_msgSend(v117, "defaultPermission");
        v120 = objc_msgSend(v119, "userActionForConfiguration:", v118);

        v121 = objc_msgSend(v118, "hostIdentifier");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
        v123 = v122;

        v124 = objc_allocWithZone((Class)DOCSourceObserver);
        v125 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v123);
        v104 = objc_msgSend(v124, "initWithUserAction:hostIdentifier:", v120, v125);

      }
    }
  }
LABEL_30:
  *(_QWORD *)&v42[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver] = v104;

  v126 = (objc_class *)type metadata accessor for DOCFileSystemCollection(0);
  v160.receiver = v42;
  v160.super_class = v126;
  return objc_msgSendSuper2(&v160, "init");
}

uint64_t sub_100337884()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003378A8()
{
  return sub_1003392C4(32);
}

void sub_1003378B0()
{
  uint64_t v0;

  sub_100336290(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003378B8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
    goto LABEL_37;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    v7 = 0;
    v8 = v5 & 0xC000000000000001;
    v23 = v3;
    v24 = v5 + 32;
    v9 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v9 = a2;
    v27 = v5;
    v28 = v9;
    v29 = a2 & 0xC000000000000001;
    v10 = (unint64_t)a2 >> 62;
    v25 = v5 & 0xC000000000000001;
    v26 = v6;
    while (1)
    {
      if (v8)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
        if (!v10)
          goto LABEL_8;
      }
      else
      {
        v11 = *(id *)(v24 + 8 * v7);
        if (!v10)
        {
LABEL_8:
          v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(a2);
          if (!v12)
            goto LABEL_16;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRetain(a2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v28);
      if (!v12)
      {
LABEL_16:

        swift_bridgeObjectRelease(a2);
        goto LABEL_29;
      }
LABEL_9:
      if (v29)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      else
        v13 = *(id *)(a2 + 32);
      v5 = (uint64_t)v13;
      sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      v14 = static NSObject.== infix(_:_:)(v5, v11);

      if ((v14 & 1) != 0)
      {
LABEL_33:

        swift_bridgeObjectRelease(a2);
        return v7;
      }
      if (v12 != 1)
        break;

      swift_bridgeObjectRelease(a2);
LABEL_28:
      v6 = v26;
      v5 = v27;
      v10 = (unint64_t)a2 >> 62;
      v8 = v25;
LABEL_29:
      if (__OFADD__(v7++, 1))
        goto LABEL_36;
      if (v7 == v6)
        return 0;
    }
    if (v29)
    {
      v5 = 1;
      while (1)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a2);
        v3 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v16 = v15;
        v17 = static NSObject.== infix(_:_:)(v15, v11);
        swift_unknownObjectRelease(v16);
        if ((v17 & 1) != 0)
          goto LABEL_33;
        ++v5;
        if (v3 == v12)
          goto LABEL_27;
      }
      __break(1u);
    }
    else
    {
      v18 = 5;
      while (1)
      {
        v3 = v18 - 3;
        if (__OFADD__(v18 - 4, 1))
          break;
        v5 = (uint64_t)*(id *)(a2 + 8 * v18);
        v19 = static NSObject.== infix(_:_:)(v5, v11);

        if ((v19 & 1) != 0)
          goto LABEL_33;
        ++v18;
        if (v3 == v12)
        {
LABEL_27:

          swift_bridgeObjectRelease(a2);
          v3 = v23;
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v5 < 0)
      v21 = v5;
    else
      v21 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v5);
  }
  return 0;
}

void sub_100337B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  __n128 v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  id v17;
  NSString v18;
  void *v19;
  uint64_t v20;
  void **aBlock;
  _QWORD v22[4];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Enumeration.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  swift_retain_n(v0, 2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.info.getter(v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v12 = 134217984;
    sub_10032DA24();
    v14 = v13;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 >= 0)
        v13 &= 0xFFFFFFFFFFFFFF8uLL;
      v15 = _CocoaArrayWrapper.endIndex.getter(v13);
    }
    else
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_release(v1);
    swift_bridgeObjectRelease(v14);
    aBlock = (void **)v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v22);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "DOCFileSystemCollectionManager: Application did enter Background, Stoping %ld active collections", v12, 0xCu);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v0, 2, v16);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v17 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v18 = String._bridgeToObjectiveC()();
  v22[3] = sub_1003393EC;
  v23 = v1;
  aBlock = _NSConcreteStackBlock;
  v22[0] = 1107296256;
  v22[1] = sub_10016C02C;
  v22[2] = &unk_1005DED98;
  v19 = _Block_copy(&aBlock);
  v20 = v23;
  swift_retain();
  objc_msgSend(v17, "performExpiringActivityWithReason:usingBlock:", v18, v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);

}

double sub_100337DB8()
{
  uint64_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  __n128 v11;
  os_log_type_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t i;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  double result;
  uint64_t v21;
  void **aBlock;
  _QWORD v23[4];
  NSObject *v24;

  v2 = v0;
  isEscapingClosureAtFileLocation = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  __chkstk_darwin(isEscapingClosureAtFileLocation);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = Logger.Enumeration.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, isEscapingClosureAtFileLocation);
  swift_retain_n(v0, 2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.info.getter(v11);
  if (!os_log_type_enabled(v10, v12))
  {

    swift_release_n(v0, 2, v16);
    goto LABEL_6;
  }
  v1 = (uint8_t *)swift_slowAlloc(12, -1);
  *(_DWORD *)v1 = 134217984;
  sub_10032DA24();
  v14 = v13;
  if (v13 >> 62)
    goto LABEL_8;
  for (i = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    swift_release(v2);
    swift_bridgeObjectRelease(v14);
    aBlock = (void **)i;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v23);
    swift_release(v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "DOCFileSystemCollectionManager: Application will enter Foreground, Restarting active %ld collections", v1, 0xCu);
    swift_slowDealloc(v1, -1, -1);

LABEL_6:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, isEscapingClosureAtFileLocation);
    sub_10032DA24();
    v18 = v17;
    v19 = *(NSObject **)(v2 + 24);
    v2 = swift_allocObject(&unk_1005DED08, 24, 7);
    *(_QWORD *)(v2 + 16) = v18;
    v14 = swift_allocObject(&unk_1005DED30, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_1003393AC;
    *(_QWORD *)(v14 + 24) = v2;
    v23[3] = sub_10010DB64;
    v24 = v14;
    aBlock = _NSConcreteStackBlock;
    v23[0] = 1107296256;
    v23[1] = sub_10006655C;
    v23[2] = &unk_1005DED48;
    v6 = (char *)_Block_copy(&aBlock);
    v10 = v24;
    swift_retain();
    swift_release(v10);
    dispatch_sync(v19, v6);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 103, 73, 28, 1);
    swift_release(v2);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_8:
    if (v14 < 0)
      v21 = v14;
    else
      v21 = v14 & 0xFFFFFFFFFFFFFF8;
  }
  return result;
}

id sub_100338054(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  Swift::Bool v13;
  uint64_t v15;

  v2 = sub_10006922C(&qword_100643470);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v15 - v6;
  if (!objc_msgSend(a1, "isContainer"))
    return 0;
  v8 = objc_msgSend(a1, "fileURL");
  if (v8)
  {
    v9 = v8;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);

    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_1000B34E4((uint64_t)v5, (uint64_t)v7);
  type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v10) == 1)
  {
    sub_10000CB4C((uint64_t)v7, &qword_100643470);
    v13 = 0;
  }
  else
  {
    v13 = URL.startAccessingSecurityScopedResource()();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v10);
  }
  v11 = objc_msgSend(a1, "iteratorWithOptions:", 4);
  sub_100331A00(v13, a1);
  return v11;
}

_QWORD *sub_1003381F8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Bool v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v4 = sub_10006922C(&qword_100643470);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v23 - v8;
  v10 = _swiftEmptyArrayStorage;
  if (a2)
  {
    swift_unknownObjectRetain(a2);
    v11 = objc_msgSend(a1, "fileURL");
    if (v11)
    {
      v12 = v11;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    }
    else
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
    }
    sub_1000B34E4((uint64_t)v7, (uint64_t)v9);
    type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      sub_10000CB4C((uint64_t)v9, &qword_100643470);
      v15 = 0;
    }
    else
    {
      v15 = URL.startAccessingSecurityScopedResource()();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
    v24 = (unint64_t)_swiftEmptyArrayStorage;
    v16 = objc_msgSend(a2, "first");
    if (v16)
    {
      v17 = v16;
      do
      {
        v18 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v20 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
        specialized Array._endMutation()(v21);
        v17 = objc_msgSend(a2, "next");

      }
      while (v17);
      v10 = (_QWORD *)v24;
    }
    sub_100331A00(v15, a1);
    swift_unknownObjectRelease(a2);
  }
  return v10;
}

uint64_t sub_100338428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  Swift::Bool v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  uint64_t ObjectType;
  Swift::String v24;
  void *object;
  double v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  Swift::String v32;
  void *v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  Swift::String v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Enumeration.unsafeMutableAddressor(v6);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v9 = static os_log_type_t.debug.getter(v8);
  v10 = Logger.doc_isEnabled(for:)(v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v10)
    return 0;
  if ((unint64_t)a1 >> 62)
    goto LABEL_27;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= 1)
      v12 = 0;
    else
      v12 = 45;
    if (v11 <= 1)
      v13 = 0xE000000000000000;
    else
      v13 = 0xE100000000000000;
    v50 = 10;
    v51 = 0xE100000000000000;
    v14 = v13;
    String.append(_:)(*(Swift::String *)&v12);
    swift_bridgeObjectRelease(v13);
    v15 = v51;
    swift_bridgeObjectRetain(v51);
    v16._countAndFlagsBits = 9;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(v15);
    v18 = v50;
    v17 = v51;
    v19 = _swiftEmptyArrayStorage;
    if (!v11)
    {
LABEL_25:
      v50 = (uint64_t)v19;
      v38 = sub_10006922C(&qword_10064F390);
      v39 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
      v40 = BidirectionalCollection<>.joined(separator:)(601354, 0xE300000000000000, v38, v39);
      v42 = v41;
      swift_bridgeObjectRelease(v19);
      v50 = v18;
      v51 = v17;
      swift_bridgeObjectRetain(v17);
      v43._countAndFlagsBits = v40;
      v43._object = v42;
      String.append(_:)(v43);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v42);
      return v50;
    }
    v49 = _swiftEmptyArrayStorage;
    result = sub_100081774(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
      break;
    v46 = v18;
    v47 = v17;
    v21 = 0;
    v19 = v49;
    while (v11 != v21)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a1);
      }
      else
      {
        v22 = *(void **)(a1 + 8 * v21 + 32);
        swift_unknownObjectRetain(v22);
      }
      v50 = 0x203A45444F4ELL;
      v51 = 0xE600000000000000;
      ObjectType = swift_getObjectType(v22);
      v24._countAndFlagsBits = DOCNode.nodeDescription.getter(ObjectType);
      object = v24._object;
      String.append(_:)(v24);
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(object).n128_u64[0];
      v27 = v50;
      v28 = v51;
      v29 = objc_msgSend(v22, "fpfs_fpItem", v26);
      if (v29)
      {
        v30 = v29;
        v48._countAndFlagsBits = 0x203A4D455449090ALL;
        v48._object = (void *)0xE800000000000000;
        v31 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v32._countAndFlagsBits = DOCNode.nodeDescription.getter(v31);
        v33 = v32._object;
        String.append(_:)(v32);
        swift_bridgeObjectRelease(v33);
        v34 = v48._object;
        String.append(_:)(v48);
        swift_unknownObjectRelease(v22);

        swift_bridgeObjectRelease(v34);
        v27 = v50;
        v28 = v51;
      }
      else
      {
        swift_unknownObjectRelease(v22);
      }
      v49 = v19;
      v36 = v19[2];
      v35 = v19[3];
      if (v36 >= v35 >> 1)
      {
        sub_100081774(v35 > 1, v36 + 1, 1);
        v19 = v49;
      }
      ++v21;
      v19[2] = v36 + 1;
      v37 = &v19[2 * v36];
      v37[4] = v27;
      v37[5] = v28;
      if (v11 == v21)
      {
        v18 = v46;
        v17 = v47;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    if (a1 < 0)
      v44 = a1;
    else
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003387B4()
{
  return sub_1003392C4(32);
}

uint64_t sub_1003387BC()
{
  uint64_t v0;

  return sub_100335BE0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003387C4()
{
  return sub_1003392C4(32);
}

void sub_1003387CC()
{
  uint64_t v0;

  sub_100335440(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003387D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100338800()
{
  uint64_t v0;

  return sub_10033584C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10033880C()
{
  uint64_t v0;

  sub_1003342D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100338814(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  char **v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Enumeration.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  v11 = a1;
  v12 = (char *)v10;
  v13 = v11;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v34 = v15;
    v35 = v14;
    v37 = v5;
    v38 = v4;
    v16 = swift_slowAlloc(42, -1);
    v17 = (char **)swift_slowAlloc(8, -1);
    v36 = swift_slowAlloc(96, -1);
    v40 = v36;
    *(_DWORD *)v16 = 136446978;
    v18 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v18)
    {

      __break(1u);
      return;
    }
    v19 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain(*(_QWORD *)&v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8]);
    v39 = sub_1000544FC(v19, v18, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v16 + 12) = 2082;
    v39 = sub_1000544FC(0xD00000000000002ELL, 0x8000000100528A70, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    *(_WORD *)(v16 + 22) = 2112;
    v39 = (uint64_t)v12;
    v20 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    *v17 = v12;

    *(_WORD *)(v16 + 32) = 2080;
    v21 = objc_msgSend(v13, "displayName");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v39 = sub_1000544FC(v22, v24, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);

    swift_bridgeObjectRelease(v24);
    v25 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v34, "%{public}s %{public}s DOCNodeCollection (%@) observedNode: %s", (uint8_t *)v16, 0x2Au);
    v26 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v17, 1, v26);
    swift_slowDealloc(v17, -1, -1);
    v27 = v36;
    swift_arrayDestroy(v36, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v28 = &v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate]);
  if (Strong)
  {
    v30 = Strong;
    v31 = *((_QWORD *)v28 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(char *, id, uint64_t, uint64_t))(v31 + 24))(v12, v13, ObjectType, v31);
    swift_unknownObjectRelease(v30);
  }
}

uint64_t sub_100338BA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  char v19;
  BOOL v20;
  id v21;
  id v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v24;
  uint64_t v25;
  int v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v4 = a1;
  v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  v46 = a2;
  v7 = sub_1003378B8(v6, a2);
  v9 = v8;
  v10 = v2;
  swift_bridgeObjectRelease(v5);
  if (v2)
    return v7;
  if ((v9 & 1) == 0)
  {
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_87;
    v5 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
LABEL_88:
      if (v5 < 0)
        v38 = v5;
      else
        v38 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v39 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v5);
      if (v11 != v39)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v12 = v46 & 0xFFFFFFFFFFFFFF8;
      if (v46 < 0)
        v12 = v46;
      v43 = v10;
      v44 = v12;
      v45 = v46 & 0xC000000000000001;
      v42 = v4;
      while (1)
      {
        v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_76;
          if (v11 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_77;
          v14 = *(id *)(v13 + 8 * v11 + 32);
        }
        v15 = v14;
        if ((unint64_t)v46 >> 62)
        {
          swift_bridgeObjectRetain(v46);
          v16 = _CocoaArrayWrapper.endIndex.getter(v44);
          if (!v16)
            goto LABEL_24;
        }
        else
        {
          v16 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v46);
          if (!v16)
            goto LABEL_24;
        }
        if (v45)
          v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
        else
          v17 = *(id *)(v46 + 32);
        v18 = v17;
        v5 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
        v19 = static NSObject.== infix(_:_:)(v18, v15);

        if ((v19 & 1) != 0)
        {

          swift_bridgeObjectRelease(v46);
          v20 = __OFADD__(v11++, 1);
          if (v20)
            goto LABEL_78;
          goto LABEL_45;
        }
        if (v16 != 1)
        {
          if (v45)
          {
            v30 = 1;
            while (1)
            {
              v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v46);
              v4 = (uint64_t *)(v30 + 1);
              if (__OFADD__(v30, 1))
                break;
              v32 = v31;
              v10 = static NSObject.== infix(_:_:)(v31, v15);
              swift_unknownObjectRelease(v32);
              if ((v10 & 1) != 0)
                goto LABEL_61;
              ++v30;
              if (v4 == (uint64_t *)v16)
                goto LABEL_59;
            }
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          v10 = 5;
          while (1)
          {
            v4 = (uint64_t *)(v10 - 3);
            if (__OFADD__(v10 - 4, 1))
              break;
            v33 = *(id *)(v46 + 8 * v10);
            v34 = static NSObject.== infix(_:_:)(v33, v15);

            if ((v34 & 1) != 0)
            {
LABEL_61:

              swift_bridgeObjectRelease(v46);
              v4 = v42;
              v10 = v43;
              v20 = __OFADD__(v11++, 1);
              if (v20)
                goto LABEL_78;
              goto LABEL_45;
            }
            ++v10;
            if (v4 == (uint64_t *)v16)
            {
LABEL_59:

              swift_bridgeObjectRelease(v46);
              v4 = v42;
              v10 = v43;
              if (v7 != v11)
                goto LABEL_25;
              goto LABEL_43;
            }
          }
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
LABEL_24:

        swift_bridgeObjectRelease(v46);
        if (v7 == v11)
          goto LABEL_43;
LABEL_25:
        v5 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *v4);
          v5 = *v4;
          if ((*v4 & 0xC000000000000001) == 0)
            goto LABEL_29;
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_81;
          if (v7 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_82;
          v21 = *(id *)(v5 + 8 * v7 + 32);
          if ((v5 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_83;
            if (v11 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_84;
            v22 = *(id *)(v5 + 8 * v11 + 32);
            goto LABEL_32;
          }
        }
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v5);
        v5 = *v4;
LABEL_32:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v5);
        *v4 = v5;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
        {
          v5 = sub_1000818A0(v5);
          *v4 = v5;
        }
        v24 = *(void **)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v22;

        specialized Array._endMutation()(v25);
        v5 = *v4;
        v26 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
        *v4 = v5;
        if (!v26 || v5 < 0 || (v5 & 0x4000000000000000) != 0)
        {
          v5 = sub_1000818A0(v5);
          *v4 = v5;
        }
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_85;
        if (v11 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_86;
        v27 = *(void **)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20);
        *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20) = v21;

        v5 = (uint64_t)v4;
        specialized Array._endMutation()(v28);
LABEL_43:
        v20 = __OFADD__(v7++, 1);
        if (v20)
          goto LABEL_80;
        v20 = __OFADD__(v11++, 1);
        if (v20)
          goto LABEL_78;
LABEL_45:
        v5 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          if (v5 < 0)
            v35 = *v4;
          else
            v35 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v4);
          v29 = _CocoaArrayWrapper.endIndex.getter(v35);
          swift_bridgeObjectRelease(v5);
        }
        else
        {
          v29 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v11 == v29)
          return v7;
      }
    }
    return v7;
  }
  v36 = *v4;
  if (!((unint64_t)*v4 >> 62))
    return *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v36 < 0)
    v40 = *v4;
  else
    v40 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v41 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(v36);
  return v41;
}

uint64_t sub_100339074()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

double sub_100339080()
{
  uint64_t v0;

  return sub_100335104(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10033908C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003390B8()
{
  uint64_t v0;

  sub_1003336AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003390C0()
{
  return sub_1003392C4(36);
}

void sub_1003390C8()
{
  uint64_t v0;

  sub_100332D74(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_DWORD *)(v0 + 32));
}

uint64_t sub_1003390D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

double sub_100339100()
{
  uint64_t v0;

  return sub_100333270(*(_DWORD *)(v0 + 16), *(id *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10033910C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100339138()
{
  uint64_t v0;

  sub_1003322F8(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100339148()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10033916C()
{
  uint64_t v0;

  return sub_100331400(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_100339178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_10064F398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003391C0()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003391CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003391F0()
{
  uint64_t v0;

  return sub_10032F1FC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003391F8()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100339204()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100339214()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

id sub_100339220()
{
  uint64_t v0;

  return sub_10009CB64(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), "DOCFileSystemCollectionManager: Removing an inactive collection for: %s", (SEL *)&selRef_removeObject_);
}

uint64_t sub_100339248()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100339258()
{
  uint64_t v0;

  sub_10032ED24(v0);
}

unint64_t sub_100339260()
{
  unint64_t result;

  result = qword_10064F3A0;
  if (!qword_10064F3A0)
  {
    result = swift_getWitnessTable(&unk_1004E336C, &type metadata for FileSystemCollectionError);
    atomic_store(result, (unint64_t *)&qword_10064F3A0);
  }
  return result;
}

void sub_1003392A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10032E8B8(a1, a2, v2);
}

uint64_t sub_1003392AC()
{
  return sub_1003392C4(32);
}

void sub_1003392B4()
{
  uint64_t v0;

  sub_10032ECB8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003392BC()
{
  return sub_1003392C4(32);
}

uint64_t sub_1003392C4(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1003392FC(void *a1)
{
  uint64_t v1;

  return sub_10032E40C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100339304()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100339338()
{
  uint64_t v0;

  sub_10032E678(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

double sub_100339344()
{
  uint64_t v0;

  return sub_10032E3B4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10033934C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100339370()
{
  uint64_t v0;

  return sub_10032DB64(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100339378()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100339388()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003393AC()
{
  uint64_t v0;

  sub_10032DE8C(*(_QWORD *)(v0 + 16), "DOCFileSystemCollectionManager:      re-starting collection: %s", (uint64_t)sub_1000AA444, (uint64_t)&unk_1005DED70);
}

uint64_t sub_1003393DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1003393EC(char a1)
{
  return sub_10032DC00(a1);
}

void sub_1003393F4()
{
  uint64_t v0;

  sub_10032DE8C(*(_QWORD *)(v0 + 16), "DOCFileSystemCollectionManager:      stopping collection: %s", (uint64_t)sub_100339258, (uint64_t)&unk_1005DEE10);
}

uint64_t sub_100339424()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100339430()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100339440()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100339474()
{
  uint64_t *v0;

  sub_10032F6E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100339480()
{
  uint64_t v0;

  return sub_10032FC20(*(char **)(v0 + 16));
}

uint64_t sub_10033948C(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRetain(a2);
  if (!a3)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for FileSystemCollectionError(uint64_t a1)
{
  return sub_1003394BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1003394BC(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  if (!a3)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s5Files25FileSystemCollectionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10033948C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FileSystemCollectionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10033948C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1003394BC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FileSystemCollectionError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1003394BC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FileSystemCollectionError()
{
  return &type metadata for FileSystemCollectionError;
}

void sub_100339680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];
  unint64_t v34;

  v2 = v1;
  v3 = a1;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
    v7 = sub_1000835B4((unint64_t *)&qword_10064EC00, (unint64_t *)&unk_100650670, UIScene_ptr);
    v8 = Set.Iterator.init(_cocoa:)(v33, v5, v6, v7);
    v3 = v33[0];
    v30 = v33[1];
    v9 = v33[2];
    v10 = v33[3];
    v11 = v33[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  while (v3 < 0)
  {
    v20 = __CocoaSet.Iterator.next()(v8);
    if (!v20)
      goto LABEL_42;
    v21 = v20;
    v31 = v20;
    v22 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
    swift_unknownObjectRetain(v21);
    swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
    v23 = v32;
    swift_unknownObjectRelease(v21);
    v19 = v10;
    v17 = v11;
    if (!v23)
      goto LABEL_42;
LABEL_31:
    v32 = v23;
    sub_10033A3A0(&v32, &v31);

    if (v2)
    {
      sub_10021C590(v3);
      swift_bridgeObjectRelease(v34);
      return;
    }
    v26 = v31;
    if (v31)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v28 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      v8 = (_QWORD *)specialized Array._endMutation()(v16);
    }
    v10 = v19;
    v11 = v17;
  }
  if (v11)
  {
    v17 = (v11 - 1) & v11;
    v18 = __clz(__rbit64(v11)) | (v10 << 6);
    v19 = v10;
LABEL_30:
    v23 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v18);
    if (!v23)
      goto LABEL_42;
    goto LABEL_31;
  }
  v19 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v19 >= v15)
      goto LABEL_42;
    v24 = *(_QWORD *)(v30 + 8 * v19);
    if (!v24)
    {
      v25 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_42;
      v24 = *(_QWORD *)(v30 + 8 * v25);
      if (v24)
        goto LABEL_28;
      v25 = v10 + 3;
      if (v10 + 3 >= v15)
        goto LABEL_42;
      v24 = *(_QWORD *)(v30 + 8 * v25);
      if (v24)
        goto LABEL_28;
      v25 = v10 + 4;
      if (v10 + 4 >= v15)
        goto LABEL_42;
      v24 = *(_QWORD *)(v30 + 8 * v25);
      if (v24)
      {
LABEL_28:
        v19 = v25;
      }
      else
      {
        v19 = v10 + 5;
        if (v10 + 5 >= v15)
          goto LABEL_42;
        v24 = *(_QWORD *)(v30 + 8 * v19);
        if (!v24)
        {
          v29 = v10 + 6;
          while (v15 != v29)
          {
            v24 = *(_QWORD *)(v30 + 8 * v29++);
            if (v24)
            {
              v19 = v29 - 1;
              goto LABEL_29;
            }
          }
LABEL_42:
          sub_10021C590(v3);
          return;
        }
      }
    }
LABEL_29:
    v17 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v19 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1003399DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v5 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v6 = Set.Iterator.init(_cocoa:)(v34, v3, v4, v5);
    v1 = v34[0];
    v32 = v34[1];
    v7 = v34[2];
    v8 = v34[3];
    v9 = v34[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v30 = v7;
  v31 = (unint64_t)(v7 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (!v14)
    goto LABEL_39;
  v15 = v14;
  v33 = v14;
  v16 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  swift_unknownObjectRetain(v15);
  swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
  v17 = v35;
  *(_QWORD *)&v18 = swift_unknownObjectRelease(v15).n128_u64[0];
  v19 = v8;
  v20 = v9;
  if (!v17)
    goto LABEL_39;
  while (1)
  {
    v25 = objc_msgSend(v17, "activityType", v18, v30);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    if (v26 == 0xD000000000000024 && v28 == 0x80000001005198E0)
    {
      swift_bridgeObjectRelease(0x80000001005198E0);
      goto LABEL_39;
    }
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD000000000000024, 0x80000001005198E0, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
      goto LABEL_39;

    v8 = v19;
    v9 = v20;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v9)
      break;
    v20 = (v9 - 1) & v9;
    v21 = __clz(__rbit64(v9)) | (v8 << 6);
    v19 = v8;
LABEL_32:
    v17 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
    if (!v17)
      goto LABEL_39;
  }
  v22 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v22 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v22);
  v19 = v8 + 1;
  if (v23)
    goto LABEL_31;
  v19 = v8 + 2;
  if (v8 + 2 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 3;
  if (v8 + 3 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 4;
  if (v8 + 4 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 5;
  if (v8 + 5 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
  {
LABEL_31:
    v20 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_32;
  }
  v24 = v8 + 6;
  while (v31 != v24)
  {
    v23 = *(_QWORD *)(v32 + 8 * v24++);
    if (v23)
    {
      v19 = v24 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10021C590(v1);
}

void sub_100339D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v5 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v6 = Set.Iterator.init(_cocoa:)(v34, v3, v4, v5);
    v1 = v34[0];
    v32 = v34[1];
    v7 = v34[2];
    v8 = v34[3];
    v9 = v34[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v30 = v7;
  v31 = (unint64_t)(v7 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (!v14)
    goto LABEL_39;
  v15 = v14;
  v33 = v14;
  v16 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  swift_unknownObjectRetain(v15);
  swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
  v17 = v35;
  *(_QWORD *)&v18 = swift_unknownObjectRelease(v15).n128_u64[0];
  v19 = v8;
  v20 = v9;
  if (!v17)
    goto LABEL_39;
  while (1)
  {
    v25 = objc_msgSend(v17, "activityType", v18, v30);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    if (v26 == 0xD00000000000001FLL && v28 == 0x8000000100519930)
    {
      swift_bridgeObjectRelease(0x8000000100519930);
      goto LABEL_39;
    }
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD00000000000001FLL, 0x8000000100519930, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
      goto LABEL_39;

    v8 = v19;
    v9 = v20;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v9)
      break;
    v20 = (v9 - 1) & v9;
    v21 = __clz(__rbit64(v9)) | (v8 << 6);
    v19 = v8;
LABEL_32:
    v17 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
    if (!v17)
      goto LABEL_39;
  }
  v22 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v22 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v22);
  v19 = v8 + 1;
  if (v23)
    goto LABEL_31;
  v19 = v8 + 2;
  if (v8 + 2 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 3;
  if (v8 + 3 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 4;
  if (v8 + 4 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 5;
  if (v8 + 5 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
  {
LABEL_31:
    v20 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_32;
  }
  v24 = v8 + 6;
  while (v31 != v24)
  {
    v23 = *(_QWORD *)(v32 + 8 * v24++);
    if (v23)
    {
      v19 = v24 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10021C590(v1);
}

uint64_t sub_10033A0FC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  swift_errorRetain(a1);
  v11 = v10;
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v33 = v5;
    v16 = v15;
    v17 = swift_slowAlloc(8, -1);
    v30 = v13;
    v18 = (_QWORD *)v17;
    v31 = swift_slowAlloc(32, -1);
    v34 = (uint64_t)v11;
    v35 = v31;
    *(_DWORD *)v16 = 138412546;
    v19 = v11;
    v32 = v4;
    v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    v21 = v18;
    *v18 = v11;

    *(_WORD *)(v16 + 12) = 2080;
    v34 = a1;
    swift_errorRetain(a1);
    v22 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v23 = String.init<A>(describing:)(&v34, v22);
    v25 = v24;
    v34 = sub_1000544FC(v23, v24, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease(v25);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    v26 = v30;
    _os_log_impl((void *)&_mh_execute_header, v30, v14, "Unable to activate scene from requesting scene: %@ error: %s", (uint8_t *)v16, 0x16u);
    v27 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v21, 1, v27);
    swift_slowDealloc(v21, -1, -1);
    v28 = v31;
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v32);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_10033A3A0(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  NSObject *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = objc_msgSend(v9, "delegate", v6);
  if (!v10)
    goto LABEL_7;
  v11 = v10;
  v12 = type metadata accessor for QuickLookSceneDelegate(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (!v13 || (v14 = (void *)v13, *(_BYTE *)(v13 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene) != 1))
  {
    swift_unknownObjectRelease(v11);
LABEL_7:
    *a2 = 0;
    return;
  }
  v15 = Logger.Application.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15, v4);
  v16 = swift_unknownObjectRetain_n(v11, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  v33 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v32 = v17;
    v20 = v19;
    v31 = swift_slowAlloc(64, -1);
    v36 = v31;
    *(_DWORD *)v20 = 136315394;
    v29 = v20 + 4;
    v34 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528E80, &v36);
    v30 = &v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v20 + 12) = 2080;
    v29 = v20 + 14;
    swift_unknownObjectRetain(v11);
    v21 = objc_msgSend(v14, "description");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v23;
    v28 = v22;
    swift_unknownObjectRelease(v11);

    v24 = v27;
    v34 = sub_1000544FC(v28, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v30);
    swift_unknownObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "%s found existing shared scene: %s", (uint8_t *)v20, 0x16u);
    v25 = v31;
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v20, -1, -1);
    swift_unknownObjectRelease(v11);

  }
  else
  {

    swift_unknownObjectRelease_n(v11, 3);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v9;
  v26 = v9;
}

uint64_t sub_10033A66C()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  _QWORD v17[2];
  _QWORD v18[5];
  __int128 v19;
  __int128 v20;

  v1 = type metadata accessor for Logger(0);
  v2 = objc_msgSend(v0, "userInfo", __chkstk_darwin(v1));
  if (!v2)
  {
    v19 = 0u;
    v20 = 0u;
LABEL_10:
    v15 = &v19;
LABEL_11:
    sub_10007EB54((uint64_t)v15);
    return 0;
  }
  v3 = v2;
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v5 = (uint64_t *)DOCUserActivityFPItemKey.unsafeMutableAddressor();
  v7 = *v5;
  v6 = v5[1];
  v17[0] = v7;
  v17[1] = v6;
  swift_bridgeObjectRetain(v6);
  AnyHashable.init<A>(_:)(v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v8 = sub_100067654((uint64_t)v18), (v9 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v4 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  sub_100067748((uint64_t)v18);
  swift_bridgeObjectRelease(v4);
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v18, &v19, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
    return 0;
  v10 = v18[0];
  v11 = v18[1];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v12 = sub_10006922C((uint64_t *)&unk_100647C70);
  v13 = swift_allocObject(v12, 40, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  *(_QWORD *)(v13 + 32) = v14;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v18, v13, v10, v11);
  swift_bridgeObjectRelease(v13);
  sub_1000D4C00(v10, v11);
  if (!v18[3])
  {
    v15 = (__int128 *)v18;
    goto LABEL_11;
  }
  if (swift_dynamicCast(&v19, v18, (char *)&type metadata for Any + 8, v14, 6))
    return v19;
  else
    return 0;
}

uint64_t sub_10033AA7C()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  _QWORD v14[2];
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v1 = type metadata accessor for Logger(0);
  v2 = objc_msgSend(v0, "userInfo", __chkstk_darwin(v1));
  if (!v2)
  {
    v16 = 0u;
    v17 = 0u;
LABEL_10:
    v12 = &v16;
LABEL_11:
    sub_10007EB54((uint64_t)v12);
    return 0;
  }
  v3 = v2;
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v14[0] = 0xD00000000000001ELL;
  v14[1] = 0x80000001005196A0;
  AnyHashable.init<A>(_:)(v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100067654((uint64_t)v15), (v6 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_100067748((uint64_t)v15);
  swift_bridgeObjectRelease(v4);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v15, &v16, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
    return 0;
  v7 = v15[0];
  v8 = v15[1];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v9 = sub_10006922C((uint64_t *)&unk_100647C70);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
  *(_QWORD *)(v10 + 32) = v11;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v15, v10, v7, v8);
  swift_bridgeObjectRelease(v10);
  sub_1000D4C00(v7, v8);
  if (!v15[3])
  {
    v12 = (__int128 *)v15;
    goto LABEL_11;
  }
  if (swift_dynamicCast(&v16, v15, (char *)&type metadata for Any + 8, v11, 6))
    return v16;
  else
    return 0;
}

uint64_t sub_10033AE9C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _BYTE v7[40];
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, "userInfo");
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_10:
    sub_10007EB54((uint64_t)&v8);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v8 = 0xD000000000000019;
  *((_QWORD *)&v8 + 1) = 0x80000001005196C0;
  AnyHashable.init<A>(_:)(&v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_100067654((uint64_t)v7), (v5 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_100067748((uint64_t)v7);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v7, &v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
    return v7[0];
  return 0;
}

void sub_10033AFC8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t aBlock[3];
  void *v51;
  unint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  v11 = a1;
  v12 = v10;
  v13 = v11;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(32, -1);
    v43 = (uint64_t)a2;
    v18 = v17;
    v47 = swift_slowAlloc(96, -1);
    aBlock[0] = v47;
    *(_DWORD *)v18 = 136315650;
    v19 = sub_1000544FC(0xD000000000000022, 0x8000000100528E50, aBlock);
    v48 = v12;
    v49 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, aBlock);
    *(_WORD *)(v18 + 12) = 2080;
    v20 = v13;
    v44 = v16;
    v21 = v20;
    v22 = objc_msgSend(v20, "description");
    v46 = v5;
    v23 = v22;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v45 = v4;
    v26 = v25;

    v49 = sub_1000544FC(v24, v26, aBlock);
    v12 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, aBlock);

    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v18 + 22) = 2080;
    v49 = v43;
    v27 = v12;
    v28 = sub_10006922C(&qword_10064F3C8);
    v29 = String.init<A>(describing:)(&v49, v28);
    v31 = v30;
    v49 = sub_1000544FC(v29, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, aBlock);

    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v44, "%s scene: %s requestingScene: %s", (uint8_t *)v18, 0x20u);
    v32 = v47;
    swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v45);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v33 = objc_msgSend(objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions), "init");
  objc_msgSend(v33, "setRequestingScene:", v12);
  v51 = (void *)type metadata accessor for _UIWindowScenePreservedPlacement(0);
  v52 = sub_10033B40C();
  sub_10006CBAC(aBlock);
  _UIWindowScenePreservedPlacement.init()();
  UIWindowSceneActivationRequestOptions.placement.setter(aBlock);
  v34 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v35 = objc_msgSend(v13, "session");
  v36 = swift_allocObject(&unk_1005DF118, 24, 7);
  *(_QWORD *)(v36 + 16) = v13;
  v37 = swift_allocObject(&unk_1005DF140, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_10033B478;
  *(_QWORD *)(v37 + 24) = v36;
  v52 = (unint64_t)sub_100066584;
  v53 = v37;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000602CC;
  v51 = &unk_1005DF158;
  v38 = _Block_copy(aBlock);
  v39 = v53;
  v40 = v13;
  v41 = v33;
  swift_release(v39);
  objc_msgSend(v34, "requestSceneSessionActivation:userActivity:options:errorHandler:", v35, 0, v41, v38);
  _Block_release(v38);

}

unint64_t sub_10033B40C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10064F3C0;
  if (!qword_10064F3C0)
  {
    v1 = type metadata accessor for _UIWindowScenePreservedPlacement(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for _UIWindowScenePreservedPlacement, v1);
    atomic_store(result, (unint64_t *)&qword_10064F3C0);
  }
  return result;
}

uint64_t sub_10033B454()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033B478(uint64_t a1)
{
  uint64_t v1;

  return sub_10033A0FC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10033B480()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10033B4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43[2];

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - v5;
  v8 = Logger.Application.unsafeMutableAddressor(v7);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v10 = v9(v6, v8, v0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v41 = (char *)v8;
  if (v13)
  {
    v40 = (void (*)(char *, uint64_t))v0;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v43[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v42 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528E80, v43);
    v0 = (uint64_t)v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v16(v6, v0);
  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v18 = objc_msgSend(v17, "connectedScenes");

  v19 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
  v20 = sub_1000835B4((unint64_t *)&qword_10064EC00, (unint64_t *)&unk_100650670, UIScene_ptr);
  v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v18, v19, v20);

  sub_100339680(v21);
  v23 = v22;
  v24 = swift_bridgeObjectRelease(v21);
  if (!((unint64_t)v23 >> 62))
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25 < 2)
      goto LABEL_8;
    goto LABEL_5;
  }
  if (v23 < 0)
    v38 = v23;
  else
    v38 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v25 = _CocoaArrayWrapper.endIndex.getter(v38);
  v24 = swift_bridgeObjectRelease(v23);
  if (v25 >= 2)
  {
LABEL_5:
    ((void (*)(char *, char *, uint64_t, __n128))v9)(v3, v41, v0, v24);
    v26 = swift_bridgeObjectRetain_n(v23, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(32, -1);
      v39 = swift_slowAlloc(64, -1);
      v43[0] = v39;
      *(_DWORD *)v29 = 136315650;
      v41 = v3;
      v42 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100528E80, v43);
      v40 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
      *(_WORD *)(v29 + 12) = 2048;
      v42 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
      *(_WORD *)(v29 + 22) = 2080;
      v30 = swift_bridgeObjectRetain(v23);
      v31 = Array.description.getter(v30, v19);
      v33 = v32;
      swift_bridgeObjectRelease(v23);
      v42 = sub_1000544FC(v31, v33, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
      swift_bridgeObjectRelease_n(v23, 2);
      swift_bridgeObjectRelease(v33);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s found %ld scenes. There should only be 1. Scenes: %s", (uint8_t *)v29, 0x20u);
      v34 = v39;
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      v40(v41, v0);
    }
    else
    {

      swift_bridgeObjectRelease_n(v23, 2);
      v16(v3, v0);
    }
  }
LABEL_8:
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v35 = v23;
    else
      v35 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v23);
    if (!v36)
      goto LABEL_18;
  }
  else if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_18;
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
    goto LABEL_18;
  }
  if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v37 = *(id *)(v23 + 32);
LABEL_18:
    swift_bridgeObjectRelease(v23);
    return;
  }
  __break(1u);
}

uint64_t sub_10033B9C0()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t result;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13[24];

  v1 = (char *)sub_10033BC84();
  v2 = &v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v13, 0, 0);
  v3 = *(_QWORD *)v2;
  swift_bridgeObjectRetain(v3);

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v4)
    return 0;
  v7 = objc_msgSend(v0, "text", v5);
  if (!v7)
    return 1;

  result = (uint64_t)objc_msgSend(v0, "text");
  if (result)
  {
    v8 = (void *)result;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v11 = v10;

    swift_bridgeObjectRelease(v11);
    v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v12 = v9 & 0xFFFFFFFFFFFFLL;
    return v12 == 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10033BAB0(uint64_t a1)
{
  void *v1;
  void *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id result;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  double v22;
  char v23[24];
  char v24[24];
  char v25[24];

  v2 = v1;
  v4 = (char *)sub_10033BC84();
  v5 = &v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v25, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = a1;
  swift_bridgeObjectRelease(v6);
  sub_10033DC2C();

  v7 = (void *)sub_10033BC84();
  objc_msgSend(v7, "systemLayoutSizeFittingSize:", 0.0, 0.0);
  v9 = v8;
  v11 = v10;

  v12 = (void *)sub_10033BC84();
  objc_msgSend(v12, "setFrame:", 0.0, 0.0, v9, v11);

  result = objc_msgSend(v2, "_placeholderLabel");
  if (result)
  {
    v14 = result;
    v15 = (char *)sub_10033BC84();
    v16 = &v15[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v15[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v24, 0, 0);
    v17 = *(_QWORD *)v16;
    swift_bridgeObjectRetain(v17);

    objc_msgSend(v14, "setHidden:", *(_QWORD *)(v17 + 16) != 0, swift_bridgeObjectRelease(v17).n128_f64[0]);
    v18 = (char *)sub_10033BC84();
    v19 = &v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v23, 0, 0);
    v20 = *(_QWORD *)v19;
    swift_bridgeObjectRetain(v20);

    v21 = *(char **)(v20 + 16);
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
    if (v21)
      v21 = sub_10033BF4C();
    objc_msgSend(v2, "setLeftView:", v21, v22);

    return objc_msgSend(v2, "setNeedsLayout");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10033BC84()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  void *v24;
  id v25;
  char *v26;
  id v27;

  v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView];
LABEL_22:
    v25 = v2;
    return (uint64_t)v3;
  }
  v4 = type metadata accessor for DOCTokenChainView();
  v5 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  v6 = &v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate];
  *((_QWORD *)v6 + 1) = &off_1005DF210;
  swift_unknownObjectWeakAssign(v6, v0);
  swift_unknownObjectWeakAssign(&v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield], v0);
  v7 = objc_msgSend(v0, "font");
  v8 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
  v9 = *(void **)&v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font];
  *(_QWORD *)&v5[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = v7;
  v27 = v7;

  v26 = v5;
  v10 = objc_msgSend(v26, "arrangedSubviews");
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease_n(v12, 2);

    v21 = qword_100641038;
    v22 = v26;
    if (v21 != -1)
      swift_once(&qword_100641038, sub_10033CA1C);
    v23 = *(double *)&qword_10064F418;
    if (qword_100641008 != -1)
      swift_once(&qword_100641008, sub_10033C988);
    objc_msgSend(v22, "setLayoutMargins:", 0.0, v23 - *(double *)&qword_10064F3D8, 0.0, 7.0);

    objc_msgSend(v22, "setLayoutMarginsRelativeArrangement:", 1);
    v24 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v22;
    v3 = v22;

    v2 = 0;
    goto LABEL_22;
  }
  if (v12 < 0)
    v20 = v12;
  else
    v20 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  result = _CocoaArrayWrapper.endIndex.getter(v20);
  v13 = result;
  if (!result)
    goto LABEL_17;
LABEL_5:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      else
        v16 = *(id *)(v12 + 8 * i + 32);
      v17 = v16;
      v18 = type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      v19 = (void *)swift_dynamicCastClass(v17, v18);
      if (v19)
        objc_msgSend(v19, "setFont:", *(_QWORD *)&v5[v8]);

    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

char *sub_10033BF4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  }
  else
  {
    v4 = v0;
    v5 = (void *)sub_10033BC84();
    v6 = objc_allocWithZone((Class)type metadata accessor for DOCTrailingVisibilityContainerView());
    v7 = sub_10033E878(v5);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_10033BFCC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel];
LABEL_5:
    v8 = v2;
    return v3;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  result = objc_msgSend(v0, "_fieldEditor");
  if (result)
  {
    v6 = result;
    objc_msgSend(result, "addSubview:", v4);

    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10033C088()
{
  void *v0;
  char *v1;
  NSString v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  double v15;
  id v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22[24];

  objc_msgSend(v0, "setDelegate:", v0);
  v1 = sub_10033BF4C();
  objc_msgSend(v0, "setLeftView:", v1);

  objc_msgSend(v0, "setLeftViewMode:", 3);
  objc_msgSend(v0, "setClipsToBounds:", 1);
  objc_msgSend(v0, "setAutocorrectionType:", 1);
  objc_msgSend(v0, "addTarget:action:forControlEvents:", v0, "textDidChange:", 0x20000);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setPlaceholder:", v2);

  v3 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleTitle2);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v3, 0.0);
  objc_msgSend(v0, "setFont:", v4);

  v5 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.075);

  objc_msgSend(v0, "setBackgroundColor:", v6);
  v7 = objc_msgSend(v0, "layer");
  objc_msgSend(v7, "setCornerCurve:", kCACornerCurveContinuous);

  v8 = objc_msgSend(v0, "layer");
  if (qword_100641028 != -1)
    swift_once(&qword_100641028, sub_10033C9FC);
  objc_msgSend(v8, "setCornerRadius:", *(double *)&qword_10064F408);

  objc_msgSend(v0, "setBorderStyle:", 0);
  v9 = objc_msgSend(v0, "heightAnchor");
  if (qword_100641030 != -1)
    swift_once(&qword_100641030, sub_10033CA0C);
  v10 = objc_msgSend(v9, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10064F410);

  objc_msgSend(v10, "setActive:", 1);
  v11 = (char *)sub_10033BC84();
  v12 = &v11[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v11[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v22, 0, 0);
  v13 = *(_QWORD *)v12;
  swift_bridgeObjectRetain(v13);

  v14 = *(char **)(v13 + 16);
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
  if (v14)
    v14 = sub_10033BF4C();
  objc_msgSend(v0, "setLeftView:", v14, v15);

  objc_msgSend(v0, "setNeedsLayout");
  v16 = objc_msgSend(v0, "_placeholderLabel");
  if (v16)
  {
    v17 = v16;
    v18 = (char *)sub_10033BC84();
    v19 = &v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], &v21, 0, 0);
    v20 = *(_QWORD *)v19;
    swift_bridgeObjectRetain(v20);

    objc_msgSend(v17, "setHidden:", *(_QWORD *)(v20 + 16) != 0, swift_bridgeObjectRelease(v20).n128_f64[0]);
  }
  else
  {
    __break(1u);
  }
}

void sub_10033C46C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *object;
  Swift::String v13;
  void *v14;
  Swift::Bool v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  double v77;
  double v78;
  id v79;
  void *v80;
  double v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[4];

  v1 = v0;
  v2 = objc_msgSend(v0, "text");
  if (!v2)
    goto LABEL_15;
  v3 = v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v6 = v5;

  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField_dataSource]);
  if (!Strong || (v8 = Strong, v9 = sub_10025BDF0(v1), v11 = v10, swift_unknownObjectRelease(v8), !v11))
  {
    v83 = v6;
LABEL_14:
    swift_bridgeObjectRelease(v83);
LABEL_15:
    v84 = sub_10033BFCC();
    objc_msgSend(v84, "setHidden:", 1);

    return;
  }
  object = String.lowercased()()._object;
  v13 = String.lowercased()();
  v14 = v13._object;
  v15 = String.hasPrefix(_:)(v13);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v14);
  if (!v15)
  {
    swift_bridgeObjectRelease(v6);
    v83 = v11;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain(v11);
  v16 = String.count.getter(v4, v6);
  v17 = String.index(_:offsetBy:)(15, v16, v9, v11);
  swift_bridgeObjectRelease(v11);
  v18 = sub_100340120(v17, v9, v11);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRetain(v6);
  v25 = String.count.getter(v4, v6);
  swift_bridgeObjectRelease(v6);
  v26 = sub_100087794(v25, v4, v6);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  swift_bridgeObjectRelease(v6);
  v87[0] = v18;
  v87[1] = v20;
  v87[2] = v22;
  v87[3] = v24;
  swift_bridgeObjectRetain(v24);
  v85 = static String._fromSubstring(_:)(v26, v28, v30, v32);
  v86 = v33;
  v34 = sub_1003408BC();
  String.append<A>(contentsOf:)(v87, &type metadata for Substring, v34);
  v35 = Substring.init(_:)(v85, v86);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease_n(v24, 2);
  v42 = static String._fromSubstring(_:)(v35, v37, v39, v41);
  v44 = v43;
  swift_bridgeObjectRelease(v41);
  v45 = sub_10033BFCC();
  objc_msgSend(v1, "bounds");
  objc_msgSend(v1, "textRectForBounds:");
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = objc_msgSend(v1, "_fieldEditor");
  objc_msgSend(v1, "convertRect:toView:", v54, v47, v49, v51, v53);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v62 = v61;

  objc_msgSend(v45, "setFrame:", v56, v58, v60, v62);
  v63 = sub_10033BFCC();
  objc_msgSend(v63, "setHidden:", 0);

  v64 = sub_10033BFCC();
  v65 = String._bridgeToObjectiveC()();
  objc_msgSend(v64, "setText:", v65);

  v66 = sub_10033BFCC();
  v67 = objc_msgSend(v1, "_placeholderLabel");
  if (!v67)
  {
    __break(1u);
    goto LABEL_17;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, "font");

  objc_msgSend(v66, "setFont:", v69);
  v70 = sub_10033BFCC();
  v71 = objc_msgSend(v1, "_placeholderLabel");
  if (!v71)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v72 = v71;
  v73 = objc_msgSend(v71, "textColor");

  objc_msgSend(v70, "setTextColor:", v73);
  v74 = sub_10033BFCC();
  v75 = objc_msgSend(v1, "_placeholderLabel");
  if (!v75)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v76 = v75;
  objc_msgSend(v75, "alpha");
  v78 = v77;

  objc_msgSend(v74, "setAlpha:", v78);
  v79 = objc_msgSend(v1, "_placeholderLabel");
  if (!v79)
  {
LABEL_19:
    __break(1u);
    return;
  }
  v80 = v79;
  *(_QWORD *)&v81 = swift_bridgeObjectRelease(v44).n128_u64[0];
  v82 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0)
    v82 = v42 & 0xFFFFFFFFFFFFLL;
  objc_msgSend(v80, "setHidden:", v82 != 0, v81);

}

double sub_10033C988()
{
  double result;

  result = 4.0;
  unk_10064F3D0 = xmmword_1004E3530;
  unk_10064F3E0 = xmmword_1004E3530;
  return result;
}

id sub_10033C9A0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  qword_10064F3F0 = (uint64_t)result;
  return result;
}

void sub_10033C9D8()
{
  qword_10064F3F8 = 0x4040000000000000;
}

void sub_10033C9E8()
{
  qword_10064F400 = 0x406F400000000000;
}

void sub_10033C9FC()
{
  qword_10064F408 = 0x4020000000000000;
}

void sub_10033CA0C()
{
  qword_10064F410 = 0x404B000000000000;
}

void sub_10033CA1C()
{
  qword_10064F418 = 0x402A000000000000;
}

void sub_10033CA2C()
{
  qword_10064F420 = 0x4049000000000000;
}

id sub_10033CC34()
{
  return sub_1001405E0(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator);
}

id sub_10033CC44()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  char **v6;
  id v7;
  id v8;

  if (objc_msgSend(v0, "isHighlighted"))
  {
    if (qword_100641010 != -1)
      swift_once(&qword_100641010, sub_10033C9A0);
    v1 = (id)qword_10064F3F0;
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  v2 = v1;
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerCurve:", kCACornerCurveContinuous);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "setMasksToBounds:", 1);

  LODWORD(v4) = objc_msgSend(v0, "isHighlighted");
  v5 = (void *)objc_opt_self(UIColor);
  v6 = &selRef_lightTextColor;
  if (!(_DWORD)v4)
    v6 = &selRef_labelColor;
  v7 = objc_msgSend(v5, *v6);
  objc_msgSend(v0, "setTextColor:", v7);

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v0, "setHighlightedTextColor:", v8);

  return objc_msgSend(v0, "setNumberOfLines:", 1);
}

id sub_10033D044()
{
  return sub_1001405E0(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView);
}

id sub_10033D054(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v9 = &v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield]);
  v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for DOCTokenChainView();
  v10 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v10, "setAlignment:", 3);
  v11 = objc_msgSend(v10, "heightAnchor");
  if (qword_100641018 != -1)
    swift_once(&qword_100641018, sub_10033C9D8);
  v12 = objc_msgSend(v11, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10064F3F8);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v10, "tap:");
  objc_msgSend(v10, "addGestureRecognizer:", v13);

  return v10;
}

void sub_10033D270()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  objc_super v15;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (id *)((char *)&v15.receiver - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = v11;
  sub_10033D39C((uint64_t)v1);
  v12 = *(_QWORD *)&v1[v8];
  v10 = __OFSUB__(v12, 1);
  v13 = v12 - 1;
  if (!v10)
  {
    *(_QWORD *)&v1[v8] = v13;
    sub_10033DC2C();
    v14 = (objc_class *)type metadata accessor for DOCTokenChainView();
    v15.receiver = v1;
    v15.super_class = v14;
    objc_msgSendSuper2(&v15, "becomeFirstResponder");
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_10033D39C(uint64_t a1)
{
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  int v12;
  _BYTE v13[24];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield);
  if (Strong
    && (v3 = Strong, v4 = objc_msgSend(Strong, "text"), v3, v4))
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    swift_bridgeObjectRelease(v7);
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    v9 = v8 != 0;
  }
  else
  {
    v9 = 0;
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron) = v9;
  sub_10033DC2C();
  v10 = a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens, v13, 0, 0);
  v11 = *(_QWORD *)(*(_QWORD *)v10 + 16) != 0;
  v12 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = v11;
  if (v12 != v11)
    sub_10033DC2C();
}

void sub_10033D4C8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  objc_class *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (id *)((char *)&v16.receiver - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (objc_class *)type metadata accessor for DOCTokenChainView();
  v16.receiver = v0;
  v16.super_class = v6;
  objc_msgSendSuper2(&v16, "resignFirstResponder");
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v8 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = v12;
  v13 = v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
  v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  if (v13)
    sub_10033DC2C();
  v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  sub_10033DC2C();
  v14 = *(_QWORD *)&v1[v9];
  v11 = __OFSUB__(v14, 1);
  v15 = v14 - 1;
  if (!v11)
  {
    *(_QWORD *)&v1[v9] = v15;
    sub_10033DC2C();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10033D664()
{
  void *v0;
  id v1;
  NSString *const *v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v2 = &UIKeyInputLeftArrow;
  if (v1 != (id)1)
    v2 = &UIKeyInputRightArrow;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend((id)objc_opt_self(UIKeyCommand), "keyCommandWithInput:modifierFlags:action:", v5, 0, "directionKeyCommand:");

  objc_msgSend(v6, "setWantsPriorityOverSystemBehavior:", 1);
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = v8;
  specialized Array._endMutation()(v8);
  return v10;
}

double sub_10033D758(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[3];
  uint64_t v19;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = 2;
  if (v3 != 2)
    sub_10033DC2C();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1000685A8(a1, (uint64_t)v18);
    if (v19)
    {
      v7 = sub_10004F2F0(0, (unint64_t *)&unk_10064F650, UITextField_ptr);
      if ((swift_dynamicCast(&v17, v18, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
      {
        v8 = v17;
        if ((static NSObject.== infix(_:_:)(v17, v6) & 1) != 0)
        {

        }
        else
        {
          sub_1000685A8(a1, (uint64_t)v18);
          v9 = v19;
          if (v19)
          {
            v10 = sub_10007E7A0(v18, v19);
            v11 = *(_QWORD *)(v9 - 8);
            v12 = __chkstk_darwin(v10);
            v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v11 + 16))(v14, v12);
            v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
            (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
            sub_100068588(v18);
          }
          else
          {
            v15 = 0;
          }
          objc_msgSend(v6, "selectAll:", v15);

          *(_QWORD *)&result = swift_unknownObjectRelease(v15).n128_u64[0];
        }
      }
      else
      {

      }
    }
    else
    {

      sub_10007EB54((uint64_t)v18);
    }
  }
  return result;
}

void sub_10033D970()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  NSString v21;
  _BYTE v22[24];
  _BYTE v23[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens, v23, 0, 0);
  if (!*(_QWORD *)(*v2 + 16))
    goto LABEL_6;
  swift_beginAccess(v2, v22, 33, 0);
  v3 = (_QWORD *)*v2;
  if (!*(_QWORD *)(*v2 + 16))
  {
    __break(1u);
LABEL_16:
    v3 = sub_100452E80(v3);
    v4 = v3[2];
    if (v4)
      goto LABEL_5;
LABEL_17:
    __break(1u);
    return;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    goto LABEL_16;
  v4 = v3[2];
  if (!v4)
    goto LABEL_17;
LABEL_5:
  v5 = v4 - 1;
  sub_100068588(&v3[5 * v4 - 1]);
  v3[2] = v5;
  *v2 = v3;
  swift_endAccess(v22);
  sub_10033DC2C();
LABEL_6:
  sub_10033DC2C();
  v6 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType(Strong);
    v11 = *v2;
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 8);
    v13 = swift_bridgeObjectRetain(v11);
    v12(v1, v11, ObjectType, v9, v13);
    swift_bridgeObjectRelease(v11);
    swift_unknownObjectRelease(v8);
  }
  v14 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield;
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setText:", 0);

  }
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v14);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "becomeFirstResponder");

  }
  v19 = swift_unknownObjectWeakLoadStrong(v14);
  if (v19)
  {
    v20 = (void *)v19;
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "insertText:", v21);

  }
}

void sub_10033DC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  id v40;
  _BOOL8 v41;
  uint64_t v42;
  _BOOL8 v43;
  BOOL v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t i;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  double v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  __int128 *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  _QWORD v71[5];
  char v72[32];

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_1006492B0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIHoverHighlightEffect(0, v3);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount))
    return;
  v65 = v7;
  v11 = objc_msgSend((id)v1, "arrangedSubviews", v8);
  v56 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v56);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v17 = v12;
    else
      v17 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v13)
      goto LABEL_14;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (!v13)
      goto LABEL_14;
  }
  if (v13 < 1)
  {
    __break(1u);
LABEL_53:
    __break(1u);
    return;
  }
  v14 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
    else
      v15 = *(id *)(v12 + 8 * v14 + 32);
    v16 = v15;
    ++v14;
    objc_msgSend((id)v1, "removeArrangedSubview:", v15);
    objc_msgSend(v16, "removeFromSuperview");

  }
  while (v13 != v14);
LABEL_14:
  swift_bridgeObjectRelease_n(v12, 2);
  v64 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection))
  {
    objc_msgSend((id)v1, "setHoverStyle:", 0);
  }
  else
  {
    sub_10004F2F0(0, &qword_100649070, UIHoverStyle_ptr);
    v18 = static UIHoverEffect<>.highlight.getter();
    static UIShape.capsule.getter(v18);
    v19 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 0, 1, v19);
    v20 = (void *)UIHoverStyle.init<A>(effect:shape:)(v10, v5, v65, &protocol witness table for UIHoverHighlightEffect);
    objc_msgSend((id)v1, "setHoverStyle:", v20);

  }
  v21 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens, v72, 0, 0);
  v65 = v21;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(*(_QWORD *)v21 + 16);
  v24 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron;
  v63 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
  v59 = v22 + 32;
  v58 = (__int128 *)&v66;
  v57 = (uint64_t)&v67 + 8;
  v62 = (__int128 *)v71;
  v60 = v22;
  swift_bridgeObjectRetain(v22);
  v25 = 0;
  v61 = (_BYTE *)(v1 + v24);
  if (v23)
    goto LABEL_20;
LABEL_22:
  v68 = 0u;
  v69 = 0u;
  v25 = v23;
  v67 = 0u;
  while (1)
  {
    sub_100340740((uint64_t)&v67, (uint64_t)&v70);
    if (!v71[3])
      break;
    v29 = v70;
    sub_1000E85C4(v62, (uint64_t)&v67);
    v30 = type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    v31 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v30)), "init");
    objc_msgSend(v31, "setFont:", *(_QWORD *)(v1 + v63));
    v33 = *((_QWORD *)&v68 + 1);
    v32 = v69;
    sub_10007E7A0(&v67, *((uint64_t *)&v68 + 1));
    v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v35 = v31;
    v34(v33, v32);
    v37 = v36;
    v38 = String._bridgeToObjectiveC()();
    objc_msgSend(v35, "setText:", v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

    v39 = objc_msgSend(v35, "widthAnchor");
    if (qword_100641020 != -1)
      swift_once(&qword_100641020, sub_10033C9E8);
    v40 = objc_msgSend(v39, "constraintLessThanOrEqualToConstant:", *(double *)&qword_10064F400);

    v41 = 1;
    objc_msgSend(v40, "setActive:", 1);

    objc_msgSend(v35, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v35, "setLineBreakMode:", 5);
    if (*(_BYTE *)(v1 + v64))
    {
      if (*(_BYTE *)(v1 + v64) == 1)
        v41 = v29 == *(_QWORD *)(*(_QWORD *)v65 + 16) - 1;
      objc_msgSend(v35, "setHighlighted:", v41);
    }
    objc_msgSend((id)v1, "addArrangedSubview:", v35);
    v42 = *(_QWORD *)(*(_QWORD *)v65 + 16);
    v43 = (*v61 & 1) == 0;
    v44 = __OFSUB__(v42, v43);
    v45 = v42 - v43;
    if (v44)
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v29 < v45)
    {
      sub_10033E5B4();
      v27 = v26;
      objc_msgSend((id)v1, "addArrangedSubview:", v26);

      sub_100068588(&v67);
      if (v25 == v23)
        goto LABEL_22;
    }
    else
    {
      sub_100068588(&v67);

      if (v25 == v23)
        goto LABEL_22;
    }
LABEL_20:
    if (v25 >= *(_QWORD *)(v60 + 16))
      goto LABEL_45;
    v28 = v58;
    sub_100092328(v59 + 40 * v25, (uint64_t)v58);
    *(_QWORD *)&v67 = v25;
    sub_1000E85C4(v28, v57);
    ++v25;
  }
  v46 = objc_msgSend((id)v1, "arrangedSubviews", swift_bridgeObjectRelease(v60).n128_f64[0]);
  v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v56);

  if (!((unint64_t)v1 >> 62))
  {
    v47 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (!v47)
      goto LABEL_50;
    goto LABEL_36;
  }
LABEL_46:
  if (v1 < 0)
    v55 = v1;
  else
    v55 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v47 = _CocoaArrayWrapper.endIndex.getter(v55);
  if (!v47)
    goto LABEL_50;
LABEL_36:
  if (v47 < 1)
    goto LABEL_53;
  for (i = 0; i != v47; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
    else
      v49 = *(id *)(v1 + 8 * i + 32);
    v50 = v49;
    v51 = type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    v52 = (void *)swift_dynamicCastClass(v50, v51);
    if (v52)
    {
      v54 = v52;
      LODWORD(v53) = 1148846080;
      objc_msgSend(v52, "setContentHuggingPriority:forAxis:", 0, v53);
      objc_msgSend(v54, "sizeToFit");
    }

  }
LABEL_50:
  swift_bridgeObjectRelease_n(v1, 2);
}

void sub_10033E33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v25;
  void *v26;
  void *v27;
  _BYTE v28[24];
  char v29[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens, v29, 1, 0);
  if (!*(_QWORD *)(*v6 + 16))
    return;
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v8 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v2 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  v9 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount) = v11;
  v5 = (_QWORD *)OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection;
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection))
    goto LABEL_13;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) != 1)
  {
    v14 = *v6;
    *v6 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v14);
    goto LABEL_11;
  }
  swift_beginAccess(v6, v28, 33, 0);
  v8 = *v6;
  if (!*(_QWORD *)(*v6 + 16))
    goto LABEL_22;
  if ((swift_isUniquelyReferenced_nonNull_native(*v6) & 1) == 0)
    goto LABEL_23;
  v12 = *(_QWORD *)(v8 + 16);
  if (v12)
  {
    while (1)
    {
      v13 = v12 - 1;
      sub_100068588((_QWORD *)(v8 + 40 * (v12 - 1) + 32));
      *(_QWORD *)(v8 + 16) = v13;
      *v6 = v8;
      swift_endAccess(v28);
LABEL_11:
      v8 = v1;
      sub_10033DC2C();
      v15 = *((unsigned __int8 *)v5 + v1);
      *((_BYTE *)v5 + v1) = 0;
      if (v15)
      {
        v8 = v1;
        sub_10033DC2C();
      }
LABEL_13:
      v16 = *(_QWORD *)(v1 + v2);
      v10 = __OFSUB__(v16, 1);
      v17 = v16 - 1;
      if (!v10)
        break;
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      v8 = (uint64_t)sub_100452E80((_QWORD *)v8);
      v12 = *(_QWORD *)(v8 + 16);
      if (!v12)
        goto LABEL_24;
    }
    *(_QWORD *)(v1 + v2) = v17;
    sub_10033DC2C();
    v18 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate);
    if (Strong)
    {
      v20 = Strong;
      v21 = *(_QWORD *)(v18 + 8);
      ObjectType = swift_getObjectType(Strong);
      v23 = *v6;
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 8);
      v25 = swift_bridgeObjectRetain(v23);
      v24(v1, v23, ObjectType, v21, v25);
      swift_bridgeObjectRelease(v23);
      swift_unknownObjectRelease(v20);
    }
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "becomeFirstResponder");

    }
  }
  else
  {
LABEL_24:
    __break(1u);
  }
}

void sub_10033E5B4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  char *v13;

  v1 = type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  objc_msgSend(v2, "setFont:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font));
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v3);

  if (v5)
  {
    v6 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v5);

    v7 = sub_10004F2F0(0, (unint64_t *)&qword_100643F10, NSMutableAttributedString_ptr);
    v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v7), "attributedStringWithAttachment:", v6);
    objc_msgSend(v2, "setAttributedText:", v8);
    v9 = (void *)objc_opt_self(UIColor);
    v10 = v2;
    v11 = objc_msgSend(v9, "tertiaryLabelColor");
    objc_msgSend(v10, "setTextColor:", v11);

    v12 = (char *)v10;
    objc_msgSend(v12, "setAdjustsFontForContentSizeCategory:", 1);

    v13 = &v12[OBJC_IVAR____TtCC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView16DOCTextTokenView_padding];
    *(_OWORD *)v13 = xmmword_1004E3540;
    *((_OWORD *)v13 + 1) = xmmword_1004E3540;
  }
  else
  {
    __break(1u);
  }
}

id sub_10033E7B0()
{
  return sub_1001405E0(0, type metadata accessor for DOCTokenChainView);
}

uint64_t type metadata accessor for DOCTokenChainView()
{
  return objc_opt_self(_TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView);
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView()
{
  return objc_opt_self(_TtCC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView16DOCTextTokenView);
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator()
{
  return objc_opt_self(_TtCCC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView16DOCTextTokenView9Separator);
}

char *sub_10033E878(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  Class isa;
  objc_super v30;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_containedView] = a1;
  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for DOCTrailingVisibilityContainerView();
  v3 = a1;
  v4 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "addSubview:", v3);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v3, "leadingAnchor");
  v6 = objc_msgSend(v4, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  LODWORD(v8) = 1132068864;
  objc_msgSend(v7, "setPriority:", v8);
  v9 = objc_msgSend(v4, "widthAnchor");
  v10 = objc_msgSend(v9, "constraintLessThanOrEqualToConstant:", 200.0);

  v11 = *(void **)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints];
  *(_QWORD *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints] = v10;
  v12 = v10;

  v13 = (void *)objc_opt_self(NSLayoutConstraint);
  v14 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004D9710;
  v16 = objc_msgSend(v3, "topAnchor");
  v17 = objc_msgSend(v4, "topAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = objc_msgSend(v3, "bottomAnchor");
  v20 = objc_msgSend(v4, "bottomAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v15 + 40) = v21;
  v22 = objc_msgSend(v3, "trailingAnchor");
  v23 = objc_msgSend(v4, "trailingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v15 + 48) = v24;
  *(_QWORD *)(v15 + 56) = v7;
  *(_QWORD *)(v15 + 64) = v12;
  specialized Array._endMutation()(v25);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v26 = v12;
  v27 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  return v4;
}

id sub_10033EC78()
{
  return sub_1001405E0(0, type metadata accessor for DOCTrailingVisibilityContainerView);
}

uint64_t type metadata accessor for DOCTrailingVisibilityContainerView()
{
  return objc_opt_self(_TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView);
}

id sub_10033EFD4(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC5Files17DOCTokenTextField_dataSource];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCTokenTextField();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

void sub_10033F080(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  void *v10;
  objc_super v11;
  _QWORD v12[3];
  uint64_t v13;

  sub_1000685A8(a1, (uint64_t)v12);
  v2 = v13;
  if (v13)
  {
    v3 = sub_10007E7A0(v12, v13);
    v4 = *(_QWORD *)(v2 - 8);
    v5 = __chkstk_darwin(v3);
    v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v4 + 16))(v7, v5);
    v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    sub_100068588(v12);
  }
  else
  {
    v8 = 0;
  }
  v9 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v11.receiver = v1;
  v11.super_class = v9;
  objc_msgSendSuper2(&v11, "selectAll:", v8);
  swift_unknownObjectRelease(v8);
  v10 = (void *)sub_10033BC84();
  objc_msgSend(v10, "selectAll:", v1);

}

Class sub_10033F198(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  NSArray v6;

  v4 = a1;
  v5 = a3();

  if (v5)
  {
    sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6.super.isa = 0;
  }
  return v6.super.isa;
}

uint64_t sub_10033F208()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  objc_super v26;
  uint64_t v27;

  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for DOCTokenTextField();
  v1 = objc_msgSendSuper2(&v26, "keyCommands");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v4 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v27 = (uint64_t)v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputLeftArrow);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = (void *)objc_opt_self(UIKeyCommand);
  v9 = objc_msgSend(v8, "keyCommandWithInput:modifierFlags:action:", v7, 0, "directionKeyCommand");

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputRightArrow);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v8, "keyCommandWithInput:modifierFlags:action:", v12, 0, "directionKeyCommand", swift_bridgeObjectRelease(v11).n128_f64[0]);

  v14 = v27;
  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v25 = v27;
    else
      v25 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v16 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v14);
    v17 = v16 + 2;
    if (!__OFADD__(v16, 2))
    {
LABEL_6:
      v18 = sub_100088A50(v17, 1);
      specialized Array._endMutation()(v18);
      v9 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v16 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 < v15 >> 1)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else
  {
    v15 = v27 & 0xFFFFFFFFFFFFF8;
    v16 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v16 + 2;
    if (!__OFADD__(v16, 2))
      goto LABEL_6;
  }
  __break(1u);
LABEL_16:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
LABEL_7:
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v9);
  specialized Array._endMutation()(v19);
  v20 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
  specialized Array._endMutation()(v23);

  return v27;
}

uint64_t sub_10033F470(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  objc_class *v20;
  objc_super v21;
  _QWORD v22[3];
  uint64_t v23;

  if ((static Selector.== infix(_:_:)(a1, "directionKeyCommand") & 1) == 0)
  {
    sub_1000685A8(a2, (uint64_t)v22);
    v13 = v23;
    if (v23)
    {
      v14 = sub_10007E7A0(v22, v23);
      v15 = *(_QWORD *)(v13 - 8);
      v16 = __chkstk_darwin(v14);
      v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v15 + 16))(v18, v16);
      v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v13);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
      sub_100068588(v22);
    }
    else
    {
      v19 = 0;
    }
    v20 = (objc_class *)type metadata accessor for DOCTokenTextField();
    v21.receiver = v2;
    v21.super_class = v20;
    v12 = objc_msgSendSuper2(&v21, "canPerformAction:withSender:", a1, v19);
    swift_unknownObjectRelease(v19);
    return (uint64_t)v12;
  }
  v5 = objc_msgSend(v2, "text");
  if (!v5)
    return 1;

  result = (uint64_t)objc_msgSend(v2, "text");
  if (result)
  {
    v7 = (void *)result;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v10 = v9;

    swift_bridgeObjectRelease(v10);
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v8 & 0xFFFFFFFFFFFFLL;
    return v11 == 0;
  }
  __break(1u);
  return result;
}

void sub_10033F694(SEL *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24[24];
  objc_super v25;

  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for DOCTokenTextField();
  objc_msgSendSuper2(&v25, *a1, a2, a3, a4, a5);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = (char *)sub_10033BC84();
  v20 = &v19[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v19[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v24, 0, 0);
  v21 = *(_QWORD *)v20;
  swift_bridgeObjectRetain(v21);

  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRelease(v21);
  v23 = 0.0;
  if (!v22)
  {
    if (qword_100641038 != -1)
      swift_once(&qword_100641038, sub_10033CA1C);
    v23 = *(double *)&qword_10064F418;
  }
  if (qword_100641040 != -1)
    swift_once(&qword_100641040, sub_10033CA2C);
  sub_10007EAFC(v12, v14, v16, v18, 8.0, v23);
}

double sub_10033F7EC(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7)
{
  id v12;
  double v13;
  double v14;

  v12 = a1;
  sub_10033F694(a7, a2, a3, a4, a5);
  v14 = v13;

  return v14;
}

id sub_10033F86C()
{
  void *v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unsigned __int8 *v14;
  int v15;
  void *v16;
  void *v17;
  unsigned __int8 *v18;
  int v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  id v26;
  id v27;
  char v28;
  void *v29;
  objc_class *v30;
  char v31[24];
  objc_super v32;

  v1 = v0;
  v2 = objc_msgSend(v0, "selectedTextRange");

  if (!v2)
    goto LABEL_11;
  result = objc_msgSend(v1, "selectedTextRange");
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  v4 = result;
  v5 = objc_msgSend(result, "isEmpty");

  if (!v5)
    goto LABEL_11;
  result = objc_msgSend(v1, "selectedTextRange");
  if (!result)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v7 = objc_msgSend(v6, "start");

  v8 = objc_msgSend(v1, "beginningOfDocument");
  LOBYTE(v6) = static NSObject.== infix(_:_:)(v7, v8);

  if ((v6 & 1) != 0)
  {
    v9 = (char *)sub_10033BC84();
    v10 = &v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v31, 0, 0);
    v11 = *(_QWORD *)v10;
    swift_bridgeObjectRetain(v11);

    v12 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
    if (v12)
    {
      objc_msgSend(v1, "resignFirstResponder", v13);
      v14 = (unsigned __int8 *)sub_10033BC84();
      v15 = v14[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];

      v16 = (void *)sub_10033BC84();
      v17 = v16;
      if (v15 == 2)
        sub_10033E33C();
      else
        objc_msgSend(v16, "becomeFirstResponder");

    }
  }
LABEL_11:
  v18 = (unsigned __int8 *)sub_10033BC84();
  v19 = v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];

  if (v19 != 2)
    goto LABEL_18;
  v20 = objc_msgSend(v1, "selectedTextRange");

  if (!v20)
    goto LABEL_18;
  result = objc_msgSend(v1, "selectedTextRange");
  if (!result)
    goto LABEL_21;
  v21 = result;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v22 = objc_msgSend(v21, "start");

  v23 = objc_msgSend(v1, "beginningOfDocument");
  v24 = static NSObject.== infix(_:_:)(v22, v23);

  if ((v24 & 1) == 0)
  {
LABEL_18:
    v30 = (objc_class *)type metadata accessor for DOCTokenTextField();
    v32.receiver = v1;
    v32.super_class = v30;
    return objc_msgSendSuper2(&v32, "deleteBackward");
  }
  result = objc_msgSend(v1, "selectedTextRange");
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, "end");

    v27 = objc_msgSend(v1, "endOfDocument");
    v28 = static NSObject.== infix(_:_:)(v26, v27);

    if ((v28 & 1) != 0)
    {
      v29 = (void *)sub_10033BC84();
      sub_10033E33C();

    }
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_10033FC44(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  void *v11;
  _BYTE *v12;
  int v13;
  objc_super v14;
  _QWORD v15[3];
  uint64_t v16;

  sub_1000685A8(a1, (uint64_t)v15);
  v2 = v16;
  if (v16)
  {
    v3 = sub_10007E7A0(v15, v16);
    v4 = *(_QWORD *)(v2 - 8);
    v5 = __chkstk_darwin(v3);
    v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v4 + 16))(v7, v5);
    v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    sub_100068588(v15);
  }
  else
  {
    v8 = 0;
  }
  v9 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, "fieldEditorDidChangeSelection:", v8);
  v10 = objc_msgSend(v1, "selectedTextRange", swift_unknownObjectRelease(v8).n128_f64[0]);
  if (v10)
  {
    v11 = v10;
    if (objc_msgSend(v10, "isEmpty"))
    {
      v12 = (_BYTE *)sub_10033BC84();
      v13 = v12[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
      v12[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
      if (v13)
        sub_10033DC2C();

    }
  }
}

uint64_t sub_10033FD90(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, __n128))
{
  id v7;
  uint64_t v8;
  __n128 v9;
  id v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v9 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v10 = a1;
  }
  a4(v12, v9);

  return sub_10007EB54((uint64_t)v12);
}

id sub_10033FE08(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCTokenTextField);
}

uint64_t type metadata accessor for DOCTokenTextField()
{
  return objc_opt_self(_TtC5Files17DOCTokenTextField);
}

uint64_t storeEnumTagSinglePayload for DOCTokenChainView.Selection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100340058 + 4 * byte_1004E3555[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10034008C + 4 * byte_1004E3550[v4]))();
}

uint64_t sub_10034008C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100340094(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034009CLL);
  return result;
}

uint64_t sub_1003400A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003400B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003400B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003400BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCTokenChainView.Selection()
{
  return &type metadata for DOCTokenChainView.Selection;
}

unint64_t sub_1003400DC()
{
  unint64_t result;

  result = qword_10064F620;
  if (!qword_10064F620)
  {
    result = swift_getWitnessTable(&unk_1004E368C, &type metadata for DOCTokenChainView.Selection);
    atomic_store(result, (unint64_t *)&qword_10064F620);
  }
  return result;
}

unint64_t sub_100340120(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    return String.subscript.getter(result, v4 | (v3 << 16), a2, a3);
  }
  return result;
}

void sub_10034016C(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = objc_msgSend(a1, "arrangedSubviews");
  v4 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease_n(v5, 2);
    return;
  }
  if (v5 < 0)
    v13 = v5;
  else
    v13 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v6)
    goto LABEL_15;
LABEL_3:
  if (v6 >= 1)
  {
    v7 = 0;
    v8 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      else
        v9 = *(id *)(v5 + 8 * v7 + 32);
      v10 = v9;
      v11 = type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      v12 = (void *)swift_dynamicCastClass(v10, v11);
      if (v12)
        objc_msgSend(v12, "setFont:", *(_QWORD *)(a2 + v8));

      ++v7;
    }
    while (v6 != v7);
    goto LABEL_15;
  }
  __break(1u);
}

id sub_1003402B0()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  double v5;
  id result;
  void *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12[24];

  v1 = (char *)sub_10033BC84();
  v2 = &v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v12, 0, 0);
  v3 = *(_QWORD *)v2;
  swift_bridgeObjectRetain(v3);

  v4 = *(char **)(v3 + 16);
  *(_QWORD *)&v5 = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (v4)
    v4 = sub_10033BF4C();
  objc_msgSend(v0, "setLeftView:", v4, v5);

  objc_msgSend(v0, "setNeedsLayout");
  result = objc_msgSend(v0, "_placeholderLabel");
  if (result)
  {
    v7 = result;
    v8 = (char *)sub_10033BC84();
    v9 = &v8[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], &v11, 0, 0);
    v10 = *(_QWORD *)v9;
    swift_bridgeObjectRetain(v10);

    objc_msgSend(v7, "setHidden:", *(_QWORD *)(v10 + 16) != 0, swift_bridgeObjectRelease(v10).n128_f64[0]);
    return objc_msgSend(v0, "sendActionsForControlEvents:", 0x20000);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003403E4()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  NSString *v6;
  id v7;
  id v8;
  unint64_t v9;
  Class isa;
  double v11;
  double v12;
  double v13;
  double v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  char *v25;
  _BYTE *v26;
  int v27;
  id v28;
  void *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  char v35[24];
  char v36[72];

  v1 = v0;
  v2 = objc_msgSend(v0, "text");
  if (v2)
  {
    v3 = v2;
    v4 = sub_10006922C((uint64_t *)&unk_1006424D0);
    inited = swift_initStackObject(v4, v36);
    *(_OWORD *)(inited + 16) = xmmword_1004D9670;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v6 = NSFontAttributeName;
    v7 = objc_msgSend(v1, "font");
    if (v7)
    {
      v8 = v7;
      *(_QWORD *)(inited + 64) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v8;
      v9 = sub_100076434(inited);
      type metadata accessor for Key(0);
      sub_10005FB20();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);
      v12 = v11;

      objc_msgSend(v1, "frame");
      v14 = v13;
      v15 = (char *)sub_10033BC84();
      v16 = &v15[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
      swift_beginAccess(&v15[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v35, 0, 0);
      v17 = *(_QWORD *)v16;
      swift_bridgeObjectRetain(v17);

      v18 = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRelease(v17);
      v19 = 0.0;
      if (!v18)
      {
        if (qword_100641038 != -1)
          swift_once(&qword_100641038, sub_10033CA1C);
        v19 = *(double *)&qword_10064F418;
      }
      if (qword_100641040 != -1)
        swift_once(&qword_100641040, sub_10033CA2C);
      v20 = (char *)sub_10033BC84();
      v21 = &v20[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
      swift_beginAccess(&v20[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], v34, 0, 0);
      v22 = *(_QWORD *)v21;
      swift_bridgeObjectRetain(v22);

      v23 = *(_QWORD *)(v22 + 16);
      swift_bridgeObjectRelease(v22);
      if (!v23 && qword_100641038 != -1)
        swift_once(&qword_100641038, sub_10033CA1C);
      v24 = v14 - v12 - v19 - *(double *)&qword_10064F420;
      v25 = sub_10033BF4C();
      objc_msgSend(*(id *)&v25[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints], "setConstant:", v24);

      v26 = (_BYTE *)sub_10033BC84();
      v27 = v26[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
      v26[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
      if (v27)
        sub_10033DC2C();

      v28 = objc_msgSend(v1, "_placeholderLabel");
      if (v28)
      {
        v29 = v28;
        v30 = (char *)sub_10033BC84();
        v31 = &v30[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
        swift_beginAccess(&v30[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens], &v33, 0, 0);
        v32 = *(_QWORD *)v31;
        swift_bridgeObjectRetain(v32);

        objc_msgSend(v29, "setHidden:", *(_QWORD *)(v32 + 16) != 0, swift_bridgeObjectRelease(v32).n128_f64[0]);
        sub_10033C46C();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100340740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_10064F640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100340788()
{
  _BYTE *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield], 0);
  v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCTokenTextField.swift", 29, 2, 170, 0);
  __break(1u);
}

void sub_100340858()
{
  uint64_t v0;
  int v1;
  void *Strong;
  id v3;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = 0;
  if (v1)
    sub_10033DC2C();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_coTextfield);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "becomeFirstResponder");

  }
}

unint64_t sub_1003408BC()
{
  unint64_t result;

  result = qword_10064F660;
  if (!qword_10064F660)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_10064F660);
  }
  return result;
}

double sub_100340900(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v8 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v9 = objc_msgSend(v8, "itemProviders");

  v10 = sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = *a1;
  *a1 = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *a1;
  v14 = swift_allocObject(&unk_1005DF3F8, 32, 7);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  v15 = swift_allocObject(&unk_1005DF420, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10034639C;
  *(_QWORD *)(v15 + 24) = v14;
  swift_bridgeObjectRetain(v13);
  swift_retain();
  swift_retain();
  sub_1003412F0(v13, v13, a2, 1, (uint64_t)sub_10034768C, v15);
  swift_bridgeObjectRelease(v13);
  swift_release(v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

void sub_100340A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  _QWORD v9[5];
  _QWORD *v10;

  v6 = (_QWORD *)swift_allocObject(&unk_1005DF448, 40, 7);
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  v9[4] = sub_100093E6C;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004A82C;
  v9[3] = &unk_1005DF460;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain();
  swift_bridgeObjectRetain(a1);
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

double static NSItemProvider.fpItemsFromItemProviders(_:alertPresenting:loadFromURLs:completionHandler:)(int64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  double result;

  v9 = swift_allocObject(&unk_1005DF268, 32, 7);
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  swift_retain();
  sub_1003412F0(a1, a1, a2, 1, (uint64_t)sub_100340C68, v9);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_100340B80(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v3;
  void **v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = (void **)(a1 + 40);
    do
    {
      v6 = *v5;
      v5 += 2;
      v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      --v3;
    }
    while (v3);
  }
  a2(_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

uint64_t sub_100340C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100340C68(uint64_t a1)
{
  uint64_t v1;

  return sub_100340B80(a1, *(void (**)(_QWORD *))(v1 + 16));
}

void sub_100340C70(int64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  _BYTE *v34;
  void *v35;
  id v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  id v74;
  NSObject *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD aBlock[5];
  _QWORD *v79;

  v63 = a6;
  v62 = a5;
  v57 = a4;
  v71 = a3;
  v72 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  __chkstk_darwin(v7);
  v67 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = type metadata accessor for DispatchQoS.QoSClass(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (int64_t)&v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  __chkstk_darwin(v13);
  v15 = &v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v17 = *(void **)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v56[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = _swiftEmptyArrayStorage;
  v76 = swift_allocObject(&unk_1005DF718, 24, 7);
  *(_QWORD *)(v76 + 16) = _swiftEmptyArrayStorage;
  v70 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_27;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v20);
  *(_QWORD *)(v76 + 16) = v20;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v23 = v20, v21 > v20[3] >> 1))
  {
    if (v20[2] <= v21)
      v24 = v21;
    else
      v24 = v20[2];
    v23 = sub_100153988(isUniquelyReferenced_nonNull_native, v24, 0, v20);
  }
  *(_QWORD *)(v76 + 16) = v23;
  v74 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v75 = dispatch_group_create();
  v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v26 = (*((uint64_t (**)(_BYTE *, _QWORD, unint64_t))v17 + 13))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v16);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = v20;
  v27 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = &unk_100641280;
  v28 = sub_10006922C((uint64_t *)&unk_100641280);
  v29 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v10, v27);
  v58 = v25;
  v73 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000039, 0x80000001005296D0, v15, v12, v19, 0);
  v64 = v15;
  if (v70)
  {
    if (a1 < 0)
      v30 = a1;
    else
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
    v12 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (!v10)
      goto LABEL_25;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    if (!v10)
    {
LABEL_25:
      swift_bridgeObjectRelease_n(v12, 2);
      v37 = v60;
      v38 = v59;
      v39 = v61;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v60 + 104))(v59, enum case for DispatchQoS.QoSClass.default(_:), v61);
      v40 = (void *)static OS_dispatch_queue.global(qos:)(v38);
      (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v38, v39);
      v41 = (_QWORD *)swift_allocObject(&unk_1005DF740, 40, 7);
      v42 = v63;
      v41[2] = v62;
      v41[3] = v42;
      v43 = v76;
      v41[4] = v76;
      aBlock[4] = sub_10034731C;
      v79 = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005DF758;
      v44 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      v45 = v64;
      static DispatchQoS.unspecified.getter(v46);
      v77 = _swiftEmptyArrayStorage;
      v47 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v48 = sub_10006922C((uint64_t *)&unk_100647540);
      v49 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v50 = v67;
      v51 = v48;
      v52 = v69;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v77, v51, v49, v69, v47);
      v53 = v75;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v45, v50, v40, v44);

      _Block_release(v44);
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v50, v52);
      (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v45, v66);
      v54 = v79;
      swift_release(v43);
      swift_release(v54);
      return;
    }
  }
  if (v10 >= 1)
  {
    v16 = 0;
    v19 = 0;
    a1 = v12 & 0xC000000000000001;
    v20 = (_QWORD *)(v72 & 0xC000000000000001);
    v70 = v72 & 0xFFFFFFFFFFFFFF8;
    v31 = v57 & 1;
    while (1)
    {
      if (a1)
      {
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v12);
        if (v20)
          goto LABEL_20;
      }
      else
      {
        v32 = *(id *)(v12 + 8 * v16 + 32);
        if (v20)
        {
LABEL_20:
          v33 = v32;
          v34 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v72);
          goto LABEL_24;
        }
      }
      if (v16 >= *(_QWORD *)(v70 + 16))
      {
        __break(1u);
LABEL_27:
        if (a1 < 0)
          v55 = a1;
        else
          v55 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v21 = _CocoaArrayWrapper.endIndex.getter(v55);
        swift_bridgeObjectRelease(a1);
        goto LABEL_3;
      }
      v35 = *(void **)(v72 + 8 * v16 + 32);
      v36 = v32;
      v34 = v35;
LABEL_24:
      v15 = v34;
      v17 = objc_autoreleasePoolPush();
      sub_100341970(v32, v75, v71, v73, v76, v15, v31, v74);
      ++v16;
      objc_autoreleasePoolPop(v17);

      if (v10 == v16)
        goto LABEL_25;
    }
  }
  __break(1u);
  objc_autoreleasePoolPop(&unk_100641280);
  __break(1u);
}

void sub_1003412F0(int64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  _BYTE *v34;
  void *v35;
  id v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  _QWORD *v54;
  uint64_t v55;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  id v74;
  NSObject *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD aBlock[5];
  _QWORD *v79;

  v63 = a6;
  v62 = a5;
  v57 = a4;
  v71 = a3;
  v72 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  __chkstk_darwin(v7);
  v67 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = type metadata accessor for DispatchQoS.QoSClass(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v59 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (int64_t)&v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for DispatchQoS(0);
  v65 = *(_QWORD *)(v13 - 8);
  v66 = v13;
  __chkstk_darwin(v13);
  v15 = &v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v17 = *(void **)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = &v56[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = _swiftEmptyArrayStorage;
  v76 = swift_allocObject(&unk_1005DF9E8, 24, 7);
  *(_QWORD *)(v76 + 16) = _swiftEmptyArrayStorage;
  v70 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_27;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v20);
  *(_QWORD *)(v76 + 16) = v20;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v23 = v20, v21 > v20[3] >> 1))
  {
    if (v20[2] <= v21)
      v24 = v21;
    else
      v24 = v20[2];
    v23 = sub_100154674(isUniquelyReferenced_nonNull_native, v24, 0, v20);
  }
  *(_QWORD *)(v76 + 16) = v23;
  v74 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v75 = dispatch_group_create();
  v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v26 = (*((uint64_t (**)(_BYTE *, _QWORD, unint64_t))v17 + 13))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v16);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = v20;
  v27 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = &unk_100641280;
  v28 = sub_10006922C((uint64_t *)&unk_100641280);
  v29 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v10, v27);
  v58 = v25;
  v73 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000039, 0x80000001005296D0, v15, v12, v19, 0);
  v64 = v15;
  if (v70)
  {
    if (a1 < 0)
      v30 = a1;
    else
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
    v12 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (!v10)
      goto LABEL_25;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    if (!v10)
    {
LABEL_25:
      swift_bridgeObjectRelease_n(v12, 2);
      v37 = v60;
      v38 = v59;
      v39 = v61;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v60 + 104))(v59, enum case for DispatchQoS.QoSClass.default(_:), v61);
      v40 = (void *)static OS_dispatch_queue.global(qos:)(v38);
      (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v38, v39);
      v41 = (_QWORD *)swift_allocObject(&unk_1005DFA10, 40, 7);
      v42 = v63;
      v41[2] = v62;
      v41[3] = v42;
      v43 = v76;
      v41[4] = v76;
      aBlock[4] = sub_100347470;
      v79 = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005DFA28;
      v44 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      v45 = v64;
      static DispatchQoS.unspecified.getter(v46);
      v77 = _swiftEmptyArrayStorage;
      v47 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v48 = sub_10006922C((uint64_t *)&unk_100647540);
      v49 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v50 = v67;
      v51 = v48;
      v52 = v69;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v77, v51, v49, v69, v47);
      v53 = v75;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v45, v50, v40, v44);

      _Block_release(v44);
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v50, v52);
      (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v45, v66);
      v54 = v79;
      swift_release(v43);
      swift_release(v54);
      return;
    }
  }
  if (v10 >= 1)
  {
    v16 = 0;
    v19 = 0;
    a1 = v12 & 0xC000000000000001;
    v20 = (_QWORD *)(v72 & 0xC000000000000001);
    v70 = v72 & 0xFFFFFFFFFFFFFF8;
    v31 = v57 & 1;
    while (1)
    {
      if (a1)
      {
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v12);
        if (v20)
          goto LABEL_20;
      }
      else
      {
        v32 = *(id *)(v12 + 8 * v16 + 32);
        if (v20)
        {
LABEL_20:
          v33 = v32;
          v34 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v72);
          goto LABEL_24;
        }
      }
      if (v16 >= *(_QWORD *)(v70 + 16))
      {
        __break(1u);
LABEL_27:
        if (a1 < 0)
          v55 = a1;
        else
          v55 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v21 = _CocoaArrayWrapper.endIndex.getter(v55);
        swift_bridgeObjectRelease(a1);
        goto LABEL_3;
      }
      v35 = *(void **)(v72 + 8 * v16 + 32);
      v36 = v32;
      v34 = v35;
LABEL_24:
      v15 = v34;
      v17 = objc_autoreleasePoolPush();
      sub_100341CA4(v32, v75, v71, v73, v76, v15, v31, v74);
      ++v16;
      objc_autoreleasePoolPop(v17);

      if (v10 == v16)
        goto LABEL_25;
    }
  }
  __break(1u);
  objc_autoreleasePoolPop(&unk_100641280);
  __break(1u);
}

uint64_t sub_100341970(void *a1, NSObject *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  _QWORD *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  void *v53;
  id v54;
  NSObject *v55;
  NSString v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void **aBlock;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  _QWORD *v66;

  v59 = a5;
  v60 = a6;
  v57 = a3;
  v58 = a4;
  v12 = sub_10006922C(&qword_10064F720);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DOCDragPasteboardType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_100341FD8(v19);
  if (v21)
  {
    DOCDragPasteboardType.init(_:)(result);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      return sub_10000CB4C((uint64_t)v14, &qword_10064F720);
    }
    else
    {
      sub_1001D0788((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
      v22 = a2;
      dispatch_group_enter(a2);
      v23 = DOCDragPasteboardType.isFPItemFileOrLocation.getter();
      if ((v23 & 1) != 0)
      {
        DOCDragPasteboardType.typeIdentifier.getter(v23);
        v25 = v24;
        v56 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v25);
        v26 = (_QWORD *)swift_allocObject(&unk_1005DF7E0, 56, 7);
        v28 = v57;
        v27 = v58;
        v26[2] = v22;
        v26[3] = v28;
        v29 = v22;
        v31 = v59;
        v30 = v60;
        v26[4] = v27;
        v26[5] = v31;
        v26[6] = v30;
        v65 = sub_100347354;
        v66 = v26;
        aBlock = _NSConcreteStackBlock;
        v62 = 1107296256;
        v63 = sub_100342A00;
        v64 = &unk_1005DF7F8;
        v32 = _Block_copy(&aBlock);
        v33 = v66;
        v34 = v28;
        v35 = v27;
        swift_retain();
        v36 = v30;
        v37 = v29;
        swift_release(v33);
        v38 = v56;
        v39 = objc_msgSend(a1, "loadDataRepresentationForTypeIdentifier:completionHandler:", v56, v32);
        _Block_release(v32);

      }
      else if ((a7 & 1) != 0)
      {
        DOCDragPasteboardType.typeIdentifier.getter(v23);
        v41 = v40;
        v56 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v41);
        v42 = (_QWORD *)swift_allocObject(&unk_1005DF790, 64, 7);
        v44 = v57;
        v43 = v58;
        v42[2] = v22;
        v42[3] = v44;
        v42[4] = a8;
        v42[5] = v43;
        v55 = v22;
        v45 = v60;
        v42[6] = v59;
        v42[7] = v45;
        v65 = sub_100347344;
        v66 = v42;
        aBlock = _NSConcreteStackBlock;
        v62 = 1107296256;
        v63 = sub_100343140;
        v64 = &unk_1005DF7A8;
        v46 = _Block_copy(&aBlock);
        v47 = v66;
        v48 = v44;
        v49 = v43;
        swift_retain();
        v50 = v45;
        v51 = a8;
        v52 = v55;
        swift_release(v47);
        v53 = v56;
        v54 = objc_msgSend(a1, "loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:", v56, v46);
        _Block_release(v46);

      }
      else
      {
        dispatch_group_leave(a2);
      }
      return sub_1000E2A78((uint64_t)v18);
    }
  }
  return result;
}

uint64_t sub_100341CA4(void *a1, NSObject *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  double v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  _QWORD *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  NSObject *v54;
  double v55;
  void *v56;
  id v57;
  NSObject *v58;
  NSString v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void **aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  _QWORD *v69;

  v62 = a5;
  v63 = a6;
  v60 = a3;
  v61 = a4;
  v12 = sub_10006922C(&qword_10064F720);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DOCDragPasteboardType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_100341FD8(v19);
  if (v21)
  {
    DOCDragPasteboardType.init(_:)(result);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      return sub_10000CB4C((uint64_t)v14, &qword_10064F720);
    }
    else
    {
      sub_1001D0788((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
      v22 = a2;
      dispatch_group_enter(a2);
      v24 = DOCDragPasteboardType.isFPItemFileOrLocation.getter(v23);
      if ((v24 & 1) != 0)
      {
        DOCDragPasteboardType.typeIdentifier.getter(v24);
        v26 = v25;
        v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
        v27 = (_QWORD *)swift_allocObject(&unk_1005DFAB0, 56, 7);
        v29 = v60;
        v28 = v61;
        v27[2] = v22;
        v27[3] = v29;
        v30 = v22;
        v32 = v62;
        v31 = v63;
        v27[4] = v28;
        v27[5] = v32;
        v27[6] = v31;
        v68 = sub_1003474C0;
        v69 = v27;
        aBlock = _NSConcreteStackBlock;
        v65 = 1107296256;
        v66 = sub_100342A00;
        v67 = &unk_1005DFAC8;
        v33 = _Block_copy(&aBlock);
        v34 = v69;
        v35 = v29;
        v36 = v28;
        swift_retain();
        v37 = v31;
        v38 = v30;
        *(_QWORD *)&v39 = swift_release(v34).n128_u64[0];
        v40 = v59;
        v41 = objc_msgSend(a1, "loadDataRepresentationForTypeIdentifier:completionHandler:", v59, v33, v39);
        _Block_release(v33);

      }
      else if ((a7 & 1) != 0)
      {
        DOCDragPasteboardType.typeIdentifier.getter(v24);
        v43 = v42;
        v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v43);
        v44 = (_QWORD *)swift_allocObject(&unk_1005DFA60, 64, 7);
        v46 = v60;
        v45 = v61;
        v44[2] = v22;
        v44[3] = v46;
        v44[4] = a8;
        v44[5] = v45;
        v58 = v22;
        v47 = v63;
        v44[6] = v62;
        v44[7] = v47;
        v68 = sub_100347498;
        v69 = v44;
        aBlock = _NSConcreteStackBlock;
        v65 = 1107296256;
        v66 = sub_100343140;
        v67 = &unk_1005DFA78;
        v48 = _Block_copy(&aBlock);
        v49 = v69;
        v50 = v46;
        v51 = v45;
        swift_retain();
        v52 = v47;
        v53 = a8;
        v54 = v58;
        *(_QWORD *)&v55 = swift_release(v49).n128_u64[0];
        v56 = v59;
        v57 = objc_msgSend(a1, "loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:", v59, v48, v55);
        _Block_release(v48);

      }
      else
      {
        dispatch_group_leave(a2);
      }
      return sub_1000E2A78((uint64_t)v18);
    }
  }
  return result;
}

uint64_t sub_100341FD8(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  Swift::OpaquePointer v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *i;
  uint64_t v14;
  uint64_t v15;

  v2 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v3 = static os_log_type_t.debug.getter();
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 112, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  *(_QWORD *)(v5 + 64) = sub_10006A638();
  strcpy((char *)(v5 + 32), "typeToRequest");
  *(_WORD *)(v5 + 46) = -4864;
  v6 = objc_msgSend(v1, "registeredTypeIdentifiers");
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String);

  *(_QWORD *)(v5 + 96) = sub_10006922C(&qword_10064F390);
  *(_QWORD *)(v5 + 104) = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v5 + 72) = v7;
  os_log(_:dso:log:type:_:)("%@: registeredTypes: %@", 23, 2, &_mh_execute_header, v2, v3, v5);

  v8 = swift_bridgeObjectRelease(v5);
  v9._rawValue = *(void **)DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v8);
  swift_bridgeObjectRetain(v9._rawValue);
  v10 = objc_msgSend(v1, "registeredTypeIdentifiers");
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain(v11);
    for (i = (_QWORD *)(v11 + 40); ; i += 2)
    {
      v15 = *(i - 1);
      v14 = *i;
      swift_bridgeObjectRetain(*i);
      if (String.conformsToAnyOf(_:)(v9))
        break;
      swift_bridgeObjectRelease(v14);
      if (!--v12)
      {
        swift_bridgeObjectRelease(v9._rawValue);
        swift_bridgeObjectRelease_n(v11, 2);
        return 0;
      }
    }
    swift_bridgeObjectRelease(v9._rawValue);
    swift_bridgeObjectRelease_n(v11, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v9._rawValue);
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  return v15;
}

void sub_1003421E4(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  _QWORD *v48;
  NSObject *v49;
  void *v50;
  id v51;
  id v52;
  NSObject *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  NSObject *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD v86[3];
  char v87[8];
  __int128 aBlock;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD v93[3];
  char v94[16];

  v80 = a7;
  v81 = a8;
  v78 = a6;
  v79 = a5;
  v83 = a4;
  v84 = a3;
  v82 = a1;
  v15 = type metadata accessor for DispatchWorkItemFlags(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v19);
  if (a2 >> 60 == 15)
  {
    v81 = a12;
    v82 = a13;
    v80 = a14;
    v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
    v24 = static os_log_type_t.error.getter(v23);
    v25 = sub_10006922C((uint64_t *)&unk_100644560);
    v26 = swift_allocObject(v25, 112, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v26 + 56) = &type metadata for String;
    v27 = sub_10006A638();
    *(_QWORD *)(v26 + 64) = v27;
    *(_QWORD *)(v26 + 32) = 0xD000000000000060;
    *(_QWORD *)(v26 + 40) = 0x8000000100529750;
    v28 = v84;
    if (v84)
    {
      v29 = _convertErrorToNSError(_:)(v84);
      v90 = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v91 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&aBlock = v29;
      sub_1000E85C4(&aBlock, v26 + 72);
    }
    else
    {
      *(_QWORD *)(v26 + 96) = &type metadata for String;
      *(_QWORD *)(v26 + 104) = v27;
      *(_QWORD *)(v26 + 72) = 0xD000000000000013;
      *(_QWORD *)(v26 + 80) = 0x8000000100516BA0;
    }
    v36 = v83;
    os_log(_:dso:log:type:_:)("%@: Unable to get Data. Error: %@", 33, 2, &_mh_execute_header, v23, v24, v26);

    swift_bridgeObjectRelease(v26);
    dispatch_group_leave(v36);
    if (v28)
    {
      swift_getErrorValue(v28, v94, v93);
      v37 = v93[1];
      v38 = v93[2];
      swift_errorRetain(v28);
      v39 = dispatch thunk of Error._domain.getter(v37, v38);
      v41 = v40;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSItemProviderErrorDomain);
      v44 = v42;
      if (v39 == v43 && v41 == v42)
      {
        swift_bridgeObjectRelease_n(v41, 2);
        v46 = v81;
        v45 = v82;
      }
      else
      {
        v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v43, v42, 0);
        swift_bridgeObjectRelease(v41);
        swift_bridgeObjectRelease(v44);
        v46 = v81;
        v45 = v82;
        if ((v58 & 1) == 0)
          goto LABEL_14;
      }
      swift_getErrorValue(v28, v87, v86);
      if (dispatch thunk of Error._code.getter(v86[1], v86[2]) == -1000)
      {
LABEL_16:
        swift_errorRelease(v28);
        return;
      }
LABEL_14:
      v59 = v79;
      if (v79)
      {
        v60 = swift_allocObject(v46, 32, 7);
        *(_QWORD *)(v60 + 16) = v28;
        *(_QWORD *)(v60 + 24) = v59;
        v91 = v45;
        v92 = (_QWORD *)v60;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v89 = sub_10004A82C;
        v90 = v80;
        v61 = _Block_copy(&aBlock);
        v62 = v92;
        v63 = v59;
        swift_errorRetain(v28);
        v64 = v63;
        swift_release(v62);
        DOCRunInMainThread(v61);
        _Block_release(v61);
        swift_errorRelease(v28);

        return;
      }
      goto LABEL_16;
    }
  }
  else
  {
    v73 = a10;
    v74 = a11;
    v30 = v80;
    v31 = v81;
    v75 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    v77 = v22;
    v79 = v20;
    v76 = v16;
    v32 = v84;
    sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
    v33 = v82;
    v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    sub_10012F5E0(v33, a2);
    v35 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v34, v33, a2, v34);
    v47 = (void *)v35;
    v72 = a2;
    if (v35)
    {
      v48 = (_QWORD *)swift_allocObject(a9, 48, 7);
      v48[2] = v30;
      v48[3] = v31;
      v49 = v83;
      v48[4] = v47;
      v48[5] = v49;
      v91 = v73;
      v92 = v48;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v89 = sub_10004A82C;
      v90 = v74;
      v50 = _Block_copy(&aBlock);
      swift_retain();
      v51 = v31;
      v52 = v47;
      v53 = v49;
      v54 = v75;
      static DispatchQoS.unspecified.getter(v53);
      v85 = _swiftEmptyArrayStorage;
      v55 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v56 = sub_10006922C((uint64_t *)&unk_100647540);
      v57 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v85, v56, v57, v15, v55);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v54, v18, v50);
      _Block_release(v50);
      sub_1001F5680(v82, v72);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v15);
      (*(void (**)(char *, void *))(v77 + 8))(v54, v79);
      swift_release(v92);
    }
    else
    {
      v65 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
      v66 = static os_log_type_t.error.getter(v65);
      v67 = sub_10006922C((uint64_t *)&unk_100644560);
      v68 = swift_allocObject(v67, 112, 7);
      *(_OWORD *)(v68 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v68 + 56) = &type metadata for String;
      v69 = sub_10006A638();
      *(_QWORD *)(v68 + 64) = v69;
      *(_QWORD *)(v68 + 32) = 0xD000000000000060;
      *(_QWORD *)(v68 + 40) = 0x8000000100529750;
      if (v32)
      {
        v70 = _convertErrorToNSError(_:)(v32);
        v90 = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
        v91 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
        *(_QWORD *)&aBlock = v70;
        sub_1000E85C4(&aBlock, v68 + 72);
      }
      else
      {
        *(_QWORD *)(v68 + 96) = &type metadata for String;
        *(_QWORD *)(v68 + 104) = v69;
        *(_QWORD *)(v68 + 72) = 0xD000000000000013;
        *(_QWORD *)(v68 + 80) = 0x8000000100516BA0;
      }
      v71 = v83;
      os_log(_:dso:log:type:_:)("%@: Failed to unarchive an FPItem. Error: %@", 44, 2, &_mh_execute_header, v65, v66, v68, v72);

      swift_bridgeObjectRelease(v68);
      dispatch_group_leave(v71);
      sub_1001F5680(v82, v72);
    }
  }
}

uint64_t sub_100342A00(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  uint64_t v5;
  void (*v6)(void *, unint64_t, void *);
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v10;

  v4 = a2;
  v6 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain();
    v7 = v4;
    v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;

  }
  else
  {
    swift_retain();
    v9 = 0xF000000000000000;
  }
  v10 = a3;
  v6(v4, v9, a3);

  sub_1001F5680((uint64_t)v4, v9);
  return swift_release(v5);
}

void sub_100342A94(void *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  id v31;
  id v32;
  _QWORD v33[2];
  uint64_t v34;
  _QWORD *v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void (*v40)();
  _QWORD *v41;

  v33[1] = a5;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v33[0] = v18;
    v21 = (_QWORD *)swift_allocObject(&unk_1005DF998, 48, 7);
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a1;
    v21[5] = a3;
    v40 = sub_1003473C0;
    v41 = v21;
    aBlock = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10004A82C;
    v39 = &unk_1005DF9B0;
    v22 = _Block_copy(&aBlock);
    v23 = a1;
    swift_retain();
    v24 = a7;
    static DispatchQoS.unspecified.getter(a3);
    v35 = _swiftEmptyArrayStorage;
    v25 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_10006922C((uint64_t *)&unk_100647540);
    v27 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v26, v27, v13, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v15, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    (*(void (**)(char *, _QWORD))(v17 + 8))(v20, v33[0]);
    swift_release(v41);
  }
  else
  {
    dispatch_group_leave(a3);
    if (a2)
    {
      if (a4)
      {
        v28 = swift_allocObject(&unk_1005DF948, 32, 7);
        *(_QWORD *)(v28 + 16) = a2;
        *(_QWORD *)(v28 + 24) = a4;
        v40 = sub_10034730C;
        v41 = (_QWORD *)v28;
        aBlock = _NSConcreteStackBlock;
        v37 = 1107296256;
        v38 = sub_10004A82C;
        v39 = &unk_1005DF960;
        v29 = _Block_copy(&aBlock);
        v30 = v41;
        swift_errorRetain(a2);
        v31 = a4;
        swift_errorRetain(a2);
        v32 = v31;
        swift_release(v30);
        DOCRunInMainThread(v29);
        _Block_release(v29);
        swift_errorRelease(a2);

      }
    }
  }
}

void sub_100342D6C(void *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  id v31;
  id v32;
  _QWORD v33[2];
  uint64_t v34;
  _QWORD *v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void (*v40)();
  _QWORD *v41;

  v33[1] = a5;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v33[0] = v18;
    v21 = (_QWORD *)swift_allocObject(&unk_1005DFC68, 48, 7);
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a1;
    v21[5] = a3;
    v40 = sub_10034752C;
    v41 = v21;
    aBlock = _NSConcreteStackBlock;
    v37 = 1107296256;
    v38 = sub_10004A82C;
    v39 = &unk_1005DFC80;
    v22 = _Block_copy(&aBlock);
    v23 = a1;
    swift_retain();
    v24 = a7;
    static DispatchQoS.unspecified.getter(a3);
    v35 = _swiftEmptyArrayStorage;
    v25 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_10006922C((uint64_t *)&unk_100647540);
    v27 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v26, v27, v13, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v15, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    (*(void (**)(char *, _QWORD))(v17 + 8))(v20, v33[0]);
    swift_release(v41);
  }
  else
  {
    dispatch_group_leave(a3);
    if (a2)
    {
      if (a4)
      {
        v28 = swift_allocObject(&unk_1005DFC18, 32, 7);
        *(_QWORD *)(v28 + 16) = a2;
        *(_QWORD *)(v28 + 24) = a4;
        v40 = sub_10034730C;
        v41 = (_QWORD *)v28;
        aBlock = _NSConcreteStackBlock;
        v37 = 1107296256;
        v38 = sub_10004A82C;
        v39 = &unk_1005DFC30;
        v29 = _Block_copy(&aBlock);
        v30 = v41;
        swift_errorRetain(a2);
        v31 = a4;
        swift_errorRetain(a2);
        v32 = v31;
        swift_release(v30);
        DOCRunInMainThread(v29);
        _Block_release(v29);
        swift_errorRelease(a2);

      }
    }
  }
}

void sub_100343044(uint64_t a1, void *a2, void *a3, NSObject *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v10 = (uint64_t *)(a1 + 16);
  swift_beginAccess(a1 + 16, v18, 33, 0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = a3;
  v13 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(a1 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = a5(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
    *v10 = v11;
  }
  v16 = *(_QWORD *)(v11 + 16);
  v15 = *(_QWORD *)(v11 + 24);
  if (v16 >= v15 >> 1)
  {
    v11 = a5(v15 > 1, v16 + 1, 1, v11);
    *v10 = v11;
  }
  *(_QWORD *)(v11 + 16) = v16 + 1;
  v17 = v11 + 16 * v16;
  *(_QWORD *)(v17 + 32) = v13;
  *(_QWORD *)(v17 + 40) = v12;
  swift_endAccess(v18);
  dispatch_group_leave(a4);
}

uint64_t sub_100343140(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, void *);
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, uint64_t, void *))(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 0, 1, v13);
  }
  else
  {
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v10, 1, 1, v14);
  }
  swift_retain();
  v15 = a4;
  v12(v10, a3, a4);
  swift_release(v11);

  return sub_10000CB4C((uint64_t)v10, &qword_100643470);
}

uint64_t sub_10034324C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  swift_beginAccess(a3 + 16, v11, 0, 0);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = swift_bridgeObjectRetain(v7);
  v9 = a4(v8);
  swift_bridgeObjectRelease(v7);
  a1(v9);
  return swift_bridgeObjectRelease(v9);
}

id sub_1003432C8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t object;
  uint64_t v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t countAndFlagsBits;
  uint64_t v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  id v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id result;
  void *v61;
  Swift::String v62;
  Swift::String_optional v63;
  Swift::String v64;
  Swift::String v65;
  id v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  NSString v78;
  Class isa;
  id v80;
  unint64_t v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  Swift::String v94;

  v3 = v2;
  v93 = a1;
  v5 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v5);
  v89 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - v8;
  v10 = type metadata accessor for UTType(0);
  v92 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v87 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v86 - v14;
  v16 = objc_msgSend(v3, "suggestedName", v13);
  v90 = v10;
  v91 = a2;
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    object = v19;

    v22 = HIBYTE(object) & 0xF;
    v88 = (id *)v18;
    if ((object & 0x2000000000000000) == 0)
      v22 = v18 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v21);
      v25 = static os_log_type_t.info.getter(v24);
      v26 = sub_10006922C((uint64_t *)&unk_100644560);
      v27 = swift_allocObject(v26, 112, 7);
      *(_OWORD *)(v27 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v27 + 56) = &type metadata for String;
      v28 = sub_10006A638();
      *(_QWORD *)(v27 + 64) = v28;
      *(_QWORD *)(v27 + 32) = 0xD000000000000013;
      *(_QWORD *)(v27 + 40) = 0x80000001005295D0;
      v29 = objc_msgSend(v3, "suggestedName");
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

        v34 = (uint64_t *)(v27 + 72);
        *(_QWORD *)(v27 + 96) = &type metadata for String;
        *(_QWORD *)(v27 + 104) = v28;
        if (v33)
        {
          *v34 = v31;
          v35 = (_OWORD *)&unk_1004D9000;
LABEL_18:
          *(_QWORD *)(v27 + 80) = v33;
          os_log(_:dso:log:type:_:)("%@: received suggestedName %@", 29, 2, &_mh_execute_header, v23, v25, v27);

          swift_bridgeObjectRelease(v27);
          countAndFlagsBits = (uint64_t)v88;
          goto LABEL_23;
        }
      }
      else
      {
        v34 = (uint64_t *)(v27 + 72);
        *(_QWORD *)(v27 + 96) = &type metadata for String;
        *(_QWORD *)(v27 + 104) = v28;
      }
      v35 = (_OWORD *)&unk_1004D9000;
      *v34 = 7104878;
      v33 = 0xE300000000000000;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease(object);
    a2 = v91;
  }
  swift_bridgeObjectRetain(a2);
  UTType.init(_:)(v93, a2);
  v36 = v92;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v9, 1, v10) == 1)
  {
    v37 = sub_10000CB4C((uint64_t)v9, &qword_100643EC0);
    v35 = (_OWORD *)&unk_1004D9000;
  }
  else
  {
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v15, v9, v10);
    v39 = UTType.localizedDescription.getter(v38);
    if (v40)
    {
      countAndFlagsBits = v39;
      object = v40;
      v42 = HIBYTE(v40) & 0xF;
      if ((v40 & 0x2000000000000000) == 0)
        v42 = v39 & 0xFFFFFFFFFFFFLL;
      v35 = &unk_1004D9000;
      if (v42)
      {
        v43 = *(id *)DOCLog.UI.unsafeMutableAddressor(v39);
        v45 = static os_log_type_t.info.getter(v44);
        v46 = sub_10006922C((uint64_t *)&unk_100644560);
        v47 = v36;
        v48 = swift_allocObject(v46, 152, 7);
        *(_OWORD *)(v48 + 16) = xmmword_1004D9880;
        *(_QWORD *)(v48 + 56) = &type metadata for String;
        v49 = sub_10006A638();
        *(_QWORD *)(v48 + 32) = 0xD000000000000013;
        *(_QWORD *)(v48 + 40) = 0x80000001005295D0;
        *(_QWORD *)(v48 + 96) = &type metadata for String;
        *(_QWORD *)(v48 + 104) = v49;
        v50 = v93;
        *(_QWORD *)(v48 + 64) = v49;
        *(_QWORD *)(v48 + 72) = v50;
        v51 = v91;
        *(_QWORD *)(v48 + 80) = v91;
        *(_QWORD *)(v48 + 136) = &type metadata for String;
        *(_QWORD *)(v48 + 144) = v49;
        *(_QWORD *)(v48 + 112) = countAndFlagsBits;
        *(_QWORD *)(v48 + 120) = object;
        swift_bridgeObjectRetain(v51);
        swift_bridgeObjectRetain(object);
        os_log(_:dso:log:type:_:)("%@: build filename from type (%@): %@", 37, 2, &_mh_execute_header, v43, v45, v48);

        v52 = swift_bridgeObjectRelease(v48);
        v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v47 + 8))(v15, v10, v52);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v10);
      swift_bridgeObjectRelease(object);
    }
    else
    {
      v37 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v10);
      v35 = (_OWORD *)&unk_1004D9000;
    }
  }
  v54 = *(id *)DOCLog.UI.unsafeMutableAddressor(v37);
  v56 = static os_log_type_t.info.getter(v55);
  v57 = sub_10006922C((uint64_t *)&unk_100644560);
  v58 = swift_allocObject(v57, 72, 7);
  *(_OWORD *)(v58 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v58 + 56) = &type metadata for String;
  *(_QWORD *)(v58 + 64) = sub_10006A638();
  *(_QWORD *)(v58 + 32) = 0xD000000000000013;
  *(_QWORD *)(v58 + 40) = 0x80000001005295D0;
  os_log(_:dso:log:type:_:)("%@: falling back to \"Untitled\"", 30, 2, &_mh_execute_header, v54, v56, v58);

  swift_bridgeObjectRelease(v58);
  result = (id)_DocumentManagerBundle(v59);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v61 = result;
  v94._countAndFlagsBits = 0xD000000000000033;
  v94._object = (void *)0x80000001005295F0;
  v62._countAndFlagsBits = 0x64656C7469746E55;
  v62._object = (void *)0xE800000000000000;
  v63.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v63.value._object = (void *)0xEB00000000656C62;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v62, v63, (NSBundle)v61, v64, v94);
  countAndFlagsBits = v65._countAndFlagsBits;
  object = (unint64_t)v65._object;

LABEL_23:
  v88 = (id *)DOCLog.UI.unsafeMutableAddressor(v53);
  v66 = *v88;
  v68 = static os_log_type_t.info.getter(v67);
  v69 = sub_10006922C((uint64_t *)&unk_100644560);
  v70 = swift_allocObject(v69, 152, 7);
  *(_OWORD *)(v70 + 16) = v35[136];
  *(_QWORD *)(v70 + 56) = &type metadata for String;
  v71 = sub_10006A638();
  *(_QWORD *)(v70 + 32) = 0xD000000000000013;
  *(_QWORD *)(v70 + 40) = 0x80000001005295D0;
  *(_QWORD *)(v70 + 96) = &type metadata for String;
  *(_QWORD *)(v70 + 104) = v71;
  *(_QWORD *)(v70 + 64) = v71;
  *(_QWORD *)(v70 + 72) = countAndFlagsBits;
  *(_QWORD *)(v70 + 80) = object;
  *(_QWORD *)(v70 + 136) = &type metadata for String;
  *(_QWORD *)(v70 + 144) = v71;
  v72 = v93;
  v73 = v91;
  *(_QWORD *)(v70 + 112) = v93;
  *(_QWORD *)(v70 + 120) = v73;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRetain(object);
  os_log(_:dso:log:type:_:)("%@: Need to add extension. Name %@. UTI: %@", 43, 2, &_mh_execute_header, v66, v68, v70);

  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRetain(v73);
  v74 = (uint64_t)v89;
  UTType.init(_:)(v72, v73);
  v75 = v92;
  v76 = v90;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v74, 1, v90) == 1)
  {
    sub_10000CB4C(v74, &qword_100643EC0);
  }
  else
  {
    v77 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v87, v74, v76);
    v78 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    isa = UTType._bridgeToObjectiveC()().super.isa;
    v80 = objc_msgSend(v78, "stringByAppendingPathExtensionForType:", isa);

    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
    object = v81;

    (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v76);
  }
  v82 = *v88;
  v84 = static os_log_type_t.info.getter(v83);
  v85 = swift_allocObject(v69, 112, 7);
  *(_OWORD *)(v85 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v85 + 56) = &type metadata for String;
  *(_QWORD *)(v85 + 64) = v71;
  *(_QWORD *)(v85 + 32) = 0xD000000000000013;
  *(_QWORD *)(v85 + 40) = 0x80000001005295D0;
  *(_QWORD *)(v85 + 96) = &type metadata for String;
  *(_QWORD *)(v85 + 104) = v71;
  *(_QWORD *)(v85 + 72) = countAndFlagsBits;
  *(_QWORD *)(v85 + 80) = object;
  swift_bridgeObjectRetain(object);
  os_log(_:dso:log:type:_:)("%@: Final name is %@.", 21, 2, &_mh_execute_header, v82, v84, v85);

  swift_bridgeObjectRelease(v85);
  return (id)countAndFlagsBits;
}

void sub_100343A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  void *object;
  _QWORD *v25;
  id v26;
  NSString v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  void *v36;
  uint64_t v37;
  id v38;
  NSString v39;
  void *v40;
  id v41;
  void **aBlock;
  uint64_t v43;
  void (*v44)(uint64_t, void *);
  void *v45;
  void *v46;
  _QWORD *v47;
  Swift::String v48;
  Swift::String v49;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v17 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

  v19 = (id)_DocumentManagerBundle(v18);
  if (v19)
  {
    v20 = v19;
    v48._object = (void *)0xE400000000000000;
    v21._countAndFlagsBits = 2003789907;
    v21._object = (void *)0xE400000000000000;
    v22.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v22.value._object = (void *)0xEB00000000656C62;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v48._countAndFlagsBits = 2003789907;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v48)._object;

    v25 = (_QWORD *)swift_allocObject(&unk_1005DF5D8, 48, 7);
    v25[2] = a5;
    v25[3] = a6;
    v25[4] = a7;
    v25[5] = a8;
    swift_retain();
    swift_bridgeObjectRetain(a7);
    v26 = a8;
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v46 = sub_100347188;
    v47 = v25;
    aBlock = _NSConcreteStackBlock;
    v43 = 1107296256;
    v44 = sub_1000602CC;
    v45 = &unk_1005DF5F0;
    v28 = _Block_copy(&aBlock);
    swift_release(v47);
    v29 = (void *)objc_opt_self(UIAlertAction);
    v30 = objc_msgSend(v29, "actionWithTitle:style:handler:", v27, 0, v28);
    _Block_release(v28);

    v31 = (id)_DocumentManagerBundle(objc_msgSend(v17, "addAction:", v30));
    if (v31)
    {
      v32 = v31;
      v49._object = (void *)0xE400000000000000;
      v33._countAndFlagsBits = 1701079368;
      v33._object = (void *)0xE400000000000000;
      v34.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v34.value._object = (void *)0xEB00000000656C62;
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v49._countAndFlagsBits = 1701079368;
      v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v49)._object;

      v37 = swift_allocObject(&unk_1005DF628, 24, 7);
      *(_QWORD *)(v37 + 16) = v26;
      v38 = v26;
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      v46 = sub_1003471B8;
      v47 = (_QWORD *)v37;
      aBlock = _NSConcreteStackBlock;
      v43 = 1107296256;
      v44 = sub_1000602CC;
      v45 = &unk_1005DF640;
      v40 = _Block_copy(&aBlock);
      v41 = objc_msgSend(v29, "actionWithTitle:style:handler:", v39, 1, v40, swift_release(v47).n128_f64[0]);
      _Block_release(v40);

      objc_msgSend(v17, "addAction:", v41);
      objc_msgSend(a9, "presentViewController:animated:completion:", v17, 1, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Int sub_100343DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  while (1)
  {
    v4 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain(v4);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    v6 = String.hasPrefix(_:)(v5);
    swift_bridgeObjectRelease(v4);
    if (!v6)
      break;
    swift_beginAccess(v3, v10, 33, 0);
    String.remove(at:)(15);
    v8 = v7;
    swift_endAccess(v10);
    swift_bridgeObjectRelease(v8);
  }
  return OS_dispatch_semaphore.signal()();
}

void sub_100343E9C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  char isEscapingClosureAtFileLocation;
  _QWORD *v25;
  _QWORD aBlock[5];
  uint64_t v27;
  _QWORD *v28;

  if (a1)
  {
    v11 = (void *)objc_opt_self(DOCManagedPermission);
    v12 = a1;
    v13 = objc_msgSend(v11, "defaultPermission");
    v14 = objc_msgSend(v13, "dataOwnerStateForNode:", v12);

    v28 = _swiftEmptyArrayStorage;
    if (v14 == (id)1)
      v15 = 2;
    else
      v15 = v14 == (id)2;
    v16 = (void *)objc_opt_self(UIPasteboard);
    v17 = (_QWORD *)swift_allocObject(&unk_1005DF290, 80, 7);
    v17[2] = &v28;
    v17[3] = v14;
    v17[4] = a3;
    v17[5] = v12;
    v17[6] = a2;
    v17[7] = a4;
    v17[8] = a5;
    v17[9] = v5;
    v18 = swift_allocObject(&unk_1005DF2B8, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_100345E84;
    *(_QWORD *)(v18 + 24) = v17;
    aBlock[4] = sub_10006657C;
    v27 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005DF2D0;
    v19 = _Block_copy(aBlock);
    v20 = v27;
    v21 = v12;
    v22 = a3;
    v23 = a2;
    swift_retain();
    swift_retain();
    objc_msgSend(v16, "_performAsDataOwner:block:", v15, v19, swift_release(v20).n128_f64[0]);

    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v18, "", 100, 246, 75, 1);
    swift_release(v18);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v25 = v28;
      swift_release(v17);
      swift_bridgeObjectRelease(v25);
    }
  }
}

double sub_10034409C(uint64_t *a1, uint64_t a2, _QWORD *a3, char **a4, char **a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  char **v25;
  _QWORD *v26;
  char **v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  __n128 v40;
  Swift::OpaquePointer v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  _QWORD *v46;
  void *v47;
  _QWORD *v48;
  char **v49;
  _QWORD *v50;
  char **v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char **v59;
  unint64_t v60;
  char **v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD aBlock[5];
  _QWORD *v67;

  v15 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v16 = objc_msgSend(v15, "itemProviders");

  v17 = sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  v19 = *a1;
  *a1 = v18;
  swift_bridgeObjectRelease(v19);
  v20 = *a1;
  v21 = swift_bridgeObjectRetain(*a1);
  sub_100346020(v21);
  LOBYTE(v16) = v22;
  swift_bridgeObjectRelease(v20);
  if ((v16 & 1) != 0)
  {
    if (a2 == 1)
      v23 = 2;
    else
      v23 = a2 == 2;
    v24 = (_QWORD *)swift_allocObject(&unk_1005DF358, 56, 7);
    v24[2] = a4;
    v24[3] = a3;
    v24[4] = a5;
    v24[5] = a6;
    v24[6] = a7;
    v25 = a4;
    v26 = a3;
    v27 = a5;
    swift_retain();
    sub_100345EA8(v23, v26, (uint64_t)sub_100346344, (uint64_t)v24);
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  else
  {
    v29 = *a1;
    if ((unint64_t)v29 >> 62)
      goto LABEL_30;
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v29);
    for (; v30; v30 = _CocoaArrayWrapper.endIndex.getter(v54))
    {
      v60 = a6;
      v61 = a4;
      a6 = 0;
      v65 = v29 & 0xC000000000000001;
      v56 = v29 + 32;
      v57 = v29 & 0xFFFFFFFFFFFFFF8;
      v55 = a7;
      v58 = a3;
      v59 = a5;
      v63 = v30;
      v64 = v29;
      while (1)
      {
        if (v65)
        {
          v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a6, v29);
        }
        else
        {
          if (a6 >= *(_QWORD *)(v57 + 16))
            goto LABEL_29;
          v31 = *(id *)(v56 + 8 * a6);
        }
        v32 = v31;
        if (__OFADD__(a6++, 1))
          break;
        a3 = (_QWORD *)a7;
        v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v31);
        v35 = static os_log_type_t.debug.getter(v34);
        v36 = sub_10006922C((uint64_t *)&unk_100644560);
        v37 = swift_allocObject(v36, 112, 7);
        *(_OWORD *)(v37 + 16) = xmmword_1004D4CE0;
        *(_QWORD *)(v37 + 56) = &type metadata for String;
        *(_QWORD *)(v37 + 64) = sub_10006A638();
        strcpy((char *)(v37 + 32), "typeToRequest");
        *(_WORD *)(v37 + 46) = -4864;
        a5 = &selRef_setAccessibilityValue_;
        v38 = objc_msgSend(v32, "registeredTypeIdentifiers");
        v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String);

        *(_QWORD *)(v37 + 96) = sub_10006922C(&qword_10064F390);
        *(_QWORD *)(v37 + 104) = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
        *(_QWORD *)(v37 + 72) = v39;
        os_log(_:dso:log:type:_:)("%@: registeredTypes: %@", 23, 2, &_mh_execute_header, v34, v35, v37);

        v40 = swift_bridgeObjectRelease(v37);
        v41._rawValue = *(void **)DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v40);
        swift_bridgeObjectRetain(v41._rawValue);
        v42 = objc_msgSend(v32, "registeredTypeIdentifiers");
        v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, &type metadata for String);

        a4 = *(char ***)(v29 + 16);
        if (a4)
        {
          v44 = *(_QWORD *)(v29 + 32);
          v43 = *(_QWORD *)(v29 + 40);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v43);
          if (String.conformsToAnyOf(_:)(v41))
          {
LABEL_24:
            a3 = v58;
            a5 = v59;
            swift_bridgeObjectRelease_n(v29, 2);
            swift_bridgeObjectRelease(v41._rawValue);
            v45 = String._bridgeToObjectiveC()();
            v46 = (_QWORD *)swift_allocObject(&unk_1005DF308, 88, 7);
            v46[2] = v32;
            v46[3] = v44;
            v46[4] = v43;
            v46[5] = a8;
            v46[6] = v58;
            v46[7] = v61;
            v46[8] = v59;
            v46[9] = v60;
            v46[10] = a7;
            aBlock[4] = sub_1003462D0;
            v67 = v46;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_100175118;
            aBlock[3] = &unk_1005DF320;
            v47 = _Block_copy(aBlock);
            v48 = v67;
            v49 = v61;
            v50 = v58;
            v51 = v59;
            swift_retain();
            v52 = v32;
            v53 = objc_msgSend(v52, "loadFileRepresentationForTypeIdentifier:completionHandler:", v45, v47, swift_release(v48).n128_f64[0]);

            _Block_release(v47);
          }
          else
          {
            swift_bridgeObjectRelease(v43);
            if (a4 != (char **)1)
            {
              a3 = (_QWORD *)(v29 + 56);
              a7 = 1;
              while (1)
              {
                a5 = (char **)(a7 + 1);
                if (__OFADD__(a7, 1))
                  break;
                v44 = *(a3 - 1);
                v43 = *a3;
                swift_bridgeObjectRetain(*a3);
                if (String.conformsToAnyOf(_:)(v41))
                {
                  a7 = v55;
                  goto LABEL_24;
                }
                swift_bridgeObjectRelease(v43);
                ++a7;
                a3 += 2;
                if (a5 == a4)
                  goto LABEL_22;
              }
              __break(1u);
              break;
            }
LABEL_22:
            swift_bridgeObjectRelease_n(v29, 2);

            swift_bridgeObjectRelease(v41._rawValue);
            a7 = v55;
          }
          v29 = v64;
          if (a6 == v63)
            goto LABEL_34;
        }
        else
        {

          swift_bridgeObjectRelease(v41._rawValue);
          swift_bridgeObjectRelease(v29);
          v29 = v64;
          if (a6 == v63)
            goto LABEL_34;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      if (v29 < 0)
        v54 = v29;
      else
        v54 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
    }
LABEL_34:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  return result;
}

void sub_10034464C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  double v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t i;
  unint64_t v43;
  unint64_t v44;
  void **v45;
  void **v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v62 = a4;
  v63 = a6;
  v61 = a5;
  v64 = a3;
  v69 = a2;
  v7 = type metadata accessor for DOCOperationItem(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v60 = (void **)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v59 - v10);
  v65 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_26:
    if (a1 < 0)
      v40 = a1;
    else
      v40 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
    {
LABEL_3:
      v67 = a1;
      v68 = a1 & 0xC000000000000001;
      v13 = 4;
      v66 = v12;
      do
      {
        if (v68)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
        else
          v15 = *(id *)(a1 + 8 * v13);
        v16 = v15;
        a1 = v13 - 3;
        if (__OFADD__(v13 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        v17 = objc_autoreleasePoolPush();
        v18 = objc_msgSend(v16, "effectiveParentItemIdentifier");
        v19 = objc_msgSend(v69, "itemIdentifier");
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v22 = v21;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v25 = v20 == v23 && v22 == v24;
        if (v25)
        {

          swift_bridgeObjectRelease_n(v22, 2);
        }
        else
        {
          v26 = v24;
          v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0);

          swift_bridgeObjectRelease(v22);
          *(_QWORD *)&v28 = swift_bridgeObjectRelease(v26).n128_u64[0];
          if ((v27 & 1) == 0)
          {
            objc_autoreleasePoolPop(v17);

            goto LABEL_5;
          }
        }
        v29 = objc_msgSend(v16, "providerDomainID", v28);
        v30 = objc_msgSend(v69, "providerDomainID");
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v36 = v34;
        if (v31 == v35 && v33 == v34)
        {

          swift_bridgeObjectRelease_n(v33, 2);
          objc_autoreleasePoolPop(v17);

LABEL_20:
          a1 = v67;
          swift_bridgeObjectRelease(v67);
          v37 = 1;
          if (!v65)
            goto LABEL_31;
LABEL_21:
          if (a1 < 0)
            v38 = a1;
          else
            v38 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v39 = _CocoaArrayWrapper.endIndex.getter(v38);
          swift_bridgeObjectRelease(a1);
          goto LABEL_32;
        }
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v33, v35, v34, 0);

        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease(v36);
        objc_autoreleasePoolPop(v17);

        if ((v14 & 1) != 0)
          goto LABEL_20;
LABEL_5:
        ++v13;
        v25 = a1 == v66;
        a1 = v67;
      }
      while (!v25);
    }
  }
  swift_bridgeObjectRelease(a1);
  v37 = 0;
  if (v65)
    goto LABEL_21;
LABEL_31:
  v39 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_32:
  v41 = _swiftEmptyArrayStorage;
  if (!v39)
    goto LABEL_44;
  v72 = _swiftEmptyArrayStorage;
  sub_100155054(0, v39 & ~(v39 >> 63), 0);
  if ((v39 & 0x8000000000000000) == 0)
  {
    v41 = v72;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v39; ++i)
      {
        *v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        swift_storeEnumTagMultiPayload(v11, v71, 1);
        v72 = v41;
        v44 = v41[2];
        v43 = v41[3];
        if (v44 >= v43 >> 1)
        {
          sub_100155054(v43 > 1, v44 + 1, 1);
          v41 = v72;
        }
        v41[2] = v44 + 1;
        sub_1001D0788((uint64_t)v11, (uint64_t)v41+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v44, type metadata accessor for DOCOperationItem);
      }
    }
    else
    {
      v45 = (void **)(a1 + 32);
      v46 = v60;
      do
      {
        v47 = *v45;
        *v46 = *v45;
        swift_storeEnumTagMultiPayload(v46, v71, 1);
        v72 = v41;
        v49 = v41[2];
        v48 = v41[3];
        v50 = v47;
        if (v49 >= v48 >> 1)
        {
          sub_100155054(v48 > 1, v49 + 1, 1);
          v41 = v72;
        }
        v41[2] = v49 + 1;
        sub_1001D0788((uint64_t)v46, (uint64_t)v41+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v49, type metadata accessor for DOCOperationItem);
        ++v45;
        --v39;
      }
      while (v39);
    }
LABEL_44:
    v51 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v52 = (_QWORD *)swift_allocObject(&unk_1005DF498, 48, 7);
    v54 = v61;
    v53 = v62;
    v55 = v69;
    v52[2] = v62;
    v52[3] = v55;
    v56 = v63;
    v52[4] = v54;
    v52[5] = v56;
    v57 = v53;
    v58 = v55;
    swift_retain();
    sub_100477E1C(1, (uint64_t)v41, (uint64_t)v55, v37, 0, 1, v64, (uint64_t)sub_1003463E4, (uint64_t)v52);
    swift_bridgeObjectRelease(v41);

    swift_release(v52);
    return;
  }
  __break(1u);
}

uint64_t sub_100344B94(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1005DF4C0, 56, 7);
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a5;
  v18[6] = a1;
  aBlock[4] = sub_10034642C;
  v33 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005DF4D8;
  v19 = _Block_copy(aBlock);
  v20 = v33;
  swift_bridgeObjectRetain(a1);
  v21 = a2;
  v22 = a3;
  swift_retain();
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_10006922C((uint64_t *)&unk_100647540);
  v26 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v10, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v30);
}

void sub_100344DD0(void *a1, void *a2, void (*a3)(uint64_t, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "hostIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = a2;
  Date.init()();
  v17 = objc_allocWithZone((Class)DOCHotFolderEvent);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v17, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v18, v16, 1, isa, 1.0);

  v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v21);
  DOCSmartFolderManager.register(event:)(v20);

  a3(a5, 0);
}

double sub_100344F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void (**a8)(_QWORD, _QWORD), void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::Bool v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(void);
  void *v46;
  id v47;
  id v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  unint64_t v61;
  Class isa;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  void *v67;
  dispatch_semaphore_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  void *v74;
  char *v75;
  char *v76;
  id v77;
  char *v78;
  id v79;
  NSObject *v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  NSURL *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  double result;
  uint64_t v94;
  id v95;
  __int128 v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  dispatch_semaphore_t v100;
  Class v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void (**v106)(_QWORD, _QWORD);
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  __int128 aBlock;
  void (*v112)(uint64_t, void *);
  void *v113;
  uint64_t v114;
  char *v115;

  v106 = a8;
  v109 = a6;
  v110 = a7;
  v15 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v15);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v108 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v94 - v22;
  sub_1002320B8(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v24 = sub_10000CB4C((uint64_t)v17, &qword_100643470);
    v25 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
    v26 = static os_log_type_t.error.getter(v25);
    v27 = sub_10006922C((uint64_t *)&unk_100644560);
    v28 = swift_allocObject(v27, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v29 = sub_10006A638();
    *(_QWORD *)(v28 + 64) = v29;
    *(_QWORD *)(v28 + 32) = 0xD00000000000004CLL;
    *(_QWORD *)(v28 + 40) = 0x8000000100529420;
    if (a2)
    {
      v30 = _convertErrorToNSError(_:)(a2);
      v113 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v114 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&aBlock = v30;
      sub_1000E85C4(&aBlock, v28 + 72);
    }
    else
    {
      *(_QWORD *)(v28 + 96) = &type metadata for String;
      *(_QWORD *)(v28 + 104) = v29;
      *(_QWORD *)(v28 + 72) = 0xD000000000000013;
      *(_QWORD *)(v28 + 80) = 0x8000000100516BA0;
    }
    os_log(_:dso:log:type:_:)("%@: Unable to get URL. Error: %@", 32, 2, &_mh_execute_header, v25, v26, v28);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v103 = a10;
    v104 = a9;
    v102 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v102(v23, v17, v18);
    v31 = sub_1003432C8(a4, a5);
    v33 = v32;
    v34._countAndFlagsBits = 46;
    v34._object = (void *)0xE100000000000000;
    v35 = String.hasPrefix(_:)(v34);
    v105 = a11;
    v36 = v23;
    if (v35)
    {
      v95 = sub_100346DD0(v110, v31, v33);
      v38 = v37;
      swift_bridgeObjectRelease(v33);
      v33 = v38;
      v39 = v106;
    }
    else
    {
      v39 = v106;
      v95 = v31;
    }
    v100 = dispatch_semaphore_create(0);
    v40 = sub_10006922C((uint64_t *)&unk_100644550);
    v41 = *(unsigned __int8 *)(v19 + 80);
    v42 = (v41 + 32) & ~v41;
    v43 = v42 + *(_QWORD *)(v19 + 72);
    v99 = v41 | 7;
    v44 = swift_allocObject(v40, v43, v41 | 7);
    v96 = xmmword_1004D9670;
    *(_OWORD *)(v44 + 16) = xmmword_1004D9670;
    v45 = *(void (**)(void))(v19 + 16);
    v107 = v36;
    ((void (*)(uint64_t, char *, uint64_t))v45)(v44 + v42, v36, v18);
    v46 = (void *)objc_opt_self(DOCUndoManager);
    v47 = v39;
    v97 = v47;
    v48 = objc_msgSend(v46, "shared");
    v101 = (Class)type metadata accessor for DOCCopyOperation();
    v49 = objc_allocWithZone(v101);
    v50 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)(v44, v47, v48);
    v51 = sub_10006922C(&qword_100644AB8);
    v52 = sub_10006922C((uint64_t *)&unk_100644AC0);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(_QWORD *)(v53 + 72);
    v55 = *(unsigned __int8 *)(v53 + 80);
    v106 = (void (**)(_QWORD, _QWORD))v19;
    v56 = (v55 + 32) & ~v55;
    v57 = swift_allocObject(v51, v56 + v54, v55 | 7);
    *(_OWORD *)(v57 + 16) = v96;
    v58 = (_QWORD *)(v57 + v56 + *(int *)(v52 + 48));
    v59 = v107;
    v45();
    *v58 = v95;
    v58[1] = v33;
    v60 = v50;
    v61 = sub_1003F29CC(v57);
    sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v60, "setTargetFilenamesByURL:", isa, swift_bridgeObjectRelease(v61).n128_f64[0]);

    objc_msgSend(v60, "setLastUsageUpdatePolicy:", 2);
    objc_msgSend(v60, "setShouldBounceOnCollision:", 1);
    v63 = v108;
    ((void (*)(char *, char *, uint64_t))v45)(v108, v59, v18);
    v64 = (v41 + 64) & ~v41;
    v65 = (v20 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    v66 = (char *)swift_allocObject(&unk_1005DF510, v65 + 16, v99);
    v67 = v110;
    *((_QWORD *)v66 + 2) = v109;
    *((_QWORD *)v66 + 3) = v67;
    v68 = v100;
    v69 = v104;
    *((_QWORD *)v66 + 4) = v100;
    *((_QWORD *)v66 + 5) = v69;
    v70 = v18;
    v98 = v18;
    v71 = v97;
    *((_QWORD *)v66 + 6) = v97;
    *((_QWORD *)v66 + 7) = v60;
    v102(&v66[v64], v63, v70);
    v72 = &v66[v65];
    v73 = v105;
    *(_QWORD *)v72 = v103;
    *((_QWORD *)v72 + 1) = v73;
    v114 = (uint64_t)sub_1003464F0;
    v115 = v66;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v112 = sub_10015936C;
    v113 = &unk_1005DF528;
    v74 = _Block_copy(&aBlock);
    v75 = v115;
    v76 = v60;
    v77 = v71;
    v78 = v76;
    v79 = v67;
    v80 = v68;
    v81 = v69;
    swift_retain();
    objc_msgSend(v78, "setActionCompletionBlock:", v74, swift_release(v75).n128_f64[0]);
    _Block_release(v74);

    v83 = *(id *)DOCLog.UI.unsafeMutableAddressor(v82);
    v84 = static os_log_type_t.debug.getter(v83);
    v85 = sub_10006922C((uint64_t *)&unk_100644560);
    v86 = swift_allocObject(v85, 152, 7);
    *(_OWORD *)(v86 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v86 + 56) = &type metadata for String;
    *(_QWORD *)(v86 + 64) = sub_10006A638();
    *(_QWORD *)(v86 + 32) = 0xD00000000000004CLL;
    *(_QWORD *)(v86 + 40) = 0x8000000100529420;
    *(_QWORD *)(v86 + 96) = v101;
    *(_QWORD *)(v86 + 104) = sub_10005A360(&qword_10064F718, (uint64_t (*)(uint64_t))type metadata accessor for DOCCopyOperation, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v86 + 72) = v78;
    v87 = v78;
    v88 = v107;
    URL._bridgeToObjectiveC()(v89);
    v91 = v90;
    *(_QWORD *)(v86 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v86 + 144) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v86 + 112) = v91;
    os_log(_:dso:log:type:_:)("%@: adding copy operation %@", 28, 2, &_mh_execute_header, v83, v84, v86);

    swift_bridgeObjectRelease(v86);
    v92 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    objc_msgSend(v92, "scheduleAction:", v87);

    OS_dispatch_semaphore.wait()();
    ((void (**)(char *, uint64_t))v106)[1](v88, v98);
  }
  return result;
}

void sub_1003456AC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  void *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  _QWORD *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void **aBlock;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  void *v76;
  void (*v77)();
  _QWORD *v78;

  v66 = a6;
  v67 = a7;
  v71 = a5;
  v72 = a4;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v19);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v23 = (void *)_convertErrorToNSError(_:)(a1);
    v24 = *(id *)DOCLog.UI.unsafeMutableAddressor(v23);
    v25 = static os_log_type_t.error.getter(v24);
    v26 = sub_10006922C((uint64_t *)&unk_100644560);
    v27 = swift_allocObject(v26, 112, 7);
    *(_OWORD *)(v27 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v27 + 56) = &type metadata for String;
    *(_QWORD *)(v27 + 64) = sub_10006A638();
    *(_QWORD *)(v27 + 32) = 0xD00000000000004CLL;
    *(_QWORD *)(v27 + 40) = 0x8000000100529420;
    *(_QWORD *)(v27 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v27 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v27 + 72) = v23;
    v28 = v23;
    os_log(_:dso:log:type:_:)("%@: Copy Operation failed: %@", 29, 2, &_mh_execute_header, v24, v25, v27);

    swift_bridgeObjectRelease(v27);
    v29 = swift_allocObject(&unk_1005DF6C8, 32, 7);
    *(_QWORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = a3;
    v77 = sub_10034730C;
    v78 = (_QWORD *)v29;
    aBlock = _NSConcreteStackBlock;
    v74 = 1107296256;
    v75 = sub_10004A82C;
    v76 = &unk_1005DF6E0;
    v30 = _Block_copy(&aBlock);
    v31 = v78;
    v32 = v28;
    v33 = a3;
    swift_release(v31);
    DOCRunInMainThread(v30);
    _Block_release(v30);

    OS_dispatch_semaphore.signal()();
  }
  else
  {
    v61 = a9;
    v62 = a10;
    v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v65 = static OS_dispatch_queue.main.getter(v34);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a8, v19);
    v35 = *(unsigned __int8 *)(v20 + 80);
    v36 = (v35 + 40) & ~v35;
    v37 = (v21 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
    v64 = v13;
    v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    v40 = (char *)swift_allocObject(&unk_1005DF678, v39 + 8, v35 | 7);
    v60 = v18;
    v41 = v66;
    *((_QWORD *)v40 + 2) = v71;
    *((_QWORD *)v40 + 3) = v41;
    v63 = v15;
    v42 = v67;
    *((_QWORD *)v40 + 4) = v67;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v40[v36], v22, v19);
    v43 = &v40[v37];
    v44 = v62;
    *(_QWORD *)v43 = v61;
    *((_QWORD *)v43 + 1) = v44;
    *(_QWORD *)&v40[v38] = 0;
    v45 = v72;
    *(_QWORD *)&v40[v39] = v72;
    v77 = sub_1003472A4;
    v78 = v40;
    aBlock = _NSConcreteStackBlock;
    v74 = 1107296256;
    v75 = sub_10004A82C;
    v76 = &unk_1005DF690;
    v46 = _Block_copy(&aBlock);
    v47 = v78;
    v48 = v71;
    v49 = v41;
    v50 = v42;
    swift_retain();
    v51 = v45;
    swift_release(v47);
    v52 = v60;
    static DispatchQoS.unspecified.getter(v53);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v54 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v55 = sub_10006922C((uint64_t *)&unk_100647540);
    v56 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v58 = v63;
    v57 = v64;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v55, v56, v64, v54);
    v59 = (void *)v65;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v58, v46);
    _Block_release(v46);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v57);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v69);
  }
}

void sub_100345B50(void *a1, void *a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSString v24;
  Class isa;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(id, uint64_t);
  uint64_t v44;
  _QWORD v45[5];

  v43 = a5;
  v44 = a8;
  v41 = a7;
  v42 = a6;
  v39 = a4;
  v40 = a3;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(a1, "hostIdentifier", v16);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = a2;
  Date.init()(v22);
  v23 = objc_allocWithZone((Class)DOCHotFolderEvent);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v26 = objc_msgSend(v23, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v24, v22, 1, isa, 1.0);

  v27 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v28 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v27);
  DOCSmartFolderManager.register(event:)(v26);

  v29 = objc_msgSend(v40, "transferResults");
  if (v29)
  {
    v30 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for AnyHashable, v30, &protocol witness table for AnyHashable);

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v39, v10);
    v32 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    AnyHashable.init<A>(_:)(v13, v10, v32);
    if (*(_QWORD *)(v31 + 16) && (v33 = sub_100067654((uint64_t)v45), (v34 & 1) != 0))
    {
      v35 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v33);
      swift_bridgeObjectRelease(v31);
      sub_100067748((uint64_t)v45);
      v36 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v37 = swift_allocObject(v36, 40, 7);
      *(_OWORD *)(v37 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v37 + 32) = v35;
      v45[0] = v37;
      specialized Array._endMutation()(v37);
      v29 = (id)v45[0];
    }
    else
    {
      swift_bridgeObjectRelease(v31);
      sub_100067748((uint64_t)v45);
      v29 = 0;
    }
  }
  v43(v29, v41);
  swift_bridgeObjectRelease(v29);
  OS_dispatch_semaphore.signal()();

}

uint64_t type metadata accessor for DOCPasteboardHandler()
{
  return objc_opt_self(_TtC5Files20DOCPasteboardHandler);
}

uint64_t sub_100345E48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 80, 7);
}

double sub_100345E84()
{
  uint64_t v0;

  return sub_10034409C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(char ***)(v0 + 40), *(char ***)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_100345E98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100345EA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  _QWORD aBlock[5];
  uint64_t v16;
  _QWORD *v17;

  v17 = _swiftEmptyArrayStorage;
  v8 = (void *)objc_opt_self(UIPasteboard);
  v9 = (_QWORD *)swift_allocObject(&unk_1005DF380, 48, 7);
  v9[2] = &v17;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v10 = swift_allocObject(&unk_1005DF3A8, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_100346380;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_10010DB64;
  v16 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005DF3C0;
  v11 = _Block_copy(aBlock);
  v12 = v16;
  v13 = a2;
  swift_retain();
  swift_retain();
  objc_msgSend(v8, "_performAsDataOwner:block:", a1, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v10, "", 100, 45, 51, 1);
  swift_release(v10);
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v17;
    swift_release(v9);
    swift_bridgeObjectRelease(v14);
  }
}

void sub_100346020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  BOOL v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;

  v2 = sub_10006922C(&qword_10064F720);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DOCDragPasteboardType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
LABEL_19:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v9)
    {
LABEL_3:
      v10 = 0;
      v24 = a1;
      v25 = a1 & 0xC000000000000001;
      v21 = a1 + 32;
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
      v23 = v9;
      do
      {
        if (v25)
        {
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
          v12 = __OFADD__(v10++, 1);
          if (v12)
            goto LABEL_18;
        }
        else
        {
          if (v10 >= *(_QWORD *)(v22 + 16))
          {
            __break(1u);
            return;
          }
          v11 = *(id *)(v21 + 8 * v10);
          v12 = __OFADD__(v10++, 1);
          if (v12)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v26 = v11;
        v13 = objc_msgSend(v11, "registeredTypeIdentifiers", v21);
        v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String);

        v15 = *(_QWORD *)(v14 + 16);
        if (v15)
        {
          v16 = (_QWORD *)(v14 + 40);
          do
          {
            v17 = *(v16 - 1);
            swift_bridgeObjectRetain(*v16);
            DOCDragPasteboardType.init(_:)(v17);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
            {
              sub_10000CB4C((uint64_t)v4, &qword_10064F720);
            }
            else
            {
              v18 = sub_1001D0788((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
              v19 = DOCDragPasteboardType.isFPItemFileOrLocation.getter(v18);
              sub_1000E2A78((uint64_t)v8);
              if ((v19 & 1) != 0)
              {
                swift_bridgeObjectRelease(v24);
                swift_bridgeObjectRelease(v14);

                return;
              }
            }
            v16 += 2;
            --v15;
          }
          while (v15);
        }

        swift_bridgeObjectRelease(v14);
        a1 = v24;
      }
      while (v10 != v23);
    }
  }
  swift_bridgeObjectRelease(a1);
}

uint64_t sub_100346284()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

double sub_1003462D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100344F38(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(void (***)(_QWORD, _QWORD))(v2 + 56), *(void **)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100346308()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100346344(uint64_t a1)
{
  uint64_t v1;

  sub_10034464C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100346354()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_100346380()
{
  uint64_t v0;

  return sub_100340900(*(uint64_t **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10034638C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10034639C(uint64_t a1)
{
  uint64_t v1;

  sub_100340A40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003463A4()
{
  return sub_100347438((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003463B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003463E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100344B94(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003463F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10034642C()
{
  uint64_t v0;

  sub_100344DD0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10034643C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release(*(id *)((char *)v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1003464F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1003456AC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), v1 + v4, *v5, v5[1]);
}

void sub_100346560(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, NSObject *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  dispatch_group_t v49;
  uint64_t v50;
  __int128 aBlock;
  uint64_t (*v52)(uint64_t);
  void *v53;
  uint64_t v54;
  uint64_t v55;

  v49 = a5;
  v50 = a2;
  v14 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002320B8(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v29 = (_QWORD *)swift_allocObject(&unk_1005DF920, 56, 7);
    v29[2] = a3;
    v29[3] = a4;
    v29[4] = a6;
    v29[5] = a7;
    v29[6] = a8;
    v30 = a4;
    v31 = a6;
    swift_retain();
    v32 = a8;
    v33 = a3;
    FPItemManager.doc_fetchItem(for:completionHandler:)(v20, sub_1003473D4, v29);
    swift_release(v29);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return;
  }
  v49 = a3;
  v21 = sub_10000CB4C((uint64_t)v16, &qword_100643470);
  v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v21);
  v23 = static os_log_type_t.error.getter(v22);
  v24 = sub_10006922C((uint64_t *)&unk_100644560);
  v25 = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  v26 = sub_10006A638();
  *(_QWORD *)(v25 + 64) = v26;
  *(_QWORD *)(v25 + 32) = 0xD000000000000060;
  *(_QWORD *)(v25 + 40) = 0x8000000100529750;
  v27 = v50;
  if (v50)
  {
    v28 = _convertErrorToNSError(_:)(v50);
    v53 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v54 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)&aBlock = v28;
    sub_1000E85C4(&aBlock, v25 + 72);
  }
  else
  {
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v26;
    *(_QWORD *)(v25 + 72) = 0xD000000000000013;
    *(_QWORD *)(v25 + 80) = 0x8000000100516BA0;
  }
  os_log(_:dso:log:type:_:)("%@: Unable to get URL. Error: %@", 32, 2, &_mh_execute_header, v22, v23, v25);

  swift_bridgeObjectRelease(v25);
  dispatch_group_leave(v49);
  if (v27)
  {
    swift_errorRetain(v27);
    v34 = (void *)_convertErrorToNSError(_:)(v27);
    v35 = objc_msgSend(v34, "domain");

    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSItemProviderErrorDomain);
    v41 = v39;
    if (v36 == v40 && v38 == v39)
    {
      swift_bridgeObjectRelease_n(v38, 2);
    }
    else
    {
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v41);
      if ((v42 & 1) == 0)
        goto LABEL_12;
    }
    v43 = (void *)_convertErrorToNSError(_:)(v27);
    v44 = objc_msgSend(v43, "code");

    if (v44 == (id)-1000)
    {
LABEL_14:
      swift_errorRelease(v27);
      return;
    }
LABEL_12:
    if (a4)
    {
      v45 = swift_allocObject(&unk_1005DF8D0, 32, 7);
      *(_QWORD *)(v45 + 16) = v27;
      *(_QWORD *)(v45 + 24) = a4;
      v54 = (uint64_t)sub_10034730C;
      v55 = v45;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v52 = sub_10004A82C;
      v53 = &unk_1005DF8E8;
      v46 = _Block_copy(&aBlock);
      v47 = v55;
      v48 = a4;
      swift_errorRetain(v27);
      swift_release(v47);
      DOCRunInMainThread(v46);
      _Block_release(v46);
      swift_errorRelease(v27);

      return;
    }
    goto LABEL_14;
  }
}

void sub_100346998(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, NSObject *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  __n128 v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  dispatch_group_t v50;
  uint64_t v51;
  __int128 aBlock;
  uint64_t (*v53)(uint64_t);
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v50 = a5;
  v51 = a2;
  v14 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002320B8(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v29 = (_QWORD *)swift_allocObject(&unk_1005DFBF0, 56, 7);
    v29[2] = a3;
    v29[3] = a4;
    v29[4] = a6;
    v29[5] = a7;
    v29[6] = a8;
    v30 = a4;
    v31 = a6;
    swift_retain();
    v32 = a8;
    v33 = a3;
    FPItemManager.doc_fetchItem(for:completionHandler:)(v20, sub_100347540, v29);
    v34 = swift_release(v29);
    (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v34);
    return;
  }
  v50 = a3;
  v21 = sub_10000CB4C((uint64_t)v16, &qword_100643470);
  v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v21);
  v23 = static os_log_type_t.error.getter(v22);
  v24 = sub_10006922C((uint64_t *)&unk_100644560);
  v25 = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  v26 = sub_10006A638();
  *(_QWORD *)(v25 + 64) = v26;
  *(_QWORD *)(v25 + 32) = 0xD000000000000060;
  *(_QWORD *)(v25 + 40) = 0x8000000100529750;
  v27 = v51;
  if (v51)
  {
    v28 = _convertErrorToNSError(_:)(v51);
    v54 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v55 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)&aBlock = v28;
    sub_1000E85C4(&aBlock, v25 + 72);
  }
  else
  {
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = v26;
    *(_QWORD *)(v25 + 72) = 0xD000000000000013;
    *(_QWORD *)(v25 + 80) = 0x8000000100516BA0;
  }
  os_log(_:dso:log:type:_:)("%@: Unable to get URL. Error: %@", 32, 2, &_mh_execute_header, v22, v23, v25);

  swift_bridgeObjectRelease(v25);
  dispatch_group_leave(v50);
  if (v27)
  {
    swift_errorRetain(v27);
    v35 = (void *)_convertErrorToNSError(_:)(v27);
    v36 = objc_msgSend(v35, "domain");

    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSItemProviderErrorDomain);
    v42 = v40;
    if (v37 == v41 && v39 == v40)
    {
      swift_bridgeObjectRelease_n(v39, 2);
    }
    else
    {
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v42);
      if ((v43 & 1) == 0)
        goto LABEL_12;
    }
    v44 = (void *)_convertErrorToNSError(_:)(v27);
    v45 = objc_msgSend(v44, "code");

    if (v45 == (id)-1000)
    {
LABEL_14:
      swift_errorRelease(v27);
      return;
    }
LABEL_12:
    if (a4)
    {
      v46 = swift_allocObject(&unk_1005DFBA0, 32, 7);
      *(_QWORD *)(v46 + 16) = v27;
      *(_QWORD *)(v46 + 24) = a4;
      v55 = (uint64_t)sub_10034730C;
      v56 = v46;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v53 = sub_10004A82C;
      v54 = &unk_1005DFBB8;
      v47 = _Block_copy(&aBlock);
      v48 = v56;
      v49 = a4;
      swift_errorRetain(v27);
      swift_release(v48);
      DOCRunInMainThread(v47);
      _Block_release(v47);
      swift_errorRelease(v27);

      return;
    }
    goto LABEL_14;
  }
}

id sub_100346DD0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  dispatch_semaphore_t v6;
  id result;
  void *v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String *v24;
  void *v25;
  Swift::String *v26;
  NSObject *v27;
  id v28;
  uint64_t v29;
  _QWORD aBlock[5];
  Swift::String *v32;
  Swift::String v33;
  Swift::String v34;

  v5 = swift_allocObject(&unk_1005DF560, 32, 7);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_bridgeObjectRetain(a3);
  v6 = dispatch_semaphore_create(0);
  result = (id)_DocumentManagerBundle(v6);
  if (result)
  {
    v8 = result;
    v33._object = (void *)0x8000000100529500;
    v9._object = (void *)0x80000001005294C0;
    v9._countAndFlagsBits = 0x1000000000000032;
    v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEB00000000656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0xD000000000000020;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v33);

    v13 = sub_10006922C((uint64_t *)&unk_100644560);
    v14 = swift_allocObject(v13, 72, 7);
    *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v14 + 56) = &type metadata for String;
    *(_QWORD *)(v14 + 64) = sub_10006A638();
    *(_QWORD *)(v14 + 32) = a2;
    *(_QWORD *)(v14 + 40) = a3;
    swift_bridgeObjectRetain(a3);
    v15 = static String.localizedStringWithFormat(_:_:)(v12._countAndFlagsBits, v12._object, v14);
    v17 = v16;
    swift_bridgeObjectRelease(v12._object);
    swift_bridgeObjectRelease(v14);
    result = (id)_DocumentManagerBundle(v18);
    if (result)
    {
      v19 = result;
      v34._countAndFlagsBits = 0xD000000000000022;
      v20._countAndFlagsBits = 0xD000000000000026;
      v34._object = (void *)0x8000000100529560;
      v20._object = (void *)0x8000000100529530;
      v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v21.value._object = (void *)0xEB00000000656C62;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v34);

      v24 = (Swift::String *)swift_allocObject(&unk_1005DF588, 88, 7);
      v24[1]._countAndFlagsBits = v15;
      v24[1]._object = v17;
      v24[2] = v23;
      v24[3]._countAndFlagsBits = v5;
      v24[3]._object = a2;
      v24[4]._countAndFlagsBits = a3;
      v24[4]._object = v6;
      v24[5]._countAndFlagsBits = (uint64_t)a1;
      aBlock[4] = sub_100347120;
      v32 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005DF5A0;
      v25 = _Block_copy(aBlock);
      v26 = v32;
      swift_bridgeObjectRetain(a3);
      swift_retain();
      v27 = v6;
      v28 = a1;
      swift_release(v26);
      DOCRunInMainThread(v25);
      _Block_release(v25);
      OS_dispatch_semaphore.wait()();

      swift_beginAccess(v5 + 16, aBlock, 0, 0);
      v29 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain(*(_QWORD *)(v5 + 24));
      swift_release(v5);
      return (id)v29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003470B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003470D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 88, 7);
}

void sub_100347120()
{
  uint64_t v0;

  sub_100343A50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_100347154()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

Swift::Int sub_100347188(uint64_t a1)
{
  uint64_t v1;

  return sub_100343DE0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100347194()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_1003471B8()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003471D8()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release(*(id *)((char *)v0 + v6 + 8));
  swift_errorRelease(*(id *)((char *)v0 + v7));

  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1003472A4()
{
  void **v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100345B50(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, *(void (**)(id, uint64_t))((char *)v0 + v3), *(uint64_t *)((char *)v0 + v3 + 8), *(uint64_t *)((char *)v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100347310()
{
  return sub_100347438((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10034731C()
{
  uint64_t v0;

  return sub_10034324C(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t (*)(uint64_t))sub_10043B7D0);
}

uint64_t sub_100347344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003474A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100346560);
}

void sub_100347354(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003421E4(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), (uint64_t)&unk_1005DF880, (uint64_t)sub_1003473C0, (uint64_t)&unk_1005DF898, &unk_1005DF830, (uint64_t)sub_10034730C, (uint64_t)&unk_1005DF848);
}

void sub_1003473C0()
{
  sub_1003473E8((uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_100153988);
}

uint64_t sub_1003473D4(uint64_t a1, uint64_t a2)
{
  return sub_1000AD148(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100342A94);
}

void sub_1003473E8(uint64_t (*a1)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;

  sub_100343044(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), a1);
}

uint64_t sub_100347408()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034742C()
{
  return sub_100347438((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100347438(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 24));
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100347470()
{
  uint64_t v0;

  return sub_10034324C(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (uint64_t (*)(uint64_t))sub_10043BCDC);
}

uint64_t sub_100347498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003474A4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100346998);
}

uint64_t sub_1003474A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a3, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

void sub_1003474C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003421E4(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), (uint64_t)&unk_1005DFB50, (uint64_t)sub_10034752C, (uint64_t)&unk_1005DFB68, &unk_1005DFB00, (uint64_t)sub_10034730C, (uint64_t)&unk_1005DFB18);
}

void sub_10034752C()
{
  sub_1003473E8((uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_100154674);
}

uint64_t sub_100347540(uint64_t a1, uint64_t a2)
{
  return sub_1000AD148(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100342D6C);
}

uint64_t sub_100347550()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10034757C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (id)_convertErrorToNSError(_:)(*(_QWORD *)(v0 + 16));
  DOCPresentAlertForError(v2, v1);

}

uint64_t sub_1003475B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

id sub_100347690(uint64_t a1, uint64_t a2, char a3)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  void *v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  Swift::String_optional v41;
  Swift::String v42;
  uint64_t countAndFlagsBits;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;

  v6 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
  v7 = v6;
  if (!a3)
  {
    result = (id)_DocumentManagerBundle(v6);
    if (result)
    {
      v27 = result;
      v45._countAndFlagsBits = 0xD00000000000003FLL;
      v45._object = (void *)0x8000000100529850;
      v28._countAndFlagsBits = 0x4025207265646E55;
      v28._object = (void *)0xE800000000000000;
      v29.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v29.value._object = (void *)0xEB00000000656C62;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v45);

      v32 = sub_10006922C((uint64_t *)&unk_100644560);
      v33 = swift_allocObject(v32, 72, 7);
      *(_OWORD *)(v33 + 16) = xmmword_1004D9670;
      v34 = objc_msgSend(v7, "stringFromByteCount:", a1);
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 64) = sub_10006A638();
      *(_QWORD *)(v33 + 32) = v35;
      *(_QWORD *)(v33 + 40) = v37;
      v38 = static String.localizedStringWithFormat(_:_:)(v31._countAndFlagsBits, v31._object, v33);

      swift_bridgeObjectRelease(v31._object);
      swift_bridgeObjectRelease(v33);
      return (id)v38;
    }
    goto LABEL_10;
  }
  if (a3 == 1)
  {
    v8 = objc_msgSend(v6, "stringFromByteCount:", a1);
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = objc_msgSend(v7, "stringFromByteCount:", a2);
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    result = (id)_DocumentManagerBundle(v16);
    if (result)
    {
      v18 = result;
      v44._countAndFlagsBits = 0xD00000000000004DLL;
      v44._object = (void *)0x8000000100529890;
      v19._countAndFlagsBits = 0x204025206D6F7246;
      v19._object = (void *)0xED00004025206F74;
      v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v20.value._object = (void *)0xEB00000000656C62;
      v21._countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v44);

      v23 = sub_10006922C((uint64_t *)&unk_100644560);
      v24 = swift_allocObject(v23, 112, 7);
      *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      v25 = sub_10006A638();
      *(_QWORD *)(v24 + 32) = v9;
      *(_QWORD *)(v24 + 40) = v11;
      *(_QWORD *)(v24 + 96) = &type metadata for String;
      *(_QWORD *)(v24 + 104) = v25;
      *(_QWORD *)(v24 + 64) = v25;
      *(_QWORD *)(v24 + 72) = v13;
      *(_QWORD *)(v24 + 80) = v15;
      v26 = static String.localizedStringWithFormat(_:_:)(v22._countAndFlagsBits, v22._object, v24);

      swift_bridgeObjectRelease(v22._object);
      swift_bridgeObjectRelease(v24);
      return (id)v26;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  result = (id)_DocumentManagerBundle(v6);
  if (result)
  {
    v39 = result;
    v46._object = (void *)0x8000000100522BD0;
    v40._countAndFlagsBits = 2960685;
    v40._object = (void *)0xE300000000000000;
    v41.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v41.value._object = (void *)0xEB00000000656C62;
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v46._countAndFlagsBits = 0xD000000000000033;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v46)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100347A20(uint64_t a1, uint64_t a2, char a3)
{
  Swift::String v3;
  void *object;
  Swift::String v5;
  Swift::String v6;
  void *v7;
  uint64_t v9;

  if (!a3)
  {
    v9 = 0x207265646E55;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    v9 = 0x206D6F7246;
    v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    object = v3._object;
    String.append(_:)(v3);
    swift_bridgeObjectRelease(object);
    v5._countAndFlagsBits = 544175136;
    v5._object = (void *)0xE400000000000000;
    String.append(_:)(v5);
LABEL_5:
    v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v7 = v6._object;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(v7);
    return v9;
  }
  return 0x6E776F6E6B6E55;
}

Swift::Int sub_100347B38()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  int v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)(v5, 0);
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v1);
      Hasher._combine(_:)(v2);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void sub_100347BD8()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;

  v1 = *(_QWORD *)v0;
  if (!*(_BYTE *)(v0 + 16))
  {
    Hasher._combine(_:)(0);
    v3 = v1;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v2 = *(_QWORD *)(v0 + 8);
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1);
    v3 = v2;
LABEL_5:
    Hasher._combine(_:)(v3);
    return;
  }
  Hasher._combine(_:)(2uLL);
}

Swift::Int sub_100347C4C(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  int v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  Hasher.init(_seed:)(v6, a1);
  if (v4)
  {
    if (v4 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v2);
      Hasher._combine(_:)(v3);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v2);
  }
  return Hasher._finalize()();
}

uint64_t sub_100347CE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  unsigned int v7;
  _BOOL4 v9;
  _BOOL4 v11;

  v2 = *a1;
  v3 = *a2;
  v4 = a2[1];
  v5 = *((unsigned __int8 *)a2 + 16);
  if (*((_BYTE *)a2 + 16))
    v6 = 0;
  else
    v6 = v2 == v3;
  v7 = v6;
  v9 = v2 == v3 && a1[1] == v4;
  if (v5 != 1)
    v9 = 0;
  v11 = v5 == 2 && (v4 | v3) == 0;
  if (*((_BYTE *)a1 + 16) != 1)
    v9 = v11;
  if (*((_BYTE *)a1 + 16))
    return v9;
  else
    return v7;
}

ValueMetadata *type metadata accessor for DOCItemSizeGroupCategory()
{
  return &type metadata for DOCItemSizeGroupCategory;
}

unint64_t sub_100347D50()
{
  unint64_t result;

  result = qword_10064F728;
  if (!qword_10064F728)
  {
    result = swift_getWitnessTable(&unk_1004E370C, &type metadata for DOCItemSizeGroupCategory);
    atomic_store(result, (unint64_t *)&qword_10064F728);
  }
  return result;
}

uint64_t sub_100347D94(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_100347DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _BYTE v17[24];

  v8 = (_QWORD *)(v3 + 32);
  swift_beginAccess(v3 + 32, v17, 33, 0);
  swift_unknownObjectRetain(a1);
  sub_10008A658(v3 + 32, a1);
  v10 = v9;
  swift_unknownObjectRelease(a1);
  v11 = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 16);
  if (v11 < v10)
  {
    __break(1u);
LABEL_9:
    v4 = sub_100081920(0, v4[2] + 1, 1, v4);
    *v8 = v4;
    goto LABEL_4;
  }
  sub_100088ACC(v10, v11);
  result = swift_endAccess(v17);
  if (!a2)
    return result;
  v10 = swift_allocObject(&unk_1005DFDE0, 32, 7);
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  swift_beginAccess(v8, v17, 33, 0);
  v4 = (_QWORD *)*v8;
  swift_unknownObjectRetain(a1);
  sub_10008BA00(a2, a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  *v8 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_9;
LABEL_4:
  v15 = v4[2];
  v14 = v4[3];
  if (v15 >= v14 >> 1)
  {
    v4 = sub_100081920((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
    *v8 = v4;
  }
  v4[2] = v15 + 1;
  v16 = &v4[3 * v15];
  v16[4] = a1;
  v16[5] = sub_100348B5C;
  v16[6] = v10;
  return swift_endAccess(v17);
}

uint64_t sub_100347F40()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t DOCFakeStaticContentProgress.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10006777C(v1, a1);
}

uint64_t DOCFakeStaticContentProgress.identifier.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100347F60(a1, v1);
}

uint64_t sub_100347F60(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 40))(a2, a1);
  return a2;
}

uint64_t (*DOCFakeStaticContentProgress.identifier.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFakeStaticContentProgress.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 20);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DOCFakeStaticContentProgress(uint64_t a1)
{
  uint64_t result;

  result = qword_10064F898;
  if (!qword_10064F898)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCFakeStaticContentProgress);
  return result;
}

uint64_t DOCFakeStaticContentProgress.dateStarted.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 20);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DOCFakeStaticContentProgress.dateStarted.modify())(_QWORD)
{
  type metadata accessor for DOCFakeStaticContentProgress(0);
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

id DOCFakeStaticContentProgress.progress.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 24));
}

void DOCFakeStaticContentProgress.progress.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 24);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*DOCFakeStaticContentProgress.progress.modify())(_QWORD)
{
  type metadata accessor for DOCFakeStaticContentProgress(0);
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFakeStaticContentProgress.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 28);
  return sub_100348154(v3, a1);
}

uint64_t sub_100348154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DOCFakeStaticContentProgress.iconType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress(0) + 28);
  return sub_1003481C8(a1, v3);
}

uint64_t sub_1003481C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DOCFakeStaticContentProgress.iconType.modify())(_QWORD)
{
  type metadata accessor for DOCFakeStaticContentProgress(0);
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t sub_100348234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

id sub_100348274(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_100348280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100348154(v2 + *(int *)(a1 + 28), a2);
}

uint64_t type metadata accessor for DOCStaticContentOperationSource()
{
  return objc_opt_self(_TtC5Files31DOCStaticContentOperationSource);
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCFakeStaticContentProgress(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)v4 + v12) = v14;
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    v18 = v14;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = v16[1];
      *v15 = *v16;
      v15[1] = v22;
      swift_bridgeObjectRetain(v22);
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v15, v16, v20);
      swift_storeEnumTagMultiPayload(v15, v17, 0);
    }
  }
  return v4;
}

double destroy for DOCFakeStaticContentProgress(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v10;

  sub_100068588(a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*((_QWORD *)v6 + 1)).n128_u64[0];
  }
  else if (!EnumCaseMultiPayload)
  {
    v10 = type metadata accessor for UTType(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  v17 = v13;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
  if (EnumCaseMultiPayload == 1)
  {
    v20 = v15[1];
    *v14 = *v15;
    v14[1] = v20;
    swift_bridgeObjectRetain(v20);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for UTType(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
    swift_storeEnumTagMultiPayload(v14, v16, 0);
  }
  return a1;
}

_QWORD *assignWithCopy for DOCFakeStaticContentProgress(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;

  sub_10025C2AC(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    sub_100348714((uint64_t)a1 + v14);
    v17 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      *v15 = *v16;
      v20 = v16[1];
      v15[1] = v20;
      swift_bridgeObjectRetain(v20);
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
      swift_storeEnumTagMultiPayload(v15, v17, 0);
    }
  }
  return a1;
}

uint64_t sub_100348714(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  if (swift_getEnumCaseMultiPayload(v13, v14))
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for UTType(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 0);
  }
  return a1;
}

uint64_t assignWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_100068588((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  if (a1 != a2)
  {
    v13 = a3[7];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_100348714(a1 + v13);
    v16 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    if (swift_getEnumCaseMultiPayload(v15, v16))
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for UTType(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 0);
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100348954);
}

uint64_t sub_100348954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100348A00);
}

uint64_t sub_100348A00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100348A9C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  v5[0] = "(";
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for DOCProgressProvidingOperationIconType(319);
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100348B38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100348B5C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

void sub_100348B84()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v0 = objc_msgSend((id)objc_opt_self(AVURLAsset), "audiovisualTypes");
  type metadata accessor for AVFileType(0);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v0, v1);

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    sub_100081774(0, v3, 0);
    v4 = 0;
    do
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2 + 8 * v4 + 32));
      v7 = v6;
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_100081774(v8 > 1, v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v5;
      v10[5] = v7;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease(v2);
  qword_10064F8D8 = (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100348CB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100348CEC + 4 * byte_1004E3870[a1]))(0x6F69736E656D6944, 0xEA0000000000736ELL);
}

uint64_t sub_100348CEC()
{
  return 0x6E6F697461727544;
}

uint64_t sub_100348D04()
{
  return 0x736365646F43;
}

uint64_t sub_100348D18()
{
  return 0x656C746974;
}

uint64_t sub_100348D2C()
{
  return 0x726F7461657263;
}

uint64_t sub_100348D44()
{
  return 0x6867697279706F63;
}

uint64_t sub_100348D5C()
{
  return 1701869940;
}

uint64_t sub_100348D6C()
{
  return 0x747369747261;
}

uint64_t sub_100348D80()
{
  return 0x6D614E6D75626C61;
}

uint64_t sub_100348DC8()
{
  return 0x6572617774666F73;
}

uint64_t sub_100348DE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100348E18 + 4 * byte_1004E387C[a1]))(0x6F69736E656D6944, 0xEA0000000000736ELL);
}

uint64_t sub_100348E18()
{
  return 0x6E6F697461727544;
}

uint64_t sub_100348E30()
{
  return 0x736365646F43;
}

uint64_t sub_100348E44()
{
  return 0x656C746974;
}

uint64_t sub_100348E58()
{
  return 0x726F7461657263;
}

uint64_t sub_100348E70()
{
  return 0x6867697279706F63;
}

uint64_t sub_100348E88()
{
  return 1701869940;
}

uint64_t sub_100348E98()
{
  return 0x747369747261;
}

uint64_t sub_100348EAC()
{
  return 0x6D614E6D75626C61;
}

uint64_t sub_100348EF4()
{
  return 0x6572617774666F73;
}

uint64_t sub_100348F0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_100348DE0(*a1);
  v5 = v4;
  v6 = sub_100348DE0(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_100348F94()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = sub_100348DE0(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_100348FF4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = sub_100348DE0(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_100349034(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = sub_100348DE0(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100349090@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10034DE00(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003490BC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100348DE0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100349140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 24);
  if (!v1)
    return sub_1003492DC();
  if (v1 == 1)
    return sub_10034922C();
  v7 = 0;
  v8 = 0xE000000000000000;
  v3 = v1;
  _StringGuts.grow(_:)(17);
  v4._countAndFlagsBits = 0x656C646E61686E55;
  v4._object = (void *)0xEF20657361632064;
  String.append(_:)(v4);
  v6 = v3;
  type metadata accessor for DOCMetadataLevelOfDetail(0);
  _print_unlocked<A, B>(_:_:)(&v6, &v7, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v7, v8, "Files/DOCMediaMetadataProvider.swift", 36, 2, 66, 0);
  __break(1u);
  return result;
}

uint64_t sub_10034922C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = sub_1003493C8((uint64_t)&off_1005C08E0);
    v1 = *(_QWORD *)(v0 + 32);
  }
  *(_QWORD *)(v0 + 32) = v2;
  swift_retain();
  swift_retain();
  swift_release(v1);
  v3 = *(id *)(v2 + 16);
  v4 = sub_10006922C(&qword_10064FB28);
  OS_dispatch_queue.sync<A>(execute:)(&v6, sub_10034E038, v2, v4);
  swift_release(v2);

  return v6;
}

uint64_t sub_1003492DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v2 = sub_1003493C8((uint64_t)&off_1005C0910);
    v1 = *(_QWORD *)(v0 + 40);
  }
  *(_QWORD *)(v0 + 40) = v2;
  swift_retain();
  swift_retain();
  swift_release(v1);
  v3 = *(id *)(v2 + 16);
  v4 = sub_10006922C(&qword_10064FB28);
  OS_dispatch_queue.sync<A>(execute:)(&v6, sub_10034E038, v2, v4);
  swift_release(v2);

  return v6;
}

uint64_t sub_1003493C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetadataValueCache();
  swift_allocObject(v7, 32, 7);
  v8 = sub_10034D52C();
  v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  v10 = *(_QWORD *)(v2 + 16);
  static TaskPriority.userInitiated.getter(v11);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  v13 = (_QWORD *)swift_allocObject(&unk_1005DFE10, 64, 7);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = v10;
  v13[6] = v8;
  v13[7] = v9;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  swift_retain();
  v14 = v9;
  v15 = sub_10034D18C((uint64_t)v6, (uint64_t)&unk_10064FB38, (uint64_t)v13);
  swift_release(v15);
  sub_10000CB4C((uint64_t)v6, &qword_1006438A0);
  OS_dispatch_group.wait()();

  return v8;
}

uint64_t sub_100349510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_10034952C, 0, 0);
}

uint64_t sub_10034952C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1003495C0;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1003495C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10034961C, 0, 0);
}

uint64_t sub_10034961C()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C(&qword_1006438A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[13] = swift_task_alloc(v6);
  v5[14] = swift_task_alloc(v6);
  return swift_task_switch(sub_1003496BC, 0, 0);
}

uint64_t sub_1003496BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (char *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v30 = *(_QWORD *)(v4 - 8);
    v31 = v4;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v30 + 56);
    v5 = swift_bridgeObjectRetain(v1);
    do
    {
      v33 = v2;
      v9 = *(_QWORD *)(v0 + 104);
      v8 = *(_QWORD *)(v0 + 112);
      v10 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = *v3;
      v32 = v3 + 1;
      v29(v8, 1, 1, v31, v5);
      v13 = swift_allocObject(&unk_1005DFE60, 56, 7);
      *(_QWORD *)(v13 + 16) = 0;
      v14 = (_QWORD *)(v13 + 16);
      *(_QWORD *)(v13 + 24) = 0;
      *(_BYTE *)(v13 + 32) = v12;
      *(_QWORD *)(v13 + 40) = v10;
      *(_QWORD *)(v13 + 48) = v11;
      sub_1000271D4(v8, v9, &qword_1006438A0);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v9, 1, v31);
      swift_retain();
      v15 = swift_retain();
      v16 = *(_QWORD *)(v0 + 104);
      if ((_DWORD)v9 == 1)
      {
        sub_10000CB4C(*(_QWORD *)(v0 + 104), &qword_1006438A0);
        v17 = 0;
      }
      else
      {
        v18 = TaskPriority.rawValue.getter(v15);
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v16, v31);
        v17 = v18;
      }
      v19 = *v14;
      if (*v14)
      {
        v20 = *(_QWORD *)(v13 + 24);
        ObjectType = swift_getObjectType(*v14);
        swift_unknownObjectRetain(v19);
        v22 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v20);
        v24 = v23;
        swift_unknownObjectRelease(v19);
      }
      else
      {
        v22 = 0;
        v24 = 0;
      }
      v3 = v32;
      v25 = **(_QWORD **)(v0 + 72);
      v26 = v24 | v22;
      if (v24 | v22)
      {
        v26 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v22;
        *(_QWORD *)(v0 + 40) = v24;
      }
      v6 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v26;
      *(_QWORD *)(v0 + 64) = v25;
      v7 = swift_task_create(v17 | 0x3100, v0 + 48, &type metadata for ()[8], &unk_10064FB58, v13);
      swift_release(v7);
      sub_10000CB4C(v6, &qword_1006438A0);
      v2 = v33 - 1;
    }
    while (v33 != 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  }
  v27 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100349910(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 + 504) = a5;
  *(_QWORD *)(v6 + 512) = a6;
  *(_BYTE *)(v6 + 712) = a4;
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v6 + 520) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 528) = v8;
  *(_QWORD *)(v6 + 536) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100349974, 0, 0);
}

void sub_100349974()
{
  __asm { BR              X10 }
}

uint64_t sub_1003499A8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 536));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003499CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10064FB7C);
  *(_QWORD *)(v0 + 544) = v1;
  *v1 = v0;
  v1[1] = sub_100349C18;
  v1[18] = *(_QWORD *)(v0 + 504);
  return swift_task_switch(sub_10034C3C4, 0, 0);
}

uint64_t sub_100349C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[21] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[24] = v2;
  v5 = v4[68];
  v4[69] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034BE6C;
  else
    v6 = sub_100349C84;
  return swift_task_switch(v6, 0, 0);
}

void sub_100349C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 184);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100349E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[25] = v3;
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = v2;
  v5 = v4[70];
  v4[71] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034C02C;
  else
    v6 = sub_100349E6C;
  return swift_task_switch(v6, 0, 0);
}

void sub_100349E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 216);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100349FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[29] = v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  v5 = v4[72];
  v4[73] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034C1EC;
  else
    v6 = sub_10034A054;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034A054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 248);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034A1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[33] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v4[36] = v2;
  v5 = v4[74];
  v4[75] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034A3B8;
  else
    v6 = sub_10034A23C;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034A23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 280);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034A3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 600);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034A578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[37] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v4[40] = v2;
  v5 = v4[76];
  v4[77] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034A760;
  else
    v6 = sub_10034A5E4;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034A5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 312);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034A760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 616);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034A920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[41] = v3;
  v4[42] = a1;
  v4[43] = a2;
  v4[44] = v2;
  v5 = v4[78];
  v4[79] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034AB08;
  else
    v6 = sub_10034A98C;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034A98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 344);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034AB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034ACC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[45] = v3;
  v4[46] = a1;
  v4[47] = a2;
  v4[48] = v2;
  v5 = v4[80];
  v4[81] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034AEB0;
  else
    v6 = sub_10034AD34;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034AD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 376);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034AEB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 648);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034B070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[49] = v3;
  v4[50] = a1;
  v4[51] = a2;
  v4[52] = v2;
  v5 = v4[82];
  v4[83] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034B258;
  else
    v6 = sub_10034B0DC;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034B0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 408);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034B258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 664);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034B418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[53] = v3;
  v4[54] = a1;
  v4[55] = a2;
  v4[56] = v2;
  v5 = v4[84];
  v4[85] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034B600;
  else
    v6 = sub_10034B484;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034B484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 440);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034B600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 680);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034B7C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 688) = v1;
  if (v1)
    v2 = sub_10034B8FC;
  else
    v2 = sub_10034B820;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10034B820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 488);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v6 = *(_QWORD *)(v0 + 488);
    else
      v6 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 488));
    v2 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v1);
  if (v2 < 1)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc(dword_10064FB64);
    *(_QWORD *)(v0 + 696) = v3;
    *v3 = v0;
    v3[1] = sub_10034BAC4;
    v4 = *(_QWORD *)(v0 + 504);
    v3[5] = AVMetadataCommonIdentifierSoftware;
    v3[6] = v4;
    return swift_task_switch(sub_10034D790, 0, 0);
  }
}

uint64_t sub_10034B8FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = swift_willThrow(a1);
  v3 = *(_QWORD *)(v1 + 688);
  v4 = *(_QWORD *)(v1 + 536);
  v5 = *(_QWORD *)(v1 + 528);
  v6 = *(_QWORD *)(v1 + 520);
  v7 = Logger.UI.unsafeMutableAddressor(v2);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v1 + 528);
    v18 = *(_QWORD *)(v1 + 520);
    v19 = *(_QWORD *)(v1 + 536);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v20 = v13;
    *(_DWORD *)v12 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s caught error while fetching media metadata", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
    swift_errorRelease(v3);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v18);
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 536);
    v15 = *(_QWORD *)(v1 + 528);
    v16 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v3);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034BAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = (_QWORD *)*v3;
  v4[57] = v3;
  v4[58] = a1;
  v4[59] = a2;
  v4[60] = v2;
  v5 = v4[87];
  v4[88] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_10034BCAC;
  else
    v6 = sub_10034BB30;
  return swift_task_switch(v6, 0, 0);
}

void sub_10034BB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;

  v1 = *(_QWORD *)(v0 + 472);
  if (!v1)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_BYTE *)(v0 + 712);
  v5 = *(void **)(v3 + 16);
  v6 = swift_allocObject(&unk_1005DFEA0, 48, 7);
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = swift_allocObject(&unk_1005DFEC8, 32, 7);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v7 + 16) = sub_10034E270;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v0 + 112) = sub_10006657C;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_10006655C;
  *(_QWORD *)(v0 + 104) = &unk_1005DFEE0;
  v8 = _Block_copy((const void *)(v0 + 80));
  v9 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain(v1);
  v10 = v5;
  swift_retain();
  swift_retain();
  swift_release(v9);
  dispatch_sync(v10, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation(v7, "", 104, 179, 20, 1);
  swift_release(v7);
  swift_release(v6);
  swift_bridgeObjectRelease(v1);
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc(*(_QWORD *)(v0 + 536));
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10034BCAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 704);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034BE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 552);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034C02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 568);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034C1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 584);
  v3 = *(_QWORD *)(v1 + 536);
  v4 = *(_QWORD *)(v1 + 528);
  v5 = *(_QWORD *)(v1 + 520);
  v6 = Logger.UI.unsafeMutableAddressor(a1);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v1 + 528);
    v17 = *(_QWORD *)(v1 + 520);
    v18 = *(_QWORD *)(v1 + 536);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v1 + 496) = sub_1000544FC(0xD000000000000010, 0x8000000100529AB0, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 496, v1 + 504);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s caught error while fetching media metadata", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v17);
  }
  else
  {
    v13 = *(_QWORD *)(v1 + 536);
    v14 = *(_QWORD *)(v1 + 528);
    v15 = *(_QWORD *)(v1 + 520);
    swift_errorRelease(v2);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc(*(_QWORD *)(v1 + 536));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10034C3AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = v0;
  return swift_task_switch(sub_10034C3C4, 0, 0);
}

uint64_t sub_10034C3C4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = *(void **)(v0[18] + 16);
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_10034C474;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10034D6D0;
  v4[3] = &unk_1005DFF08;
  v4[4] = v3;
  objc_msgSend(v2, "loadTracksWithMediaType:completionHandler:", AVMediaTypeVideo, v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10034C474()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_10034C604;
  else
    v2 = sub_10034C4D4;
  return swift_task_switch(v2, 0, 0);
}

void sub_10034C4D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 136);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v5 = *(_QWORD *)(v0 + 136);
    else
      v5 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 136));
    v6 = _CocoaArrayWrapper.endIndex.getter(v5);
    swift_bridgeObjectRelease(v1);
    if (v6)
      goto LABEL_3;
LABEL_11:
    v7 = swift_bridgeObjectRelease(v1);
    (*(void (**)(_QWORD, _QWORD, __n128))(v0 + 8))(0, 0, v7);
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(v1 + 32);
LABEL_6:
    *(_QWORD *)(v0 + 160) = v2;
    swift_bridgeObjectRelease(v1);
    sub_10006922C(&qword_10064FB80);
    v3 = static AVPartialAsyncProperty<A>.naturalSize.getter();
    *(_QWORD *)(v0 + 168) = v3;
    v4 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
    *(_QWORD *)(v0 + 176) = v4;
    *v4 = v0;
    v4[1] = sub_10034C640;
    AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 120, v3);
    return;
  }
  __break(1u);
}

uint64_t sub_10034C604()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034C640()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10034C714;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 168));
    v4 = sub_10034C6AC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034C6AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 160);
  v2 = (id)DOCLocalizedMetadataStringForWidthByHeight(*(double *)(v0 + 120), *(double *)(v0 + 128));
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v5);
}

uint64_t sub_10034C714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034C750()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch(sub_10034C768, 0, 0);
}

uint64_t sub_10034C768()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[10] = *(_QWORD *)(v0[9] + 16);
  v0[11] = sub_10006922C(&qword_10064FB88);
  v1 = static AVPartialAsyncProperty<A>.duration.getter();
  v0[12] = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_10034C7F8;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 6, v1);
}

uint64_t sub_10034C7F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10034C938;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 96));
    v4 = sub_10034C864;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034C864()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  int v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = CMTime.seconds.getter(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  v2 = static AVPartialAsyncProperty<A>.duration.getter();
  AVAsynchronousKeyValueLoading.status<A>(of:)();
  swift_release(v2);
  v5 = *(void **)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(unsigned __int8 *)(v0 + 40);
  if (v7 == 1)
    v8 = (void *)DOCLocalizedMetadataStringForUnavailablePropertyValue(v3);
  else
    v8 = (void *)DOCLocalizedMetadataStringInMMSSForDuration(v1);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  sub_10034E290(v5, v4, v6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v12);
}

uint64_t sub_10034C938()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034C96C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch(sub_10034C984, 0, 0);
}

uint64_t sub_10034C984()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_10006922C(&qword_10064FB90);
  v1 = static AVPartialAsyncProperty<A>.tracks.getter();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_10034CA0C;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_10034CA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  if (v0)
    v4 = sub_10034D14C;
  else
    v4 = sub_10034CA78;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034CA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 88) = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v1);
    *(_QWORD *)(v0 + 96) = v9;
    if (v9)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
    v10 = _swiftEmptyArrayStorage[2];
    if (v10)
    {
      v12 = _swiftEmptyArrayStorage[4];
      v11 = _swiftEmptyArrayStorage[5];
      v13 = v10 - 1;
      if (v10 == 1)
      {
        swift_bridgeObjectRetain(v11);
      }
      else
      {
        swift_bridgeObjectRetain_n(v11, 2);
        swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
        v15 = &_swiftEmptyArrayStorage[7];
        do
        {
          v16 = *(v15 - 1);
          v17 = (void *)*v15;
          swift_bridgeObjectRetain(*v15);
          swift_bridgeObjectRetain(v11);
          v18._countAndFlagsBits = 8236;
          v18._object = (void *)0xE200000000000000;
          String.append(_:)(v18);
          swift_bridgeObjectRetain(v11);
          v19._countAndFlagsBits = v16;
          v19._object = v17;
          String.append(_:)(v19);
          swift_bridgeObjectRelease(v11);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v11);
          v15 += 2;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
        swift_bridgeObjectRelease(v11);
      }
      v14 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
    else
    {
      v14 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v12 = 0;
      v11 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v12, v11, v14);
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 96) = v2;
  if (!v2)
    goto LABEL_12;
LABEL_3:
  result = sub_10006922C(&qword_10064FB98);
  *(_QWORD *)(v0 + 104) = result;
  *(_QWORD *)(v0 + 112) = kCMFormatDescriptionExtension_FormatName;
  *(_QWORD *)(v0 + 120) = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(v0 + 88);
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_7:
    *(_QWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 136) = 1;
    v6 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
    *(_QWORD *)(v0 + 144) = v6;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
    *(_QWORD *)(v0 + 152) = v7;
    *v7 = v0;
    v7[1] = sub_10034CCEC;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 40, v6);
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10034CCEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v3);
  v4 = v2[18];
  if (v0)
  {
    v5 = v2[15];
    v6 = v2[11];
    swift_release(v4);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    v7 = sub_10034D158;
  }
  else
  {
    swift_release(v4);
    v7 = sub_10034CD74;
  }
  return swift_task_switch(v7, 0, 0);
}

void sub_10034CD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char *v7;
  void *v8;
  const opaqueCMFormatDescription *v9;
  const opaqueCMFormatDescription *v10;
  CFPropertyListRef v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;

  v1 = *(_QWORD *)(v0 + 40);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v42 = *(_QWORD *)(v0 + 40);
    else
      v42 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
    v2 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v43 = v0 + 40;
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
      goto LABEL_40;
    }
    v3 = 0;
    v4 = v0 + 16;
    v5 = (_QWORD *)(v0 + 48);
    v6 = v1 & 0xC000000000000001;
    v48 = *(_QWORD **)(v0 + 120);
    v7 = (char *)&type metadata for Swift.AnyObject + 8;
    v8 = &type metadata for String;
    v45 = v0 + 16;
    v46 = v1;
    v44 = (_QWORD *)(v0 + 48);
    do
    {
      if (v6)
        v9 = (const opaqueCMFormatDescription *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      else
        v9 = (const opaqueCMFormatDescription *)*(id *)(v1 + 8 * v3 + 32);
      v10 = v9;
      v11 = (id)CMFormatDescriptionGetExtension(v9, *(CFStringRef *)(v0 + 112));
      if (v11 && (*v5 = v11, (swift_dynamicCast(v4, v5, v7, v8, 6) & 1) != 0))
      {
        v12 = v6;
        v13 = v2;
        v14 = v8;
        v15 = v7;
        v17 = *(_QWORD *)(v0 + 16);
        v16 = *(_QWORD *)(v0 + 24);
        v18 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
          v18 = sub_100081A50(0, v48[2] + 1, 1, v48);
        v20 = v18[2];
        v19 = v18[3];
        v48 = v18;
        if (v20 >= v19 >> 1)
          v48 = sub_100081A50((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
        v48[2] = v20 + 1;
        v21 = &v48[2 * v20];
        v21[4] = v17;
        v21[5] = v16;

        v1 = v46;
        v0 = v47;
        v7 = v15;
        v8 = v14;
        v2 = v13;
        v6 = v12;
        v5 = v44;
        v4 = v45;
      }
      else
      {

      }
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v48 = *(_QWORD **)(v0 + 120);
  }
  v23 = *(void **)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease(v1);

  if (v22 != v24)
  {
    v30 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 120) = v48;
    v31 = *(_QWORD *)(v0 + 88);
    if ((v31 & 0xC000000000000001) != 0)
    {
      v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v31);
      v33 = v43;
    }
    else
    {
      v33 = v43;
      if (v30 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_41:
        __break(1u);
        return;
      }
      v32 = *(id *)(v31 + 8 * v30 + 32);
    }
    *(_QWORD *)(v0 + 128) = v32;
    *(_QWORD *)(v0 + 136) = v30 + 1;
    if (!__OFADD__(v30, 1))
    {
      v35 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
      *(_QWORD *)(v0 + 144) = v35;
      v36 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
      *(_QWORD *)(v0 + 152) = v36;
      *v36 = v0;
      v36[1] = sub_10034CCEC;
      AVAsynchronousKeyValueLoading.load<A>(_:)(v33, v35);
      return;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  v25 = v48;
  v26 = v48[2];
  if (v26)
  {
    v27 = v48[4];
    v28 = v48[5];
    v29 = v26 - 1;
    if (v26 == 1)
    {
      swift_bridgeObjectRetain(v28);
    }
    else
    {
      swift_bridgeObjectRetain_n(v28, 2);
      swift_bridgeObjectRetain_n(v48, 2);
      v37 = v48 + 7;
      do
      {
        v38 = *(v37 - 1);
        v39 = (void *)*v37;
        swift_bridgeObjectRetain(*v37);
        swift_bridgeObjectRetain(v28);
        v40._countAndFlagsBits = 8236;
        v40._object = (void *)0xE200000000000000;
        String.append(_:)(v40);
        swift_bridgeObjectRetain(v28);
        v41._countAndFlagsBits = v38;
        v41._object = v39;
        String.append(_:)(v41);
        swift_bridgeObjectRelease(v28);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v28);
        v37 += 2;
        --v29;
      }
      while (v29);
      v25 = v48;
      swift_bridgeObjectRelease_n(v48, 2);
      swift_bridgeObjectRelease(v28);
      v0 = v47;
    }
    v34 = swift_bridgeObjectRelease(v25);
  }
  else
  {
    v34 = swift_bridgeObjectRelease(v48);
    v27 = 0;
    v28 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v0 + 8))(v27, v28, v34);
}

uint64_t sub_10034D14C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034D158()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034D18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v6 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v8, &qword_1006438A0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000CB4C((uint64_t)v8, &qword_1006438A0);
    v12 = 4096;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
    {
LABEL_3:
      v14 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v13);
      swift_unknownObjectRetain(v13);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
      v18 = v17;
      swift_unknownObjectRelease(v13);
      goto LABEL_6;
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v12 = v19 | 0x1000;
    v13 = *(_QWORD *)(a3 + 16);
    if (v13)
      goto LABEL_3;
  }
  v16 = 0;
  v18 = 0;
LABEL_6:
  v20 = swift_allocObject(&unk_1005DFE38, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  if (v18 | v16)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v16;
    v23[3] = v18;
  }
  else
  {
    v21 = 0;
  }
  return swift_task_create(v12, v21, &type metadata for ()[8], &unk_100646A40, v20);
}

uint64_t sub_10034D324()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for DOCMediaMetadataProvider()
{
  return objc_opt_self(_TtC5Files24DOCMediaMetadataProvider);
}

uint64_t sub_10034D378(unsigned __int8 a1, uint64_t a2, void *a3, uint64_t a4)
{
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v19 = 0;
  v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  v8._object = (void *)0x8000000100529AD0;
  v8._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v8);
  LOBYTE(v18) = a1;
  _print_unlocked<A, B>(_:_:)(&v18, &v19, &type metadata for MetadataItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._countAndFlagsBits = 2112800;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  v11 = v20;
  NSLog(_:_:)(v19, v20, _swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v11);
  v12 = sub_100348CB4(a1);
  v14 = v13;
  swift_beginAccess(a4 + 24, &v19, 33, 0);
  swift_bridgeObjectRetain(a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a4 + 24));
  v18 = *(_QWORD *)(a4 + 24);
  *(_QWORD *)(a4 + 24) = 0x8000000000000000;
  sub_100356BC8(a2, (uint64_t)a3, v12, v14, isUniquelyReferenced_nonNull_native);
  v16 = *(_QWORD *)(a4 + 24);
  *(_QWORD *)(a4 + 24) = v18;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  return swift_endAccess(&v19);
}

uint64_t sub_10034D4E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for MetadataValueCache()
{
  return objc_opt_self(_TtC5FilesP33_82A21092566321A6C200F23345703AE418MetadataValueCache);
}

uint64_t sub_10034D52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v12);
  v18 = _swiftEmptyArrayStorage;
  v13 = sub_10034E2A4();
  v14 = sub_10006922C((uint64_t *)&unk_100641280);
  v15 = sub_10016E444();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(_QWORD *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0, 0xE000000000000000, v11, v8, v5, 0);
  *(_QWORD *)(v1 + 24) = sub_1003F1978((uint64_t)_swiftEmptyArrayStorage);
  return v1;
}

uint64_t sub_10034D6D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10006922C((uint64_t *)&unk_100643490);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_10004F2F0(0, &qword_10064FBB8, AVAssetTrack_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10034D778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_10034D790, 0, 0);
}

uint64_t sub_10034D790()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_10006922C(&qword_10064FBA0);
  v1 = static AVPartialAsyncProperty<A>.commonMetadata.getter();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_10034D818;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_10034D818()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10034DAE4;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 56));
    v4 = sub_10034D884;
  }
  return swift_task_switch(v4, 0, 0);
}

void sub_10034D884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = (void *)objc_opt_self(AVMetadataItem);
  v4 = sub_10004F2F0(0, &qword_10064FBA8, AVMetadataItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v3, "metadataItemsFromArray:filteredByIdentifier:", isa, v2, swift_bridgeObjectRelease(v1).n128_f64[0]);

  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v4);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v11 = v7;
    else
      v11 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v7);
    if (v12)
      goto LABEL_3;
LABEL_11:
    v13 = swift_bridgeObjectRelease(v7);
    (*(void (**)(_QWORD, _QWORD, __n128))(v0 + 8))(0, 0, v13);
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
LABEL_6:
    *(_QWORD *)(v0 + 80) = v8;
    swift_bridgeObjectRelease(v7);
    sub_10006922C(&qword_10064FBB0);
    v9 = static AVPartialAsyncProperty<A>.stringValue.getter();
    *(_QWORD *)(v0 + 88) = v9;
    v10 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
    *(_QWORD *)(v0 + 96) = v10;
    *v10 = v0;
    v10[1] = sub_10034DA40;
    AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v9);
    return;
  }
  __break(1u);
}

uint64_t sub_10034DA40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10034DB18;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 88));
    v4 = sub_10034DAAC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034DAAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10034DAE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034DB18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for DOCAssetMetadataFetcher()
{
  return objc_opt_self(_TtC5Files23DOCAssetMetadataFetcher);
}

_QWORD *sub_10034DB74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  id v24;
  NSURL *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v36 = a2;
  v5 = type metadata accessor for UTType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a3, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v11, &qword_100643470);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if (qword_100641048 != -1)
    swift_once(&qword_100641048, sub_100348B84);
  v16 = (_QWORD *)qword_10064F8D8;
  swift_bridgeObjectRetain(qword_10064F8D8);
  v17 = objc_msgSend(a1, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = UTType.identifier.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = sub_1000DFDD0(v19, v21, v16);
  swift_bridgeObjectRelease(v16);
  v23 = swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v23);
    return 0;
  }
  v24 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v25);
  v27 = v26;
  v28 = objc_msgSend(v24, "initWithURL:options:", v26, 0);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v29 = type metadata accessor for DOCMediaMetadataProvider();
  v30 = (_QWORD *)swift_allocObject(v29, 48, 7);
  v31 = type metadata accessor for DOCAssetMetadataFetcher();
  v30[4] = 0;
  v30[5] = 0;
  v32 = swift_allocObject(v31, 24, 7);
  *(_QWORD *)(v32 + 16) = v28;
  v33 = v36;
  v30[2] = v32;
  v30[3] = v33;
  return v30;
}

unint64_t sub_10034DE00(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C07A0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xC)
    return 12;
  else
    return v3;
}

void sub_10034DE48()
{
  sub_100081774(0, 12, 0);
  __asm { BR              X9 }
}

uint64_t sub_10034E038@<X0>(_QWORD *a1@<X8>)
{
  return sub_10034E2EC(a1);
}

uint64_t sub_10034E04C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10034E090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc(dword_10064FB34);
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_1000EA854;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return swift_task_switch(sub_10034952C, 0, 0);
}

uint64_t sub_10034E0F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034E114(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_10064FB44);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1000EA854;
  return sub_10034964C(a1, a2, v6, v7, v8);
}

uint64_t sub_10034E190()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10034E1C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 32);
  v9 = (_QWORD *)swift_task_alloc(dword_10064FB54);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100118844;
  return sub_100349910(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_10034E244()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10034E270()
{
  uint64_t v0;

  return sub_10034D378(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10034E280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10034E290(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)

}

unint64_t sub_10034E2A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100643640;
  if (!qword_100643640)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_100643640);
  }
  return result;
}

uint64_t sub_10034E2EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 24, v5, 0, 0);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v3;
  return swift_bridgeObjectRetain(v3);
}

uint64_t getEnumTagSinglePayload for MetadataItem(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetadataItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_10034E414 + 4 * byte_1004E38A5[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_10034E448 + 4 * byte_1004E38A0[v4]))();
}

uint64_t sub_10034E448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034E450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10034E458);
  return result;
}

uint64_t sub_10034E464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10034E46CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_10034E470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10034E478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetadataItem()
{
  return &type metadata for MetadataItem;
}

unint64_t sub_10034E498()
{
  unint64_t result;

  result = qword_10064FBC0;
  if (!qword_10064FBC0)
  {
    result = swift_getWitnessTable(&unk_1004E39C0, &type metadata for MetadataItem);
    atomic_store(result, (unint64_t *)&qword_10064FBC0);
  }
  return result;
}

Swift::String *UIDocumentBrowserActionUserInfoClickedItem.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoClickedItem;
}

id DOCItemCollectionViewController.actionContext(from:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t ObjectType;
  char *v7;
  void *v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  objc_class *v15;
  char *v16;
  char *v17;
  id v18;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  objc_super v23;

  v1 = v0;
  v3 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    v4 = *(char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
    if (v4)
    {
      v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode];
      if (v5)
      {
        ObjectType = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode], v2);
        v7 = v4;
        swift_unknownObjectRetain(v5);
        v8 = (void *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
        swift_unknownObjectRelease(v5);
        if (v8)
        {
          v22 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
          *(_QWORD *)&v21 = v8;
          sub_100079B28(&v21, v20);
          v9 = v8;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
          sub_100356D3C(v20, 0xD000000000000039, 0x8000000100510EB0, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease(0x8000000000000000);
        }
        else
        {

        }
      }
    }
  }
  v11 = objc_msgSend(v1, "effectiveAppearance");
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v13);
  v15 = (objc_class *)type metadata accessor for DOCActionContext();
  v16 = (char *)objc_allocWithZone(v15);
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v11;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v12;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v1;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = v1;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v3;
  v23.receiver = v16;
  v23.super_class = v15;
  v17 = v1;
  v18 = v12;
  return objc_msgSendSuper2(&v23, "init");
}

uint64_t type metadata accessor for DOCActionContext()
{
  return objc_opt_self(_TtC5Files16DOCActionContext);
}

Swift::String *UIDocumentBrowserActionUserInfoLocationKey.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoLocationKey;
}

Swift::String *UIDocumentBrowserActionUserInfoTagNameKey.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoTagNameKey;
}

id sub_10034E724()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;

  v1 = objc_msgSend(v0, "uiActionDescriptor");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6 = objc_msgSend(v2, "uiActionProviderIdentifier");
  v7 = objc_msgSend(v2, "fileProviderIdentifier");
  v8 = objc_msgSend(v2, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = objc_msgSend(v2, "predicate");
  v12 = objc_msgSend(v2, "displayInline");
  v13 = objc_allocWithZone((Class)FPUIAction);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v16 = objc_msgSend(v13, "initWithIdentifier:uiActionProviderIdentifier:fileProviderIdentifier:displayName:predicate:displayInline:", v14, v6, v7, v15, v11, v12);

  return v16;
}

void sub_10034E8C8(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
    if (!v19)
      return;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v4 = objc_msgSend(v2, "uiActionDescriptor");
  if (v4)
  {

    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(a1);
      v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      swift_bridgeObjectRelease(a1);
LABEL_7:
      v6 = objc_msgSend(v5, "providerDomainID");
      swift_unknownObjectRelease(v5);
      v7 = objc_msgSend(v2, "uiActionProviderDomain");
      if (!v7)
        goto LABEL_15;
      v8 = v7;
      v9 = objc_msgSend(v7, "identifier");

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v12 = v11;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v15 = v13;
      if (v10 == v14 && v12 == v13)
      {

        swift_bridgeObjectRelease_n(v12, 2);
      }
      else
      {
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v14, v13, 0);

        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v15);
        if ((v16 & 1) == 0)
        {
LABEL_15:

          return;
        }
      }
      v17 = v6;
      sub_10035BABC(a1, (uint64_t)v17);

      goto LABEL_15;
    }
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(void **)(a1 + 32);
      swift_unknownObjectRetain(v5);
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t DOCActionContext.userInfo.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCActionContext_userInfo));
}

void DOCActionContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCActionContext", 22, "init()", 6, 0);
  __break(1u);
}

id DOCActionContext.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCActionContext);
}

uint64_t sub_10034ECF0()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_actions));
}

uint64_t sub_10034ED58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v2, 2);
    result = swift_bridgeObjectRetain(v1);
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease_n(v2, 2);
    sub_10012FFAC((uint64_t)_swiftEmptyArrayStorage);
    return v1;
  }
  if (v2 < 0)
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  swift_bridgeObjectRetain(v1);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = sub_10034ED58();

      sub_10012FFAC(v8);
    }
    while (v3 != v5);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10034EEA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v2, 2);
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease_n(v2, 2);
    sub_10012FB10((uint64_t)_swiftEmptyArrayStorage);
    return v1;
  }
  if (v2 < 0)
    v9 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = sub_10034EEA4();

      sub_10012FB10(v8);
    }
    while (v3 != v5);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t DOCActionManager.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  id v6;
  uint64_t v7;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v5 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v6 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v7 = (*(uint64_t (**)(id, id))(ObjectType + 248))(v5, v6);
  swift_deallocPartialClassInstance(v3, ObjectType, 64, 7);
  return v7;
}

id DOCActionManager.init(itemManager:managedPermission:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  objc_super v7;

  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  v5 = &v2[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = a2;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DOCActionManager();
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t sub_10034F138(id a1, uint64_t a2, int a3, id *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  void *v30;
  int v31;
  id *v32;
  uint64_t v33;

  LODWORD(v5) = a3;
  v8 = sub_10034EEA4();
  if ((unint64_t)v8 >> 62)
    goto LABEL_37;
  for (i = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v28 = a4;
    v10 = 0;
    v11 = v8 & 0xC000000000000001;
    v12 = v8 & 0xFFFFFFFFFFFFFF8;
    a4 = (id *)(v8 + 32);
    v13 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v13 = a2;
    v27 = v13;
    v33 = v8;
    v32 = (id *)(v8 + 32);
    v31 = v5;
    v29 = v8 & 0xFFFFFFFFFFFFFF8;
    v30 = a1;
    while (1)
    {
      if (v11)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      }
      else
      {
        if (v10 >= *(_QWORD *)(v12 + 16))
          goto LABEL_36;
        v14 = a4[v10];
      }
      v15 = v14;
      if (__OFADD__(v10++, 1))
        break;
      if ((objc_msgSend(v14, "availability") & 2) != 0
        && objc_msgSend(v15, "navigationSide") == a1
        && (!objc_msgSend(v15, "requiresVersioning") || (v5 & 1) != 0))
      {
        v17 = (uint64_t)objc_msgSend(v15, "requiresFullyFormedItems");
        if ((v17 & 1) != 0)
        {
          if ((unint64_t)a2 >> 62)
          {
            swift_bridgeObjectRetain(a2);
            v8 = _CocoaArrayWrapper.endIndex.getter(v27);
            if (v8)
            {
LABEL_20:
              v5 = 4;
              while (1)
              {
                a4 = (id *)(v5 - 4);
                if ((a2 & 0xC000000000000001) != 0)
                {
                  v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a2);
                  a1 = (id)(v5 - 3);
                  if (__OFADD__(a4, 1))
                    goto LABEL_35;
                }
                else
                {
                  v18 = *(void **)(a2 + 8 * v5);
                  swift_unknownObjectRetain(v18);
                  a1 = (id)(v5 - 3);
                  if (__OFADD__(a4, 1))
                    goto LABEL_35;
                }
                v19 = objc_msgSend(v18, "isFullyFormed");
                swift_unknownObjectRelease(v18);
                if (!v19)
                  break;
                ++v5;
                if (a1 == (id)v8)
                  goto LABEL_28;
              }

              swift_bridgeObjectRelease(a2);
              LODWORD(v5) = v31;
              v12 = v29;
              a1 = v30;
              a4 = v32;
              v8 = v33;
              goto LABEL_7;
            }
          }
          else
          {
            v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(a2);
            if (v8)
              goto LABEL_20;
          }
LABEL_28:
          v17 = swift_bridgeObjectRelease(a2);
          LODWORD(v5) = v31;
          v12 = v29;
          a1 = v30;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v20 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
        v21 = v20;
        a4 = v32;
        v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v15);
        specialized ContiguousArray._endMutation()(v22);
        v8 = v33;
      }
      else
      {

      }
LABEL_7:
      if (v10 == i)
      {
        swift_bridgeObjectRelease(v8);
        a4 = v28;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v8 < 0)
      v23 = v8;
    else
      v23 = v8 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRelease(v8);
LABEL_42:
  swift_bridgeObjectRetain(a2);
  v24 = a4;
  v25 = sub_100359B10((uint64_t)_swiftEmptyArrayStorage, a2, v24);
  swift_release(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(a2);

  return v25;
}

id sub_10034F41C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v5 = v4;
  v60 = a3;
  v9 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UTType(0);
  v63 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v16);
  v61 = (char *)&v56 - v19;
  v20 = *a1;
  v21 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_44;
  v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v22 < 1)
  {
LABEL_5:
    v24 = 0;
    goto LABEL_30;
  }
LABEL_3:
  v59 = v21;
  v23 = objc_msgSend(v20, "supportsMultipleItems");
  if (v22 != 1 && !v23)
    goto LABEL_5;
  v58 = v20;
  v25 = objc_msgSend(v20, "identifier", a4, v5);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierMultipleSelection);
  v31 = v29;
  v62 = a2;
  if (v26 == v30 && v28 == v29)
  {
    swift_bridgeObjectRelease_n(v28, 2);
LABEL_10:
    v34 = objc_msgSend(v60, "documentContentTypes");
    v35 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v12);

    goto LABEL_11;
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v31);
  v33 = v63;
  if ((v32 & 1) != 0)
    goto LABEL_10;
  v39 = objc_msgSend(v58, "supportedContentTypes");
  v40 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for String);

  v41 = v40[2];
  if (v41)
  {
    swift_bridgeObjectRetain(v40);
    v60 = v40;
    v42 = v40 + 5;
    v35 = _swiftEmptyArrayStorage;
    v57 = v12;
    do
    {
      v43 = *(v42 - 1);
      v44 = *v42;
      swift_bridgeObjectRetain(*v42);
      UTType.init(_:)(v43, v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v11, 1, v12) == 1)
      {
        sub_10000CB4C((uint64_t)v11, &qword_100643EC0);
      }
      else
      {
        v45 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
        v46 = v61;
        v45(v61, v11, v12);
        v45(v18, v46, v12);
        v47 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
          v35 = (_QWORD *)sub_100153308(0, v35[2] + 1, 1, (unint64_t)v35);
        v49 = v35[2];
        v48 = v35[3];
        if (v49 >= v48 >> 1)
          v35 = (_QWORD *)sub_100153308(v48 > 1, v49 + 1, 1, (unint64_t)v35);
        v35[2] = v49 + 1;
        v50 = v63;
        v51 = (unint64_t)v35
            + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))
            + *(_QWORD *)(v63 + 72) * v49;
        v18 = v47;
        v52 = v47;
        v12 = v57;
        v45((char *)v51, v52, v57);
        v33 = v50;
      }
      v42 += 2;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease_n(v60, 2);
    a2 = v62;
  }
  else
  {
    swift_bridgeObjectRelease(v40);
    v35 = _swiftEmptyArrayStorage;
  }
LABEL_11:
  a4 = v56;
  if (!v59)
  {
    v11 = *(char **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    v20 = v58;
    if (!v11)
      goto LABEL_26;
    goto LABEL_13;
  }
  if (a2 < 0)
    v37 = a2;
  else
    v37 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v11 = (char *)_CocoaArrayWrapper.endIndex.getter(v37);
  v20 = v58;
  if (v11)
  {
LABEL_13:
    v20 = (id)(a2 & 0xC000000000000001);
    a4 = 4;
    while (1)
    {
      v5 = a4 - 4;
      if (v20)
      {
        a2 = specialized _ArrayBuffer._getElementSlowPath(_:)(a4 - 4, a2);
        v18 = (char *)(a4 - 3);
        if (__OFADD__(v5, 1))
          goto LABEL_43;
      }
      else
      {
        a2 = *(_QWORD *)(a2 + 8 * a4);
        swift_unknownObjectRetain(a2);
        v18 = (char *)(a4 - 3);
        if (__OFADD__(v5, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          if (a2 < 0)
            v53 = a2;
          else
            v53 = a2 & 0xFFFFFFFFFFFFFF8;
          v57 = v12;
          v54 = v18;
          v55 = v21;
          swift_bridgeObjectRetain(a2);
          v22 = _CocoaArrayWrapper.endIndex.getter(v53);
          swift_bridgeObjectRelease(a2);
          v21 = v55;
          v18 = v54;
          v12 = v57;
          if (v22 < 1)
            goto LABEL_5;
          goto LABEL_3;
        }
      }
      v36 = objc_msgSend((id)a2, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v36);

      LOBYTE(v36) = UTType.doc_conformsToAny(inContentTypes:)((Swift::OpaquePointer)v35);
      swift_unknownObjectRelease(a2);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v12);
      if ((v36 & 1) == 0)
      {
        v24 = 0;
        a4 = v56;
        a2 = v62;
        goto LABEL_28;
      }
      ++a4;
      a2 = v62;
      if (v18 == v11)
      {
        v24 = 1;
        a4 = v56;
LABEL_28:
        v20 = v58;
        goto LABEL_29;
      }
    }
  }
LABEL_26:
  v24 = 1;
LABEL_29:
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(a2);
LABEL_30:
  *(_QWORD *)a4 = v20;
  *(_BYTE *)(a4 + 8) = v24;
  return v20;
}

uint64_t sub_10034F94C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v14;
  uint64_t v15;
  _QWORD *inited;
  uint64_t v17;
  objc_class *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[40];

  v7 = v6;
  v14 = swift_allocObject(&unk_1005E01B8, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  v15 = sub_10006922C((uint64_t *)&unk_10064FDD0);
  inited = (_QWORD *)swift_initStackObject(v15, v26);
  inited[3] = v14;
  inited[4] = 1;
  inited[2] = sub_10035ECA8;
  swift_bridgeObjectRetain(a1);
  v17 = sub_10034EEA4();
  v18 = sub_100350804(a1, a3, a4);
  sub_10012FB10((uint64_t)v18);
  swift_unknownObjectRetain(a3);
  v19 = v7;
  swift_retain();
  swift_bridgeObjectRetain(a1);
  v20 = swift_bridgeObjectRetain(v17);
  v21 = (unint64_t)sub_10035BC68(v20, v17, (uint64_t)a3, a1, (uint64_t)v19, a2, inited);
  swift_bridgeObjectRelease(v17);
  swift_unknownObjectRelease(a3);
  swift_bridgeObjectRelease(a1);

  swift_release(inited);
  if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
  {
    sub_10008BA00(a5, a6);
    v24 = swift_bridgeObjectRetain(v21);
    v22 = (uint64_t)sub_10028F030(v24);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = v21 & 0xFFFFFFFFFFFFFF8;
    sub_10008BA00(a5, a6);
    swift_bridgeObjectRetain(v21);
  }
  v25 = v22;
  sub_10008BA00(a5, a6);
  sub_10035D448(&v25, a5, a6);
  sub_100087534(a5, a6);
  swift_bridgeObjectRelease(v21);
  swift_release(inited);
  sub_100087534(a5, a6);
  return v25;
}

uint64_t sub_10034FB44(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v43;
  char **v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  int v56;
  unint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unsigned __int8 v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  char **v83;
  unsigned int v84;
  BOOL v85;
  char v86;
  char **v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t inited;
  unint64_t v101;
  Class isa;
  id v103;
  void *v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  Class v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  void *v114;
  char *v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  const char *v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  id v145;
  unint64_t v146;
  unint64_t v147;
  char **v148;
  char v149[56];

  v8 = v7;
  v135 = a7;
  v139 = a6;
  v143 = a5;
  v13 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v13);
  v137 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UTType(0);
  v140 = *(_QWORD *)(v15 - 8);
  v141 = v15;
  v16 = __chkstk_darwin(v15);
  v136 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v138 = (char *)&v134 - v18;
  v145 = *a1;
  v19 = objc_msgSend(v145, "identifier");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
  v25 = v20 == v23 && v22 == v24;
  v146 = a4;
  if (v25)
  {
    swift_bridgeObjectRelease_n(v22, 2);
  }
  else
  {
    v26 = v24;
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v26);
    if ((v27 & 1) == 0)
      goto LABEL_22;
  }
  v144 = v7;
  v142 = a3;
  if ((unint64_t)a2 >> 62)
    goto LABEL_41;
  v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v28; v28 = _CocoaArrayWrapper.endIndex.getter(v59))
  {
    v147 = a2 & 0xC000000000000001;
    v29 = UIDocumentBrowserActionIdentifierTrash;
    v30 = 4;
    while (1)
    {
      v31 = v147
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30 - 4, a2)
          : *(id *)(a2 + 8 * v30);
      v32 = v31;
      v33 = v30 - 3;
      if (__OFADD__(v30 - 4, 1))
        break;
      v34 = a2;
      v35 = objc_msgSend(v31, "identifier");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      if (v36 == v39 && v38 == v40)
      {
        swift_bridgeObjectRelease(v34);

        swift_bridgeObjectRelease_n(v38, 2);
        return 0;
      }
      v42 = v40;
      v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v39, v40, 0);

      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v42);
      if ((v43 & 1) != 0)
      {
        v57 = v34;
        goto LABEL_38;
      }
      ++v30;
      a2 = v34;
      if (v33 == v28)
        goto LABEL_21;
    }
    __break(1u);
LABEL_41:
    if (a2 < 0)
      v59 = a2;
    else
      v59 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_21:
  swift_bridgeObjectRelease(a2);
  v8 = v144;
  a4 = v146;
  a3 = v142;
LABEL_22:
  v44 = (char **)v145;
  v45 = objc_msgSend(v145, "identifier");
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v48 = v47;

  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierTags);
  v51 = v49;
  if (v46 == v50 && v48 == v49)
  {
    swift_bridgeObjectRelease_n(v48, 2);
  }
  else
  {
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v48, v50, v49, 0);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v51);
    if ((v52 & 1) == 0)
      goto LABEL_52;
  }
  if (a3)
  {
    v53 = a3;
    goto LABEL_34;
  }
  if (!((unint64_t)a4 >> 62))
  {
    v54 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a4);
    if (v54)
      goto LABEL_30;
LABEL_50:
    swift_bridgeObjectRelease(a4);
    v53 = 0;
    goto LABEL_51;
  }
  if (a4 < 0)
    v60 = a4;
  else
    v60 = a4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a4);
  if (!_CocoaArrayWrapper.endIndex.getter(v60))
    goto LABEL_50;
LABEL_30:
  if ((a4 & 0xC000000000000001) != 0)
    goto LABEL_103;
  if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v53 = *(_QWORD *)(a4 + 32);
    swift_unknownObjectRetain(v53);
    goto LABEL_33;
  }
  __break(1u);
LABEL_105:
  if (a4 < 0)
    v94 = a4;
  else
    v94 = a4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a4);
  v95 = _CocoaArrayWrapper.endIndex.getter(v94);
  swift_bridgeObjectRelease(a4);
  if (v95 > 1)
    return 0;
LABEL_57:
  if (objc_msgSend(v44, "requiresFullyFormedItems"))
  {
    v69 = v8;
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v96 = a4;
      else
        v96 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a4);
      a3 = _CocoaArrayWrapper.endIndex.getter(v96);
      if (!a3)
      {
LABEL_68:
        swift_bridgeObjectRelease(a4);
        v8 = v69;
        v44 = (char **)v145;
        goto LABEL_69;
      }
    }
    else
    {
      a3 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a4);
      if (!a3)
        goto LABEL_68;
    }
    v70 = a4 & 0xC000000000000001;
    v71 = 4;
    v44 = &selRef_viewOptionsRoot;
    while (1)
    {
      v72 = v71 - 4;
      if (v70)
      {
        a4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v71 - 4, a4);
        v8 = v71 - 3;
        if (__OFADD__(v72, 1))
          goto LABEL_100;
      }
      else
      {
        a4 = *(_QWORD *)(a4 + 8 * v71);
        swift_unknownObjectRetain(a4);
        v8 = v71 - 3;
        if (__OFADD__(v72, 1))
        {
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          v53 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
LABEL_33:
          swift_bridgeObjectRelease(a4);
LABEL_34:
          swift_unknownObjectRetain(a3);
          v55 = objc_msgSend((id)swift_unknownObjectRetain(v53), "providerDomainID");
          v56 = DOCProviderDomainIDIsSharedServerDomainID(v55);

          swift_unknownObjectRelease(v53);
          if (v56)
          {
            swift_unknownObjectRelease(v53);
            return 0;
          }
LABEL_51:
          v61 = sub_1003598CC(FPActionTag, a4);
          swift_unknownObjectRelease(v53);
          if ((v61 & 1) == 0)
            return 0;
LABEL_52:
          v62 = (_QWORD *)sub_10034ED58();
          v63 = objc_msgSend(v44, "identifier");
          v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
          v66 = v65;

          LOBYTE(v63) = sub_1000DFDD0(v64, v66, v62);
          swift_bridgeObjectRelease(v62);
          swift_bridgeObjectRelease(v66);
          if ((v63 & 1) != 0)
            return 0;
          v67 = (unint64_t)objc_msgSend(v44, "availability");
          if ((v139 & ~v67) != 0)
            return 0;
          v68 = objc_msgSend(v44, "supportsMultipleItems");
          a4 = v146;
          if ((v68 & 1) == 0)
          {
            if (!(v146 >> 62))
            {
              if (*(uint64_t *)((v146 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
                return 0;
              goto LABEL_57;
            }
            goto LABEL_105;
          }
          goto LABEL_57;
        }
      }
      v73 = objc_msgSend((id)a4, "isFullyFormed");
      swift_unknownObjectRelease(a4);
      if (!v73)
      {
        swift_bridgeObjectRelease(v146);
        return 0;
      }
      ++v71;
      a4 = v146;
      if (v8 == a3)
        goto LABEL_68;
    }
  }
LABEL_69:
  if (!objc_msgSend(v44, "requiresVersioning"))
    goto LABEL_120;
  v144 = v8;
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v97 = a4;
    else
      v97 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    a3 = _CocoaArrayWrapper.endIndex.getter(v97);
    if (a3)
    {
LABEL_72:
      v74 = objc_opt_self(FPProviderDomain);
      v75 = a4;
      a4 = v74;
      v8 = v75 & 0xC000000000000001;
      v76 = 4;
      do
      {
        v77 = v76 - 4;
        if (v8)
        {
          v78 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v76 - 4, v146);
          v79 = v76 - 3;
          if (__OFADD__(v77, 1))
            goto LABEL_101;
        }
        else
        {
          v78 = *(void **)(v146 + 8 * v76);
          swift_unknownObjectRetain(v78);
          v79 = v76 - 3;
          if (__OFADD__(v77, 1))
            goto LABEL_101;
        }
        v80 = objc_msgSend(v78, "providerDomainID");
        v148 = 0;
        v81 = objc_msgSend((id)a4, "providerDomainWithID:cachePolicy:error:", v80, 3, &v148);
        v44 = v148;
        if (!v81)
        {
          v87 = v148;
          v88 = _convertNSErrorToError(_:)(v44);

          swift_willThrow(v89);
          swift_errorRelease(v88);
          swift_unknownObjectRelease(v78);
          v144 = 0;
          v86 = 1;
          goto LABEL_87;
        }
        v82 = v81;
        v83 = v148;

        v84 = objc_msgSend(v82, "isiCloudDriveProvider");
        swift_unknownObjectRelease(v78);

        ++v76;
        if (v84)
          v85 = v79 == a3;
        else
          v85 = 1;
      }
      while (!v85);
      v86 = v84 ^ 1;
LABEL_87:
      v90 = 4;
      v44 = (char **)&off_10061F000;
      a4 = v146;
      while (1)
      {
        v91 = v90 - 4;
        if (v8)
        {
          a4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v90 - 4, a4);
          v92 = v90 - 3;
          if (__OFADD__(v91, 1))
            goto LABEL_102;
        }
        else
        {
          a4 = *(_QWORD *)(a4 + 8 * v90);
          swift_unknownObjectRetain(a4);
          v92 = v90 - 3;
          if (__OFADD__(v91, 1))
            goto LABEL_102;
        }
        if ((objc_msgSend((id)a4, "isTrashed") & 1) != 0)
        {
          swift_bridgeObjectRelease(v146);
          swift_unknownObjectRelease(a4);
          return 0;
        }
        v93 = objc_msgSend((id)a4, "isAnyParentTrashed");
        swift_unknownObjectRelease(a4);
        if ((v93 & 1) != 0)
          break;
        ++v90;
        a4 = v146;
        if (v92 == a3)
        {
          swift_bridgeObjectRelease(v146);
          v8 = v144;
          if ((v86 & 1) == 0)
          {
            v44 = (char **)v145;
            goto LABEL_120;
          }
          return 0;
        }
      }
      v57 = v146;
LABEL_38:
      swift_bridgeObjectRelease(v57);
      return 0;
    }
  }
  else
  {
    a3 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a4);
    if (a3)
      goto LABEL_72;
  }
  swift_bridgeObjectRelease(a4);
  v8 = v144;
LABEL_120:
  v98 = objc_msgSend(v44, "filteringPredicate");
  v99 = sub_10006922C((uint64_t *)&unk_10064FDE0);
  inited = swift_initStackObject(v99, v149);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = 0x7365646F4E636F64;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = a4;
  swift_bridgeObjectRetain(a4);
  v101 = sub_1003F0958(inited);
  sub_10006922C((uint64_t *)&unk_100643CB0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v101);
  LODWORD(v101) = objc_msgSend(v98, "evaluateWithObject:", isa);

  if (!(_DWORD)v101)
    return 0;
  v103 = sub_10034E724();
  if (v103)
  {
    v104 = v103;
    sub_10034E8C8(v146);
    if ((v105 & 1) == 0 || (v106 = sub_100355654()) == 0)
    {

      return 0;
    }
    v107 = v106;
    v108 = (void *)objc_opt_self(FPUIManager);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v109 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v107);
    LOBYTE(v107) = objc_msgSend(v108, "isAction:eligibleForItems:", v104, v109);

    if ((v107 & 1) == 0)
      return 0;
  }
  v110 = v146;
  if (v146 >> 62)
  {
    if ((v146 & 0x8000000000000000) != 0)
      v133 = v146;
    else
      v133 = v146 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v146);
    v111 = _CocoaArrayWrapper.endIndex.getter(v133);
    if (!v111)
    {
LABEL_140:
      swift_bridgeObjectRelease(v110);
      return 1;
    }
  }
  else
  {
    v111 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v146);
    if (!v111)
      goto LABEL_140;
  }
  v112 = 0;
  v113 = v110 & 0xC000000000000001;
  v142 = v110 + 32;
  v143 = v110 & 0xFFFFFFFFFFFFFF8;
  v114 = &off_10061F000;
  v139 = v111;
  v135 = v110 & 0xC000000000000001;
  v115 = v136;
LABEL_128:
  if (v113)
  {
    v116 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v112, v110);
    v117 = v141;
  }
  else
  {
    v117 = v141;
    if (v112 >= *(_QWORD *)(v143 + 16))
      goto LABEL_152;
    v116 = (void *)swift_unknownObjectRetain(*(_QWORD *)(v142 + 8 * v112));
  }
  v118 = (uint64_t)v137;
  v144 = v8;
  if (__OFADD__(v112++, 1))
  {
    __break(1u);
LABEL_152:
    __break(1u);
  }
  v120 = (const char *)*((_QWORD *)v114 + 201);
  v147 = (unint64_t)v116;
  v121 = objc_msgSend(v116, v120);
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v121);

  v122 = objc_msgSend(v44, "supportedContentTypes");
  v123 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v122, &type metadata for String);

  v124 = *(_QWORD *)(v123 + 16);
  if (v124)
  {
    swift_bridgeObjectRetain(v123);
    v125 = (_QWORD *)(v123 + 40);
    while (1)
    {
      v126 = *(v125 - 1);
      v127 = *v125;
      swift_bridgeObjectRetain_n(*v125, 2);
      UTType.init(_:)(v126, v127);
      v128 = v140;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v118, 1, v117) == 1)
      {
        sub_10000CB4C(v118, &qword_100643EC0);
        swift_bridgeObjectRelease(v127);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v128 + 32))(v115, v118, v117);
        v129 = v128;
        v130 = UTType.conforms(to:)(v115);
        v131 = v117;
        v132 = *(void (**)(char *, uint64_t))(v129 + 8);
        v118 = (uint64_t)v137;
        v132(v115, v131);
        swift_bridgeObjectRelease(v127);
        if ((v130 & 1) != 0)
        {
          swift_unknownObjectRelease(v147);
          swift_bridgeObjectRelease_n(v123, 2);
          v132(v138, v141);
          v8 = v144;
          v44 = (char **)v145;
          v110 = v146;
          v113 = v135;
          v114 = &off_10061F000;
          if (v112 == v139)
            goto LABEL_140;
          goto LABEL_128;
        }
      }
      v125 += 2;
      --v124;
      v117 = v141;
      if (!v124)
      {
        swift_unknownObjectRelease(v147);
        swift_bridgeObjectRelease_n(v123, 2);
        goto LABEL_144;
      }
    }
  }
  swift_bridgeObjectRelease(v123);
  swift_unknownObjectRelease(v147);
LABEL_144:
  swift_bridgeObjectRelease(v146);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v138, v117);
  return 0;
}

objc_class *sub_100350804(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t inited;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *ObjectType;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char **v57;
  id v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  BOOL v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  char v93;
  char isAppContainer;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  id v104;
  char v105;
  id v106;
  char v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  id v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  id v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  char v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  id v130;
  char v131;
  uint64_t v132;
  id v133;
  char v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  id v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  id v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  BOOL v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  id v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  id v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  unint64_t v170;
  uint64_t v171;
  int v172;
  unint64_t v173;
  id v174;
  void *v175;
  id v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  void *v189;
  id v190;
  void *v191;
  unsigned int v192;
  id v193;
  int v194;
  objc_class *result;
  objc_class *v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  NSBundle v204;
  Swift::String v205;
  id v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  id v211;
  _QWORD *v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  id v216;
  id v217;
  id v218;
  unsigned int v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  unint64_t v229;
  id v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  id v235;
  void *v236;
  uint64_t v237;
  char *v238;
  id v239;
  uint64_t v240;
  char v241[48];

  v232 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = __chkstk_darwin(v6);
  v238 = (char *)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = (uint64_t)_swiftEmptyArrayStorage;
  v236 = a2;
  v218 = v3;
  v233 = v7;
  v231 = v9;
  if (a2)
  {
    v219 = objc_msgSend(a2, "isWritable");
    v234 = v219;
  }
  else
  {
    v219 = 0;
    v234 = 1;
  }
  v237 = a1;
  v230 = (id)sub_10035B620(a1);
  v10 = sub_10006922C((uint64_t *)&unk_10064FE00);
  inited = swift_initStackObject(v10, v241);
  *(_OWORD *)(inited + 16) = xmmword_1004E39F0;
  v12 = (void *)FPActionTrash;
  *(_QWORD *)(inited + 32) = FPActionTrash;
  v229 = inited + 32;
  v13 = (void *)FPActionUntrash;
  v14 = (void *)FPActionFavorite;
  *(_QWORD *)(inited + 40) = FPActionUntrash;
  *(_QWORD *)(inited + 48) = v14;
  v15 = (void *)FPActionDelete;
  v16 = (void *)FPActionRename;
  *(_QWORD *)(inited + 56) = FPActionDelete;
  *(_QWORD *)(inited + 64) = v16;
  v17 = (void *)FPActionReparent;
  v18 = (void *)FPActionFetchPublishingURL;
  *(_QWORD *)(inited + 72) = FPActionReparent;
  *(_QWORD *)(inited + 80) = v18;
  v19 = (void *)FPActionArchive;
  v20 = (void *)FPActionUnarchive;
  *(_QWORD *)(inited + 88) = FPActionArchive;
  *(_QWORD *)(inited + 96) = v20;
  v21 = (void *)FPActionTag;
  v22 = FPActionEvict;
  v225 = (id)FPActionEvict;
  *(_QWORD *)(inited + 104) = FPActionTag;
  *(_QWORD *)(inited + 112) = v22;
  v224 = (id)FPActionDownload;
  v23 = FPActionDownloadRecursively;
  v227 = (id)FPActionDownloadRecursively;
  *(_QWORD *)(inited + 120) = FPActionDownload;
  *(_QWORD *)(inited + 128) = v23;
  v226 = (id)FPActionPin;
  v24 = FPActionUnpin;
  v228 = (id)FPActionUnpin;
  *(_QWORD *)(inited + 136) = FPActionPin;
  *(_QWORD *)(inited + 144) = v24;
  v217 = v12;
  v25 = v13;
  v235 = v14;
  v220 = v15;
  v26 = v16;
  v216 = v17;
  v27 = v18;
  v221 = v19;
  v222 = v20;
  v28 = v21;
  v223 = v225;
  v224 = v224;
  v225 = v227;
  v227 = v226;
  v228 = v228;
  v29 = sub_100358B98(inited, (uint64_t)v230);
  swift_setDeallocating(inited);
  v30 = *(_QWORD *)(inited + 16);
  type metadata accessor for FPAction(0);
  v32 = swift_arrayDestroy(v229, v30, v31);
  v33 = Logger.UI.unsafeMutableAddressor(v32);
  v34 = v231;
  v35 = v233;
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v231 + 16))(v238, v33, v233);
  ObjectType = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(ObjectType, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, ObjectType, v38, "Shortcuts Contextual Actions enabled", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v238, v35);
  v40 = objc_msgSend(objc_allocWithZone((Class)WFContextualActionContext), "initWithSurface:", 1);
  v41 = objc_msgSend((id)objc_opt_self(VCVoiceShortcutClient), "standardClient");
  v239 = 0;
  v230 = v40;
  v42 = objc_msgSend(v41, "contextualActionsForContext:error:", v40, &v239);

  v43 = v239;
  if (v42)
  {
    v44 = sub_10004F2F0(0, &qword_10064E0A8, WFContextualAction_ptr);
    v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v44);
    v46 = v43;

  }
  else
  {
    v47 = v239;
    v48 = _convertNSErrorToError(_:)(v43);

    v50 = swift_willThrow(v49);
    v51 = *(id *)DOCLog.UI.unsafeMutableAddressor(v50);
    v52 = static os_log_type_t.error.getter(v51);
    v53 = sub_10006922C((uint64_t *)&unk_100644560);
    ObjectType = swift_allocObject(v53, 72, 7);
    *(_OWORD *)&ObjectType[2].isa = xmmword_1004D9670;
    v54 = _convertErrorToNSError(_:)(v48);
    ObjectType[7].isa = (Class)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    ObjectType[8].isa = (Class)sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    ObjectType[4].isa = (Class)v54;
    os_log(_:dso:log:type:_:)("Fetching contextual actions from Shortcuts failed with error: %@", 64, 2, &_mh_execute_header, v51, v52, ObjectType);

    swift_bridgeObjectRelease(ObjectType);
    swift_errorRelease(v48);
    v45 = 0;
  }
  v55 = 0;
  v56 = v237;
  v57 = &selRef_viewOptionsRoot;
  v58 = v235;
  v59 = sub_100028BE0((uint64_t)v58, v29);

  v60 = (unint64_t)v56 >> 62;
  v233 = v29;
  v61 = v234;
  if ((v59 & 1) == 0)
    goto LABEL_27;
  v62 = (unint64_t)v56 >> 62;
  if (v60)
  {
    if (v56 < 0)
      v74 = v56;
    else
      v74 = v56 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v56);
    if (_CocoaArrayWrapper.endIndex.getter(v74))
      goto LABEL_12;
LABEL_25:
    swift_bridgeObjectRelease(v56);
    goto LABEL_26;
  }
  v63 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v56);
  if (!v63)
    goto LABEL_25;
LABEL_12:
  if ((v56 & 0xC000000000000001) != 0)
    goto LABEL_233;
  v64 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v64)
  {
    __break(1u);
    goto LABEL_235;
  }
  v65 = *(_QWORD *)(v56 + 32);
  swift_unknownObjectRetain(v65);
  while (2)
  {
    swift_bridgeObjectRelease(v56);
    v66 = objc_msgSend((id)v65, "providerDomainID");
    v67 = DOCProviderDomainIDIsSharedServerDomainID(v66);

    if ((v67 & 1) != 0)
    {
      swift_unknownObjectRelease(v65);
      v29 = v233;
    }
    else
    {
      ObjectType = sub_100123C70();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v61 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v68 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v68 >> 1)
LABEL_237:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v61 + 1, 1);
      v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, ObjectType);
      specialized Array._endMutation()(v69);
      v70 = sub_100123FD4();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
      v72 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v71 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v72 >= v71 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
      v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
      specialized Array._endMutation()(v73);
      swift_unknownObjectRelease(v65);
      v29 = v233;
      v61 = v234;
    }
LABEL_26:
    v60 = v62;
LABEL_27:
    v231 = v60;
    if (v60)
    {
LABEL_192:
      if (v56 < 0)
        v180 = v56;
      else
        v180 = v56 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v56);
      v75 = _CocoaArrayWrapper.endIndex.getter(v180);
    }
    else
    {
      v75 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v56);
    }
    v229 = v55;
    v235 = (id)v45;
    v238 = (char *)v75;
    if (!v75)
    {
      swift_bridgeObjectRelease(v56);
      v55 = v231;
      goto LABEL_57;
    }
    v45 = v75;
    v55 = v56 & 0xC000000000000001;
    v76 = 4;
    v29 = (uint64_t)&selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    do
    {
      v77 = v76 - 4;
      if (v55)
      {
        v78 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v76 - 4, v56);
        v79 = __OFADD__(v77, 1);
        v80 = v76 - 3;
        if (v79)
          goto LABEL_189;
      }
      else
      {
        v78 = *(void **)(v56 + 8 * v76);
        swift_unknownObjectRetain(v78);
        v79 = __OFADD__(v77, 1);
        v80 = v76 - 3;
        if (v79)
        {
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
          goto LABEL_192;
        }
      }
      v81 = objc_msgSend(v78, "doc_isCollaborationInvitation");
      swift_unknownObjectRelease(v78);
      if ((v81 & 1) != 0)
        break;
      ++v76;
    }
    while (v80 != v45);
    swift_bridgeObjectRelease(v56);
    v61 = DOCLocalStorageFileProviderIdentifier;
    swift_bridgeObjectRetain(v56);
    v45 = 4;
    do
    {
      v82 = v45 - 4;
      if (v55)
      {
        v84 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v45 - 4, v56);
        v29 = v45 - 3;
        if (__OFADD__(v82, 1))
          goto LABEL_191;
      }
      else
      {
        v84 = *(void **)(v56 + 8 * v45);
        swift_unknownObjectRetain(v84);
        v29 = v45 - 3;
        if (__OFADD__(v82, 1))
          goto LABEL_191;
      }
      ObjectType = swift_getObjectType(v84, v83);
      v85 = objc_msgSend(v84, "providerDomainID");
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
      v88 = v87;

      v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      if (v86 == v89 && v88 == v90)
      {
        swift_bridgeObjectRelease_n(v88, 2);
      }
      else
      {
        v92 = v90;
        v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v88, v89, v90, 0);
        swift_bridgeObjectRelease(v88);
        swift_bridgeObjectRelease(v92);
        if ((v93 & 1) == 0)
        {
          swift_unknownObjectRelease(v84);
          v56 = v237;
          v57 = &selRef_viewOptionsRoot;
          goto LABEL_40;
        }
      }
      isAppContainer = DOCNode.doc_isAppContainerRoot.getter(ObjectType);
      swift_unknownObjectRelease(v84);
      v56 = v237;
      v57 = &selRef_viewOptionsRoot;
      if ((isAppContainer & 1) != 0)
      {
        swift_bridgeObjectRelease(v237);
        v29 = v233;
        v61 = v234;
        v55 = v231;
        goto LABEL_65;
      }
LABEL_40:
      ++v45;
    }
    while ((char *)v29 != v238);
    swift_bridgeObjectRelease(v56);
    v29 = v233;
    v61 = v234;
    v55 = v231;
    if ((v81 & 1) == 0)
    {
LABEL_57:
      if (v55)
      {
        if (v56 < 0)
          v96 = v56;
        else
          v96 = v56 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v56);
        v95 = _CocoaArrayWrapper.endIndex.getter(v96);
        swift_bridgeObjectRelease(v56);
      }
      else
      {
        v95 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      ObjectType = sub_10012434C(v95);
      v97 = v240;
      if ((unint64_t)v240 >> 62)
      {
        v181 = v240 < 0 ? v240 : v240 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v240);
        v182 = _CocoaArrayWrapper.endIndex.getter(v181);
        swift_bridgeObjectRelease(v97);
        if (v182 < 0)
        {
          __break(1u);
LABEL_201:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v61 + 1, 1);
LABEL_67:
          v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, ObjectType);
          v98 = specialized Array._endMutation()(v100);
          v61 = v234;
          goto LABEL_68;
        }
      }
      sub_1004588F4(0, 0, (uint64_t)ObjectType);
    }
LABEL_65:
    v45 = (uint64_t)v236;
    v98 = sub_10035A920(v56, v236);
    if ((v98 & 1) != 0)
    {
      ObjectType = sub_100123978(v45);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v61 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v99 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v99 >> 1)
        goto LABEL_201;
      goto LABEL_67;
    }
LABEL_68:
    if (!v45)
    {
      ObjectType = sub_100300B08(v98);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v102 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v101 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v102 >= v101 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
      v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, ObjectType);
      specialized Array._endMutation()(v103);
      v61 = v234;
    }
    v104 = v220;
    v105 = sub_100028BE0((uint64_t)v104, v29);

    v62 = (uint64_t)v235;
    if ((v105 & 1) != 0
      || (v106 = v217, v107 = sub_100028BE0((uint64_t)v106, v29), v106, (v107 & 1) != 0))
    {
      ObjectType = sub_10012224C();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v109 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v108 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v109 >= v108 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v108 > 1, v109 + 1, 1);
      v110 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v109, ObjectType);
      specialized Array._endMutation()(v110);
      v61 = v234;
    }
    v111 = v221;
    v112 = sub_100028BE0((uint64_t)v111, v29);

    if ((v112 & v61) == 1)
    {
      if (!v45)
      {
        if (v55)
        {
          if (v56 < 0)
            v113 = v56;
          else
            v113 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v114 = _CocoaArrayWrapper.endIndex.getter(v113);
          swift_bridgeObjectRelease(v56);
          if (v114 != 1)
            goto LABEL_88;
        }
        else if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
        {
          goto LABEL_88;
        }
      }
      ObjectType = sub_100300DC0(v45, v45 != 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v61 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v115 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v115 >> 1)
        goto LABEL_204;
      goto LABEL_87;
    }
LABEL_88:
    while (2)
    {
      v117 = v222;
      v118 = sub_100028BE0((uint64_t)v117, v29);

      if ((v118 & v61) == 1)
      {
        if (v45)
          goto LABEL_97;
        if (v55)
        {
          if (v56 < 0)
            v119 = v56;
          else
            v119 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v120 = _CocoaArrayWrapper.endIndex.getter(v119);
          swift_bridgeObjectRelease(v56);
          if (v120 == 1)
            goto LABEL_97;
        }
        else
        {
          if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
            goto LABEL_100;
LABEL_97:
          ObjectType = sub_10030114C(v45, v45 != 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
          v122 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v121 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v122 >= v121 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v121 > 1, v122 + 1, 1);
          v123 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v122, ObjectType);
          specialized Array._endMutation()(v123);
          v61 = v234;
        }
      }
LABEL_100:
      v124 = v223;
      v125 = sub_100028BE0((uint64_t)v124, v29);

      if ((v125 & 1) != 0)
      {
        ObjectType = sub_10030155C(v126);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
        v128 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v127 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v128 >= v127 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v127 > 1, v128 + 1, 1);
        v129 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v128, ObjectType);
        specialized Array._endMutation()(v129);
        v61 = v234;
      }
      v130 = v225;
      v131 = sub_100028BE0((uint64_t)v130, v29);

      if ((v131 & 1) != 0)
      {
        v132 = 1;
        goto LABEL_108;
      }
      v133 = v224;
      v134 = sub_100028BE0((uint64_t)v133, v29);

      if ((v134 & 1) != 0)
      {
        v132 = 0;
LABEL_108:
        ObjectType = sub_100301840(v132);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
        v136 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v135 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v136 >= v135 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
        v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, ObjectType);
        specialized Array._endMutation()(v137);
        v61 = v234;
      }
      v138 = v227;
      v139 = sub_100028BE0((uint64_t)v138, v29);

      if ((v139 & 1) != 0)
      {
        if (v55)
        {
          if (v56 < 0)
            v141 = v56;
          else
            v141 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v140 = _CocoaArrayWrapper.endIndex.getter(v141);
          swift_bridgeObjectRelease(v56);
        }
        else
        {
          v140 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ObjectType = sub_100301CD8(v140);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
        v143 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v142 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v143 >= v142 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v142 > 1, v143 + 1, 1);
        v144 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v143, ObjectType);
        specialized Array._endMutation()(v144);
        v61 = v234;
      }
      v145 = v228;
      v146 = sub_100028BE0((uint64_t)v145, v29);

      v29 = v232;
      if ((v146 & 1) != 0)
      {
        if (v55)
        {
          if (v56 < 0)
            v148 = v56;
          else
            v148 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v147 = _CocoaArrayWrapper.endIndex.getter(v148);
          swift_bridgeObjectRelease(v56);
        }
        else
        {
          v147 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ObjectType = sub_100301F30(v147);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
        v150 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v149 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v150 >= v149 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v149 > 1, v150 + 1, 1);
        v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v150, ObjectType);
        specialized Array._endMutation()(v151);
        v61 = v234;
      }
      if (v55)
      {
        if (v56 < 0)
          v153 = v56;
        else
          v153 = v56 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v56);
        v152 = _CocoaArrayWrapper.endIndex.getter(v153);
        swift_bridgeObjectRelease(v56);
      }
      else
      {
        v152 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v154 = v238;
      if (v238)
        v155 = v152 == 1;
      else
        v155 = 0;
      v55 = !v155;
      if (!v155)
        goto LABEL_152;
      if ((v56 & 0xC000000000000001) == 0)
      {
        v115 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v115)
        {
          v61 = *(_QWORD *)(v56 + 32);
          swift_unknownObjectRetain(v61);
          goto LABEL_148;
        }
        __break(1u);
LABEL_204:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v115 > 1, v61 + 1, 1);
LABEL_87:
        v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, ObjectType);
        specialized Array._endMutation()(v116);
        v61 = v234;
        continue;
      }
      break;
    }
    swift_bridgeObjectRetain(v56);
    v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v56);
    swift_bridgeObjectRelease(v56);
LABEL_148:
    v156 = objc_msgSend((id)v61, "isPinnedSubitem");
    if ((_DWORD)v156)
    {
      ObjectType = sub_100302188((uint64_t)v156);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(ObjectType);
      v62 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v64 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v62 >= v64 >> 1)
LABEL_235:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v62 + 1, 1);
      v157 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, ObjectType);
      specialized Array._endMutation()(v157);
      v45 = (uint64_t)v236;
      v62 = (uint64_t)v235;
    }
    swift_unknownObjectRelease(v61);
    v61 = v234;
    v154 = v238;
LABEL_152:
    if (v154 && ((v61 ^ 1) & 1) == 0)
    {
      swift_bridgeObjectRetain(v56);
      v29 = 4;
      do
      {
        v158 = v29 - 4;
        if ((v56 & 0xC000000000000001) != 0)
        {
          v159 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v29 - 4, v56);
          v79 = __OFADD__(v158, 1);
          ObjectType = (v29 - 3);
          if (v79)
            goto LABEL_190;
        }
        else
        {
          v159 = *(void **)(v56 + 8 * v29);
          swift_unknownObjectRetain(v159);
          v79 = __OFADD__(v158, 1);
          ObjectType = (v29 - 3);
          if (v79)
            goto LABEL_190;
        }
        v61 = (unint64_t)objc_msgSend(v159, v57[319]);
        swift_unknownObjectRelease(v159);
        if (!(_DWORD)v61)
          break;
        ++v29;
      }
      while (ObjectType != v238);
      swift_bridgeObjectRelease(v56);
      v29 = v232;
    }
    v160 = (uint64_t)objc_msgSend((id)v29, "isPickerUI");
    if ((v160 & 1) == 0)
    {
      v160 = (uint64_t)objc_msgSend((id)v29, "isFilesApp");
      if (!(_DWORD)v160)
      {
        if (v62)
          v172 = v61;
        else
          v172 = 0;
        if (v172 != 1)
          goto LABEL_210;
LABEL_178:
        if ((unint64_t)v62 >> 62)
        {
          if (v62 >= 0)
            v183 = v62 & 0xFFFFFFFFFFFFFF8;
          else
            v183 = v62;
          swift_bridgeObjectRetain_n(v62, 2);
          v65 = _CocoaArrayWrapper.endIndex.getter(v183);
          if (v65)
            goto LABEL_180;
        }
        else
        {
          v65 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v62, 2);
          if (v65)
          {
LABEL_180:
            if (v65 < 1)
            {
              __break(1u);
              goto LABEL_237;
            }
            v61 = 0;
            v173 = v62 & 0xC000000000000001;
            do
            {
              if (v173)
                v174 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v62);
              else
                v174 = *(id *)(v62 + 8 * v61 + 32);
              v175 = v174;
              v176 = sub_100303234(v174, v45, v45 != 0);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v176);
              v178 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v177 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v178 >= v177 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v177 > 1, v178 + 1, 1);
              ++v61;
              v179 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v178, v176);
              specialized Array._endMutation()(v179);

              v45 = (uint64_t)v236;
              v62 = (uint64_t)v235;
            }
            while (v65 != v61);
          }
        }
        swift_bridgeObjectRelease_n(v62, 2);
        goto LABEL_210;
      }
    }
    v161 = sub_100302440(v160);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v161);
    v163 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v162 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v163 >= v162 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v162 > 1, v163 + 1, 1);
    v164 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v163, v161);
    specialized Array._endMutation()(v164);
    if ((_DWORD)v61)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
      v165 = sub_1002F608C();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v165);
      v61 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v166 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 >= v166 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v166 > 1, v61 + 1, 1);
      v167 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v165);
      v168 = specialized Array._endMutation()(v167);
      v169 = sub_1002F660C(v168);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v169);
      ObjectType = *(NSObject **)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v170 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)ObjectType >= v170 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v170 > 1, (char *)&ObjectType->isa + 1, 1);
      v171 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(ObjectType, v169);
      specialized Array._endMutation()(v171);
      if (v62)
        goto LABEL_178;
    }
LABEL_210:
    v184 = v233;
    if (v219 && (sub_1003598CC(v216, v56) & 1) != 0)
    {
      v185 = sub_100303578(v45, v56);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v185);
      v187 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v186 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v187 >= v186 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v186 > 1, v187 + 1, 1);
      v188 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v187, v185);
      specialized Array._endMutation()(v188);
      v184 = v233;
    }
    if ((v55 & 1) != 0)
      goto LABEL_230;
    if ((v56 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v189 = *(void **)(v56 + 32);
        swift_unknownObjectRetain(v189);
        goto LABEL_219;
      }
      __break(1u);
LABEL_233:
      v65 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v56);
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain(v56);
  v189 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v56);
  swift_bridgeObjectRelease(v56);
LABEL_219:
  v190 = objc_msgSend(v189, "cachedDomain");
  if (!v190
    || (v191 = v190, v192 = objc_msgSend(v190, "isiCloudDriveProvider"), v191, !v192))
  {
LABEL_229:
    swift_unknownObjectRelease(v189);
    v184 = v233;
LABEL_230:
    swift_bridgeObjectRetain(v56);
    v211 = v218;
    v212 = sub_1003596A0(v184, v56);
    swift_release(v184);

    swift_bridgeObjectRelease(v56);
    sub_10012FB10((uint64_t)v212);

    v213 = v240;
    swift_bridgeObjectRetain(v240);
    swift_bridgeObjectRelease(v62);
    swift_bridgeObjectRelease(v240);
    return (objc_class *)v213;
  }
  v193 = objc_msgSend(v189, "isFolder");
  v194 = (int)v193;
  result = (objc_class *)(id)_DocumentManagerBundle(v193);
  v196 = result;
  if (!v194)
  {
    if (!result)
      goto LABEL_239;
    v198 = 0xD000000000000025;
    v199 = 0xD00000000000004ALL;
    v214 = 0x800000010052A0A0;
    v200 = 0x800000010052A050;
    v201 = 0x800000010052A080;
    v202 = 0x617A696C61636F4CLL;
    v203 = 0xEB00000000656C62;
    v204.super.isa = v196;
    v197 = 0xD000000000000012;
LABEL_226:
    v205 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v198, *(Swift::String_optional *)&v202, v204, *(Swift::String *)&v197, *(Swift::String *)&v199);

    v206 = sub_100124770(v205._countAndFlagsBits, (uint64_t)v205._object);
    v207 = swift_bridgeObjectRelease(v205._object);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v207);
    v209 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v208 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v209 >= v208 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v208 > 1, v209 + 1, 1);
    v210 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v209, v206);
    specialized Array._endMutation()(v210);
    goto LABEL_229;
  }
  if (result)
  {
    v197 = 0xD000000000000014;
    v198 = 0xD000000000000027;
    v199 = 0xD00000000000004CLL;
    v214 = 0x800000010052A120;
    v200 = 0x800000010052A0F0;
    v201 = 0x80000001005166D0;
    v202 = 0x617A696C61636F4CLL;
    v203 = 0xEB00000000656C62;
    v204.super.isa = v196;
    goto LABEL_226;
  }
  __break(1u);
LABEL_239:
  __break(1u);
  return result;
}

id sub_100351F3C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  id v17;
  NSString v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25;

  v0 = sub_10034EEA4();
  v1 = v0;
  if (v0 >> 62)
    goto LABEL_20;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v0);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v3 = UIDocumentBrowserActionIdentifierShare;
    v4 = 4;
    while (1)
    {
      v5 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1)
         : *(id *)(v1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      if (v9 == v12 && v11 == v13)
      {
        swift_bridgeObjectRelease_n(v1, 2);
        v21 = v11;
LABEL_17:
        swift_bridgeObjectRelease_n(v21, 2);
        return v6;
      }
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) != 0)
      {
        v21 = v1;
        goto LABEL_17;
      }

      ++v4;
      if (v7 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_20:
    if (v1 < 0)
      v23 = v1;
    else
      v23 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
  }
LABEL_14:
  swift_bridgeObjectRelease_n(v1, 2);
  v17 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v24[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
  v25 = 0;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_100355750;
  v24[3] = &unk_1005E0180;
  v20 = _Block_copy(v24);
  v6 = objc_msgSend(v17, "initWithIdentifier:localizedTitle:availability:handler:", v18, v19, 1, v20);

  _Block_release(v20);
  swift_release(v25);
  return v6;
}

id DOCActionManager.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCActionManager);
}

double DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5)
{
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void (**v35)(_QWORD, _QWORD, _QWORD);
  Class isa;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierCopy);
  v12 = v10 == a1 && v11 == a2;
  v13 = (unint64_t)a3 >> 62;
  if (v12)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v14 = v11;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v10, v11, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
    if ((v15 & 1) == 0)
      goto LABEL_15;
  }
  if (v13)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a3).n128_u64[0];
    if (v18 > 1000)
      return result;
  }
  else if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > 1000)
  {
    return result;
  }
LABEL_15:
  v19 = sub_10034EEA4();
  if (v13)
  {
    if (a3 < 0)
      v37 = a3;
    else
      v37 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v38 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v21 = _bridgeCocoaArray<A>(_:)(v37, v38);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v20 = swift_bridgeObjectRetain(a3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
    v21 = a3;
  }
  v22 = sub_100350804(v21, a4, *(_QWORD *)&a5[OBJC_IVAR____TtC5Files16DOCActionContext_configuration]);
  swift_bridgeObjectRelease(v21);
  sub_10012FB10((uint64_t)v22);
  swift_bridgeObjectRetain(a2);
  v23 = sub_10035DA3C(v19, a1, a2);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(a2);
  if (!v23)
  {
    v26 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
    v27 = static os_log_type_t.error.getter(v26);
    v28 = sub_10006922C((uint64_t *)&unk_100644560);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_10006A638();
    *(_QWORD *)(v29 + 32) = a1;
    *(_QWORD *)(v29 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    os_log(_:dso:log:type:_:)("Cannot find action for identifier %@", 36, 2, &_mh_execute_header, v26, v27, v29);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
    return result;
  }
  if (v13)
  {
    if (a3 < 0)
      v30 = a3;
    else
      v30 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v31 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v32 = _bridgeCocoaArray<A>(_:)(v30, v31);
    swift_bridgeObjectRelease(a3);
    a3 = v32;
  }
  else
  {
    v25 = swift_bridgeObjectRetain(a3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v25);
  }
  if (objc_msgSend(v23, "requiresResolvedItems"))
  {
    v33 = v23;
    v39 = a5;
    sub_10035E100(a3, v33, v39);
    swift_bridgeObjectRelease(a3);

LABEL_29:
    return result;
  }
  v34 = objc_msgSend(v23, "unresolvedHandler");
  if (v34)
  {
    v35 = (void (**)(_QWORD, _QWORD, _QWORD))v34;
    v39 = a5;
    _Block_copy(v35);
    sub_10006922C((uint64_t *)&unk_1006424B0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    ((void (**)(_QWORD, Class, char *))v35)[2](v35, isa, v39);

    _Block_release(v35);
    _Block_release(v35);

    swift_bridgeObjectRelease(a3);
    goto LABEL_29;
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(a3).n128_u64[0];
  return result;
}

uint64_t sub_100352540(int a1, id a2, void *a3)
{
  void (**v4)(id, Class, uint64_t);
  id v5;
  NSArray v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  _QWORD v16[4];

  v4 = (void (**)(id, Class, uint64_t))objc_msgSend(a2, "resolvedHandler");
  v16[3] = type metadata accessor for DOCActionContext();
  v16[0] = a3;
  sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
  v5 = a3;
  v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000685A8((uint64_t)v16, (uint64_t)v14);
  v7 = v15;
  if (v15)
  {
    v8 = sub_10007E7A0(v14, v15);
    v9 = *(_QWORD *)(v7 - 8);
    __chkstk_darwin(v8);
    v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_100068588(v14);
  }
  else
  {
    v12 = 0;
  }
  v4[2](v4, v6.super.isa, v12);

  _Block_release(v4);
  swift_unknownObjectRelease(v12);
  return sub_10000CB4C((uint64_t)v16, &qword_100642730);
}

double sub_1003526AC(void *a1, int a2, uint64_t a3, dispatch_group_t group, uint64_t a5)
{
  _QWORD *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  double result;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[5];
  uint64_t v27;

  if (a1)
  {
    v7 = (_QWORD *)(a5 + 16);
    swift_beginAccess(a5 + 16, v26, 33, 0);
    v8 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v10 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v9 = *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v10 >= v9 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
    specialized Array._endMutation()(v11);
    swift_endAccess(v26);
    v12 = swift_allocObject(&unk_1005E0730, 24, 7);
    *(_QWORD *)(v12 + 16) = group;
    v26[4] = sub_1000A8854;
    v27 = v12;
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 1107296256;
    v26[2] = sub_10016C02C;
    v26[3] = &unk_1005E0748;
    v13 = _Block_copy(v26);
    v14 = v27;
    v15 = group;
    swift_release(v14);
    objc_msgSend(v8, "prepareForMode:usingBookmark:completionBlock:", 1, 0, v13);
    _Block_release(v13);

  }
  else
  {
    dispatch_group_leave(group);
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    v23 = sub_10006A638();
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v22 + 32) = 0xD00000000000001BLL;
    *(_QWORD *)(v22 + 40) = 0x8000000100529DE0;
    if (a3)
    {
      v24 = _convertErrorToNSError(_:)(a3);
      v25 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v23 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    }
    else
    {
      *(_QWORD *)(v22 + 80) = 0xEB0000000029726FLL;
      v24 = 0x727265206C696E28;
      v25 = &type metadata for String;
    }
    *(_QWORD *)(v22 + 96) = v25;
    *(_QWORD *)(v22 + 104) = v23;
    *(_QWORD *)(v22 + 72) = v24;
    os_log(_:dso:log:type:_:)("%@: error creating DOCItemBookmark item error: %@", 49, 2, &_mh_execute_header, v19, v20, v22);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_100352934(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(a3 + 16, v8, 0, 0);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = swift_bridgeObjectRetain(v5);
  a1(v6);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_100352AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  ObjCClassMetadata = swift_getObjCClassMetadata(a1);
  ObjectType = swift_getObjectType(a3, v7);
  v9 = swift_unknownObjectRetain(a3);
  LOBYTE(a4) = a4(v9, ObjCClassMetadata, ObjectType);
  swift_unknownObjectRelease(a3);
  return a4 & 1;
}

double sub_100352B24(_QWORD *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  Swift::OpaquePointer v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v2 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  v3 = objc_msgSend(v2, "itemProviders");

  v4 = sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
    goto LABEL_25;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    v30 = a1;
    v7 = 0;
    v35 = v5 & 0xC000000000000001;
    v33 = v5 & 0xFFFFFFFFFFFFFF8;
    v34 = v5;
    v32 = v5 + 32;
    v31 = v6;
    while (1)
    {
      if (v35)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v34);
      }
      else
      {
        if (v7 >= *(_QWORD *)(v33 + 16))
          goto LABEL_24;
        v11 = *(id *)(v32 + 8 * v7);
      }
      v12 = v11;
      if (__OFADD__(v7++, 1))
        break;
      v14 = *(id *)DOCLog.UI.unsafeMutableAddressor(v11);
      v15 = static os_log_type_t.debug.getter(v14);
      v16 = sub_10006922C((uint64_t *)&unk_100644560);
      v17 = swift_allocObject(v16, 112, 7);
      *(_OWORD *)(v17 + 16) = xmmword_1004D4CE0;
      v5 = (uint64_t)&type metadata for String;
      *(_QWORD *)(v17 + 56) = &type metadata for String;
      *(_QWORD *)(v17 + 64) = sub_10006A638();
      strcpy((char *)(v17 + 32), "typeToRequest");
      *(_WORD *)(v17 + 46) = -4864;
      v18 = objc_msgSend(v12, "registeredTypeIdentifiers");
      a1 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for String);

      *(_QWORD *)(v17 + 96) = sub_10006922C(&qword_10064F390);
      *(_QWORD *)(v17 + 104) = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
      *(_QWORD *)(v17 + 72) = a1;
      os_log(_:dso:log:type:_:)("%@: registeredTypes: %@", 23, 2, &_mh_execute_header, v14, v15, v17);

      v19 = swift_bridgeObjectRelease(v17);
      v20._rawValue = *(void **)DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v19);
      swift_bridgeObjectRetain(v20._rawValue);
      v21 = objc_msgSend(v12, "registeredTypeIdentifiers");
      v22 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String);

      v23 = v22[2];
      if (v23)
      {
        a1 = (_QWORD *)v22[4];
        v24 = v22[5];
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v24);
        if (String.conformsToAnyOf(_:)(v20))
        {
LABEL_5:
          swift_bridgeObjectRelease_n(v22, 2);
          swift_bridgeObjectRelease(v24);
          swift_bridgeObjectRelease(v20._rawValue);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          v9 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
          v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v12);
          specialized ContiguousArray._endMutation()(v10);
        }
        else
        {
          swift_bridgeObjectRelease(v24);
          if (v23 != 1)
          {
            v5 = (uint64_t)(v22 + 7);
            v25 = 1;
            while (1)
            {
              v26 = v25 + 1;
              if (__OFADD__(v25, 1))
                break;
              a1 = *(_QWORD **)(v5 - 8);
              v24 = *(_QWORD *)v5;
              swift_bridgeObjectRetain(*(_QWORD *)v5);
              if (String.conformsToAnyOf(_:)(v20))
              {
                v6 = v31;
                goto LABEL_5;
              }
              swift_bridgeObjectRelease(v24);
              ++v25;
              v5 += 16;
              if (v26 == v23)
                goto LABEL_19;
            }
            __break(1u);
            break;
          }
LABEL_19:
          swift_bridgeObjectRelease_n(v22, 2);

          swift_bridgeObjectRelease(v20._rawValue);
          v6 = v31;
        }
      }
      else
      {

        swift_bridgeObjectRelease(v20._rawValue);
        swift_bridgeObjectRelease(v22);
      }
      if (v7 == v6)
      {
        swift_bridgeObjectRelease(v34);
        a1 = v30;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    if (v5 < 0)
      v27 = v5;
    else
      v27 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v5);
  }
  swift_bridgeObjectRelease(v5);
LABEL_30:
  v28 = *a1;
  *a1 = _swiftEmptyArrayStorage;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

double sub_100352F2C(unint64_t a1, Swift::OpaquePointer a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::OpaquePointer v19;
  Swift::Bool v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::OpaquePointer v24;
  Swift::Bool v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  double result;
  uint64_t v43;
  uint64_t v44;
  void *rawValue;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;

  v4 = a1;
  if (a1 >> 62)
    goto LABEL_38;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v5)
  {
    v6 = 0;
    v48 = v4 & 0xC000000000000001;
    v43 = v4 + 32;
    v44 = v4 & 0xFFFFFFFFFFFFFF8;
    v46 = v4;
    v47 = v5;
    rawValue = a2._rawValue;
    while (1)
    {
      if (v48)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v44 + 16))
          goto LABEL_37;
        v7 = *(id *)(v43 + 8 * v6);
      }
      v8 = v7;
      if (__OFADD__(v6++, 1))
        break;
      v10 = objc_msgSend(v7, "registeredTypeIdentifiers");
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);

      v55 = *(void **)(v11 + 16);
      v50 = v8;
      if (v55)
      {
        v49 = v6;
        v12 = *(_QWORD *)(v11 + 40);
        v13 = sub_10006922C((uint64_t *)&unk_10064FDF0);
        v14 = type metadata accessor for DOCDragPasteboardType(0);
        v15 = *(_QWORD *)(v14 - 8);
        v16 = *(_QWORD *)(v15 + 72);
        v17 = *(unsigned __int8 *)(v15 + 80);
        v18 = (v17 + 32) & ~v17;
        v54 = v13;
        v51 = v17 | 7;
        v52 = v18 + 2 * v16;
        v19._rawValue = (void *)swift_allocObject(v13, v52, v17 | 7);
        *((_OWORD *)v19._rawValue + 1) = xmmword_1004D4CE0;
        v4 = (uint64_t)v19._rawValue + v18;
        *((_BYTE *)v19._rawValue + v18) = 0;
        swift_storeEnumTagMultiPayload((char *)v19._rawValue + v18, v14, 0);
        v53 = v16;
        *((_BYTE *)v19._rawValue + v18 + v16) = 1;
        swift_storeEnumTagMultiPayload((char *)v19._rawValue + v18 + v16, v14, 0);
        swift_bridgeObjectRetain(v11);
        swift_bridgeObjectRetain(v12);
        v20 = String.conformsToAnyOf(_:)(v19);
        swift_setDeallocating(v19._rawValue);
        swift_arrayDestroy((char *)v19._rawValue + v18, *((_QWORD *)v19._rawValue + 2), v14);
        swift_deallocClassInstance(v19._rawValue, 32, 7);
        swift_bridgeObjectRelease(v12);
        if (v20)
        {
LABEL_4:
          swift_bridgeObjectRelease_n(v11, 2);

          a2._rawValue = rawValue;
          v4 = v46;
          v5 = v47;
          v6 = v49;
          goto LABEL_5;
        }
        if (v55 != (void *)1)
        {
          v21 = (uint64_t *)(v11 + 56);
          v22 = 1;
          while (1)
          {
            a2._rawValue = (void *)(v22 + 1);
            if (__OFADD__(v22, 1))
              break;
            v23 = *v21;
            v24._rawValue = (void *)swift_allocObject(v54, v52, v51);
            *((_OWORD *)v24._rawValue + 1) = xmmword_1004D4CE0;
            v4 = (uint64_t)v24._rawValue + v18;
            *((_BYTE *)v24._rawValue + v18) = 0;
            swift_storeEnumTagMultiPayload((char *)v24._rawValue + v18, v14, 0);
            *((_BYTE *)v24._rawValue + v18 + v53) = 1;
            swift_storeEnumTagMultiPayload((char *)v24._rawValue + v18 + v53, v14, 0);
            swift_bridgeObjectRetain(v23);
            v25 = String.conformsToAnyOf(_:)(v24);
            swift_setDeallocating(v24._rawValue);
            swift_arrayDestroy((char *)v24._rawValue + v18, *((_QWORD *)v24._rawValue + 2), v14);
            swift_deallocClassInstance(v24._rawValue, 32, 7);
            swift_bridgeObjectRelease(v23);
            if (v25)
              goto LABEL_4;
            ++v22;
            v21 += 2;
            if (a2._rawValue == v55)
              goto LABEL_18;
          }
          __break(1u);
          goto LABEL_35;
        }
LABEL_18:
        swift_bridgeObjectRelease(v11);
        a2._rawValue = rawValue;
        v4 = v46;
        v5 = v47;
        v6 = v49;
        v8 = v50;
      }
      v26 = objc_msgSend(v8, "registeredTypeIdentifiers", swift_bridgeObjectRelease(v11).n128_f64[0]);
      v27 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String);

      v28 = v27[2];
      if (v28)
      {
        v30 = v27[4];
        v29 = v27[5];
        swift_bridgeObjectRetain(v27);
        swift_bridgeObjectRetain(v29);
        if (String.conformsToAnyOf(_:)(a2))
        {
LABEL_29:
          swift_bridgeObjectRelease_n(v27, 2);
          v35 = (_QWORD *)*a3;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
          *a3 = v35;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v35 = sub_100081A50(0, v35[2] + 1, 1, v35);
            *a3 = v35;
          }
          v38 = v35[2];
          v37 = v35[3];
          if (v38 >= v37 >> 1)
          {
            v35 = sub_100081A50((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
            *a3 = v35;
          }
          v35[2] = v38 + 1;
          v39 = &v35[2 * v38];
          v39[4] = v30;
          v39[5] = v29;

        }
        else
        {
          v31 = v6;
          swift_bridgeObjectRelease(v29);
          if (v28 != 1)
          {
            v32 = v27 + 7;
            v33 = 1;
            while (1)
            {
              v34 = v33 + 1;
              if (__OFADD__(v33, 1))
                break;
              v30 = *(v32 - 1);
              v29 = *v32;
              swift_bridgeObjectRetain(*v32);
              if (String.conformsToAnyOf(_:)(a2))
              {
                v5 = v47;
                v6 = v31;
                goto LABEL_29;
              }
              swift_bridgeObjectRelease(v29);
              ++v33;
              v32 += 2;
              if (v34 == v28)
                goto LABEL_26;
            }
LABEL_35:
            __break(1u);
            break;
          }
LABEL_26:
          swift_bridgeObjectRelease_n(v27, 2);

          v5 = v47;
          v6 = v31;
        }
      }
      else
      {

        swift_bridgeObjectRelease(v27);
      }
LABEL_5:
      if (v6 == v5)
        goto LABEL_42;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    if (v4 < 0)
      v40 = v4;
    else
      v40 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v40);
  }
LABEL_42:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_100353408(int64_t a1, void *a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  double result;

  v17 = swift_allocObject(&unk_1005E0438, 72, 7);
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_BYTE *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a6;
  *(_QWORD *)(v17 + 48) = a7;
  *(_QWORD *)(v17 + 56) = a8;
  *(_QWORD *)(v17 + 64) = a9;
  v18 = swift_allocObject(&unk_1005E0460, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10035FDDC;
  *(_QWORD *)(v18 + 24) = v17;
  v19 = a3;
  v20 = a4;
  swift_retain();
  swift_bridgeObjectRetain(a8);
  v21 = a9;
  swift_retain();
  sub_1003412F0(a1, a1, a2, 1, (uint64_t)sub_100340C68, v18);
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_100353500(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  unsigned __int8 v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v57[24];

  v12 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v12, "eligibleActionsForDroppingItems:underItem:", isa, a2);

  type metadata accessor for FPAction(0);
  v16 = v15;
  v17 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, v16, v17);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPActionCopy);
  v21 = v20;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v24 = v19 == v23 && v21 == v22;
  v54 = a7;
  if (v24)
    goto LABEL_14;
  v25 = v22;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
    goto LABEL_6;
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPActionReparent);
  v21 = v33;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v36 = v34;
  if (v32 == v35 && v21 == v34)
  {
LABEL_14:
    v27 = 1;
    v37 = v21;
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v21, v35, v34, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v36);
    if ((v46 & 1) != 0)
    {
LABEL_6:
      v27 = 1;
      v28 = (unint64_t)a1 >> 62;
      if ((unint64_t)a1 >> 62)
        goto LABEL_7;
      goto LABEL_16;
    }
    v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPActionImportHere);
    v21 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v37 = v49;
    if (v47 == v50 && v21 == v49)
      v27 = 1;
    else
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v21, v50, v49, 0) & 1;
  }
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v37);
  v28 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_7:
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v29);
    if (!result)
      goto LABEL_11;
    goto LABEL_17;
  }
LABEL_16:
  v38 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (!v38)
  {
LABEL_11:
    swift_bridgeObjectRelease(a1);
    v31 = 0;
LABEL_21:
    v43 = sub_100028BE0(a3, v18);
    swift_bridgeObjectRelease(v18);
    if ((v43 & 1) == 0 || (v31 & 1) != 0)
      return OS_dispatch_semaphore.signal()();
    v44 = (uint64_t *)(a6 + 16);
    if ((a4 & 1) == 0)
      goto LABEL_39;
    if (v28)
    {
      v51 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v45 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v45 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v45 == a5)
    {
      a1 = v54;
      if ((unint64_t)v54 >> 62)
      {
        if (v54 < 0)
          v52 = v54;
        else
          v52 = v54 & 0xFFFFFFFFFFFFFF8;
LABEL_44:
        swift_bridgeObjectRetain(a1);
        v53 = _CocoaArrayWrapper.endIndex.getter(v52);
        swift_bridgeObjectRelease(a1);
        goto LABEL_45;
      }
    }
    else
    {
LABEL_39:
      if (v28)
      {
        if (a1 < 0)
          v52 = a1;
        else
          v52 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_44;
      }
    }
    v53 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_45:
    swift_beginAccess(v44, v57, 1, 0);
    *v44 = v53;
    return OS_dispatch_semaphore.signal()();
  }
LABEL_17:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_20;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v39 = *(id *)(a1 + 32);
LABEL_20:
    v40 = v39;
    swift_bridgeObjectRelease(a1);
    v41 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
    v42 = objc_msgSend(v41, "canItem:performAction:item:", v40, v27, a2);

    v31 = v42 ^ 1;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_100353918()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t Strong;
  id v4;
  unint64_t v5;
  objc_class *v6;
  char *v7;
  char *v8;
  objc_super v10;

  v1 = objc_msgSend(v0, "effectiveAppearance");
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
  v4 = v2;
  v5 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
  v6 = (objc_class *)type metadata accessor for DOCActionContext();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  v8 = v0;
  return objc_msgSendSuper2(&v10, "init");
}

void DOCActionManager.perform(actionWithIdentifier:with:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;

  v36 = a5;
  v34 = a4;
  v38 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(id *)DOCLog.UI.unsafeMutableAddressor(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  v15 = sub_10006922C((uint64_t *)&unk_100644560);
  v16 = swift_allocObject(v15, 152, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  *(_QWORD *)(v16 + 64) = sub_10006A638();
  v37 = a1;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = a2;
  *(_QWORD *)(v16 + 96) = sub_10006922C(&qword_10064FC48);
  *(_QWORD *)(v16 + 104) = sub_100062698((unint64_t *)&unk_10064FC50, &qword_10064FC48, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v16 + 72) = a3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  v35 = v5;
  v17 = sub_10034EEA4();
  *(_QWORD *)(v16 + 136) = sub_10006922C(&qword_100644400);
  *(_QWORD *)(v16 + 144) = sub_100062698(&qword_10064FC60, &qword_100644400, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v16 + 112) = v17;
  os_log(_:dso:log:type:_:)("Identifier %@ urls: %@ all actions: %@", 38, 2, &_mh_execute_header, v13, v14, v16);

  swift_bridgeObjectRelease(v16);
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v31 = a3;
    else
      v31 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v18 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v18 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v19 = _swiftEmptyArrayStorage;
  if (!v18)
    goto LABEL_13;
  v39 = _swiftEmptyArrayStorage;
  sub_100154E04(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    v33 = a2;
    v20 = 0;
    v19 = v39;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a3);
      else
        v21 = *(id *)(a3 + 8 * v20 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, "url");
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

      v39 = v19;
      v25 = v19[2];
      v24 = v19[3];
      if (v25 >= v24 >> 1)
      {
        sub_100154E04(v24 > 1, v25 + 1, 1);
        v19 = v39;
      }
      ++v20;
      v19[2] = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v25, v11, v38);
    }
    while (v18 != v20);
    a2 = v33;
LABEL_13:
    v26 = (_QWORD *)swift_allocObject(&unk_1005E0048, 56, 7);
    v27 = v34;
    v28 = v35;
    v26[2] = v35;
    v26[3] = v27;
    v29 = v37;
    v26[4] = v36;
    v26[5] = v29;
    v26[6] = a2;
    swift_bridgeObjectRetain(a2);
    v30 = v28;
    swift_retain();
    sub_100353DDC((uint64_t)v19, (uint64_t)sub_10035E61C, (uint64_t)v26, v29, a2);
    swift_bridgeObjectRelease(v19);
    swift_release(v26);
    return;
  }
  __break(1u);
}

double sub_100353DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __n128 v33;
  char *v34;
  NSObject *v35;
  id v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  __n128 v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  dispatch_group_t v64;
  _QWORD *v65;
  double result;
  _QWORD v67[2];
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t, __n128);
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  dispatch_group_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD aBlock[5];
  _QWORD *v100;

  v90 = a4;
  v91 = a5;
  v72 = a3;
  v68 = a2;
  v75 = type metadata accessor for DispatchWorkItemFlags(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v89 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = v9;
  __chkstk_darwin(v10);
  v88 = (char *)v67 - v11;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = (id)type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v92);
  v86 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v17 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v21;
  v96 = swift_allocObject(&unk_1005E0780, 24, 7);
  *(_QWORD *)(v96 + 16) = 0;
  v95 = swift_allocObject(&unk_1005E07A8, 24, 7);
  *(_QWORD *)(v95 + 16) = _swiftEmptyArrayStorage;
  v97 = *(_QWORD *)(a1 + 16);
  v22 = sub_100088A50(v97, 0);
  specialized Array._endMutation()(v22);
  v94 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v93 = dispatch_group_create();
  v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v18);
  v25 = v17;
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_10005A360((unint64_t *)&qword_100643640, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v27 = sub_10006922C((uint64_t *)&unk_100641280);
  v28 = sub_100062698((unint64_t *)&qword_100643650, (uint64_t *)&unk_100641280, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = v86;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v92, v26);
  v69 = v25;
  v67[1] = v23;
  v92 = (id)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x8000000100529E40, v25, v29, v85, 0);
  if (v97)
  {
    v30 = *(unsigned __int8 *)(v8 + 80);
    v31 = a1 + ((v30 + 32) & ~v30);
    v86 = *(char **)(v8 + 72);
    v32 = *(char **)(v8 + 16);
    v83 = v30 | 7;
    v84 = (v30 + 16) & ~v30;
    v82 = (v82 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = (v82 + 23) & 0xFFFFFFFFFFFFFFF8;
    v80 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8;
    v79 = (v80 + 15) & 0xFFFFFFFFFFFFFFF8;
    v78 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
    v77 = v78 + 8;
    v33 = swift_bridgeObjectRetain(a1);
    v87 = v14;
    v85 = v32;
    v34 = v88;
    v36 = v92;
    v35 = v93;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v14, v31, v7, v33);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v37)(v14, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
        break;
      v76 = v37;
      v38 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v38(v34, v14, v7);
      dispatch_group_enter(v35);
      v39 = v7;
      v40 = v89;
      ((void (*)(char *, char *, uint64_t))v32)(v89, v34, v39);
      v41 = swift_allocObject(&unk_1005E0820, v77, v83);
      v38((char *)(v41 + v84), v40, v39);
      v42 = (_QWORD *)(v41 + v82);
      v43 = v91;
      *v42 = v90;
      v42[1] = v43;
      *(_QWORD *)(v41 + v81) = v36;
      *(_QWORD *)(v41 + v80) = v96;
      *(_QWORD *)(v41 + v79) = v35;
      *(_QWORD *)(v41 + v78) = v95;
      swift_bridgeObjectRetain(v43);
      v44 = v36;
      swift_retain();
      v45 = v35;
      v7 = v39;
      v14 = v87;
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)(v34, sub_100360DD4, v41);
      v46 = v41;
      v32 = v85;
      v47 = swift_release(v46);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v34, v7, v47);
      v31 += (uint64_t)v86;
      if (!--v97)
      {
        v76(v14, 1, 1, v7, v33);
        break;
      }
    }
  }
  else
  {
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
    v49 = swift_bridgeObjectRetain(a1);
    v48(v14, 1, 1, v7, v49);
  }
  swift_bridgeObjectRelease(a1);
  v51 = (void *)static OS_dispatch_queue.main.getter(v50);
  v52 = (_QWORD *)swift_allocObject(&unk_1005E07D0, 48, 7);
  v53 = v72;
  v52[2] = v68;
  v52[3] = v53;
  v55 = v95;
  v54 = v96;
  v52[4] = v96;
  v52[5] = v55;
  aBlock[4] = sub_100360D00;
  v100 = v52;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E07E8;
  v56 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v57 = v69;
  static DispatchQoS.unspecified.getter(v58);
  v98 = _swiftEmptyArrayStorage;
  v59 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v60 = sub_10006922C((uint64_t *)&unk_100647540);
  v61 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v62 = v73;
  v63 = v75;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v98, v60, v61, v75, v59);
  v64 = v93;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v57, v62, v51, v56);
  _Block_release(v56);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v63);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v71);
  v65 = v100;
  swift_release(v54);
  swift_release(v55);
  *(_QWORD *)&result = swift_release(v65).n128_u64[0];
  return result;
}

void sub_10035458C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, NSObject *a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  void *v34;
  uint64_t v35;
  unsigned int v38;
  void **aBlock;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  void *v42;
  uint64_t (*v43)();
  uint64_t v44;

  if (!a1)
  {
    v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v38 = static os_log_type_t.error.getter(v21);
    v22 = sub_10006922C((uint64_t *)&unk_100644560);
    v23 = swift_allocObject(v22, 192, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9B50;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    v24 = sub_10006A638();
    *(_QWORD *)(v23 + 64) = v24;
    *(_QWORD *)(v23 + 32) = 0xD000000000000023;
    *(_QWORD *)(v23 + 40) = 0x8000000100529E70;
    URL._bridgeToObjectiveC()((NSURL *)0xD000000000000023);
    v26 = v25;
    *(_QWORD *)(v23 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v23 + 104) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v23 + 72) = v26;
    if (a2)
    {
      v27 = _convertErrorToNSError(_:)(a2);
      v28 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v29 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    }
    else
    {
      *(_QWORD *)(v23 + 120) = 0xEB0000000029726FLL;
      v27 = 0x727265206C696E28;
      v28 = &type metadata for String;
      v29 = v24;
    }
    *(_QWORD *)(v23 + 136) = v28;
    *(_QWORD *)(v23 + 144) = v29;
    *(_QWORD *)(v23 + 112) = v27;
    *(_QWORD *)(v23 + 176) = &type metadata for String;
    *(_QWORD *)(v23 + 184) = v24;
    *(_QWORD *)(v23 + 152) = a4;
    *(_QWORD *)(v23 + 160) = a5;
    *(_QWORD *)&v30 = swift_bridgeObjectRetain(a5).n128_u64[0];
    os_log(_:dso:log:type:_:)("%@: error fetching item for url %@: %@ (action identifier: %@)", 62, 2, &_mh_execute_header, v21, v38, v23, v30);

    swift_bridgeObjectRelease(v23);
    if (a2)
    {
      v31 = swift_allocObject(&unk_1005E0848, 32, 7);
      *(_QWORD *)(v31 + 16) = a7 + 16;
      *(_QWORD *)(v31 + 24) = a2;
      v32 = swift_allocObject(&unk_1005E0870, 32, 7);
      v33 = sub_100360E9C;
      *(_QWORD *)(v32 + 16) = sub_100360E9C;
      *(_QWORD *)(v32 + 24) = v31;
      v43 = sub_10010DB64;
      v44 = v32;
      aBlock = _NSConcreteStackBlock;
      v40 = 1107296256;
      v41 = sub_10006655C;
      v42 = &unk_1005E0888;
      v34 = _Block_copy(&aBlock);
      v35 = v44;
      swift_errorRetain(a2);
      swift_errorRetain(a2);
      swift_retain();
      swift_release(v35);
      dispatch_sync(a6, v34);
      swift_errorRelease(a2);
      _Block_release(v34);
      LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v32, "", 96, 1040, 45, 1);
      swift_release(v32);
      if ((v34 & 1) == 0)
      {
LABEL_11:
        dispatch_group_leave(a8);
        sub_100087534((uint64_t)v33, v31);
        return;
      }
      __break(1u);
    }
    v33 = 0;
    v31 = 0;
    goto LABEL_11;
  }
  v12 = swift_allocObject(&unk_1005E08C0, 32, 7);
  *(_QWORD *)(v12 + 16) = a9 + 16;
  *(_QWORD *)(v12 + 24) = a1;
  v13 = swift_allocObject(&unk_1005E08E8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_100360ED8;
  *(_QWORD *)(v13 + 24) = v12;
  v43 = sub_10010DB64;
  v44 = v13;
  aBlock = _NSConcreteStackBlock;
  v40 = 1107296256;
  v41 = sub_10006655C;
  v42 = &unk_1005E0900;
  v14 = _Block_copy(&aBlock);
  v15 = v44;
  v16 = a1;
  swift_retain();
  swift_release(v15);
  dispatch_sync(a6, v14);
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v13, "", 96, 1048, 37, 1);
  swift_release(v13);
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    dispatch_group_leave(a8);
    swift_release(v12);

  }
}

uint64_t sub_1003549A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(a1, v6, 1, 0);
  v4 = *a1;
  *a1 = a2;
  swift_errorRelease(v4);
  return swift_errorRetain(a2);
}

uint64_t sub_1003549F0(_QWORD *a1, void *a2)
{
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  swift_beginAccess(a1, v9, 33, 0);
  v4 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v6 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v5 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v6 >= v5 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
  v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
  specialized Array._endMutation()(v7);
  return swift_endAccess(v9);
}

uint64_t sub_100354A80(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];

  swift_beginAccess(a3 + 16, v11, 0, 0);
  v7 = 0;
  v8 = *(_QWORD *)(a3 + 16);
  if (!v8)
  {
    swift_beginAccess(a4 + 16, &v10, 0, 0);
    v7 = *(_QWORD *)(a4 + 16);
    swift_bridgeObjectRetain(v7);
  }
  swift_errorRetain(v8);
  a1(v7, v8);
  swift_errorRelease(v8);
  return swift_bridgeObjectRelease(v7);
}

void sub_100354B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, __n128))
{
  uint64_t v9;
  void *Strong;
  void *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  id v43;
  char *v44;
  __n128 v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  double v51;
  __n128 v52;
  id v53;
  void (**v54)(_QWORD, _QWORD, _QWORD);
  char *v55;
  Class isa;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  double v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[24];
  objc_super v72;

  v9 = a4 + OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate);
  if (Strong)
  {
    v11 = Strong;
    v12 = (char *)objc_msgSend(Strong, "actionContextFrom:", 0);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)DOCAppearance), "init");
    v14 = objc_msgSend(objc_allocWithZone((Class)DOCConfiguration), "init");
    v15 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v16 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
    v17 = (objc_class *)type metadata accessor for DOCActionContext();
    v18 = (char *)objc_allocWithZone(v17);
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v13;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v14;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v15;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v16;
    v72.receiver = v18;
    v72.super_class = v17;
    v12 = (char *)objc_msgSendSuper2(&v72, "init");
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v12);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    v23 = sub_10006A638();
    *(_QWORD *)(v22 + 32) = 0xD000000000000010;
    *(_QWORD *)(v22 + 40) = 0x8000000100529F40;
    *(_QWORD *)(v22 + 96) = &type metadata for String;
    *(_QWORD *)(v22 + 104) = v23;
    *(_QWORD *)(v22 + 64) = v23;
    *(_QWORD *)(v22 + 72) = a1;
    *(_QWORD *)(v22 + 80) = a2;
    *(_QWORD *)&v24 = swift_bridgeObjectRetain(a2).n128_u64[0];
    os_log(_:dso:log:type:_:)("%@: No action manager delegate provided. Actions presenting views will not work! %@", 83, 2, &_mh_execute_header, v19, v20, v22, v24);

    swift_bridgeObjectRelease(v22);
  }
  v25 = swift_unknownObjectWeakLoadStrong(v9);
  if (v25)
  {
    v26 = v25;
    v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
    if (v27)
    {
      v28 = (unint64_t *)(v27
                               + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController);
      swift_beginAccess(v27 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController, v71, 0, 0);
      v29 = *v28;
      swift_bridgeObjectRetain(*v28);
    }
    else
    {
      v29 = sub_1003F1F0C((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_unknownObjectRelease(v26);
    if (*(_QWORD *)(v29 + 16))
    {
      swift_bridgeObjectRetain(a2);
      v39 = sub_10007EF08(a1, a2);
      if ((v40 & 1) != 0)
      {
        v37 = *(id *)(*(_QWORD *)(v29 + 56) + 8 * v39);
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v29);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease(a2);
    }
    v36 = a1;
    swift_bridgeObjectRelease(v29);
LABEL_22:
    v46 = *(id *)DOCLog.UI.unsafeMutableAddressor(v38);
    v47 = static os_log_type_t.error.getter(v46);
    v48 = sub_10006922C((uint64_t *)&unk_100644560);
    v49 = swift_allocObject(v48, 112, 7);
    *(_OWORD *)(v49 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    v50 = sub_10006A638();
    *(_QWORD *)(v49 + 32) = 0xD000000000000010;
    *(_QWORD *)(v49 + 40) = 0x8000000100529F40;
    *(_QWORD *)(v49 + 96) = &type metadata for String;
    *(_QWORD *)(v49 + 104) = v50;
    *(_QWORD *)(v49 + 64) = v50;
    *(_QWORD *)(v49 + 72) = v36;
    *(_QWORD *)(v49 + 80) = a2;
    *(_QWORD *)&v51 = swift_bridgeObjectRetain(a2).n128_u64[0];
    os_log(_:dso:log:type:_:)("%@: Unable to match action identifier: %@ to an action in previewPanelActionSheetActions", 88, 2, &_mh_execute_header, v46, v47, v49, v51);

    v52 = swift_bridgeObjectRelease(v49);
    a5(0, v52);
    goto LABEL_33;
  }
  v30 = v12;
  if (!((unint64_t)a3 >> 62))
  {
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain(a3);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v31);
      v32 = a3;
      goto LABEL_10;
    }
LABEL_32:
    v60 = *(id *)DOCLog.UI.unsafeMutableAddressor(v25);
    v61 = static os_log_type_t.error.getter(v60);
    v62 = sub_10006922C((uint64_t *)&unk_100644560);
    v63 = a1;
    v64 = swift_allocObject(v62, 112, 7);
    *(_OWORD *)(v64 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v64 + 56) = &type metadata for String;
    v65 = sub_10006A638();
    *(_QWORD *)(v64 + 32) = 0xD000000000000010;
    *(_QWORD *)(v64 + 40) = 0x8000000100529F40;
    *(_QWORD *)(v64 + 96) = &type metadata for String;
    *(_QWORD *)(v64 + 104) = v65;
    *(_QWORD *)(v64 + 64) = v65;
    *(_QWORD *)(v64 + 72) = v63;
    *(_QWORD *)(v64 + 80) = a2;
    *(_QWORD *)&v66 = swift_bridgeObjectRetain(a2).n128_u64[0];
    os_log(_:dso:log:type:_:)("%@: 0 items passed to run action with identifier %@", 51, 2, &_mh_execute_header, v60, v61, v64, v66);

    v67 = swift_bridgeObjectRelease(v64);
    a5(0, v67);
    v12 = v30;
    goto LABEL_33;
  }
  if (a3 < 0)
    v57 = a3;
  else
    v57 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v58 = _CocoaArrayWrapper.endIndex.getter(v57);
  swift_bridgeObjectRelease(a3);
  if (v58 < 1)
    goto LABEL_32;
  swift_bridgeObjectRetain(a3);
  v59 = sub_10006922C((uint64_t *)&unk_1006424B0);
  v32 = _bridgeCocoaArray<A>(_:)(v57, v59);
  swift_bridgeObjectRelease(a3);
LABEL_10:
  v33 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
  v34 = *(id *)&v30[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  v12 = v30;
  v35 = sub_10034F94C(v32, v33, 0, (uint64_t)v34, 0, 0);
  swift_bridgeObjectRelease(v32);

  swift_bridgeObjectRetain(a2);
  v36 = a1;
  v37 = sub_10035DA3C(v35, a1, a2);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(a2);
  if (!v37)
    goto LABEL_22;
LABEL_16:
  v41 = v37;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v68 = a3;
    else
      v68 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v69 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v70 = _bridgeCocoaArray<A>(_:)(v68, v69);
    swift_bridgeObjectRelease(a3);
    a3 = v70;
  }
  else
  {
    swift_bridgeObjectRetain(a3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v42);
  }
  if (objc_msgSend(v41, "requiresResolvedItems"))
  {
    v43 = v41;
    v44 = v12;
    sub_10035E100(a3, v43, v44);
    swift_bridgeObjectRelease(a3);

  }
  else
  {
    v53 = objc_msgSend(v41, "unresolvedHandler");
    if (v53)
    {
      v54 = (void (**)(_QWORD, _QWORD, _QWORD))v53;
      v55 = v12;
      _Block_copy(v54);
      sub_10006922C((uint64_t *)&unk_1006424B0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(_QWORD, Class, char *))v54)[2](v54, isa, v55);

      _Block_release(v54);
      _Block_release(v54);
      swift_bridgeObjectRelease(a3);

    }
    else
    {
      v45 = swift_bridgeObjectRelease(a3);
    }
  }
  a5(1, v45);

LABEL_33:
}

uint64_t sub_1003552FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions);
  }
  else
  {
    v4 = v0;
    v3 = (*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure))();
    v5 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v5);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_1003554C4(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  v2 = sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return v3;
}

void sub_1003555A4()
{
  void *v0;

}

void sub_1003555BC()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCLazyActionManager", 26, "init(itemManager:managedPermission:)", 36, 0);
  __break(1u);
}

uint64_t sub_1003555E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions));
}

uint64_t sub_100355654()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = v0[4];
  v3 = v2;
  if (v2 == 1)
  {
    v5 = (void (*)(uint64_t *__return_ptr, __n128))v1[2];
    v4 = v1[3];
    v6 = swift_retain();
    v5(&v9, v6);
    swift_release(v4);
    v3 = v9;
    v7 = v1[4];
    v1[4] = v9;
    swift_bridgeObjectRetain(v3);
    sub_10035ED5C(v7);
  }
  sub_10035ED6C(v2);
  return v3;
}

_QWORD *sub_1003556D4()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;
  swift_release(v0[3]);
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 96);
  v3 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_100355730()
{
  _QWORD *v0;

  v0 = sub_1003556D4();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100355750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = type metadata accessor for URL(0);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1003557AC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100140624(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario(0);
      return sub_100360FCC(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002E55F0();
    goto LABEL_7;
  }
  sub_1002DAF84(v17, a3 & 1);
  v24 = sub_100140624(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10007FDB8(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for URL, type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
}

id sub_10035592C(uint64_t a1, void *a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  char v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v8 = a3 & 1;
  v9 = (_QWORD *)*v4;
  v11 = sub_1001406BC(a2, a3 & 1);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = v9[3];
    if (v16 >= v14 && (a4 & 1) != 0)
    {
LABEL_7:
      v17 = *v5;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = v17[7];
        v19 = type metadata accessor for RestorableSettings(0);
        return (id)sub_100360FCC(a1, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v11, type metadata accessor for RestorableSettings);
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_1002E57F8();
      goto LABEL_7;
    }
    sub_1002DB6EC(v14, a4 & 1);
    v21 = sub_1001406BC(a2, v8);
    if ((v15 & 1) == (v22 & 1))
    {
      v11 = v21;
      v17 = *v5;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1003586A0(v11, (uint64_t)a2, v8, a1, v17);
      return a2;
    }
  }
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemCollectionViewController.RestorableSettingsCacheKey);
  __break(1u);
  return result;
}

uint64_t sub_100355A78(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003582A0(a1, a2, a3, sub_1002E5D1C, (void (*)(void))sub_1002DB948);
}

void sub_100355A8C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100140784(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002E5D28();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1002DB954(v13, a3 & 1);
  v18 = sub_100140784(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for UIUserInterfaceSizeClass(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

uint64_t sub_100355BC4(_OWORD *a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10014088C((uint64_t)a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_1002E6070();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = (_OWORD *)(v16[6] + 160 * v10);
    v20 = a1[4];
    v19 = a1[5];
    v21 = a1[3];
    v18[2] = a1[2];
    v18[3] = v21;
    v18[4] = v20;
    v18[5] = v19;
    v22 = a1[1];
    *v18 = *a1;
    v18[1] = v22;
    v23 = a1[6];
    v24 = a1[7];
    v25 = a1[9];
    v18[8] = a1[8];
    v18[9] = v25;
    v18[6] = v23;
    v18[7] = v24;
    *(double *)(v16[7] + 8 * v10) = a3;
    v26 = v16[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v16[2] = v28;
      return sub_100145718((uint64_t)a1);
    }
    goto LABEL_14;
  }
  sub_1002DBC2C(result, a2 & 1);
  result = sub_10014088C((uint64_t)a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemCollectionListSpec.DOCItemHeightDeterminingFactors);
  __break(1u);
  return result;
}

uint64_t sub_100355D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10007EF08(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1002E626C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;
      result = sub_1000D13D0(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain(a4);
    }
    goto LABEL_14;
  }
  sub_1002DC12C(v17, a5 & 1);
  v23 = sub_10007EF08(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100355EA0(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1001409B0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002E6430();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 40 * v12;
      v20 = *(_QWORD *)(v19 + 8);
      v21 = *(_QWORD *)(v19 + 24);
      swift_release(*(_QWORD *)(v19 + 32));
      swift_bridgeObjectRelease(v21);
      result = swift_bridgeObjectRelease(v20);
      v23 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v23;
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(a1 + 32);
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v26 = (uint64_t *)(v18[6] + 16 * v12);
    *v26 = a2;
    v26[1] = a3;
    v27 = v18[7] + 40 * v12;
    v28 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v27 = *(_OWORD *)a1;
    *(_OWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(a1 + 32);
    v29 = v18[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v18[2] = v31;
      return sub_1000D1378(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1002DC438(v15, a4 & 1);
  v24 = sub_1001409B0(a2, a3);
  if ((v16 & 1) == (v25 & 1))
  {
    v12 = v24;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemFileTypeGroupCategory);
  __break(1u);
  return result;
}

uint64_t sub_100356038(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1001409C4(a2, a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for Date(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1002E6444();
      goto LABEL_7;
    }
    sub_1002DC874(v17, a5 & 1);
    v24 = sub_1001409C4(a2, a3, a4);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100358738(v14, a2, a3, a4, a1, v20);
      return sub_100292218(a2, a3, a4);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemDateGroupCategory);
  __break(1u);
  return result;
}

uint64_t sub_100356198(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  __int128 v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1001409C4(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1002E66C0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 40 * v14;
      v22 = *(_QWORD *)(v21 + 8);
      v23 = *(_QWORD *)(v21 + 24);
      swift_release(*(_QWORD *)(v21 + 32));
      swift_bridgeObjectRelease(v23);
      result = swift_bridgeObjectRelease(v22);
      v25 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v21 = *(_OWORD *)a1;
      *(_OWORD *)(v21 + 16) = v25;
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(a1 + 32);
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v28 = v20[6] + 24 * v14;
    *(_QWORD *)v28 = a2;
    *(_QWORD *)(v28 + 8) = a3;
    *(_BYTE *)(v28 + 16) = a4;
    v29 = v20[7] + 40 * v14;
    v30 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v29 = *(_OWORD *)a1;
    *(_OWORD *)(v29 + 16) = v30;
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(a1 + 32);
    v31 = v20[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (!v32)
    {
      v20[2] = v33;
      return sub_100292218(a2, a3, a4);
    }
    goto LABEL_14;
  }
  sub_1002DCAFC(v17, a5 & 1);
  v26 = sub_1001409C4(a2, a3, a4);
  if ((v18 & 1) == (v27 & 1))
  {
    v14 = v26;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemDateGroupCategory);
  __break(1u);
  return result;
}

uint64_t sub_100356354(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v12 = *v5;
  v14 = sub_100140AAC(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1002E68C0();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v22 = v20[6] + 24 * v14;
    *(_QWORD *)v22 = a2;
    *(_QWORD *)(v22 + 8) = a3;
    *(_BYTE *)(v22 + 16) = a4;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  sub_1002DCD64(result, a5 & 1);
  result = sub_100140AAC(a2, a3, a4);
  if ((v18 & 1) == (v21 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemSizeGroupCategory);
  __break(1u);
  return result;
}

void sub_1003564A8(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v6 = v5;
  v12 = *v5;
  v14 = sub_100140AAC(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1002E6A64();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 40 * v14;
      v22 = *(_QWORD *)(v21 + 8);
      v23 = *(_QWORD *)(v21 + 24);
      swift_release(*(_QWORD *)(v21 + 32));
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v22);
      v24 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v21 = *(_OWORD *)a1;
      *(_OWORD *)(v21 + 16) = v24;
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(a1 + 32);
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v27 = v20[6] + 24 * v14;
    *(_QWORD *)v27 = a2;
    *(_QWORD *)(v27 + 8) = a3;
    *(_BYTE *)(v27 + 16) = a4;
    v28 = v20[7] + 40 * v14;
    v29 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v28 = *(_OWORD *)a1;
    *(_OWORD *)(v28 + 16) = v29;
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(a1 + 32);
    v30 = v20[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v20[2] = v32;
      return;
    }
    goto LABEL_14;
  }
  sub_1002DD090(v17, a5 & 1);
  v25 = sub_100140AAC(a2, a3, a4);
  if ((v18 & 1) == (v26 & 1))
  {
    v14 = v25;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemSizeGroupCategory);
  __break(1u);
}

uint64_t sub_100356640(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100140B68(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002E6C5C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return sub_100292204(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1002DD41C(v15, a4 & 1);
  v21 = sub_100140B68(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemSharedByGroupCategory);
  __break(1u);
  return result;
}

uint64_t sub_1003567A0(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100140B68(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002E6E10();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 40 * v12;
      v20 = *(_QWORD *)(v19 + 8);
      v21 = *(_QWORD *)(v19 + 24);
      swift_release(*(_QWORD *)(v19 + 32));
      swift_bridgeObjectRelease(v21);
      result = swift_bridgeObjectRelease(v20);
      v23 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v23;
      *(_QWORD *)(v19 + 32) = *(_QWORD *)(a1 + 32);
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v26 = (uint64_t *)(v18[6] + 16 * v12);
    *v26 = a2;
    v26[1] = a3;
    v27 = v18[7] + 40 * v12;
    v28 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v27 = *(_OWORD *)a1;
    *(_OWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(a1 + 32);
    v29 = v18[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v18[2] = v31;
      return sub_100292204(a2, a3);
    }
    goto LABEL_14;
  }
  sub_1002DD754(v15, a4 & 1);
  v24 = sub_100140B68(a2, a3);
  if ((v16 & 1) == (v25 & 1))
  {
    v12 = v24;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemSharedByGroupCategory);
  __break(1u);
  return result;
}

void sub_100356938(uint64_t a1, void *a2, char a3)
{
  sub_100357E10(a1, a2, a3, (uint64_t (*)(void *))sub_100079D38, (void (*)(void))sub_1002E71F4, (void (*)(void))sub_1002DDAEC, (uint64_t (*)(_QWORD))type metadata accessor for UIContentSizeCategory);
}

_OWORD *sub_10035695C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_100067654(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        sub_100068588(v17);
        return sub_100079B28(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002E7200();
      goto LABEL_7;
    }
    sub_1002DDE18(v13, a3 & 1);
    v19 = sub_100067654(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_10006777C(a2, (uint64_t)v21);
      return sub_1003587D0(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_100356A94(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_10001CCD0(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002E7654();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8 * v10));
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1002DE4D8(v13, a3 & 1);
  v18 = sub_10001CCD0(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCSourceType);
  __break(1u);
}

void sub_100356BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10007EF08(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1002E77F4();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      swift_bridgeObjectRelease(v21[1]);
      *v21 = a1;
      v21[1] = a2;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain(a4);
      return;
    }
    goto LABEL_14;
  }
  sub_1002DE7A8(v17, a5 & 1);
  v22 = sub_10007EF08(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

_OWORD *sub_100356D3C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10007EF08(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_100068588(v19);
        return sub_100079B28(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002E7EFC();
      goto LABEL_7;
    }
    sub_1002DF09C(v15, a4 & 1);
    v21 = sub_10007EF08(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100358848(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100356E6C(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_100079D38(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1002E8310();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1002DF72C(v12, a3 & 1);
  v17 = sub_100079D38(a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

void sub_100356FBC(uint64_t a1, char a2, void *a3, char a4, double a5, double a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v7 = v6;
  v13 = *v6;
  v15 = sub_100140C98((uint64_t)a3);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v14;
  v20 = *(_QWORD *)(v13 + 24);
  if (v20 >= v18 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1002E84B8();
LABEL_7:
    v21 = (_QWORD *)*v7;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7] + 32 * v15;

      *(double *)v22 = a5;
      *(double *)(v22 + 8) = a6;
      *(_QWORD *)(v22 + 16) = a1;
      *(_BYTE *)(v22 + 24) = a2 & 1;
      return;
    }
LABEL_11:
    v21[(v15 >> 6) + 8] |= 1 << v15;
    *(_QWORD *)(v21[6] + 8 * v15) = a3;
    v25 = v21[7] + 32 * v15;
    *(double *)v25 = a5;
    *(double *)(v25 + 8) = a6;
    *(_QWORD *)(v25 + 16) = a1;
    *(_BYTE *)(v25 + 24) = a2 & 1;
    v26 = v21[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v21[2] = v28;
      v29 = a3;
      return;
    }
    goto LABEL_14;
  }
  sub_1002DFA48(v18, a4 & 1);
  v23 = sub_100140C98((uint64_t)a3);
  if ((v19 & 1) == (v24 & 1))
  {
    v15 = v23;
    v21 = (_QWORD *)*v7;
    if ((v19 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v30 = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v30);
  __break(1u);
}

void sub_100357158(uint64_t a1, __int128 *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v22 = *a2;
  v10 = sub_100144398(v22, *((uint64_t *)&v22 + 1));
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  v14 = v9;
  v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    v16 = *v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      v18 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
      sub_100360FCC(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, type metadata accessor for ScrollPositionInfo.ItemOffset);
      return;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002E883C();
    goto LABEL_7;
  }
  sub_1002E0084(v13, a3 & 1);
  v19 = sub_100144398(v22, *((uint64_t *)&v22 + 1));
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCCollectionSection);
    __break(1u);
    return;
  }
  v10 = v19;
  v16 = *v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v21 = a2[1];
  sub_100358900(v10, (uint64_t)a2, a1, v16);
  sub_1001D0760((uint64_t)&v22);
  sub_1001D0760((uint64_t)&v21);
  swift_retain();
}

void sub_1003572B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_100140784(a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 24 * v14;
        v22 = *(void **)v21;
        v23 = *(void **)(v21 + 16);
        swift_bridgeObjectRelease(*(_QWORD *)(v21 + 8));

        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        *(_QWORD *)(v21 + 16) = a3;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1002E8C78();
      goto LABEL_7;
    }
    sub_1002E044C(v17, a5 & 1);
    v24 = sub_100140784(a4);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1003589A0(v14, a4, a1, a2, a3, v20);
      return;
    }
  }
  type metadata accessor for DOCTab(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v26);
  __break(1u);
}

void sub_1003573FC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_100140DE8((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1002E8E60();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1002E0760(v12, a3 & 1);
  v17 = sub_100140DE8((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

void sub_10035755C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10007EF08(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002E8E6C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1002E076C(v15, a4 & 1);
  v20 = sub_10007EF08(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_1003576B8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_100140C4C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1002E901C();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1002E0A78(v12, a3 & 1);
  v17 = sub_100140C4C((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_10004F2F0(0, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

uint64_t sub_100357818(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003582A0(a1, a2, a3, sub_1002E9028, (void (*)(void))sub_1002E0A84);
}

void sub_10035782C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100067654(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002E91E8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      v18 = 8 * v10;

      *(_QWORD *)(v17 + v18) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1002E0D74(v13, a3 & 1);
  v19 = sub_100067654(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return;
  }
  v10 = v19;
  v16 = (_QWORD *)*v4;
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_10006777C(a2, (uint64_t)v27);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  v21 = v16[6] + 40 * v10;
  v22 = v28;
  v23 = v27[1];
  *(_OWORD *)v21 = v27[0];
  *(_OWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v16[7] + 8 * v10) = a1;
  v24 = v16[2];
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v26;
}

void sub_10035798C(uint64_t a1, uint64_t a2, char a3)
{
  sub_100357F9C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for URL, (uint64_t (*)(uint64_t))sub_100140624, (void (*)(void))sub_1002E93C0, (void (*)(void))sub_1002E1084);
}

id sub_1003579B0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;
  uint64_t v21;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_100140E34((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = type metadata accessor for URL(0);
        return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, a1, v17);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1002E93D4();
      goto LABEL_7;
    }
    sub_1002E10A8(v12, a3 & 1);
    v19 = sub_100140E34((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1003589F0(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v21);
  __break(1u);
  return result;
}

uint64_t sub_100357AEC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1001407E0(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1002E99B4();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10035ED7C((uint64_t)a1, v16[7] + 224 * v10);
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = v16[6] + 168 * v10;
    v22 = *(_OWORD *)(a2 + 80);
    v21 = *(_OWORD *)(a2 + 96);
    v23 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v20 + 64) = v23;
    *(_OWORD *)(v20 + 80) = v22;
    *(_OWORD *)(v20 + 96) = v21;
    v25 = *(_OWORD *)(a2 + 16);
    v24 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)v20 = *(_OWORD *)a2;
    *(_OWORD *)(v20 + 16) = v25;
    *(_OWORD *)(v20 + 32) = v24;
    v26 = *(_OWORD *)(a2 + 112);
    v27 = *(_OWORD *)(a2 + 128);
    v28 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(v20 + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)(v20 + 128) = v27;
    *(_OWORD *)(v20 + 144) = v28;
    *(_OWORD *)(v20 + 112) = v26;
    v29 = (_OWORD *)(v16[7] + 224 * v10);
    v30 = a1[1];
    *v29 = *a1;
    v29[1] = v30;
    v31 = a1[2];
    v32 = a1[3];
    v33 = a1[5];
    v29[4] = a1[4];
    v29[5] = v33;
    v29[2] = v31;
    v29[3] = v32;
    v34 = a1[6];
    v35 = a1[7];
    v36 = a1[9];
    v29[8] = a1[8];
    v29[9] = v36;
    v29[6] = v34;
    v29[7] = v35;
    v37 = a1[10];
    v38 = a1[11];
    v39 = a1[13];
    v29[12] = a1[12];
    v29[13] = v39;
    v29[10] = v37;
    v29[11] = v38;
    v40 = v16[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (!v41)
    {
      v16[2] = v42;
      return sub_1001456B8(a2);
    }
    goto LABEL_14;
  }
  sub_1002E1A64(v13, a3 & 1);
  v18 = sub_1001407E0(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_10035ED7C((uint64_t)a1, v16[7] + 224 * v10);
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCGridLayout.LayoutCalculator.CalculationVariables);
  __break(1u);
  return result;
}

id *sub_100357CAC(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  id *result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_100140788(a1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = (id *)(v11 + v12);
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= (uint64_t)result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= (uint64_t)result && (a2 & 1) == 0)
  {
    result = (id *)sub_1002E9C64();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v18 = *(void **)(a1 + 8);
    v26 = *(id *)(a1 + 16);
    v27 = v18;
    v25 = *(id *)(a1 + 32);
    v19 = v25;
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = v16[6] + 40 * v10;
    v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v20 = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v20 + 32) = v19;
    *(double *)(v16[7] + 8 * v10) = a3;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      sub_10007C3B8(&v27);
      sub_10007C3B8(&v26);
      return sub_10007C3B8(&v25);
    }
    goto LABEL_14;
  }
  sub_1002E2074((uint64_t)result, a2 & 1);
  result = (id *)sub_100140788(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = (unint64_t)result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = (id *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCGridLayout.LayoutCalculator.HeightDeterminingFactors);
  __break(1u);
  return result;
}

void sub_100357E10(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), uint64_t (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD *v12;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  id v31;
  uint64_t v32;

  v12 = v7;
  v15 = *v7;
  v17 = a4(a2);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    a5();
LABEL_7:
    v23 = (_QWORD *)*v12;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];

      *(_QWORD *)(v24 + 8 * v17) = a1;
      return;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v27 = 8 * v17;
    *(_QWORD *)(v23[6] + v27) = a2;
    *(_QWORD *)(v23[7] + v27) = a1;
    v28 = v23[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v23[2] = v30;
      v31 = a2;
      return;
    }
    goto LABEL_14;
  }
  a6();
  v25 = a4(a2);
  if ((v21 & 1) == (v26 & 1))
  {
    v17 = v25;
    v23 = (_QWORD *)*v12;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v32 = a7(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v32);
  __break(1u);
}

uint64_t sub_100357F88(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003582A0(a1, a2, a3, sub_1002EA098, (void (*)(void))sub_1002E2714);
}

void sub_100357F9C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), void (*a6)(void), void (*a7)(void))
{
  _QWORD *v7;
  _QWORD **v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(void);
  void (*v29)(void);
  uint64_t (*v30)(_QWORD);
  uint64_t v31;

  v28 = a6;
  v29 = a7;
  v9 = (_QWORD **)v7;
  v30 = a4;
  v31 = a1;
  v12 = a4(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - v14;
  v16 = (_QWORD *)*v7;
  v18 = a5(a2);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = v16[3];
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v9;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7];

      *(_QWORD *)(v25 + 8 * v18) = v31;
      return;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    v28();
    goto LABEL_7;
  }
  v29();
  v26 = a5(a2);
  if ((v22 & 1) != (v27 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v12);
    __break(1u);
    return;
  }
  v18 = v26;
  v24 = *v9;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_10007FD20(v18, (uint64_t)v15, v31, v24, v30);
}

void sub_10035810C(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  double *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;

  v7 = (_QWORD **)v6;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)*v6;
  v20 = sub_10007EF98(a1);
  v21 = v18[2];
  v22 = (v19 & 1) == 0;
  v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
  }
  else
  {
    v24 = v19;
    v25 = v18[3];
    if (v25 >= v23 && (a2 & 1) != 0)
    {
LABEL_7:
      v26 = *v7;
      if ((v24 & 1) != 0)
      {
LABEL_8:
        v27 = (double *)(v26[7] + 32 * v20);
        *v27 = a3;
        v27[1] = a4;
        v27[2] = a5;
        v27[3] = a6;
        return;
      }
      goto LABEL_11;
    }
    if (v25 >= v23 && (a2 & 1) == 0)
    {
      sub_1002EA2E0();
      goto LABEL_7;
    }
    sub_1002E2AAC(v23, a2 & 1);
    v28 = sub_10007EF98(a1);
    if ((v24 & 1) == (v29 & 1))
    {
      v20 = v28;
      v26 = *v7;
      if ((v24 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
      sub_100358A7C(v20, (uint64_t)v17, v26, a3, a4, a5, a6);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v14);
  __break(1u);
}

uint64_t sub_10035828C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003582A0(a1, a2, a3, sub_1002EA6EC, (void (*)(void))sub_1002E3170);
}

uint64_t sub_1003582A0(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;

  v8 = v5;
  v12 = *v5;
  v14 = sub_100067654(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = 8 * v14;
      result = swift_release(*(_QWORD *)(v21 + v22));
      *(_QWORD *)(v21 + v22) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a5();
  v24 = sub_100067654(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_16:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = (_QWORD *)*v8;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  result = sub_10006777C(a2, (uint64_t)v32);
  v20[(v14 >> 6) + 8] |= 1 << v14;
  v26 = v20[6] + 40 * v14;
  v27 = v33;
  v28 = v32[1];
  *(_OWORD *)v26 = v32[0];
  *(_OWORD *)(v26 + 16) = v28;
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v20[7] + 8 * v14) = a1;
  v29 = v20[2];
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (v30)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v20[2] = v31;
  return result;
}

void sub_100358410(uint64_t a1, char a2, char a3)
{
  sub_100358438(a1, a2, a3, sub_1002EA8C8, (void (*)(void))sub_1002E3488);
}

void sub_100358424(uint64_t a1, char a2, char a3)
{
  sub_100358438(a1, a2, a3, sub_1002EA8D4, (void (*)(void))sub_1002E3494);
}

void sub_100358438(uint64_t a1, char a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v8 = v5;
  v12 = *v5;
  sub_1001408E4(a2);
  v15 = v14;
  v16 = *(_QWORD *)(v12 + 16);
  v17 = (v13 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v13;
  v20 = *(_QWORD *)(v12 + 24);
  if (v20 >= v18 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v21 = (_QWORD *)*v8;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];

      *(_QWORD *)(v22 + 8 * v15) = a1;
      return;
    }
LABEL_11:
    v21[(v15 >> 6) + 8] |= 1 << v15;
    *(_BYTE *)(v21[6] + v15) = a2;
    *(_QWORD *)(v21[7] + 8 * v15) = a1;
    v25 = v21[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v21[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  a5();
  sub_1001408E4(a2);
  if ((v19 & 1) == (v24 & 1))
  {
    v15 = v23;
    v21 = (_QWORD *)*v8;
    if ((v19 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DOCItemSortMode.DisplayableMode);
  __break(1u);
}

id sub_10035857C(__int128 *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1001410A0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_QWORD *)(v15[7] + 40 * v9);
        sub_100068588(v16);
        return (id)sub_1000E85C4(a1, (uint64_t)v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1002EAA78();
      goto LABEL_7;
    }
    sub_1002E3678(v12, a3 & 1);
    v18 = sub_1001410A0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100358B30(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  v20 = type metadata accessor for DOCGoToRecentLocation();
  result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
  __break(1u);
  return result;
}

uint64_t sub_1003586A0(unint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a5[6] + 16 * a1;
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3 & 1;
  v9 = a5[7];
  v10 = type metadata accessor for RestorableSettings(0);
  result = sub_1001D0788(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for RestorableSettings);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_100358738(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a6[6] + 24 * a1;
  *(_QWORD *)v9 = a2;
  *(_QWORD *)(v9 + 8) = a3;
  *(_BYTE *)(v9 + 16) = a4;
  v10 = a6[7];
  v11 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5, v11);
  v13 = a6[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a6[2] = v15;
  return result;
}

_OWORD *sub_1003587D0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_100079B28(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_OWORD *sub_100358848(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_100079B28(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1003588B0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 32 * result;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_QWORD *)(v7 + 16) = a4;
  *(_BYTE *)(v7 + 24) = a5;
  *(_QWORD *)(a7[7] + 8 * result) = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

uint64_t sub_100358900(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v7 = a4[6] + 40 * a1;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(a2 + 32);
  v9 = a4[7];
  v10 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  result = sub_1001D0788(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for ScrollPositionInfo.ItemOffset);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

unint64_t sub_1003589A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = (_QWORD *)(a6[7] + 24 * result);
  *v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_1003589F0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_100358A7C(unint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  double *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a3[6];
  v15 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = (double *)(a3[7] + 32 * a1);
  *v17 = a4;
  v17[1] = a5;
  v17[2] = a6;
  v17[3] = a7;
  v18 = a3[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a3[2] = v20;
  return result;
}

uint64_t sub_100358B30(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1000E85C4(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_100358B98(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_100358D18((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v3, a2);
    v10 = v9;
    swift_release(a2);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v8, -1);
    bzero(v11, v8);
    sub_100358D18((unint64_t *)v11, v7, v3, a2);
    v10 = v12;
    swift_release(a2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v10;
}

void sub_100358D18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t i;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  _QWORD v47[9];
  uint64_t v48;

  v4 = a4;
  v5 = a2;
  v44 = *(_QWORD *)(a3 + 16);
  if (!v44)
  {
    v38 = 0;
    goto LABEL_29;
  }
  v46 = a4 + 56;
  v43 = a3 + 32;
  swift_bridgeObjectRetain(a3);
  v41 = 0;
  v6 = 0;
  v48 = v4;
  do
  {
    v7 = *(void **)(v43 + 8 * v6);
    v8 = *(_QWORD *)(v4 + 40);
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v11 = v10;
    Hasher.init(_seed:)(v47, v8);
    v45 = v7;
    String.hash(into:)(v47, v9, v11);
    v12 = Hasher._finalize()();
    swift_bridgeObjectRelease(v11);
    v13 = -1 << *(_BYTE *)(v4 + 32);
    v14 = v12 & ~v13;
    v15 = v14 >> 6;
    v16 = 1 << v14;
    if (((1 << v14) & *(_QWORD *)(v46 + 8 * (v14 >> 6))) == 0)
      goto LABEL_3;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v48 + 48) + 8 * v14));
    v19 = v18;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    if (v17 == v20 && v19 == v21)
    {
      swift_bridgeObjectRelease_n(v19, 2);
    }
    else
    {
      v23 = v21;
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      if ((v24 & 1) == 0)
      {
        v25 = ~v13;
        for (i = v14 + 1; ; i = v27 + 1)
        {
          v27 = i & v25;
          if (((*(_QWORD *)(v46 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0)
            break;
          v4 = v48;
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v48 + 48) + 8 * v27));
          v30 = v29;
          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          if (v28 == v31 && v30 == v32)
          {
            swift_bridgeObjectRelease_n(v30, 2);
LABEL_26:

            v15 = v27 >> 6;
            v16 = 1 << v27;
            goto LABEL_21;
          }
          v34 = v32;
          v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
          swift_bridgeObjectRelease(v30);
          swift_bridgeObjectRelease(v34);
          if ((v35 & 1) != 0)
            goto LABEL_26;
        }
LABEL_3:

        v4 = v48;
        goto LABEL_4;
      }
    }

    v4 = v48;
LABEL_21:
    v36 = a1[v15];
    a1[v15] = v16 | v36;
    if ((v16 & v36) == 0 && __OFADD__(v41++, 1))
    {
      __break(1u);
      return;
    }
LABEL_4:
    ++v6;
  }
  while (v6 != v44);
  swift_bridgeObjectRelease(a3);
  v5 = a2;
  v38 = v41;
LABEL_29:
  swift_retain();
  sub_1004AC284(a1, v5, v38, v4);
}

uint64_t sub_100358FD4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v6;
  _BYTE v7[40];

  v2 = (void *)FPActionImportHere;
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v3, v7);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a1;
  v6 = inited;
  specialized Array._endMutation()(inited);
  swift_unknownObjectRetain(a1);
  LOBYTE(a1) = sub_1003598CC(v2, v6);
  swift_bridgeObjectRelease(v6);
  return a1 & 1;
}

uint64_t sub_100359064(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  char v9;
  id v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[40];

  if ((DOCNode.nodeType.getter(a3) & 1) != 0)
  {
    if ((objc_msgSend(a1, "isRootItem") & 1) != 0
      && (v10 = objc_msgSend(a1, "cachedDomain")) != 0
      && (v11 = v10, v12 = objc_msgSend(v10, "needsAuthentication"), v11, v12))
    {
      v9 = 0;
    }
    else
    {
      v13 = objc_opt_self(FINode);
      v9 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(a1, v13, 0, 0, 0), "nodePermissions:", 0x4000) != 0;
    }
  }
  else
  {
    v4 = objc_opt_self(FPItem);
    v5 = swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
    v6 = (void *)FPActionImportHere;
    v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v7, v16);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v5;
    v15 = inited;
    specialized Array._endMutation()(inited);
    swift_unknownObjectRetain(a1);
    v9 = sub_1003598CC(v6, v15);
    swift_bridgeObjectRelease(v15);
  }
  return v9 & 1;
}

id sub_1003591C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t inited;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id result;
  void *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *object;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  id v45;
  char v46;
  _OWORD v47[2];
  _QWORD aBlock[3];
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;
  _BYTE v52[112];
  Swift::String v53;

  v2 = sub_10006922C((uint64_t *)&unk_10064FE10);
  inited = swift_initStackObject(v2, v52);
  *(_OWORD *)(inited + 16) = xmmword_1004DB530;
  v4 = (void *)FPActionTrash;
  *(_QWORD *)(inited + 32) = FPActionTrash;
  v5 = v4;
  v6 = sub_100120CB0();
  v7 = (void *)FPActionUntrash;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v7;
  v8 = v7;
  v9 = sub_100120F1C();
  v10 = (void *)FPActionRename;
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = v10;
  v11 = v10;
  v12 = sub_100121134();
  v13 = (void *)FPActionReparent;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v44 = a1;
    else
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    v45 = v13;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v13;
  }
  v16 = sub_100121418(v14);
  v17 = (void *)FPActionDelete;
  *(_QWORD *)(inited + 88) = v16;
  *(_QWORD *)(inited + 96) = v17;
  result = (id)_DocumentManagerBundle(v17);
  if (result)
  {
    v19 = result;
    v53._object = (void *)0x800000010052A170;
    v20._countAndFlagsBits = 0x4E206574656C6544;
    v20._object = (void *)0xEA0000000000776FLL;
    v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v21.value._object = (void *)0xEB00000000656C62;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v53._countAndFlagsBits = 0xD000000000000044;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v53)._object;

    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
    v25 = v24;
    v26 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_bridgeObjectRetain(object);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v50 = sub_10011D0E4;
    v51 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100120C10;
    v49 = &unk_1005E0A18;
    v29 = _Block_copy(aBlock);
    v30 = objc_msgSend(v26, "initWithIdentifier:localizedTitle:unresolvedHandler:", v27, v28, v29);

    _Block_release(v29);
    swift_release(v51);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v31);

    objc_msgSend(v30, "setImage:", v32);
    objc_msgSend(v30, "setAvailability:", UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1);
    objc_msgSend(v30, "setNavigationSide:", 1);
    objc_msgSend(v30, "setMenuSortOrder:", 27);
    objc_msgSend(v30, "setActionStyle:", 1);
    objc_msgSend(v30, "setRequiresFullyFormedItems:", 0);
    swift_bridgeObjectRelease(object);
    *(_QWORD *)(inited + 104) = v30;
    v33 = sub_1003F2B68(inited);
    static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
    v35 = v34;
    v36 = objc_allocWithZone((Class)NSUserDefaults);
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    v38 = objc_msgSend(v36, "initWithSuiteName:", v37);

    if (v38)
    {
      v39 = objc_msgSend(v38, "valueForKey:", DOCUserDefaultsKeyCopyLinkUIEnabled);
      if (v39)
      {
        v40 = v39;
        _bridgeAnyObjectToAny(_:)(v47, v39);
        swift_unknownObjectRelease(v40);
      }
      else
      {
        memset(v47, 0, sizeof(v47));
      }
      sub_10007EBDC((uint64_t)v47, (uint64_t)aBlock);
      if (v49)
      {
        if ((swift_dynamicCast(&v46, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
          && v46 == 1)
        {
          v41 = FPActionFetchPublishingURL;
          v42 = sub_100121880((uint64_t)v41);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
          aBlock[0] = v33;
          sub_100357E10((uint64_t)v42, v41, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_100079D38, (void (*)(void))sub_1002E9E44, (void (*)(void))sub_1002E23E8, (uint64_t (*)(_QWORD))type metadata accessor for FPAction);
          v33 = aBlock[0];

          swift_bridgeObjectRelease(0x8000000000000000);
        }
        else
        {

        }
      }
      else
      {

        sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
      }
    }
    return (id)v33;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1003596A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = (_QWORD *)swift_bridgeObjectRetain(a1);
  v10 = 0;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v8)
    {
      v14 = *(_QWORD *)(v4 + 8 * v13);
      ++v10;
      if (v14)
        goto LABEL_23;
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (v14)
        goto LABEL_23;
      v10 = v13 + 2;
      if (v13 + 2 >= v8)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (v14)
        goto LABEL_23;
      v10 = v13 + 3;
      if (v13 + 3 >= v8)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (v14)
      {
LABEL_23:
        v7 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v10 << 6); ; i = v11 | (v10 << 6))
        {
          v16 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * i);
          v17 = sub_1003591C0(a2);
          if (!v17[2])
            break;
          v18 = v16;
          v19 = sub_100079D38(v18);
          if ((v20 & 1) == 0)
          {

LABEL_6:
            result = (_QWORD *)swift_bridgeObjectRelease(v17);
            if (!v7)
              goto LABEL_8;
            goto LABEL_7;
          }
          v21 = *(id *)(v17[7] + 8 * v19);

          v22 = swift_bridgeObjectRelease(v17);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
          v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v24 >= v23 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
          v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
          result = (_QWORD *)specialized Array._endMutation()(v25);
          if (!v7)
            goto LABEL_8;
LABEL_7:
          v11 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }

        goto LABEL_6;
      }
      v15 = v13 + 4;
      if (v15 < v8)
      {
        v14 = *(_QWORD *)(v4 + 8 * v15);
        if (v14)
        {
          v10 = v15;
          goto LABEL_23;
        }
        while (1)
        {
          v10 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_33;
          if (v10 >= v8)
            break;
          v14 = *(_QWORD *)(v4 + 8 * v10);
          ++v15;
          if (v14)
            goto LABEL_23;
        }
      }
    }
LABEL_31:
    swift_release(a1);
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1003598CC(void *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  char v23;
  id v24;
  id v25;
  uint64_t v27;
  uint64_t v28;

  v4 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v27 = a2;
    else
      v27 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a2);
    if (!v28)
      goto LABEL_19;
  }
  else if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_19;
  }
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPActionCopy);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    if ((v12 & 1) == 0)
    {
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(FPActionImportHere);
      v15 = v14;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v18 = v16;
      if (v13 == v17 && v15 == v16)
      {
        swift_bridgeObjectRelease_n(v15, 2);
LABEL_22:
        v24 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
        v25 = a1;
        v22 = v24;
        v21 = sub_10014EEE8(a2, (uint64_t)v25, v22);

        goto LABEL_23;
      }
      v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v18);
      if ((v23 & 1) != 0)
        goto LABEL_22;
LABEL_20:
      v22 = a1;
      v21 = sub_10014EED0(a2, (uint64_t)v22);
LABEL_23:

      return v21 & 1;
    }
  }
  if (v4)
  {
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a2);
    if (v20 <= 1000)
      goto LABEL_20;
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) <= 1000)
  {
    goto LABEL_20;
  }
LABEL_19:
  v21 = 0;
  return v21 & 1;
}

uint64_t sub_100359B10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;

  v4 = v3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = _swiftEmptyArrayStorage;
    if (!v6)
      return (uint64_t)v7;
    v23 = _swiftEmptyArrayStorage;
    result = sub_100154DCC(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v23;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v20 = v10;
      sub_10034F41C(&v20, a2, a3, (uint64_t)&v21);
      if (v4)
      {
        swift_release(v7);

        return (uint64_t)v7;
      }
      v4 = 0;

      v12 = v21;
      v13 = v22;
      v23 = v7;
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
      {
        sub_100154DCC(v14 > 1, v15 + 1, 1);
        v7 = v23;
      }
      ++v9;
      v7[2] = v15 + 1;
      v16 = &v7[2 * v15];
      v16[4] = v12;
      *((_BYTE *)v16 + 40) = v13;
      if (v6 == v9)
        return (uint64_t)v7;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

id sub_100359CA0(void *a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id result;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[40];

  ObjectType = swift_getObjectType(a1, a2);
  if ((DOCNode.nodeType.getter(ObjectType) & 1) != 0)
  {
    v10 = objc_opt_self(FINode);
    result = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(a1, v10, 0, 0, 0), "nodePermissions:", 4);
    if (!(_DWORD)result)
      return result;
    return (id)(objc_msgSend(a1, "isTrashed", v11) ^ 1);
  }
  v4 = objc_opt_self(FPItem);
  v5 = swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = (void *)FPActionImportHere;
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v7, v12);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v5;
  v11 = inited;
  specialized Array._endMutation()(inited);
  swift_unknownObjectRetain(a1);
  LOBYTE(v6) = sub_1003598CC(v6, v11);
  swift_bridgeObjectRelease(v11);
  result = 0;
  if ((v6 & 1) != 0)
    return (id)(objc_msgSend(a1, "isTrashed", v11) ^ 1);
  return result;
}

id sub_100359DBC(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *v23;
  id v24;
  NSString v25;
  NSString v26;
  void *v27;
  NSString v28;
  id v29;
  void **aBlock;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;

  if ((a1 & 1) != 0)
  {
    result = (id)_DocumentManagerBundle(a1);
    if (result)
    {
      v2 = result;
      v36._object = (void *)0x800000010050E520;
      v3._countAndFlagsBits = 0x6574656C6544;
      v3._object = (void *)0xE600000000000000;
      v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v4.value._object = (void *)0xEB00000000656C62;
      v5._countAndFlagsBits = 0;
      v5._object = (void *)0xE000000000000000;
      v36._countAndFlagsBits = 0xD00000000000001BLL;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v36)._object;

      static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
      v8 = v7;
      v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      swift_bridgeObjectRetain(object);
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v8);
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v34 = sub_10011D0E4;
      v35 = 0;
      aBlock = _NSConcreteStackBlock;
      v31 = 1107296256;
      v32 = sub_100120C10;
      v33 = &unk_1005E0AE0;
      v12 = _Block_copy(&aBlock);
      v13 = objc_msgSend(v9, "initWithIdentifier:localizedTitle:unresolvedHandler:", v10, v11, v12);

      _Block_release(v12);
      swift_release(v35);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

      objc_msgSend(v13, "setImage:", v15);
      objc_msgSend(v13, "setAvailability:", UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1);
      objc_msgSend(v13, "setNavigationSide:", 1);
      objc_msgSend(v13, "setMenuSortOrder:", 27);
      objc_msgSend(v13, "setActionStyle:", 1);
      objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
      swift_bridgeObjectRelease(object);
      return v13;
    }
    __break(1u);
  }
  else
  {
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierDelete);
    v18 = v17;
    result = (id)_DocumentManagerBundle(v16);
    if (result)
    {
      v19 = result;
      v37._countAndFlagsBits = 0xD00000000000002FLL;
      v37._object = (void *)0x800000010052A1C0;
      v20._countAndFlagsBits = 0x41206574656C6544;
      v20._object = (void *)0xEA00000000006C6CLL;
      v21.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v21.value._object = (void *)0xEB00000000656C62;
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v37)._object;

      v24 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      v34 = sub_10011D0E4;
      v35 = 0;
      aBlock = _NSConcreteStackBlock;
      v31 = 1107296256;
      v32 = sub_100120C10;
      v33 = &unk_1005E0AB8;
      v27 = _Block_copy(&aBlock);
      v13 = objc_msgSend(v24, "initWithIdentifier:localizedTitle:unresolvedHandler:", v25, v26, v27);

      _Block_release(v27);
      swift_release(v35);
      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v28);

      objc_msgSend(v13, "setImage:", v29);
      objc_msgSend(v13, "setAvailability:", 1);
      objc_msgSend(v13, "setNavigationSide:", 1);
      objc_msgSend(v13, "setMenuSortOrder:", 27);
      objc_msgSend(v13, "setActionStyle:", 1);
      objc_msgSend(v13, "setRequiresFullyFormedItems:", 0);
      return v13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10035A240(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  BOOL v30;
  Swift::Int i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v3 = a1;
  v4 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_89;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_3:
  v5 = swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v5);
  v64 = v3;
  if (v4 || (v8 = isUniquelyReferenced_nonNull_bridgeObject, v9 = v3, (v8 & 1) == 0))
  {
    v9 = sub_1000818A0(v3);
    v64 = v9;
  }
  v63 = v3;
  v10 = v9 & 0xFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v11)
  {
    v3 = 0;
    v1 = v10 + 32;
    v12 = v10 + 24;
    while (1)
    {
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 8 * v3), v7);
      v9 = DOCNode.isFINode.getter(ObjectType);
      if ((v9 & 1) != 0)
      {
        if (v3 >= v11 - 1)
          goto LABEL_17;
        v15 = (_QWORD *)(v12 + 8 * v11--);
        while (1)
        {
          v16 = swift_getObjectType(*v15, v7);
          v9 = DOCNode.isFINode.getter(v16);
          if ((v9 & 1) == 0)
            break;
          --v11;
          --v15;
          if (v3 >= v11)
            goto LABEL_17;
        }
        v13 = *(_QWORD *)(v1 + 8 * v3);
        *(_QWORD *)(v1 + 8 * v3) = *v15;
        *v15 = v13;
      }
      if (++v3 >= v11)
        goto LABEL_17;
    }
  }
  v3 = 0;
LABEL_17:
  specialized Array._endMutation()(v9);
  v17 = (id)((unint64_t)v64 >> 62);
  if ((unint64_t)v64 >> 62)
    goto LABEL_95;
  v4 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4 >= v3)
    goto LABEL_19;
  while (2)
  {
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    if (v64 < 0)
      v57 = v64;
    else
      v57 = v64 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v64);
    v58 = _CocoaArrayWrapper.endIndex.getter(v57);
    result = swift_bridgeObjectRelease(v64);
    if (v58 < 0)
      goto LABEL_121;
    swift_bridgeObjectRetain(v64);
    v4 = _CocoaArrayWrapper.endIndex.getter(v57);
    swift_bridgeObjectRelease(v64);
    if (v4 < v3)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
LABEL_43:
    if (v3 && v2)
    {
      for (i = 0; i != v3; ++i)
      {
        sub_10006922C((uint64_t *)&unk_1006424B0);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    if (v17)
    {
      if (v64 < 0)
        v35 = v64;
      else
        v35 = v64 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v64);
      v32 = _CocoaArrayWrapper.subscript.getter(0, v3, v35);
      v33 = v36;
      v34 = v37;
      v39 = v38;
      swift_bridgeObjectRelease(v64);
      v3 = v39 >> 1;
      if (v34 != v3)
      {
LABEL_54:
        v62 = v32;
        swift_unknownObjectRetain(v32);
        v40 = FPActionDelete;
        v17 = (id)FPActionTrash;
        v4 = (uint64_t)&selRef_viewOptionsRoot;
        while (v34 < v3)
        {
          v2 = *(_QWORD *)(v33 + 8 * v34);
          if ((objc_msgSend((id)swift_unknownObjectRetain(v2), "canPerform:", v40) & 1) != 0)
          {
            swift_unknownObjectRelease(v2);
          }
          else
          {
            v41 = objc_msgSend((id)v2, "canPerform:", v17);
            swift_unknownObjectRelease(v2);
            if ((v41 & 1) == 0)
            {
              swift_unknownObjectRelease_n(v62, 2);
              goto LABEL_63;
            }
          }
          if (v3 == ++v34)
          {
            v32 = v62;
            swift_unknownObjectRelease(v62);
            goto LABEL_62;
          }
        }
        goto LABEL_87;
      }
    }
    else
    {
      v32 = v64 & 0xFFFFFFFFFFFFFF8;
      v33 = (v64 & 0xFFFFFFFFFFFFFF8) + 32;
      swift_bridgeObjectRetain(v64);
      v34 = 0;
      if (v3)
        goto LABEL_54;
    }
LABEL_62:
    swift_unknownObjectRelease(v32);
    if ((v1 & 1) != 0)
    {
LABEL_63:
      v42 = 0;
LABEL_117:
      swift_bridgeObjectRelease(v64);
      return v42;
    }
    v43 = swift_bridgeObjectRetain(v63);
    v4 = (uint64_t)sub_100122508(v43);
    swift_bridgeObjectRelease(v63);
    v63 = (unint64_t)v4 >> 62;
    if ((unint64_t)v4 >> 62)
      goto LABEL_111;
    v1 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v4, 2);
    if (!v1)
    {
LABEL_115:
      v42 = 1;
LABEL_116:
      swift_bridgeObjectRelease_n(v4, 3);
      goto LABEL_117;
    }
LABEL_66:
    v44 = v4 & 0xC000000000000001;
    v45 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v4 < 0)
      v45 = v4;
    v61 = v45;
    v2 = 4;
    while (1)
    {
      v46 = v2 - 4;
      if (v44)
      {
        v47 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v2 - 4, v4);
        v3 = v2 - 3;
        if (__OFADD__(v46, 1))
          goto LABEL_88;
      }
      else
      {
        v47 = *(void **)(v4 + 8 * v2);
        swift_unknownObjectRetain(v47);
        v3 = v2 - 3;
        if (__OFADD__(v46, 1))
          goto LABEL_88;
      }
      v48 = objc_msgSend(v47, "isSharedByCurrentUser", v60);
      if (v63)
      {
        swift_bridgeObjectRetain(v4);
        if (!_CocoaArrayWrapper.endIndex.getter(v61))
        {
LABEL_85:
          swift_unknownObjectRelease(v47);
          swift_bridgeObjectRelease(v4);
          v42 = 0;
          goto LABEL_116;
        }
      }
      else
      {
        v49 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v4);
        if (!v49)
          goto LABEL_85;
      }
      if (v44)
      {
        v50 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
        goto LABEL_82;
      }
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      v50 = *(void **)(v4 + 32);
      swift_unknownObjectRetain(v50);
LABEL_82:
      swift_bridgeObjectRelease(v4);
      v17 = objc_msgSend(v50, "isSharedByCurrentUser");
      swift_unknownObjectRelease(v47);
      swift_unknownObjectRelease(v50);
      if (((v48 ^ v17) & 1) == 0)
      {
        ++v2;
        if (v3 != v1)
          continue;
      }
      v42 = v48 ^ v17 ^ 1;
      goto LABEL_116;
    }
    __break(1u);
LABEL_95:
    if (v64 < 0)
      v53 = v64;
    else
      v53 = v64 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v64);
    v4 = _CocoaArrayWrapper.endIndex.getter(v53);
    result = swift_bridgeObjectRelease(v64);
    if (v4 >= v3)
    {
      swift_bridgeObjectRetain(v64);
      v55 = _CocoaArrayWrapper.endIndex.getter(v53);
      result = swift_bridgeObjectRelease(v64);
      if (v55 < v3)
        goto LABEL_120;
      swift_bridgeObjectRetain(v64);
      v56 = _CocoaArrayWrapper.endIndex.getter(v53);
      swift_bridgeObjectRelease(v64);
      if (v56 < v4)
      {
        __break(1u);
        continue;
      }
LABEL_19:
      if (v4 < 0)
        goto LABEL_103;
      v2 = v64 & 0xC000000000000001;
      if ((v64 & 0xC000000000000001) != 0 && v3 != v4)
      {
        if (v3 < (unint64_t)v4)
        {
          v18 = v3;
          do
          {
            sub_10006922C((uint64_t *)&unk_1006424B0);
            _ArrayBuffer._typeCheckSlowPath(_:)(v18++);
            LOBYTE(v1) = v18;
          }
          while (v4 != v18);
          goto LABEL_25;
        }
LABEL_110:
        __break(1u);
LABEL_111:
        if (v4 < 0)
          v59 = v4;
        else
          v59 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v4, 2);
        v1 = _CocoaArrayWrapper.endIndex.getter(v59);
        if (!v1)
          goto LABEL_115;
        goto LABEL_66;
      }
LABEL_25:
      if (v17)
      {
        if (v64 < 0)
          v22 = v64;
        else
          v22 = v64 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v64);
        v19 = _CocoaArrayWrapper.subscript.getter(v3, v4, v22);
        v20 = v23;
        v4 = v24;
        v21 = v25;
        swift_bridgeObjectRelease(v64);
      }
      else
      {
        v19 = v64 & 0xFFFFFFFFFFFFFF8;
        v20 = (v64 & 0xFFFFFFFFFFFFFF8) + 32;
        v21 = (2 * v4) | 1;
        swift_bridgeObjectRetain(v64);
        v4 = v3;
      }
      v26 = v21 >> 1;
      if (v4 == v21 >> 1)
      {
        LOBYTE(v1) = 0;
LABEL_41:
        swift_unknownObjectRelease(v19);
        if (!v17)
        {
          v4 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v4 < v3)
            goto LABEL_109;
          goto LABEL_43;
        }
        goto LABEL_104;
      }
      v60 = v19;
      swift_unknownObjectRetain(v19);
      v2 = v26 - 1;
      while (v4 < v26)
      {
        v27 = *(_QWORD *)(v20 + 8 * v4);
        v28 = objc_opt_self(FINode);
        v29 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v27, v28, 0, 0, 0), "nodePermissions:", 6291456);
        LOBYTE(v1) = v29 == 0;
        if (v29)
          v30 = v2 == v4;
        else
          v30 = 1;
        ++v4;
        if (v30)
        {
          swift_unknownObjectRelease(v19);
          v2 = v64 & 0xC000000000000001;
          goto LABEL_41;
        }
      }
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      if (v3 < 0)
        v51 = v3;
      else
        v51 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v52 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease(v3);
      if (!v52)
        return 0;
      goto LABEL_3;
    }
    break;
  }
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
  return result;
}

uint64_t sub_10035A920(uint64_t a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];

  v4 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
    goto LABEL_46;
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_42;
LABEL_3:
  if (a2)
  {
    if (v4)
    {
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      swift_unknownObjectRetain(a2);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      if (!v5)
        goto LABEL_22;
    }
    else
    {
      v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      swift_unknownObjectRetain(a2);
      if (!v5)
      {
LABEL_22:
        swift_bridgeObjectRelease(a1);
        if ((sub_1003598CC(FPActionCopy, a1) & 1) == 0)
          goto LABEL_41;
        v12 = (void *)FPActionImportHere;
        v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v13, v24);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = a2;
        v23 = inited;
        specialized Array._endMutation()(inited);
        swift_unknownObjectRetain(a2);
        v15 = sub_1003598CC(v12, v23);
        swift_bridgeObjectRelease(v23);
        swift_unknownObjectRelease(a2);
        return v15 & 1;
      }
    }
    v8 = 4;
    while (1)
    {
      v9 = v8 - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a1);
        v10 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_44;
      }
      else
      {
        v4 = *(void **)(a1 + 8 * v8);
        swift_unknownObjectRetain(v4);
        v10 = v8 - 3;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
      }
      v11 = objc_msgSend(v4, "isAppContainer");
      swift_unknownObjectRelease(v4);
      if ((v11 & 1) != 0)
      {
        swift_unknownObjectRelease(a2);
        goto LABEL_25;
      }
      ++v8;
      if (v10 == v5)
        goto LABEL_22;
    }
  }
  if (v4)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v6)
    {
LABEL_39:
      swift_bridgeObjectRelease(a1);
      v15 = 1;
      return v15 & 1;
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v6)
      goto LABEL_39;
  }
  v17 = 4;
  while (1)
  {
    v4 = (void *)(v17 - 4);
    if ((a1 & 0xC000000000000001) != 0)
    {
      a2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a1);
      v18 = v17 - 3;
      if (__OFADD__(v4, 1))
      {
LABEL_45:
        __break(1u);
LABEL_46:
        if (a1 < 0)
          v21 = a1;
        else
          v21 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v22 = _CocoaArrayWrapper.endIndex.getter(v21);
        swift_bridgeObjectRelease(a1);
        if (v22 < 1)
          goto LABEL_42;
        goto LABEL_3;
      }
    }
    else
    {
      a2 = *(void **)(a1 + 8 * v17);
      swift_unknownObjectRetain(a2);
      v18 = v17 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_45;
    }
    if (!objc_msgSend(a2, "isWritable"))
      break;
    v19 = objc_msgSend(a2, "isAppContainer");
    swift_unknownObjectRelease(a2);
    if ((v19 & 1) != 0)
    {
LABEL_25:
      swift_bridgeObjectRelease(a1);
      goto LABEL_42;
    }
    ++v17;
    if (v18 == v6)
      goto LABEL_39;
  }
  swift_bridgeObjectRelease(a1);
LABEL_41:
  swift_unknownObjectRelease(a2);
LABEL_42:
  v15 = 0;
  return v15 & 1;
}

_QWORD *sub_10035AC04(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  Class isa;
  unsigned __int16 v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  id v42;
  id v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __int16 v50;
  _QWORD *v51;
  id v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  int64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  Class v68;
  unsigned __int16 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  id v79;
  char v80;
  unint64_t v81;
  unint64_t v82;
  int64_t v83;
  unint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  id v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int64_t v96;
  unint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  id v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  int64_t v104;
  unint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  id v108;
  char v109;
  unint64_t v110;
  unint64_t v111;
  int64_t v112;
  unint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  id v116;
  char v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  char v121;
  char v122;
  char v123[56];
  char v124[56];
  char v125[56];

  v8 = DOCDocumentSourceIdentifierTrashedItems;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n(v11, 2);
  }
  else
  {
    v15 = v13;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);
    if ((v16 & 1) == 0)
    {
      v17 = sub_10006922C(&qword_10064FE20);
      inited = swift_initStackObject(v17, v125);
      *(_OWORD *)(inited + 16) = xmmword_1004D9880;
      v19 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
      *(_QWORD *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
      v20 = inited + 32;
      v21 = (void *)DOCDocumentSourceIdentifierTaggedItems;
      v22 = (void *)DOCDocumentSourceIdentifierSearch;
      *(_QWORD *)(inited + 40) = DOCDocumentSourceIdentifierTaggedItems;
      *(_QWORD *)(inited + 48) = v22;
      v23 = v19;
      v24 = v21;
      v25 = v22;
      v26 = sub_1000DFACC(a4, inited);
      swift_setDeallocating(inited);
      v27 = *(_QWORD *)(inited + 16);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy(v20, v27, v28);
      if ((v26 & 1) != 0)
      {
        v29 = sub_100351F3C();
        if ((unint64_t)a1 >> 62)
        {
          if (a1 < 0)
            v71 = a1;
          else
            v71 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v72 = _CocoaArrayWrapper.endIndex.getter(v71);
          swift_bridgeObjectRelease(a1);
          if (v72 >= 1)
            goto LABEL_9;
        }
        else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
        {
LABEL_9:
          v30 = sub_100351F3C();
          v31 = objc_msgSend(v30, "filteringPredicate");

          v32 = sub_10006922C((uint64_t *)&unk_10064FDE0);
          v33 = swift_initStackObject(v32, v123);
          *(_OWORD *)(v33 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v33 + 32) = 0x7365646F4E636F64;
          *(_QWORD *)(v33 + 40) = 0xE800000000000000;
          *(_QWORD *)(v33 + 48) = a1;
          swift_bridgeObjectRetain(a1);
          v34 = sub_1003F0958(v33);
          sub_10006922C((uint64_t *)&unk_100643CB0);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v34);
          v36 = (unsigned __int16)objc_msgSend(v31, "evaluateWithObject:", isa);

LABEL_44:
          v38 = sub_1001531FC(0, 1, 1, _swiftEmptyArrayStorage);
          v74 = v38[2];
          v73 = v38[3];
          v75 = v73 >> 1;
          v76 = v74 + 1;
          if (v73 >> 1 <= v74)
          {
            v38 = sub_1001531FC((_QWORD *)(v73 > 1), v74 + 1, 1, v38);
            v73 = v38[3];
            v75 = v73 >> 1;
          }
          v38[2] = v76;
          v77 = &v38[2 * v74];
          v77[4] = v29;
          *((_WORD *)v77 + 20) = v36 | 0x100;
          if (v75 < (uint64_t)(v74 + 2))
            v38 = sub_1001531FC((_QWORD *)(v73 > 1), v74 + 2, 1, v38);
          v38[2] = v74 + 2;
          v78 = &v38[2 * v76];
          v78[4] = 0;
          *((_WORD *)v78 + 20) = 0;
          v79 = sub_100121418(1);
          v80 = sub_1003598CC(FPActionReparent, a1);
          v82 = v38[2];
          v81 = v38[3];
          v83 = v81 >> 1;
          v84 = v82 + 1;
          if (v81 >> 1 <= v82)
          {
            v38 = sub_1001531FC((_QWORD *)(v81 > 1), v82 + 1, 1, v38);
            v81 = v38[3];
            v83 = v81 >> 1;
          }
          v38[2] = v84;
          v85 = &v38[2 * v82];
          v85[4] = v79;
          *((_WORD *)v85 + 20) = v80 & 1 | 0x100;
          if (v83 < (uint64_t)(v82 + 2))
            v38 = sub_1001531FC((_QWORD *)(v81 > 1), v82 + 2, 1, v38);
          v38[2] = v82 + 2;
          v86 = &v38[2 * v84];
          v86[4] = 0;
          *((_WORD *)v86 + 20) = 0;
          v87 = sub_10012224C();
          v88 = sub_10035A240(a1);
          v90 = v38[2];
          v89 = v38[3];
          if (v90 >= v89 >> 1)
            v38 = sub_1001531FC((_QWORD *)(v89 > 1), v90 + 1, 1, v38);
          v38[2] = v90 + 1;
          v91 = &v38[2 * v90];
          v91[4] = v87;
          *((_WORD *)v91 + 20) = v88 & 1 | 0x100;
          return v38;
        }
        v36 = 0;
        goto LABEL_44;
      }
      v61 = a3;
      if (!a3)
        v61 = (void *)sub_100123758(a1);
      swift_unknownObjectRetain(a3);
      v62 = sub_100351F3C();
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v92 = a1;
        else
          v92 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v93 = _CocoaArrayWrapper.endIndex.getter(v92);
        swift_bridgeObjectRelease(a1);
        if (v93 >= 1)
          goto LABEL_34;
      }
      else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      {
LABEL_34:
        v63 = sub_100351F3C();
        v64 = objc_msgSend(v63, "filteringPredicate");

        v65 = sub_10006922C((uint64_t *)&unk_10064FDE0);
        v66 = swift_initStackObject(v65, v124);
        *(_OWORD *)(v66 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v66 + 32) = 0x7365646F4E636F64;
        *(_QWORD *)(v66 + 40) = 0xE800000000000000;
        *(_QWORD *)(v66 + 48) = a1;
        swift_bridgeObjectRetain(a1);
        v67 = sub_1003F0958(v66);
        sub_10006922C((uint64_t *)&unk_100643CB0);
        v68 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v67);
        v69 = (unsigned __int16)objc_msgSend(v64, "evaluateWithObject:", v68);

LABEL_60:
        v38 = sub_1001531FC(0, 1, 1, _swiftEmptyArrayStorage);
        v95 = v38[2];
        v94 = v38[3];
        v96 = v94 >> 1;
        v97 = v95 + 1;
        if (v94 >> 1 <= v95)
        {
          v38 = sub_1001531FC((_QWORD *)(v94 > 1), v95 + 1, 1, v38);
          v94 = v38[3];
          v96 = v94 >> 1;
        }
        v38[2] = v97;
        v98 = &v38[2 * v95];
        v98[4] = v62;
        *((_WORD *)v98 + 20) = v69 | 0x100;
        if (v96 < (uint64_t)(v95 + 2))
          v38 = sub_1001531FC((_QWORD *)(v94 > 1), v95 + 2, 1, v38);
        v38[2] = v95 + 2;
        v99 = &v38[2 * v97];
        v99[4] = 0;
        *((_WORD *)v99 + 20) = 0;
        v100 = sub_100123978((uint64_t)v61);
        v101 = sub_10035A920(a1, v61);
        v103 = v38[2];
        v102 = v38[3];
        v104 = v102 >> 1;
        v105 = v103 + 1;
        if (v102 >> 1 <= v103)
        {
          v121 = v101;
          v38 = sub_1001531FC((_QWORD *)(v102 > 1), v103 + 1, 1, v38);
          v101 = v121;
          v102 = v38[3];
          v104 = v102 >> 1;
        }
        v38[2] = v105;
        v106 = &v38[2 * v103];
        v106[4] = v100;
        *((_WORD *)v106 + 20) = v101 & 1 | 0x100;
        if (v104 < (uint64_t)(v103 + 2))
          v38 = sub_1001531FC((_QWORD *)(v102 > 1), v103 + 2, 1, v38);
        v38[2] = v103 + 2;
        v107 = &v38[2 * v105];
        v107[4] = 0;
        *((_WORD *)v107 + 20) = 0;
        v108 = sub_100121418(1);
        v109 = sub_1003598CC(FPActionReparent, a1);
        v111 = v38[2];
        v110 = v38[3];
        v112 = v110 >> 1;
        v113 = v111 + 1;
        if (v110 >> 1 <= v111)
        {
          v122 = v109;
          v38 = sub_1001531FC((_QWORD *)(v110 > 1), v111 + 1, 1, v38);
          v109 = v122;
          v110 = v38[3];
          v112 = v110 >> 1;
        }
        v38[2] = v113;
        v114 = &v38[2 * v111];
        v114[4] = v108;
        *((_WORD *)v114 + 20) = v109 & 1 | 0x100;
        if (v112 < (uint64_t)(v111 + 2))
          v38 = sub_1001531FC((_QWORD *)(v110 > 1), v111 + 2, 1, v38);
        v38[2] = v111 + 2;
        v115 = &v38[2 * v113];
        v115[4] = 0;
        *((_WORD *)v115 + 20) = 0;
        v116 = sub_10012224C();
        v117 = sub_10035A240(a1);
        v119 = v38[2];
        v118 = v38[3];
        if (v119 >= v118 >> 1)
          v38 = sub_1001531FC((_QWORD *)(v118 > 1), v119 + 1, 1, v38);
        v38[2] = v119 + 1;
        v120 = &v38[2 * v119];
        v120[4] = v116;
        *((_WORD *)v120 + 20) = v117 & 1 | 0x100;
        swift_unknownObjectRelease(v61);
        return v38;
      }
      v69 = 0;
      goto LABEL_60;
    }
  }
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v70 = a1;
    else
      v70 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v37 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v37 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v37)
    a1 = a2;
  v38 = sub_1001531FC(0, 1, 1, _swiftEmptyArrayStorage);
  v40 = v38[2];
  v39 = v38[3];
  if (v40 >= v39 >> 1)
    v38 = sub_1001531FC((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v38[2] = v40 + 1;
  v41 = &v38[2 * v40];
  v41[4] = 0;
  *((_WORD *)v41 + 20) = 0;
  if (v37)
    v42 = sub_100120F1C();
  else
    v42 = sub_1001220A8();
  v43 = v42;
  v44 = sub_1003598CC(FPActionUntrash, a1);
  v46 = v38[2];
  v45 = v38[3];
  v47 = v45 >> 1;
  v48 = v46 + 1;
  if (v45 >> 1 <= v46)
  {
    v38 = sub_1001531FC((_QWORD *)(v45 > 1), v46 + 1, 1, v38);
    v45 = v38[3];
    v47 = v45 >> 1;
  }
  v38[2] = v48;
  v49 = &v38[2 * v46];
  v49[4] = v43;
  *((_WORD *)v49 + 20) = v44 & 1 | ((v37 != 0) << 8);
  if (v47 < (uint64_t)(v46 + 2))
    v38 = sub_1001531FC((_QWORD *)(v45 > 1), v46 + 2, 1, v38);
  v50 = (v37 != 0) << 8;
  v38[2] = v46 + 2;
  v51 = &v38[2 * v48];
  v51[4] = 0;
  *((_WORD *)v51 + 20) = 0;
  v52 = sub_100359DBC(v37 != 0);
  v53 = sub_1003598CC(FPActionDelete, a1);
  v55 = v38[2];
  v54 = v38[3];
  v56 = v54 >> 1;
  v57 = v55 + 1;
  if (v54 >> 1 <= v55)
  {
    v38 = sub_1001531FC((_QWORD *)(v54 > 1), v55 + 1, 1, v38);
    v54 = v38[3];
    v56 = v54 >> 1;
  }
  v38[2] = v57;
  v58 = &v38[2 * v55];
  v58[4] = v52;
  *((_WORD *)v58 + 20) = v50 | v53 & 1;
  if (v56 < (uint64_t)(v55 + 2))
    v38 = sub_1001531FC((_QWORD *)(v54 > 1), v55 + 2, 1, v38);
  v38[2] = v55 + 2;
  v59 = &v38[2 * v57];
  v59[4] = 0;
  *((_WORD *)v59 + 20) = 0;
  return v38;
}

uint64_t sub_10035B620(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = result;
  v2 = (unint64_t)result >> 62;
  if ((unint64_t)result >> 62)
  {
    if (result < 0)
      v46 = result;
    else
      v46 = result & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(result);
    v3 = _CocoaArrayWrapper.endIndex.getter(v46);
    result = swift_bridgeObjectRelease(v1);
  }
  else
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
    return (uint64_t)&_swiftEmptySetSingleton;
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v1);
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_55;
    }
    v4 = *(_QWORD *)(v1 + 32);
    swift_unknownObjectRetain(v4);
  }
  ObjectType = swift_getObjectType(v4, v5);
  if ((DOCNode.nodeType.getter(ObjectType) & 1) != 0)
  {
    if (v2)
    {
      if (v1 < 0)
        v33 = v1;
      else
        v33 = v1 & 0xFFFFFFFFFFFFFF8;
      v34 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      swift_bridgeObjectRetain(v1);
      v35 = _bridgeCocoaArray<A>(_:)(v33, v34);
      swift_bridgeObjectRelease(v1);
      v1 = v35;
    }
    else
    {
      v16 = v1 & 0xFFFFFFFFFFFFFF8;
      v17 = swift_bridgeObjectRetain(v1);
      v18 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
      v19 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      if (!swift_dynamicCastMetatype(v18, v19))
      {
        v20 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v20)
        {
          v21 = (uint64_t *)(v16 + 32);
          while (1)
          {
            v22 = *v21;
            v23 = objc_opt_self(FINode);
            if (!swift_dynamicCastObjCClass(v22, v23))
              break;
            ++v21;
            if (!--v20)
              goto LABEL_31;
          }
          v1 = v16 | 1;
          if ((v16 | 1uLL) >> 62)
          {
LABEL_42:
            if (v1 < 0)
              v45 = v1;
            else
              v45 = v1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v1);
            result = _CocoaArrayWrapper.endIndex.getter(v45);
            v36 = result;
            if (!result)
              goto LABEL_46;
LABEL_33:
            v47 = v4;
            if (v36 >= 1)
            {
              v37 = 0;
              do
              {
                if ((v1 & 0xC000000000000001) != 0)
                  v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v1);
                else
                  v38 = *(id *)(v1 + 8 * v37 + 32);
                v39 = v38;
                ++v37;
                v40 = objc_msgSend(v38, "eligibleActions", v47);
                type metadata accessor for FPAction(0);
                v42 = v41;
                v43 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
                v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v40, v42, v43);

                sub_10032D8CC(v44);
              }
              while (v36 != v37);
              swift_unknownObjectRelease(v47);
              swift_bridgeObjectRelease(v1);
              goto LABEL_47;
            }
LABEL_55:
            __break(1u);
            return result;
          }
LABEL_32:
          v36 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
          result = swift_bridgeObjectRetain(v1);
          if (!v36)
          {
LABEL_46:
            swift_unknownObjectRelease(v4);
            swift_bridgeObjectRelease(v1);
LABEL_47:
            swift_bridgeObjectRelease(v1);
            return (uint64_t)&_swiftEmptySetSingleton;
          }
          goto LABEL_33;
        }
      }
    }
LABEL_31:
    if ((unint64_t)v1 >> 62)
      goto LABEL_42;
    goto LABEL_32;
  }
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  if (v2)
  {
    if (v1 < 0)
      v24 = v1;
    else
      v24 = v1 & 0xFFFFFFFFFFFFFF8;
    v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_bridgeObjectRetain(v1);
    v26 = _bridgeCocoaArray<A>(_:)(v24, v25);
    swift_bridgeObjectRelease(v1);
    v1 = v26;
  }
  else
  {
    v8 = v1 & 0xFFFFFFFFFFFFFF8;
    v9 = swift_bridgeObjectRetain(v1);
    v10 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    if (!swift_dynamicCastMetatype(v10, v11))
    {
      v12 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
        v13 = (uint64_t *)(v8 + 32);
        while (1)
        {
          v14 = *v13;
          v15 = objc_opt_self(FPItem);
          if (!swift_dynamicCastObjCClass(v14, v15))
            break;
          ++v13;
          if (!--v12)
            goto LABEL_26;
        }
        v1 = v8 | 1;
      }
    }
  }
LABEL_26:
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  v28 = objc_msgSend(v7, "eligibleActionsForItems:", isa);

  type metadata accessor for FPAction(0);
  v30 = v29;
  v31 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v32 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v30, v31);
  swift_unknownObjectRelease(v4);

  return v32;
}

uint64_t sub_10035BABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v5)
  {
    v22 = v3;
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_18;
LABEL_11:
      v3 = v5;
      v10 = objc_msgSend(v8, "providerDomainID", v22);
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
      if (v11 == v14 && v13 == v15)
      {
        swift_unknownObjectRelease(v8);

        swift_bridgeObjectRelease_n(v13, 2);
      }
      else
      {
        v17 = v15;
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
        swift_unknownObjectRelease(v8);

        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v17);
        if ((v18 & 1) == 0)
        {
          v19 = 0;
          goto LABEL_24;
        }
      }
      ++v6;
      v5 = v3;
      if (v9 == v3)
      {
        v19 = 1;
        goto LABEL_24;
      }
    }
    v8 = *(void **)(a1 + 8 * v6);
    swift_unknownObjectRetain(v8);
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_18:
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  v19 = 1;
LABEL_24:
  swift_bridgeObjectRelease(a1);
  return v19;
}

_QWORD *sub_10035BC68(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v35;
  _QWORD *v36;

  v8 = v7;
  v13 = a1;
  v36 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_18;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
    while (1)
    {
      v15 = 0;
      v31 = v13 & 0xFFFFFFFFFFFFFF8;
      v32 = v13 & 0xC000000000000001;
      v30 = v14;
      v29 = a7;
      while (v32)
      {
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
LABEL_9:
        v17 = v16;
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_17;
        v35 = v16;
        v19 = sub_10034FB44(&v35, a2, a3, a4, a5, a6, (unint64_t)a7);
        if (v8)
        {
          swift_bridgeObjectRelease(v13);

          swift_release(v36);
          return a7;
        }
        if ((v19 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
          v20 = a4;
          v21 = v13;
          v22 = a5;
          v23 = a6;
          v24 = v36[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
          v25 = v24;
          a6 = v23;
          a5 = v22;
          v13 = v21;
          a4 = v20;
          v8 = 0;
          v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v17);
          specialized ContiguousArray._endMutation()(v26);
          a7 = v29;
        }
        else
        {

        }
        ++v15;
        if (v18 == v30)
        {
          a7 = v36;
          goto LABEL_23;
        }
      }
      if (v15 < *(_QWORD *)(v31 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v13 < 0)
        v27 = v13;
      else
        v27 = v13 & 0xFFFFFFFFFFFFFF8;
      v14 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (!v14)
        goto LABEL_22;
    }
    v16 = *(id *)(v13 + 8 * v15 + 32);
    goto LABEL_9;
  }
LABEL_22:
  a7 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v13);
  return a7;
}

uint64_t sub_10035BE3C(void **__src, void **a2, unint64_t a3, void **__dst, uint64_t a5, uint64_t a6)
{
  uint64_t (*v6)(void);
  void **v7;
  void **v8;
  void **v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  void **v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char v25;
  void **v26;
  void **v27;
  id v28;
  id v29;
  void **v30;
  void **v31;
  void **v32;
  void *v33;
  void **v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  char v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t result;
  id v50;
  void **v51;
  void **v52;
  uint64_t (*v53)(void);
  void **v55;
  void **v56;
  unint64_t v58;
  void **v59;
  void **v60;
  void **v61;

  v6 = (uint64_t (*)(void))a5;
  v7 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = (char *)a2 - (char *)__src;
  v11 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v11 = (char *)a2 - (char *)__src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 < -7)
      goto LABEL_50;
    if (__dst != a2 || &a2[v15] <= __dst)
      memmove(__dst, a2, 8 * v15);
    v30 = &v7[v15];
    v59 = v30;
    v61 = v8;
    if (v9 >= v8 || v13 < 8)
    {
LABEL_49:
      sub_100464FEC(&v61, &v60, &v59);
      return 1;
    }
    v31 = (void **)(a3 - 8);
    v32 = v8;
    v52 = v7;
    v53 = v6;
    v51 = v9;
    while (1)
    {
      v56 = v31 + 1;
      v58 = (unint64_t)v30;
      v34 = v30 - 1;
      v33 = *(v30 - 1);
      v35 = *--v32;
      v36 = swift_allocObject(&unk_1005E02D0, 32, 7);
      *(_QWORD *)(v36 + 16) = v33;
      *(_QWORD *)(v36 + 24) = v35;
      v37 = v33;
      v38 = v35;
      v39 = v38;
      if (v6)
      {
        sub_10008BA00((uint64_t)v6, a6);
        v40 = v39;
        v41 = v37;
        v42 = v6();
        v43 = (uint64_t)v6;
        v44 = v42;
        sub_100087534(v43, a6);

        swift_release(v36);
        if ((v44 & 1) != 0)
          goto LABEL_35;
      }
      else
      {
        v46 = v38;
        v47 = v37;
        v50 = objc_msgSend(v47, "menuSortOrder");
        v48 = objc_msgSend(v46, "menuSortOrder");

        swift_release(v36);
        if (v50 < v48)
        {
LABEL_35:
          v30 = (void **)v58;
          v45 = (unint64_t)v51;
          if (v56 != v8 || v31 >= v8)
            *v31 = *v32;
          v61 = v32;
          goto LABEL_46;
        }
      }
      v59 = v34;
      v45 = (unint64_t)v51;
      if ((unint64_t)v56 >= v58 && (unint64_t)v31 < v58)
      {
        v6 = v53;
        if (v56 != (void **)v58)
          *v31 = *v34;
        v32 = v8;
        v30 = v34;
        goto LABEL_47;
      }
      *v31 = *v34;
      v32 = v8;
      v30 = v34;
LABEL_46:
      v6 = v53;
LABEL_47:
      if ((unint64_t)v32 > v45)
      {
        --v31;
        v8 = v32;
        if (v30 > v52)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (v10 >= -7)
  {
    if (__dst != __src || &__src[v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v55 = &v7[v12];
    v59 = v55;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      while (1)
      {
        v16 = v9;
        v17 = *v8;
        v18 = v7;
        v19 = *v7;
        v20 = swift_allocObject(&unk_1005E02F8, 32, 7);
        *(_QWORD *)(v20 + 16) = v17;
        *(_QWORD *)(v20 + 24) = v19;
        v21 = v17;
        v22 = v19;
        v23 = v21;
        v24 = v23;
        if (v6)
        {
          sub_10008BA00((uint64_t)v6, a6);
          v25 = ((uint64_t (*)(void *, id, uint64_t (*)(), uint64_t))v6)(v24, v22, sub_10035ED10, v20);
          sub_100087534((uint64_t)v6, a6);

          swift_release(v20);
          if ((v25 & 1) == 0)
            goto LABEL_20;
        }
        else
        {
          v28 = objc_msgSend(v23, "menuSortOrder");
          v29 = objc_msgSend(v22, "menuSortOrder");

          swift_release(v20);
          if (v28 >= v29)
          {
LABEL_20:
            v27 = v16;
            if (v16 != v18)
              *v16 = *v18;
            v7 = v18 + 1;
            v60 = v18 + 1;
            v26 = v8;
            goto LABEL_23;
          }
        }
        v26 = v8 + 1;
        v27 = v16;
        if (v16 < v8 || v16 >= v26 || v16 != v8)
          *v16 = *v8;
        v7 = v18;
LABEL_23:
        v9 = v27 + 1;
        v61 = v9;
        if (v7 < v55)
        {
          v8 = v26;
          if ((unint64_t)v26 < a3)
            continue;
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  sub_100087534(a5, a6);
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035C2B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t *v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  id v28;
  id v29;
  id v30;
  id v31;
  BOOL v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  int v46;
  Swift::Int v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  Swift::Int v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  int v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  char v76;
  id v77;
  id v78;
  void *v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void **v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void **v134;
  void **v135;
  void **v136;
  void **v137;
  void **v138;
  void **v139;
  void *v140;
  void *v141;
  id v142;
  id v143;
  void *v144;
  id v145;
  char v146;
  void **v147;
  id v148;
  id v149;
  id v150;
  BOOL v151;
  void **v152;
  void *v153;
  void **v154;
  void *v155;
  void **v156;
  id v157;
  id v158;
  void *v159;
  id v160;
  char v161;
  void **v162;
  id v163;
  id v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  char *v169;
  uint64_t result;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void **v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t *v180;
  Swift::Int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  Swift::Int v185;
  char *v186;
  char *v187;
  char *v188;
  char *__dst;
  char *v190;
  unint64_t v191;
  int64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void **v197;
  void **v198;
  uint64_t v199;
  uint64_t v200;
  Swift::Int v201;
  void **v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  void **v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void **v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t (*v213)(void);
  uint64_t v214;

  v5 = (_QWORD *)a3;
  v6 = a2;
  v7 = a1;
  v8 = a1[1];
  sub_10008BA00(a2, a3);
  sub_10008BA00(v6, (uint64_t)v5);
  sub_10008BA00(v6, (uint64_t)v5);
  v9 = _minimumMergeRunLength(_:)(v8);
  v199 = (uint64_t)v5;
  v213 = (uint64_t (*)(void))v6;
  v185 = v8;
  if (v9 >= v8)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v8 >= 2)
      {
        v16 = *v7;
        v4 = v6;
        sub_10008BA00(v6, (uint64_t)v5);
        v17 = -1;
        v18 = 1;
        v6 = (unint64_t)&unk_1005E01E0;
        v19 = v16;
        do
        {
          v203 = v18;
          v208 = v17;
          v20 = *(void **)(v16 + 8 * v18);
          v200 = v19;
          do
          {
            v21 = *(void **)v19;
            v5 = (_QWORD *)swift_allocObject(&unk_1005E01E0, 32, 7);
            v5[2] = v20;
            v5[3] = v21;
            v22 = v20;
            v23 = v21;
            v24 = v23;
            if (v4)
            {
              sub_10008BA00(v4, v199);
              v25 = v24;
              v26 = v22;
              v27 = v213();
              v4 = (uint64_t)v213;
              sub_100087534((uint64_t)v213, v199);

              swift_release(v5);
              if ((v27 & 1) == 0)
                break;
            }
            else
            {
              v28 = v23;
              v29 = v22;
              v30 = objc_msgSend(v29, "menuSortOrder");
              v31 = objc_msgSend(v28, "menuSortOrder");

              swift_release(v5);
              v32 = v30 >= v31;
              v4 = (uint64_t)v213;
              if (v32)
                break;
            }
            if (!v16)
              goto LABEL_219;
            v33 = *(void **)v19;
            v20 = *(void **)(v19 + 8);
            *(_QWORD *)v19 = v20;
            *(_QWORD *)(v19 + 8) = v33;
            v19 -= 8;
            v32 = __CFADD__(v17++, 1);
          }
          while (!v32);
          v18 = v203 + 1;
          v19 = v200 + 8;
          v17 = v208 - 1;
        }
        while (v203 + 1 != v185);
        v6 = v4;
        v5 = (_QWORD *)v199;
        sub_100087534(v4, v199);
      }
      sub_100087534(v6, (uint64_t)v5);
      sub_100087534(v6, (uint64_t)v5);
      return sub_100087534(v6, (uint64_t)v5);
    }
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    sub_100087534((uint64_t)v213, (uint64_t)v5);
    sub_100087534((uint64_t)v213, (uint64_t)v5);
    sub_100087534((uint64_t)v213, (uint64_t)v5);
    __break(1u);
LABEL_221:
    sub_100087534(v4, (uint64_t)v5);
    sub_100087534(v4, (uint64_t)v5);
    sub_100087534(v4, (uint64_t)v5);
    __break(1u);
LABEL_222:
    sub_100087534((uint64_t)v213, v199);
    sub_100087534((uint64_t)v213, v199);
    sub_100087534((uint64_t)v213, v199);
    __break(1u);
    goto LABEL_223;
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_224;
  v11 = (uint64_t (*)(void))v6;
  v181 = v9;
  v180 = v7;
  if (v8 < 2)
  {
    v34 = (char *)_swiftEmptyArrayStorage;
    v214 = (uint64_t)_swiftEmptyArrayStorage;
    v197 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      v37 = _swiftEmptyArrayStorage[2];
LABEL_179:
      if (v37 < 2)
      {
LABEL_190:
        v176 = swift_bridgeObjectRelease(v34);
        *(_QWORD *)((v214 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()(v176);
        swift_bridgeObjectRelease(v214);
        v172 = v199;
        sub_100087534((uint64_t)v11, v199);
        sub_100087534((uint64_t)v11, v199);
        v177 = (uint64_t)v11;
        return sub_100087534(v177, v172);
      }
      v171 = *v180;
      v207 = *v180;
      v172 = v199;
      while (v37 >= 2)
      {
        if (!v171)
          goto LABEL_222;
        v212 = v37 - 2;
        v4 = *(_QWORD *)&v34[16 * v37];
        v173 = *(_QWORD *)&v34[16 * v37 + 24];
        v6 = v171 + 8 * v4;
        v174 = (void **)(v171 + 8 * *(_QWORD *)&v34[16 * v37 + 16]);
        v5 = (_QWORD *)(v171 + 8 * v173);
        sub_10008BA00((uint64_t)v213, v199);
        sub_10035BE3C((void **)v6, v174, (unint64_t)v5, v197, (uint64_t)v213, v199);
        if (v3)
        {
          sub_100087534((uint64_t)v213, v199);
          v178 = swift_bridgeObjectRelease(v34);
          *(_QWORD *)((v214 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()(v178);
          swift_bridgeObjectRelease(v214);
          sub_100087534((uint64_t)v213, v199);
          sub_100087534((uint64_t)v213, v199);
          v177 = (uint64_t)v213;
          return sub_100087534(v177, v172);
        }
        sub_100087534((uint64_t)v213, v199);
        if (v173 < v4)
          goto LABEL_211;
        if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
          v34 = sub_10046564C((uint64_t)v34);
        if (v212 >= *((_QWORD *)v34 + 2))
          goto LABEL_212;
        v175 = (uint64_t *)&v34[16 * v212 + 32];
        *v175 = v4;
        v175[1] = v173;
        v6 = *((_QWORD *)v34 + 2);
        if (v37 > v6)
          goto LABEL_213;
        memmove(&v34[16 * v37 + 16], &v34[16 * v37 + 32], 16 * (v6 - v37));
        *((_QWORD *)v34 + 2) = v6 - 1;
        v37 = v6 - 1;
        v11 = v213;
        v171 = v207;
        if (v6 <= 2)
          goto LABEL_190;
      }
      goto LABEL_210;
    }
  }
  else
  {
    v12 = v7;
    v13 = v10 >> 1;
    v14 = sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13, v14);
    *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
    v7 = v12;
    v197 = (void **)((v15 & 0xFFFFFFFFFFFFFF8) + 32);
    v214 = v15;
  }
  v35 = 0;
  v36 = *v7;
  v182 = *v7 - 8;
  v34 = (char *)_swiftEmptyArrayStorage;
  v196 = *v7;
LABEL_25:
  v38 = v35;
  v39 = v35 + 1;
  v204 = v35;
  if (v35 + 1 >= v8)
  {
    v47 = v8;
    v4 = (uint64_t)v11;
  }
  else
  {
    v186 = v34;
    v183 = v35 + 1;
    v40 = *(void **)(v36 + 8 * v39);
    v41 = *(void **)(v36 + 8 * v35);
    v42 = swift_allocObject(&unk_1005E0280, 32, 7);
    *(_QWORD *)(v42 + 16) = v40;
    *(_QWORD *)(v42 + 24) = v41;
    v43 = v40;
    v44 = v41;
    v45 = v44;
    v4 = (uint64_t)v11;
    if (v11)
    {
      sub_10008BA00((uint64_t)v11, v199);
      v6 = v45;
      v5 = v43;
      v46 = v11();
      sub_100087534((uint64_t)v11, v199);

      swift_release(v42);
    }
    else
    {
      v6 = (unint64_t)v44;
      v48 = v43;
      v49 = objc_msgSend(v48, "menuSortOrder");
      v5 = objc_msgSend((id)v6, "menuSortOrder");

      swift_release(v42);
      v46 = v49 < v5;
    }
    v38 = v204;
    v39 = v204 + 2;
    v47 = v185;
    if (v204 + 2 < v185)
    {
      v50 = v183;
      do
      {
        v54 = *(void **)(v196 + 8 * v39);
        v55 = *(void **)(v196 + 8 * v50);
        v56 = swift_allocObject(&unk_1005E02A8, 32, 7);
        *(_QWORD *)(v56 + 16) = v54;
        *(_QWORD *)(v56 + 24) = v55;
        v57 = v54;
        v58 = v55;
        v59 = v58;
        if (v11)
        {
          sub_10008BA00((uint64_t)v11, v199);
          v6 = v59;
          v5 = v57;
          v60 = v11();
          sub_100087534((uint64_t)v11, v199);

          swift_release(v56);
          if (((v46 ^ v60) & 1) != 0)
            goto LABEL_38;
        }
        else
        {
          v6 = (unint64_t)v58;
          v51 = v57;
          v5 = objc_msgSend(v51, "menuSortOrder");
          v52 = objc_msgSend((id)v6, "menuSortOrder");

          swift_release(v56);
          v11 = v213;
          if ((v46 & 1) == v5 >= v52)
            goto LABEL_38;
        }
        v53 = v39 + 1;
        v50 = v39;
        v39 = v53;
      }
      while (v53 < v185);
      v39 = v53;
LABEL_38:
      v38 = v204;
      v47 = v185;
      v4 = (uint64_t)v11;
    }
    if ((v46 & 1) != 0)
    {
      v34 = v186;
      v36 = v196;
      if (v39 < v38)
        goto LABEL_214;
      if (v38 >= v39)
      {
        v5 = (_QWORD *)v199;
      }
      else
      {
        v61 = (uint64_t *)(v182 + 8 * v39);
        v62 = v39;
        v63 = v38;
        v64 = (uint64_t *)(v196 + 8 * v38);
        v5 = (_QWORD *)v199;
        do
        {
          if (v63 != --v62)
          {
            if (!v196)
              goto LABEL_221;
            v65 = *v64;
            *v64 = *v61;
            *v61 = v65;
          }
          ++v63;
          --v61;
          ++v64;
        }
        while (v63 < v62);
        v47 = v185;
      }
    }
    else
    {
      v5 = (_QWORD *)v199;
      v34 = v186;
      v36 = v196;
    }
  }
  v184 = v39;
  if (v39 < v47)
  {
    if (__OFSUB__(v39, v38))
      goto LABEL_209;
    if (v39 - v38 < v181)
    {
      if (__OFADD__(v38, v181))
      {
LABEL_215:
        __break(1u);
        goto LABEL_216;
      }
      if (v38 + v181 >= v185)
        v66 = v185;
      else
        v66 = v38 + v181;
      if (v66 < v38)
      {
LABEL_216:
        __break(1u);
LABEL_217:
        sub_100087534((uint64_t)v213, v199);
        sub_100087534((uint64_t)v213, v199);
        sub_100087534((uint64_t)v213, v199);
        __break(1u);
        goto LABEL_218;
      }
      v67 = v39;
      if (v39 != v66)
      {
        v187 = v34;
        v68 = v182 + 8 * v39;
        v201 = v66;
        do
        {
          v69 = *(void **)(v36 + 8 * v67);
          v4 = v38;
          v209 = v68;
          do
          {
            v70 = *(void **)v68;
            v71 = swift_allocObject(&unk_1005E0258, 32, 7);
            *(_QWORD *)(v71 + 16) = v69;
            *(_QWORD *)(v71 + 24) = v70;
            v72 = v69;
            v73 = v70;
            v74 = v73;
            if (v213)
            {
              v5 = (_QWORD *)v199;
              sub_10008BA00((uint64_t)v213, v199);
              v75 = v74;
              v6 = (unint64_t)v72;
              v76 = v213();
              sub_100087534((uint64_t)v213, v199);

              swift_release(v71);
              v36 = v196;
              if ((v76 & 1) == 0)
                break;
            }
            else
            {
              v77 = v73;
              v78 = v72;
              v6 = (unint64_t)objc_msgSend(v78, "menuSortOrder");
              v5 = objc_msgSend(v77, "menuSortOrder");

              swift_release(v71);
              v36 = v196;
              if (v6 >= (unint64_t)v5)
                break;
            }
            if (!v36)
              goto LABEL_217;
            v79 = *(void **)v68;
            v69 = *(void **)(v68 + 8);
            *(_QWORD *)v68 = v69;
            *(_QWORD *)(v68 + 8) = v79;
            v68 -= 8;
            ++v4;
          }
          while (v67 != v4);
          ++v67;
          v38 = v204;
          v68 = v209 + 8;
        }
        while (v67 != v201);
        v184 = v201;
        v5 = (_QWORD *)v199;
        v4 = (uint64_t)v213;
        v34 = v187;
      }
    }
  }
  if (v184 < v38)
  {
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
    v34 = sub_100464E4C(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
  v81 = *((_QWORD *)v34 + 2);
  v80 = *((_QWORD *)v34 + 3);
  v37 = v81 + 1;
  v36 = v196;
  if (v81 >= v80 >> 1)
  {
    v169 = sub_100464E4C((char *)(v80 > 1), v81 + 1, 1, v34);
    v36 = v196;
    v34 = v169;
  }
  *((_QWORD *)v34 + 2) = v37;
  v82 = v34 + 32;
  v83 = &v34[16 * v81 + 32];
  *(_QWORD *)v83 = v204;
  *((_QWORD *)v83 + 1) = v184;
  if (!v81)
  {
    v37 = 1;
    goto LABEL_24;
  }
  v188 = v34;
  v193 = v34 + 32;
  while (1)
  {
    v84 = v37 - 1;
    if (v37 >= 4)
    {
      v89 = &v82[16 * v37];
      v90 = *((_QWORD *)v89 - 8);
      v91 = *((_QWORD *)v89 - 7);
      v95 = __OFSUB__(v91, v90);
      v92 = v91 - v90;
      if (v95)
        goto LABEL_197;
      v94 = *((_QWORD *)v89 - 6);
      v93 = *((_QWORD *)v89 - 5);
      v95 = __OFSUB__(v93, v94);
      v87 = v93 - v94;
      v88 = v95;
      if (v95)
        goto LABEL_198;
      v96 = v37 - 2;
      v97 = &v82[16 * v37 - 32];
      v99 = *(_QWORD *)v97;
      v98 = *((_QWORD *)v97 + 1);
      v95 = __OFSUB__(v98, v99);
      v100 = v98 - v99;
      if (v95)
        goto LABEL_200;
      v95 = __OFADD__(v87, v100);
      v101 = v87 + v100;
      if (v95)
        goto LABEL_203;
      if (v101 >= v92)
      {
        v119 = &v82[16 * v84];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v95 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v95)
          goto LABEL_207;
        v112 = v87 < v122;
        goto LABEL_109;
      }
    }
    else
    {
      if (v37 != 3)
      {
        v113 = *((_QWORD *)v34 + 4);
        v114 = *((_QWORD *)v34 + 5);
        v95 = __OFSUB__(v114, v113);
        v106 = v114 - v113;
        v107 = v95;
        goto LABEL_103;
      }
      v86 = *((_QWORD *)v34 + 4);
      v85 = *((_QWORD *)v34 + 5);
      v95 = __OFSUB__(v85, v86);
      v87 = v85 - v86;
      v88 = v95;
    }
    if ((v88 & 1) != 0)
      goto LABEL_199;
    v96 = v37 - 2;
    v102 = &v82[16 * v37 - 32];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v105 = __OFSUB__(v103, v104);
    v106 = v103 - v104;
    v107 = v105;
    if (v105)
      goto LABEL_202;
    v108 = &v82[16 * v84];
    v110 = *(_QWORD *)v108;
    v109 = *((_QWORD *)v108 + 1);
    v95 = __OFSUB__(v109, v110);
    v111 = v109 - v110;
    if (v95)
      goto LABEL_205;
    if (__OFADD__(v106, v111))
      goto LABEL_206;
    if (v106 + v111 >= v87)
    {
      v112 = v87 < v111;
LABEL_109:
      if (v112)
        v84 = v96;
      goto LABEL_111;
    }
LABEL_103:
    if ((v107 & 1) != 0)
      goto LABEL_201;
    v115 = &v82[16 * v84];
    v117 = *(_QWORD *)v115;
    v116 = *((_QWORD *)v115 + 1);
    v95 = __OFSUB__(v116, v117);
    v118 = v116 - v117;
    if (v95)
      goto LABEL_204;
    if (v118 < v106)
      goto LABEL_24;
LABEL_111:
    v123 = v84 - 1;
    if (v84 - 1 >= v37)
    {
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
    if (!v36)
      goto LABEL_220;
    v124 = &v82[16 * v84];
    v125 = *(_QWORD *)v124;
    v194 = *(_QWORD *)&v82[16 * v123];
    v195 = *((_QWORD *)v124 + 1);
    v126 = v36 + 8 * *(_QWORD *)v124;
    v127 = v36 + 8 * v195;
    v198 = (void **)(v36 + 8 * v194);
    v128 = v126 - (_QWORD)v198;
    v129 = v126 - (_QWORD)v198 + 7;
    if ((uint64_t)(v126 - (_QWORD)v198) >= 0)
      v129 = v126 - (_QWORD)v198;
    v6 = v129 >> 3;
    v130 = (void **)(v36 + 8 * v125);
    v205 = v36 + 8 * v195;
    v131 = v127 - v126;
    v132 = v127 - v126 + 7;
    if ((uint64_t)(v127 - v126) >= 0)
      v132 = v127 - v126;
    v133 = v132 >> 3;
    v134 = v197;
    v191 = v84 - 1;
    v192 = v84;
    __dst = &v82[16 * v84];
    v190 = &v82[16 * v123];
    if ((uint64_t)v6 < v132 >> 3)
      break;
    if (v131 < -7)
      goto LABEL_223;
    v136 = (void **)(v36 + 8 * *(_QWORD *)v124);
    if ((unint64_t)v197 >= v127 || v197 < v130)
    {
      sub_10008BA00((uint64_t)v213, (uint64_t)v5);
LABEL_145:
      memmove(v197, v130, 8 * v133);
      goto LABEL_146;
    }
    sub_10008BA00((uint64_t)v213, (uint64_t)v5);
    if (v197 != v130)
      goto LABEL_145;
LABEL_146:
    v137 = &v197[v133];
    if (v194 >= v125 || v131 < 8)
      goto LABEL_143;
    v152 = (void **)(v182 + 8 * v195);
    v4 = (uint64_t)v213;
    do
    {
      v202 = v152 + 1;
      v206 = v136;
      v211 = (unint64_t)v137;
      v154 = v137 - 1;
      v153 = *(v137 - 1);
      v156 = v136 - 1;
      v155 = *(v136 - 1);
      v5 = (_QWORD *)swift_allocObject(&unk_1005E0208, 32, 7);
      v5[2] = v153;
      v5[3] = v155;
      v157 = v153;
      v158 = v155;
      v159 = v158;
      if (v4)
      {
        sub_10008BA00(v4, v199);
        v160 = v159;
        v6 = (unint64_t)v157;
        v161 = ((uint64_t (*)(void))v4)();
        sub_100087534(v4, v199);

        swift_release(v5);
        if ((v161 & 1) != 0)
          goto LABEL_151;
      }
      else
      {
        v163 = v158;
        v164 = v157;
        v6 = (unint64_t)objc_msgSend(v164, "menuSortOrder");
        v165 = objc_msgSend(v163, "menuSortOrder");

        swift_release(v5);
        if (v6 < (unint64_t)v165)
        {
LABEL_151:
          v137 = (void **)v211;
          if (v202 == v206)
          {
            v136 = v156;
            v4 = (uint64_t)v213;
            v162 = v198;
            if (v152 >= v206)
              goto LABEL_161;
            goto LABEL_162;
          }
          v136 = v156;
          v4 = (uint64_t)v213;
LABEL_160:
          v162 = v198;
LABEL_161:
          *v152 = *v156;
          goto LABEL_162;
        }
      }
      v156 = v154;
      if (v202 != (void **)v211)
      {
        v137 = v154;
        v4 = (uint64_t)v213;
        v136 = v206;
        goto LABEL_160;
      }
      v137 = v154;
      v4 = (uint64_t)v213;
      v136 = v206;
      v162 = v198;
      if ((unint64_t)v152 >= v211)
        goto LABEL_161;
LABEL_162:
      if (v162 >= v136)
        break;
      --v152;
    }
    while (v197 < v137);
    v134 = v197;
LABEL_165:
    v166 = (char *)v137 - (char *)v134 + 7;
    if ((char *)v137 - (char *)v134 >= 0)
      v166 = (char *)v137 - (char *)v134;
    if ((char *)v137 - (char *)v134 <= -8)
      goto LABEL_223;
    v167 = v166 >> 3;
    if (v136 != v134 || v136 >= &v134[v167])
      memmove(v136, v134, 8 * v167);
    v5 = (_QWORD *)v199;
    sub_100087534(v4, v199);
    if (v195 < v194)
      goto LABEL_194;
    v34 = v188;
    if (v192 > *((_QWORD *)v188 + 2))
      goto LABEL_195;
    *(_QWORD *)v190 = v194;
    *(_QWORD *)&v193[16 * v191 + 8] = v195;
    v168 = *((_QWORD *)v188 + 2);
    if (v192 >= (uint64_t)v168)
      goto LABEL_196;
    v37 = v168 - 1;
    memmove(__dst, __dst + 16, 16 * (v168 - 1 - v192));
    v82 = v193;
    *((_QWORD *)v188 + 2) = v168 - 1;
    v36 = v196;
    if (v168 <= 2)
    {
LABEL_24:
      v11 = (uint64_t (*)(void))v4;
      v35 = v184;
      v8 = v185;
      if (v184 >= v185)
        goto LABEL_179;
      goto LABEL_25;
    }
  }
  if (v128 >= -7)
  {
    v135 = (void **)(v36 + 8 * v194);
    if (v197 < v198 || (unint64_t)v197 >= v126)
    {
      sub_10008BA00((uint64_t)v213, (uint64_t)v5);
    }
    else
    {
      sub_10008BA00((uint64_t)v213, (uint64_t)v5);
      if (v197 == v198)
        goto LABEL_130;
    }
    memmove(v197, v198, 8 * v6);
LABEL_130:
    v137 = &v197[v6];
    if (v125 >= v195 || v128 < 8)
    {
LABEL_142:
      v136 = v135;
LABEL_143:
      v4 = (uint64_t)v213;
      goto LABEL_165;
    }
    v138 = v130;
    v210 = &v197[v6];
    while (2)
    {
      v139 = v138;
      v140 = *v138;
      v141 = *v134;
      v5 = (_QWORD *)swift_allocObject(&unk_1005E0230, 32, 7);
      v5[2] = v140;
      v5[3] = v141;
      v142 = v140;
      v143 = v141;
      v144 = v143;
      if (v213)
      {
        sub_10008BA00((uint64_t)v213, v199);
        v6 = v144;
        v145 = v142;
        v146 = v213();
        sub_100087534((uint64_t)v213, v199);

        swift_release(v5);
        if ((v146 & 1) != 0)
          goto LABEL_135;
LABEL_138:
        v147 = v134;
        v151 = v135 == v134++;
        v138 = v139;
        v137 = v210;
        if (!v151)
          goto LABEL_139;
      }
      else
      {
        v6 = (unint64_t)v143;
        v148 = v142;
        v149 = objc_msgSend(v148, "menuSortOrder");
        v150 = objc_msgSend((id)v6, "menuSortOrder");

        swift_release(v5);
        if (v149 >= v150)
          goto LABEL_138;
LABEL_135:
        v147 = v139;
        v138 = v139 + 1;
        v137 = v210;
        if (v135 != v139)
LABEL_139:
          *v135 = *v147;
      }
      ++v135;
      if (v134 >= v137 || (unint64_t)v138 >= v205)
        goto LABEL_142;
      continue;
    }
  }
LABEL_223:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
LABEL_224:
  sub_100087534(v6, (uint64_t)v5);
  sub_100087534(v6, (uint64_t)v5);
  sub_100087534(v6, (uint64_t)v5);
  sub_100087534(v6, (uint64_t)v5);
  LOBYTE(v179) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, v179, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_10035D448(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[2];

  v6 = *a1;
  sub_10008BA00(a2, a3);
  sub_10008BA00(a2, a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_100467134(v6);
    *a1 = v6;
  }
  v8 = *(_QWORD *)(v6 + 16);
  v11[0] = v6 + 32;
  v11[1] = v8;
  sub_10008BA00(a2, a3);
  sub_10035C2B4(v11, a2, a3);
  v9 = sub_100087534(a2, a3);
  specialized ContiguousArray._endMutation()(v9);
  sub_100087534(a2, a3);
  return sub_100087534(a2, a3);
}

void *sub_10035D520(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t All;
  uint64_t v23;
  dispatch_group_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *__ptr32 *v28;
  void *result;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  id v37;
  _QWORD *v38;
  void *v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  _QWORD *v62;
  void **aBlock;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t (*v67)();
  _QWORD *v68;

  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  __chkstk_darwin(v17);
  v55 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject(&unk_1005E0B18, 64, 7);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a7;
  v20 = a2;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain(a5);
  swift_retain();
  v21 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v21);
  if (!All)
  {
    sub_1004A3C14((uint64_t)_swiftEmptyArrayStorage, v20, a3, a4, a5, a6, a7);
    return (void *)swift_release(v19);
  }
  v23 = All;
  v59 = v19;
  v24 = dispatch_group_create();
  v25 = swift_allocObject(&unk_1005E0640, 24, 7);
  *(_QWORD *)(v25 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 >= 0)
      v52 = v23 & 0xFFFFFFFFFFFFFF8;
    else
      v52 = v23;
    swift_bridgeObjectRetain(v23);
    v26 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v27 = v59;
  v28 = &off_1004D4000;
  if (!v26)
  {
    swift_bridgeObjectRelease(v23);
LABEL_14:
    v42 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v43 = (void *)static OS_dispatch_queue.main.getter(v42);
    v44 = (_QWORD *)swift_allocObject(&unk_1005E0BB8, 40, 7);
    v44[2] = sub_100360F68;
    v44[3] = v27;
    v44[4] = v25;
    v67 = sub_100361280;
    v68 = v44;
    aBlock = _NSConcreteStackBlock;
    v64 = *((_QWORD *)v28 + 409);
    v65 = sub_10004A82C;
    v66 = &unk_1005E0BD0;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v46 = v55;
    static DispatchQoS.unspecified.getter(v47);
    v62 = _swiftEmptyArrayStorage;
    v48 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_10006922C((uint64_t *)&unk_100647540);
    v50 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v49, v50, v14, v48);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v46, v16, v43, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v57);
    v51 = v68;
    swift_release(v59);
    swift_release(v25);
    return (void *)swift_release(v51);
  }
  v54 = v16;
  result = (void *)objc_opt_self(FPItemManager);
  v61 = result;
  if (v26 >= 1)
  {
    v60 = v26;
    v53 = v14;
    v30 = 0;
    v31 = v23 & 0xC000000000000001;
    v32 = v23;
    do
    {
      if (v31)
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v23);
      else
        v33 = *(id *)(v23 + 8 * v30 + 32);
      v34 = v33;
      ++v30;
      dispatch_group_enter(v24);
      v35 = swift_allocObject(&unk_1005E0B40, 32, 7);
      *(_QWORD *)(v35 + 16) = v24;
      *(_QWORD *)(v35 + 24) = v25;
      swift_retain();
      v36 = v24;
      v37 = objc_msgSend(v61, "defaultManager");
      v38 = (_QWORD *)swift_allocObject(&unk_1005E0B68, 56, 7);
      v38[2] = sub_100361228;
      v38[3] = v35;
      v38[4] = 0;
      v38[5] = 0;
      v38[6] = v34;
      v67 = sub_100360C70;
      v68 = v38;
      aBlock = _NSConcreteStackBlock;
      v64 = 1107296256;
      v65 = sub_100175118;
      v66 = &unk_1005E0B80;
      v39 = _Block_copy(&aBlock);
      v40 = v68;
      swift_retain();
      v41 = v34;
      swift_release(v40);
      objc_msgSend(v37, "fetchURLForItem:completionHandler:", v41, v39);
      _Block_release(v39);

      swift_release(v35);
      v23 = v32;
    }
    while (v60 != v30);
    swift_bridgeObjectRelease(v32);
    v14 = v53;
    v16 = v54;
    v27 = v59;
    v28 = &off_1004D4000;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_10035DA3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v23 = v4;
    v24 = v7;
    v25 = v7 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v9 = v4 - 4;
      if (!v25)
        break;
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v7);
      v11 = v4 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_20;
LABEL_9:
      v12 = v8;
      v13 = v10;
      v14 = a3;
      v15 = objc_msgSend(v10, "identifier", v23);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      a3 = v14;
      v19 = v16 == a2 && v18 == v14;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
LABEL_19:
        swift_bridgeObjectRelease(a3);
        return v13;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a2, v14, 0);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
      {
        a3 = v24;
        goto LABEL_19;
      }

      ++v4;
      v8 = v12;
      v19 = v11 == v12;
      v7 = v24;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
        return 0;
      }
    }
    v10 = *(id *)(v7 + 8 * v4);
    v11 = v4 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_9;
LABEL_20:
    __break(1u);
LABEL_21:
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  swift_bridgeObjectRelease(v7);
  return 0;
}

void *sub_10035DBE0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t All;
  uint64_t v22;
  dispatch_group_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *__ptr32 *v27;
  void *result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  _QWORD *v37;
  void *v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  _QWORD *v62;
  void **aBlock;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t (*v67)();
  _QWORD *v68;

  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v56 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject(&unk_1005E0618, 49, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  *(_BYTE *)(v17 + 48) = a6;
  swift_unknownObjectRetain(a5);
  v18 = a2;
  swift_bridgeObjectRetain(a3);
  v19 = a4;
  v20 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v20);
  if (!All)
  {
    sub_10013BD90((uint64_t)_swiftEmptyArrayStorage, v18, a3, v19, a5, a6 & 1);
    return (void *)swift_release(v17);
  }
  v22 = All;
  v59 = v17;
  v54 = v15;
  v55 = v14;
  v23 = dispatch_group_create();
  v24 = swift_allocObject(&unk_1005E0640, 24, 7);
  *(_QWORD *)(v24 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 >= 0)
      v52 = v22 & 0xFFFFFFFFFFFFFF8;
    else
      v52 = v22;
    swift_bridgeObjectRetain(v22);
    v25 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v25 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v26 = v59;
  v27 = &off_1004D4000;
  if (!v25)
  {
    swift_bridgeObjectRelease(v22);
LABEL_14:
    v41 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v42 = (void *)static OS_dispatch_queue.main.getter(v41);
    v43 = (_QWORD *)swift_allocObject(&unk_1005E06E0, 40, 7);
    v43[2] = sub_100360C2C;
    v43[3] = v26;
    v43[4] = v24;
    v67 = sub_100360C78;
    v68 = v43;
    aBlock = _NSConcreteStackBlock;
    v64 = *((_QWORD *)v27 + 409);
    v65 = sub_10004A82C;
    v66 = &unk_1005E06F8;
    v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v45 = v56;
    static DispatchQoS.unspecified.getter(v46);
    v62 = _swiftEmptyArrayStorage;
    v47 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v48 = sub_10006922C((uint64_t *)&unk_100647540);
    v49 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v50 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v48, v49, v12, v47);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v45, v50, v42, v44);
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v12);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v54);
    v51 = v68;
    swift_release(v59);
    swift_release(v24);
    return (void *)swift_release(v51);
  }
  result = (void *)objc_opt_self(FPItemManager);
  v61 = result;
  if (v25 >= 1)
  {
    v53 = v12;
    v29 = 0;
    v60 = v22 & 0xC000000000000001;
    v30 = v22;
    v31 = v25;
    do
    {
      if (v60)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v22);
      else
        v32 = *(id *)(v22 + 8 * v29 + 32);
      v33 = v32;
      ++v29;
      dispatch_group_enter(v23);
      v34 = swift_allocObject(&unk_1005E0668, 32, 7);
      *(_QWORD *)(v34 + 16) = v23;
      *(_QWORD *)(v34 + 24) = v24;
      swift_retain();
      v35 = v23;
      v36 = objc_msgSend(v61, "defaultManager");
      v37 = (_QWORD *)swift_allocObject(&unk_1005E0690, 56, 7);
      v37[2] = sub_100360C64;
      v37[3] = v34;
      v37[4] = 0;
      v37[5] = 0;
      v37[6] = v33;
      v67 = sub_100360C70;
      v68 = v37;
      aBlock = _NSConcreteStackBlock;
      v64 = 1107296256;
      v65 = sub_100175118;
      v66 = &unk_1005E06A8;
      v38 = _Block_copy(&aBlock);
      v39 = v68;
      swift_retain();
      v40 = v33;
      swift_release(v39);
      objc_msgSend(v36, "fetchURLForItem:completionHandler:", v40, v38);
      _Block_release(v38);

      swift_release(v34);
      v22 = v30;
    }
    while (v31 != v29);
    swift_bridgeObjectRelease(v30);
    v12 = v53;
    v26 = v59;
    v27 = &off_1004D4000;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_10035E100(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t All;
  uint64_t v18;
  dispatch_group_t v19;
  uint64_t v20;
  uint64_t v21;
  void *result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  _QWORD *v56;
  void **aBlock;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t (*v61)();
  _QWORD *v62;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject(&unk_1005E0938, 32, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = a2;
  v15 = a3;
  v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v16);
  if (!All)
  {
    sub_100352540((int)_swiftEmptyArrayStorage, v14, v15);
    return (void *)swift_release(v13);
  }
  v18 = All;
  v50 = v13;
  v51 = v10;
  v19 = dispatch_group_create();
  v20 = swift_allocObject(&unk_1005E0640, 24, 7);
  *(_QWORD *)(v20 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 >= 0)
      v46 = v18 & 0xFFFFFFFFFFFFFF8;
    else
      v46 = v18;
    swift_bridgeObjectRetain(v18);
    v21 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v52 = v9;
  v49 = v12;
  if (!v21)
  {
    swift_bridgeObjectRelease(v18);
LABEL_14:
    v35 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v55 = (id)static OS_dispatch_queue.main.getter(v35);
    v36 = (_QWORD *)swift_allocObject(&unk_1005E09D8, 40, 7);
    v37 = v50;
    v36[2] = sub_100360EF0;
    v36[3] = v37;
    v36[4] = v20;
    v61 = sub_100361280;
    v62 = v36;
    aBlock = _NSConcreteStackBlock;
    v58 = 1107296256;
    v59 = sub_10004A82C;
    v60 = &unk_1005E09F0;
    v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v39 = v49;
    static DispatchQoS.unspecified.getter(v40);
    v56 = _swiftEmptyArrayStorage;
    v41 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v42 = sub_10006922C((uint64_t *)&unk_100647540);
    v43 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v42, v43, v6, v41);
    v44 = v55;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v39, v8, v55, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
    v45 = v62;
    swift_release(v37);
    swift_release(v20);
    return (void *)swift_release(v45);
  }
  v48 = v8;
  result = (void *)objc_opt_self(FPItemManager);
  v55 = result;
  if (v21 >= 1)
  {
    v47 = v6;
    v23 = 0;
    v54 = v18 & 0xC000000000000001;
    v24 = v18;
    v25 = v21;
    do
    {
      if (v54)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v18);
      else
        v26 = *(id *)(v18 + 8 * v23 + 32);
      v27 = v26;
      ++v23;
      dispatch_group_enter(v19);
      v28 = swift_allocObject(&unk_1005E0960, 32, 7);
      *(_QWORD *)(v28 + 16) = v19;
      *(_QWORD *)(v28 + 24) = v20;
      swift_retain();
      v29 = v19;
      v30 = objc_msgSend(v55, "defaultManager");
      v31 = (_QWORD *)swift_allocObject(&unk_1005E0988, 56, 7);
      v31[2] = sub_100361228;
      v31[3] = v28;
      v31[4] = 0;
      v31[5] = 0;
      v31[6] = v27;
      v61 = sub_100360C70;
      v62 = v31;
      aBlock = _NSConcreteStackBlock;
      v58 = 1107296256;
      v59 = sub_100175118;
      v60 = &unk_1005E09A0;
      v32 = _Block_copy(&aBlock);
      v33 = v62;
      swift_retain();
      v34 = v27;
      swift_release(v33);
      objc_msgSend(v30, "fetchURLForItem:completionHandler:", v34, v32);
      _Block_release(v32);

      swift_release(v28);
      v18 = v24;
    }
    while (v25 != v23);
    swift_bridgeObjectRelease(v24);
    v6 = v47;
    v8 = v48;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10035E5E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10035E61C(uint64_t a1)
{
  uint64_t *v1;
  void (*v2)(uint64_t, __n128);

  v2 = (void (*)(uint64_t, __n128))v1[3];
  if (a1)
    sub_100354B24(v1[5], v1[6], a1, v1[2], v2);
  else
    ((void (*)(void))v2)();
}

uint64_t sub_10035E65C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCActionManager.LazyItems(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCActionManager.LazyItems);
}

uint64_t sub_10035E6E8(uint64_t a1, uint64_t a2)
{
  assignWithTake for DOCIdentityHashableLocation(a2, a1);
  return a2;
}

uint64_t sub_10035E724(uint64_t a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t All;
  uint64_t v16;
  dispatch_group_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  id v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(_QWORD *);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **aBlock;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t (*v62)();
  _QWORD *v63;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C((uint64_t *)&unk_1006424B0);
  All = Array<A>.fpfs_syncFetchAllFPItems()(a1, v14);
  if (!All)
    return a2(_swiftEmptyArrayStorage);
  v16 = v7;
  v51 = v13;
  v56 = All;
  v17 = dispatch_group_create();
  v18 = swift_allocObject(&unk_1005E0640, 24, 7);
  v19 = v56;
  v20 = v18;
  *(_QWORD *)(v18 + 16) = _swiftEmptyArrayStorage;
  v21 = v19 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v21 = v19;
    v55 = v21;
    swift_bridgeObjectRetain(v19);
    v55 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease(v56);
    v22 = v55;
  }
  else
  {
    v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v53 = v10;
  v54 = v16;
  v52 = v11;
  if (!v22)
  {
    swift_bridgeObjectRelease(v56);
LABEL_14:
    v37 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v38 = (void *)static OS_dispatch_queue.main.getter(v37);
    v39 = (_QWORD *)swift_allocObject(&unk_1005E0C80, 40, 7);
    v39[2] = a2;
    v39[3] = a3;
    v39[4] = v20;
    v62 = sub_100361280;
    v63 = v39;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_10004A82C;
    v61 = &unk_1005E0C98;
    v40 = _Block_copy(&aBlock);
    swift_retain(v20);
    swift_retain(a3);
    v41 = v51;
    static DispatchQoS.unspecified.getter(v42);
    v57 = _swiftEmptyArrayStorage;
    v43 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v44 = sub_10006922C((uint64_t *)&unk_100647540);
    v45 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v57, v44, v45, v6, v43);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v41, v9, v38, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
    v46 = v63;
    swift_release(v20);
    return swift_release(v46);
  }
  v50 = v9;
  v55 = v22;
  result = objc_opt_self(FPItemManager);
  if (v55 >= 1)
  {
    v24 = (void *)result;
    v47 = a2;
    v48 = a3;
    v49 = v6;
    v25 = 0;
    v26 = v56;
    v27 = v56 & 0xC000000000000001;
    do
    {
      if (v27)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v26);
      else
        v28 = *(id *)(v26 + 8 * v25 + 32);
      v29 = v28;
      ++v25;
      dispatch_group_enter(v17);
      v30 = swift_allocObject(&unk_1005E0C08, 32, 7);
      *(_QWORD *)(v30 + 16) = v17;
      *(_QWORD *)(v30 + 24) = v20;
      v31 = v17;
      v32 = objc_msgSend(v24, "defaultManager", swift_retain(v20).n128_f64[0]);
      v33 = (_QWORD *)swift_allocObject(&unk_1005E0C30, 56, 7);
      v33[2] = sub_100361228;
      v33[3] = v30;
      v33[4] = 0;
      v33[5] = 0;
      v33[6] = v29;
      v62 = sub_100360C70;
      v63 = v33;
      aBlock = _NSConcreteStackBlock;
      v59 = 1107296256;
      v60 = sub_100175118;
      v61 = &unk_1005E0C48;
      v34 = _Block_copy(&aBlock);
      v35 = v63;
      swift_retain(v30);
      v36 = v29;
      swift_release(v35);
      objc_msgSend(v32, "fetchURLForItem:completionHandler:", v36, v34);
      _Block_release(v34);

      swift_release(v30);
      v26 = v56;
    }
    while (v55 != v25);
    swift_bridgeObjectRelease(v56);
    v6 = v49;
    v9 = v50;
    a2 = v47;
    a3 = v48;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_10035EBB0()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = objc_msgSend(v0, "description");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000016, 0x8000000100529D80, "Files/DOCActionManager.swift", 28, 2, 1129, 0);
  __break(1u);
}

uint64_t sub_10035EC7C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035ECA0()
{
  uint64_t v0;

  return sub_1003554C4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10035ECA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_10006922C((uint64_t *)&unk_1006424B0);
  result = Array<A>.fpfs_syncFetchAllFPItems()(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_10035ECE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_10035ED14()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v0 + 16), "menuSortOrder");
  return v2 < objc_msgSend(v1, "menuSortOrder");
}

uint64_t sub_10035ED5C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10035ED6C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t sub_10035ED7C(uint64_t a1, uint64_t a2)
{
  assignWithTake for DOCGridLayout(a2, a1);
  return a2;
}

void sub_10035EDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char isEscapingClosureAtFileLocation;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;
  _QWORD *v36;

  v4 = type metadata accessor for DOCDragPasteboardType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = __chkstk_darwin(v8);
  v11 = (char *)&v29 - v10;
  v12 = _swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v9);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain(v13);
  v33 = v14;
  if (v14)
  {
    v30 = a2;
    v31 = a1;
    v15 = 0;
    v16 = _swiftEmptyArrayStorage;
    v32 = v5;
    while (v15 < *(_QWORD *)(v13 + 16))
    {
      v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v18 = *(_QWORD *)(v5 + 72);
      v19 = sub_1000E2A34(v13 + v17 + v18 * v15, (uint64_t)v11);
      if ((DOCDragPasteboardType.isFPItemFileOrLocation.getter(v19) & 1) != 0)
      {
        sub_1000E2A78((uint64_t)v11);
      }
      else
      {
        sub_1001D0788((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          sub_100154FFC(0, v16[2] + 1, 1);
        v16 = (_QWORD *)aBlock[0];
        v21 = *(_QWORD *)(aBlock[0] + 16);
        v20 = *(_QWORD *)(aBlock[0] + 24);
        if (v21 >= v20 >> 1)
        {
          sub_100154FFC(v20 > 1, v21 + 1, 1);
          v16 = (_QWORD *)aBlock[0];
        }
        v16[2] = v21 + 1;
        sub_1001D0788((uint64_t)v7, (uint64_t)v16 + v17 + v21 * v18, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
        v5 = v32;
      }
      if (v33 == ++v15)
      {
        v12 = (_QWORD *)aBlock[0];
        a2 = v30;
        a1 = v31;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease(v13);
    if (a2 == 1)
      v22 = 2;
    else
      v22 = a2 == 2;
    v23 = (void *)objc_opt_self(UIPasteboard);
    v24 = (_QWORD *)swift_allocObject(&unk_1005E0488, 40, 7);
    v24[2] = a1;
    v24[3] = v12;
    v24[4] = &v36;
    v25 = swift_allocObject(&unk_1005E04B0, 32, 7);
    *(_QWORD *)(v25 + 16) = sub_10035FE40;
    *(_QWORD *)(v25 + 24) = v24;
    aBlock[4] = sub_10010DB64;
    v35 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005E04C8;
    v26 = _Block_copy(aBlock);
    v27 = v35;
    swift_bridgeObjectRetain(a1);
    swift_retain();
    objc_msgSend(v23, "_performAsDataOwner:block:", v22, v26, swift_release(v27).n128_f64[0]);
    _Block_release(v26);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 96, 844, 71, 1);
    swift_release(v25);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_release(v24);
      return;
    }
  }
  __break(1u);
}

void sub_10035F0C8(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  uint64_t v25;
  int64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  dispatch_semaphore_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  NSObject *v47;
  double v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  int v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD aBlock[5];
  uint64_t v78;

  v72 = a5;
  v73 = a2;
  v74 = a1;
  v9 = (_QWORD *)type metadata accessor for DispatchTimeInterval(0);
  v10 = *(v9 - 1);
  __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - v18;
  v20 = swift_allocObject(&unk_1005E0398, 24, 7);
  v75 = a4;
  v76 = v20;
  *(_QWORD *)(v20 + 16) = 0;
  v71 = a6;
  v68 = v9;
  v69 = v13;
  v66 = v14;
  v67 = v10;
  v62 = v20 + 16;
  v63 = v12;
  v64 = v16;
  v65 = v19;
  if ((a6 & 1) == 0)
  {
    swift_bridgeObjectRetain(a3);
    v27 = (_QWORD *)a3;
    goto LABEL_26;
  }
  isEscapingClosureAtFileLocation = (unint64_t)a3 >> 62;
  if (!((unint64_t)a3 >> 62))
  {
    if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5)
      v22 = 5;
    else
      v22 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    goto LABEL_7;
  }
  while (1)
  {
    if (a3 < 0)
      v25 = a3;
    else
      v25 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRetain(a3);
    v59 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(a3);
    if (v59 < 0)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      swift_unknownObjectRelease(v36);
LABEL_19:
      v27 = sub_10028F8DC(v10, (uint64_t)v9, v25, v26);
      swift_unknownObjectRelease(v10);
      goto LABEL_26;
    }
    if (v26 >= 5)
      v60 = 5;
    else
      v60 = v26;
    if (v26 >= 0)
      v22 = v60;
    else
      v22 = 5;
    swift_bridgeObjectRetain(a3);
    v61 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(a3);
    if (v61 < v22)
    {
      __break(1u);
      return;
    }
LABEL_7:
    if ((a3 & 0xC000000000000001) != 0 && v22)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
      v23 = 0;
      do
      {
        v24 = v23 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v23);
        v23 = v24;
      }
      while (v22 != v24);
    }
    if (isEscapingClosureAtFileLocation)
    {
      if (a3 < 0)
        v28 = a3;
      else
        v28 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v10 = _CocoaArrayWrapper.subscript.getter(0, v22, v28);
      v9 = v29;
      v25 = v30;
      v26 = v31;
      swift_bridgeObjectRelease_n(a3, 2);
      if ((v26 & 1) == 0)
        goto LABEL_19;
    }
    else
    {
      v25 = 0;
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
      v9 = (_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 32);
      v26 = (2 * v22) | 1;
      if ((v26 & 1) == 0)
        goto LABEL_19;
    }
    v32 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v33 = swift_unknownObjectRetain_n(v10, 2);
    v34 = (_QWORD *)swift_dynamicCastClass(v33, v32);
    if (!v34)
    {
      swift_unknownObjectRelease(v10);
      v34 = _swiftEmptyArrayStorage;
    }
    v35 = v34[2];
    swift_release(v34);
    if (__OFSUB__((unint64_t)v26 >> 1, v25))
      goto LABEL_36;
    v36 = v10;
    if (v35 != ((unint64_t)v26 >> 1) - v25)
      goto LABEL_37;
    v27 = (_QWORD *)swift_dynamicCastClass(v10, v32);
    swift_unknownObjectRelease(v10);
    if (!v27)
    {
      swift_unknownObjectRelease(v10);
      v27 = _swiftEmptyArrayStorage;
    }
LABEL_26:
    v37 = dispatch_semaphore_create(0);
    v70 = (id)objc_opt_self(UIPasteboard);
    v10 = swift_allocObject(&unk_1005E03C0, 88, 7);
    v38 = v72;
    v39 = v73;
    *(_QWORD *)(v10 + 16) = v27;
    *(_QWORD *)(v10 + 24) = v38;
    v40 = v74;
    *(_QWORD *)(v10 + 32) = v39;
    *(_QWORD *)(v10 + 40) = v40;
    *(_BYTE *)(v10 + 48) = v71 & 1;
    v41 = v76;
    *(_QWORD *)(v10 + 56) = 5;
    *(_QWORD *)(v10 + 64) = v41;
    *(_QWORD *)(v10 + 72) = a3;
    *(_QWORD *)(v10 + 80) = v37;
    v42 = swift_allocObject(&unk_1005E03E8, 32, 7);
    *(_QWORD *)(v42 + 16) = sub_10035FD54;
    *(_QWORD *)(v42 + 24) = v10;
    aBlock[4] = sub_10010DB64;
    v78 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005E0400;
    v9 = _Block_copy(aBlock);
    v43 = v78;
    v44 = v38;
    v45 = v39;
    v46 = v40;
    swift_retain();
    v47 = v37;
    swift_retain();
    swift_bridgeObjectRetain(a3);
    *(_QWORD *)&v48 = swift_release(v43).n128_u64[0];
    objc_msgSend(v70, "_performAsDataOwner:block:", v75, v9, v48);
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v42, "", 96, 907, 51, 1);
    swift_release(v42);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
  }
  v50 = v64;
  static DispatchTime.now()(v49);
  v51 = v63;
  *v63 = 5;
  v53 = v67;
  v52 = v68;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v67 + 104))(v51, enum case for DispatchTimeInterval.seconds(_:), v68);
  v54 = v65;
  + infix(_:_:)(v50, v51);
  (*(void (**)(_QWORD *, _QWORD *))(v53 + 8))(v51, v52);
  v55 = *(void (**)(char *, uint64_t))(v66 + 8);
  v56 = v50;
  v57 = v69;
  v55(v56, v69);
  v58 = OS_dispatch_semaphore.wait(timeout:)(v54) & 1;
  v55(v54, v57);
  LOBYTE(v58) = static DispatchTimeoutResult.== infix(_:_:)(v58, 1);

  if ((v58 & 1) == 0)
    swift_beginAccess(v62, aBlock, 0, 0);
  swift_release(v10);
  swift_release(v76);
}

uint64_t sub_10035F61C(void *a1, char a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v34;
  unint64_t v35;

  if ((objc_msgSend(a1, "isTrashed") & 1) != 0)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v5 = objc_msgSend(v4, "dataOwnerStateForNode:", a1);

  v35 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5 == (id)1)
    v6 = 2;
  else
    v6 = v5 == (id)2;
  v7 = objc_opt_self(UIPasteboard);
  v8 = swift_allocObject(&unk_1005E0A50, 24, 7);
  *(_QWORD *)(v8 + 16) = &v35;
  v9 = swift_allocObject(&unk_1005E0A78, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100361260;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_10010DB64;
  v34 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005E0A90;
  v10 = _Block_copy(aBlock);
  v11 = v34;
  swift_retain();
  objc_msgSend((id)v7, "_performAsDataOwner:block:", v6, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 96, 777, 71, 1);
  swift_release(v9);
  if ((v7 & 1) != 0)
  {
    __break(1u);
LABEL_15:
    if (v9 < 0)
      v30 = v9;
    else
      v30 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v31 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v9);
    v12 = v35;
    if (v31)
      goto LABEL_8;
    goto LABEL_19;
  }
  v9 = v35;
  if (v35 >> 62)
    goto LABEL_15;
  v12 = v35;
  if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    swift_release(v8);
    swift_bridgeObjectRelease(v12);
    return 0;
  }
LABEL_8:
  v13 = swift_bridgeObjectRetain(v12);
  sub_10035EDB8(v13, (uint64_t)v5);
  v15 = v14;
  swift_bridgeObjectRelease(v12);
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    isa = Array._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v16, "eligibleActionsForDroppingUTIs:underItem:", isa, a1);

    type metadata accessor for FPAction(0);
    v20 = v19;
    v21 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
    v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v18, v20, v21);

    v23 = FPActionCopy;
    LOBYTE(isa) = sub_100028BE0((uint64_t)v23, v22);

    swift_bridgeObjectRelease(v22);
    v24 = 0;
    if ((isa & 1) != 0)
      v24 = *(_QWORD *)(v15 + 16);
    v25 = v15;
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    v26 = (void *)FPActionCopy;
    v27 = v35;
    swift_bridgeObjectRetain(v35);
    sub_10035F0C8(v26, a1, v27, v6, 0, a2 & 1);
    v24 = v28;
    v25 = v27;
  }
  swift_bridgeObjectRelease(v25);
  v29 = v35;
  swift_release(v8);
  swift_bridgeObjectRelease(v29);
  return v24;
}

uint64_t sub_10035F99C(void *a1, void *a2, char a3)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  unint64_t v32;

  v6 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v7 = objc_msgSend(v6, "dataOwnerStateForNode:", a1);

  v32 = (unint64_t)_swiftEmptyArrayStorage;
  if (v7 == (id)1)
    v8 = 2;
  else
    v8 = v7 == (id)2;
  v9 = (void *)objc_opt_self(UIPasteboard);
  v10 = swift_allocObject(&unk_1005E0320, 24, 7);
  *(_QWORD *)(v10 + 16) = &v32;
  v11 = swift_allocObject(&unk_1005E0348, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10035FCC8;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_10006657C;
  v31 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005E0360;
  v12 = _Block_copy(aBlock);
  v13 = v31;
  swift_retain();
  objc_msgSend(v9, "_performAsDataOwner:block:", v8, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v11, "", 96, 809, 71, 1);
  v14 = swift_release(v11).n128_u64[0];
  if ((v12 & 1) != 0)
  {
    __break(1u);
LABEL_16:
    if (v11 < 0)
      v28 = v11;
    else
      v28 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    v14 = swift_bridgeObjectRelease(v11).n128_u64[0];
    if (!v29)
      goto LABEL_11;
    goto LABEL_7;
  }
  v11 = v32;
  if (v32 >> 62)
    goto LABEL_16;
  if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_7:
  if ((objc_msgSend(a1, "isTrashed", *(double *)&v14) & 1) != 0)
    goto LABEL_11;
  v15 = objc_msgSend(v9, "generalPasteboard");
  v16 = objc_msgSend(v15, "pasteboardTypes");

  v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String);
  LOBYTE(v16) = sub_1000DFDD0(0xD00000000000001DLL, 0x8000000100529DA0, v17);
  swift_bridgeObjectRelease(v17);
  v18 = v32;
  if ((v16 & 1) == 0)
  {
    v20 = swift_bridgeObjectRetain(v32);
    sub_10035EDB8(v20, (uint64_t)v7);
    v22 = v21;
    swift_bridgeObjectRelease(v18);
    v23 = *(_QWORD *)(v22 + 16);
    swift_bridgeObjectRelease(v22);
    if (!v23)
    {
      v25 = (void *)FPActionReparent;
      v26 = v32;
      swift_bridgeObjectRetain(v32);
      sub_10035F0C8(v25, a1, v26, v8, a2, a3 & 1);
      v19 = v27;
      swift_bridgeObjectRelease(v26);
      goto LABEL_12;
    }
LABEL_11:
    v19 = 0;
LABEL_12:
    v18 = v32;
    goto LABEL_13;
  }
  v19 = 0;
LABEL_13:
  swift_release(v10);
  swift_bridgeObjectRelease(v18);
  return v19;
}

uint64_t sub_10035FCB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10035FCC8()
{
  uint64_t v0;

  return sub_100352B24(*(_QWORD **)(v0 + 16));
}

uint64_t sub_10035FCE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035FCF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035FD00()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  return swift_deallocObject(v0, 88, 7);
}

double sub_10035FD54()
{
  uint64_t v0;

  return sub_100353408(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_10035FD88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035FD98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10035FDDC(uint64_t a1)
{
  uint64_t v1;

  return sub_100353500(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10035FDF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035FE14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10035FE40()
{
  uint64_t v0;
  Swift::OpaquePointer v1;

  v1._rawValue = *(void **)(v0 + 24);
  return sub_100352F2C(*(_QWORD *)(v0 + 16), v1, *(_QWORD **)(v0 + 32));
}

uint64_t sub_10035FE4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void **sub_10035FE5C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  NSString v15;
  void *v16;
  id v17;
  NSString v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  NSString v41;
  void *v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  void **v47;
  void *v49;
  void **aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  void *v53;
  void *v54;
  uint64_t v55;

  ObjectType = swift_getObjectType(a1, a2);
  v3 = DOCNode.documentAttributes.getter(ObjectType);
  if (!v3)
    return (void **)_swiftEmptyArrayStorage;
  v4 = (void *)v3;
  v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v6 = swift_allocObject(v5, 56, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9720;
  v7 = (void *)objc_opt_self(SYDocumentWorkflows);
  v8 = objc_msgSend(v7, "localizedStringShowInMail");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierReturnToDocument);
  v12 = v11;
  v13 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v54 = sub_1002FF6E0;
  v55 = 0;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_100120C10;
  v53 = &unk_1005E04F0;
  v16 = _Block_copy(&aBlock);
  v17 = objc_msgSend(v13, "initWithIdentifier:localizedTitle:unresolvedHandler:", v14, v15, v16);

  _Block_release(v16);
  swift_release(v55);
  objc_msgSend(v17, "setAvailability:", UIDocumentBrowserActionAvailabilityAttributionView);
  v18 = String._bridgeToObjectiveC()();
  v19 = (void *)objc_opt_self(UIImage);
  v20 = objc_msgSend(v19, "systemImageNamed:", v18);

  objc_msgSend(v17, "setImage:", v20);
  objc_msgSend(v17, "setSupportsMultipleItems:", 0);
  *(_QWORD *)(v6 + 32) = v17;
  v21 = objc_msgSend(v4, "sender");
  v22 = objc_msgSend(v7, "localizedStringReply:", v21);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierReplyToSender);
  v26 = v25;
  v27 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  v49 = v4;
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v54 = sub_1002FF7E8;
  v55 = 0;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_100120C10;
  v53 = &unk_1005E0518;
  v30 = _Block_copy(&aBlock);
  v31 = objc_msgSend(v27, "initWithIdentifier:localizedTitle:unresolvedHandler:", v28, v29, v30);

  _Block_release(v30);
  swift_release(v55);
  objc_msgSend(v31, "setAvailability:", UIDocumentBrowserActionAvailabilityAttributionView | 1);
  objc_msgSend(v31, "setMenuSortOrder:", 28);
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v19, "systemImageNamed:", v32);

  objc_msgSend(v31, "setImage:", v33);
  objc_msgSend(v31, "setSupportsMultipleItems:", 0);

  *(_QWORD *)(v6 + 40) = v31;
  v34 = objc_msgSend(v7, "localizedStringRemove");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v36 = v35;

  static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierRemoveCollaborationAttributes);
  v38 = v37;
  v39 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  v54 = sub_1002FFBC0;
  v55 = 0;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_100120C10;
  v53 = &unk_1005E0540;
  v42 = _Block_copy(&aBlock);
  v43 = objc_msgSend(v39, "initWithIdentifier:localizedTitle:unresolvedHandler:", v40, v41, v42);

  _Block_release(v42);
  swift_release(v55);
  objc_msgSend(v43, "setAvailability:", UIDocumentBrowserActionAvailabilityAttributionView);
  v44 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend(v19, "systemImageNamed:", v44);

  objc_msgSend(v43, "setImage:", v45);
  objc_msgSend(v43, "setSupportsMultipleItems:", 0);
  v46 = objc_msgSend(v43, "setActionStyle:", 1);
  *(_QWORD *)(v6 + 48) = v43;
  aBlock = (void **)v6;
  specialized Array._endMutation()(v46);
  v47 = aBlock;

  return v47;
}

_QWORD *sub_100360404(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  NSString v40;
  NSString v41;
  void *v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v51;
  id v52;
  void **aBlock;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;
  unint64_t v59;

  ObjectType = swift_getObjectType(a1, a2);
  v4 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    v6 = (void *)v4;
    v7 = FPItem.collaborationHighlight.getter();
    if (v7)
    {
      v8 = (void *)v7;
      v59 = (unint64_t)_swiftEmptyArrayStorage;
      if ((objc_msgSend(v6, "doc_isCollaborationInvitation") & 1) != 0)
      {
        v9 = objc_msgSend(v8, "hideContextMenu");
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v9, "identifier");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v13 = v12;

          v14 = objc_msgSend(v10, "title");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v16 = v15;

          v17 = swift_allocObject(&unk_1005E05C8, 24, 7);
          *(_QWORD *)(v17 + 16) = v10;
          v18 = objc_allocWithZone((Class)UIDocumentBrowserAction);
          v52 = v10;
          v19 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v13);
          v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v16);
          v57 = sub_100360BAC;
          v58 = v17;
          aBlock = _NSConcreteStackBlock;
          v54 = 1107296256;
          v55 = sub_100120C10;
          v56 = &unk_1005E05E0;
          v21 = _Block_copy(&aBlock);
          v22 = objc_msgSend(v18, "initWithIdentifier:localizedTitle:unresolvedHandler:", v19, v20, v21);

          _Block_release(v21);
          swift_release(v58);
          v23 = String._bridgeToObjectiveC()();
          v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

          objc_msgSend(v22, "setImage:", v24);
          objc_msgSend(v22, "setAvailability:", 1);
          objc_msgSend(v22, "setMenuSortOrder:", 27);
          objc_msgSend(v22, "setActionStyle:", 1);
          v25 = v22;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v26 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v27 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v26 >= v27 >> 1)
          {
            v51 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v26 + 1, 1);
            v26 = v51;
          }
          v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
          specialized Array._endMutation()(v28);

        }
      }
      v29 = objc_msgSend(v8, "replyContextMenuWithPresentingViewController:", a2, v52);
      if (v29)
      {
        v30 = v29;
        v31 = objc_msgSend(v29, "identifier");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v33 = v32;

        v34 = objc_msgSend(v30, "title");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v36 = v35;

        v37 = swift_allocObject(&unk_1005E0578, 24, 7);
        *(_QWORD *)(v37 + 16) = v30;
        v38 = objc_allocWithZone((Class)UIDocumentBrowserAction);
        v39 = v30;
        v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v33);
        v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v36);
        v57 = sub_100360BAC;
        v58 = v37;
        aBlock = _NSConcreteStackBlock;
        v54 = 1107296256;
        v55 = sub_100120C10;
        v56 = &unk_1005E0590;
        v42 = _Block_copy(&aBlock);
        v43 = objc_msgSend(v38, "initWithIdentifier:localizedTitle:unresolvedHandler:", v40, v41, v42);

        _Block_release(v42);
        swift_release(v58);
        v44 = String._bridgeToObjectiveC()();
        v45 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v44);

        objc_msgSend(v43, "setImage:", v45);
        objc_msgSend(v43, "setAvailability:", 1);
        objc_msgSend(v43, "setMenuSortOrder:", 28);
        v46 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v48 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v47 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v48 >= v47 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
        specialized Array._endMutation()(v49);

      }
      else
      {
        v39 = v8;
      }

      return (_QWORD *)v59;
    }
    else
    {

    }
  }
  return v5;
}

_QWORD *sub_100360954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;

  if (!((unint64_t)a1 >> 62))
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_4;
    }
    return _swiftEmptyArrayStorage;
  }
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v3);
  swift_bridgeObjectRelease(a1);
  if (v4 != 1)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    v3 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v3);
  }
  swift_bridgeObjectRelease(a1);
  ObjectType = swift_getObjectType(v3, v8);
  result = (_QWORD *)DOCNode.collaborationType.getter(ObjectType);
  if (result == 2)
  {
    result = sub_10035FE5C(v3, v11);
  }
  else
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
    if (result == 3)
      goto LABEL_12;
    result = sub_100360404(v3, a2);
  }
  v4 = (uint64_t)result;
LABEL_12:
  v21 = _swiftEmptyArrayStorage;
  if (!((unint64_t)v4 >> 62))
  {
    v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_14;
LABEL_37:
    swift_bridgeObjectRelease(v4);
    v19 = _swiftEmptyArrayStorage;
LABEL_38:
    swift_unknownObjectRelease(v3);
    return v19;
  }
LABEL_33:
  if (v4 < 0)
    v20 = v4;
  else
    v20 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v12 = _CocoaArrayWrapper.endIndex.getter(v20);
  result = (_QWORD *)swift_bridgeObjectRelease(v4);
  if (!v12)
    goto LABEL_37;
LABEL_14:
  if (v12 >= 1)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v16 = *(id *)(v4 + 8 * i + 32);
      v17 = v16;
      v18 = (unint64_t)objc_msgSend(v16, "availability");
      if ((a3 & ~v18) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v14 = v21[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
        v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v17);
        specialized ContiguousArray._endMutation()(v15);
      }
    }
    swift_bridgeObjectRelease(v4);
    v19 = v21;
    goto LABEL_38;
  }
  __break(1u);
  return result;
}

void sub_100360BB0()
{
  uint64_t v0;
  void (**v1)(void);

  v1 = (void (**)(void))objc_msgSend(*(id *)(v0 + 16), "actionBlock");
  v1[2]();
  _Block_release(v1);
}

uint64_t sub_100360BF0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100360C2C(uint64_t a1)
{
  uint64_t v1;

  return sub_10013BD90(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_100360C3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_100360C64(void *a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1003526AC(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100360C78()
{
  uint64_t v0;

  return sub_100352934(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100360C84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100360CA8()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100360CCC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100360D00()
{
  uint64_t v0;

  return sub_100354A80(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100360D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));

  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v5);
}

void sub_100360DD4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_10035458C(a1, a2, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(NSObject **)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100360E78()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360E9C()
{
  uint64_t v0;

  return sub_1003549A4(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100360EA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360EB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360ED8()
{
  uint64_t v0;

  return sub_1003549F0(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100360EE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360EF0(int a1)
{
  uint64_t v1;

  return sub_100352540(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100360F04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100360F14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100360F24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100360F68(uint64_t a1)
{
  uint64_t v1;

  sub_1004A3C14(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100360F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100364FB4(a1, a2, *(void (**)(id, char *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_100360FA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100360FCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for DOCActionToolbarItemDescriptor(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCActionToolbarItemDescriptor(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 10))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCActionToolbarItemDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_100361194(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_WORD *)(result + 8) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for DOCActionToolbarItemDescriptor()
{
  return &type metadata for DOCActionToolbarItemDescriptor;
}

id sub_1003612A8(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  v4 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  __asm { FMOV            V1.2D, #12.0 }
  *(_OWORD *)v4 = xmmword_1004E3B10;
  *((_OWORD *)v4 + 1) = _Q1;
  *((_OWORD *)v4 + 2) = xmmword_1004E3B20;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___iconImageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButtonContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___mainContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel] = a1;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateHeaderView();
  swift_retain();
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10001F9A8();

  swift_release(a1);
  return v10;
}

uint64_t sub_1003613BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BYTE v6[24];
  _OWORD v7[2];
  uint64_t v8;

  v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel);
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_beginAccess(v2 + 40, v6, 33, 0);
  swift_retain();
  sub_1000923AC((uint64_t)v7, v2 + 40);
  swift_endAccess(v6);
  v3 = *(void **)(v2 + 88);
  *(_QWORD *)(v2 + 88) = 1;
  sub_10008D9C4(v3);
  swift_release(v2);
  v4 = *(_QWORD *)(v0 + v1);
  *(_QWORD *)(v4 + 24) = 0;
  return swift_unknownObjectWeakAssign(v4 + 16, 0);
}

id sub_10036145C()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_100361470);
}

id sub_100361470(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v4);

  objc_msgSend(v2, "setFont:", v5);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v6);

  return v2;
}

id sub_1003615A4()
{
  return sub_100091260(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButton, (uint64_t (*)(void))sub_1003615B8);
}

id sub_1003615B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v14;

  v0 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  static UIButton.Configuration.plain()();

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.TitleAlignment.center(_:), v3);
  UIButton.Configuration.titleAlignment.setter(v6);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v2, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  UIButton.configuration.setter(v2);
  objc_msgSend(v12, "setDeliversTouchesForGesturesToSuperview:", 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

void sub_1003617AC()
{
  uint64_t v0;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButtonContainerView));

}

id sub_100361848()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateHeaderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t getEnumTagSinglePayload for DOCFileProviderSyncStateHeaderView.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSyncStateHeaderView.Metrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateHeaderView.Metrics()
{
  return &type metadata for DOCFileProviderSyncStateHeaderView.Metrics;
}

uint64_t sub_100361988()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003619AC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "performAction");
}

uint64_t sub_1003619C8()
{
  return 8;
}

uint64_t sub_1003619D4(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003619DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1003619F0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1003619FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD aBlock[5];
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v8 = *(NSObject **)(v1 + 32);
  v9 = swift_allocObject(&unk_1005E1368, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100363684;
  *(_QWORD *)(v9 + 24) = v1;
  aBlock[4] = sub_10010DB64;
  v13 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005E1380;
  v10 = _Block_copy(aBlock);
  v11 = v13;
  swift_retain();
  swift_retain();
  swift_release(v11);
  dispatch_sync(v8, v10);
  _Block_release(v10);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v9, "", 103, 76, 35, 1);
  swift_release(v1);
  swift_release(v9);
  if ((v8 & 1) != 0)
LABEL_5:
    __break(1u);
}

uint64_t sub_100361BA4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = type metadata accessor for OSSignpostID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_BYTE *)(a1 + 16);
  swift_beginAccess(a1 + 16, v16, 0, 0);
  v9 = *(unsigned __int8 *)(a1 + 16);
  if ((v9 & 1) == 0)
  {
    v10 = swift_beginAccess(v8, v15, 1, 0);
    *v8 = 1;
    v11 = static os_signpost_type_t.event.getter(v10);
    v12 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)(v11, &_mh_execute_header, v12, "Files-PPT", 9, 2, v7, "notify report did Load with ThumbnailPool- in group notify", 58, 2, _swiftEmptyArrayStorage);

    v13 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    a2(v13);
  }
  return v9 ^ 1u;
}

double sub_100361CEC(uint64_t a1, void (*a2)(uint64_t))
{
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double result;

  v2 = sub_100361BA4(a1, a2);
  v3 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.default.getter(v3);
  v5 = static os_log_type_t.debug.getter(v4);
  v6 = sub_10006922C((uint64_t *)&unk_100644560);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
  v8 = sub_10006A638();
  v9 = 28526;
  if ((v2 & 1) != 0)
    v9 = 7562617;
  v10 = 0xE200000000000000;
  *(_QWORD *)(v7 + 56) = &type metadata for String;
  *(_QWORD *)(v7 + 64) = v8;
  if ((v2 & 1) != 0)
    v10 = 0xE300000000000000;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  os_log(_:dso:log:type:_:)("did timeout while waiting for thumbnail completion handlers: %@", 63, 2, &_mh_execute_header, v4, v5, v7);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_100361DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  __int128 v32;
  double v33;
  id v34;
  id v35;
  id v36;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  id v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[12];
  _OWORD v85[2];
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[2];
  _QWORD *v98;
  _BYTE v99[24];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  char v114;
  _BYTE v115[201];
  char v116[24];
  char v117[40];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v117, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    swift_beginAccess(a2 + 16, v116, 0, 0);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = (_QWORD *)(a4 + 16);
      v81 = (id)objc_opt_self(DOCThumbnailGenerator);
      swift_bridgeObjectRetain(v10);
      v83 = v11 - 1;
      v13 = 32;
      v79 = a3;
      for (i = v10; ; v10 = i)
      {
        v82 = v13;
        v14 = *(_OWORD *)(v10 + v13);
        v15 = *(_OWORD *)(v10 + v13 + 32);
        v101 = *(_OWORD *)(v10 + v13 + 16);
        v102 = v15;
        v100 = v14;
        v16 = *(_OWORD *)(v10 + v13 + 48);
        v17 = *(_OWORD *)(v10 + v13 + 64);
        v18 = *(_OWORD *)(v10 + v13 + 96);
        v105 = *(_OWORD *)(v10 + v13 + 80);
        v106 = v18;
        v103 = v16;
        v104 = v17;
        v19 = *(_OWORD *)(v10 + v13 + 112);
        v20 = *(_OWORD *)(v10 + v13 + 128);
        v21 = *(_OWORD *)(v10 + v13 + 160);
        v109 = *(_OWORD *)(v10 + v13 + 144);
        v110 = v21;
        v107 = v19;
        v108 = v20;
        v22 = *(_OWORD *)(v10 + v13 + 176);
        v23 = *(_OWORD *)(v10 + v13 + 192);
        v24 = *(_OWORD *)(v10 + v13 + 208);
        v114 = *(_BYTE *)(v10 + v13 + 224);
        v112 = v23;
        v113 = v24;
        v111 = v22;
        v25 = v100;
        sub_100362EA4((uint64_t)&v100);
        sub_1002EB2E0((_QWORD *)&v100 + 1);
        sub_10010CA6C((uint64_t *)&v101);
        v26 = (void *)*((_QWORD *)&v113 + 1);
        *(_OWORD *)&v115[136] = v110;
        *(_OWORD *)&v115[152] = v111;
        *(_OWORD *)&v115[168] = v112;
        *(_OWORD *)&v115[184] = v113;
        *(_OWORD *)&v115[72] = v106;
        *(_OWORD *)&v115[88] = v107;
        *(_OWORD *)&v115[104] = v108;
        *(_OWORD *)&v115[120] = v109;
        *(_OWORD *)&v115[8] = v102;
        *(_OWORD *)&v115[24] = v103;
        *(_OWORD *)&v115[40] = v104;
        *(_OWORD *)&v115[56] = v105;
        *(_QWORD *)v115 = a3;
        v115[200] = v114;
        if (v114 == 1)
        {
          sub_100070B28((uint64_t)&v102);
          v27 = 0.0;
        }
        else
        {
          v28 = *(double *)&v105;
          if (*(double *)&v107 < *(double *)&v105)
            v28 = *(double *)&v107;
          v29 = floor(v28);
          sub_100070B28((uint64_t)&v102);
          v27 = v29 / 1.41421356;
        }
        v30 = v26;
        v31 = (id)v25;
        swift_unknownObjectRetain(*((_QWORD *)&v25 + 1));
        v32 = v105;
        objc_msgSend(v30, "displayScale");
        v34 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", a3, 1, 1, objc_msgSend(*((id *)&v25 + 1), "isFolder"), v32, v27, v33);
        v35 = objc_msgSend(v81, "sharedGenerator");
        v36 = objc_msgSend(v35, "thumbnailForNode:descriptor:", *((_QWORD *)&v25 + 1), v34);

        swift_beginAccess(v12, v99, 33, 0);
        sub_100362C30((uint64_t)v115);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
        v98 = (_QWORD *)*v12;
        v38 = v98;
        v39 = v12;
        *v12 = 0x8000000000000000;
        v41 = sub_1000667B0((uint64_t)v31);
        v42 = v38[2];
        v43 = (v40 & 1) == 0;
        v44 = v42 + v43;
        if (__OFADD__(v42, v43))
          break;
        v45 = v40;
        if (v38[3] >= v44)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1002E9E50();
        }
        else
        {
          sub_10001E3E4(v44, isUniquelyReferenced_nonNull_native);
          v46 = sub_1000667B0((uint64_t)v31);
          if ((v45 & 1) != (v47 & 1))
            goto LABEL_26;
          v41 = v46;
        }
        v96 = *(_OWORD *)&v115[160];
        v97[0] = *(_OWORD *)&v115[176];
        *(_OWORD *)((char *)v97 + 9) = *(_OWORD *)&v115[185];
        v92 = *(_OWORD *)&v115[96];
        v93 = *(_OWORD *)&v115[112];
        v94 = *(_OWORD *)&v115[128];
        v95 = *(_OWORD *)&v115[144];
        v88 = *(_OWORD *)&v115[32];
        v89 = *(_OWORD *)&v115[48];
        v90 = *(_OWORD *)&v115[64];
        v91 = *(_OWORD *)&v115[80];
        v86 = *(_OWORD *)v115;
        v87 = *(_OWORD *)&v115[16];
        if ((v45 & 1) != 0)
        {
          v48 = v98;
          v49 = v98[7] + 224 * v41;
          v50 = *(_OWORD *)(v49 + 16);
          v84[0] = *(_OWORD *)v49;
          v84[1] = v50;
          v51 = *(_OWORD *)(v49 + 80);
          v53 = *(_OWORD *)(v49 + 32);
          v52 = *(_OWORD *)(v49 + 48);
          v84[4] = *(_OWORD *)(v49 + 64);
          v84[5] = v51;
          v84[2] = v53;
          v84[3] = v52;
          v54 = *(_OWORD *)(v49 + 144);
          v56 = *(_OWORD *)(v49 + 96);
          v55 = *(_OWORD *)(v49 + 112);
          v84[8] = *(_OWORD *)(v49 + 128);
          v84[9] = v54;
          v84[6] = v56;
          v84[7] = v55;
          v58 = *(_OWORD *)(v49 + 176);
          v57 = *(_OWORD *)(v49 + 192);
          v59 = *(_OWORD *)(v49 + 160);
          *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)(v49 + 201);
          v84[11] = v58;
          v85[0] = v57;
          v84[10] = v59;
          sub_100362CFC((uint64_t *)v84);
          *(_QWORD *)v49 = *((_QWORD *)&v25 + 1);
          *(_QWORD *)(v49 + 8) = v36;
          v60 = v97[0];
          *(_OWORD *)(v49 + 176) = v96;
          *(_OWORD *)(v49 + 192) = v60;
          *(_OWORD *)(v49 + 201) = *(_OWORD *)((char *)v97 + 9);
          v61 = v93;
          *(_OWORD *)(v49 + 112) = v92;
          *(_OWORD *)(v49 + 128) = v61;
          v62 = v95;
          *(_OWORD *)(v49 + 144) = v94;
          *(_OWORD *)(v49 + 160) = v62;
          v63 = v89;
          *(_OWORD *)(v49 + 48) = v88;
          *(_OWORD *)(v49 + 64) = v63;
          v64 = v91;
          *(_OWORD *)(v49 + 80) = v90;
          *(_OWORD *)(v49 + 96) = v64;
          v65 = v87;
          *(_OWORD *)(v49 + 16) = v86;
          *(_OWORD *)(v49 + 32) = v65;
        }
        else
        {
          v48 = v98;
          v98[(v41 >> 6) + 8] |= 1 << v41;
          *(_QWORD *)(v48[6] + 8 * v41) = v25;
          v66 = v48[7] + 224 * v41;
          *(_QWORD *)v66 = *((_QWORD *)&v25 + 1);
          *(_QWORD *)(v66 + 8) = v36;
          v67 = v89;
          *(_OWORD *)(v66 + 48) = v88;
          *(_OWORD *)(v66 + 64) = v67;
          v68 = v87;
          *(_OWORD *)(v66 + 16) = v86;
          *(_OWORD *)(v66 + 32) = v68;
          v69 = v93;
          *(_OWORD *)(v66 + 112) = v92;
          *(_OWORD *)(v66 + 128) = v69;
          v70 = v91;
          *(_OWORD *)(v66 + 80) = v90;
          *(_OWORD *)(v66 + 96) = v70;
          *(_OWORD *)(v66 + 201) = *(_OWORD *)((char *)v97 + 9);
          v71 = v97[0];
          *(_OWORD *)(v66 + 176) = v96;
          *(_OWORD *)(v66 + 192) = v71;
          v72 = v95;
          *(_OWORD *)(v66 + 144) = v94;
          *(_OWORD *)(v66 + 160) = v72;
          v73 = v48[2];
          v74 = __OFADD__(v73, 1);
          v75 = v73 + 1;
          if (v74)
            goto LABEL_25;
          v48[2] = v75;
          v76 = v31;
        }
        v12 = v39;
        v77 = *v39;
        *v39 = v48;

        swift_bridgeObjectRelease(v77);
        swift_endAccess(v99);
        sub_100362BEC((uint64_t)v115);
        swift_unknownObjectRelease(*((_QWORD *)&v25 + 1));
        sub_100362F14((uint64_t)&v100);
        a3 = v79;
        if (!v83)
        {
          swift_release(v9);
          swift_bridgeObjectRelease(i);
          return;
        }
        --v83;
        v13 = v82 + 232;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      v78 = sub_10004F2F0(0, (unint64_t *)&unk_1006443F0, DOCNodeThumbnailIdentifier_ptr);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v78);
      __break(1u);
    }
    else
    {
      swift_release(v9);
    }
  }
}

uint64_t sub_100362340(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  NSObject *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _BYTE v28[201];
  uint64_t v29;
  uint64_t aBlock[3];
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;
  _OWORD v34[11];
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v5 = v4;
  v10 = *(_OWORD *)(a2 + 144);
  v44 = *(_OWORD *)(a2 + 128);
  v45 = v10;
  v46 = *(_OWORD *)(a2 + 160);
  v47 = *(_QWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 80);
  v40 = *(_OWORD *)(a2 + 64);
  v41 = v11;
  v12 = *(_OWORD *)(a2 + 112);
  v42 = *(_OWORD *)(a2 + 96);
  v43 = v12;
  v13 = *(_OWORD *)(a2 + 16);
  v36 = *(_OWORD *)a2;
  v37 = v13;
  v14 = *(_OWORD *)(a2 + 48);
  v38 = *(_OWORD *)(a2 + 32);
  v39 = v14;
  v29 = 0;
  v15 = *(NSObject **)(v5 + 32);
  v16 = (_QWORD *)swift_allocObject(&unk_1005E0EE0, 40, 7);
  v16[2] = v5;
  v16[3] = a1;
  v16[4] = &v29;
  v17 = swift_allocObject(&unk_1005E0F08, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1000665C4;
  *(_QWORD *)(v17 + 24) = v16;
  v32 = sub_10006657C;
  v33 = v17;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10006655C;
  v31 = &unk_1005E0F20;
  v18 = _Block_copy(aBlock);
  v19 = v33;
  swift_retain();
  swift_unknownObjectRetain(a1);
  swift_retain();
  swift_release(v19);
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v17, "", 103, 234, 35, 1);
  result = swift_release(v17);
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v29;
    if (v29)
    {
      swift_release(v16);
    }
    else
    {
      v22 = (unint64_t)objc_msgSend(a3, "userInterfaceStyle");
      v23 = v22;
      if (v22 >= 3)
      {
        type metadata accessor for UIUserInterfaceStyle(0);
        v31 = v25;
        aBlock[0] = v23;
        doc_warnUnrecognizedEnumValueEncountered(_:)(aBlock);
        sub_100068588(aBlock);
        v24 = 1;
      }
      else
      {
        v24 = qword_1004E3C90[v22];
      }
      *(_QWORD *)v28 = v24;
      *(_OWORD *)&v28[136] = v44;
      *(_OWORD *)&v28[152] = v45;
      *(_OWORD *)&v28[168] = v46;
      *(_OWORD *)&v28[72] = v40;
      *(_OWORD *)&v28[88] = v41;
      *(_OWORD *)&v28[104] = v42;
      *(_OWORD *)&v28[120] = v43;
      *(_OWORD *)&v28[8] = v36;
      *(_OWORD *)&v28[24] = v37;
      *(_OWORD *)&v28[40] = v38;
      *(_OWORD *)&v28[56] = v39;
      *(_QWORD *)&v28[184] = v47;
      *(_QWORD *)&v28[192] = a3;
      v28[200] = a4 & 1;
      v34[10] = *(_OWORD *)&v28[160];
      v35[0] = *(_OWORD *)&v28[176];
      v34[6] = *(_OWORD *)&v28[96];
      v34[7] = *(_OWORD *)&v28[112];
      v34[8] = *(_OWORD *)&v28[128];
      v34[9] = *(_OWORD *)&v28[144];
      v34[2] = *(_OWORD *)&v28[32];
      v34[3] = *(_OWORD *)&v28[48];
      v34[4] = *(_OWORD *)&v28[64];
      v34[5] = *(_OWORD *)&v28[80];
      v34[0] = *(_OWORD *)v28;
      v34[1] = *(_OWORD *)&v28[16];
      *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)&v28[185];
      sub_100070B28(a2);
      v26 = a3;
      sub_100362A1C(a1, v34, (uint64_t)aBlock);
      sub_100362BEC((uint64_t)v28);
      v21 = aBlock[0];
      swift_unknownObjectRetain(aBlock[0]);
      sub_10010CA6C(aBlock);
      v27 = v29;
      swift_release(v16);
      swift_unknownObjectRelease(v27);
    }
    return v21;
  }
  return result;
}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (void *)a2[2];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = (void *)a2[4];
  v8 = (void *)a2[5];
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_WORD *)(a1 + 88) = *((_WORD *)a2 + 44);
  v10 = *((_OWORD *)a2 + 9);
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 144) = v10;
  *(_QWORD *)(a1 + 160) = a2[20];
  v11 = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
  v12 = (void *)a2[25];
  *(_QWORD *)(a1 + 200) = v12;
  *(_BYTE *)(a1 + 208) = *((_BYTE *)a2 + 208);
  swift_unknownObjectRetain(v3);
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v12;
  return a1;
}

uint64_t *assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  a1[1] = a2[1];
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = (uint64_t)v6;
  v8 = v6;

  a1[3] = a2[3];
  v9 = (void *)a2[4];
  v10 = (void *)a1[4];
  a1[4] = (uint64_t)v9;
  v11 = v9;

  v12 = (void *)a2[5];
  v13 = (void *)a1[5];
  a1[5] = (uint64_t)v12;
  v14 = v12;

  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
  *((_BYTE *)a1 + 89) = *((_BYTE *)a2 + 89);
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  v15 = (void *)a2[25];
  v16 = (void *)a1[25];
  a1[25] = (uint64_t)v15;
  v17 = v15;

  *((_BYTE *)a1 + 208) = *((_BYTE *)a2 + 208);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t *assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  void *v10;

  v4 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v4);
  v5 = a2[2];
  v6 = (void *)a1[2];
  a1[1] = a2[1];
  a1[2] = v5;

  a1[3] = a2[3];
  v7 = (void *)a1[5];
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);

  a1[6] = a2[6];
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
  *((_BYTE *)a1 + 89) = *((_BYTE *)a2 + 89);
  v8 = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 7) = v8;
  v9 = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 9) = v9;
  a1[20] = a2[20];
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
  *(_OWORD *)(a1 + 23) = *(_OWORD *)(a2 + 23);
  v10 = (void *)a1[25];
  a1[25] = a2[25];

  *((_BYTE *)a1 + 208) = *((_BYTE *)a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 209))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 209) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 209) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1003629E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100362A0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100362A1C@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  uint64_t result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[32];
  _BYTE v27[25];

  *(_OWORD *)v26 = *((_OWORD *)a2 + 11);
  *(_OWORD *)&v26[9] = *(_OWORD *)((char *)a2 + 185);
  v6 = 0.0;
  v7 = *((double *)a2 + 7);
  if ((a2[25] & 1) == 0)
  {
    v8 = *((double *)a2 + 11);
    if (v8 >= v7)
      v8 = *((double *)a2 + 7);
    v6 = floor(v8) / 1.41421356;
  }
  v9 = *((double *)a2 + 8);
  objc_msgSend((id)a2[24], "displayScale", *(_OWORD *)a2, *((_OWORD *)a2 + 1), *((_OWORD *)a2 + 2), *((_OWORD *)a2 + 3), *((_OWORD *)a2 + 4), *((_OWORD *)a2 + 5), *((_OWORD *)a2 + 6), *((_OWORD *)a2 + 7), *((_OWORD *)a2 + 8), *((_OWORD *)a2 + 9), *((_OWORD *)a2 + 10), *(_QWORD *)v26, *(_QWORD *)&v26[8], *(_QWORD *)&v26[16], *(_QWORD *)&v26[24]);
  v11 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:minimumSize:scale:style:isFolded:isInteractive:isFolder:", *a2, 1, 1, objc_msgSend(a1, "isFolder"), v7, v9, v6, v10);
  v12 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
  v13 = objc_msgSend(v12, "thumbnailForNode:descriptor:", a1, v11);

  *(_OWORD *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 168) = v25;
  *(_OWORD *)(a3 + 184) = *(_OWORD *)v27;
  *(_OWORD *)(a3 + 193) = *(_OWORD *)&v27[9];
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 120) = v22;
  *(_OWORD *)(a3 + 136) = v23;
  *(_OWORD *)(a3 + 24) = v16;
  *(_OWORD *)(a3 + 40) = v17;
  *(_OWORD *)(a3 + 56) = v18;
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 8) = v15;
  result = sub_100362C30((uint64_t)a2);
  *(_QWORD *)a3 = v13;
  return result;
}

uint64_t sub_100362BEC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);

  return a1;
}

uint64_t sub_100362C30(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)(a1 + 32);
  v4 = *(void **)(a1 + 192);
  v5 = *(id *)(a1 + 8);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return a1;
}

uint64_t sub_100362C74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 232));
  return swift_deallocObject(v0, 240, 7);
}

uint64_t sub_100362CC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100362CEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_100362CFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = (void *)a1[3];
  v5 = (void *)a1[5];
  v6 = (void *)a1[6];

  swift_unknownObjectRelease(v3);
  swift_unknownObjectRelease(v2);
  return a1;
}

double sub_100362D5C(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 224) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

_QWORD *sub_100362D84(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = (void *)a1[2];
  v3 = (void *)a1[4];
  v4 = (void *)a1[5];
  v5 = (void *)a1[25];
  swift_unknownObjectRetain(*a1);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  return a1;
}

uint64_t sub_100362DD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100362DFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100362E20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100362E30()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100362E54()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_100362E88()
{
  uint64_t *v0;

  sub_100361DCC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100362E94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100362EA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v7 = *(void **)(a1 + 216);
  v8 = *(id *)a1;
  swift_unknownObjectRetain(v2);
  swift_unknownObjectRetain(v3);
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return a1;
}

uint64_t sub_100362F14(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 48);
  v7 = *(void **)(a1 + 56);

  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(v2);

  return a1;
}

void sub_100362F84(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  dispatch_group_t v14;
  NSObject *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t Strong;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  NSObject *v58;
  _QWORD *v59;
  void **aBlock;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  void *v63;
  void *v64;
  _QWORD *v65;
  char v66;

  v56 = a1;
  v47 = type metadata accessor for OSSignpostID(0);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for DispatchTime(0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v53 = (char *)&v44 - v9;
  v52 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = 0;
  v57 = a3;
  swift_retain();
  v14 = dispatch_group_create();
  v15 = *(NSObject **)(a2 + 32);
  v16 = (_QWORD *)swift_allocObject(&unk_1005E11D8, 40, 7);
  v16[2] = a2;
  v16[3] = v14;
  v16[4] = &v66;
  v17 = swift_allocObject(&unk_1005E1200, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1000A885C;
  *(_QWORD *)(v17 + 24) = v16;
  v64 = sub_10010DB64;
  v65 = (_QWORD *)v17;
  aBlock = _NSConcreteStackBlock;
  v61 = 1107296256;
  v62 = sub_10006655C;
  v63 = &unk_1005E1218;
  v18 = _Block_copy(&aBlock);
  v19 = v65;
  swift_retain();
  v58 = v14;
  swift_retain();
  swift_release(v19);
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v17, "", 103, 87, 35, 1);
  swift_release(v17);
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v66 == 1)
    {
      v21 = swift_allocObject(&unk_1005E1250, 17, 7);
      *(_BYTE *)(v21 + 16) = 0;
      v22 = (_QWORD *)swift_allocObject(&unk_1005E1278, 40, 7);
      v22[2] = v21;
      v22[3] = sub_1003635F8;
      v22[4] = v57;
      v64 = sub_1000A8704;
      v65 = v22;
      aBlock = _NSConcreteStackBlock;
      v61 = 1107296256;
      v62 = sub_10004A82C;
      v63 = &unk_1005E1290;
      v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter(v24);
      v59 = _swiftEmptyArrayStorage;
      v25 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v46 = v25;
      v26 = sub_10006922C((uint64_t *)&unk_100647540);
      v45 = v26;
      v47 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
      v27 = v11;
      v28 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v26, v47, v52, v25);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v13, v27, v56, v23);
      _Block_release(v23);
      v49 = *(_QWORD *)(v49 + 8);
      ((void (*)(char *, uint64_t))v49)(v27, v28);
      v48 = *(_QWORD *)(v48 + 8);
      ((void (*)(char *, uint64_t))v48)(v13, v55);
      swift_release(v65);
      v29 = v50;
      static DispatchTime.now()(v30);
      v31 = v53;
      + infix(_:_:)(v29, 5.0);
      v51 = *(_QWORD *)(v51 + 8);
      v32 = v54;
      ((void (*)(char *, uint64_t))v51)(v29, v54);
      v33 = (_QWORD *)swift_allocObject(&unk_1005E12C8, 40, 7);
      v33[2] = v21;
      v33[3] = sub_1003635F8;
      v34 = v57;
      v33[4] = v57;
      v64 = sub_100363654;
      v65 = v33;
      aBlock = _NSConcreteStackBlock;
      v61 = 1107296256;
      v62 = sub_10004A82C;
      v63 = &unk_1005E12E0;
      v35 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter(v36);
      v59 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v45, v47, v28, v46);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v31, v13, v27, v35);
      _Block_release(v35);

      ((void (*)(char *, uint64_t))v49)(v27, v28);
      ((void (*)(char *, uint64_t))v48)(v13, v55);
      ((void (*)(char *, uint64_t))v51)(v31, v32);
      v37 = v65;
      swift_release(v34);
      swift_release(v16);
      swift_release(v21);
      v38 = v37;
    }
    else
    {
      v39 = static os_signpost_type_t.event.getter(v20);
      v40 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
      static OSSignpostID.exclusive.getter();
      os_signpost(_:dso:log:name:signpostID:_:_:)(v39, &_mh_execute_header, v40, "Files-PPT", 9, 2, v6, "notify report did Load with ThumbnailPool- no handler", 53, 2, _swiftEmptyArrayStorage);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v47);
      v41 = v57;
      swift_beginAccess(v57 + 2, &aBlock, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v41 + 2);
      if (Strong)
      {
        v43 = Strong;
        sub_100098F90();
        swift_release(v16);

        v58 = v43;
      }
      else
      {
        swift_release(v16);
      }

      v38 = v41;
    }
    swift_release(v38);
  }
}

void sub_1003635F8()
{
  uint64_t v0;

  sub_100194B38(v0);
}

uint64_t sub_100363600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10036362C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10036363C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_100363654()
{
  uint64_t v0;

  return sub_100361CEC(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_100363660()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100363684()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 1, 0);
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_1003636C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(id *a1)
{

}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  __int128 v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  v7 = *(void **)(a2 + 192);
  *(_QWORD *)(a1 + 192) = v7;
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v7;
  return a1;
}

uint64_t assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v13 = *(void **)(a2 + 192);
  v14 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v13;
  v15 = v13;

  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  void *v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  v9 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 201))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 200) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 201) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 201) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters()
{
  return &type metadata for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters;
}

uint64_t DOCNode.newFolderButtonMode(for:)(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;

  v3 = v2;
  if (!objc_msgSend(v3, "isFolder"))
    return 2;
  v6 = objc_msgSend(a1, "identifier");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSearch);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
    goto LABEL_14;
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_15:

    return 2;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
  v9 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v17 && v9 == v18)
  {
LABEL_14:
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_15;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v9, v17, v18, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) != 0)
    goto LABEL_15;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierActivities);
  v9 = v23;
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v26 = v24;
  if (v22 == v25 && v9 == v24)
    goto LABEL_14;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v9, v25, v24, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v26);
  if ((v29 & 1) != 0)
    goto LABEL_15;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTaggedItems);
  v9 = v31;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v34 = v32;
  if (v30 == v33 && v9 == v32)
    goto LABEL_14;
  v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v9, v33, v32, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
    goto LABEL_15;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierFavoriteFolders);
  v9 = v37;
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v40 = v38;
  if (v36 == v39 && v9 == v38)
    goto LABEL_14;
  v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v9, v39, v38, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v40);
  if ((v41 & 1) != 0)
    goto LABEL_15;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
  v9 = v43;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v46 = v44;
  if (v42 == v45 && v9 == v44)
    goto LABEL_14;
  v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v9, v45, v44, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v46);
  if ((v47 & 1) != 0)
    goto LABEL_15;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTrashedItems);
  v50 = v49;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v48 == v52 && v50 == v51)
  {

    v27 = 2;
    swift_bridgeObjectRelease_n(v50, 2);
    return v27;
  }
  v53 = v48;
  v54 = v51;
  v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v50, v52, v51, 0);

  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v54);
  if ((v55 & 1) == 0 && (objc_msgSend(v3, "isTrashed") & 1) == 0)
  {
    v56 = type metadata accessor for DOCActionManager();
    return sub_100359064(v3, v56, a2) & 1;
  }
  return 2;
}

void FPItem.createDOCItemBookmark(bookmark:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v10 = (_QWORD *)swift_allocObject(&unk_1005E1440, 56, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = v4;
  v14[4] = sub_100360C70;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100175118;
  v14[3] = &unk_1005E1458;
  v11 = _Block_copy(v14);
  v12 = v15;
  swift_bridgeObjectRetain(a2);
  v13 = v4;
  swift_retain();
  objc_msgSend(v9, "fetchURLForItem:completionHandler:", v13, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

}

uint64_t NSURL.bumpLastOpenDate(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v2);
  URL.bumpLastOpenDate(delay:completionHandler:)(a1, a2, 0.0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t NSURL.fetchItem(bumpLastOpenDate:configuration:completionHandler:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v19;

  v5 = v4;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v15 = swift_allocObject(&unk_1005E1490, 41, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  *(_QWORD *)(v15 + 32) = a2;
  *(_BYTE *)(v15 + 40) = a1;
  swift_retain();
  v16 = a2;
  FPItemManager.doc_fetchItem(for:completionHandler:)(v13, sub_1003656E0, v15);

  v17 = swift_release(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v17);
}

void sub_100364234(void *a1, uint64_t a2, void (*a3)(_QWORD, uint64_t, double), uint64_t a4, void *a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = a1;
    v18 = objc_msgSend(a5, "interactionModeForPreparing");
    if (v18 && (v18 = objc_msgSend(a5, "neverCreateBookmarkForOpenInPlace"), (v18 & 1) == 0))
    {
      v28 = objc_msgSend(a5, "hostIdentifier");
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v20 = v29;

      if ((a6 & 1) == 0)
        goto LABEL_6;
    }
    else
    {
      v19 = 0;
      v20 = 0;
      if ((a6 & 1) == 0)
      {
LABEL_6:
        v21 = swift_allocObject(&unk_1005E16A0, 32, 7);
        *(_QWORD *)(v21 + 16) = a3;
        *(_QWORD *)(v21 + 24) = a4;
        v22 = (void *)objc_opt_self(FPItemManager);
        v23 = objc_msgSend(v22, "defaultManager", swift_retain().n128_f64[0]);
        v24 = (_QWORD *)swift_allocObject(&unk_1005E16C8, 56, 7);
        v24[2] = sub_100365AA0;
        v24[3] = v21;
        v24[4] = v19;
        v24[5] = v20;
        v24[6] = v17;
        aBlock[4] = sub_100360C70;
        v31 = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100175118;
        aBlock[3] = &unk_1005E16E0;
        v25 = _Block_copy(aBlock);
        v26 = v31;
        swift_bridgeObjectRetain(v20);
        v27 = v17;
        swift_retain();
        objc_msgSend(v23, "fetchURLForItem:completionHandler:", v27, v25, swift_release(v26).n128_f64[0]);
        _Block_release(v25);

        swift_bridgeObjectRelease(v20);
        swift_release(v21);

        return;
      }
    }
    Date.init()(v18);
    FPItem.setLastOpenDate(_:delay:)(v16, 0.0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  a3(0, a2, v14);
}

void sub_100364488(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;

  if (a3)
  {
    a4(0, a3);
  }
  else if (a1)
  {
    v11 = a1;
    a4(a1, 0);

  }
  else
  {
    type metadata accessor for UIDocumentBrowserError(0);
    v7 = v6;
    v12 = 1;
    v8 = sub_1003653FC((uint64_t)_swiftEmptyArrayStorage);
    v9 = sub_100365AAC();
    _BridgedStoredNSError.init(_:userInfo:)(&v13, &v12, v8, v7, v9);
    v10 = v13;
    a4(0, (uint64_t)v13);

  }
}

void URL.createDOCItemBookmark(bookmark:fpItem:completion:)(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id, char *, _QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSURL *v16;
  void *v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  id v28;
  id v29;
  NSURL *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void (*v35)(id, char *, _QWORD);
  _QWORD aBlock[5];
  uint64_t v37;

  v35 = a4;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v16);
    v18 = v17;
    v19 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v12);
    v20 = *(unsigned __int8 *)(v13 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_1005E14B8, v22 + 8, v20 | 7);
    *(_QWORD *)(v23 + 16) = v35;
    *(_QWORD *)(v23 + 24) = a5;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23 + v21, v15, v12);
    *(_QWORD *)(v23 + v22) = a3;
    aBlock[4] = sub_100365780;
    v37 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005E14D0;
    v24 = _Block_copy(aBlock);
    v25 = v37;
    v26 = a3;
    swift_retain();
    v27 = swift_release(v25);
    FPExtendBookmarkForDocumentURL(v18, v19, v24, v27);
    _Block_release(v24);

  }
  else
  {
    v28 = objc_allocWithZone((Class)DOCItemBookmark);
    v29 = a3;
    URL._bridgeToObjectiveC()(v30);
    v32 = v31;
    v33 = objc_msgSend(v28, "initWithURL:fileProviderItem:", v31, v29);

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, v5, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    v35(v33, v11, 0);

    sub_100157D6C((uint64_t)v11);
  }
}

void sub_100364930(uint64_t a1, void *a2, void (*a3)(_QWORD, uint64_t, _QWORD), uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, uint64_t, _QWORD);
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void (*v53)(char *, uint64_t, uint64_t);
  NSString v54;
  id v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  os_log_t v74;
  int v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  void (*v82)(_QWORD, uint64_t, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v79 = a6;
  v83 = a5;
  v81 = a4;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v80 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v74 - v16;
  v18 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v82 = a3;
  if (a2)
  {
    v25 = Logger.Picker.unsafeMutableAddressor(v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v25, v18);
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v79(v14, v83, v11);
    v26 = a2;
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc(22, -1);
      v77 = (char *)v18;
      v78 = v19;
      v75 = v29;
      v31 = v30;
      v32 = (uint64_t *)swift_slowAlloc(8, -1);
      v76 = swift_slowAlloc(32, -1);
      v85 = v76;
      *(_DWORD *)v31 = 138412546;
      v74 = v27;
      URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
      v34 = v33;
      v84 = v33;
      v35 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
      *v32 = v34;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v35);
      *(_WORD *)(v31 + 12) = 2080;
      v84 = (uint64_t)a2;
      v36 = v26;
      v37 = sub_10006922C(&qword_10064FFC0);
      v38 = String.init<A>(describing:)(&v84, v37);
      v40 = v39;
      v84 = sub_1000544FC(v38, v39, &v85);
      v41 = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);

      swift_bridgeObjectRelease(v40);
      v42 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v75, "Error while extending bookmark for %@ with error %s", (uint8_t *)v31, 0x16u);
      v43 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v32, 1, v43);
      swift_slowDealloc(v32, -1, -1);
      v44 = v76;
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      (*(void (**)(char *, char *))(v78 + 8))(v21, v77);
      v45 = v82;
      v46 = (uint64_t)v80;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      v45 = v82;
      v46 = (uint64_t)v80;
      v41 = v83;
    }
    v79((char *)v46, v41, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v46, 0, 1, v11);
    v45(0, v46, 0);
    sub_100157D6C(v46);
  }
  else
  {
    v47 = v79;
    v78 = v19;
    v48 = v83;
    v49 = v11;
    if (a1)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v51 = v50;
      v52 = objc_allocWithZone((Class)DOCItemBookmark);
      v53 = v47;
      v54 = String._bridgeToObjectiveC()();
      v55 = objc_msgSend(v52, "initWithBookmarkableString:fileProviderItem:", v54, v53, swift_bridgeObjectRelease(v51).n128_f64[0]);

      v56 = (uint64_t)v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v80, v48, v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v56, 0, 1, v11);
      v57 = v55;
      v82(v55, v56, 0);

      sub_100157D6C(v56);
      URL.stopAccessingSecurityScopedResource()();

      return;
    }
    v58 = (char *)&v74 - v24;
    v59 = Logger.Picker.unsafeMutableAddressor(v23);
    v60 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v58, v59, v18);
    v61 = v12;
    v62 = v49;
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v79)(v17, v48, v49);
    v77 = v58;
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v76 = (uint64_t)v64;
      v66 = (uint8_t *)swift_slowAlloc(12, -1);
      v67 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v66 = 138412290;
      URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
      v69 = v68;
      v85 = v68;
      v60 = v18;
      v61 = v12;
      v70 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86);
      *v67 = v69;
      v64 = v76;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v17, v49, v70);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "bookmark for %@ is nil", v66, 0xCu);
      v71 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v67, 1, v71);
      swift_slowDealloc(v67, -1, -1);
      v72 = v66;
      v62 = v49;
      swift_slowDealloc(v72, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v49);
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v60);
    v73 = (uint64_t)v80;
    v79(v80, v83, v62);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v73, 0, 1, v62);
    v82(0, v73, 0);
    sub_100157D6C(v73);
  }
  URL.stopAccessingSecurityScopedResource()();
}

uint64_t sub_100364FB4(uint64_t a1, uint64_t a2, void (*a3)(id, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(id, char *, uint64_t);
  uint64_t v57;
  _QWORD v58[3];
  char v59[8];
  uint64_t v60;

  v51 = a7;
  v52 = a5;
  v53 = a6;
  v55 = a4;
  v56 = a3;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v51 - v14;
  v16 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v16);
  v54 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - v19;
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v53 = v22;
    v26 = Logger.Picker.unsafeMutableAddressor(v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v9);
    swift_errorRetain(a2);
    v27 = swift_errorRetain(a2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    v30 = v9;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v52 = v30;
      v33 = v32;
      v60 = v32;
      *(_DWORD *)v31 = 136315138;
      v51 = v31 + 4;
      swift_getErrorValue(a2, v59, v58);
      v34 = Error.localizedDescription.getter(v58[1], v58[2]);
      v36 = v35;
      v57 = sub_1000544FC(v34, v35, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58);
      swift_bridgeObjectRelease(v36);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error while fetching item : %s", v31, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v52);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v47 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v54, 1, 1, v21);
    v48 = (char *)v47;
    v49 = a2;
  }
  else
  {
    v37 = v52;
    v38 = v53;
    sub_1000271D4(a1, (uint64_t)v20, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, v21);
      URL.createDOCItemBookmark(bookmark:fpItem:completion:)(v37, v38, v51, v56, v55);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    }
    v39 = sub_100157D6C((uint64_t)v20);
    v40 = Logger.Picker.unsafeMutableAddressor(v39);
    v41 = v9;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v40, v9);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Error while fetching item URL is nil", v45, 2u);
      v46 = v45;
      v41 = v9;
      swift_slowDealloc(v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v41);
    v47 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v54, 1, 1, v21);
    v48 = (char *)v47;
    v49 = 0;
  }
  v56(0, v48, v49);
  return sub_100157D6C(v47);
}

unint64_t sub_1003653FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_1006533B0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000271D4(v7, (uint64_t)&v16, &qword_10064FFC8);
    v8 = v16;
    v9 = v17;
    result = sub_100365530(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100079B28(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100365530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100365594(a1, a2, v5);
}

unint64_t sub_100365594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_1003656E0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100364234(a1, a2, *(void (**)(_QWORD, uint64_t, double))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t sub_1003656F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100365780(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_100364930(a1, a2, *(void (**)(_QWORD, uint64_t, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(void (**)(char *, uint64_t, uint64_t))(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t getEnumTagSinglePayload for BookmarkInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BookmarkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookmarkInfo()
{
  return &type metadata for BookmarkInfo;
}

uint64_t getEnumTagSinglePayload for DOCButtonMode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003658E8 + 4 * byte_1004E3CA8[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for DOCButtonMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003659A0 + 4 * byte_1004E3CB2[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003659D4 + 4 * byte_1004E3CAD[v5]))();
}

uint64_t sub_1003659D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003659DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003659E4);
  return result;
}

uint64_t sub_1003659F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003659F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003659FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100365A04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCButtonMode()
{
  return &type metadata for DOCButtonMode;
}

uint64_t sub_100365A20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100365A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003A2B34(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100365A50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100365A7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100365AA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100364488(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16));
}

unint64_t sub_100365AAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100641E00;
  if (!qword_100641E00)
  {
    type metadata accessor for UIDocumentBrowserError(255);
    result = swift_getWitnessTable(&unk_1004D905C, v1);
    atomic_store(result, (unint64_t *)&qword_100641E00);
  }
  return result;
}

Class sub_100365B04()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  Class result;
  Class v18;
  Class isa;
  _QWORD v21[5];

  v1 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C((uint64_t *)&unk_100651B60);
  __chkstk_darwin(v5);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter(v21, v10);
  if (v21[3])
  {
    v13 = sub_10006922C(&qword_10064FFD0);
    v14 = swift_dynamicCast(v7, v21, v13, v8, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v14 ^ 1u, 1, v8);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if ((_DWORD)v15 != 1)
    {
      v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v21, &qword_100651B70);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  static UIListContentConfiguration.cell()(v15);
  v16 = sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100651B60);
LABEL_6:
  UIListContentConfiguration.imageProperties.getter(v16);
  result = (Class)objc_msgSend(v0, "tintColor");
  if (result)
  {
    v18 = result;
    isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)result).super.isa;

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return isa;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100365D14()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100365D44()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t static FavoriteFolderOperation.typeDisplayRepresentation.getter()
{
  return TypeDisplayRepresentation.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
}

_UNKNOWN **static FavoriteFolderOperation.allCases.getter()
{
  return &off_1005C09D0;
}

uint64_t FavoriteFolderOperation.rawValue.getter(char a1)
{
  if (!a1)
    return 0x657469726F766166;
  if (a1 == 1)
    return 0x69726F7661666E75;
  return 0x656C67676F74;
}

uint64_t sub_100365DFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10039D954(*a1, *a2);
}

Swift::Int sub_100365E08()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xEA00000000006574;
  v3 = 0x69726F7661666E75;
  if (v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x657469726F766166;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100365EA8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xEA00000000006574;
  v3 = 0x69726F7661666E75;
  if (*v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x657469726F766166;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100365F24(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xEA00000000006574;
  v4 = 0x69726F7661666E75;
  if (v2 != 1)
  {
    v4 = 0x656C67676F74;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x657469726F766166;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100365FC0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s5Files23FavoriteFolderOperationO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100365FEC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xEA00000000006574;
  v5 = 0x69726F7661666E75;
  if (v2 != 1)
  {
    v5 = 0x656C67676F74;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657469726F766166;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_10036604C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005C09F8;
}

uint64_t sub_10036605C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368DE8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100366094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100368D64();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003660CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672C30);
  sub_10007E788(v10, (uint64_t)qword_100672C30);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xEF7265646C6F4620);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_FOLDER_INTENT_TITLE", 28, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Favorite Folder intent", 36, v13);
}

uint64_t sub_100366278()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10006922C(&qword_100650090);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100650098);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10030CC24();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 2, &type metadata for FavoriteFoldersIntent, v6);
  v7._object = (void *)0x800000010052A840;
  v7._countAndFlagsBits = 0xD000000000000025;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E40B8);
  v9 = sub_10006922C(&qword_1006500A0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_1004E40E0);
  v12 = sub_10006922C(&qword_1006500A8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for FavoriteFoldersIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for FavoriteFoldersIntent, v6);
}

uint64_t sub_100366434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3[72] = a3;
  v3[71] = a2;
  v3[70] = a1;
  v4 = type metadata accessor for DOCFileEntity(0);
  v3[73] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[74] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[75] = swift_task_alloc(v6);
  v3[76] = swift_task_alloc(v6);
  v3[77] = swift_task_alloc(v6);
  v7 = sub_10006922C(&qword_100650078);
  v3[78] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[79] = v8;
  v3[80] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C(&qword_100650080) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[81] = swift_task_alloc(v9);
  v3[82] = swift_task_alloc(v9);
  v3[83] = swift_task_alloc(v9);
  v3[84] = swift_task_alloc(v9);
  v3[85] = swift_task_alloc(v9);
  v3[86] = swift_task_alloc(v9);
  return swift_task_switch(sub_100366548, 0, 0);
}

_QWORD *sub_100366548()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)();
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = (_OWORD *)(v0 + 568);
  v3 = *(_QWORD *)(v0 + 568);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 528));
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 696) = v5;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(v0 + 464) = v3;
  *(_QWORD *)(v0 + 472) = v1;
  v6 = sub_1003690EC();
  *(_QWORD *)(v0 + 704) = v6;
  v7 = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v6);
  objc_msgSend(v7, "setTotalUnitCount:", 0);

  if (!v5)
  {
    *(_OWORD *)(v0 + 480) = *v2;
LABEL_23:
    v54 = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v6);
    v55 = *(_QWORD *)(v0 + 688);
    v56 = *(_QWORD *)(v0 + 680);
    v57 = *(_QWORD *)(v0 + 672);
    v58 = *(_QWORD *)(v0 + 664);
    v59 = *(_QWORD *)(v0 + 656);
    v60 = *(_QWORD *)(v0 + 648);
    v61 = *(_QWORD *)(v0 + 640);
    v76 = *(_QWORD *)(v0 + 616);
    v77 = *(_QWORD *)(v0 + 608);
    v79 = *(_QWORD *)(v0 + 600);
    objc_msgSend(v54, "setTotalUnitCount:", 100);

    static IntentResult.result<>()(v62);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    return (_QWORD *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 940));
  if (!*(_BYTE *)(v0 + 940))
  {
    result = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 544));
    v18 = *(_QWORD *)(v0 + 544);
    *(_QWORD *)(v0 + 712) = v18;
    v19 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v0 + 720) = v19;
    if (v19)
    {
      if (!*(_QWORD *)(v18 + 16))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v20 = *(_QWORD **)(v0 + 680);
      v21 = *(_QWORD *)(v0 + 632);
      v22 = *(_QWORD *)(v0 + 624);
      v23 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80);
      v24 = *(_QWORD *)(v0 + 640) + *(int *)(v22 + 48);
      sub_1000EACB4(v18 + ((v23 + 32) & ~v23), v24);
      v25 = (uint64_t)v20 + *(int *)(v22 + 48);
      *v20 = 0;
      sub_10011154C(v24, v25);
      v26 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 624));
      v26 = *(_QWORD *)(v0 + 720);
    }
    v36 = (_QWORD *)(v0 + 712);
    *(_QWORD *)(v0 + 728) = v26;
    v44 = *(_QWORD *)(v0 + 688);
    v45 = *(_QWORD *)(v0 + 632);
    v46 = *(_QWORD *)(v0 + 624);
    sub_100369130(*(_QWORD *)(v0 + 680), v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v44, 1, v46) != 1)
    {
      v47 = *(_QWORD **)(v0 + 688);
      v48 = *(_QWORD *)(v0 + 624);
      v49 = *(_QWORD *)(v0 + 616);
      *(_QWORD *)(v0 + 736) = *v47;
      v50 = sub_10011154C((uint64_t)v47 + *(int *)(v48 + 48), v49);
      static Task<>.checkCancellation()(v50);
      *(_QWORD *)(v0 + 744) = 0;
      v72 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 752) = static MainActor.shared.getter(v72);
      v68 = dispatch thunk of Actor.unownedExecutor.getter(v72, &protocol witness table for MainActor);
      v70 = v73;
      *(_QWORD *)(v0 + 760) = v68;
      *(_QWORD *)(v0 + 768) = v73;
      v71 = sub_100366C08;
      return (_QWORD *)swift_task_switch(v71, v68, v70);
    }
    goto LABEL_22;
  }
  if (*(_BYTE *)(v0 + 940) == 1)
  {
    result = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 552));
    v9 = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 784) = v9;
    v10 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v0 + 792) = v10;
    if (!v10)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 664), 1, 1, *(_QWORD *)(v0 + 624));
      v17 = *(_QWORD *)(v0 + 792);
LABEL_15:
      v36 = (_QWORD *)(v0 + 784);
      *(_QWORD *)(v0 + 800) = v17;
      v37 = *(_QWORD *)(v0 + 672);
      v38 = *(_QWORD *)(v0 + 632);
      v39 = *(_QWORD *)(v0 + 624);
      sub_100369130(*(_QWORD *)(v0 + 664), v37);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v39) != 1)
      {
        v40 = *(_QWORD **)(v0 + 672);
        v41 = *(_QWORD *)(v0 + 624);
        v42 = *(_QWORD *)(v0 + 608);
        *(_QWORD *)(v0 + 808) = *v40;
        v43 = sub_10011154C((uint64_t)v40 + *(int *)(v41 + 48), v42);
        static Task<>.checkCancellation()(v43);
        *(_QWORD *)(v0 + 816) = 0;
        v67 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 824) = static MainActor.shared.getter(v67);
        v68 = dispatch thunk of Actor.unownedExecutor.getter(v67, &protocol witness table for MainActor);
        v70 = v69;
        *(_QWORD *)(v0 + 832) = v68;
        *(_QWORD *)(v0 + 840) = v69;
        v71 = sub_10036711C;
        return (_QWORD *)swift_task_switch(v71, v68, v70);
      }
      goto LABEL_22;
    }
    if (*(_QWORD *)(v9 + 16))
    {
      v11 = *(_QWORD **)(v0 + 664);
      v12 = *(_QWORD *)(v0 + 632);
      v13 = *(_QWORD *)(v0 + 624);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80);
      v15 = *(_QWORD *)(v0 + 640) + *(int *)(v13 + 48);
      sub_1000EACB4(v9 + ((v14 + 32) & ~v14), v15);
      v16 = (uint64_t)v11 + *(int *)(v13 + 48);
      *v11 = 0;
      sub_10011154C(v15, v16);
      v17 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v13);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_27;
  }
  result = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 536));
  v27 = *(_QWORD *)(v0 + 536);
  *(_QWORD *)(v0 + 856) = v27;
  v28 = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v0 + 864) = v28;
  if (!v28)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 648), 1, 1, *(_QWORD *)(v0 + 624));
    v35 = *(_QWORD *)(v0 + 864);
LABEL_21:
    v36 = (_QWORD *)(v0 + 856);
    *(_QWORD *)(v0 + 872) = v35;
    v51 = *(_QWORD *)(v0 + 656);
    v52 = *(_QWORD *)(v0 + 632);
    v53 = *(_QWORD *)(v0 + 624);
    sub_100369130(*(_QWORD *)(v0 + 648), v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v51, 1, v53) != 1)
    {
      v63 = *(_QWORD **)(v0 + 656);
      v64 = *(_QWORD *)(v0 + 624);
      v65 = *(_QWORD *)(v0 + 600);
      *(_QWORD *)(v0 + 880) = *v63;
      v66 = sub_10011154C((uint64_t)v63 + *(int *)(v64 + 48), v65);
      static Task<>.checkCancellation()(v66);
      *(_QWORD *)(v0 + 888) = 0;
      v74 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 896) = static MainActor.shared.getter(v74);
      v68 = dispatch thunk of Actor.unownedExecutor.getter(v74, &protocol witness table for MainActor);
      v70 = v75;
      *(_QWORD *)(v0 + 904) = v68;
      *(_QWORD *)(v0 + 912) = v75;
      v71 = sub_100367630;
      return (_QWORD *)swift_task_switch(v71, v68, v70);
    }
LABEL_22:
    v6 = *(_QWORD *)(v0 + 704);
    v78 = *v2;
    swift_bridgeObjectRelease(*v36);
    *(_OWORD *)(v0 + 496) = v78;
    goto LABEL_23;
  }
  if (*(_QWORD *)(v27 + 16))
  {
    v29 = *(_QWORD **)(v0 + 648);
    v30 = *(_QWORD *)(v0 + 632);
    v31 = *(_QWORD *)(v0 + 624);
    v32 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80);
    v33 = *(_QWORD *)(v0 + 640) + *(int *)(v31 + 48);
    sub_1000EACB4(v27 + ((v32 + 32) & ~v32), v33);
    v34 = (uint64_t)v29 + *(int *)(v31 + 48);
    *v29 = 0;
    sub_10011154C(v33, v34);
    v35 = 1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v31);
    goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100366C08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = v0[77];
  v2 = v0[73];
  v3 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
  v0[97] = v3;
  v4 = *(_QWORD *)(v1 + *(int *)(v2 + 28));
  v0[23] = (char *)v0 + 937;
  v0[18] = v0;
  v0[19] = sub_100366CE8;
  v0[53] = swift_continuation_init(v0 + 18, 0);
  v0[49] = _NSConcreteStackBlock;
  v0[50] = 0x40000000;
  v0[51] = sub_100367E08;
  v0[52] = &unk_1005E1860;
  objc_msgSend(v3, "addFavorite:completion:", v4, v0 + 49);
  return swift_continuation_await(v0 + 18);
}

uint64_t sub_100366CE8()
{
  uint64_t v0;

  return swift_task_switch(sub_100366D30, *(_QWORD *)(*(_QWORD *)v0 + 760), *(_QWORD *)(*(_QWORD *)v0 + 768));
}

uint64_t sub_100366D30()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 776);
  swift_release(*(_QWORD *)(v0 + 752));

  return swift_task_switch(sub_100366D74, 0, 0);
}

void *sub_100366D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 568);
  result = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v2);
  v4 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  v6 = *(_QWORD *)(v0 + 616);
  objc_msgSend(result, "setTotalUnitCount:", v4 / *(_QWORD *)(v0 + 696));

  result = (void *)sub_1000EACF8(v6);
  v7 = *(_QWORD *)(v0 + 744);
  v8 = *(_QWORD *)(v0 + 728);
  if (v8 != *(_QWORD *)(v0 + 720))
  {
    v10 = *(_QWORD *)(v0 + 712);
    if (v8 < *(_QWORD *)(v10 + 16))
    {
      v11 = *(unint64_t **)(v0 + 680);
      v12 = *(_QWORD *)(v0 + 632);
      v13 = *(_QWORD *)(v0 + 624);
      v9 = v8 + 1;
      v14 = *(_QWORD *)(v0 + 640) + *(int *)(v13 + 48);
      sub_1000EACB4(v10+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 592) + 72) * v8, v14);
      v15 = (uint64_t)v11 + *(int *)(v13 + 48);
      *v11 = v8;
      sub_10011154C(v14, v15);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v13);
      goto LABEL_6;
    }
LABEL_13:
    __break(1u);
    return result;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 680), 1, 1, *(_QWORD *)(v0 + 624));
  v9 = *(_QWORD *)(v0 + 720);
LABEL_6:
  *(_QWORD *)(v0 + 728) = v9;
  v16 = *(_QWORD *)(v0 + 688);
  v17 = *(_QWORD *)(v0 + 632);
  v18 = *(_QWORD *)(v0 + 624);
  sub_100369130(*(_QWORD *)(v0 + 680), v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) == 1)
  {
    v19 = *(_QWORD *)(v0 + 704);
    v49 = *(_OWORD *)(v0 + 568);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 712));
    *(_OWORD *)(v0 + 496) = v49;
    v20 = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v19);
    v21 = *(_QWORD *)(v0 + 688);
    v22 = *(_QWORD *)(v0 + 680);
    v23 = *(_QWORD *)(v0 + 672);
    v24 = *(_QWORD *)(v0 + 664);
    v25 = *(_QWORD *)(v0 + 656);
    v26 = *(_QWORD *)(v0 + 648);
    v27 = *(_QWORD *)(v0 + 640);
    v45 = *(_QWORD *)(v0 + 616);
    v47 = *(_QWORD *)(v0 + 608);
    *(_QWORD *)&v49 = *(_QWORD *)(v0 + 600);
    objc_msgSend(v20, "setTotalUnitCount:", 100);

    static IntentResult.result<>()(v28);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v30 = *(_QWORD **)(v0 + 688);
  v31 = *(_QWORD *)(v0 + 624);
  v32 = *(_QWORD *)(v0 + 616);
  *(_QWORD *)(v0 + 736) = *v30;
  v33 = sub_10011154C((uint64_t)v30 + *(int *)(v31 + 48), v32);
  static Task<>.checkCancellation()(v33);
  *(_QWORD *)(v0 + 744) = v7;
  if (v7)
  {
    v34 = *(_QWORD *)(v0 + 712);
    v35 = *(_QWORD *)(v0 + 616);
    v36 = *(_QWORD *)(v0 + 688);
    v37 = *(_QWORD *)(v0 + 680);
    v38 = *(_QWORD *)(v0 + 672);
    v39 = *(_QWORD *)(v0 + 664);
    v40 = *(_QWORD *)(v0 + 656);
    v41 = *(_QWORD *)(v0 + 648);
    v46 = *(_QWORD *)(v0 + 640);
    v48 = *(_QWORD *)(v0 + 608);
    v50 = *(_QWORD *)(v0 + 600);
    sub_1000EACF8(v35);
    swift_bridgeObjectRelease(v34);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v46);
    swift_task_dealloc(v35);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v42 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 752) = static MainActor.shared.getter(v42);
  v43 = dispatch thunk of Actor.unownedExecutor.getter(v42, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 760) = v43;
  *(_QWORD *)(v0 + 768) = v44;
  return (void *)swift_task_switch(sub_100366C08, v43, v44);
}

uint64_t sub_10036711C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = v0[76];
  v2 = v0[73];
  v3 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
  v0[106] = v3;
  v4 = *(_QWORD *)(v1 + *(int *)(v2 + 28));
  v0[31] = v0 + 117;
  v0[26] = v0;
  v0[27] = sub_1003671FC;
  v0[38] = swift_continuation_init(v0 + 26, 0);
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_100367E08;
  v0[37] = &unk_1005E1848;
  objc_msgSend(v3, "removeFavorite:completion:", v4, v0 + 34);
  return swift_continuation_await(v0 + 26);
}

uint64_t sub_1003671FC()
{
  uint64_t v0;

  return swift_task_switch(sub_100367244, *(_QWORD *)(*(_QWORD *)v0 + 832), *(_QWORD *)(*(_QWORD *)v0 + 840));
}

uint64_t sub_100367244()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 848);
  swift_release(*(_QWORD *)(v0 + 824));

  return swift_task_switch(sub_100367288, 0, 0);
}

void *sub_100367288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(_QWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 568);
  result = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v2);
  v4 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  v6 = *(_QWORD *)(v0 + 608);
  objc_msgSend(result, "setTotalUnitCount:", v4 / *(_QWORD *)(v0 + 696));

  result = (void *)sub_1000EACF8(v6);
  v7 = *(_QWORD *)(v0 + 816);
  v8 = *(_QWORD *)(v0 + 800);
  if (v8 != *(_QWORD *)(v0 + 792))
  {
    v10 = *(_QWORD *)(v0 + 784);
    if (v8 < *(_QWORD *)(v10 + 16))
    {
      v11 = *(unint64_t **)(v0 + 664);
      v12 = *(_QWORD *)(v0 + 632);
      v13 = *(_QWORD *)(v0 + 624);
      v9 = v8 + 1;
      v14 = *(_QWORD *)(v0 + 640) + *(int *)(v13 + 48);
      sub_1000EACB4(v10+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 592) + 72) * v8, v14);
      v15 = (uint64_t)v11 + *(int *)(v13 + 48);
      *v11 = v8;
      sub_10011154C(v14, v15);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v13);
      goto LABEL_6;
    }
LABEL_13:
    __break(1u);
    return result;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 664), 1, 1, *(_QWORD *)(v0 + 624));
  v9 = *(_QWORD *)(v0 + 792);
LABEL_6:
  *(_QWORD *)(v0 + 800) = v9;
  v16 = *(_QWORD *)(v0 + 672);
  v17 = *(_QWORD *)(v0 + 632);
  v18 = *(_QWORD *)(v0 + 624);
  sub_100369130(*(_QWORD *)(v0 + 664), v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) == 1)
  {
    v19 = *(_QWORD *)(v0 + 704);
    v49 = *(_OWORD *)(v0 + 568);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 784));
    *(_OWORD *)(v0 + 496) = v49;
    v20 = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v19);
    v21 = *(_QWORD *)(v0 + 688);
    v22 = *(_QWORD *)(v0 + 680);
    v23 = *(_QWORD *)(v0 + 672);
    v24 = *(_QWORD *)(v0 + 664);
    v25 = *(_QWORD *)(v0 + 656);
    v26 = *(_QWORD *)(v0 + 648);
    v27 = *(_QWORD *)(v0 + 640);
    v45 = *(_QWORD *)(v0 + 616);
    v47 = *(_QWORD *)(v0 + 608);
    *(_QWORD *)&v49 = *(_QWORD *)(v0 + 600);
    objc_msgSend(v20, "setTotalUnitCount:", 100);

    static IntentResult.result<>()(v28);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v30 = *(_QWORD **)(v0 + 672);
  v31 = *(_QWORD *)(v0 + 624);
  v32 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 808) = *v30;
  v33 = sub_10011154C((uint64_t)v30 + *(int *)(v31 + 48), v32);
  static Task<>.checkCancellation()(v33);
  *(_QWORD *)(v0 + 816) = v7;
  if (v7)
  {
    v34 = *(_QWORD *)(v0 + 784);
    v35 = *(_QWORD *)(v0 + 608);
    v36 = *(_QWORD *)(v0 + 688);
    v37 = *(_QWORD *)(v0 + 680);
    v38 = *(_QWORD *)(v0 + 672);
    v39 = *(_QWORD *)(v0 + 664);
    v40 = *(_QWORD *)(v0 + 656);
    v41 = *(_QWORD *)(v0 + 648);
    v46 = *(_QWORD *)(v0 + 640);
    v48 = *(_QWORD *)(v0 + 616);
    v50 = *(_QWORD *)(v0 + 600);
    sub_1000EACF8(v35);
    swift_bridgeObjectRelease(v34);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v35);
    swift_task_dealloc(v50);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v42 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 824) = static MainActor.shared.getter(v42);
  v43 = dispatch thunk of Actor.unownedExecutor.getter(v42, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 832) = v43;
  *(_QWORD *)(v0 + 840) = v44;
  return (void *)swift_task_switch(sub_10036711C, v43, v44);
}

uint64_t sub_100367630()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;

  v1 = v0[75];
  v2 = v0[73];
  v3 = (void *)objc_opt_self(DOCFavoritesManager);
  v4 = objc_msgSend(v3, "sharedManager");
  v5 = objc_msgSend(v4, "favoritedLocations");

  v6 = sub_100298B84();
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  v8 = *(id *)(v1 + *(int *)(v2 + 28));
  LOBYTE(v5) = sub_1000DFC34((uint64_t)v8, v7);

  v9 = objc_msgSend(v3, "sharedManager", swift_bridgeObjectRelease(v7).n128_f64[0]);
  if ((v5 & 1) != 0)
  {
    v0[115] = v9;
    v0[7] = (char *)v0 + 939;
    v0[2] = v0;
    v0[3] = sub_100367824;
    v0[43] = swift_continuation_init(v0 + 2, 0);
    v0[39] = _NSConcreteStackBlock;
    v0[40] = 0x40000000;
    v0[41] = sub_100367E08;
    v0[42] = &unk_1005E1830;
    objc_msgSend(v9, "removeFavorite:completion:", v8, v0 + 39);
    v10 = v0 + 2;
  }
  else
  {
    v0[116] = v9;
    v0[15] = (char *)v0 + 938;
    v0[10] = v0;
    v0[11] = sub_1003678B0;
    v0[48] = swift_continuation_init(v0 + 10, 0);
    v0[44] = _NSConcreteStackBlock;
    v0[45] = 0x40000000;
    v0[46] = sub_100367E08;
    v0[47] = &unk_1005E1818;
    objc_msgSend(v9, "addFavorite:completion:", v8, v0 + 44);
    v10 = v0 + 10;
  }
  return swift_continuation_await(v10);
}

uint64_t sub_100367824()
{
  uint64_t v0;

  return swift_task_switch(sub_10036786C, *(_QWORD *)(*(_QWORD *)v0 + 904), *(_QWORD *)(*(_QWORD *)v0 + 912));
}

uint64_t sub_10036786C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 920);
  swift_release(*(_QWORD *)(v0 + 896));

  return swift_task_switch(sub_10036793C, 0, 0);
}

uint64_t sub_1003678B0()
{
  uint64_t v0;

  return swift_task_switch(sub_1003678F8, *(_QWORD *)(*(_QWORD *)v0 + 904), *(_QWORD *)(*(_QWORD *)v0 + 912));
}

uint64_t sub_1003678F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 928);
  swift_release(*(_QWORD *)(v0 + 896));

  return swift_task_switch(sub_10036793C, 0, 0);
}

void *sub_10036793C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 880);
  v2 = *(_QWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 568);
  result = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v2);
  v4 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = result;
  v6 = *(_QWORD *)(v0 + 600);
  objc_msgSend(result, "setTotalUnitCount:", v4 / *(_QWORD *)(v0 + 696));

  result = (void *)sub_1000EACF8(v6);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 872);
  if (v8 != *(_QWORD *)(v0 + 864))
  {
    v10 = *(_QWORD *)(v0 + 856);
    if (v8 < *(_QWORD *)(v10 + 16))
    {
      v11 = *(unint64_t **)(v0 + 648);
      v12 = *(_QWORD *)(v0 + 632);
      v13 = *(_QWORD *)(v0 + 624);
      v9 = v8 + 1;
      v14 = *(_QWORD *)(v0 + 640) + *(int *)(v13 + 48);
      sub_1000EACB4(v10+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 592) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 592) + 72) * v8, v14);
      v15 = (uint64_t)v11 + *(int *)(v13 + 48);
      *v11 = v8;
      sub_10011154C(v14, v15);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v13);
      goto LABEL_6;
    }
LABEL_13:
    __break(1u);
    return result;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 632) + 56))(*(_QWORD *)(v0 + 648), 1, 1, *(_QWORD *)(v0 + 624));
  v9 = *(_QWORD *)(v0 + 864);
LABEL_6:
  *(_QWORD *)(v0 + 872) = v9;
  v16 = *(_QWORD *)(v0 + 656);
  v17 = *(_QWORD *)(v0 + 632);
  v18 = *(_QWORD *)(v0 + 624);
  sub_100369130(*(_QWORD *)(v0 + 648), v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) == 1)
  {
    v19 = *(_QWORD *)(v0 + 704);
    v49 = *(_OWORD *)(v0 + 568);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 856));
    *(_OWORD *)(v0 + 496) = v49;
    v20 = (void *)ProgressReportingIntent.progress.getter(&type metadata for FavoriteFoldersIntent, v19);
    v21 = *(_QWORD *)(v0 + 688);
    v22 = *(_QWORD *)(v0 + 680);
    v23 = *(_QWORD *)(v0 + 672);
    v24 = *(_QWORD *)(v0 + 664);
    v25 = *(_QWORD *)(v0 + 656);
    v26 = *(_QWORD *)(v0 + 648);
    v27 = *(_QWORD *)(v0 + 640);
    v45 = *(_QWORD *)(v0 + 616);
    v47 = *(_QWORD *)(v0 + 608);
    *(_QWORD *)&v49 = *(_QWORD *)(v0 + 600);
    objc_msgSend(v20, "setTotalUnitCount:", 100);

    static IntentResult.result<>()(v28);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v30 = *(_QWORD **)(v0 + 656);
  v31 = *(_QWORD *)(v0 + 624);
  v32 = *(_QWORD *)(v0 + 600);
  *(_QWORD *)(v0 + 880) = *v30;
  v33 = sub_10011154C((uint64_t)v30 + *(int *)(v31 + 48), v32);
  static Task<>.checkCancellation()(v33);
  *(_QWORD *)(v0 + 888) = v7;
  if (v7)
  {
    v34 = *(_QWORD *)(v0 + 856);
    v35 = *(_QWORD *)(v0 + 600);
    v36 = *(_QWORD *)(v0 + 688);
    v37 = *(_QWORD *)(v0 + 680);
    v38 = *(_QWORD *)(v0 + 672);
    v39 = *(_QWORD *)(v0 + 664);
    v40 = *(_QWORD *)(v0 + 656);
    v41 = *(_QWORD *)(v0 + 648);
    v46 = *(_QWORD *)(v0 + 640);
    v48 = *(_QWORD *)(v0 + 616);
    v50 = *(_QWORD *)(v0 + 608);
    sub_1000EACF8(v35);
    swift_bridgeObjectRelease(v34);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v35);
    v29 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v29();
  }
  v42 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 896) = static MainActor.shared.getter(v42);
  v43 = dispatch thunk of Actor.unownedExecutor.getter(v42, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 904) = v43;
  *(_QWORD *)(v0 + 912) = v44;
  return (void *)swift_task_switch(sub_100367630, v43, v44);
}

uint64_t sub_100367CE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100641050 != -1)
    swift_once(&qword_100641050, sub_1003660CC);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_100672C30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100367D58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_100650074);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1000EA854;
  return sub_100366434(a1, v5, v4);
}

uint64_t sub_100367DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100367E1C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100367DE0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10030CC24();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100367E08(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_100367E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  unint64_t v44;
  unint64_t v45;
  __int16 v47;
  int v48;
  int v49;
  int v50;
  _BYTE v51[4];
  unsigned int v52;
  void (*v53)(_BYTE *, uint64_t, uint64_t);
  uint64_t v54;
  void (*v55)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  unsigned int v57;
  void (*v58)(_BYTE *);
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68[3];

  v66 = type metadata accessor for InputConnectionBehavior(0);
  v60 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65 = &v51[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v1 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v1);
  v64 = &v51[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v63 = &v51[-v4];
  v5 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v5);
  v61 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = &v51[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = &v51[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for LocalizedStringResource(0);
  v18 = *(_QWORD *)(v17 - 8);
  v56 = v17;
  __chkstk_darwin(v17);
  v62 = &v51[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = sub_10006922C(&qword_100650068);
  v20 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
  static Locale.current.getter(v20);
  v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 104);
  v52 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v54 = v7;
  v22(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  v53 = v22;
  v47 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_FOLDER_INTENT_OPERATION_PARAMETER_TITLE", 48, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Title for the operation parameter of the Favorite Folder intent action", 70, v47);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x800000010052A680);
  static Locale.current.getter(v23);
  v22(v10, v21, v7);
  LOWORD(v48) = 2;
  v24 = v61;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_FOLDER_INTENT_OPERATION_PARAMETER_DESCRIPTION", 54, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Description for the operation parameter of the Favorite Folder intent action", 76, v48);
  v55 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v55(v24, 0, 1, v17);
  LOBYTE(v67[0]) = 0;
  v25 = type metadata accessor for IntentDialog(0);
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v27 = v63;
  v26(v63, 1, 1, v25);
  v28 = v64;
  v26(v64, 1, 1, v25);
  v57 = enum case for InputConnectionBehavior.default(_:);
  v58 = *(void (**)(_BYTE *))(v60 + 104);
  v29 = v65;
  v58(v65);
  v30 = sub_100368DE8();
  v60 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v62, v24, v67, v27, v28, v29, &off_1005C0650, v30);
  v59 = sub_10006922C(&qword_100643368);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x737265646C6F46, 0xE700000000000000);
  static Locale.current.getter(v31);
  v32 = v52;
  v33 = v53;
  v34 = v54;
  v53(v10, v52, v54);
  LOWORD(v49) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_FOLDER_INTENT_ENTITIES_PARAMETER_TITLE", 47, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Title for the Folders parameter of the Favorite Folder intent action", 68, v49);
  v35 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x800000010052A7C0);
  static Locale.current.getter(v35);
  v33(v10, v32, v34);
  LOWORD(v50) = 2;
  v36 = v61;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_FOLDER_INTENT_ENTITIES_PARAMETER_DESCRIPTION", 53, 2, v16, 0x6E65746E49707041, 0xEA00000000007374, v13, v10, "Description for the Folders parameter of the Favorite Folder intent action", 74, v50);
  v55(v36, 0, 1, v56);
  v68[0] = 0;
  v37 = v63;
  v26(v63, 1, 1, v25);
  v38 = v64;
  v26(v64, 1, 1, v25);
  v39 = sub_10006922C((uint64_t *)&unk_10064B460);
  v40 = type metadata accessor for UTType(0);
  v41 = swift_allocObject(v39, ((*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v40 - 8) + 80) | 7);
  *(_OWORD *)(v41 + 16) = xmmword_1004D9670;
  static UTType.folder.getter(v41);
  v42 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v42, 64, 7);
  v67[0] = sub_10029FBBC(v41, 1);
  v67[1] = 2;
  v43 = v65;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v58)(v65, v57, v66);
  v44 = sub_100111434();
  v45 = sub_100063368();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v62, v36, v68, v37, v38, v43, v67, &type metadata for LocationOptionsProvider, v44, v45);
  return v60;
}

unint64_t _s5Files23FavoriteFolderOperationO26caseDisplayRepresentationsSDyAC10AppIntents0F14RepresentationVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  __int16 v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE v60[4];
  unsigned int v61;
  void (*v62)(_BYTE *);
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  void (*v74)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;

  v0 = sub_10006922C(&qword_100643E80);
  __chkstk_darwin(v0);
  v73 = &v60[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v2);
  v80 = &v60[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v65 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v6 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v77 = v13;
  __chkstk_darwin(v13);
  v16 = &v60[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_10006922C(&qword_1006500B0);
  v18 = sub_10006922C(&qword_1006500B8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v18;
  v79 = v18;
  v21 = *(_QWORD *)(v19 + 72);
  v22 = *(unsigned __int8 *)(v19 + 80);
  v23 = (v22 + 32) & ~v22;
  v70 = v21;
  v71 = 2 * v21;
  v24 = swift_allocObject(v17, v23 + 3 * v21, v22 | 7);
  v72 = v24;
  *(_OWORD *)(v24 + 16) = xmmword_1004D9880;
  v78 = v24 + v23;
  v69 = v24 + v23 + *(int *)(v20 + 48);
  *(_BYTE *)(v24 + v23) = 0;
  v25 = v12;
  v26 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xE800000000000000);
  static Locale.current.getter(v26);
  v62 = *(void (**)(_BYTE *))(v4 + 104);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = v65;
  v62(v6);
  v55 = 256;
  v29 = v12;
  v30 = v9;
  v31 = v9;
  v32 = v6;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_OPERATION_ACTION_FAVORITE", 34, 2, v29, 0x6E65746E49707041, 0xEA00000000007374, v30, v6, 0, 0, v55);
  v76 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v76(v80, 1, 1, v13);
  v33 = type metadata accessor for DisplayRepresentation.Image(0);
  v74 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v75 = v33;
  v74(v73, 1, 1, v33);
  v34 = sub_10006922C(&qword_100643E88);
  v35 = *(unsigned __int8 *)(v14 + 80);
  v67 = ((v35 + 32) & ~v35) + *(_QWORD *)(v14 + 72);
  v68 = v34;
  v64 = (v35 + 32) & ~v35;
  v66 = v35 | 7;
  v36 = swift_allocObject(v34, v67, v35 | 7);
  v63 = xmmword_1004D9670;
  *(_OWORD *)(v36 + 16) = xmmword_1004D9670;
  v37 = String.LocalizationValue.init(stringLiteral:)(1701538124, 0xE400000000000000);
  static Locale.current.getter(v37);
  v38 = v6;
  v39 = v27;
  v61 = v27;
  v40 = (void (*)(_BYTE *, uint64_t, uint64_t))v62;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v62)(v38, v27, v28);
  LOWORD(v56) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_OPERATION_ACTION_SYNONYM_LIKE", 38, 2, v25, 0x6E65746E49707041, 0xEA00000000007374, v31, v32, "Synonym of favorite operation in the Favorite Folder intent", 59, v56);
  v41 = v16;
  v42 = v16;
  v43 = v80;
  v44 = v73;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v42, v80, v73, v36);
  v45 = (_BYTE *)(v78 + v70);
  v70 += v78 + *(int *)(v79 + 48);
  *v45 = 1;
  v46 = String.LocalizationValue.init(stringLiteral:)(0x69726F7661666E55, 0xEA00000000006574);
  static Locale.current.getter(v46);
  v40(v32, v39, v28);
  LOWORD(v57) = 256;
  v47 = v25;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_OPERATION_ACTION_UNFAVORITE", 36, 2, v25, 0x6E65746E49707041, 0xEA00000000007374, v31, v32, 0, 0, v57);
  v76(v43, 1, 1, v77);
  v48 = v44;
  v74(v44, 1, 1, v75);
  v49 = swift_allocObject(v68, v67, v66);
  *(_OWORD *)(v49 + 16) = v63;
  v50 = String.LocalizationValue.init(stringLiteral:)(0x656B696C6E55, 0xE600000000000000);
  static Locale.current.getter(v50);
  v51 = v61;
  v40(v32, v61, v28);
  LOWORD(v58) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_OPERATION_ACTION_SYNONYM_UNLIKE", 40, 2, v47, 0x6E65746E49707041, 0xEA00000000007374, v31, v32, "Synonym of unfavorite operation in the Favorite Folder intent", 61, v58);
  v52 = v80;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v41, v80, v48, v49);
  *(_BYTE *)(v78 + v71) = 2;
  v53 = String.LocalizationValue.init(stringLiteral:)(0x656C67676F54, 0xE600000000000000);
  static Locale.current.getter(v53);
  v40(v32, v51, v28);
  LOWORD(v59) = 256;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FAVORITE_OPERATION_ACTION_TOGGLE", 32, 2, v47, 0x6E65746E49707041, 0xEA00000000007374, v31, v32, 0, 0, v59);
  v76(v52, 1, 1, v77);
  v74(v48, 1, 1, v75);
  DisplayRepresentation.init(title:subtitle:image:)(v41, v52, v48);
  return sub_1003F2C8C(v72);
}

unint64_t _s5Files23FavoriteFolderOperationO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0968, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_100368B84()
{
  unint64_t result;

  result = qword_10064FFD8;
  if (!qword_10064FFD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_10064FFD8);
  }
  return result;
}

unint64_t sub_100368BCC()
{
  unint64_t result;

  result = qword_10064FFE0;
  if (!qword_10064FFE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_10064FFE0);
  }
  return result;
}

unint64_t sub_100368C14()
{
  unint64_t result;

  result = qword_10064FFE8;
  if (!qword_10064FFE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_10064FFE8);
  }
  return result;
}

unint64_t sub_100368C5C()
{
  unint64_t result;

  result = qword_10064FFF0;
  if (!qword_10064FFF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_10064FFF0);
  }
  return result;
}

uint64_t sub_100368CA0()
{
  return sub_100062698(&qword_10064FFF8, &qword_100650000, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_100368CD0()
{
  unint64_t result;

  result = qword_100650008;
  if (!qword_100650008)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650008);
  }
  return result;
}

unint64_t sub_100368D18()
{
  unint64_t result;

  result = qword_100650010;
  if (!qword_100650010)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650010);
  }
  return result;
}

unint64_t sub_100368D64()
{
  unint64_t result;

  result = qword_100650018;
  if (!qword_100650018)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650018);
  }
  return result;
}

uint64_t sub_100368DA8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100368DE8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100368DE8()
{
  unint64_t result;

  result = qword_100650020;
  if (!qword_100650020)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650020);
  }
  return result;
}

unint64_t sub_100368E30()
{
  unint64_t result;

  result = qword_100650028;
  if (!qword_100650028)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650028);
  }
  return result;
}

unint64_t sub_100368E78()
{
  unint64_t result;

  result = qword_100650030;
  if (!qword_100650030)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650030);
  }
  return result;
}

unint64_t sub_100368EC0()
{
  unint64_t result;

  result = qword_100650038;
  if (!qword_100650038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FavoriteFolderOperation, &type metadata for FavoriteFolderOperation);
    atomic_store(result, (unint64_t *)&qword_100650038);
  }
  return result;
}

unint64_t sub_100368F0C()
{
  unint64_t result;

  result = qword_100650040;
  if (!qword_100650040)
  {
    result = swift_getWitnessTable(&unk_1004E4034, &type metadata for FavoriteFoldersIntent);
    atomic_store(result, (unint64_t *)&qword_100650040);
  }
  return result;
}

unint64_t sub_100368F54()
{
  unint64_t result;

  result = qword_100650048;
  if (!qword_100650048)
  {
    result = swift_getWitnessTable(&unk_1004E405C, &type metadata for FavoriteFoldersIntent);
    atomic_store(result, (unint64_t *)&qword_100650048);
  }
  return result;
}

uint64_t sub_100368F98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056EDD4, 1);
}

uint64_t sub_100368FA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056EDAC, 1);
}

uint64_t storeEnumTagSinglePayload for FavoriteFolderOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100369004 + 4 * byte_1004E3CE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100369038 + 4 * asc_1004E3CE0[v4]))();
}

uint64_t sub_100369038(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100369040(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100369048);
  return result;
}

uint64_t sub_100369054(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036905CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100369060(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100369068(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FavoriteFolderOperation()
{
  return &type metadata for FavoriteFolderOperation;
}

ValueMetadata *type metadata accessor for FavoriteFoldersIntent()
{
  return &type metadata for FavoriteFoldersIntent;
}

uint64_t sub_100369094()
{
  return sub_100062698(&qword_100650058, &qword_100650060, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1003690C0()
{
  return sub_100062698(&qword_100643340, (uint64_t *)&unk_10064EBC0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_1003690EC()
{
  unint64_t result;

  result = qword_100650088;
  if (!qword_100650088)
  {
    result = swift_getWitnessTable(&unk_1004E3F7C, &type metadata for FavoriteFoldersIntent);
    atomic_store(result, (unint64_t *)&qword_100650088);
  }
  return result;
}

uint64_t sub_100369130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100650080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100369178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003691A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCViewOptionsSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100369214 + 4 * byte_1004E4115[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100369248 + 4 * byte_1004E4110[v4]))();
}

uint64_t sub_100369248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100369250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100369258);
  return result;
}

uint64_t sub_100369264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036926CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100369270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100369278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCViewOptionsSection()
{
  return &type metadata for DOCViewOptionsSection;
}

unint64_t sub_100369298()
{
  unint64_t result;

  result = qword_1006500C0;
  if (!qword_1006500C0)
  {
    result = swift_getWitnessTable(&unk_1004E4170, &type metadata for DOCViewOptionsSection);
    atomic_store(result, (unint64_t *)&qword_1006500C0);
  }
  return result;
}

void sub_1003692DC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_1003692EC()
{
  unint64_t result;

  result = qword_1006500C8;
  if (!qword_1006500C8)
  {
    result = swift_getWitnessTable(&unk_1004E41B0, &type metadata for DOCViewOptionsSection);
    atomic_store(result, (unint64_t *)&qword_1006500C8);
  }
  return result;
}

char *sub_100369330(void *a1, void *a2, void *a3)
{
  char *v3;
  id v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  char *v12;
  objc_super v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_destinationFolder] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager] = a3;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCUnarchiveOperation();
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = (char *)objc_msgSendSuper2(&v14, "initWithItem:destinationFolder:", v7, v8);
  v11 = *(void **)&v10[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager];
  v12 = v10;
  objc_msgSend(v11, "registerUndoOperationForSender:", v12, v14.receiver, v14.super_class);

  return v12;
}

id sub_100369474(uint64_t a1)
{
  uint64_t v1;
  id result;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v3 = result;
    v4._countAndFlagsBits = 0x1000000000000029;
    v15._object = (void *)0x800000010052AAE0;
    v4._object = (void *)0x800000010052AA90;
    v5._object = (void *)0x800000010052AAC0;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0x1000000000000013;
    v15._countAndFlagsBits = 0xD00000000000003ELL;
    v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v6, (NSBundle)v3, v5, v15);

    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 72, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item), "displayName");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 64) = sub_10006A638();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    v14 = static String.localizedStringWithFormat(_:_:)(v7._countAndFlagsBits, v7._object, v9);
    swift_bridgeObjectRelease(v7._object);
    swift_bridgeObjectRelease(v9);
    return (id)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1003695E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[5];
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_destinationFolder);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager);
  v4 = objc_allocWithZone((Class)type metadata accessor for DOCUnarchiveOperation());
  v5 = sub_100369330(v1, v2, v3);
  v6 = swift_allocObject(&unk_1005E1B80, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v11[4] = sub_100369940;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100083540;
  v11[3] = &unk_1005E1B98;
  v7 = _Block_copy(v11);
  v8 = v12;
  v9 = v5;
  objc_msgSend(v9, "setUnarchiveCompletionBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

  return v9;
}

uint64_t sub_100369728()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  __n128 v5;
  id v6;
  id v7;
  char *v8;
  uint64_t v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem];
  if (!v1)
    return 0;
  v2 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v3 + 32) = v1;
  v10 = v3;
  specialized Array._endMutation()(v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager];
  objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation(0, v5));
  v6 = v1;
  v7 = v4;
  v8 = v0;
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)(v10, v0, v7);
}

id sub_100369874()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUnarchiveOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCUnarchiveOperation()
{
  return objc_opt_self(_TtC5Files21DOCUnarchiveOperation);
}

uint64_t sub_10036991C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100369940(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v2 = *(_QWORD *)(v1 + 16);
  v4 = *(id *)(v2 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem) = a1;
  v3 = a1;

}

void sub_100369978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert;
  v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert);
  if (v7)
    objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
  v8 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v9 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v9 & 1) != 0)
  {
    v10 = *(void **)(a1 + v6);
    *(_QWORD *)(a1 + v6) = 0;

    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state))
    {
      if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state) == 1)
        sub_10036A0E4();
      else
        sub_10036A9CC();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100369A9C(unsigned __int8 a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state;
  v8 = v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state];
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  *v6 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) != 0)
  {
    v1[v7] = a1;
    if (v8 != a1)
    {
      v11 = swift_allocObject(&unk_1005E1D78, 24, 7);
      *(_QWORD *)(v11 + 16) = v1;
      aBlock[4] = sub_10036E894;
      v16 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005E1D90;
      v12 = _Block_copy(aBlock);
      v13 = v16;
      v14 = v1;
      swift_release(v13);
      DOCRunInMainThread(v12);
      _Block_release(v12);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100369BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;

  v3 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()(v8);
  URLComponents.scheme.setter(0xD000000000000013, 0x800000010052B3E0);
  URLComponents.host.setter(0xD000000000000017, 0x800000010052B400);
  v21 = 47;
  v22 = 0xE100000000000000;
  v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  v16 = swift_bridgeObjectRelease(v14);
  v17 = URLComponents.path.setter(v21, v22, v16);
  URLComponents.url.getter(v17);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v5, v18);
  }
  return result;
}

uint64_t sub_100369DB0(uint64_t a1, uint64_t a2)
{
  return sub_10036E5C4(a2);
}

CFNotificationCenterRef sub_100369DB8(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v4;
  CFNotificationCenterRef result;
  __CFNotificationCenter *v6;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v4, "removeObserver:", v2);

  result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    v6 = result;
    CFNotificationCenterRemoveEveryObserver(v6, v2);

    v7.receiver = v2;
    v7.super_class = ObjectType;
    return (CFNotificationCenterRef)objc_msgSendSuper2(&v7, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100369FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  __n128 v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Logger.UI.unsafeMutableAddressor(v4);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.info.getter(v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "[Default Source UI]: ubiquityIdentityDidChange", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000A3264();
}

uint64_t sub_10036A0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  _QWORD v35[3];
  Swift::String v36;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_allocWithZone((Class)LSApplicationRecord);
  v13 = sub_100086818(v9, v11, 0);
  v35[1] = v7;
  v35[2] = v1;
  if (v13)
  {
    v20 = objc_msgSend(v13, "localizedName");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v25 = (id)_DocumentManagerBundle(v24);
    if (v25)
    {
      v26 = v25;
      v27._countAndFlagsBits = 0xD00000000000002ALL;
      v36._countAndFlagsBits = 0xD000000000000082;
      v36._object = (void *)0x800000010052AC10;
      v27._object = (void *)0x800000010052ABE0;
      v28.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v28.value._object = (void *)0xEB00000000656C62;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v36);

      v31 = sub_10006922C((uint64_t *)&unk_100644560);
      v32 = swift_allocObject(v31, 72, 7);
      *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v32 + 56) = &type metadata for String;
      *(_QWORD *)(v32 + 64) = sub_10006A638();
      *(_QWORD *)(v32 + 32) = v21;
      *(_QWORD *)(v32 + 40) = v23;
      String.init(format:_:)(v30._countAndFlagsBits, v30._object, v32);
      v33 = swift_bridgeObjectRelease(v30._object);
      v34 = (char *)&loc_10036A3B4
          + *((int *)qword_10036A9B8 + static DOCDeviceModel.current.getter(v33));
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x10036A9A0);
  }
  v14 = Logger.UI.unsafeMutableAddressor(0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to load hostApplicationRecord, so can not present promptToUseICloudOrLocal()", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10036A9CC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration], "hostIdentifier");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = objc_allocWithZone((Class)LSApplicationRecord);
  v11 = sub_100086818(v7, v9, 0);
  v18 = v11;
  if (v11)
  {
    v19 = swift_allocObject(&unk_1005E1EB8, 32, 7);
    *(_QWORD *)(v19 + 16) = v18;
    *(_QWORD *)(v19 + 24) = v1;
    v20 = v18;
    v21 = v1;
    sub_10036BA14((uint64_t)sub_10036E8D0, v19);

    return swift_release(v19);
  }
  else
  {
    v12 = Logger.UI.unsafeMutableAddressor(0);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to load hostApplicationRecord, so can not present promptToUseOtherOrLocal()", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10036ABA4(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  v11 = swift_allocObject(&unk_1005E1E68, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_10036E8C8;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E1E80;
  v12 = _Block_copy(aBlock);
  v13 = v1;
  static DispatchQoS.unspecified.getter(a1);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10006922C((uint64_t *)&unk_100647540);
  v16 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

void sub_10036AD90(uint64_t a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  uint64_t v6;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert);
  if (v2)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_10064CE70, UIAlertController_ptr);
    v4 = a2;
    v5 = v2;
    LOBYTE(a2) = static NSObject.== infix(_:_:)(v5, v4);

    if ((a2 & 1) != 0)
    {
      v6 = sub_100369A9C(0);
      sub_1000A3264(v6);
    }
  }
}

void sub_10036AE28(char a1, void *a2, void *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v6 = swift_allocObject(&unk_1005E1F58, 33, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  *(_BYTE *)(v6 + 32) = a1;
  v11[4] = sub_10036E90C;
  v12 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004A82C;
  v11[3] = &unk_1005E1F70;
  v7 = _Block_copy(v11);
  v8 = v12;
  v9 = a2;
  v10 = a3;
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

void sub_10036AEE0(void *a1, void *a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  void *object;
  NSString v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  __n128 v50;
  id v51;
  void *v52;
  Swift::String v53;
  Swift::String_optional v54;
  Swift::String v55;
  void *v56;
  uint64_t v57;
  char *v58;
  id v59;
  NSString v60;
  char *v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char v70;
  void *v71;
  void *Strong;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  __int128 v78;
  void *v79;
  int v80;
  void **aBlock;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;

  v80 = a3;
  v79 = a2;
  v4 = type metadata accessor for DispatchPredicate(0);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v76 = (uint64_t *)((char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = objc_msgSend(a1, "localizedName");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v11 = (id)_DocumentManagerBundle(v10);
  if (!v11)
    goto LABEL_13;
  v12 = v11;
  v75 = v4;
  v13._countAndFlagsBits = 0xD000000000000024;
  v87._countAndFlagsBits = 0xD000000000000069;
  v87._object = (void *)0x800000010052B0B0;
  v13._object = (void *)0x800000010052B080;
  v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v14.value._object = (void *)0xEB00000000656C62;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v87);

  v17 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v17, 72, 7);
  v78 = xmmword_1004D9670;
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  v19 = sub_10006A638();
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v9;
  swift_bridgeObjectRetain(v9);
  String.init(format:_:)(v16._countAndFlagsBits, v16._object, v18);
  v21 = v20;
  swift_bridgeObjectRelease(v16._object);
  v23 = (id)_DocumentManagerBundle(v22);
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v24 = v23;
  v25._countAndFlagsBits = 0xD000000000000068;
  v88._countAndFlagsBits = 0xD00000000000006BLL;
  v88._object = (void *)0x800000010052B190;
  v25._object = (void *)0x800000010052B120;
  v26.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v26.value._object = (void *)0xEB00000000656C62;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v88);

  v29 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v29 + 16) = v78;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = v19;
  *(_QWORD *)(v29 + 32) = v7;
  *(_QWORD *)(v29 + 40) = v9;
  String.init(format:_:)(v28._countAndFlagsBits, v28._object, v29);
  v31 = v30;
  swift_bridgeObjectRelease(v28._object);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v34 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

  v36 = (id)_DocumentManagerBundle(v35);
  if (!v36)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v37 = v36;
  v38._countAndFlagsBits = 0xD000000000000013;
  v89._countAndFlagsBits = 0xD000000000000074;
  v89._object = (void *)0x800000010052B220;
  v38._object = (void *)0x800000010052B200;
  v39.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v39.value._object = (void *)0xEB00000000656C62;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v89)._object;

  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v43 = swift_allocObject(&unk_1005E1FA8, 24, 7);
  v44 = v79;
  *(_QWORD *)(v43 + 16) = v79;
  v85 = sub_10036E918;
  v86 = v43;
  aBlock = _NSConcreteStackBlock;
  v82 = 1107296256;
  v83 = sub_10004A82C;
  v84 = &unk_1005E1FC0;
  v45 = _Block_copy(&aBlock);
  v46 = v86;
  v47 = v44;
  swift_release(v46);
  v85 = variable initialization expression of DOCButton.hoverEffectsAllowedIfInteractionDisabled;
  v86 = 0;
  aBlock = _NSConcreteStackBlock;
  v82 = 1107296256;
  v83 = sub_10036B88C;
  v84 = &unk_1005E1FE8;
  v48 = _Block_copy(&aBlock);
  objc_msgSend(v34, "_addActionWithTitle:style:handler:shouldDismissHandler:", v42, 0, v45, v48);
  _Block_release(v48);
  _Block_release(v45);

  if ((v80 & 1) == 0)
  {
    v61 = (char *)&loc_10036B414
        + *((int *)qword_10036B7A0 + static DOCDeviceModel.current.getter(v50));
    __asm { BR              X10 }
  }
  v51 = (id)_DocumentManagerBundle(v49);
  if (!v51)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x10036B790);
  }
  v52 = v51;
  v53._countAndFlagsBits = 0xD000000000000010;
  v90._countAndFlagsBits = 0xD0000000000000B5;
  v90._object = (void *)0x800000010052ADC0;
  v53._object = (void *)0x800000010052ADA0;
  v54.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v54.value._object = (void *)0xEB00000000656C62;
  v55._countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, v54, (NSBundle)v52, v55, v90)._object;

  v57 = swift_allocObject(&unk_1005E2070, 32, 7);
  *(_QWORD *)(v57 + 16) = v47;
  *(_QWORD *)(v57 + 24) = v34;
  v58 = v47;
  v59 = v34;
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v56);
  v85 = sub_10036E938;
  v86 = v57;
  aBlock = _NSConcreteStackBlock;
  v82 = 1107296256;
  v83 = sub_1000602CC;
  v84 = &unk_1005E2088;
  v62 = _Block_copy(&aBlock);
  swift_release(v86);
  v63 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v60, 0, v62);
  v64 = v75;
  v65 = v63;
  _Block_release(v62);

  objc_msgSend(v34, "addAction:", v65);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v66 = v34;
  v67 = static OS_dispatch_queue.main.getter(v66);
  v69 = v76;
  v68 = v77;
  *v76 = v67;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v68 + 104))(v69, enum case for DispatchPredicate.onQueue(_:), v64);
  v70 = _dispatchPreconditionTest(_:)(v69);
  (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v69, v64);
  if ((v70 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v71 = *(void **)&v47[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert];
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert] = v66;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v47[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_viewController]);
  if (Strong)
  {
    v73 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v66, 1, 0);

  }
}

void sub_10036B7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  NSURL *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v4)
  {
    v5 = v4;
    sub_100369BF8((uint64_t)v3);
    URL._bridgeToObjectiveC()(v6);
    v8 = v7;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    objc_msgSend(v5, "openSensitiveURL:withOptions:", v8, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036B88C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  LOBYTE(v1) = v1(v3);
  swift_release(v2);
  return v1 & 1;
}

uint64_t sub_10036B8C4(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v5 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v8 = v7;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  objc_msgSend((id)objc_opt_self(DOCDocumentSource), "setDefaultSourceIdentifier:forBundleIdentifier:", v5, v6);

  return sub_10036ABA4(a3);
}

uint64_t sub_10036B96C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;

  v4 = DOCDocumentSourceIdentifierLocal;
  v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  objc_msgSend((id)objc_opt_self(DOCDocumentSource), "setDefaultSourceIdentifier:forBundleIdentifier:", v4, v5);

  return sub_10036ABA4(a3);
}

uint64_t sub_10036BA14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v5 = swift_allocObject(&unk_1005E1EE0, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver);
  objc_msgSend(v7, "startObservingSources", swift_retain().n128_f64[0]);
  v8 = swift_allocObject(&unk_1005E1F08, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10036E8D8;
  *(_QWORD *)(v8 + 24) = v5;
  v12[4] = sub_1002ADFC0;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10002E508;
  v12[3] = &unk_1005E1F20;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_retain();
  swift_release(v10);
  objc_msgSend(v7, "retrieveSourcesForConfiguration:usingBlock:", v6, v9);
  _Block_release(v9);
  return swift_release(v5);
}

uint64_t sub_10036BB38(uint64_t a1, uint64_t (*a2)(BOOL))
{
  uint64_t v4;
  uint64_t v6;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return a2(v4 != 0);
}

uint64_t sub_10036BBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v5 = swift_allocObject(&unk_1005E2228, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver);
  objc_msgSend(v7, "startObservingSources", swift_retain().n128_f64[0]);
  v8 = swift_allocObject(&unk_1005E2250, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10036E9C0;
  *(_QWORD *)(v8 + 24) = v5;
  v12[4] = sub_1002ADFC0;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10002E508;
  v12[3] = &unk_1005E2268;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_retain();
  swift_release(v10);
  objc_msgSend(v7, "retrieveSourcesForConfiguration:usingBlock:", v6, v9);
  _Block_release(v9);
  return swift_release(v5);
}

void sub_10036BCD0(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = 4;
    v6 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      goto LABEL_6;
    }
    while (1)
    {
      v7 = (char *)*(id *)(a1 + 8 * v5);
LABEL_6:
      v8 = v7;
      v9 = __OFADD__(v6, 1);
      v10 = v6 + 1;
      if (v9)
        break;
      v11 = *(void **)&v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v11)
      {
        v14 = v8;
        if ((objc_msgSend(v11, "isMainiCloudDriveDomain") & 1) != 0)
        {
          swift_bridgeObjectRelease(a1);
          v12 = v14;
          goto LABEL_21;
        }

        if (v10 == v4)
          goto LABEL_20;
      }
      else
      {

        if (v10 == v4)
          goto LABEL_20;
      }
      v6 = ++v5 - 4;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  v12 = 0;
LABEL_21:
  v15 = v12;
  a2();

}

uint64_t sub_10036BE14(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  v16 = (_QWORD *)swift_allocObject(&unk_1005E1D28, 56, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  aBlock[4] = sub_10036E884;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E1D40;
  v17 = _Block_copy(aBlock);
  v18 = a3;
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(a2);
  v26 = _swiftEmptyArrayStorage;
  v19 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10006922C((uint64_t *)&unk_100647540);
  v21 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v10, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v24);
  return swift_release(v28);
}

void sub_10036C030(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint8_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  id v38;
  id v39;
  uint8_t *v40;
  id v41;
  NSObject *v42;
  __n128 v43;
  void *v44;
  void (*v45)(char *, uint64_t);
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint8_t *v63;
  uint8_t *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint8_t *v73;
  char *v74;
  uint64_t v75;
  NSObject *v76;
  __n128 v77;
  os_log_type_t v78;
  uint8_t *v79;
  unsigned __int8 v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  char *v90;
  unint64_t v91;
  id v92;
  NSObject *v93;
  __n128 v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSString v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  void *v105;
  NSString v106;
  char v107;
  char *v108;
  uint64_t v109;
  NSObject *v110;
  __n128 v111;
  os_log_type_t v112;
  uint8_t *v113;
  unsigned __int8 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  NSObject *v124;
  __n128 v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  __n128 v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  __n128 v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  void *v148;
  Swift::String v149;
  __n128 v150;
  char *v151;
  Swift::String v152;
  void *object;
  Swift::Bool v154;
  NSObject *v155;
  __n128 v156;
  os_log_type_t v157;
  uint8_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint8_t *v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  char *v175;
  uint8_t *v176;
  NSObject *v177;
  __n128 v178;
  os_log_type_t v179;
  uint8_t *v180;
  uint64_t v181;
  uint8_t *v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint8_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  char *v207;
  uint8_t *v208;
  NSObject *v209;
  __n128 v210;
  os_log_type_t v211;
  uint8_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  NSString v216;
  id v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint8_t *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint8_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t, uint64_t);
  uint8_t *v243;
  id v244;
  void (*v245)(char *, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248[2];

  v10 = type metadata accessor for Logger(0);
  v245 = *(void (**)(char *, uint64_t))(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v235 = (char *)&v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v228 - v14;
  v16 = __chkstk_darwin(v13);
  v230 = (char *)&v228 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v228 - v19;
  v21 = __chkstk_darwin(v18);
  v231 = (char *)&v228 - v22;
  v23 = __chkstk_darwin(v21);
  v233 = (char *)&v228 - v24;
  v25 = __chkstk_darwin(v23);
  v234 = (char *)&v228 - v26;
  v27 = __chkstk_darwin(v25);
  v237 = (char *)&v228 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v228 - v29;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v227 = a1;
    else
      v227 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v246 = _CocoaArrayWrapper.endIndex.getter(v227);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v246 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10036D374(a1);
  v238 = a5;
  v229 = v15;
  v236 = a4;
  v232 = v20;
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(v31, "identifier");

  }
  else
  {
    v34 = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
    v33 = (id)v34;
  }
  v35 = v245;
  v36 = Logger.UI.unsafeMutableAddressor(v34);
  v37 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v35 + 2);
  v241 = v36;
  v242 = v37;
  ((void (*)(char *))v37)(v30);
  v38 = a3;
  v39 = v33;
  v40 = (uint8_t *)v38;
  v41 = v39;
  v42 = Logger.logObject.getter(v41);
  v44 = a3;
  v45 = v35;
  v46 = static os_log_type_t.info.getter(v43);
  v47 = os_log_type_enabled(v42, v46);
  v243 = v40;
  v244 = v41;
  v240 = (uint64_t)a3;
  if (v47)
  {
    v239 = v10;
    v48 = swift_slowAlloc(32, -1);
    v49 = (_QWORD *)swift_slowAlloc(8, -1);
    v50 = swift_slowAlloc(64, -1);
    v248[0] = v50;
    *(_DWORD *)v48 = 138412802;
    v228 = a2;
    if (v44)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v52 = v51;
      v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v52);
    }
    else
    {
      sub_10004F2F0(0, &qword_100643768, NSString_ptr);
      v53 = (NSString)NSString.init(stringLiteral:)("(nil)", 5, 2);
    }
    v247 = (uint64_t)v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);
    *v49 = v53;
    v81 = v243;

    *(_WORD *)(v48 + 12) = 2080;
    if (v246 <= 0)
      v82 = 20302;
    else
      v82 = 5457241;
    if (v246 <= 0)
      v83 = 0xE200000000000000;
    else
      v83 = 0xE300000000000000;
    v247 = sub_1000544FC(v82, v83, v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);
    swift_bridgeObjectRelease(v83);
    *(_WORD *)(v48 + 22) = 2080;
    v41 = v244;
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v244);
    v86 = v85;
    v247 = sub_1000544FC(v84, v85, v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);

    swift_bridgeObjectRelease(v86);
    _os_log_impl((void *)&_mh_execute_header, v42, v46, "[Default Source UI] Default provider: %@ iCloud Drive enabled: %s, relevantiCloudSourceIdentifier: %s", (uint8_t *)v48, 0x20u);
    v87 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v49, 1, v87);
    swift_slowDealloc(v49, -1, -1);
    swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    v54 = (void (*)(char *, uint64_t))*((_QWORD *)v245 + 1);
    v10 = v239;
    v54(v30, v239);
    a2 = v228;
    v55 = v240;
    if (!v240)
      goto LABEL_30;
  }
  else
  {

    v54 = (void (*)(char *, uint64_t))*((_QWORD *)v45 + 1);
    v54(v30, v10);
    v55 = v240;
    if (!v240)
    {
LABEL_30:
      v88 = (void *)DOCDocumentSourceIdentifierLocalAutomatic;
      if (v246 > 0)
        v88 = v41;
      v89 = v88;
      v90 = v237;
      v242(v237, v241, v10);
      v91 = (unint64_t)v238;
      swift_bridgeObjectRetain_n(v238, 2);
      v92 = v89;
      v93 = Logger.logObject.getter(v92);
      v95 = static os_log_type_t.info.getter(v94);
      if (os_log_type_enabled(v93, v95))
      {
        v96 = swift_slowAlloc(22, -1);
        v246 = swift_slowAlloc(64, -1);
        v248[0] = v246;
        *(_DWORD *)v96 = 136315394;
        v239 = v10;
        swift_bridgeObjectRetain(v91);
        v247 = sub_1000544FC(v236, v91, v248);
        v245 = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);
        swift_bridgeObjectRelease_n(v91, 3);
        *(_WORD *)(v96 + 12) = 2080;
        v243 = (uint8_t *)(v96 + 14);
        static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
        v98 = v97;
        v99 = String._bridgeToObjectiveC()();
        v100 = objc_msgSend(v99, "description", swift_bridgeObjectRelease(v98).n128_f64[0]);
        v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
        v103 = v102;

        v247 = sub_1000544FC(v101, v103, v248);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);

        swift_bridgeObjectRelease(v103);
        _os_log_impl((void *)&_mh_execute_header, v93, v95, "[Default Source UI] (nil, _): First launch of %s, setting default provider to %s", (uint8_t *)v96, 0x16u);
        v104 = v246;
        swift_arrayDestroy(v246, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v96, -1, -1);

        v245(v237, v239);
      }
      else
      {

        swift_bridgeObjectRelease_n(v91, 2);
        v54(v90, v10);
      }
      v105 = (void *)objc_opt_self(DOCDocumentSource);
      v106 = String._bridgeToObjectiveC()();
      objc_msgSend(v105, "setDefaultSourceIdentifier:forBundleIdentifier:", v92, v106);

      sub_100369A9C(0);
      goto LABEL_65;
    }
  }
  if (v246 <= 0)
  {
    v64 = v243;
    v65 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;
    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v71 = v69;
    if (v66 == v70 && v68 == v69)
    {

      swift_bridgeObjectRelease_n(v68, 2);
    }
    else
    {
      v107 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, v70, v69, 0);

      swift_bridgeObjectRelease(v68);
      swift_bridgeObjectRelease(v71);
      if ((v107 & 1) == 0)
      {
        v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocalAutomatic);
        v117 = v116;
        v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
        v120 = v118;
        if (v115 == v119 && v117 == v118)
        {
          swift_bridgeObjectRelease_n(v117, 2);
          v41 = v244;
        }
        else
        {
          v121 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v117, v119, v118, 0);
          swift_bridgeObjectRelease(v117);
          swift_bridgeObjectRelease(v120);
          v62 = v243;
          v41 = v244;
          if ((v121 & 1) == 0)
            goto LABEL_47;
        }

        v122 = v231;
        v123 = ((uint64_t (*)(char *, uint64_t, uint64_t))v242)(v231, v241, v10);
        v124 = Logger.logObject.getter(v123);
        v126 = static os_log_type_t.info.getter(v125);
        if (os_log_type_enabled(v124, v126))
        {
          v127 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v127 = 0;
          _os_log_impl((void *)&_mh_execute_header, v124, v126, "[Default Source UI] (DOCDocumentSourceIdentifier.localAutomatic?, false): iCloud Drive is not available, but we're already in localAuto, so no alert", v127, 2u);
          v128 = v127;
          v41 = v244;
          swift_slowDealloc(v128, -1, -1);
        }

        v54(v122, v10);
        v80 = 0;
        goto LABEL_21;
      }
    }

    v108 = v233;
    v109 = ((uint64_t (*)(char *, uint64_t, uint64_t))v242)(v233, v241, v10);
    v110 = Logger.logObject.getter(v109);
    v112 = static os_log_type_t.info.getter(v111);
    if (os_log_type_enabled(v110, v112))
    {
      v113 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v113 = 0;
      _os_log_impl((void *)&_mh_execute_header, v110, v112, "[Default Source UI] (.iCloudCurrent?, false): iCloud Drive is no longer available, showing prompt saying we've switched to local storage", v113, 2u);
      swift_slowDealloc(v113, -1, -1);
    }

    v54(v108, v10);
    v114 = 2;
    goto LABEL_54;
  }
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocalAutomatic);
  v58 = v57;
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v61 = v59;
  v62 = v243;
  if (v56 != v60 || v58 != v59)
  {
    v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v58, v60, v59, 0);
    v73 = v62;
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v61);
    if ((v72 & 1) != 0)
      goto LABEL_18;
LABEL_47:
    v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierLocal);
    v131 = v130;
    v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v134 = v132;
    if (v129 == v133 && v131 == v132)
    {
      swift_bridgeObjectRelease_n(v131, 2);
LABEL_51:

      v137 = v232;
      v138 = ((uint64_t (*)(char *, uint64_t, uint64_t))v242)(v232, v241, v10);
      v139 = Logger.logObject.getter(v138);
      v141 = static os_log_type_t.info.getter(v140);
      if (os_log_type_enabled(v139, v141))
      {
        v142 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v142 = 0;
        _os_log_impl((void *)&_mh_execute_header, v139, v141, "[Default Source UI] (DOCDocumentSourceIdentifier.local?, _): iCloud Drive is not available, but we're already in local, so no alert", v142, 2u);
        swift_slowDealloc(v142, -1, -1);
      }

      v54(v137, v10);
      v114 = 0;
LABEL_54:
      sub_100369A9C(v114);
LABEL_55:
      v41 = v244;
      goto LABEL_56;
    }
    v135 = _stringCompareWithSmolCheck(_:_:expecting:)(v129, v131, v133, v132, 0);
    swift_bridgeObjectRelease(v131);
    v136 = swift_bridgeObjectRelease(v134);
    if ((v135 & 1) != 0)
      goto LABEL_51;
    v245 = v54;
    if (v246 >= 1)
    {
      v166 = v243;
      v167 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
      v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
      v170 = v169;
      v172 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v173 = v171;
      if (v168 == v172 && v170 == v171)
        goto LABEL_71;
      v174 = _stringCompareWithSmolCheck(_:_:expecting:)(v168, v170, v172, v171, 0);

      swift_bridgeObjectRelease(v170);
      swift_bridgeObjectRelease(v173);
      if ((v174 & 1) != 0)
        goto LABEL_74;
      v188 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2);
      v170 = v189;
      v191 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v192 = v190;
      if (v188 == v191 && v170 == v190)
      {
LABEL_72:
        swift_bridgeObjectRelease_n(v170, 2);
LABEL_74:

        v175 = v230;
        v242(v230, v241, v10);
        v176 = v166;
        v177 = Logger.logObject.getter(v176);
        v179 = static os_log_type_t.info.getter(v178);
        if (os_log_type_enabled(v177, v179))
        {
          v239 = v10;
          v180 = (uint8_t *)swift_slowAlloc(12, -1);
          v181 = swift_slowAlloc(32, -1);
          v247 = v55;
          v248[0] = v181;
          *(_DWORD *)v180 = 136315138;
          v182 = v176;
          v183 = sub_10006922C((uint64_t *)&unk_10064D870);
          v184 = String.init<A>(describing:)(&v247, v183);
          v186 = v185;
          v247 = sub_1000544FC(v184, v185, v248);
          v10 = v239;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);

          swift_bridgeObjectRelease(v186);
          _os_log_impl((void *)&_mh_execute_header, v177, v179, "[Default Source UI] Should update saved identifier with a real iCloud Domain: %s", v180, 0xCu);
          swift_arrayDestroy(v181, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v181, -1, -1);
          swift_slowDealloc(v180, -1, -1);

          v187 = v230;
        }
        else
        {

          v187 = v175;
        }
        v54 = v245;
        v245(v187, v10);
        goto LABEL_55;
      }
      v193 = _stringCompareWithSmolCheck(_:_:expecting:)(v188, v170, v191, v190, 0);
      swift_bridgeObjectRelease(v170);
      swift_bridgeObjectRelease(v192);
      if ((v193 & 1) != 0)
        goto LABEL_74;
      v194 = v166;
      v167 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter();
      v195 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
      v170 = v196;
      v198 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v199 = v197;
      if (v195 == v198 && v170 == v197)
      {
LABEL_71:

        goto LABEL_72;
      }
      v200 = _stringCompareWithSmolCheck(_:_:expecting:)(v195, v170, v198, v197, 0);

      swift_bridgeObjectRelease(v170);
      swift_bridgeObjectRelease(v199);
      if ((v200 & 1) != 0)
        goto LABEL_74;
      v201 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2Managed);
      v170 = v202;
      v204 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v205 = v203;
      if (v201 == v204 && v170 == v203)
        goto LABEL_72;
      v206 = _stringCompareWithSmolCheck(_:_:expecting:)(v201, v170, v204, v203, 0);
      swift_bridgeObjectRelease(v170);
      v136 = swift_bridgeObjectRelease(v205);
      if ((v206 & 1) != 0)
        goto LABEL_74;
    }
    v207 = v229;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v242)(v229, v241, v10, v136);
    v208 = v243;
    v209 = Logger.logObject.getter(v208);
    v211 = static os_log_type_t.info.getter(v210);
    if (os_log_type_enabled(v209, v211))
    {
      v239 = v10;
      v212 = (uint8_t *)swift_slowAlloc(12, -1);
      v246 = swift_slowAlloc(32, -1);
      v248[0] = v246;
      v243 = v212;
      *(_DWORD *)v212 = 136315138;
      v238 = v212 + 4;
      v213 = v55;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v215 = v214;
      v216 = String._bridgeToObjectiveC()();
      v217 = objc_msgSend(v216, "description", swift_bridgeObjectRelease(v215).n128_f64[0]);
      v218 = a2;
      v219 = static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
      v221 = v220;

      v222 = v219;
      a2 = v218;
      v55 = v213;
      v247 = sub_1000544FC(v222, v221, v248);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);

      v223 = v221;
      v10 = v239;
      swift_bridgeObjectRelease(v223);
      v224 = v243;
      _os_log_impl((void *)&_mh_execute_header, v209, v211, "[Default Source UI] Verifying %s is still available", v243, 0xCu);
      v225 = v246;
      swift_arrayDestroy(v246, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v225, -1, -1);
      swift_slowDealloc(v224, -1, -1);

      v226 = v229;
    }
    else
    {

      v226 = v207;
    }
    v54 = v245;
    v245(v226, v10);
    v41 = v244;
    sub_10036D61C(v208);

    goto LABEL_56;
  }
  v63 = v243;
  swift_bridgeObjectRelease_n(v58, 2);
LABEL_18:

  v74 = v234;
  v75 = ((uint64_t (*)(char *, uint64_t, uint64_t))v242)(v234, v241, v10);
  v76 = Logger.logObject.getter(v75);
  v78 = static os_log_type_t.info.getter(v77);
  if (os_log_type_enabled(v76, v78))
  {
    v79 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v79 = 0;
    _os_log_impl((void *)&_mh_execute_header, v76, v78, "[Default Source UI] (DOCDocumentSourceIdentifier.localAutomatic?, true): iCloud Drive is available, showing prompt to select between iCloud Drive and local storage", v79, 2u);
    swift_slowDealloc(v79, -1, -1);
  }

  v54(v74, v10);
  v80 = 1;
LABEL_21:
  sub_100369A9C(v80);
LABEL_56:
  static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v144 = v143;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state))
  {

    swift_bridgeObjectRelease(v144);
    return;
  }
  v145 = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v145);
  v148 = v147;

  v149._countAndFlagsBits = v146;
  v149._object = v148;
  LOBYTE(v145) = String.hasPrefix(_:)(v149);
  swift_bridgeObjectRelease(v148);
  if ((v145 & 1) != 0)
  {
    v150 = swift_bridgeObjectRelease(v144);
    v151 = v235;
  }
  else
  {
    v152._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2);
    object = v152._object;
    v154 = String.hasPrefix(_:)(v152);
    swift_bridgeObjectRelease(object);
    v150 = swift_bridgeObjectRelease(v144);
    v151 = v235;
    if (!v154)
    {

      return;
    }
  }
  ((void (*)(char *, uint64_t, uint64_t, __n128))v242)(v151, v241, v10, v150);
  v92 = v244;
  v155 = Logger.logObject.getter(v92);
  v157 = static os_log_type_t.info.getter(v156);
  if (os_log_type_enabled(v155, v157))
  {
    v239 = v10;
    v158 = (uint8_t *)swift_slowAlloc(12, -1);
    v159 = swift_slowAlloc(32, -1);
    v247 = (uint64_t)v92;
    v248[0] = v159;
    v245 = v54;
    *(_DWORD *)v158 = 136315138;
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v161 = v160;
    v162 = v92;
    v163 = String.init<A>(describing:)(&v247, v161);
    v165 = v164;
    v247 = sub_1000544FC(v163, v164, v248);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, v248);

    swift_bridgeObjectRelease(v165);
    _os_log_impl((void *)&_mh_execute_header, v155, v157, "[Default Source UI] Updating saved identifier with a real iCloud Domain: %s", v158, 0xCu);
    swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v159, -1, -1);
    swift_slowDealloc(v158, -1, -1);

    v245(v235, v239);
  }
  else
  {

    v54(v151, v10);
  }
  sub_10036D61C(v92);
LABEL_65:

}

void sub_10036D374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_25;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v4 = a1 & 0xC000000000000001;
    v5 = 4;
    do
    {
      if (v4)
        v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      else
        v6 = (char *)*(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
      {
        __break(1u);
        goto LABEL_24;
      }
      v9 = *(void **)&v6[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v9 && objc_msgSend(v9, "isEnterpriseDomain"))
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_13;
      }

      ++v5;
    }
    while (v8 != v3);
    swift_bridgeObjectRelease(a1);
    v7 = 0;
LABEL_13:
    swift_bridgeObjectRetain(a1);
    v10 = 4;
    while (1)
    {
      v11 = v4
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, a1)
          : (char *)*(id *)(a1 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      v14 = *(void **)&v11[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v14 && objc_msgSend(v14, "isMainiCloudDriveDomain"))
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_30;
      }

      ++v10;
      if (v13 == v3)
      {
        swift_bridgeObjectRelease(a1);
        v12 = 0;
        goto LABEL_30;
      }
    }
LABEL_24:
    __break(1u);
LABEL_25:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  v12 = 0;
  v7 = 0;
LABEL_30:
  v16 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
  }
  v20 = objc_msgSend(v16, "dataOwnerStateForBundleIdentifier:", v17);

  if (v20 == (id)1 && v7 != 0)
  {

    return;
  }
  if (v12 || !v3)
    goto LABEL_38;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(a1);
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    swift_bridgeObjectRelease(a1);
    goto LABEL_38;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    *(id *)(a1 + 32);
LABEL_38:

    return;
  }
  __break(1u);
}

void sub_10036D61C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *);
  id v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  dispatch_semaphore_t v41;
  void *v42;
  NSString v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint8_t *v69;
  char v70;
  double v71;
  void (*v72)(char *);
  uint64_t v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSString v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void (*v88)(char *);
  unsigned __int8 v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *);
  char v99;
  __n128 v100;
  uint8_t *v101;
  id v102;
  id v103;
  NSObject *v104;
  __n128 v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  NSString v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  void (*v120)(char *);
  char *v121;
  void (*v122)(char *);
  id v123;
  id v124;
  NSObject *v125;
  __n128 v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  NSString v131;
  id v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint8_t *v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *);
  id v141;
  id v142;
  char *v143;
  uint8_t *v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *);
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t aBlock[5];
  uint64_t v155;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v145 = (uint8_t *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v142 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v142 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (uint8_t *)&v142 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v142 - v18;
  v20 = Logger.UI.unsafeMutableAddressor(v17);
  v149 = v5;
  v21 = *(void (**)(char *))(v5 + 16);
  v147 = v20;
  v21(v19);
  v22 = a1;
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.info.getter(v24);
  v26 = os_log_type_enabled(v23, v25);
  v150 = v2;
  v151 = v22;
  v143 = v13;
  v144 = v16;
  v146 = (uint64_t)v10;
  v148 = v21;
  if (v26)
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    aBlock[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v31 = v30;
    v153 = sub_1000544FC(v29, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, aBlock);

    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v23, v25, "[Default Source UI]: Updating Alert State for %s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v32 = v27;
    v2 = v150;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

  }
  v149 = *(_QWORD *)(v149 + 8);
  ((void (*)(char *, uint64_t))v149)(v19, v4);
  v33 = v4;
  v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  v35 = v34;
  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v37 = v36;
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v39 = v38;
  v40 = swift_allocObject(&unk_1005E20C0, 24, 7);
  *(_QWORD *)(v40 + 16) = 0;
  v41 = dispatch_semaphore_create(0);
  v42 = (void *)objc_opt_self(DOCDocumentSource);
  v43 = String._bridgeToObjectiveC()();
  v44 = swift_allocObject(&unk_1005E20E8, 32, 7);
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = v40;
  aBlock[4] = (uint64_t)sub_10036E97C;
  v155 = v44;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100083540;
  aBlock[3] = (uint64_t)&unk_1005E2100;
  v45 = _Block_copy(aBlock);
  v46 = v155;
  v47 = v41;
  swift_retain();
  swift_release(v46);
  v142 = v42;
  v48 = v42;
  v49 = v151;
  objc_msgSend(v48, "defaultSourceForBundleIdentifier:selectedSourceIdentifier:completionBlock:", v43, v151, v45);
  _Block_release(v45);

  OS_dispatch_semaphore.wait()();
  swift_beginAccess(v40 + 16, aBlock, 0, 0);
  v50 = *(void **)(v40 + 16);
  v51 = v50;
  swift_bridgeObjectRelease(v39);
  swift_release(v40);
  if (v50)
  {
    v52 = objc_msgSend(v51, "identifier");
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;
    v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v58 = v56;
    if (v53 == v57 && v55 == v56)
    {

      swift_bridgeObjectRelease_n(v55, 2);
    }
    else
    {
      v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);

      swift_bridgeObjectRelease(v55);
      *(_QWORD *)&v71 = swift_bridgeObjectRelease(v58).n128_u64[0];
      if ((v70 & 1) == 0)
      {
        v90 = objc_msgSend(v51, "identifier", v71);
        v91 = DOCDocumentSourceIdentifierLocal;
        v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v94 = v93;
        v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
        v97 = v95;
        if (v92 == v96 && v94 == v95)
        {

          swift_bridgeObjectRelease_n(v94, 2);
          v98 = (void (*)(char *))v33;
        }
        else
        {
          v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v94, v96, v95, 0);

          swift_bridgeObjectRelease(v94);
          v100 = swift_bridgeObjectRelease(v97);
          v98 = (void (*)(char *))v33;
          if ((v99 & 1) == 0)
          {
            v121 = v143;
            ((void (*)(char *, uint64_t, void (*)(char *), __n128))v148)(v143, v147, v98, v100);
            v122 = v98;
            v123 = v151;
            v124 = v151;
            v125 = Logger.logObject.getter(v124);
            v127 = static os_log_type_t.info.getter(v126);
            if (os_log_type_enabled(v125, v127))
            {
              v148 = v122;
              v128 = (uint8_t *)swift_slowAlloc(12, -1);
              v146 = swift_slowAlloc(32, -1);
              v153 = v146;
              v145 = v128;
              *(_DWORD *)v128 = 136315138;
              v144 = v128 + 4;
              static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
              v130 = v129;
              v131 = String._bridgeToObjectiveC()();
              v132 = objc_msgSend(v131, "description", swift_bridgeObjectRelease(v130).n128_f64[0]);
              v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
              v147 = (uint64_t)v51;
              v135 = v134;

              v152 = sub_1000544FC(v133, v135, &v153);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);

              v136 = v135;
              v51 = (id)v147;
              swift_bridgeObjectRelease(v136);
              v137 = v145;
              _os_log_impl((void *)&_mh_execute_header, v125, v127, "[Default Source UI]: %s is no longer available -- switching to iCloud Drive", v145, 0xCu);
              v138 = v146;
              swift_arrayDestroy(v146, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v138, -1, -1);
              swift_slowDealloc(v137, -1, -1);

              v139 = v143;
              v140 = v148;
            }
            else
            {

              v139 = v121;
              v140 = v122;
            }
            ((void (*)(char *, void (*)(char *)))v149)(v139, v140);
            v141 = objc_msgSend(v51, "identifier");
            objc_msgSend(v142, "setDefaultSourceIdentifier:forBundleIdentifier:", v141, v35);

            v89 = 0;
            goto LABEL_18;
          }
        }

        v101 = v144;
        ((void (*)(uint8_t *, uint64_t, void (*)(char *)))v148)(v144, v147, v98);
        v102 = v151;
        v103 = v151;
        v104 = Logger.logObject.getter(v103);
        v106 = static os_log_type_t.info.getter(v105);
        if (os_log_type_enabled(v104, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc(12, -1);
          v147 = swift_slowAlloc(32, -1);
          v153 = v147;
          *(_DWORD *)v107 = 136315138;
          v146 = (uint64_t)(v107 + 4);
          static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
          v109 = v108;
          v110 = String._bridgeToObjectiveC()();
          v111 = objc_msgSend(v110, "description", swift_bridgeObjectRelease(v109).n128_f64[0]);
          v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
          v148 = v98;
          v113 = v112;
          v114 = v51;
          v116 = v115;

          v152 = sub_1000544FC(v113, v116, &v153);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);

          v117 = v116;
          v51 = v114;
          swift_bridgeObjectRelease(v117);
          _os_log_impl((void *)&_mh_execute_header, v104, v106, "[Default Source UI]: %s is no longer available -- switching to local", v107, 0xCu);
          v118 = v147;
          swift_arrayDestroy(v147, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v118, -1, -1);
          swift_slowDealloc(v107, -1, -1);

          v119 = v144;
          v120 = v148;
        }
        else
        {

          v119 = v101;
          v120 = v98;
        }
        ((void (*)(uint8_t *, void (*)(char *)))v149)(v119, v120);
        v89 = 2;
LABEL_18:
        sub_100369A9C(v89);

        return;
      }

    }
    v72 = (void (*)(char *))v33;
    v73 = v146;
    ((void (*)(uint64_t, uint64_t, void (*)(char *)))v148)(v146, v147, v72);
    v74 = v151;
    v75 = v151;
    v76 = Logger.logObject.getter(v75);
    v77 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc(12, -1);
      v79 = swift_slowAlloc(32, -1);
      v153 = v79;
      v147 = (uint64_t)v51;
      *(_DWORD *)v78 = 136315138;
      v145 = v78 + 4;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
      v81 = v80;
      v82 = String._bridgeToObjectiveC()();
      v83 = objc_msgSend(v82, "description", swift_bridgeObjectRelease(v81).n128_f64[0]);
      v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
      v148 = v72;
      v86 = v85;

      v152 = sub_1000544FC(v84, v86, &v153);
      v51 = (id)v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);

      swift_bridgeObjectRelease(v86);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "[Default Source UI]: %s is still available, nothing to do", v78, 0xCu);
      swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      v87 = v146;
      v88 = v148;
    }
    else
    {

      v87 = v73;
      v88 = v72;
    }
    ((void (*)(uint64_t, void (*)(char *)))v149)(v87, v88);
    v89 = 0;
    goto LABEL_18;
  }

  v59 = v145;
  v60 = v33;
  ((void (*)(uint8_t *, uint64_t, uint64_t))v148)(v145, v147, v33);
  v61 = v49;
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.error.getter(v62);
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc(12, -1);
    v65 = swift_slowAlloc(32, -1);
    v153 = v65;
    *(_DWORD *)v64 = 136315138;
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v68 = v67;
    v152 = sub_1000544FC(v66, v67, &v153);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, &v153);

    swift_bridgeObjectRelease(v68);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "[Default Source UI]: no default source for %s", v64, 0xCu);
    swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v64, -1, -1);

    v69 = v145;
  }
  else
  {

    v69 = v59;
  }
  ((void (*)(uint8_t *, uint64_t))v149)(v69, v60);
}

Swift::Int sub_10036E1E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD v30[2];
  uint8_t *v31;
  int v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36[3];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = swift_errorRetain(a2);
    v12 = Logger.UI.unsafeMutableAddressor(v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
    swift_errorRetain(a2);
    v13 = swift_errorRetain(a2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v34 = v14;
      v17 = swift_slowAlloc(12, -1);
      v32 = v16;
      v18 = (uint8_t *)v17;
      v33 = swift_slowAlloc(32, -1);
      v36[0] = v33;
      *(_DWORD *)v18 = 136315138;
      v30[1] = v18 + 4;
      v31 = v18;
      v19 = (void *)_convertErrorToNSError(_:)(a2);
      v20 = objc_msgSend(v19, "description");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v35 = sub_1000544FC(v21, v23, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v24 = v34;
      v25 = v31;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v32, "Failed to fetch default source: %s", v31, 0xCu);
      v26 = v33;
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    swift_beginAccess(a4 + 16, v36, 1, 0);
    v27 = *(void **)(a4 + 16);
    *(_QWORD *)(a4 + 16) = a1;
    v28 = a1;

  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t type metadata accessor for DOCDefaultSourceUIManager()
{
  return objc_opt_self(_TtC5Files25DOCDefaultSourceUIManager);
}

uint64_t storeEnumTagSinglePayload for DOCDefaultSourceUIManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10036E4FC + 4 * byte_1004E4205[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10036E530 + 4 * asc_1004E4200[v4]))();
}

uint64_t sub_10036E530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036E538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10036E540);
  return result;
}

uint64_t sub_10036E54C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10036E554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10036E558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10036E560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCDefaultSourceUIManager.State()
{
  return &type metadata for DOCDefaultSourceUIManager.State;
}

unint64_t sub_10036E580()
{
  unint64_t result;

  result = qword_100650170;
  if (!qword_100650170)
  {
    result = swift_getWitnessTable(&unk_1004E4270, &type metadata for DOCDefaultSourceUIManager.State);
    atomic_store(result, (unint64_t *)&qword_100650170);
  }
  return result;
}

uint64_t sub_10036E5C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = type metadata accessor for DOCDefaultSourceUIManager();
    v22 = v3;
    v12 = v11;
    v13 = swift_unknownObjectRetain(a1);
    v14 = (char *)swift_dynamicCastClassUnconditional(v13, v12, 0, 0, 0);
    v21[1] = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
    v15 = swift_allocObject(&unk_1005E21D8, 24, 7);
    *(_QWORD *)(v15 + 16) = v14;
    aBlock[4] = sub_1000A3588;
    v25 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E21F0;
    v16 = _Block_copy(aBlock);
    v17 = v14;
    static DispatchQoS.unspecified.getter(v17);
    v23 = _swiftEmptyArrayStorage;
    v18 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v19 = sub_10006922C((uint64_t *)&unk_100647540);
    v20 = sub_10008825C((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19, v20, v2, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

    return swift_release(v25);
  }
  return result;
}

uint64_t sub_10036E7E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036E808()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10036E83C(uint64_t a1)
{
  uint64_t v1;

  return sub_10036BE14(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10036E848()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10036E884()
{
  uint64_t v0;

  sub_10036C030(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(uint8_t **)(v0 + 48));
}

void sub_10036E894()
{
  uint64_t v0;

  sub_100369978(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10036E89C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10036E8C8()
{
  uint64_t v0;

  sub_10036AD90(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10036E8D0(char a1)
{
  uint64_t v1;

  sub_10036AE28(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10036E8D8(uint64_t a1)
{
  uint64_t v1;

  return sub_10036BB38(a1, *(uint64_t (**)(BOOL))(v1 + 16));
}

uint64_t sub_10036E8E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10036E90C()
{
  uint64_t v0;

  sub_10036AEE0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_10036E918()
{
  sub_10036B7B4();
}

uint64_t sub_10036E920(uint64_t a1)
{
  uint64_t v1;

  return sub_10036B96C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10036E938(uint64_t a1)
{
  uint64_t v1;

  return sub_10036B8C4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10036E950()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_10036E97C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10036E1E8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_10036E984()
{
  sub_100369FD8();
}

uint64_t sub_10036E99C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10036E9C0(uint64_t a1)
{
  uint64_t v1;

  sub_10036BCD0(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_10036EA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for URL(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10036EAC0, 0, 0);
}

uint64_t sub_10036EAC0()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(objc_allocWithZone((Class)DOCConfiguration), "init");
  v0[11] = v1;
  objc_msgSend(v1, "setHostIdentifier:", DOCDocumentsAppBundleIdentifier);
  v2 = objc_msgSend(v1, "hostIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  v5 = objc_allocWithZone((Class)DOCSourceObserver);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithUserAction:hostIdentifier:", 1, v6, swift_bridgeObjectRelease(v4).n128_f64[0]);
  v0[12] = v7;

  v8 = (_QWORD *)swift_task_alloc(dword_1006501C4);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_10036EBE0;
  v9 = v0[10];
  v10 = v0[7];
  v8[4] = v7;
  v8[5] = v10;
  v8[2] = v9;
  v8[3] = v1;
  return swift_task_switch(sub_100370904, 0, 0);
}

uint64_t sub_10036EBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10036EDF4;
  else
    v3 = sub_10036EC44;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10036EC44()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t result;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = 0xE900000000000073;
  v3 = 0x746E656D75636F44;
  switch(v1)
  {
    case 0:
      goto LABEL_6;
    case 1:
      v2 = 0xE700000000000000;
      v3 = 0x706F746B736544;
      goto LABEL_6;
    case 2:
      v3 = 0x64616F6C6E776F44;
      goto LABEL_6;
    case 3:
      v3 = 0;
      v2 = 0xE000000000000000;
LABEL_6:
      v7 = *(void **)(v0 + 88);
      v6 = *(void **)(v0 + 96);
      v9 = *(_QWORD *)(v0 + 72);
      v8 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 64);
      URL.appendingPathComponent(_:)(v3, v2);

      swift_bridgeObjectRelease(v2);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      swift_task_dealloc(v8);
      result = (*(uint64_t (**)(void))(v0 + 8))();
      break;
    default:
      _StringGuts.grow(_:)(53);
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0xE000000000000000;
      v4._object = (void *)0x800000010052B540;
      v4._countAndFlagsBits = 0xD000000000000033;
      String.append(_:)(v4);
      *(_QWORD *)(v0 + 32) = v1;
      _print_unlocked<A, B>(_:_:)(v0 + 32, v0 + 16, &type metadata for DOCNamedLocation, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "Files/DOCNamedLocationResolver.swift", 36, 2, 107, 0);
      break;
  }
  return result;
}

uint64_t sub_10036EDF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10036EE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v23[5];
  _QWORD *v24;

  v6 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v7 = static os_log_type_t.debug.getter(v6);
  v8 = sub_10006922C((uint64_t *)&unk_100644560);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
  v10 = v9;
  v11 = 0xE900000000000073;
  v12 = 0x746E656D75636F44;
  v13 = 0xE900000000000073;
  switch(a1)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v13 = 0xE700000000000000;
      v12 = 0x706F746B736544;
      goto LABEL_5;
    case 2:
      v12 = 0x64616F6C6E776F44;
      goto LABEL_5;
    case 3:
      v13 = 0xEB00000000657669;
      v12 = 0x724464756F6C4369;
LABEL_5:
      *(_QWORD *)(v9 + 56) = &type metadata for String;
      *(_QWORD *)(v9 + 64) = sub_10006A638();
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      os_log(_:dso:log:type:_:)("About to resolve named location '%@'", 36, 2, &_mh_execute_header, v6, v7, v10);

      swift_bridgeObjectRelease(v10);
      v14 = sub_100371E00;
      v15 = 0x746E656D75636F44;
      v16 = &unk_1005E2508;
      switch(a1)
      {
        case 0:
          goto LABEL_9;
        case 1:
          v14 = sub_100371E00;
          v11 = 0xE700000000000000;
          v15 = 0x706F746B736544;
          v16 = &unk_1005E24E0;
          goto LABEL_9;
        case 2:
          v17 = objc_msgSend(objc_allocWithZone((Class)DOCDownloadSettings), "init");
          v18 = (_QWORD *)swift_allocObject(&unk_1005E2440, 40, 7);
          v18[2] = 2;
          v18[3] = a2;
          v18[4] = a3;
          v23[4] = sub_100371A88;
          v24 = v18;
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 1107296256;
          v23[2] = sub_100083540;
          v23[3] = &unk_1005E2458;
          v19 = _Block_copy(v23);
          v20 = v24;
          swift_retain();
          swift_release(v20);
          objc_msgSend(v17, "fetchDefaultDownloadsLocationItem:", v19);
          _Block_release(v19);

          return;
        case 3:
          v15 = 0;
          v14 = sub_100371A94;
          v11 = 0xE000000000000000;
          v16 = &unk_1005E2490;
LABEL_9:
          v21 = (_QWORD *)swift_allocObject(v16, 40, 7);
          v21[2] = a1;
          v21[3] = a2;
          v21[4] = a3;
          v22 = (_QWORD *)swift_allocObject(&unk_1005E24B8, 80, 7);
          v22[2] = a1;
          v22[3] = v14;
          v22[4] = v21;
          v22[5] = a1;
          v22[6] = a2;
          v22[7] = a3;
          v22[8] = v15;
          v22[9] = v11;
          swift_retain_n(a3, 2);
          swift_retain();
          sub_10036BBAC((uint64_t)sub_100371AD4, (uint64_t)v22);
          swift_release(v21);
          swift_release(v22);
          break;
        default:
          goto LABEL_10;
      }
      break;
    default:
LABEL_10:
      v23[0] = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, v23, &type metadata for DOCNamedLocation, &type metadata for Int);
      __break(1u);
      break;
  }
}

uint64_t sub_10036F18C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, __n128))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSURL *v20;
  void *v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD, __n128);
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t result;
  uint64_t v28;
  id v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v11 = static os_log_type_t.debug.getter(v10);
  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 112, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D4CE0;
  v14 = (_QWORD *)v13;
  HIDWORD(v28) = v11;
  v29 = v10;
  v15 = 0xE900000000000073;
  v16 = 0x746E656D75636F44;
  switch(a1)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v15 = 0xE700000000000000;
      v16 = 0x706F746B736544;
      goto LABEL_5;
    case 2:
      v16 = 0x64616F6C6E776F44;
      goto LABEL_5;
    case 3:
      v15 = 0xEB00000000657669;
      v16 = 0x724464756F6C4369;
LABEL_5:
      *(_QWORD *)(v13 + 56) = &type metadata for String;
      v17 = sub_10006A638();
      v14[8] = v17;
      v14[4] = v16;
      v14[5] = v15;
      sub_1000271D4(a2, (uint64_t)v8, &qword_100643470);
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18) == 1)
      {
        v32 = 0;
        v30 = 0u;
        v31 = 0u;
        v21 = v29;
        v22 = HIDWORD(v28);
      }
      else
      {
        URL._bridgeToObjectiveC()(v20);
        v23 = a3;
        v25 = v24;
        *((_QWORD *)&v31 + 1) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
        v32 = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
        *(_QWORD *)&v30 = v25;
        a3 = v23;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
        v21 = v29;
        v22 = HIDWORD(v28);
        if (*((_QWORD *)&v31 + 1))
        {
          sub_1000E85C4(&v30, (uint64_t)(v14 + 9));
          goto LABEL_10;
        }
      }
      v14[12] = &type metadata for String;
      v14[13] = v17;
      v14[9] = 0x296C696E28;
      v14[10] = 0xE500000000000000;
      sub_10000CB4C((uint64_t)&v30, (uint64_t *)&unk_1006453E0);
LABEL_10:
      os_log(_:dso:log:type:_:)("Did resolve named location '%@' to URL: %@", 42, 2, &_mh_execute_header, v21, v22, v14);

      v26 = swift_bridgeObjectRelease(v14);
      return a3(a2, v26);
    default:
      *(_QWORD *)&v30 = a1;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, &v30, &type metadata for DOCNamedLocation, &type metadata for Int);
      __break(1u);
      return result;
  }
}

void sub_10036F474(char *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 aBlock;
  void (*v47)(uint64_t, void *, void *);
  void *v48;
  unint64_t v49;
  _QWORD *v50;

  v17 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v21 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v21)
    {
      v44 = a9;
      v22 = objc_opt_self(FPItemManager);
      v43 = a4;
      v23 = a3;
      v24 = (void *)v22;
      v45 = a1;
      v25 = v21;
      v26 = objc_msgSend(v24, "defaultManager");
      v27 = (_QWORD *)swift_allocObject(&unk_1005E2530, 88, 7);
      v27[2] = v25;
      v27[3] = a2;
      v27[4] = a5;
      v27[5] = a6;
      v27[6] = a7;
      v27[7] = a8;
      v29 = v43;
      v28 = v44;
      v27[8] = v44;
      v27[9] = v23;
      v27[10] = v29;
      v49 = (unint64_t)sub_100371B50;
      v50 = v27;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v47 = sub_100083540;
      v48 = &unk_1005E2548;
      v30 = _Block_copy(&aBlock);
      v31 = v50;
      v32 = v25;
      swift_retain();
      swift_bridgeObjectRetain(v28);
      swift_retain();
      swift_release(v31);
      objc_msgSend(v26, "doc_fetchRootItemForProviderDomain:completionHandler:", v32, v30);
      _Block_release(v30);

      return;
    }
  }
  v45 = (char *)a3;
  v33 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
  v34 = static os_log_type_t.error.getter(v33);
  v35 = sub_10006922C((uint64_t *)&unk_100644560);
  v36 = swift_allocObject(v35, 112, 7);
  v37 = (_QWORD *)v36;
  *(_OWORD *)(v36 + 16) = xmmword_1004D4CE0;
  if (a1)
  {
    v48 = (void *)type metadata accessor for DOCFileProviderSource();
    v49 = sub_100371B04();
    *(_QWORD *)&aBlock = a1;
    sub_1000E85C4(&aBlock, (uint64_t)(v37 + 4));
  }
  else
  {
    *(_QWORD *)(v36 + 56) = &type metadata for String;
    *(_QWORD *)(v36 + 64) = sub_10006A638();
    v37[4] = 0x72756F73206F6E28;
    v37[5] = 0xEB00000000296563;
    if (a2 > 3)
    {
LABEL_9:
      *(_QWORD *)&aBlock = a2;
      v39 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, &aBlock, &type metadata for DOCNamedLocation, &type metadata for Int);
      __break(1u);
LABEL_10:
      v38 = 0x64616F6C6E776F44;
      goto LABEL_12;
    }
  }
  a3 = (void *)0xE900000000000073;
  v38 = 0x746E656D75636F44;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      a3 = (void *)0xE700000000000000;
      v38 = 0x706F746B736544;
      break;
    case 2uLL:
      goto LABEL_10;
    case 3uLL:
      a3 = (void *)0xEB00000000657669;
      v38 = 0x724464756F6C4369;
      break;
    default:
      goto LABEL_9;
  }
LABEL_12:
  v37[12] = &type metadata for String;
  v37[13] = sub_10006A638();
  v37[9] = v38;
  v37[10] = a3;
  v40 = a1;
  os_log(_:dso:log:type:_:)("Unable to obtain iCloud Drive source (%@), or obtaining its provider domain, for resolving named location '%@'.", 111, 2, &_mh_execute_header, v33, v34, v37);

  swift_bridgeObjectRelease(v37);
  v41 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v20, 1, 1, v41);
  ((void (*)(char *))v45)(v20);
  sub_10000CB4C((uint64_t)v20, &qword_100643470);
}

void sub_10036F830(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  void *v26;
  id v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  id v52;
  _BYTE v53[4];
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  void *v61;
  void *v62;
  uint64_t (*v63)();
  _QWORD *v64;

  v59 = a4;
  v18 = sub_10006922C(&qword_100643470);
  v19 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64);
  __chkstk_darwin(v18);
  v20 = &v53[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v25 = &v53[-v24];
  if (a1)
  {
    v26 = (void *)objc_opt_self(FPItemManager);
    v27 = a1;
    v28 = objc_msgSend(v26, "defaultManager");
    v29 = (_QWORD *)swift_allocObject(&unk_1005E25D0, 88, 7);
    v30 = v59;
    v29[2] = v27;
    v29[3] = v30;
    v29[4] = a5;
    v29[5] = a6;
    v29[6] = a7;
    v29[7] = a8;
    v29[8] = a9;
    v29[9] = a10;
    v29[10] = a11;
    v63 = (uint64_t (*)())sub_100371BD0;
    v64 = v29;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v61 = sub_100175118;
    v62 = &unk_1005E25E8;
    v31 = _Block_copy(&aBlock);
    v32 = v64;
    v33 = v27;
    swift_retain();
    swift_bridgeObjectRetain(a9);
    swift_retain();
    swift_release(v32);
    objc_msgSend(v28, "fetchURLForItem:completionHandler:", v33, v31);
    _Block_release(v31);

  }
  else
  {
    v56 = v23;
    v57 = a5;
    v55 = a6;
    v58 = a7;
    v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v22);
    v54 = static os_log_type_t.debug.getter(v34);
    v35 = sub_10006922C((uint64_t *)&unk_100644560);
    v36 = swift_allocObject(v35, 152, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v36 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
    *(_QWORD *)(v36 + 64) = sub_100083450(&qword_100657300, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
    *(_QWORD *)(v36 + 32) = a3;
    v37 = 0xE900000000000073;
    v38 = 0x746E656D75636F44;
    switch(v59)
    {
      case 0:
        break;
      case 1:
        v37 = 0xE700000000000000;
        v38 = 0x706F746B736544;
        break;
      case 2:
        v38 = 0x64616F6C6E776F44;
        break;
      case 3:
        v37 = 0xEB00000000657669;
        v38 = 0x724464756F6C4369;
        break;
      default:
        *(_QWORD *)&aBlock = v59;
        v52 = a3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, &aBlock, &type metadata for DOCNamedLocation, &type metadata for Int);
        __break(1u);
        JUMPOUT(0x10036FCFCLL);
    }
    *(_QWORD *)(v36 + 96) = &type metadata for String;
    v39 = sub_10006A638();
    *(_QWORD *)(v36 + 104) = v39;
    *(_QWORD *)(v36 + 72) = v38;
    *(_QWORD *)(v36 + 80) = v37;
    if (a2)
    {
      v40 = a3;
      v41 = _convertErrorToNSError(_:)(a2);
      v62 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v63 = (uint64_t (*)())sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&aBlock = v41;
      sub_1000E85C4(&aBlock, v36 + 112);
    }
    else
    {
      *(_QWORD *)(v36 + 136) = &type metadata for String;
      *(_QWORD *)(v36 + 144) = v39;
      *(_QWORD *)(v36 + 112) = 7104878;
      *(_QWORD *)(v36 + 120) = 0xE300000000000000;
      v42 = a3;
    }
    os_log(_:dso:log:type:_:)("Unable to obtain root item for provider domain (%@) for resolving named location '%@', with error: %@", 101, 2, &_mh_execute_header, v34, v54, v36);

    swift_bridgeObjectRelease(v36);
    v43 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v25, 1, 1, v43);
    sub_1000271D4((uint64_t)v25, (uint64_t)v20, &qword_100643470);
    v44 = *(unsigned __int8 *)(v56 + 80);
    v45 = (v44 + 24) & ~v44;
    v46 = (v19 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = swift_allocObject(&unk_1005E2580, v46 + 16, v44 | 7);
    *(_QWORD *)(v47 + 16) = v57;
    sub_1000B34E4((uint64_t)v20, v47 + v45);
    v48 = (_QWORD *)(v47 + v46);
    v49 = v58;
    *v48 = v55;
    v48[1] = v49;
    v63 = sub_100371B8C;
    v64 = (_QWORD *)v47;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v61 = sub_10004A82C;
    v62 = &unk_1005E2598;
    v50 = _Block_copy(&aBlock);
    v51 = v64;
    swift_retain();
    swift_release(v51);
    DOCRunInMainThread(v50);
    _Block_release(v50);
    sub_10000CB4C((uint64_t)v25, &qword_100643470);
  }
}

uint64_t sub_10036FD0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  uint64_t (*v61)(uint64_t);
  void *v62;
  uint64_t (*v63)();
  uint64_t v64;

  v52 = a8;
  v53 = a4;
  v58 = a6;
  v59 = a7;
  v57 = a5;
  v54 = a2;
  v12 = sub_10006922C(&qword_100643470);
  v55 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v55 + 64);
  __chkstk_darwin(v12);
  v56 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v52 - v25;
  sub_1000271D4(a1, (uint64_t)v19, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    v27 = (uint64_t)v16;
    v28 = sub_10000CB4C((uint64_t)v19, &qword_100643470);
    v29 = *(id *)DOCLog.UI.unsafeMutableAddressor(v28);
    LODWORD(v52) = static os_log_type_t.debug.getter(v29);
    v30 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v30, 152, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v31 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v31 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v31 + 32) = a3;
    v32 = 0xE900000000000073;
    v33 = 0x746E656D75636F44;
    switch(v53)
    {
      case 0:
        goto LABEL_7;
      case 1:
        v32 = 0xE700000000000000;
        v33 = 0x706F746B736544;
        goto LABEL_7;
      case 2:
        v33 = 0x64616F6C6E776F44;
        goto LABEL_7;
      case 3:
        v32 = 0xEB00000000657669;
        v33 = 0x724464756F6C4369;
LABEL_7:
        *(_QWORD *)(v31 + 96) = &type metadata for String;
        v36 = sub_10006A638();
        *(_QWORD *)(v31 + 104) = v36;
        *(_QWORD *)(v31 + 72) = v33;
        *(_QWORD *)(v31 + 80) = v32;
        v37 = v54;
        if (v54)
        {
          v38 = a3;
          v39 = _convertErrorToNSError(_:)(v37);
          v62 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
          v63 = (uint64_t (*)())sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
          *(_QWORD *)&aBlock = v39;
          sub_1000E85C4(&aBlock, v31 + 112);
        }
        else
        {
          *(_QWORD *)(v31 + 136) = &type metadata for String;
          *(_QWORD *)(v31 + 144) = v36;
          *(_QWORD *)(v31 + 112) = 7104878;
          *(_QWORD *)(v31 + 120) = 0xE300000000000000;
          v40 = a3;
        }
        os_log(_:dso:log:type:_:)("Unable to obtain root item URL for root item (%@) for resolving named location '%@', with error: %@", 99, 2, &_mh_execute_header, v29, v52, v31);

        v41 = swift_bridgeObjectRelease(v31);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v21 + 56))(v27, 1, 1, v20, v41);
        v42 = v56;
        sub_1000271D4(v27, v56, &qword_100643470);
        v43 = *(unsigned __int8 *)(v55 + 80);
        v44 = (v43 + 24) & ~v43;
        v45 = (v13 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
        v46 = swift_allocObject(&unk_1005E2620, v45 + 16, v43 | 7);
        *(_QWORD *)(v46 + 16) = v57;
        sub_1000B34E4(v42, v46 + v44);
        v47 = (_QWORD *)(v46 + v45);
        v48 = v59;
        *v47 = v58;
        v47[1] = v48;
        v63 = sub_100371B8C;
        v64 = v46;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v61 = sub_10004A82C;
        v62 = &unk_1005E2638;
        v49 = _Block_copy(&aBlock);
        v50 = v64;
        swift_retain();
        swift_release(v50);
        DOCRunInMainThread(v49);
        _Block_release(v49);
        result = sub_10000CB4C(v27, &qword_100643470);
        break;
      default:
        *(_QWORD *)&aBlock = v53;
        v51 = a3;
        result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, &aBlock, &type metadata for DOCNamedLocation, &type metadata for Int);
        __break(1u);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    URL.appendingPathComponent(_:)(v52, a9);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v23, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
    a10(v16);
    sub_10000CB4C((uint64_t)v16, &qword_100643470);
    v34 = *(void (**)(char *, uint64_t))(v21 + 8);
    v34(v23, v20);
    return ((uint64_t (*)(char *, uint64_t))v34)(v26, v20);
  }
  return result;
}

uint64_t sub_100370208(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  uint64_t (*v62)(uint64_t);
  void *v63;
  uint64_t (*v64)();
  uint64_t v65;

  v10 = sub_10006922C(&qword_100643470);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v56 - v22;
  v59 = v24;
  if (a2)
  {
    v57 = a4;
    v58 = a5;
    v25 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
    v26 = static os_log_type_t.debug.getter();
    v27 = sub_10006922C((uint64_t *)&unk_100644560);
    v28 = swift_allocObject(v27, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
    v29 = (_QWORD *)v28;
    v30 = 0xE900000000000073;
    v31 = 0x746E656D75636F44;
    v56 = a3;
    switch((unint64_t)a3)
    {
      case 0uLL:
        break;
      case 1uLL:
        v30 = 0xE700000000000000;
        v31 = 0x706F746B736544;
        break;
      case 2uLL:
        v31 = 0x64616F6C6E776F44;
        break;
      case 3uLL:
        v30 = 0xEB00000000657669;
        v31 = 0x724464756F6C4369;
        break;
      default:
        aBlock = a3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCNamedLocation, &aBlock, &type metadata for DOCNamedLocation, &type metadata for Int);
        __break(1u);
        JUMPOUT(0x1003706F0);
    }
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    *(_QWORD *)(v28 + 64) = sub_10006A638();
    v29[4] = v31;
    v29[5] = v30;
    v35 = _convertErrorToNSError(_:)(a2);
    v29[12] = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v29[13] = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    v29[9] = v35;
    os_log(_:dso:log:type:_:)("Unable to obtain downloads location URL for resolving named location '%@', with error: %@", 89, 2, &_mh_execute_header, v25, v26, v29);

    swift_bridgeObjectRelease(v29);
    v36 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v15, 1, 1, v36);
    sub_1000271D4((uint64_t)v15, (uint64_t)v12, &qword_100643470);
    v37 = *(unsigned __int8 *)(v59 + 80);
    v38 = (v37 + 24) & ~v37;
    v39 = (v11 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v40 = swift_allocObject(&unk_1005E2710, v39 + 16, v37 | 7);
    *(_QWORD *)(v40 + 16) = v56;
    sub_1000B34E4((uint64_t)v12, v40 + v38);
    v41 = (_QWORD *)(v40 + v39);
    v42 = v58;
    *v41 = v57;
    v41[1] = v42;
    v64 = sub_100371B8C;
    v65 = v40;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10004A82C;
    v63 = &unk_1005E2728;
    v43 = _Block_copy(&aBlock);
    v44 = v65;
    swift_retain();
    swift_release(v44);
  }
  else
  {
    if (a1)
    {
      v32 = objc_msgSend(a1, "fileURL", v21);
      if (v32)
      {
        v33 = v32;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v32);

        v34 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v18, 0, 1, v34);
      }
      else
      {
        v48 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v18, 1, 1, v48);
      }
      v45 = a4;
      v46 = a5;
      sub_1000B34E4((uint64_t)v18, (uint64_t)v23);
    }
    else
    {
      v45 = a4;
      v46 = a5;
      v47 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v23, 1, 1, v47);
    }
    sub_1000271D4((uint64_t)v23, (uint64_t)v15, &qword_100643470);
    v49 = *(unsigned __int8 *)(v59 + 80);
    v50 = (v49 + 24) & ~v49;
    v51 = (v11 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    v52 = swift_allocObject(&unk_1005E26C0, v51 + 16, v49 | 7);
    *(_QWORD *)(v52 + 16) = a3;
    sub_1000B34E4((uint64_t)v15, v52 + v50);
    v53 = (_QWORD *)(v52 + v51);
    *v53 = v45;
    v53[1] = v46;
    v64 = sub_100371B8C;
    v65 = v52;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10004A82C;
    v63 = &unk_1005E26D8;
    v43 = _Block_copy(&aBlock);
    v54 = v65;
    swift_retain();
    swift_release(v54);
    v15 = v23;
  }
  DOCRunInMainThread(v43);
  _Block_release(v43);
  return sub_10000CB4C((uint64_t)v15, &qword_100643470);
}

void sub_100370700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v8 = sub_10006922C(&qword_100643470);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1005E2670, v14 + 16, v12 | 7);
  *(_QWORD *)(v15 + 16) = a2;
  sub_1000B34E4((uint64_t)v11, v15 + v13);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = a3;
  v16[1] = a4;
  aBlock[4] = sub_100371B8C;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E2688;
  v17 = _Block_copy(aBlock);
  v18 = v20;
  swift_retain();
  swift_release(v18);
  DOCRunInMainThread(v17);
  _Block_release(v17);
}

id sub_100370870()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNamedLocationResolver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003708E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_100370904, 0, 0);
}

uint64_t sub_100370904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = type metadata accessor for URL(0);
  *v3 = v0;
  v3[1] = sub_1003709AC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000042, 0x800000010052B580, sub_100370B3C, v2, v4);
}

uint64_t sub_1003709AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100370A20, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100370A20()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100370A54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v6 = sub_10006922C(&qword_1006501C8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_1005E22D8, v11 + v8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_10037188C(a2, a3, (uint64_t)sub_100370CD8, v12);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

double sub_100370B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_100370A54(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100370B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000271D4(a1, (uint64_t)v8, &qword_1006501D0);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v13 = *v8;
    v9 = sub_10006922C(&qword_1006501C8);
    return CheckedContinuation.resume(throwing:)(&v13, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    v11 = sub_10006922C(&qword_1006501C8);
    return CheckedContinuation.resume(returning:)(v5, v11);
  }
}

uint64_t sub_100370C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_1006501C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100370CD8(uint64_t a1)
{
  sub_10006922C(&qword_1006501C8);
  return sub_100370B48(a1);
}

void sub_100370D18(char *a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint8_t *v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint8_t *v38;
  NSObject *v39;
  void (*v40)(_QWORD);
  id v41;
  unint64_t v42;
  unint64_t v43;
  os_log_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint8_t *v51;
  int v52;
  uint64_t v53;
  os_log_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t aBlock[5];
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;

  v6 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - v15;
  if (a1)
  {
    v17 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v17)
    {
      v18 = (void *)objc_opt_self(FPItemManager);
      v19 = a1;
      v20 = v17;
      v21 = objc_msgSend(v18, "defaultManager");
      v22 = (_QWORD *)swift_allocObject(&unk_1005E23A0, 40, 7);
      v22[2] = v20;
      v22[3] = a2;
      v22[4] = a3;
      aBlock[4] = (uint64_t)sub_100371A48;
      v58 = v22;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100083540;
      aBlock[3] = (uint64_t)&unk_1005E23B8;
      v23 = _Block_copy(aBlock);
      v24 = v58;
      v25 = v20;
      swift_retain();
      objc_msgSend(v21, "doc_fetchRootItemForProviderDomain:completionHandler:", v25, v23, swift_release(v24).n128_f64[0]);
      _Block_release(v23);

      return;
    }
    v32 = a1;
    v33 = Logger.AppIntents.unsafeMutableAddressor(v32);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v33, v9);
    v56 = v32;
    v34 = Logger.logObject.getter(v56);
    v35 = static os_log_type_t.error.getter(v34);
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v54 = v34;
      v37 = swift_slowAlloc(12, -1);
      v52 = v36;
      v38 = (uint8_t *)v37;
      v53 = swift_slowAlloc(32, -1);
      aBlock[0] = v53;
      v55 = a3;
      *(_DWORD *)v38 = 136315138;
      v50 = v38 + 4;
      v51 = v38;
      v39 = v56;
      v40 = a2;
      v41 = -[NSObject description](v39, "description");
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v43 = v42;

      a2 = v40;
      v59 = sub_1000544FC(v49, v43, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);

      swift_bridgeObjectRelease(v43);
      v44 = v54;
      v45 = v51;
      _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v52, "Unable to obtain provider domain for iCloud Drive source %s", v51, 0xCu);
      v46 = v53;
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }
    else
    {

      v44 = v56;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v47 = sub_100371A00();
    *v8 = swift_allocError(&type metadata for DOCNamedLocationResolver.ResolverError, v47, 0, 0);
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    a2(v8);

  }
  else
  {
    v26 = Logger.AppIntents.unsafeMutableAddressor(v14);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v16, v26, v9);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v29, "Unable to obtain iCloud Drive source", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    v31 = sub_100371A00();
    *v8 = swift_allocError(&type metadata for DOCNamedLocationResolver.ResolverError, v31, 0, 0);
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    a2(v8);
  }
  sub_10000CB4C((uint64_t)v8, &qword_1006501D0);
}

void sub_1003711C4(void *a1, uint64_t a2, void *a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSObject *v29;
  NSObject *v30;
  NSObject **v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  NSObject **v36;
  uint8_t *v37;
  void (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  void **aBlock;
  _QWORD v42[4];
  _QWORD *v43;

  v9 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v9);
  v11 = (uint8_t **)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = (void *)objc_opt_self(FPItemManager);
    v18 = a1;
    v19 = objc_msgSend(v17, "defaultManager");
    v20 = (_QWORD *)swift_allocObject(&unk_1005E23F0, 40, 7);
    v20[2] = v18;
    v20[3] = a4;
    v20[4] = a5;
    v42[3] = sub_100371A58;
    v43 = v20;
    aBlock = _NSConcreteStackBlock;
    v42[0] = 1107296256;
    v42[1] = sub_100175118;
    v42[2] = &unk_1005E2408;
    v21 = _Block_copy(&aBlock);
    v22 = v43;
    v23 = v18;
    swift_retain();
    objc_msgSend(v19, "fetchURLForItem:completionHandler:", v23, v21, swift_release(v22).n128_f64[0]);
    _Block_release(v21);

  }
  else
  {
    v40 = v9;
    v24 = Logger.AppIntents.unsafeMutableAddressor(v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v24, v12);
    v25 = a3;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v39 = a5;
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = (NSObject **)swift_slowAlloc(8, -1);
      v37 = v28;
      *(_DWORD *)v28 = 138412290;
      v35 = v28 + 4;
      aBlock = (void **)&v25->isa;
      v29 = v25;
      v38 = a4;
      v30 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v42);
      v31 = v36;
      *v36 = v25;

      v32 = v37;
      a4 = v38;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to obtain root item for provider domain %@", v37, 0xCu);
      v33 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v31, 1, v33);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {

      v26 = v25;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v34 = sub_100371A00();
    *v11 = swift_allocError(&type metadata for DOCNamedLocationResolver.ResolverError, v34, 0, 0);
    swift_storeEnumTagMultiPayload(v11, v40, 1);
    a4(v11);
    sub_10000CB4C((uint64_t)v11, &qword_1006501D0);
  }
}

uint64_t sub_100371508(uint64_t a1, uint64_t a2, void *a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  char *v24;
  char *v25;
  uint8_t *v26;
  NSObject **v27;
  NSObject *v28;
  uint64_t v29;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void (*v37)(char *);
  char *v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;

  v38 = (char *)a1;
  v39 = a5;
  v36 = a3;
  v37 = a4;
  v5 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)type metadata accessor for Logger(0);
  v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4((uint64_t)v38, (uint64_t)v14, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v38 = v7;
    v35 = v5;
    v19 = sub_10000CB4C((uint64_t)v14, &qword_100643470);
    v20 = Logger.AppIntents.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, _QWORD *))(v9 + 16))(v11, v20, v8);
    v21 = v36;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = v11;
    if (os_log_type_enabled(v22, v23))
    {
      v36 = v8;
      v34 = v9;
      v25 = v11;
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v26 = 138412290;
      v40 = v21;
      v28 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      *v27 = v21;

      v24 = v25;
      v9 = v34;
      v8 = v36;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to obtain root item URL for root item %@", v26, 0xCu);
      v29 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v27, 1, v29);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {

      v22 = v21;
    }
    v31 = v38;

    (*(void (**)(char *, _QWORD *))(v9 + 8))(v24, v8);
    v32 = sub_100371A00();
    *(_QWORD *)v31 = swift_allocError(&type metadata for DOCNamedLocationResolver.ResolverError, v32, 0, 0);
    swift_storeEnumTagMultiPayload(v31, v35, 1);
    v37(v31);
    return sub_10000CB4C((uint64_t)v31, &qword_1006501D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v7, v18, v15);
    swift_storeEnumTagMultiPayload(v7, v5, 0);
    v37(v7);
    sub_10000CB4C((uint64_t)v7, &qword_1006501D0);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

double sub_10037188C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  double result;
  _QWORD v14[5];
  uint64_t v15;

  v8 = swift_allocObject(&unk_1005E2300, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = swift_allocObject(&unk_1005E2328, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1003719D4;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  objc_msgSend(a2, "startObservingSources", swift_retain().n128_f64[0]);
  v10 = swift_allocObject(&unk_1005E2350, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1002AD9D4;
  *(_QWORD *)(v10 + 24) = v9;
  v14[4] = sub_1002AD9DC;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10002E508;
  v14[3] = &unk_1005E2368;
  v11 = _Block_copy(v14);
  v12 = v15;
  swift_retain();
  objc_msgSend(a2, "retrieveSourcesForConfiguration:usingBlock:", a1, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  swift_release(v8);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_1003719D4(char *a1)
{
  uint64_t v1;

  sub_100370D18(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003719DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100371A00()
{
  unint64_t result;

  result = qword_1006501D8;
  if (!qword_1006501D8)
  {
    result = swift_getWitnessTable(&unk_1004E4350, &type metadata for DOCNamedLocationResolver.ResolverError);
    atomic_store(result, (unint64_t *)&qword_1006501D8);
  }
  return result;
}

void sub_100371A48(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003711C4(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100371A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100371508(a1, a2, *(void **)(v2 + 16), *(void (**)(char *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100371A64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100371A88(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100370208(a1, a2, *(void ***)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_100371A94(uint64_t a1)
{
  uint64_t *v1;

  sub_100370700(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100371AA0()
{
  _QWORD *v0;

  swift_release(v0[4]);
  swift_release(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

void sub_100371AD4(char *a1)
{
  uint64_t v1;

  sub_10036F474(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

unint64_t sub_100371B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100647558;
  if (!qword_100647558)
  {
    v1 = type metadata accessor for DOCFileProviderSource();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100647558);
  }
  return result;
}

void sub_100371B50(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10036F830(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100371B94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100371BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10036FD0C(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(void (**)(char *))(v2 + 72));
}

uint64_t sub_100371C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 16;
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_100371CD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_10036F18C(*(_QWORD *)(v0 + 16), v0 + v2, *(uint64_t (**)(_QWORD, __n128))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t storeEnumTagSinglePayload for DOCNamedLocationResolver.ResolverError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100371D5C + 4 * byte_1004E42B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100371D7C + 4 * byte_1004E42B9[v4]))();
}

_BYTE *sub_100371D5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100371D7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100371D84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100371D8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100371D94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100371D9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DOCNamedLocationResolver.ResolverError()
{
  return &type metadata for DOCNamedLocationResolver.ResolverError;
}

unint64_t sub_100371DBC()
{
  unint64_t result;

  result = qword_1006501E0;
  if (!qword_1006501E0)
  {
    result = swift_getWitnessTable(&unk_1004E4328, &type metadata for DOCNamedLocationResolver.ResolverError);
    atomic_store(result, (unint64_t *)&qword_1006501E0);
  }
  return result;
}

uint64_t NSProgress.isDownloadingOperation.getter()
{
  return sub_100372064((void **)&NSProgressFileOperationKindDownloading);
}

uint64_t sub_100371E70()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSString *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v1 = objc_msgSend(v0, "userInfo");
  type metadata accessor for ProgressUserInfoKey(0);
  v3 = v2;
  v4 = sub_10015E020();
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, v3, (char *)&type metadata for Any + 8, v4);

  if (!*(_QWORD *)(v5 + 16))
  {
    v12 = 0u;
    v13 = 0u;
LABEL_9:
    swift_bridgeObjectRelease(v5);
    goto LABEL_10;
  }
  v6 = NSProgressFileOperationKindKey;
  v7 = sub_100079D38(v6);
  if ((v8 & 1) == 0)
  {
    v12 = 0u;
    v13 = 0u;

    goto LABEL_9;
  }
  sub_100069BD8(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v12);

  swift_bridgeObjectRelease(v5);
  if (!*((_QWORD *)&v13 + 1))
  {
LABEL_10:
    sub_10007EB54((uint64_t)&v12);
    return 0;
  }
  type metadata accessor for FileOperationKind(0);
  if (swift_dynamicCast(&v11, &v12, (char *)&type metadata for Any + 8, v9, 6))
    return v11;
  else
    return 0;
}

uint64_t sub_100371F98(void *a1, uint64_t a2, void **a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;

  v4 = a1;
  v5 = sub_100371E70();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *a3;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v13 = v12;
    if (v8 == v11 && v10 == v12)
      v15 = 1;
    else
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
    v16 = v7;

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v13);
  }
  else
  {

    v15 = 0;
  }
  return v15 & 1;
}

uint64_t NSProgress.isUploadingOperation.getter()
{
  return sub_100372064((void **)&NSProgressFileOperationKindUploading);
}

uint64_t sub_100372064(void **a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  id v13;

  v2 = sub_100371E70();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *a1;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v10 = v9;
    if (v5 == v8 && v7 == v9)
      v12 = 1;
    else
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    v13 = v4;

    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

id sub_100372114(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  objc_super v18;
  objc_super v19;

  v3 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIButton.Configuration(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for DOCCircularCancelButton();
  v19.receiver = v1;
  v19.super_class = v11;
  v12 = objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)objc_opt_self(UIDevice);
  v14 = v12;

  static UIButton.Configuration.borderless()(v15);
  sub_1003722E4();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  v16 = v14;
  UIButton.configuration.setter(v5);

  objc_msgSend(v16, "setDoc_primaryAction:", a1);
  v18.receiver = v16;
  v18.super_class = v11;
  objc_msgSendSuper2(&v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

void sub_1003722E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIBackgroundConfiguration(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  if (v10)
  {
    objc_msgSend(v10, "alignmentRectInsets");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17 + -0.5;
    UIButton.Configuration.contentInsets.setter(0.0, 0.0, 0.0, 0.0);
    UIButton.Configuration.image.setter(objc_msgSend(v10, "imageWithAlignmentRectInsets:", v12, v18, v14, v16));
    v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v20 = swift_allocObject(v19, 56, 7);
    v36 = xmmword_1004D9720;
    *(_OWORD *)(v20 + 16) = xmmword_1004D9720;
    v21 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    *(_QWORD *)(v20 + 32) = objc_msgSend(v21, "configurationWithWeight:", 6);
    *(_QWORD *)(v20 + 40) = objc_msgSend(v21, "configurationWithTextStyle:", UIFontTextStyleSubheadline);
    v22 = swift_allocObject(v19, 56, 7);
    *(_OWORD *)(v22 + 16) = v36;
    v23 = (void *)objc_opt_self(UIColor);
    *(_QWORD *)(v22 + 32) = objc_msgSend(v23, "secondaryLabelColor");
    *(_QWORD *)(v22 + 40) = objc_msgSend(v23, "clearColor");
    v24 = objc_msgSend(v23, "clearColor");
    *(_QWORD *)(v22 + 48) = v24;
    v41 = v22;
    specialized Array._endMutation()(v24);
    v25 = v41;
    sub_100372800();
    isa = Array._bridgeToObjectiveC()().super.isa;
    v27 = objc_msgSend(v21, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    *(_QWORD *)(v20 + 48) = v27;
    v41 = v20;
    specialized Array._endMutation()(v28);
    v29 = v41;
    sub_100048198(v41);
    v31 = v30;
    swift_bridgeObjectRelease(v29);
    v32 = UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v31);
    static UIBackgroundConfiguration.clear()(v32);
    v33 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 6);
    UIBackgroundConfiguration.visualEffect.setter(v33);
    UIBackgroundConfiguration.cornerRadius.setter(1.79769313e308);
    (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v2, enum case for UIButton.Configuration.CornerStyle.dynamic(_:), v38);
    UIButton.Configuration.cornerStyle.setter(v2);
    v35 = v39;
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v5, v8, v40);
    UIButton.Configuration.background.setter(v5);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v34);
  }
  else
  {
    __break(1u);
  }
}

id sub_1003727B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCircularCancelButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCCircularCancelButton()
{
  return objc_opt_self(_TtC5Files23DOCCircularCancelButton);
}

unint64_t sub_100372800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100644600;
  if (!qword_100644600)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100644600);
  }
  return result;
}

void *sub_10037283C(CGFloat a1, CGFloat a2)
{
  void *v2;
  id v5;
  id v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  CGPoint v15;
  CGRect v16;

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "layoutDirection");

  if (v6 == (id)1)
    v7 = -25.0;
  else
    v7 = 0.0;
  v8 = objc_msgSend(v2, "traitCollection");
  objc_msgSend(v8, "layoutDirection");

  objc_msgSend(v2, "bounds");
  v16.origin.x = sub_10007EAFC(v9, v10, v11, v12, 0.0, v7);
  v15.x = a1;
  v15.y = a2;
  if (!CGRectContainsPoint(v16, v15))
    return 0;
  v13 = v2;
  return v2;
}

void (*sub_100372938(_QWORD *a1))(objc_super **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files26DOCDSFileServiceConnection_didUpdateInProgressFileOperationsHandler;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100372990;
}

void sub_100372990(objc_super **a1, char a2)
{
  objc_super *v3;
  char *receiver;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Class super_class;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    receiver = (char *)v3[5].receiver;
    v5 = (uint64_t *)&receiver[(unint64_t)v3[5].super_class];
    v6 = *v5;
    if (*v5)
    {
      v7 = v5[1];
      v8 = swift_allocObject(&unk_1005E2918, 32, 7);
      *(_QWORD *)(v8 + 16) = v6;
      *(_QWORD *)(v8 + 24) = v7;
      v3[2].receiver = sub_10010DF60;
      v3[2].super_class = (Class)v8;
      v3->receiver = _NSConcreteStackBlock;
      v3->super_class = (Class)1107296256;
      v3[1].receiver = sub_10004A82C;
      v3[1].super_class = (Class)&unk_1005E2930;
      v9 = _Block_copy(v3);
      super_class = v3[2].super_class;
      swift_retain_n(v7, 2);
      swift_release(super_class);
      v11 = type metadata accessor for DOCDSFileServiceConnection();
      v3[4].receiver = receiver;
      v3[4].super_class = (Class)v11;
      objc_msgSendSuper2(v3 + 4, "setDidUpdateInProgressOperationsHandler:", v9);
      _Block_release(v9);
      sub_100087534(v6, v7);
    }
    else
    {
      v12 = type metadata accessor for DOCDSFileServiceConnection();
      v3[3].receiver = receiver;
      v3[3].super_class = (Class)v12;
      objc_msgSendSuper2(v3 + 3, "setDidUpdateInProgressOperationsHandler:", 0);
    }
  }
  free(v3);
}

id sub_100372AB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDSFileServiceConnection();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100372AFC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC5Files26DOCDSFileServiceConnection_didUpdateInProgressFileOperationsHandler);
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10008BA00(*v1, v1[1]);
  return v2;
}

void (*sub_100372B58(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100372938(v2);
  return sub_1000E10D4;
}

uint64_t sub_100372BA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100372BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100650250;
  if (!qword_100650250)
  {
    v1 = sub_10004F2F0(255, &qword_100650248, DSFileOperationID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100650250);
  }
  return result;
}

id sub_100372C3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSharedServerSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_100372C70()
{
  unint64_t result;

  result = qword_100650280;
  if (!qword_100650280)
  {
    result = swift_getWitnessTable(&unk_1004E4498, &type metadata for GetFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100650280);
  }
  return result;
}

unint64_t sub_100372CB8()
{
  unint64_t result;

  result = qword_100650288;
  if (!qword_100650288)
  {
    result = swift_getWitnessTable(&unk_1004E44C0, &type metadata for GetFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100650288);
  }
  return result;
}

uint64_t sub_100372CFC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10056F074, 1) + 8);
}

uint64_t sub_100372D20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F04C, 1);
}

uint64_t sub_100372D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672C48);
  sub_10007E788(v10, (uint64_t)qword_100672C48);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x656C694620746547, 0xE900000000000073);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("GET_FILES_INTENT_TITLE", 22, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Get Files intent", 30, v13);
}

uint64_t sub_100372ED4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_1006502B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_1006502B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10030CC68();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for GetFilesIntent, v6);
  v7._object = (void *)0x800000010052BA40;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E44F8);
  v9 = sub_10006922C(&qword_1006502C0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for GetFilesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for GetFilesIntent, v6);
}

uint64_t sub_10037304C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672C60);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672C60);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_1003730A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = a2;
  v3 = type metadata accessor for Logger(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100373104, 0, 0);
}

uint64_t sub_100373104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_QWORD *)(v1 + 56);
  v2 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = Logger.AppIntents.unsafeMutableAddressor(a1);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[GetFilesIntent] Performing Get Files intent", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  v11 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v12 = *(_QWORD *)(v1 + 48);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  IntentParameter.wrappedValue.getter((_QWORD *)(v1 + 16));
  v13 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 24) = v13;
  v14 = sub_10006922C(&qword_10064C3B0);
  v15 = sub_100111590();
  static IntentResult.result<A>(value:)(v1 + 24, v14, v15);
  swift_bridgeObjectRelease(v13);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100373240@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641058, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672C48, (uint64_t)sub_100372D30, a1);
}

uint64_t sub_100373268@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641060, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672C60, (uint64_t)sub_10037304C, a1);
}

uint64_t sub_100373290(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1006502AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return sub_1003730A4(a1, v4);
}

uint64_t sub_1003732E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100373370();
  *a1 = result;
  return result;
}

uint64_t sub_10037330C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10030CC68();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for GetFilesIntent()
{
  return &type metadata for GetFilesIntent;
}

uint64_t sub_100373344()
{
  return sub_100062698(&qword_100650298, &qword_1006502A0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100373370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  __int16 v39;
  int v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v45 = *(_QWORD *)(v0 - 8);
  v46 = v0;
  __chkstk_darwin(v0);
  v44 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v42 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (char *)&v41 - v5;
  v6 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10006922C(&qword_100643368);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x73656C6946, 0xE500000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v25(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  v39 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("GET_FILES_INTENT_FOLDER_PARAM_TITLE", 35, 2, v18, 0x6E65746E49707041, 0xEA00000000007374, v15, v12, "Title of the Files parameter of the Get Files intent", 52, v39);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x800000010052B9D0);
  static Locale.current.getter(v26);
  v25(v12, v24, v9);
  LOWORD(v40) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("GET_FILES_INTENT_FOLDER_PARAM_DESCRIPTION", 41, 2, v18, 0x6E65746E49707041, 0xEA00000000007374, v15, v12, "Description of the Files parameter of the Get Files intent", 58, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  v48 = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v41;
  v28(v41, 1, 1, v27);
  v30 = v42;
  v28(v42, 1, 1, v27);
  v31 = sub_10006922C((uint64_t *)&unk_10064B460);
  v32 = type metadata accessor for UTType(0);
  v33 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
  *(_OWORD *)(v33 + 16) = xmmword_1004D9670;
  static UTType.item.getter(v33);
  v34 = type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject(v34, 64, 7);
  v47[0] = sub_10029FBBC(v33, 1);
  v47[1] = 2;
  v35 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, enum case for InputConnectionBehavior.default(_:), v46);
  v36 = sub_100111434();
  v37 = sub_10021F534((unint64_t *)&qword_100643D40, (uint64_t)&unk_1004DAF80);
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v22, v8, &v48, v29, v30, v35, v47, &type metadata for LocationOptionsProvider, v36, v37);
}

uint64_t sub_1003737E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_100373810(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  double v14;
  char **v15;
  id v16;
  id v17;
  id v18;
  unsigned int v19;
  id v20;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v2 = v1;
  v4 = objc_msgSend(a1, "sourceIdentifier");
  v5 = DOCDocumentSourceIdentifierPlaceholderLocation;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v11 = v10;
  if (v6 == v9 && v8 == v10)
    v13 = 1;
  else
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);

  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v11).n128_u64[0];
  v15 = &selRef_originalSourceIdentifier;
  if ((v13 & 1) == 0)
    v15 = &selRef_sourceIdentifier;
  v16 = objc_msgSend(a1, *v15, v14);
  v17 = objc_msgSend(a1, "node");
  if (!v17)
  {
    if ((v13 & 1) == 0)
    {
      v19 = 0;
      goto LABEL_16;
    }
LABEL_14:
    v20 = objc_msgSend(a1, "fileProviderItem");

    v19 = v20 == 0;
    goto LABEL_16;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "isRootItem");
  swift_unknownObjectRelease(v18);
  if ((v19 & 1) == 0 && ((v13 ^ 1) & 1) == 0)
    goto LABEL_14;
LABEL_16:
  sub_10007C3E0();
  if ((static NSObject.== infix(_:_:)(a1, v2) & 1) != 0)
  {
LABEL_17:

    return 1;
  }
  if (v19)
  {
    v22 = objc_msgSend(v2, "fileProviderItem");

    if (!v22)
    {
      v28 = objc_msgSend(v2, "sourceIdentifier");
      v29 = v28;
      if (v16)
      {
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v32 = v31;
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v35 = v33;
        if (v30 == v34 && v32 == v33)
        {

          swift_bridgeObjectRelease_n(v32, 2);
          goto LABEL_17;
        }
        v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v34, v33, 0);

        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease(v35);
        if ((v36 & 1) != 0)
          goto LABEL_17;
      }
      else
      {

      }
    }
  }
  v23 = objc_msgSend(a1, "fileProviderItem");
  if (!v23)
    goto LABEL_25;
  v24 = v23;
  v25 = objc_msgSend(v2, "fileProviderItem");
  if (!v25)
  {

LABEL_25:
    return 0;
  }
  v26 = v25;
  v27 = static NSObject.== infix(_:_:)(v24, v25);

  return (v27 & 1) != 0;
}

BOOL static DOCGridSpecTextSize.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t DOCGridSpecTextSize.rawValue.getter(uint64_t result)
{
  return result;
}

BOOL static DOCGridSpecTextSize.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

unint64_t sub_100373B00@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s5Files19DOCGridSpecTextSizeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

BOOL sub_100373B28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_100373B3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100373B50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100373B64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_100373B78(void *a1)
{
  id v2;
  char v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;

  v2 = objc_msgSend(a1, "preferredContentSizeCategory");
  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);

  if ((v3 & 1) == 0)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
    v8 = v7;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    if (v6 == v9 && v8 == v10)
    {
      swift_bridgeObjectRelease_n(v8, 2);
    }
    else
    {
      v12 = v10;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v12);
      if ((v13 & 1) == 0)
      {
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
        if (v14 != v17 || v16 != v18)
        {
          v20 = v18;
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);

          swift_bridgeObjectRelease(v16);
          swift_bridgeObjectRelease(v20);
          return (v21 & 1) == 0;
        }

        swift_bridgeObjectRelease_n(v16, 2);
        return 0;
      }
    }

    return 0;
  }
  v4 = UITraitCollection.doc_preferredLayoutSizeCategory.getter();

  if (v4 == 2)
    return 3;
  else
    return 2;
}

unint64_t _s5Files19DOCGridSpecTextSizeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_100373D04()
{
  unint64_t result;

  result = qword_1006502C8;
  if (!qword_1006502C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCGridSpecTextSize, &type metadata for DOCGridSpecTextSize);
    atomic_store(result, (unint64_t *)&qword_1006502C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCGridSpecTextSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100373D94 + 4 * byte_1004E4525[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100373DC8 + 4 * byte_1004E4520[v4]))();
}

uint64_t sub_100373DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100373DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100373DD8);
  return result;
}

uint64_t sub_100373DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100373DECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100373DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100373DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCGridSpecTextSize()
{
  return &type metadata for DOCGridSpecTextSize;
}

id DOCFileOperationsManager.__allocating_init(serviceImpl:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = a1[3];
  v4 = a1[4];
  v5 = sub_10007E7C8((uint64_t)a1, v3);
  v6 = sub_10037592C(v5, v1, v3, v4);
  sub_100068588(a1);
  return v6;
}

id DOCFileOperationsManager.init(serviceImpl:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v3 = a1[3];
  v4 = a1[4];
  v5 = sub_10007E7C8((uint64_t)a1, v3);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  v10 = sub_1003757BC((uint64_t)v8, v1, v3, v4);
  sub_100068588(a1);
  return v10;
}

void DOCFileOperationsManager.addObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType(a1);
  sub_100375584(a1, v1);
}

void DOCFileOperationsManager.removeObserver(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
  swift_retain();
  sub_1003752E4(a1);
  swift_release(v4);
  sub_100374074();
}

void sub_100373F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;
  char v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = static os_log_type_t.default.getter(Strong);
    sub_100019230(v5, 0xD00000000000001BLL, 0x800000010052BC50);
    v6 = swift_allocObject(&unk_1005E2C50, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    aBlock[4] = sub_100375EB4;
    v11 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E2C68;
    v7 = _Block_copy(aBlock);
    v8 = v11;
    v9 = v4;
    swift_release(v8);
    DOCRunInMainThread(v7);
    _Block_release(v7);

  }
}

void sub_100374074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _QWORD v47[3];
  _BYTE v48[24];

  v1 = sub_10006922C(&qword_100650348);
  __chkstk_darwin(v1);
  v41 = (uint64_t)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v3);
  v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v39 - v6;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v0;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
  v11 = (uint64_t *)(v10 + 16);
  swift_beginAccess(v10 + 16, v48, 1, 0);
  v12 = *(_QWORD *)(v10 + 16);
  v47[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v22 = v12;
    else
      v22 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v13)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v12);
    v21 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain(v12);
  if (!v13)
    goto LABEL_17;
LABEL_3:
  if (v13 < 1)
  {
    __break(1u);
    return;
  }
  v43 = v8;
  v14 = v7;
  for (i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
    }
    else
    {
      v16 = *(_QWORD *)(v12 + 8 * i + 32);
      swift_retain();
    }
    Strong = swift_unknownObjectWeakLoadStrong(v16 + 16);
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v19 = *(_QWORD *)(v47[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
      specialized ContiguousArray._endMutation()(v20);
    }
    else
    {
      swift_release(v16);
    }
  }
  swift_bridgeObjectRelease(v12);
  v21 = (_QWORD *)v47[0];
  v7 = v14;
  v8 = v43;
LABEL_18:
  v23 = *v11;
  *v11 = (uint64_t)v21;
  swift_bridgeObjectRelease(v23);
  v24 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_release(v10);
    if (v25)
      return;
    goto LABEL_20;
  }
  if (v24 < 0)
    v37 = *v11;
  else
    v37 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v11);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_release(v10);
  swift_bridgeObjectRelease(v24);
  if (!v38)
  {
LABEL_20:
    v26 = v45;
    v27 = v45 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl;
    swift_beginAccess(v45 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl, v47, 33, 0);
    v28 = *(_QWORD *)(v27 + 24);
    v29 = *(_QWORD *)(v27 + 32);
    sub_10007E7C8(v27, v28);
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v29 + 24))(0, 0, v28, v29);
    swift_endAccess(v47);
    v30 = v26 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance;
    swift_beginAccess(v26 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance, v47, 0, 0);
    v31 = v44;
    sub_100241350(v30, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v31, 1, v7) == 1)
    {
      sub_10000CB4C(v31, (uint64_t *)&unk_1006475C0);
    }
    else
    {
      v32 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v40, v31, v7);
      v33 = *(_QWORD *)(v26 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProvider);
      swift_beginAccess(v33 + 24, v46, 33, 0);
      swift_retain();
      v34 = v41;
      sub_100443C7C(v32, v41);
      sub_10000CB4C(v34, &qword_100650348);
      swift_endAccess(v46);
      v35 = swift_release(v33);
      v36 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v42, 1, 1, v7, v35);
      swift_beginAccess(v30, v46, 33, 0);
      sub_1000B3448(v36, v30);
      swift_endAccess(v46);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v32, v7);
    }
  }
}

uint64_t sub_1003744B4(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  void *object;
  uint64_t v37;
  __int128 v38;
  os_log_type_t v39;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  _OWORD v46[2];
  uint64_t v47;
  _BYTE v48[24];
  _BYTE v49[40];

  v8 = type metadata accessor for DOCFileOperation(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  sub_10006777C(a1, (uint64_t)v49);
  if (*(_QWORD *)(a2 + 16) && (v17 = sub_100067654((uint64_t)v49), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v17);
    swift_retain(v19);
  }
  else
  {
    sub_10007C6DC(a1, (uint64_t)v16, type metadata accessor for DOCFileOperation);
    v20 = type metadata accessor for DOCFileOperationProgress(0);
    v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    sub_10007C6DC((uint64_t)v16, (uint64_t)v14, type metadata accessor for DOCFileOperation);
    sub_10007C6DC((uint64_t)v16, (uint64_t)v11, type metadata accessor for DOCFileOperation);
    v19 = sub_1004038F0((uint64_t)v14, (uint64_t)v11, (uint64_t)&off_1005C0A20, v21);
    sub_10007C720((uint64_t)v16, type metadata accessor for DOCFileOperation);
    swift_beginAccess(v19 + 24, v48, 1, 0);
    v22 = *(unsigned __int8 *)(v19 + 24);
    *(_BYTE *)(v19 + 24) = 1;
    if (v22 != 1)
      sub_10025EB70();
    v23 = swift_allocObject(&unk_1005E2B60, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16, a3);
    sub_10006777C((uint64_t)v49, (uint64_t)v46);
    v24 = swift_allocObject(&unk_1005E2C00, 64, 7);
    *(_QWORD *)(v24 + 16) = v23;
    v25 = v46[1];
    *(_OWORD *)(v24 + 24) = v46[0];
    *(_OWORD *)(v24 + 40) = v25;
    *(_QWORD *)(v24 + 56) = v47;
    v26 = (uint64_t *)(v19 + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess(v19 + direct field offset for DOCOperationProgress.updateHandler, v45, 1, 0);
    v27 = *v26;
    v28 = v26[1];
    *v26 = (uint64_t)sub_100375E50;
    v26[1] = v24;
    sub_100087534(v27, v28);
    *(_QWORD *)&v46[0] = 0;
    *((_QWORD *)&v46[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v29 = *((_QWORD *)&v46[0] + 1);
    v30 = objc_msgSend(a3, "description");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;
    swift_bridgeObjectRelease(v29);

    *(_QWORD *)&v46[0] = v31;
    *((_QWORD *)&v46[0] + 1) = v33;
    v34._object = (void *)0x800000010052BC20;
    v34._countAndFlagsBits = 0xD000000000000021;
    String.append(_:)(v34);
    v35._countAndFlagsBits = sub_100374E04(0);
    object = v35._object;
    String.append(_:)(v35);
    v37 = swift_bridgeObjectRelease(object);
    v38 = v46[0];
    v39 = static os_log_type_t.default.getter(v37);
    sub_100019230(v39, v38, *((unint64_t *)&v38 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)&v38 + 1));
  }
  sub_10006777C((uint64_t)v49, (uint64_t)v46);
  swift_retain(v19);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
  v44 = *a4;
  *a4 = 0x8000000000000000;
  sub_100357F88(v19, (uint64_t)v46, isUniquelyReferenced_nonNull_native);
  v41 = *a4;
  *a4 = v44;
  swift_bridgeObjectRelease(v41);
  sub_100067748((uint64_t)v46);
  swift_release(v19);
  return sub_100067748((uint64_t)v49);
}

void sub_100374800(_BYTE *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE *v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  if ((a1[*(_QWORD *)(*(_QWORD *)a1 + 336)] & 0xFE) != 2)
  {
    v3 = a2 + 16;
    swift_beginAccess(a1 + 24, v16, 1, 0);
    v4 = a1[24];
    a1[24] = 0;
    if ((v4 & 1) != 0)
    {
      v12 = a1;
      v5 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
      swift_retain(a1);
      v6 = sub_10006922C((uint64_t *)&unk_100649060);
      swift_dynamicCast(v13, &v12, v5, v6, 7);
      v7 = v14;
      v8 = v15;
      sub_10007E7A0(v13, v14);
      (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
      sub_100068588(v13);
    }
    swift_beginAccess(v3, v13, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3, v9);
    if (Strong)
    {
      v11 = (void *)Strong;
      __chkstk_darwin(Strong);
      sub_100374938((void (*)(void))sub_100375E5C);

    }
  }
}

uint64_t sub_100374938(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID, v32, 0, 0);
  v5 = swift_bridgeObjectRetain(*v4);
  v6 = sub_100087860(v5);
  a1();
  v7 = swift_bridgeObjectRetain(*v4);
  v8 = sub_100087860(v7);
  LOBYTE(a1) = sub_100087ED8(v8, v6);
  swift_bridgeObjectRelease(v8);
  result = swift_bridgeObjectRelease(v6);
  if ((a1 & 1) == 0)
  {
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
    v11 = (uint64_t *)(v10 + 16);
    swift_beginAccess(v10 + 16, v31, 1, 0);
    v12 = *(_QWORD *)(v10 + 16);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v21 = *(_QWORD *)(v10 + 16);
      else
        v21 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v10);
      swift_bridgeObjectRetain(v12);
      result = _CocoaArrayWrapper.endIndex.getter(v21);
      v13 = result;
      if (!result)
        goto LABEL_18;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain(v10);
      result = swift_bridgeObjectRetain(v12);
      if (!v13)
        goto LABEL_18;
    }
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_36;
    }
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
      }
      else
      {
        v16 = *(_QWORD *)(v12 + 8 * i + 32);
        swift_retain(v16);
      }
      Strong = swift_unknownObjectWeakLoadStrong(v16 + 16, v15);
      if (Strong)
      {
        v18 = swift_unknownObjectRelease(Strong);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v19 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
        specialized ContiguousArray._endMutation()(v20);
      }
      else
      {
        swift_release(v16);
      }
    }
LABEL_18:
    swift_bridgeObjectRelease(v12);
    v22 = *v11;
    *v11 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    v23 = *v11;
    if ((unint64_t)*v11 >> 62)
    {
      if (v23 < 0)
        v30 = *v11;
      else
        v30 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v23, 2);
      result = _CocoaArrayWrapper.endIndex.getter(v30);
      v24 = result;
      if (result)
      {
LABEL_20:
        if (v24 >= 1)
        {
          for (j = 0; j != v24; ++j)
          {
            if ((v23 & 0xC000000000000001) != 0)
            {
              v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v23);
            }
            else
            {
              v27 = *(_QWORD *)(v23 + 8 * j + 32);
              swift_retain(v27);
            }
            v28 = (void *)swift_unknownObjectWeakLoadStrong(v27 + 16, v26);
            if (v28)
            {
              v29 = v28;
              objc_msgSend(v28, "didUpdateInProgressOperationsIn:", v2);
              swift_release(v27);
              swift_unknownObjectRelease(v29);
            }
            else
            {
              swift_release(v27);
            }
          }
          goto LABEL_33;
        }
LABEL_36:
        __break(1u);
        return result;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n(v23, 2);
      if (v24)
        goto LABEL_20;
    }
LABEL_33:
    swift_bridgeObjectRelease_n(v23, 2);
    return swift_release(v10);
  }
  return result;
}

uint64_t sub_100374C1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID, v13, 33, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(*v3);
  v5 = sub_100067654(a2);
  LOBYTE(a2) = v6;
  swift_bridgeObjectRelease(v4);
  v7 = 0;
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v12 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1002EA098();
      v9 = v12;
    }
    sub_100067748(*(_QWORD *)(v9 + 48) + 40 * v5);
    v7 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v5);
    sub_1002E3EE4(v5, v9);
    v10 = *v3;
    *v3 = v9;
    swift_bridgeObjectRelease(v10);
  }
  swift_endAccess(v13);
  return swift_release(v7);
}

void DOCFileOperationsManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCFileOperationsManager", 30, "init()", 6, 0);
  __break(1u);
}

id DOCFileOperationsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileOperationsManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100374E04(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  uint64_t v52;
  Swift::String v53;
  void *object;
  Swift::String v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  void *v62;
  Swift::String v63;
  Swift::String v64;
  void *v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;
  uint64_t v72;
  int v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;

  v2 = v1;
  v73 = a1;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v74 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100643470);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v72 - v10;
  v12 = (_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 352));
  v13 = v12[3];
  v14 = v12[4];
  v15 = sub_10007E7A0(v12, v13);
  v16 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v72 - v17;
  (*(void (**)(char *))(v16 + 16))((char *)&v72 - v17);
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v13);
  v20 = objc_msgSend(v19, "fileURL");

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v21, 1, v3);
  sub_1000B34E4((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
  {
    sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v22 = (void *)0xE500000000000000;
    v23 = 0x273F3F3F27;
  }
  else
  {
    v24 = v74;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v74, v11, v3);
    v25 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v23 = URL.lastPathComponent.getter(v25);
    v22 = v26;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v24, v3);
  }
  v27 = sub_10006777C((uint64_t)v2 + *(_QWORD *)(*v2 + 320), (uint64_t)&v75);
  v28 = AnyHashable.description.getter(v27);
  v30 = v29;
  sub_100067748((uint64_t)&v75);
  v31 = sub_100087794(6, v28, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease(v30);
  v74 = (char *)v23;
  v72 = v35;
  if ((v73 & 1) != 0)
  {
    v75 = 32;
    v76 = 0xE100000000000000;
    v38 = v12[3];
    v39 = v12[4];
    v40 = sub_10007E7A0(v12, v38);
    v41 = *(_QWORD *)(v38 - 8);
    __chkstk_darwin(v40);
    v43 = (char *)&v72 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v41 + 16))(v43);
    v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v38);
    v45 = objc_msgSend(v44, "description", v72);

    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    v49._countAndFlagsBits = v46;
    v49._object = v48;
    String.append(_:)(v49);
    swift_bridgeObjectRelease(v48);
    v50._countAndFlagsBits = 59;
    v50._object = (void *)0xE100000000000000;
    String.append(_:)(v50);
    v52 = v75;
    v51 = (void *)v76;
  }
  else
  {
    v52 = 0;
    v51 = (void *)0xE000000000000000;
  }
  v75 = 0;
  v76 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease(v76);
  v75 = 60;
  v76 = 0xE100000000000000;
  v53._countAndFlagsBits = _typeName(_:qualified:)(*v2, 0);
  object = v53._object;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(object);
  v55._countAndFlagsBits = 0x496775626564203ALL;
  v55._object = (void *)0xEC000000203D2044;
  String.append(_:)(v55);
  v56 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 344));
  v57 = *v56;
  v58 = v56[1];
  v59 = v56[2];
  v60 = v56[3];
  swift_bridgeObjectRetain(v60);
  v61._countAndFlagsBits = static String._fromSubstring(_:)(v57, v58, v59, v60);
  v62 = v61._object;
  String.append(_:)(v61);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v62);
  v63._countAndFlagsBits = 0x203D204449706F20;
  v63._object = (void *)0xE800000000000000;
  String.append(_:)(v63);
  v64._countAndFlagsBits = static String._fromSubstring(_:)(v31, v33, v72, v37);
  v65 = v64._object;
  String.append(_:)(v64);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v65);
  v66._countAndFlagsBits = 0x3D20656C6966203BLL;
  v66._object = (void *)0xEA00000000002720;
  String.append(_:)(v66);
  v67._countAndFlagsBits = (uint64_t)v74;
  v67._object = v22;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v22);
  v68._countAndFlagsBits = 15143;
  v68._object = (void *)0xE200000000000000;
  String.append(_:)(v68);
  v69._countAndFlagsBits = v52;
  v69._object = v51;
  String.append(_:)(v69);
  swift_bridgeObjectRelease(v51);
  v70._countAndFlagsBits = 62;
  v70._object = (void *)0xE100000000000000;
  String.append(_:)(v70);
  return v75;
}

void sub_1003752E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  _BYTE v20[24];

  v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess(v1 + 16, v20, 1, 0);
  v4 = *(_QWORD *)(v1 + 16);
  v19[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v5)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v4);
    v12 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v4);
  if (!v5)
    goto LABEL_17;
LABEL_3:
  if (v5 < 1)
    goto LABEL_26;
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    }
    else
    {
      v7 = *(_QWORD *)(v4 + 8 * i + 32);
      swift_retain();
    }
    Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v10 = *(_QWORD *)(v19[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
      specialized ContiguousArray._endMutation()(v11);
    }
    else
    {
      swift_release(v7);
    }
  }
  swift_bridgeObjectRelease(v4);
  v12 = (_QWORD *)v19[0];
LABEL_18:
  v14 = *v3;
  *v3 = (uint64_t)v12;
  swift_bridgeObjectRelease(v14);
  swift_beginAccess(v3, v19, 33, 0);
  swift_unknownObjectRetain(a1);
  v15 = sub_100375A54(v3, a1);
  swift_unknownObjectRelease(a1);
  v16 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    if (v16 < 0)
      v18 = *v3;
    else
      v18 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v3);
    v17 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v16);
    if (v17 >= v15)
      goto LABEL_20;
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v15)
    {
LABEL_20:
      sub_10045C0F4(v15, v17);
      swift_endAccess(v19);
      return;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_1003754FC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_100375584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE v25[24];

  v4 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
  swift_beginAccess(v5 + 16, v25, 1, 0);
  v6 = *(_QWORD *)(v5 + 16);
  v24 = _swiftEmptyArrayStorage;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v15 = v6;
    else
      v15 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    v23 = v4;
    if (v7)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v6);
    v14 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain(v6);
  v23 = v4;
  if (!v7)
    goto LABEL_17;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  v22 = a1;
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    }
    else
    {
      v9 = *(_QWORD *)(v6 + 8 * i + 32);
      swift_retain();
    }
    Strong = swift_unknownObjectWeakLoadStrong(v9 + 16);
    if (Strong)
    {
      swift_unknownObjectRelease(Strong);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v12 = v24[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
      specialized ContiguousArray._endMutation()(v13);
    }
    else
    {
      swift_release(v9);
    }
  }
  swift_bridgeObjectRelease(v6);
  v14 = v24;
  a1 = v22;
LABEL_18:
  v16 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = v14;
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(v5 + 16);
  __chkstk_darwin(v18);
  v21[2] = a1;
  swift_bridgeObjectRetain(v17);
  v19 = sub_100089DB8(sub_1000E85DC, (uint64_t)v21, v17);
  swift_release(v5);
  swift_bridgeObjectRelease(v17);
  if ((v19 & 1) == 0)
  {
    v20 = *(_QWORD *)(a2 + v23);
    swift_retain();
    sub_1000B1E54(a1, v20);
    swift_release(v20);
    sub_1000A786C();
    sub_10000CDB4();
  }
}

id sub_1003757BC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  objc_super v17;
  _QWORD v18[5];

  v18[3] = a3;
  v18[4] = a4;
  v7 = sub_10006CBAC(v18);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a1, a3);
  v8 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID;
  v9 = a2;
  *(_QWORD *)&a2[v8] = sub_10008AF9C((uint64_t)_swiftEmptyArrayStorage);
  v10 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  v11 = sub_10006922C(&qword_100641298);
  v12 = swift_allocObject(v11, 24, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[v10] = v12;
  v13 = &v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance];
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate] = 1;
  v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_hasUpdateInProgress] = 0;
  sub_100092328((uint64_t)v18, (uint64_t)&v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl]);
  if (qword_100640DE0 != -1)
    swift_once(&qword_100640DE0, sub_10008C490);
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProvider] = qword_1006726D8;
  swift_retain();

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for DOCFileOperationsManager(0);
  v15 = objc_msgSendSuper2(&v17, "init");
  sub_100068588(v18);
  return v15;
}

id sub_10037592C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCFileOperationsManager(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1003757BC((uint64_t)v9, v10, a3, a4);
}

uint64_t sub_1003759C8()
{
  return type metadata accessor for DOCFileOperationsManager(0);
}

uint64_t sub_1003759D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003759F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100375A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100375A54(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_67;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (v5)
  {
LABEL_3:
    v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * v6 + 32);
        swift_retain(v8);
      }
      Strong = swift_unknownObjectWeakLoadStrong(v8 + 16, v7);
      swift_release(v8);
      if (Strong)
      {
        swift_unknownObjectRelease(Strong);
        if (Strong == a2)
          break;
      }
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        if (v4 < 0)
          v35 = v4;
        else
          v35 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v5 = _CocoaArrayWrapper.endIndex.getter(v35);
        if (!v5)
          goto LABEL_11;
        goto LABEL_3;
      }
      ++v6;
      if (v10 == v5)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease(v4);
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v4 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v13 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_17:
          for (i = v6 + 5; ; ++i)
          {
            v4 = i - 4;
            v15 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v15);
            }
            else
            {
              if (v4 < 0)
                goto LABEL_57;
              if ((unint64_t)v4 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_58;
              v16 = *(_QWORD *)(v15 + 8 * i);
              swift_retain(v16);
            }
            v18 = swift_unknownObjectWeakLoadStrong(v16 + 16, v17);
            swift_release(v16);
            if (v18)
            {
              swift_unknownObjectRelease(v18);
              if (v18 == a2)
                goto LABEL_44;
            }
            if (v4 != v6)
              break;
LABEL_43:
            if (__OFADD__(v6++, 1))
              goto LABEL_60;
LABEL_44:
            v31 = i - 3;
            if (__OFADD__(v4, 1))
              goto LABEL_59;
            v32 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v32 < 0)
                v34 = *a1;
              else
                v34 = v32 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v33 = _CocoaArrayWrapper.endIndex.getter(v34);
              swift_bridgeObjectRelease(v32);
            }
            else
            {
              v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v31 == v33)
              return v6;
          }
          v19 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, *a1);
            v19 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_29:
              if (v4 < 0)
                goto LABEL_63;
              if ((unint64_t)v4 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_64;
              v21 = *(_QWORD *)(v19 + 8 * i);
              swift_retain(v21);
              goto LABEL_32;
            }
          }
          else
          {
            if ((v6 & 0x8000000000000000) != 0)
              goto LABEL_61;
            if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_62;
            v20 = *(_QWORD *)(v19 + 8 * v6 + 32);
            swift_retain(v20);
            if ((v19 & 0xC000000000000001) == 0)
              goto LABEL_29;
          }
          v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v19);
          v19 = *a1;
LABEL_32:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v19);
          *a1 = v19;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
          {
            v19 = sub_1000818A0(v19);
            *a1 = v19;
          }
          v23 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;
          v24 = swift_release(v23);
          specialized Array._endMutation()(v24);
          v25 = *a1;
          v26 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v25;
          if (!v26 || v25 < 0 || (v25 & 0x4000000000000000) != 0)
          {
            v25 = sub_1000818A0(v25);
            *a1 = v25;
          }
          if (v4 < 0)
            goto LABEL_65;
          v27 = v25 & 0xFFFFFFFFFFFFFF8;
          if ((unint64_t)v4 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_66;
          v28 = *(_QWORD *)(v27 + 8 * i);
          *(_QWORD *)(v27 + 8 * i) = v20;
          v29 = swift_release(v28);
          specialized Array._endMutation()(v29);
          goto LABEL_43;
        }
        return v6;
      }
    }
    if (v4 < 0)
      v38 = v4;
    else
      v38 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v4);
    if (v13 != v39)
      goto LABEL_17;
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease(v4);
  v11 = *a1;
  if (!((unint64_t)v11 >> 62))
    return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 0)
    v36 = v11;
  else
    v36 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v11);
  return v37;
}

uint64_t sub_100375E24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_100068588((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100375E50(_BYTE *a1)
{
  uint64_t v1;

  sub_100374800(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100375E5C()
{
  uint64_t v0;

  return sub_100374C1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100375E64()
{
  uint64_t v0;

  sub_100373F80(v0);
}

uint64_t sub_100375E6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100375E90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100375EB4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate) = 1;
  sub_1000A786C();
}

void DOCSplitBrowserViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v4;
  char *v8;
  id v9;
  void **v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _BYTE v15[24];

  v4 = v3;
  v14 = objc_msgSend(v4, "fullDocumentManagerViewController");
  v8 = (char *)objc_msgSend(v14, "effectiveBrowserViewController");
  if (v8)
  {
    v9 = v8;
    v10 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v15, 0, 0);
    v11 = *v10;
    if (v11
      && (v12 = type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass(v11, v12)))
    {
      v13 = v11;

      v9 = v13;
      DOCItemCollectionViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(a1, a2, a3);

    }
    else
    {

    }
  }
  else
  {

  }
}

void sub_1003760F8(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;

  v2 = v1;
  v4 = objc_msgSend(v1, "fullDocumentManagerViewController");
  v5 = objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_1005E2CA0, 32, 7);
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v2;
  v7 = swift_allocObject(&unk_1005E2CC8, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100376D98;
  *(_QWORD *)(v7 + 24) = v6;
  v22 = (uint64_t (*)(_QWORD))sub_10006657C;
  v23 = v7;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_10006655C;
  v21 = &unk_1005E2CE0;
  v8 = _Block_copy(&v18);
  v9 = v23;
  v10 = v4;
  v11 = v2;
  swift_retain();
  objc_msgSend((id)v5, "performWithoutAnimation:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 115, 45, 40, 1);
  swift_release(v7);
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = DOCSplitBrowserViewController.didCommitPreview(of:);
    v23 = 0;
    v18 = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100018CC0;
    v21 = &unk_1005E2D08;
    v12 = _Block_copy(&v18);
    v13 = swift_allocObject(&unk_1005E2D40, 32, 7);
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v11;
    v22 = (uint64_t (*)(_QWORD))sub_100376D98;
    v23 = v13;
    v18 = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = sub_100018CC0;
    v21 = &unk_1005E2D58;
    v14 = _Block_copy(&v18);
    v15 = v23;
    v16 = v10;
    v17 = v11;
    objc_msgSend(a1, "animateAlongsideTransition:completion:", v12, v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);
    _Block_release(v12);
    swift_release(v6);

  }
}

void sub_100376330(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  v2 = type metadata accessor for UITraitOverrides(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "enclosingUIPHorizontalInset", v3);
  v7 = v6;
  if ((sub_100376478() & 1) != 0)
    v8 = 160.0;
  else
    v8 = 0.0;
  if (v8 != v7)
  {
    UIViewController.traitOverrides.getter();
    v9 = sub_1001BF81C();
    dispatch thunk of UIMutableTraits.subscript.setter(&type metadata for DOCUIPHorizontalInsetTrait, &type metadata for DOCUIPHorizontalInsetTrait, v9, v2, &protocol witness table for UITraitOverrides, v8);
    UIViewController.traitOverrides.setter(v5);
    objc_msgSend(a1, "setAdditionalSafeAreaInsets:", 0.0, v8, 0.0, v8);
    objc_msgSend(a1, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
    v10 = objc_msgSend(a1, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "layoutBelowIfNeeded");

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100376478()
{
  void *v0;
  id v1;
  char *v2;
  uint64_t v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  id v7;
  unsigned __int8 v8;
  id v9;
  unsigned int v10;
  char v11;
  char v13;

  v1 = objc_msgSend(v0, "fullDocumentManagerViewController");
  v2 = (char *)objc_msgSend(v1, "dataSource");
  v3 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v3 != 2)
  {
    v4 = objc_msgSend(v0, "doc_splitViewState");
    v5 = objc_msgSend(v4, "isSidebarShownInOverlay");

    v6 = objc_msgSend(v0, "enclosingTabSwitcherStyle");
    if (objc_msgSend(v0, "enclosedInUIPDocumentLanding"))
    {
      v7 = objc_msgSend(v0, "doc_splitViewState");
      v8 = objc_msgSend(v7, "isSidebarShownInline");

      if ((v8 & 1) != 0 || (v9 = objc_msgSend(v0, "preferredSplitBehavior"), v9 == (id)1))
      {
        if (v6 == (id)2)
          v13 = 1;
        else
          v13 = v5;
        if ((v13 & 1) != 0)
          return 1;
      }
      else if (!v9)
      {
        v10 = objc_msgSend(v0, "_canTileSidebarColumn:", 0);
        v11 = v6 == (id)2 ? 1 : v5;
        if (v10 && (v11 & 1) != 0)
          return 1;
      }
    }
  }
  return 0;
}

void DOCSplitBrowserViewController.target(forAction:withSender:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  id v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  __int128 v30;
  __int128 v31;

  v7 = objc_msgSend(v3, "fullDocumentManagerViewController");
  v8 = DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(a1, a2);

  if ((v8 & 1) != 0)
  {
    v16 = objc_msgSend(v29, "fullDocumentManagerViewController");
    sub_1000685A8(a2, (uint64_t)&v30);
    v17 = *((_QWORD *)&v31 + 1);
    if (*((_QWORD *)&v31 + 1))
    {
      v18 = sub_10007E7A0(&v30, *((uint64_t *)&v31 + 1));
      v19 = *(_QWORD *)(v17 - 8);
      v20 = __chkstk_darwin(v18);
      v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v19 + 16))(v22, v20);
      v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v17);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
      sub_100068588(&v30);
    }
    else
    {
      v23 = 0;
    }
    v27 = objc_msgSend(v16, "targetForAction:withSender:", a1, v23);

    swift_unknownObjectRelease(v23);
    if (v27)
    {
      _bridgeAnyObjectToAny(_:)(&v30, v27);
      swift_unknownObjectRelease(v27);
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
    }
    sub_10007EBDC((uint64_t)&v30, a3);
  }
  else
  {
    sub_1000685A8(a2, (uint64_t)&v30);
    v9 = *((_QWORD *)&v31 + 1);
    if (*((_QWORD *)&v31 + 1))
    {
      v10 = sub_10007E7A0(&v30, *((uint64_t *)&v31 + 1));
      v11 = *(_QWORD *)(v9 - 8);
      v12 = __chkstk_darwin(v10);
      v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v11 + 16))(v14, v12);
      v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
      sub_100068588(&v30);
    }
    else
    {
      v15 = 0;
    }
    v24 = objc_msgSend(v29, "canPerformAction:withSender:", a1, v15);
    swift_unknownObjectRelease(v15);
    if (v24)
    {
      *(_QWORD *)(a3 + 24) = sub_1003768B0();
      v25 = v29;
      *(_QWORD *)a3 = v29;
      v26 = v25;
    }
    else
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
}

unint64_t sub_1003768B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100650350;
  if (!qword_100650350)
  {
    v1 = objc_opt_self(DOCSplitBrowserViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100650350);
  }
  return result;
}

BOOL DOCSplitBrowserViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v14;
  _QWORD v15[3];
  uint64_t v16;

  if ((static Selector.== infix(_:_:)("toggleSidebar:", a1) & 1) != 0)
    return sub_100376B48(a1, a2);
  sub_1000685A8(a2, (uint64_t)v15);
  v6 = v16;
  if (v16)
  {
    v7 = sub_10007E7A0(v15, v16);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100068588(v15);
  }
  else
  {
    v12 = 0;
  }
  v14.receiver = v2;
  v14.super_class = (Class)DOCSplitBrowserViewController;
  v13 = objc_msgSendSuper2(&v14, "canPerformAction:withSender:", a1, v12);
  swift_unknownObjectRelease(v12);
  return (BOOL)v13;
}

BOOL sub_100376B48(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  unsigned __int8 v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_super v16;
  _QWORD v17[3];
  uint64_t v18;

  if (objc_msgSend((id)objc_opt_self(UITraitCollection), "enclosingTabSwitcherCanBeFloating"))
  {
    v5 = objc_msgSend(v2, "doc_splitViewState");
    v6 = objc_msgSend(v5, "isSidebarShown");

    return (v6 & 1) != 0 || objc_msgSend(v2, "enclosingTabSwitcherStyle") == (id)2;
  }
  else
  {
    sub_1000685A8(a2, (uint64_t)v17);
    v8 = v18;
    if (v18)
    {
      v9 = sub_10007E7A0(v17, v18);
      v10 = *(_QWORD *)(v8 - 8);
      v11 = __chkstk_darwin(v9);
      v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v10 + 16))(v13, v11);
      v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
      sub_100068588(v17);
    }
    else
    {
      v14 = 0;
    }
    v16.receiver = v2;
    v16.super_class = (Class)DOCSplitBrowserViewController;
    v7 = objc_msgSendSuper2(&v16, "canPerformAction:withSender:", a1, v14);
    swift_unknownObjectRelease(v14);
  }
  return (BOOL)v7;
}

uint64_t type metadata accessor for UIPDocumentLandingSettings()
{
  return objc_opt_self(_TtC5Files26UIPDocumentLandingSettings);
}

uint64_t sub_100376D6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100376D98()
{
  uint64_t v0;

  sub_100376330(*(void **)(v0 + 16));
}

uint64_t sub_100376DA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t static DOCItemCollectionContext.== infix(_:_:)(char a1, char a2)
{
  if (a1 == 2)
  {
    if (a2 != 2)
      return 0;
  }
  else if (a1 == 3)
  {
    if (a2 != 3)
      return 0;
  }
  else if ((a2 & 0xFE) == 2)
  {
    return 0;
  }
  return 1;
}

__n128 DOCItemCollectionConfiguration.init(source:configuration:context:initialLocation:defaultSorting:searchStartLocation:viewAccessibilityIdentifier:isBrowsingTrash:)@<Q0>(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  __int128 v11;
  __n128 result;
  _OWORD v13[5];

  sub_100051C68(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v13, a10);
  v11 = v13[3];
  *(_OWORD *)(a9 + 32) = v13[2];
  *(_OWORD *)(a9 + 48) = v11;
  *(_OWORD *)(a9 + 64) = v13[4];
  result = (__n128)v13[1];
  *(_OWORD *)a9 = v13[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

id static DOCItemCollectionContext.recentsItemCollectionContext(for:)(void *a1)
{
  return objc_msgSend(a1, "forPickingDocuments");
}

uint64_t sub_100376E74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
  {
    if (v3 == 2)
      return 1;
  }
  else if (v2 == 3)
  {
    if (v3 == 3)
      return 1;
  }
  else if ((v3 & 0xFE) != 2)
  {
    return 1;
  }
  return 0;
}

id sub_100376EBC(void *a1, void *a2, void *a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  char **v64;
  uint64_t v65;
  double v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  __n128 v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  NSString v103;
  void *v104;
  objc_class *v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  objc_super v149;
  uint64_t v150[2];

  v142 = a4;
  v139 = a3;
  v140 = a1;
  v136 = a2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v145 = v6;
  v146 = v7;
  v8 = __chkstk_darwin(v6);
  v132 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v133 = (char *)&v131 - v11;
  v12 = __chkstk_darwin(v10);
  v134 = (char *)&v131 - v13;
  __chkstk_darwin(v12);
  v135 = (char *)&v131 - v14;
  v15 = type metadata accessor for OSSignpostID(0);
  v143 = *(_QWORD *)(v15 - 8);
  v144 = v15;
  __chkstk_darwin(v15);
  v141 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v138 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v21 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isGathering] = 1;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 0;
  v25 = &a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate];
  *((_QWORD *)v25 + 1) = 0;
  swift_unknownObjectWeakInit(v25);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = _swiftEmptyArrayStorage;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 0;
  v26 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  v27 = sub_10006922C((uint64_t *)&unk_10064F380);
  v28 = swift_allocObject(v27, 20, 7);
  *(_DWORD *)(v28 + 16) = 0;
  *(_QWORD *)&a5[v26] = v28;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] = 0;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 0;
  v29 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source;
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source] = 0;
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken] = 0;
  v137 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue;
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v150[0] = (uint64_t)_swiftEmptyArrayStorage;
  v30 = sub_10034E2A4();
  v31 = a5;
  v32 = sub_10006922C((uint64_t *)&unk_100641280);
  v33 = sub_10016E444();
  dispatch thunk of SetAlgebra.init<A>(_:)(v150, v32, v33, v22, v30);
  v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v138 + 104))(v21, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v147);
  static DispatchQoS.unspecified.getter(v34);
  v35 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002FLL, 0x8000000100528880, v19, v24, v21, 0);
  *(_QWORD *)&a5[v137] = v35;
  v36 = v139;
  *(_QWORD *)&v31[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_iCloudRootNodeObservation] = 0;
  *(_QWORD *)&v31[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = 0;
  *(_QWORD *)&v31[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = _swiftEmptyArrayStorage;
  v37 = &_swiftEmptySetSingleton;
  v147 = (uint64_t)v31;
  *(_QWORD *)&v31[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_1003FC9EC((uint64_t)_swiftEmptyArrayStorage);
    else
      v37 = &_swiftEmptySetSingleton;
  }
  v38 = v147;
  *(_QWORD *)(v147 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates) = v37;
  v39 = v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval;
  *(_QWORD *)(v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval) = 100;
  v40 = enum case for DispatchTimeInterval.milliseconds(_:);
  v41 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v40, v41);
  v42 = v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime;
  v43 = type metadata accessor for DispatchTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
  *(_BYTE *)(v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate) = 0;
  *(_QWORD *)(v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer) = 0;
  v44 = v140;
  *(_QWORD *)(v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode) = v140;
  v45 = *(void **)&a5[v29];
  *(_QWORD *)&a5[v29] = v36;
  v46 = v44;
  v47 = v36;

  if ((v142 & (unint64_t)&_mh_execute_header) != 0)
    v49 = 19;
  else
    v49 = v142 | 0x13;
  *(_DWORD *)(v38 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions) = v49;
  v50 = static os_signpost_type_t.event.getter(v48);
  v51 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  v52 = v141;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)(v50, &_mh_execute_header, v51, "Files-DOCFileSystemCollection", 29, 2, v52, "Init DOCFileSystemCollection", 28, 2, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v143 + 8))(v52, v144);
  v53 = type metadata accessor for DOCRootNode(0);
  v54 = swift_dynamicCastClass(v46, v53);
  if (v54)
  {
    v55 = (void *)v54;
    v56 = swift_unknownObjectRetain(v46);
    v57 = Logger.Enumeration.unsafeMutableAddressor(v56);
    v59 = v145;
    v58 = v146;
    v60 = v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v135, v57, v145);
    v61 = swift_unknownObjectRetain_n(v46, 2);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.info.getter();
    v64 = &selRef_setAccessibilityValue_;
    if (os_log_type_enabled(v62, v63))
    {
      v65 = swift_slowAlloc(22, -1);
      v143 = swift_slowAlloc(64, -1);
      v150[0] = v143;
      *(_DWORD *)v65 = 136446466;
      v148 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v150);
      v144 = (uint64_t)v46;
      *(_QWORD *)&v66 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149).n128_u64[0];
      *(_WORD *)(v65 + 12) = 2080;
      v142 = v65 + 14;
      v67 = v36;
      v68 = objc_msgSend(v55, "source", v66);
      v69 = objc_msgSend(v68, "displayName");

      v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
      v72 = v71;

      v73 = v70;
      v36 = v67;
      v64 = &selRef_setAccessibilityValue_;
      v148 = sub_1000544FC(v73, v72, v150);
      v46 = (id)v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);

      swift_bridgeObjectRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[DSEnumeration] %{public}s: node is RootNode so using underlyingNode: %s", (uint8_t *)v65, 0x16u);
      v74 = v143;
      swift_arrayDestroy(v143, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v146 + 8))(v135, v59);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
    }
    v93 = v136;
    v79 = objc_msgSend(v55, v64[359]);

    goto LABEL_19;
  }
  v75 = type metadata accessor for DOCICloudRootNode(0);
  v76 = swift_dynamicCastClass(v46, v75);
  v78 = v145;
  v77 = v146;
  if (v76)
  {
    v79 = (_QWORD *)v76;
    v80 = swift_unknownObjectRetain(v46);
    v81 = Logger.Enumeration.unsafeMutableAddressor(v80);
    v82 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v134, v81, v78);
    v83 = swift_unknownObjectRetain_n(v46, 2);
    v84 = Logger.logObject.getter(v83);
    v85 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc(22, -1);
      v144 = swift_slowAlloc(64, -1);
      v150[0] = v144;
      *(_DWORD *)v86 = 136446466;
      v148 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v150);
      v87 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);
      *(_WORD *)(v86 + 12) = 2080;
      v88 = (void *)(*(uint64_t (**)(__n128))((swift_isaMask & *v79) + 0x78))(v87);

      if (v88)
        v89 = 0xD000000000000032;
      else
        v89 = 0xD00000000000002ALL;
      if (v88)
        v90 = 0x8000000100528920;
      else
        v90 = 0x8000000100528960;
      v148 = sub_1000544FC(v89, v90, v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);

      swift_bridgeObjectRelease(v90);
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "[DSEnumeration] %{public}s: node is DOCICloudRootNode, using: %s", (uint8_t *)v86, 0x16u);
      v91 = v144;
      swift_arrayDestroy(v144, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v86, -1, -1);

      v92 = (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v134, v145);
    }
    else
    {

      v92 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v82, v78);
    }
    v93 = v136;
    v117 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v79) + 0x78))(v92);
    if (v117)
    {
      v118 = (_QWORD *)v117;

      v79 = v118;
    }
LABEL_19:
    *(_QWORD *)(v147 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode) = v79;
    v94 = 0;
    if (!v93)
      goto LABEL_22;
    goto LABEL_20;
  }
  v107 = objc_opt_self(FINode);
  v108 = swift_dynamicCastObjCClass(v46, v107);
  if (v108)
  {
    v79 = (_QWORD *)v108;
    v109 = swift_unknownObjectRetain(v46);
    v110 = Logger.Enumeration.unsafeMutableAddressor(v109);
    v111 = v133;
    v112 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 16))(v133, v110, v78);
    v113 = Logger.logObject.getter(v112);
    v114 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = (uint8_t *)swift_slowAlloc(12, -1);
      v116 = swift_slowAlloc(32, -1);
      v150[0] = v116;
      *(_DWORD *)v115 = 136446210;
      v148 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "[DSEnumeration] %{public}s: node is a regular node", v115, 0xCu);
      swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v116, -1, -1);
      swift_slowDealloc(v115, -1, -1);

      (*(void (**)(char *, uint64_t))(v146 + 8))(v111, v78);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v77 + 8))(v111, v78);
    }
    v93 = v136;
    goto LABEL_19;
  }
  v119 = Logger.Enumeration.unsafeMutableAddressor(0);
  v120 = v78;
  v121 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v132, v119, v120);
  v122 = swift_unknownObjectRetain_n(v46, 2);
  v123 = Logger.logObject.getter(v122);
  v124 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v123, v124))
  {
    v125 = swift_slowAlloc(22, -1);
    v126 = swift_slowAlloc(64, -1);
    v150[0] = v126;
    *(_DWORD *)v125 = 136446466;
    v148 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005288F0, v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);
    *(_WORD *)(v125 + 12) = 2080;
    v127 = sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v128 = DOCNode.nodeDescription.getter(v127);
    v130 = v129;
    v148 = sub_1000544FC(v128, v129, v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);

    swift_bridgeObjectRelease(v130);
    _os_log_impl((void *)&_mh_execute_header, v123, v124, "[DSEnumeration] %{public}s: DOCFileSystemCollection initiated with a non-FINode DOCNode %s", (uint8_t *)v125, 0x16u);
    swift_arrayDestroy(v126, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v126, -1, -1);
    swift_slowDealloc(v125, -1, -1);

    (*(void (**)(char *, uint64_t))(v146 + 8))(v121, v145);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v77 + 8))(v121, v120);
  }
  v93 = v136;
  *(_QWORD *)(v147 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode) = v46;
  swift_unknownObjectRetain(v46);
  v94 = 0;
  if (v93)
  {
LABEL_20:
    if (v36)
    {
      v95 = (void *)objc_opt_self(DOCManagedPermission);
      v96 = v93;
      v97 = objc_msgSend(v95, "defaultPermission");
      v98 = objc_msgSend(v97, "userActionForConfiguration:", v96);

      v99 = objc_msgSend(v96, "hostIdentifier");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
      v101 = v100;

      v102 = objc_allocWithZone((Class)DOCSourceObserver);
      v103 = String._bridgeToObjectiveC()();
      v94 = objc_msgSend(v102, "initWithUserAction:hostIdentifier:", v98, v103, swift_bridgeObjectRelease(v101).n128_f64[0]);

    }
  }
LABEL_22:
  v104 = (void *)v147;
  *(_QWORD *)(v147 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver) = v94;

  v105 = (objc_class *)type metadata accessor for DOCFileSystemCollection(0);
  v149.receiver = v104;
  v149.super_class = v105;
  return objc_msgSendSuper2(&v149, "init");
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionContext(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_100377D50 + 4 * asc_1004E46C0[v4]))();
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100377DFC + 4 * byte_1004E46CA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100377E30 + 4 * byte_1004E46C5[v5]))();
}

uint64_t sub_100377E30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100377E38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100377E40);
  return result;
}

uint64_t sub_100377E4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100377E54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100377E58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100377E60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionContext()
{
  return &type metadata for DOCItemCollectionContext;
}

void destroy for DOCItemCollectionConfiguration(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 64));

}

uint64_t initializeWithCopy for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v8 = *(void **)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  v9 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  swift_bridgeObjectRetain(v6);
  v13 = v8;
  swift_unknownObjectRetain(v7);
  v14 = v9;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(void **)(a1 + 56);
  v16 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  v17 = v16;

  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v19;
  swift_unknownObjectRetain(v19);
  swift_unknownObjectRelease(v18);
  v20 = *(void **)(a1 + 72);
  v21 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v21;
  v22 = v21;

  return a1;
}

uint64_t assignWithTake for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 64));
  v7 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionConfiguration()
{
  return &type metadata for DOCItemCollectionConfiguration;
}

void DOCDiffable.dds.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t DOCDiffable.snapshot(empty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;

  if ((a1 & 1) == 0)
    return dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(a1);
  v5 = type metadata accessor for DOCDiffableIdentifier(0, a3, a3, a4);
  v8 = type metadata accessor for DOCDiffableIdentifier(0, a4, v6, v7);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DOCDiffableIdentifier<A>, v5);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for DOCDiffableIdentifier<A>, v8);
  return NSDiffableDataSourceSnapshot.init()(v5, v8, WitnessTable, v10);
}

uint64_t type metadata accessor for DOCDiffableIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCDiffableIdentifier);
}

uint64_t DOCDiffableIdentifier.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = __chkstk_darwin(a1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v5, v1 + *(int *)(v3 + 28), v2);
  return String.init<A>(describing:)(v5, v2);
}

Swift::Int DOCDiffableIdentifier.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  AnyHashable.hash(into:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100378330(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  DOCDiffableIdentifier.hash(into:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100378368(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for DOCDiffableIdentifier<A>, a1);
}

uint64_t type metadata accessor for DOCDiffable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCDiffable);
}

uint64_t sub_10037838C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "(";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

_QWORD *sub_100378404(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  __int128 v11;

  v4 = (_QWORD *)a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 40) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain(v10);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v4 + v7 + 40) & ~v7, ((unint64_t)a2 + v7 + 40) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_1003784D8(_QWORD *a1, uint64_t a2)
{
  sub_100068588(a1);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_100378518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_QWORD *sub_100378588(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  sub_10025C2AC(a1, a2);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1003785E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_10037863C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;

  sub_100068588((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1003786A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 40) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 40) & ~v7);
      v15 = *(_QWORD *)(a1 + 24);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10037877C + 4 * byte_1004E4740[(v9 - 1)]))();
}

void sub_1003787EC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

unint64_t sub_1003789F4()
{
  unint64_t result;

  result = qword_1006504F0;
  if (!qword_1006504F0)
  {
    result = swift_getWitnessTable(&unk_1004E48F0, &type metadata for RevealFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006504F0);
  }
  return result;
}

unint64_t sub_100378A3C()
{
  unint64_t result;

  result = qword_1006504F8;
  if (!qword_1006504F8)
  {
    result = swift_getWitnessTable(&unk_1004E4918, &type metadata for RevealFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006504F8);
  }
  return result;
}

uint64_t sub_100378A80(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10056F334, 1) + 8);
}

uint64_t sub_100378AA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F30C, 1);
}

uint64_t sub_100378AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672C80);
  sub_10007E788(v10, (uint64_t)qword_100672C80);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x49206C6165766552, 0xEB000000006D6574);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("REVEAL_DOCUMENT_TITLE", 21, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Reveal Item intent", 32, v13);
}

uint64_t sub_100378C5C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100650520);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100650528);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100170058();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for RevealFileIntent, v6);
  v7._object = (void *)0x800000010052BE30;
  v7._countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E4958);
  v9 = sub_10006922C(&qword_100650530);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for RevealFileIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for RevealFileIntent, v6);
}

uint64_t sub_100378DD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for OpenURLIntent(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v2[19] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100643470);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100647988);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v2[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[23] = v8;
  v2[24] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v2[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[26] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[27] = swift_task_alloc(v11);
  v2[28] = swift_task_alloc(v11);
  v2[29] = swift_task_alloc(v11);
  v2[30] = swift_task_alloc(v11);
  v12 = type metadata accessor for DOCFileEntity(0);
  v2[31] = v12;
  v2[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100378F18, 0, 0);
}

uint64_t sub_100378F18()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = v0;
  v2 = v0 + 2;
  v4 = v1[31];
  v3 = (_QWORD *)v1[32];
  v5 = v1[29];
  IntentParameter.wrappedValue.getter(v3);
  v6 = *(void **)((char *)v3 + *(int *)(v4 + 28));
  v1[33] = v6;
  v7 = v6;
  sub_1000EACF8((uint64_t)v3);
  v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v1[34] = v8;
  v1[7] = v5;
  v1[2] = v1;
  v1[3] = sub_100379014;
  v9 = swift_continuation_init(v2, 1);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_10012D8FC;
  v1[3] = &unk_1005E2F90;
  v1[4] = v9;
  objc_msgSend(v8, "fetchURLForItem:completionHandler:", v7, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_100379014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 280) = v1;
  if (v1)
    v2 = sub_1001FCAE4;
  else
    v2 = sub_100379074;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100379074()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = (void *)v0[34];
  v2 = v0[30];
  v3 = v0[22];
  v4 = v0[23];
  v5 = v0[21];
  v6 = *(void (**)(_QWORD))(v0[26] + 32);
  ((void (*)(uint64_t, _QWORD, _QWORD))v6)(v2, v0[29], v0[25]);

  URLComponents.init(url:resolvingAgainstBaseURL:)(v2, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    v7 = (void *)v0[33];
    v8 = v0[30];
    v9 = v0[25];
    v10 = v0[26];
    sub_10000CB4C(v0[21], &qword_100647988);
    v11 = sub_1001FD164();
    v12 = swift_allocError(&type metadata for DeepLinkError, v11, 0, 0);
    swift_willThrow(v12);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    v13 = v0[25];
    v14 = v0[26];
    v15 = v0[20];
    v16 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[23] + 32))(v0[24], v0[21], v0[22]);
    v17 = (uint64_t *)DeepLinkLocation.filesAppURLScheme.unsafeMutableAddressor(v16);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain(v19);
    URLComponents.scheme.setter(v18, v19);
    v20 = sub_10006922C(&qword_100647998);
    v21 = type metadata accessor for URLQueryItem(0);
    v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    URLQueryItem.init(name:value:)(0x6C6165766572, 0xE600000000000000, 0x65736C6166, 0xE500000000000000);
    URLQueryItem.init(name:value:)(0x746E6F63776F6873, 0xEC00000073746E65, 0x65736C6166, 0xE500000000000000);
    v23 = URLComponents.queryItems.setter(v22);
    URLComponents.url.getter(v23);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
    v25 = (void *)v0[33];
    if (v24 != 1)
    {
      v56 = v0[30];
      v57 = v0[32];
      v42 = v0[28];
      v43 = v0[26];
      v44 = v0[27];
      v45 = v0[25];
      v52 = v14;
      v53 = v0[23];
      v54 = v0[22];
      v55 = v0[24];
      v60 = v0[21];
      v58 = v0[29];
      v59 = v0[20];
      v46 = v0[19];
      v51 = v0[18];
      v47 = v0[17];
      v6(v42);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v42, v45);
      OpenURLIntent.init(_:)(v44);
      v48 = sub_10005A360(&qword_1006479A0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLIntent, (uint64_t)&protocol conformance descriptor for OpenURLIntent);
      static IntentResult.result<A>(opensIntent:)(v46, v47, v48);

      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v46, v47);
      v49 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v49(v42, v45);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v54);
      v49(v56, v45);
      swift_task_dealloc(v57);
      swift_task_dealloc(v56);
      swift_task_dealloc(v58);
      swift_task_dealloc(v42);
      swift_task_dealloc(v44);
      swift_task_dealloc(v55);
      swift_task_dealloc(v60);
      swift_task_dealloc(v59);
      swift_task_dealloc(v46);
      v41 = (uint64_t (*)(void))v0[1];
      return v41();
    }
    v26 = v0[30];
    v28 = v0[24];
    v27 = v0[25];
    v29 = v0[22];
    v30 = v0[23];
    sub_10000CB4C(v0[20], &qword_100643470);
    v31 = sub_1001FD164();
    v32 = swift_allocError(&type metadata for DeepLinkError, v31, 0, 0);
    swift_willThrow(v32);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, v27);
  }
  v34 = v0[29];
  v33 = v0[30];
  v36 = v0[27];
  v35 = v0[28];
  v37 = v0[24];
  v39 = v0[20];
  v38 = v0[21];
  v40 = v0[19];
  swift_task_dealloc(v0[32]);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_10037947C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100641068 != -1)
    swift_once(&qword_100641068, sub_100378AB4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_100672C80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003794F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_10065051C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return sub_100378DD4(a1, v4);
}

uint64_t sub_100379548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100379ACC();
  *a1 = result;
  return result;
}

uint64_t sub_10037956C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100170058();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RevealFileIntent()
{
  return &type metadata for RevealFileIntent;
}

uint64_t sub_1003795A4()
{
  return sub_100062698(&qword_100650508, &qword_100650510, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1003795D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v46;
  int v47;
  _QWORD v48[2];
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a1;
  v54 = type metadata accessor for DOCFileEntity(0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v58 = (uint64_t)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v57 = (uint64_t)v48 - v3;
  v4 = type metadata accessor for InputConnectionBehavior(0);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  __chkstk_darwin(v4);
  v53 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v6);
  v51 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v50 = (char *)v48 - v9;
  v10 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v10);
  v49 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v12);
  v48[0] = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Locale(0);
  __chkstk_darwin(v18);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v21);
  v23 = (char *)v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for LocalizedStringResource(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[1] = sub_10006922C((uint64_t *)&unk_1006438D0);
  v28 = String.LocalizationValue.init(stringLiteral:)(1835365449, 0xE400000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v30(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  v46 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("TITLE_FILE_PARAMETER_REVEAL_DOCUMENT", 36, 2, v23, 0x6E65746E49707041, 0xEA00000000007374, v20, v17, "Title for the file or folder entity parameter of the Reveal Item intent", 71, v46);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x800000010052BDA0);
  static Locale.current.getter(v31);
  v30(v17, v29, v14);
  LOWORD(v47) = 2;
  v32 = v48[0];
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("DESCRIPTION_FILE_PARAMETER_REVEAL_DOCUMENT", 42, 2, v23, 0x6E65746E49707041, 0xEA00000000007374, v20, v17, "Description of the file entity parameter of the Reveal Item intent", 66, v47);
  v33 = v32;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
  v34 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v49, 1, 1, v54);
  v35 = type metadata accessor for IntentDialog(0);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v37 = v50;
  v36(v50, 1, 1, v35);
  v38 = v51;
  v36(v51, 1, 1, v35);
  v39 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v53, enum case for InputConnectionBehavior.default(_:), v56);
  v40 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  v41 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v27, v33, v34, v37, v38, v39, v40);
  v42 = v59;
  v43 = v57;
  sub_1000EACB4(v59, v57);
  v44 = v58;
  sub_1000EACB4(v43, v58);
  swift_retain();
  IntentParameter.wrappedValue.setter(v44);
  sub_1000EACF8(v43);
  swift_release(v41);
  sub_1000EACF8(v42);
  return v41;
}

uint64_t sub_100379ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int16 v39;
  int v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v48 = *(_QWORD *)(v0 - 8);
  v49 = v0;
  __chkstk_darwin(v0);
  v47 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v46 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v45 = (char *)&v41 - v5;
  v6 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v6);
  v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v8);
  v42 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v24 = String.LocalizationValue.init(stringLiteral:)(1835365449, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v26(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  v39 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("TITLE_FILE_PARAMETER_REVEAL_DOCUMENT", 36, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Title for the file or folder entity parameter of the Reveal Item intent", 71, v39);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x800000010052BDA0);
  static Locale.current.getter(v27);
  v26(v13, v25, v10);
  LOWORD(v40) = 2;
  v28 = v42;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("DESCRIPTION_FILE_PARAMETER_REVEAL_DOCUMENT", 42, 2, v19, 0x6E65746E49707041, 0xEA00000000007374, v16, v13, "Description of the file entity parameter of the Reveal Item intent", 66, v40);
  v29 = v28;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v28, 0, 1, v20);
  v30 = type metadata accessor for DOCFileEntity(0);
  v31 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v44, 1, 1);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v34 = v45;
  v33(v45, 1, 1, v32);
  v35 = v46;
  v33(v46, 1, 1, v32);
  v36 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for InputConnectionBehavior.default(_:), v49);
  v37 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v23, v29, v31, v34, v35, v36, v37);
}

uint64_t sub_100379F1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_100379F44()
{
  id v0;
  NSString v1;
  NSString v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectViewBackdropCaptureGroup), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setGroupName:", v1);

  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setGroupNamespace:", v2);

  qword_100672C98 = (uint64_t)v0;
}

id sub_10037A004(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t ObjectType;
  char *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  objc_super v20;

  ObjectType = swift_getObjectType(v3, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView] = 0;
  if (a3)
  {
    v8 = v3;
    v9 = a3;
  }
  else
  {
    v10 = objc_allocWithZone((Class)DOCAppearance);
    v11 = v3;
    v9 = objc_msgSend(v10, "init");
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_configuration] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_captureGroup] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_appearance] = v9;
  v12 = a2;
  v13 = v9;
  v14 = a3;
  v15 = a1;

  v20.receiver = v3;
  v20.super_class = (Class)type metadata accessor for DOCSystemMaterialBackgroundView();
  v16 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10037A158();
  v17 = v16;
  v18 = UIView.registerForTabSwitcherTraitChanges<A>(options:_:)(0, 1, sub_10037A974, 0, ObjectType);

  swift_unknownObjectRelease(v18);
  return v17;
}

void sub_10037A158()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char v26[48];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 8);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v2);

  v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_captureGroup];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v3, "_captureGroup");
    v7 = objc_msgSend(v5, "groupName");
    objc_msgSend(v6, "setGroupName:", v7);

    v8 = objc_msgSend(v3, "_captureGroup");
    v9 = objc_msgSend(v5, "groupNamespace");
    objc_msgSend(v8, "setGroupNamespace:", v9);

  }
  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v10, "setAlpha:", 0.6);
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v11);

  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v12, v26);
  *(_OWORD *)(inited + 16) = xmmword_1004DA350;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v10;
  v25 = inited;
  specialized Array._endMutation()(inited);
  if ((v25 & 0xC000000000000001) != 0)
  {
    v23 = v10;
    v24 = v3;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
  }
  else
  {
    v14 = *(void **)(v25 + 32);
    v15 = v10;
    v16 = v3;
    v17 = v14;
  }
  v18 = v17;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v18, "setFrame:");
  objc_msgSend(v18, "setAutoresizingMask:", 18);
  objc_msgSend(v1, "addSubview:", v18);

  if ((v25 & 0xC000000000000001) != 0)
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v25);
  else
    v19 = *(id *)(v25 + 40);
  v20 = v19;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v20, "setFrame:");
  objc_msgSend(v20, "setAutoresizingMask:", 18);
  objc_msgSend(v1, "addSubview:", v20);
  swift_bridgeObjectRelease(v25);

  v21 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView] = v10;
  v22 = v10;

  sub_10037A468();
  sub_10037A468();

}

void sub_10037A468()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  char v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  _QWORD v23[4];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_appearance);
    v3 = v1;
    v4 = v2;
    v5 = objc_msgSend(v4, "copy");
    _bridgeAnyObjectToAny(_:)(v23, v5);
    swift_unknownObjectRelease(v5);
    v6 = sub_10037A938();
    swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v6, 7);
    v7 = v22;

    objc_msgSend(v7, "setForceClearBackground:", 0);
    v8 = objc_msgSend(v7, "backgroundColor");
    objc_msgSend(v3, "setBackgroundColor:", v8);

    v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_configuration), "hostIdentifier");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    if (v10 == 0xD000000000000028 && v12 == 0x800000010052BF20)
    {
      swift_bridgeObjectRelease(0x800000010052BF20);
      v13 = 1;
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0xD000000000000028, 0x800000010052BF20, 0);
      swift_bridgeObjectRelease(v12);
    }
    v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v15 = sub_10037A74C(0xD000000000000014, 0x800000010052BF50, v13 & 1);

    if ((v15 & 1) != 0)
    {
      v16 = objc_msgSend(v3, "layer");
      v17 = objc_msgSend((id)objc_opt_self(UIColor), "orangeColor");
      v18 = objc_msgSend(v17, "CGColor");

      objc_msgSend(v16, "setBorderColor:", v18);
      v19 = objc_msgSend(v3, "layer");
      objc_msgSend(v19, "setBorderWidth:", 8.0);

      v20 = objc_msgSend(v3, "layer");
      objc_msgSend(v20, "setCornerRadius:", 16.0);

      v21 = objc_msgSend(v3, "layer");
      objc_msgSend(v21, "setMaskedCorners:", 12);

      v3 = v7;
      v7 = v21;
    }

  }
}

uint64_t sub_10037A74C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  void *v3;
  NSString v5;
  id v6;
  NSString v7;
  _OWORD v9[2];

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "objectForKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v9, v6);
    swift_unknownObjectRelease(v6);
    sub_10007EB54((uint64_t)v9);
    v7 = String._bridgeToObjectiveC()();
    a3 = objc_msgSend(v3, "BOOLForKey:", v7);

  }
  else
  {
    memset(v9, 0, sizeof(v9));
    sub_10007EB54((uint64_t)v9);
  }
  return a3 & 1;
}

void sub_10037A844()
{
  uint64_t v0;

}

id sub_10037A890()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSystemMaterialBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCSystemMaterialBackgroundView()
{
  return objc_opt_self(_TtC5Files31DOCSystemMaterialBackgroundView);
}

unint64_t sub_10037A938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100648EF0;
  if (!qword_100648EF0)
  {
    v1 = objc_opt_self(DOCAppearance);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100648EF0);
  }
  return result;
}

void sub_10037A974()
{
  sub_10037A468();
}

uint64_t sub_10037A994@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;

  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    v3 = __CocoaSet.makeIterator()(result);
    v4 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
    v5 = sub_1000835B4((unint64_t *)&qword_10064EC00, (unint64_t *)&unk_100650670, UIScene_ptr);
    Set.Iterator.init(_cocoa:)(v13, v3, v4, v5);
    result = v13[0];
    v6 = v13[1];
    v7 = v14;
    v8 = v15;
  }
  else
  {
    v9 = -1;
    v10 = -1 << *(_BYTE *)(result + 32);
    v11 = ~v10;
    v6 = result + 56;
    v12 = -v10;
    if (v12 < 64)
      v9 = ~(-1 << v12);
    v8 = v9 & *(_QWORD *)(result + 56);
    v7 = (unint64_t)v11;
  }
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10037AA80(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((*v1 & 0x8000000000000000) == 0)
  {
    v4 = v1[3];
    v3 = v1[4];
    if (v3)
    {
      v5 = (v3 - 1) & v3;
      v6 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_4:
      v7 = *(void **)(*(_QWORD *)(*v1 + 48) + 8 * v6);
      v8 = v7;
      goto LABEL_5;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_35:
      __break(1u);
      return result;
    }
    v13 = (unint64_t)(v1[2] + 64) >> 6;
    if (v12 >= v13)
    {
      v7 = 0;
      v5 = 0;
      goto LABEL_5;
    }
    v14 = v1[1];
    v15 = *(_QWORD *)(v14 + 8 * v12);
    if (v15)
    {
LABEL_14:
      v5 = (v15 - 1) & v15;
      v6 = __clz(__rbit64(v15)) + (v12 << 6);
      v4 = v12;
      goto LABEL_4;
    }
    v16 = v4 + 2;
    if (v4 + 2 >= v13)
      goto LABEL_31;
    v15 = *(_QWORD *)(v14 + 8 * v16);
    if (v15)
    {
LABEL_19:
      v12 = v16;
      goto LABEL_14;
    }
    if (v4 + 3 < v13)
    {
      v15 = *(_QWORD *)(v14 + 8 * (v4 + 3));
      if (v15)
      {
        v12 = v4 + 3;
        goto LABEL_14;
      }
      v16 = v4 + 4;
      if (v4 + 4 >= v13)
      {
        v7 = 0;
        v5 = 0;
        v4 += 3;
LABEL_5:
        v2[3] = v4;
        v2[4] = v5;
        if (v7)
        {
LABEL_6:
          result = v2[5];
          if (!__OFADD__(result, 1))
          {
            v2[5] = result + 1;
            return result;
          }
          __break(1u);
          goto LABEL_35;
        }
        return 0;
      }
      v15 = *(_QWORD *)(v14 + 8 * v16);
      if (v15)
        goto LABEL_19;
      v12 = v4 + 5;
      if (v4 + 5 < v13)
      {
        v15 = *(_QWORD *)(v14 + 8 * v12);
        if (v15)
          goto LABEL_14;
        v12 = v13 - 1;
        v17 = v4 + 6;
        while (v13 != v17)
        {
          v15 = *(_QWORD *)(v14 + 8 * v17++);
          if (v15)
          {
            v12 = v17 - 1;
            goto LABEL_14;
          }
        }
LABEL_31:
        v7 = 0;
        v5 = 0;
        v4 = v12;
        goto LABEL_5;
      }
    }
    v7 = 0;
    v5 = 0;
    v4 = v16;
    goto LABEL_5;
  }
  result = __CocoaSet.Iterator.next()(result);
  if (result)
  {
    v9 = result;
    v18 = result;
    v10 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
    swift_unknownObjectRetain(v9);
    swift_dynamicCast(&v19, &v18, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
    v11 = v19;
    swift_unknownObjectRelease(v9);
    if (v11)
      goto LABEL_6;
    return 0;
  }
  return result;
}

void sub_10037AC7C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  char v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AppDelegate();
  objc_msgSendSuper2(&v7, "buildMenuWithBuilder:", a1);
  sub_10004F2F0(0, &qword_100650688, UIMenuSystem_ptr);
  v3 = objc_msgSend(a1, "system");
  v4 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
  v5 = static NSObject.== infix(_:_:)(v3, v4);

  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)DOCKeyCommandController), "init");
    objc_msgSend(v6, "buildWithBuilder:", a1);

  }
}

id sub_10037AF70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10037AFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void **aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  void *v45;
  uint64_t v46;

  v0 = type metadata accessor for DispatchQoS.QoSClass(0);
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  __chkstk_darwin(v0);
  v34 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v35 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = setiopolicy_np(3, 0, 1);
  v13 = static os_signpost_type_t.event.getter(v12);
  v14 = *(id *)updatePointsOfInterestHandler.unsafeMutableAddressor();
  static OSSignpostID.exclusive.getter();
  v29 = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v13, &_mh_execute_header, v14, "Files-LifeCycle", 15, 2, v11, "didFinishLaunchingWithOptions", 29, v29, _swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v33 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v33);
  v45 = sub_1000B2AA4;
  v46 = 0;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_10004A82C;
  v44 = &unk_1005E3048;
  v16 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter(v16);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = v17;
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v30 = v18;
  v32 = sub_1000791AC();
  v19 = v2;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v18, v32, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v16);
  _Block_release(v16);

  v35 = *(_QWORD *)(v35 + 8);
  ((void (*)(char *, uint64_t))v35)(v4, v2);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21 = v36;
  v20(v7, v36);
  v22 = v37;
  v23 = v38;
  v24 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v34, enum case for DispatchQoS.QoSClass.userInitiated(_:), v38);
  v25 = (void *)static OS_dispatch_queue.global(qos:)(v24);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
  v45 = sub_1000B2A74;
  v46 = 0;
  aBlock = _NSConcreteStackBlock;
  v42 = 1107296256;
  v43 = sub_10004A82C;
  v44 = &unk_1005E3070;
  v26 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter(v26);
  v40 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v30, v32, v19, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v26);
  _Block_release(v26);

  ((void (*)(char *, uint64_t))v35)(v4, v19);
  v20(v7, v21);
  v27 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v27, "addObserver:selector:name:object:", v39, "observedApplicationDidEnterBackgroundWithSender:", UIApplicationDidEnterBackgroundNotification, 0);

  return 1;
}

void sub_10037B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, __n128);
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __n128 v51;
  _QWORD *v52;
  char v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  int64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  void (*v76)(uint64_t *, _QWORD);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  id v90;
  Class isa;
  double v92;
  void *v93;
  id v94;
  void (*v95)(char *, uint64_t);
  id v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, __n128);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  uint64_t v107;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v99 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v94 - v4;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = Logger.StateStore.unsafeMutableAddressor(v6);
  v8 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v1 + 16);
  v97 = v7;
  v98 = v8;
  ((void (*)(char *))v8)(v5);
  v9 = v6;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v100 = v0;
    v13 = v12;
    v102 = swift_slowAlloc(64, -1);
    v107 = v102;
    *(_DWORD *)v13 = 136315394;
    v103 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052BFF0, &v107);
    *(_QWORD *)&v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104).n128_u64[0];
    *(_WORD *)(v13 + 12) = 2080;
    v96 = (id)(v13 + 14);
    v15 = objc_msgSend(v9, "openSessions", v14);
    v101 = v1;
    v16 = sub_10004F2F0(0, &qword_100647C90, UISceneSession_ptr);
    v17 = sub_1000835B4(&qword_100647C98, &qword_100647C90, UISceneSession_ptr);
    v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v15, v16, v17);

    v19 = Set.description.getter(v18, v16, v17);
    v21 = v20;
    swift_bridgeObjectRelease(v18);
    v103 = sub_1000544FC(v19, v21, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104);

    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: %s", (uint8_t *)v13, 0x16u);
    v22 = v102;
    swift_arrayDestroy(v102, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v13;
    v0 = v100;
    swift_slowDealloc(v23, -1, -1);

    v24 = *(void (**)(char *, uint64_t))(v101 + 8);
  }
  else
  {

    v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  }
  v24(v5, v0);
  v25 = objc_msgSend(v9, "connectedScenes");
  v26 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
  v27 = sub_1000835B4((unint64_t *)&qword_10064EC00, (unint64_t *)&unk_100650670, UIScene_ptr);
  v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v25, v26, v27);

  v29 = sub_10037A994(v28, (uint64_t)&v107);
  sub_10037AA80(v29);
  if (!v30)
  {
LABEL_21:
    sub_10021C590(v107);

    return;
  }
  v31 = v30;
  while (1)
  {
    v34 = objc_msgSend(v31, "delegate");
    if (!v34)
      goto LABEL_7;
    v35 = v34;
    v36 = type metadata accessor for BrowserSceneDelegate();
    v37 = swift_dynamicCastClass(v35, v36);
    if (v37)
    {
      v38 = *(void **)(v37 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v38)
        break;
    }
    swift_unknownObjectRelease(v35);
LABEL_7:

    sub_10037AA80(v32);
    v31 = v33;
    if (!v33)
      goto LABEL_21;
  }
  v95 = v24;
  v100 = v0;
  v39 = v38;
  v40 = objc_msgSend(v39, "configuration");

  swift_unknownObjectRelease(v35);
  sub_10021C590(v107);
  v94 = v40;
  v96 = v9;
  v41 = objc_msgSend(v9, "openSessions");
  v42 = sub_10004F2F0(0, &qword_100647C90, UISceneSession_ptr);
  v43 = sub_1000835B4(&qword_100647C98, &qword_100647C90, UISceneSession_ptr);
  v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, v42, v43);

  v102 = v44 & 0xC000000000000001;
  if ((v44 & 0xC000000000000001) != 0)
  {
    if (v44 < 0)
      v45 = v44;
    else
      v45 = v44 & 0xFFFFFFFFFFFFFF8;
    v46 = __CocoaSet.count.getter(v45);
    if (v46)
      goto LABEL_16;
LABEL_23:
    v51 = swift_bridgeObjectRelease(v44);
    v52 = _swiftEmptyArrayStorage;
LABEL_41:
    v78 = v99;
    v79 = v100;
    v98(v99, v97, v100, v51);
    v80 = swift_bridgeObjectRetain_n(v52, 2);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.debug.getter(v81);
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc(22, -1);
      v84 = swift_slowAlloc(64, -1);
      v107 = v84;
      *(_DWORD *)v83 = 136315394;
      v103 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052BFF0, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104);
      *(_WORD *)(v83 + 12) = 2080;
      swift_bridgeObjectRetain(v52);
      v86 = Array.description.getter(v85, &type metadata for String);
      v88 = v87;
      swift_bridgeObjectRelease(v52);
      v103 = sub_1000544FC(v86, v88, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104);
      swift_bridgeObjectRelease_n(v52, 2);
      swift_bridgeObjectRelease(v88);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "%s: purging application state excluding openSessionIdentifiers: %s", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v83, -1, -1);

      v89 = v99;
    }
    else
    {

      swift_bridgeObjectRelease_n(v52, 2);
      v89 = v78;
    }
    v95(v89, v79);
    v90 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v92 = swift_bridgeObjectRelease(v52).n128_u64[0];
    v93 = v94;
    objc_msgSend(v90, "purgeApplicationStateExcludingIdentifiers:configuration:", isa, v94, v92);

  }
  else
  {
    v46 = *(_QWORD *)(v44 + 16);
    if (!v46)
      goto LABEL_23;
LABEL_16:
    v106 = _swiftEmptyArrayStorage;
    sub_100081774(0, v46 & ~(v46 >> 63), 0);
    if (v102)
    {
      if (v44 < 0)
        v47 = v44;
      else
        v47 = v44 & 0xFFFFFFFFFFFFFF8;
      v48 = __CocoaSet.startIndex.getter(v47);
      v50 = 1;
    }
    else
    {
      v48 = sub_10024964C(v44);
      v50 = v53 & 1;
    }
    v103 = v48;
    v104 = v49;
    v105 = v50;
    if ((v46 & 0x8000000000000000) == 0)
    {
      v54 = v44 & 0xFFFFFFFFFFFFFF8;
      if (v44 < 0)
        v54 = v44;
      v101 = v54;
      do
      {
        while (1)
        {
          v60 = v103;
          v61 = v104;
          v62 = v105;
          sub_1002498C4(v103, v104, v105, v44);
          v64 = v63;
          v65 = objc_msgSend(v63, "persistentIdentifier");
          v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v68 = v67;

          v69 = v106;
          if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
          {
            sub_100081774(0, v69[2] + 1, 1);
            v69 = v106;
          }
          v71 = v69[2];
          v70 = v69[3];
          if (v71 >= v70 >> 1)
          {
            sub_100081774(v70 > 1, v71 + 1, 1);
            v69 = v106;
          }
          v69[2] = v71 + 1;
          v72 = &v69[2 * v71];
          v72[4] = v66;
          v72[5] = v68;
          if (v102)
            break;
          v55 = sub_10007AAFC(v60, v61, v62, v44);
          v57 = v56;
          v59 = v58;
          sub_1001D0608(v60, v61, v62);
          v103 = v55;
          v104 = v57;
          v105 = v59 & 1;
          if (!--v46)
            goto LABEL_40;
        }
        if ((v62 & 1) == 0)
          goto LABEL_46;
        v73 = __CocoaSet.Index.handleBitPattern.getter(v60, v61);
        if (v73)
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v73);
        else
          isUniquelyReferenced_nonNull_native = 1;
        v75 = sub_10006922C(&qword_100650680);
        v76 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify(&v107, v75);
        __CocoaSet.formIndex(after:isUnique:)(v77, isUniquelyReferenced_nonNull_native, v101);
        v76(&v107, 0);
        --v46;
      }
      while (v46);
LABEL_40:
      sub_1001D0608(v103, v104, v105);
      v51 = swift_bridgeObjectRelease(v44);
      v52 = v106;
      goto LABEL_41;
    }
    __break(1u);
LABEL_46:
    __break(1u);
  }
}

id sub_10037BD00(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;

  v3 = objc_msgSend(a2, "userActivities");
  v4 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v5 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v4, v5);

  v7 = (void *)sub_10008781C(v6);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if (!v7)
    goto LABEL_8;
  v9 = objc_msgSend(v7, "activityType", v8);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (v10 != 0xD000000000000020 || v12 != 0x8000000100519670)
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, 0xD000000000000020, 0x8000000100519670, 0);
    v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
    if ((v14 & 1) != 0)
      goto LABEL_6;

LABEL_8:
    v15 = objc_msgSend(a1, "role", v8);
    v19 = objc_allocWithZone((Class)UISceneConfiguration);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v19, "initWithName:sessionRole:", v17, v15);
    goto LABEL_9;
  }
  v13 = swift_bridgeObjectRelease(0x8000000100519670).n128_u64[0];
LABEL_6:
  v15 = objc_msgSend(a1, "role", *(double *)&v13);
  v16 = objc_allocWithZone((Class)UISceneConfiguration);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "initWithName:sessionRole:", v17, v15);

LABEL_9:
  return v18;
}

void sub_10037BF30(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  int64_t v60;
  uint64_t v61;
  char v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  void (*v76)(uint64_t *, _QWORD);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  id v89;
  Class isa;
  double v91;
  void *v92;
  id v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  _QWORD *v104;
  uint64_t v105;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - v9;
  v12 = Logger.StateStore.unsafeMutableAddressor(v11);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v95 = v12;
  v96 = v13;
  ((void (*)(char *))v13)(v10);
  v14 = swift_bridgeObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v99 = v7;
  v100 = a2;
  if (v17)
  {
    v18 = swift_slowAlloc(22, -1);
    v97 = swift_slowAlloc(64, -1);
    v105 = v97;
    *(_DWORD *)v18 = 136315394;
    v98 = (unint64_t)a1;
    v101 = sub_1000544FC(0xD000000000000027, 0x800000010052BFC0, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
    *(_WORD *)(v18 + 12) = 2080;
    v94 = (void (*)(char *, uint64_t))(v18 + 14);
    v19 = sub_10004F2F0(0, &qword_100647C90, UISceneSession_ptr);
    v7 = v99;
    v20 = sub_1000835B4(&qword_100647C98, &qword_100647C90, UISceneSession_ptr);
    swift_bridgeObjectRetain(v100);
    v21 = Set.description.getter(v100, v19, v20);
    v23 = v22;
    swift_bridgeObjectRelease(v100);
    v24 = v21;
    a1 = (void *)v98;
    v101 = sub_1000544FC(v24, v23, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
    swift_bridgeObjectRelease_n(v100, 2);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: %s", (uint8_t *)v18, 0x16u);
    v25 = v97;
    swift_arrayDestroy(v97, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v26 = v18;
    a2 = v100;
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v10, v4);
  v28 = objc_msgSend(a1, "connectedScenes");
  v29 = sub_10004F2F0(0, (unint64_t *)&unk_100650670, UIScene_ptr);
  v30 = sub_1000835B4((unint64_t *)&qword_10064EC00, (unint64_t *)&unk_100650670, UIScene_ptr);
  v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v29, v30);

  v32 = sub_10037A994(v31, (uint64_t)&v105);
  sub_10037AA80(v32);
  if (!v33)
  {
LABEL_16:
    sub_10021C590(v105);
    return;
  }
  v34 = v33;
  while (1)
  {
    v37 = objc_msgSend(v34, "delegate");
    if (!v37)
      goto LABEL_7;
    v38 = v37;
    v39 = type metadata accessor for BrowserSceneDelegate();
    v40 = swift_dynamicCastClass(v38, v39);
    if (v40)
    {
      v41 = *(void **)(v40 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v41)
        break;
    }
    swift_unknownObjectRelease(v38);
LABEL_7:

    sub_10037AA80(v35);
    v34 = v36;
    if (!v36)
      goto LABEL_16;
  }
  v42 = v41;
  v43 = objc_msgSend(v42, "configuration");

  swift_unknownObjectRelease(v38);
  sub_10021C590(v105);
  v98 = a2 & 0xC000000000000001;
  v93 = v43;
  v94 = v27;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v44 = a2;
    else
      v44 = a2 & 0xFFFFFFFFFFFFFF8;
    v45 = v43;
    v46 = __CocoaSet.count.getter(v44);
  }
  else
  {
    v46 = *(_QWORD *)(a2 + 16);
    v47 = v43;
  }
  v48 = _swiftEmptyArrayStorage;
  if (!v46)
    goto LABEL_41;
  v104 = _swiftEmptyArrayStorage;
  sub_100081774(0, v46 & ~(v46 >> 63), 0);
  if (v98)
  {
    if (a2 < 0)
      v49 = a2;
    else
      v49 = a2 & 0xFFFFFFFFFFFFFF8;
    v50 = __CocoaSet.startIndex.getter(v49);
    v52 = 1;
  }
  else
  {
    v50 = sub_10024964C(a2);
    v52 = v53 & 1;
  }
  v101 = v50;
  v102 = v51;
  v103 = v52;
  if (v46 < 0)
  {
    __break(1u);
LABEL_46:
    __break(1u);
  }
  else
  {
    v54 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v54 = a2;
    v97 = v54;
    do
    {
      while (1)
      {
        v60 = v101;
        v61 = v102;
        v62 = v103;
        sub_1002498C4(v101, v102, v103, a2);
        v64 = v63;
        v65 = objc_msgSend(v63, "persistentIdentifier");
        v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
        v68 = v67;

        v69 = v104;
        if ((swift_isUniquelyReferenced_nonNull_native(v104) & 1) == 0)
        {
          sub_100081774(0, v69[2] + 1, 1);
          v69 = v104;
        }
        v71 = v69[2];
        v70 = v69[3];
        if (v71 >= v70 >> 1)
        {
          sub_100081774(v70 > 1, v71 + 1, 1);
          v69 = v104;
        }
        v69[2] = v71 + 1;
        v72 = &v69[2 * v71];
        v72[4] = v66;
        v72[5] = v68;
        if (v98)
          break;
        a2 = v100;
        v55 = sub_10007AAFC(v60, v61, v62, v100);
        v57 = v56;
        v59 = v58;
        sub_1001D0608(v60, v61, v62);
        v101 = v55;
        v102 = v57;
        v103 = v59 & 1;
        v7 = v99;
        if (!--v46)
          goto LABEL_40;
      }
      a2 = v100;
      if ((v62 & 1) == 0)
        goto LABEL_46;
      v73 = __CocoaSet.Index.handleBitPattern.getter(v60, v61);
      if (v73)
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v73);
      else
        isUniquelyReferenced_nonNull_native = 1;
      v7 = v99;
      v75 = sub_10006922C(&qword_100650680);
      v76 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify(&v105, v75);
      __CocoaSet.formIndex(after:isUnique:)(v77, isUniquelyReferenced_nonNull_native, v97);
      v76(&v105, 0);
      --v46;
    }
    while (v46);
LABEL_40:
    sub_1001D0608(v101, v102, v103);
    v48 = v104;
LABEL_41:
    v78 = v4;
    v96(v7, v95, v4);
    v79 = swift_bridgeObjectRetain_n(v48, 2);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.debug.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc(22, -1);
      v83 = swift_slowAlloc(64, -1);
      v105 = v83;
      *(_DWORD *)v82 = 136315394;
      v101 = sub_1000544FC(0xD000000000000027, 0x800000010052BFC0, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
      *(_WORD *)(v82 + 12) = 2080;
      swift_bridgeObjectRetain(v48);
      v85 = Array.description.getter(v84, &type metadata for String);
      v87 = v86;
      swift_bridgeObjectRelease(v48);
      v101 = sub_1000544FC(v85, v87, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
      swift_bridgeObjectRelease_n(v48, 2);
      swift_bridgeObjectRelease(v87);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s: purging application state for sessionIdentifiers: %s", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);

      v88 = v99;
    }
    else
    {

      swift_bridgeObjectRelease_n(v48, 2);
      v88 = v7;
    }
    v94(v88, v78);
    v89 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v91 = swift_bridgeObjectRelease(v48).n128_u64[0];
    v92 = v93;
    objc_msgSend(v89, "purgeApplicationStateForIdentifiers:configuration:", isa, v93, v91);

  }
}

void sub_10037C780(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  void *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t *v43;
  void *v44;
  char v45[24];
  char v46[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v46, 0, 0);
  v4 = *v3;
  v5 = (unint64_t)*v3 >> 62;
  if (v5)
  {
LABEL_43:
    if (v4 < 0)
      v38 = v4;
    else
      v38 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v4, 2);
    v39 = a1;
    v6 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v4);
    if (v6)
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRelease(v4);

    return;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v3);
  v7 = a1;
  if (!v6)
    goto LABEL_47;
LABEL_3:
  v41 = v5;
  v42 = (void *)v1;
  v43 = a1;
  v5 = 0;
  a1 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4);
    else
      v8 = (char *)*(id *)(v4 + 8 * v5 + 32);
    v9 = v8;
    v10 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v45, 0, 0);
    v11 = *v10;
    if (!*v10)
      goto LABEL_19;
    v12 = type metadata accessor for DOCItemCollectionViewController(0);
    v13 = swift_dynamicCastClass(v11, v12);
    if (!v13)
      goto LABEL_19;
    v14 = v13;
    v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v15)
      goto LABEL_57;
    v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v16 + 16) & 1) != 0)
    {
      v1 = *(_QWORD *)(*(_QWORD *)v16 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      v17 = v11;
      swift_unknownObjectRetain(v1);
LABEL_13:
      v19 = objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
      v20 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v19, v1);
      swift_unknownObjectRelease(v1);

      goto LABEL_14;
    }
    v1 = *(_QWORD *)(v16 + 8);
    v18 = v11;
    swift_unknownObjectRetain(v1);
    if (v1)
      goto LABEL_13;
    v22 = *(void **)(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
    if (v22)
      break;

    v9 = v18;
LABEL_19:

LABEL_20:
    v23 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    ++v5;
    if (v23 == v6)
    {
      swift_bridgeObjectRelease(v4);

      return;
    }
  }
  v20 = v22;
LABEL_14:
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v21 = v43;
  v1 = static NSObject.== infix(_:_:)(v20, v21);

  if ((v1 & 1) == 0)
    goto LABEL_20;

  if (v41)
  {
    if (v4 < 0)
      v25 = v4;
    else
      v25 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v24 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v24 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v27 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  v1 = v24 - v27;
  if (__OFSUB__(v24, v27))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v1 < 1)
    return;
  v28 = objc_msgSend(v42, "collectionView", v26);
  if (!v28)
    goto LABEL_58;
  v29 = v28;
  a1 = (uint64_t *)objc_msgSend(v28, "numberOfItemsInSection:", 0);

  v30 = objc_msgSend(v42, "collectionView");
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, "visibleCells");

    v33 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

    if (!((unint64_t)v5 >> 62))
    {
      v34 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v5);
      if (v34)
        goto LABEL_36;
LABEL_54:
      swift_bridgeObjectRelease_n(v5, 2);
      return;
    }
LABEL_50:
    if (v5 < 0)
      v40 = v5;
    else
      v40 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v34 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (!v34)
      goto LABEL_54;
LABEL_36:
    if (v34 >= 1)
    {
      v35 = 0;
      do
      {
        if ((v5 & 0xC000000000000001) != 0)
          v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v5);
        else
          v36 = *(id *)(v5 + 8 * v35 + 32);
        v37 = v36;
        ++v35;
        v44 = v36;
        sub_10037F7FC(&v44, v42, (uint64_t)a1, (void *)v1);

      }
      while (v34 != v35);
      goto LABEL_54;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10037CBF8(void *a1, int a2, void (*a3)(_QWORD), uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, __n128);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void (*v24)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  _BYTE v41[4];
  int v42;
  void (*v43)(_QWORD);
  unsigned int v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _BYTE v50[24];
  char v51[24];

  v5 = v4;
  v46 = a4;
  v42 = a2;
  v8 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v8);
  v10 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for IndexPath(0);
  v48 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v45 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10006922C(&qword_1006508D8);
  __chkstk_darwin(v13);
  v15 = &v41[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = objc_msgSend(v5, "doc_hasAppearedOrIsAppearing");
  v16 = (uint64_t)&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem], v51, 0, 0);
  v17 = type metadata accessor for ScrollToItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = v16 + *(int *)(v17 + 24);
    v20 = *(void (**)(_QWORD, __n128))v19;
    if (*(_QWORD *)v19)
    {
      v47 = v11;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = swift_retain();
      v20(0, v22);
      v23 = v21;
      v11 = v47;
      sub_100087534((uint64_t)v20, v23);
    }
  }
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v15, 1, 1, v17);
  swift_beginAccess(v16, v50, 33, 0);
  sub_10008BB40((uint64_t)v15, v16, &qword_1006508D8);
  result = swift_endAccess(v50);
  if (a1)
  {
    v47 = v11;
    v43 = a3;
    v26 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v50, 0, 0);
    v27 = *v26;
    swift_bridgeObjectRetain(*v26);
    v28 = a1;
    sub_10017449C((uint64_t)v28, v27);
    v30 = v29;
    v32 = v31;
    v33 = swift_bridgeObjectRelease(v27);
    if ((v32 & 1) != 0)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v48 + 56))(v10, 1, 1, v47, v33);
    }
    else
    {
      IndexPath.init(item:section:)(v30, 0);
      v35 = v47;
      v34 = v48;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v10, 0, 1, v47);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v35) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(v45, v10, v35);
        v36 = v43;
        v37 = v46;
        if (v44)
        {
          sub_10008BA00((uint64_t)v43, v46);
          v38 = (uint64_t)v36;
        }
        else
        {
          v38 = 0;
          v37 = 0;
        }
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 16))(v15, v45, v35);
        v15[*(int *)(v17 + 20)] = v42 & 1;
        v39 = (uint64_t *)&v15[*(int *)(v17 + 24)];
        *v39 = v38;
        v39[1] = v37;
        v24(v15, 0, 1, v17);
        swift_beginAccess(v16, v49, 33, 0);
        sub_10008BA00(v38, v37);
        sub_10008BB40((uint64_t)v15, v16, &qword_1006508D8);
        swift_endAccess(v49);
        if (*(_QWORD *)&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs])
        {
          sub_100382CC0(1);
          v35 = v47;
        }
        if (v36)
          v40 = v44;
        else
          v40 = 1;
        if ((v40 & 1) == 0)
        {
          v36(0);
          v35 = v47;
        }

        sub_100087534(v38, v37);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v48 + 8))(v45, v35);
      }
    }

    result = sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
    a3 = v43;
  }
  if (a3)
    return ((uint64_t (*)(_QWORD))a3)(0);
  return result;
}

uint64_t sub_10037CFE8(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

void sub_10037CFFC(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  char v13[24];
  objc_super v14;

  v3 = v2;
  v4 = a2;
  v14.receiver = v3;
  v14.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v14, "setEditing:animated:", a1 & 1, v4 & 1);
  v6 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(v6, v13, 0, 0);
  v7 = *v6;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v12 = v7;
  else
    v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_8:
    v11 = v10;
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v11, "setEditing:animated:", a1 & 1, v4 & 1);

    return;
  }
  __break(1u);
}

uint64_t sub_10037D138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);
}

uint64_t sub_10037D150(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_10037D164(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  objc_super v17;

  v9 = objc_msgSend(v4, "collectionView");
  if (!v9)
    return 1;
  v10 = v9;
  objc_msgSend(v9, "bounds");
  v12 = v11;
  v14 = v13;

  if (v12 != a3 || v14 != a4)
    return 1;
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for DOCColumnLayout();
  return (uint64_t)objc_msgSendSuper2(&v17, "shouldInvalidateLayoutForBoundsChange:", a1, a2, a3, a4);
}

id sub_10037D2DC()
{
  return sub_1001405E0(0, type metadata accessor for DOCColumnLayout);
}

uint64_t type metadata accessor for DOCColumnLayout()
{
  return objc_opt_self(_TtC5FilesP33_648E3B4EF7AE01BE4032F3FCE62FE47B15DOCColumnLayout);
}

id sub_10037D38C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)a5(a4);
  return objc_msgSendSuper2(&v7, "initWithCoder:", a3);
}

id sub_10037D3D4(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCColumnViewControllerCollectionView);
}

uint64_t type metadata accessor for DOCColumnViewControllerCollectionView()
{
  return objc_opt_self(_TtC5Files37DOCColumnViewControllerCollectionView);
}

uint64_t sub_10037D400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = type metadata accessor for IndexPath(0);
  v2 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v2);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0x74616D696E61202CLL;
  v5._object = (void *)0xEB000000003D6465;
  String.append(_:)(v5);
  v6 = type metadata accessor for ScrollToItem(0);
  v7 = *(_BYTE *)(v0 + *(int *)(v6 + 20)) == 0;
  if (*(_BYTE *)(v0 + *(int *)(v6 + 20)))
    v8 = 1702195828;
  else
    v8 = 0x65736C6166;
  if (v7)
    v9 = 0xE500000000000000;
  else
    v9 = 0xE400000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  return 0x7461507865646E69;
}

double sub_10037D5F4(char **a1)
{
  _BYTE *v1;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  char *v13;
  void **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  unint64_t v29;
  _BYTE *v30;
  char v31[24];
  char v32[24];
  char v33[24];

  v3 = (unint64_t *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v33, 1, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(*v3);
  sub_10037D860(a1);
  v5 = *v3;
  *v3 = (unint64_t)a1;
  swift_bridgeObjectRelease(v5);
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  LOBYTE(a1) = sub_10023DA8C(v7, v4);
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) == 0)
  {
    v29 = v4;
    v30 = v1;
    v8 = *v3;
    if (*v3 >> 62)
      goto LABEL_19;
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*v3, 2);
    for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v26))
    {
      v10 = 0;
      while (1)
      {
        v13 = (v8 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8)
            : (char *)*(id *)(v8 + 32 + 8 * v10);
        v12 = v13;
        if (__OFADD__(v10++, 1))
          break;
        v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v32, 0, 0);
        v16 = *v15;
        if (v16)
        {
          v17 = type metadata accessor for DOCItemCollectionViewController(0);
          v18 = swift_dynamicCastClass(v16, v17);
          if (v18)
          {
            v19 = v18;
            v20 = (uint64_t *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
            swift_beginAccess(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v31, 1, 0);
            v21 = *v20;
            *v20 = 2;
            if (v21 != 2)
            {
              v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
              v23 = *(_QWORD *)(v22 + 16);
              if (v23)
              {
                v24 = (uint64_t *)(v22 + 64);
                do
                {
                  v25 = *v24;
                  v24 += 5;
                  *(_BYTE *)(v25 + 24) = *(_BYTE *)(v25 + 25);
                  --v23;
                }
                while (v23);
              }
              v11 = v16;
              sub_100026A34();

              v12 = v11;
            }
          }
        }

        if (v10 == v9)
          goto LABEL_23;
      }
      __break(1u);
LABEL_19:
      if (v8 < 0)
        v26 = v8;
      else
        v26 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v8, 2);
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v8, 2);
    if (objc_msgSend(v30, "isViewLoaded"))
    {
      v4 = *v3;
      swift_bridgeObjectRetain(*v3);
      sub_10037E0D8(v27);
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v30[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10037D860(char **a1)
{
  uint64_t v1;
  uint64_t *v3;
  void (*v4)(_QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t, uint64_t *);
  _QWORD *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD *, uint64_t *);
  char *v41;
  char v42;
  char *v43;
  uint64_t v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t i;
  id v67;
  void *v68;
  uint64_t v69;
  _QWORD v70[2];
  int v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t *);
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char **v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t *v80;
  uint64_t *v81;
  char *v82;
  char v83[40];
  uint64_t v84;
  unint64_t v85;
  char v86[24];
  char v87[32];

  v3 = (uint64_t *)type metadata accessor for Logger(0);
  v4 = (void (*)(_QWORD, _QWORD))*(v3 - 1);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (uint64_t)v70 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)v70 - v11;
  v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v87, 0, 0);
  v14 = *v13;
  v15 = swift_bridgeObjectRetain(*v13);
  v16 = sub_10023DA8C(v15, (unint64_t)a1);
  swift_bridgeObjectRelease(v14);
  if ((v16 & 1) == 0)
  {
    v82 = v7;
    v17 = *v13;
    if ((unint64_t)*v13 >> 62)
    {
LABEL_24:
      if (v17 < 0)
        v57 = v17;
      else
        v57 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v17, 2);
      v18 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (v18)
      {
LABEL_4:
        v77 = v12;
        v78 = a1;
        v79 = v4;
        v80 = v3;
        v76 = v10;
        v81 = v13;
        v12 = (char *)(v17 & 0xC000000000000001);
        v10 = 4;
        v3 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
        a1 = &selRef_viewOptionsRoot;
        while (1)
        {
          v13 = (uint64_t *)(v10 - 4);
          if (v12)
            v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v17);
          else
            v19 = (char *)*(id *)(v17 + 8 * v10);
          v4 = (void (*)(_QWORD, _QWORD))v19;
          v20 = v10 - 3;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            goto LABEL_24;
          }
          v21 = &v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess(&v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v86, 0, 0);
          v22 = *(_QWORD *)v21;
          if (*(_QWORD *)v21)
          {
            v23 = type metadata accessor for DOCItemCollectionViewController(0);
            v24 = (void *)swift_dynamicCastClass(v22, v23);
            if (v24)
            {
              v25 = objc_msgSend(v24, "isFirstResponder");
              if ((_DWORD)v25)
                break;
            }
          }

          ++v10;
          if (v20 == v18)
          {
            v39 = swift_bridgeObjectRelease_n(v17, 2);
            v30 = 0;
            v3 = v80;
            v13 = v81;
            v4 = v79;
            goto LABEL_29;
          }
        }
        v26 = Logger.UI.unsafeMutableAddressor(v25);
        v27 = v79;
        v3 = v80;
        v28 = (void (*)(uint64_t, uint64_t, uint64_t *))*((_QWORD *)v79 + 2);
        v29 = v77;
        v75 = v26;
        v74 = v28;
        ((void (*)(_QWORD *))v28)(v77);
        v30 = v4;
        v31 = Logger.logObject.getter(v30);
        v32 = static os_log_type_t.debug.getter();
        v33 = v32;
        if (os_log_type_enabled(v31, v32))
        {
          v34 = swift_slowAlloc(22, -1);
          v72 = (_QWORD *)swift_slowAlloc(8, -1);
          v73 = swift_slowAlloc(32, -1);
          v85 = v73;
          *(_DWORD *)v34 = 136315394;
          v71 = v33;
          v84 = sub_1000544FC(0xD000000000000014, 0x800000010052C190, (uint64_t *)&v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
          *(_WORD *)(v34 + 12) = 2112;
          v70[1] = v34 + 14;
          v84 = (uint64_t)v30;
          v35 = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
          v36 = v72;
          *v72 = v30;

          _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v71, "%s willSet found existing first responder: %@", (uint8_t *)v34, 0x16u);
          v37 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v36, 1, v37);
          swift_slowDealloc(v36, -1, -1);
          v38 = v73;
          swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v38, -1, -1);
          swift_slowDealloc(v34, -1, -1);

        }
        else
        {

        }
        v40 = (void (*)(_QWORD *, uint64_t *))v27[1];
        v40(v29, v3);
        swift_bridgeObjectRelease_n(v17, 2);
        v4 = (void (*)(_QWORD, _QWORD))v27;
        v41 = v30;
        v42 = sub_1000E006C((uint64_t)v41, (uint64_t)v78);
        v13 = v81;
        v43 = v82;
        if ((v42 & 1) != 0)
        {

          goto LABEL_30;
        }
        v82 = v30;
        v44 = v76;
        v74(v76, v75, v3);
        v45 = v41;
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc(22, -1);
          v77 = (_QWORD *)swift_slowAlloc(8, -1);
          v78 = (char **)swift_slowAlloc(32, -1);
          v85 = (unint64_t)v78;
          *(_DWORD *)v48 = 136315394;
          v79 = (void (*)(_QWORD, _QWORD))v40;
          v84 = sub_1000544FC(0xD000000000000014, 0x800000010052C190, (uint64_t *)&v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
          *(_WORD *)(v48 + 12) = 2112;
          v84 = (uint64_t)v45;
          v49 = v45;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
          v50 = v77;
          *v77 = v82;

          v13 = v81;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s willSet new containers do not contain current responder, resigning from: %@", (uint8_t *)v48, 0x16u);
          v51 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v50, 1, v51);
          swift_slowDealloc(v50, -1, -1);
          v52 = (uint64_t)v78;
          swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v52, -1, -1);
          swift_slowDealloc(v48, -1, -1);

          v79(v44, v3);
        }
        else
        {

          v40((_QWORD *)v44, v3);
        }
        v53 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v53, v83);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v45;
        v85 = inited;
        specialized Array._endMutation()(inited);
        v55 = v85;
        v56 = v45;
        sub_1003868A4(v55);
        swift_bridgeObjectRelease(v55);

        v30 = v82;
LABEL_34:
        v64 = *v13;
        if ((unint64_t)*v13 >> 62)
        {
          if (v64 < 0)
            v69 = *v13;
          else
            v69 = v64 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(*v13, 2);
          v65 = _CocoaArrayWrapper.endIndex.getter(v69);
          if (v65)
            goto LABEL_36;
        }
        else
        {
          v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(*v13, 2);
          if (v65)
          {
LABEL_36:
            if (v65 < 1)
            {
              __break(1u);
              return;
            }
            for (i = 0; i != v65; ++i)
            {
              if ((v64 & 0xC000000000000001) != 0)
                v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v64);
              else
                v67 = *(id *)(v64 + 8 * i + 32);
              v68 = v67;
              sub_1002C7138(0);

            }
          }
        }
        swift_bridgeObjectRelease_n(v64, 2);

        return;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*v13, 2);
      if (v18)
        goto LABEL_4;
    }
    v39 = swift_bridgeObjectRelease_n(v17, 2);
    v30 = 0;
LABEL_29:
    v43 = v82;
LABEL_30:
    v58 = Logger.UI.unsafeMutableAddressor(v39);
    v59 = (*((uint64_t (**)(char *, uint64_t, uint64_t *))v4 + 2))(v43, v58, v3);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(12, -1);
      v63 = swift_slowAlloc(32, -1);
      v85 = v63;
      v82 = v30;
      *(_DWORD *)v62 = 136315138;
      v84 = sub_1000544FC(0xD000000000000014, 0x800000010052C190, (uint64_t *)&v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s willSet new containers contain current responder. Do not resign responder", v62, 0xCu);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v62, -1, -1);

      v30 = v82;
    }
    else
    {

    }
    (*((void (**)(char *, uint64_t *))v4 + 1))(v43, v3);
    goto LABEL_34;
  }
}

uint64_t sub_10037E0D8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id i;
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  id v37;
  char *v38;
  uint64_t *v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  char v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, void *);
  void *v61;
  void *v62;
  char *v63;
  uint64_t v64;
  id v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  char v74[24];
  uint64_t v75;
  char v76;

  v73 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v73);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_10006922C(&qword_1006508C8);
  v6 = __chkstk_darwin(v5);
  v67 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v6);
  v11 = (char *)&v62 - v10;
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource];
  if (v12)
  {
    v64 = v9;
    v68 = v1;
    v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
    v65 = v12;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    v13 = NSDiffableDataSourceSnapshot.numberOfSections.getter(v5);
    v63 = v11;
    if (v13 == 1)
    {
      v75 = 0;
      v14 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v75, v5);
      v15 = v14;
      if ((unint64_t)v14 >> 62)
      {
        if (v14 >= 0)
          v14 &= 0xFFFFFFFFFFFFFF8uLL;
        if (_CocoaArrayWrapper.endIndex.getter(v14))
          goto LABEL_5;
      }
      else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v15 & 0xC000000000000001) != 0)
          goto LABEL_110;
        if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_112:
          __break(1u);
          JUMPOUT(0x10037E9B0);
        }
        for (i = *(id *)(v15 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15))
        {
          v66 = i;
          swift_bridgeObjectRelease(v15);
          if ((unint64_t)a1 >> 62)
          {
LABEL_9:
            if (a1 < 0)
              v17 = a1;
            else
              v17 = a1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(a1);
            v15 = _CocoaArrayWrapper.endIndex.getter(v17);
            if (!v15)
            {
LABEL_13:
              swift_bridgeObjectRelease(a1);
              v18 = v66 == 0;
              goto LABEL_30;
            }
          }
          else
          {
LABEL_19:
            v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(a1);
            if (!v15)
              goto LABEL_13;
          }
          if ((a1 & 0xC000000000000001) != 0)
          {
            v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
          }
          else
          {
            if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_109;
            }
            v19 = *(id *)(a1 + 32);
          }
          v20 = v19;
          swift_bridgeObjectRelease(a1);
          if (!v66)
          {
            if (!v20)
            {
              v18 = 1;
              goto LABEL_30;
            }

LABEL_28:
            v18 = 0;
            goto LABEL_30;
          }
          if (!v20)
            goto LABEL_28;
          type metadata accessor for DOCBrowserContainerController();
          v21 = v66;
          v18 = static NSObject.== infix(_:_:)(v21, v20);

LABEL_30:
          v22 = type metadata accessor for DOCBrowserContainerController();
          v23 = sub_10005A360(&qword_1006508D0, (uint64_t (*)(uint64_t))type metadata accessor for DOCBrowserContainerController, (uint64_t)&protocol conformance descriptor for NSObject);
          v24 = v67;
          NSDiffableDataSourceSnapshot.init()(&type metadata for Int, v22, &protocol witness table for Int, v23);
          NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1005BF428);
          v75 = 0;
          v76 = 1;
          v62 = v5;
          v25 = NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(a1, &v75, v5);
          __chkstk_darwin(v25);
          *((_BYTE *)&v62 - 32) = (v18 & 1) == 0;
          *(&v62 - 3) = v65;
          *(&v62 - 2) = v24;
          *(&v62 - 1) = (void *)a1;
          v26 = v68;
          UIViewController.doc_performBlock(allowingAnimations:block:)(v18 & 1, sub_100386894);
          sub_10037EEC0();
          sub_10037FF70();
          v27 = objc_msgSend(v26, "collectionView");
          if (!v27)
            goto LABEL_49;
          v5 = v27;
          v28 = objc_msgSend(v27, "preparedCells");
          if (!v28)
            goto LABEL_112;
          v15 = (uint64_t)v28;
          v29 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
          v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v29);

          v72 = v5;
          if ((unint64_t)v30 >> 62)
          {
            if (v30 < 0)
              v15 = v30;
            else
              v15 = v30 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v30);
            a1 = _CocoaArrayWrapper.endIndex.getter(v15);
            swift_bridgeObjectRelease(v30);
            if (!a1)
              goto LABEL_48;
          }
          else
          {
            a1 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!a1)
              goto LABEL_48;
          }
          if (a1 >= 1)
          {
            v31 = 0;
            do
            {
              if ((v30 & 0xC000000000000001) != 0)
                v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v30);
              else
                v32 = *(id *)(v30 + 8 * v31 + 32);
              v33 = v32;
              v34 = type metadata accessor for DOCColumnViewCell();
              v35 = swift_dynamicCastClass(v33, v34);
              if (v35)
              {
                v36 = (id *)(v35 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
                swift_beginAccess(v35 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v74, 0, 0);
                if (*v36)
                {
                  v37 = *v36;
                  UIViewController.traitOverrides.getter();
                  UIMutableTraits.horizontalSizeClass.setter(1, v73, &protocol witness table for UITraitOverrides);
                  UIViewController.traitOverrides.setter(v4);

                  v33 = v37;
                }
              }
              ++v31;

            }
            while (a1 != v31);
LABEL_48:

            swift_bridgeObjectRelease(v30);
LABEL_49:
            v38 = v68;
            sub_100380214();
            sub_10038057C();
            sub_100380B00();
            v39 = (uint64_t *)&v38[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
            swift_beginAccess(v39, &v75, 0, 0);
            v73 = *v39;
            if ((unint64_t)v73 >> 62)
              goto LABEL_102;
            v40 = *(id *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v73);
            if (!v40)
              goto LABEL_106;
LABEL_51:
            v41 = 0;
            v42 = v73 & 0xC000000000000001;
            v69 = v73 + 32;
            v70 = v73 & 0xFFFFFFFFFFFFFF8;
            v71 = v73 & 0xC000000000000001;
            v72 = v40;
            while (1)
            {
              if (v42)
              {
                v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v41, v73);
              }
              else
              {
                if (v41 >= *(_QWORD *)(v70 + 16))
                  goto LABEL_100;
                v43 = *(id *)(v69 + 8 * v41);
              }
              v44 = v43;
              if (__OFADD__(v41++, 1))
              {
                __break(1u);
LABEL_100:
                __break(1u);
                goto LABEL_101;
              }
              v46 = *((_BYTE *)v43 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding);
              *((_BYTE *)v43 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding) = 0;
              if ((v46 & 1) != 0)
              {
                v47 = objc_msgSend(v43, "childViewControllers");
                v48 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
                v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

                if ((unint64_t)v49 >> 62)
                {
                  if (v49 < 0)
                    v58 = v49;
                  else
                    v58 = v49 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v49);
                  v50 = _CocoaArrayWrapper.endIndex.getter(v58);
                  if (v50)
                  {
LABEL_62:
                    v51 = v50 - 1;
                    if (v50 >= 1)
                    {
                      v52 = 0;
                      if ((v49 & 0xC000000000000001) == 0)
                      {
LABEL_67:
                        v53 = *(id *)(v49 + 8 * v52 + 32);
                        goto LABEL_68;
                      }
                      while (1)
                      {
                        v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v52, v49);
LABEL_68:
                        v54 = v53;
                        v55 = objc_msgSend(v53, "_appearState");
                        if (v55 != objc_msgSend(v44, "_appearState"))
                        {
                          v56 = objc_msgSend(v54, "_appearState");
                          v57 = objc_msgSend(v44, "_appearState");
                          switch(v56)
                          {
                            case 0u:
                              if (v57 == 2)
                              {
                                objc_msgSend(v54, "beginAppearanceTransition:animated:", 1, 0);
                                goto LABEL_91;
                              }
                              if (v57 == 1)
                                goto LABEL_84;
                              break;
                            case 1u:
                              switch(v57)
                              {
                                case 0u:
                                  objc_msgSend(v54, "endAppearanceTransition");
                                  objc_msgSend(v54, "beginAppearanceTransition:animated:", 0, 0);
                                  goto LABEL_91;
                                case 3u:
                                  objc_msgSend(v54, "endAppearanceTransition");
                                  goto LABEL_89;
                                case 2u:
                                  goto LABEL_91;
                              }
                              break;
                            case 2u:
                              if (v57 == 3)
                              {
LABEL_89:
                                objc_msgSend(v54, "beginAppearanceTransition:animated:", 0, 0);
                              }
                              else if (!v57)
                              {
                                objc_msgSend(v54, "beginAppearanceTransition:animated:", 0, 0);
                                goto LABEL_91;
                              }
                              break;
                            case 3u:
                              switch(v57)
                              {
                                case 0u:
                                  goto LABEL_91;
                                case 2u:
                                  objc_msgSend(v54, "endAppearanceTransition");
                                  objc_msgSend(v54, "beginAppearanceTransition:animated:", 1, 0);
LABEL_91:
                                  objc_msgSend(v54, "endAppearanceTransition");
                                  break;
                                case 1u:
                                  objc_msgSend(v54, "endAppearanceTransition");
LABEL_84:
                                  objc_msgSend(v54, "beginAppearanceTransition:animated:", 1, 0);
                                  break;
                              }
                              break;
                            default:
                              break;
                          }
                        }

                        if (v51 == v52)
                          goto LABEL_52;
                        ++v52;
                        if ((v49 & 0xC000000000000001) == 0)
                          goto LABEL_67;
                      }
                    }
LABEL_101:
                    __break(1u);
LABEL_102:
                    if (v73 < 0)
                      v59 = v73;
                    else
                      v59 = v73 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v73);
                    v40 = (id)_CocoaArrayWrapper.endIndex.getter(v59);
                    if (!v40)
                    {
LABEL_106:
                      swift_bridgeObjectRelease(v73);
                      sub_100380EF0();
                      sub_10038125C();

                      v60 = *(void (**)(char *, void *))(v64 + 8);
                      v61 = v62;
                      v60(v63, v62);
                      return ((uint64_t (*)(char *, void *))v60)(v67, v61);
                    }
                    goto LABEL_51;
                  }
                }
                else
                {
                  v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain(v49);
                  if (v50)
                    goto LABEL_62;
                }
LABEL_52:
                swift_bridgeObjectRelease_n(v49, 2);
                v42 = v71;
                v40 = v72;
              }

              if ((id)v41 == v40)
                goto LABEL_106;
            }
          }
LABEL_109:
          __break(1u);
LABEL_110:
          ;
        }
      }
      swift_bridgeObjectRelease(v15);
    }
    v66 = 0;
    if ((unint64_t)a1 >> 62)
      goto LABEL_9;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_10037E9C0()
{
  return sub_10037E9F8((uint64_t)&OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems);
}

uint64_t sub_10037E9DC()
{
  return sub_10037E9F8((uint64_t)&OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
}

uint64_t sub_10037E9F8(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t j;
  id v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  id v35;
  id v36;
  int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _BYTE v60[32];

  v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v5, v60, 0, 0);
  v6 = *v5;
  v49 = *v5;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_52;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v6, 2);
  while (v7)
  {
    v8 = 0;
    v50 = *(_QWORD *)a1;
    while (1)
    {
      v6 = (v49 & 0xC000000000000001) != 0
         ? specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v49)
         : (uint64_t)*(id *)(v49 + 32 + 8 * v8);
      v9 = (char *)v6;
      v10 = __OFADD__(v8, 1);
      v11 = v8 + 1;
      if (v10)
        break;
      v12 = *(_QWORD *)(v51 + v50);
      v13 = *(_QWORD *)&v9[*a2];
      v55 = *a2;
      *(_QWORD *)&v9[*a2] = v12;
      swift_bridgeObjectRetain(v12);
      v14 = objc_msgSend(v9, "childViewControllers", swift_bridgeObjectRelease(v13).n128_f64[0]);
      v15 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

      *(_QWORD *)&v57 = _swiftEmptyArrayStorage;
      if ((unint64_t)a1 >> 62)
      {
        if (a1 < 0)
          v27 = a1;
        else
          v27 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v6 = _CocoaArrayWrapper.endIndex.getter(v27);
        v16 = v6;
        v53 = v11;
        if (!v6)
        {
LABEL_27:
          swift_bridgeObjectRelease(a1);
          v26 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_28;
        }
      }
      else
      {
        v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        v6 = swift_bridgeObjectRetain(a1);
        v53 = v11;
        if (!v16)
          goto LABEL_27;
      }
      if (v16 < 1)
        goto LABEL_50;
      for (i = 0; i != v16; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        else
          v18 = *(id *)(a1 + 8 * i + 32);
        v19 = v18;
        v20 = type metadata accessor for DOCBrowserContainedViewController();
        v21 = swift_dynamicCastClass(v19, v20);
        if (v21)
        {
          v22 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
          v24 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v23 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v24 >= v23 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
          v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
          specialized Array._endMutation()(v25);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(a1);
      v26 = v57;
LABEL_28:
      swift_bridgeObjectRelease(a1);
      if ((unint64_t)v26 >> 62)
      {
        if (v26 < 0)
          v46 = v26;
        else
          v46 = v26 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v26);
        v6 = _CocoaArrayWrapper.endIndex.getter(v46);
        v28 = v6;
        if (!v6)
          goto LABEL_4;
      }
      else
      {
        v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
        v6 = swift_bridgeObjectRetain(v26);
        if (!v28)
          goto LABEL_4;
      }
      if (v28 < 1)
        goto LABEL_51;
      for (j = 0; j != v28; ++j)
      {
        if ((v26 & 0xC000000000000001) != 0)
          v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v26);
        else
          v30 = *(id *)(v26 + 8 * j + 32);
        a1 = (uint64_t)v30;
        v31 = *(_QWORD *)&v9[v55];
        v32 = *(_QWORD *)(a1 + *a3);
        *(_QWORD *)(a1 + *a3) = v31;
        swift_bridgeObjectRetain(v31);
        *(_QWORD *)&v33 = swift_bridgeObjectRelease(v32).n128_u64[0];
        v34 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
        v35 = objc_msgSend((id)a1, "viewIfLoaded", v33);
        v36 = objc_msgSend(v35, "window");

        if (v36)
        {
          v37 = *(unsigned __int8 *)(a1 + v34);
          if (v37 != 2)
          {
            v38 = sub_10002DA34();
            v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v38 + 152))(v38);
            swift_release(v38);
            if ((v39 & 1) == 0 && (objc_msgSend((id)a1, "doc_hasAppearedOrIsAppearing") & 1) != 0)
            {
              v56 = a1;
              v40 = type metadata accessor for DOCBrowserContainedViewController();
              v41 = (id)a1;
              v42 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&v57, &v56, v40, v42, 6))
              {
                v43 = v37 & 1;
                v44 = *((_QWORD *)&v58 + 1);
                v45 = v59;
                sub_10007E7A0(&v57, *((uint64_t *)&v58 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 8))(v43, v44, v45);
                sub_100068588(&v57);
              }
              else
              {
                v59 = 0;
                v57 = 0u;
                v58 = 0u;
                sub_10000CB4C((uint64_t)&v57, &qword_1006508F0);
              }
              *(_BYTE *)(a1 + v34) = 2;
            }
          }
        }

      }
LABEL_4:
      swift_bridgeObjectRelease_n(v26, 2);

      v8 = v53;
      if (v53 == v7)
        return swift_bridgeObjectRelease_n(v49, 2);
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    if (v6 < 0)
      v47 = v6;
    else
      v47 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v6, 2);
    v7 = _CocoaArrayWrapper.endIndex.getter(v47);
  }
  return swift_bridgeObjectRelease_n(v49, 2);
}

uint64_t sub_10037EEC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t j;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  id v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t k;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  id v74;
  id v75;
  int v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _BYTE *v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  char v107[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v107, 0, 0);
  v90 = v1;
  v2 = *v1;
  v92 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_52;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v2, 2);
  while (v3)
  {
    v4 = 0;
    v95 = OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems;
    v94 = v3;
    while (1)
    {
      v2 = (v92 & 0xC000000000000001) != 0
         ? specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v92)
         : (uint64_t)*(id *)(v92 + 32 + 8 * v4);
      v5 = (char *)v2;
      v6 = __OFADD__(v4, 1);
      v7 = v4 + 1;
      if (v6)
        break;
      v8 = *(_QWORD *)(v98 + v95);
      v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems];
      v101 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems;
      *(_QWORD *)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = v8;
      swift_bridgeObjectRetain(v8);
      v10 = objc_msgSend(v5, "childViewControllers", swift_bridgeObjectRelease(v9).n128_f64[0]);
      v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

      *(_QWORD *)&v104 = _swiftEmptyArrayStorage;
      if ((unint64_t)v12 >> 62)
      {
        if (v12 < 0)
          v24 = v12;
        else
          v24 = v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v2 = _CocoaArrayWrapper.endIndex.getter(v24);
        v13 = v2;
        v99 = v7;
        if (!v2)
        {
LABEL_27:
          swift_bridgeObjectRelease(v12);
          v23 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_28;
        }
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        v2 = swift_bridgeObjectRetain(v12);
        v99 = v7;
        if (!v13)
          goto LABEL_27;
      }
      if (v13 < 1)
        goto LABEL_50;
      for (i = 0; i != v13; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
        else
          v15 = *(id *)(v12 + 8 * i + 32);
        v16 = v15;
        v17 = type metadata accessor for DOCBrowserContainedViewController();
        v18 = swift_dynamicCastClass(v16, v17);
        if (v18)
        {
          v19 = v18;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v21 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v20 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v21 >= v20 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
          v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
          specialized Array._endMutation()(v22);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v12);
      v23 = v104;
LABEL_28:
      swift_bridgeObjectRelease(v12);
      if ((unint64_t)v23 >> 62)
      {
        if (v23 < 0)
          v44 = v23;
        else
          v44 = v23 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v23);
        v2 = _CocoaArrayWrapper.endIndex.getter(v44);
        v25 = v2;
        if (!v2)
          goto LABEL_4;
      }
      else
      {
        v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        v2 = swift_bridgeObjectRetain(v23);
        if (!v25)
          goto LABEL_4;
      }
      if (v25 < 1)
        goto LABEL_51;
      for (j = 0; j != v25; ++j)
      {
        if ((v23 & 0xC000000000000001) != 0)
          v27 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v23);
        else
          v27 = *(id *)(v23 + 8 * j + 32);
        v28 = v27;
        v29 = *(_QWORD *)&v5[v101];
        v30 = *(_QWORD *)&v28[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
        *(_QWORD *)&v28[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = v29;
        swift_bridgeObjectRetain(v29);
        *(_QWORD *)&v31 = swift_bridgeObjectRelease(v30).n128_u64[0];
        v32 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v28[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v33 = objc_msgSend(v28, "viewIfLoaded", v31);
        v34 = objc_msgSend(v33, "window");

        if (v34)
        {
          v35 = v28[v32];
          if (v35 != 2)
          {
            v36 = sub_10002DA34();
            v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 152))(v36);
            swift_release(v36);
            if ((v37 & 1) == 0 && (objc_msgSend(v28, "doc_hasAppearedOrIsAppearing") & 1) != 0)
            {
              v103 = v28;
              v38 = type metadata accessor for DOCBrowserContainedViewController();
              v39 = v28;
              v40 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&v104, &v103, v38, v40, 6))
              {
                v41 = v35 & 1;
                v43 = *((_QWORD *)&v105 + 1);
                v42 = v106;
                sub_10007E7A0(&v104, *((uint64_t *)&v105 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 8))(v41, v43, v42);
                sub_100068588(&v104);
              }
              else
              {
                v106 = 0;
                v104 = 0u;
                v105 = 0u;
                sub_10000CB4C((uint64_t)&v104, &qword_1006508F0);
              }
              v28[v32] = 2;
            }
          }
        }

      }
LABEL_4:
      swift_bridgeObjectRelease_n(v23, 2);

      v4 = v99;
      if (v99 == v94)
        goto LABEL_56;
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    if (v2 < 0)
      v45 = v2;
    else
      v45 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v45);
  }
LABEL_56:
  swift_bridgeObjectRelease_n(v92, 2);
  v46 = *v90;
  v91 = *v90;
  if ((unint64_t)*v90 >> 62)
    goto LABEL_107;
  v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v46, 2);
  v96 = v47;
  if (v47)
  {
LABEL_58:
    v48 = 0;
    v93 = OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems;
    do
    {
      if ((v91 & 0xC000000000000001) != 0)
        v46 = specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v91);
      else
        v46 = (uint64_t)*(id *)(v91 + 32 + 8 * v48);
      v102 = (char *)v46;
      v6 = __OFADD__(v48++, 1);
      if (v6)
      {
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        if (v46 < 0)
          v88 = v46;
        else
          v88 = v46 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v46, 2);
        v96 = _CocoaArrayWrapper.endIndex.getter(v88);
        if (!v96)
          return swift_bridgeObjectRelease_n(v91, 2);
        goto LABEL_58;
      }
      v49 = *(_QWORD *)(v98 + v93);
      v50 = *(_QWORD *)&v102[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems];
      v100 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems;
      *(_QWORD *)&v102[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = v49;
      swift_bridgeObjectRetain(v49);
      v51 = objc_msgSend(v102, "childViewControllers", swift_bridgeObjectRelease(v50).n128_f64[0]);
      v52 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, v52);

      *(_QWORD *)&v104 = _swiftEmptyArrayStorage;
      if ((unint64_t)v53 >> 62)
      {
        if (v53 < 0)
          v65 = v53;
        else
          v65 = v53 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v53);
        v46 = _CocoaArrayWrapper.endIndex.getter(v65);
        v54 = v46;
        if (!v46)
        {
LABEL_82:
          swift_bridgeObjectRelease(v53);
          v64 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_83;
        }
      }
      else
      {
        v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
        v46 = swift_bridgeObjectRetain(v53);
        if (!v54)
          goto LABEL_82;
      }
      if (v54 < 1)
        goto LABEL_105;
      for (k = 0; k != v54; ++k)
      {
        if ((v53 & 0xC000000000000001) != 0)
          v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v53);
        else
          v56 = *(id *)(v53 + 8 * k + 32);
        v57 = v56;
        v58 = type metadata accessor for DOCBrowserContainedViewController();
        v59 = swift_dynamicCastClass(v57, v58);
        if (v59)
        {
          v60 = v59;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
          v62 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v61 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v62 >= v61 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
          v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
          specialized Array._endMutation()(v63);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v53);
      v64 = v104;
LABEL_83:
      swift_bridgeObjectRelease(v53);
      if ((unint64_t)v64 >> 62)
      {
        if (v64 < 0)
          v87 = v64;
        else
          v87 = v64 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v64);
        v46 = _CocoaArrayWrapper.endIndex.getter(v87);
        v66 = v46;
        if (!v46)
          goto LABEL_59;
      }
      else
      {
        v66 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
        v46 = swift_bridgeObjectRetain(v64);
        if (!v66)
          goto LABEL_59;
      }
      if (v66 < 1)
        goto LABEL_106;
      v67 = 0;
      v97 = v48;
      do
      {
        if ((v64 & 0xC000000000000001) != 0)
          v68 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v64);
        else
          v68 = *(id *)(v64 + 8 * v67 + 32);
        v69 = v68;
        v70 = *(_QWORD *)&v102[v100];
        v71 = *(_QWORD *)&v69[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems];
        *(_QWORD *)&v69[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = v70;
        swift_bridgeObjectRetain(v70);
        *(_QWORD *)&v72 = swift_bridgeObjectRelease(v71).n128_u64[0];
        v73 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v69[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        v74 = objc_msgSend(v69, "viewIfLoaded", v72);
        v75 = objc_msgSend(v74, "window");

        if (v75)
        {
          v76 = v69[v73];
          if (v76 != 2)
          {
            v77 = sub_10002DA34();
            v78 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v77 + 152))(v77);
            swift_release(v77);
            if ((v78 & 1) == 0 && (objc_msgSend(v69, "doc_hasAppearedOrIsAppearing") & 1) != 0)
            {
              v103 = v69;
              v79 = type metadata accessor for DOCBrowserContainedViewController();
              v80 = v69;
              v81 = sub_10006922C(&qword_10064D510);
              if (swift_dynamicCast(&v104, &v103, v79, v81, 6))
              {
                v82 = v76 & 1;
                v83 = *((_QWORD *)&v105 + 1);
                v84 = v106;
                sub_10007E7A0(&v104, *((uint64_t *)&v105 + 1));
                v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 8);
                v86 = v84;
                v48 = v97;
                v85(v82, v83, v86);
                sub_100068588(&v104);
              }
              else
              {
                v106 = 0;
                v104 = 0u;
                v105 = 0u;
                sub_10000CB4C((uint64_t)&v104, &qword_1006508F0);
              }
              v69[v73] = 2;
            }
          }
        }

        ++v67;
      }
      while (v66 != v67);
LABEL_59:
      swift_bridgeObjectRelease_n(v64, 2);

    }
    while (v48 != v96);
  }
  return swift_bridgeObjectRelease_n(v91, 2);
}

void sub_10037F7FC(void **a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void (**v32)(char *, char *, uint64_t);
  __n128 v33;
  void (*v34)(char *, char *, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t i;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  id v45;
  _BYTE v46[24];
  char *v47;

  v45 = a4;
  v8 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v47 = (char *)&v41 - v17;
  v18 = *a1;
  v19 = objc_msgSend(a2, "collectionView", v16);
  if (!v19)
    goto LABEL_28;
  v20 = v19;
  v21 = objc_msgSend(v19, "indexPathForCell:", v18);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_18;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v22(v10, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_18:
    sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
    return;
  }
  v23 = v47;
  v22(v47, v10, v11);
  v24 = type metadata accessor for DOCColumnViewCell();
  v25 = swift_dynamicCastClass(v18, v24);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
    return;
  }
  v26 = v25;
  v44 = v12;
  v27 = v18;
  v28 = IndexPath.item.getter(v27);
  v29 = a3 - (_QWORD)v45;
  if (__OFSUB__(a3, v45))
  {
    __break(1u);
    goto LABEL_22;
  }
  v30 = v28;
  v31 = 0.0;
  if (v28 < v29)
    v31 = 1.0;
  objc_msgSend(v27, "setAlpha:", v31);
  v32 = (void (**)(char *, char *, uint64_t))(v26
                                                      + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  v33 = swift_beginAccess(v26 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v46, 32, 0);
  v22 = *v32;
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v23, v11, v33);
    swift_endAccess(v46);

    return;
  }
  v45 = v27;
  swift_endAccess(v46);
  v27 = (unsigned __int8 *)OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
  *((_BYTE *)v22 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled) = v30 < v29;
  v34 = v22;
  v35 = (unint64_t)sub_100056180();
  a3 = v35;
  v42 = v34;
  v43 = v4;
  if (v35 >> 62)
  {
LABEL_22:
    if (a3 < 0)
      v40 = a3;
    else
      v40 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v36 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v36)
      goto LABEL_11;
LABEL_26:
    swift_bridgeObjectRelease_n(a3, 2);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v11);
    return;
  }
  v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v35);
  if (!v36)
    goto LABEL_26;
LABEL_11:
  if (v36 >= 1)
  {
    for (i = 0; i != v36; ++i)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v38 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a3);
      else
        v38 = *(id *)(a3 + 8 * i + 32);
      v39 = v38;
      (*(void (**)(_QWORD))((swift_isaMask & *v38) + 0x208))(v27[(_QWORD)v22]);

    }
    goto LABEL_26;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_10037FBA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  NSString v8;
  Class isa;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;
  _BYTE v15[24];

  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  v8 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v8, isa);

  v11 = type metadata accessor for DOCColumnViewCell();
  v12 = (char *)swift_dynamicCastClass(v10, v11);
  if (v12)
  {
    v13 = v12;
    sub_100384280(v12);

    return (uint64_t)v13;
  }

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010052C370, "Files/DOCColumnViewController.swift", 35, 2, 794, 0);
  __break(1u);
  return result;
}

uint64_t sub_10037FCE8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = sub_10006922C(&qword_1006508C8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  if ((a1 & 1) != 0)
  {
    v11 = swift_allocObject(&unk_1005E3120, 24, 7);
    *(_QWORD *)(v11 + 16) = a4;
    swift_bridgeObjectRetain(a4);
    dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)(v10, sub_100387E78, v11);
  }
  else
  {
    v11 = swift_allocObject(&unk_1005E30F8, 24, 7);
    *(_QWORD *)(v11 + 16) = a4;
    swift_bridgeObjectRetain(a4);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v10, 0, sub_100386EDC, v11);
  }
  swift_release(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10037FE10(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  char *v4;
  void *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _BYTE v11[24];

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v4 = (char *)*(id *)(a1 + 8 * i + 32);
      v5 = v4;
      v6 = (void **)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
      v7 = *v6;
      if (v7)
      {
        v8 = type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass(v7, v8))
        {
          v9 = v7;
          sub_1000157B0();

          v5 = v9;
        }
      }

    }
    swift_bridgeObjectRelease(a1);
  }
}

void sub_10037FF70()
{
  char *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  char v21[24];

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v21, 0, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v8 = *v2;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v2, 2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*v2, 2);
    if (v4)
    {
LABEL_3:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
        else
          v6 = *(id *)(v3 + 8 * i + 32);
        v7 = v6;
        sub_1002C7138(0);

      }
    }
  }
  swift_bridgeObjectRelease_n(v3, 2);
  v9 = *v2;
  if ((unint64_t)v9 >> 62)
    goto LABEL_31;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v9, 2);
  if (!v10)
  {
LABEL_23:
    swift_bridgeObjectRelease_n(v9, 2);
    v17 = 0;
    goto LABEL_25;
  }
  while (1)
  {
    while (__OFSUB__(v10--, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      if (v9 < 0)
        v20 = v9;
      else
        v20 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v9, 2);
      v10 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v10)
        goto LABEL_23;
    }
    if ((v9 & 0xC000000000000001) != 0)
    {
      v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v9);
      goto LABEL_21;
    }
    if ((v10 & 0x8000000000000000) != 0)
      goto LABEL_29;
    if (v10 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_30;
    v12 = (char *)*(id *)(v9 + 32 + 8 * v10);
LABEL_21:
    v14 = v12;
    v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource], v13);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15) & 1) != 0)
      break;

    if (!v10)
      goto LABEL_23;
  }
  swift_bridgeObjectRelease_n(v9, 2);
  v17 = v14;
  v18 = objc_msgSend(v1, "navigationItem");
  sub_1002C7138(v18);

LABEL_25:
  v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_100641078 != -1)
    swift_once(&qword_100641078, sub_1000AAA90);
  objc_msgSend(v19, "postNotificationName:object:", qword_100672CA0, v1);

}

void sub_100380214()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  void *v30;
  void *v31;
  char *v32;
  double v33;
  id v34;
  id v35;
  void *v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double *v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  id v50;
  CGRect v51;
  CGRect v52;

  v1 = v0;
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v2 = objc_msgSend(v0, "collectionViewLayout");
    v3 = type metadata accessor for DOCColumnLayout();
    v4 = swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = objc_msgSend(v0, "view");
      if (!v6)
      {
        __break(1u);
        goto LABEL_25;
      }
      v7 = v6;
      objc_msgSend(v6, "frame");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v51.origin.x = v9;
      v51.origin.y = v11;
      v51.size.width = v13;
      v51.size.height = v15;
      if (CGRectGetWidth(v51) > 0.0)
      {
        v16 = objc_msgSend(v1, "traitCollection");
        v17 = objc_msgSend(v1, "view");
        if (v17)
        {
          v19 = v17;
          type metadata accessor for DOCColumnViewSpecs(0, v18);
          objc_msgSend(v19, "bounds");
          v21 = v20;
          v23 = v22;

          v24 = (id)DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)(v16, v21, v23);
          v50 = v24;
          if ((sub_100382B3C(0) & 1) != 0)
          {
            v50 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v24) + 0x68))();

          }
          v25 = OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs;
          v26 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs];
          if (v26)
          {
            v27 = v50;
            v28 = v26;
            v29 = static NSObject.== infix(_:_:)(v28, v27);

            if ((v29 & 1) != 0)
            {
LABEL_16:
              v45 = (double *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
              if ((v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset + 16] & 1) == 0)
              {
                v47 = *v45;
                v46 = v45[1];
                v48 = objc_msgSend(v1, "collectionView");
                if (v48)
                {
                  v49 = v48;
                  objc_msgSend(v48, "setContentOffset:", v47, v46);

                }
                *v45 = 0.0;
                v45[1] = 0.0;
                *((_BYTE *)v45 + 16) = 1;
              }
              if (objc_msgSend(v1, "_appearState") == 2)
                sub_100382CC0(0);

              v31 = v50;
              goto LABEL_23;
            }
            v30 = *(void **)&v1[v25];
          }
          else
          {
            v30 = 0;
          }
          *(_QWORD *)&v1[v25] = v50;
          v32 = (char *)v50;

          v33 = *(double *)&v32[direct field offset for DOCColumnViewSpecs.columnWidth];
          v34 = v2;
          v35 = objc_msgSend(v1, "view");
          if (v35)
          {
            v36 = v35;
            objc_msgSend(v35, "bounds");
            v38 = v37;
            v40 = v39;
            v42 = v41;
            v44 = v43;

            v52.origin.x = v38;
            v52.origin.y = v40;
            v52.size.width = v42;
            v52.size.height = v44;
            objc_msgSend(v5, "setItemSize:", v33, CGRectGetHeight(v52));

            goto LABEL_16;
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        return;
      }
    }
    v31 = v2;
LABEL_23:

  }
}

void sub_10038057C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __objc2_class *Class;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];
  char v63[24];

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v63, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  sub_100386C00(1, v2);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  swift_bridgeObjectRelease(v2);
  v11 = v10 >> 1;
  v61 = (v10 >> 1) - v8;
  if (v10 >> 1 == v8)
  {
LABEL_49:
    v6 = *v1;
    if (*v1 >> 62)
      goto LABEL_71;
    v43 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v43)
      goto LABEL_51;
LABEL_75:
    swift_unknownObjectRelease(v4);
    swift_bridgeObjectRelease(v6);
    return;
  }
  v58 = v4;
  swift_unknownObjectRetain(v4);
  v4 = 0;
  v59 = v1;
  v60 = v6 + 8 * v8;
  while (v8 + v4 < v11)
  {
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_67;
    v16 = *(char **)(v60 + 8 * v4);
    v17 = *(_QWORD **)&v16[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource];
    v18 = type metadata accessor for DOCItemCollectionContainerDataSource();
    v19 = swift_dynamicCastClass(v17, v18);
    if (!v19)
      goto LABEL_63;
    v6 = v19;
    swift_beginAccess(v1, v62, 32, 0);
    v20 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      v33 = v16;
      swift_unknownObjectRetain(v17);
      v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4 + 1, v20);
      swift_endAccess(v62);
      v22 = *(_QWORD **)(v34 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource);
      swift_unknownObjectRetain(v22);
      swift_unknownObjectRelease(v34);
      if (object_getClass(v22) != (Class)_TtC5Files30DOCItemInfoContainerDataSource || v22 == 0)
        goto LABEL_42;
LABEL_17:
      v26 = v8;
      v27 = v11;
      v28 = v22[6];
      if ((unint64_t)v28 >> 62)
      {
        if (v28 < 0)
          v36 = v22[6];
        else
          v36 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_unknownObjectRetain(v22);
        swift_bridgeObjectRetain(v28);
        v37 = _CocoaArrayWrapper.endIndex.getter(v36);
        swift_bridgeObjectRelease(v28);
        if (v37 == 1)
        {
LABEL_19:
          v30 = v22[6];
          if ((unint64_t)v30 >> 62)
          {
            if (v30 < 0)
              v38 = v22[6];
            else
              v38 = v30 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v22[6]);
            if (_CocoaArrayWrapper.endIndex.getter(v38))
            {
LABEL_21:
              if ((v30 & 0xC000000000000001) != 0)
              {
                v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v30);
                v11 = v27;
              }
              else
              {
                if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_70;
                v11 = v27;
                v32 = *(_QWORD *)(v30 + 32);
                swift_unknownObjectRetain(v32);
              }
              swift_bridgeObjectRelease(v30);
              swift_unknownObjectRelease(v22);
              v8 = v26;
              v1 = v59;
              goto LABEL_45;
            }
          }
          else
          {
            v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v22[6]);
            if (v31)
              goto LABEL_21;
          }
          swift_bridgeObjectRelease(v30);
        }
      }
      else
      {
        v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_unknownObjectRetain(v22);
        if (v29 == 1)
          goto LABEL_19;
      }
      swift_unknownObjectRelease(v22);
      v11 = v27;
      v8 = v26;
      v1 = v59;
      goto LABEL_42;
    }
    if ((v15 & 0x8000000000000000) != 0)
      goto LABEL_68;
    if (v15 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_69;
    v21 = *(_QWORD *)(v20 + 8 * v15 + 32);
    swift_endAccess(v62);
    v22 = *(_QWORD **)(v21 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource);
    Class = (__objc2_class *)object_getClass(v22);
    v24 = v16;
    swift_unknownObjectRetain(v17);
    if (Class == _TtC5Files30DOCItemInfoContainerDataSource && v22 != 0)
    {
      swift_unknownObjectRetain(v22);
      goto LABEL_17;
    }
    swift_unknownObjectRetain(v22);
LABEL_42:
    v39 = swift_dynamicCastClass(v22, v18);
    if (!v39)
    {
      swift_unknownObjectRelease(v22);

      v56 = v17;
LABEL_62:
      swift_unknownObjectRelease(v56);
LABEL_63:
      swift_unknownObjectRelease_n(v58, 2);
      return;
    }
    v40 = objc_msgSend(*(id *)(v39 + 40), "node");
    if (!v40)
    {

      swift_unknownObjectRelease(v17);
      v56 = v22;
      goto LABEL_62;
    }
    v32 = (uint64_t)v40;
LABEL_45:
    v41 = *(_QWORD *)(v6 + 104);
    *(_QWORD *)(v6 + 104) = v32;
    swift_unknownObjectRetain_n(v32, 2);
    swift_unknownObjectRelease(v41);
    v42 = *(void **)(v6 + 112);
    if (v42)
    {
      v12 = *(_QWORD *)(v6 + 104);
      swift_unknownObjectRetain(v12);
      v13 = v42;
      v14 = v12;
      v6 = (uint64_t)v13;
      sub_10009972C(v14);
      swift_unknownObjectRelease_n(v32, 2);

    }
    else
    {
      swift_unknownObjectRelease_n(v32, 2);
    }

    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v22);
    if (v61 == ++v4)
    {
      v4 = v58;
      swift_unknownObjectRelease(v58);
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  if (v6 < 0)
    v57 = v6;
  else
    v57 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v43 = _CocoaArrayWrapper.endIndex.getter(v57);
  if (!v43)
    goto LABEL_75;
LABEL_51:
  v44 = v43 - 1;
  if (__OFSUB__(v43, 1))
  {
    __break(1u);
    goto LABEL_77;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_77:
    v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v6);
    goto LABEL_56;
  }
  if ((v44 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_79;
  }
  if (v44 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_79:
    __break(1u);
    return;
  }
  v45 = (char *)*(id *)(v6 + 8 * v44 + 32);
LABEL_56:
  v46 = v45;
  swift_bridgeObjectRelease(v6);
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource];
  v48 = type metadata accessor for DOCItemCollectionContainerDataSource();
  v49 = swift_dynamicCastClass(v47, v48);
  if (v49)
  {
    v50 = v49;
    v51 = v4;
    v52 = *(_QWORD *)(v49 + 104);
    *(_QWORD *)(v49 + 104) = 0;
    swift_unknownObjectRetain(v47);
    swift_unknownObjectRelease(v52);
    v53 = *(void **)(v50 + 112);
    if (v53)
    {
      v54 = *(_QWORD *)(v50 + 104);
      swift_unknownObjectRetain(v54);
      v55 = v53;
      sub_10009972C(v54);
      swift_unknownObjectRelease(v47);
      swift_unknownObjectRelease(v51);

    }
    else
    {
      swift_unknownObjectRelease(v47);
      swift_unknownObjectRelease(v51);
    }

  }
  else
  {

    swift_unknownObjectRelease(v4);
  }
}

void sub_100380B00()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  char v25;
  double v26;
  id v27;
  void *v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double MaxX;
  id v38;
  void *v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double MinY;
  id v49;
  void *v50;
  double v51;
  double v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  char v57;
  id v58;
  void *v59;
  id v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  v1 = v0;
  v2 = objc_msgSend(v0, "collectionView");
  if (v2)
  {
    v60 = v2;
    if (v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] != 1
      || (objc_msgSend(v2, "contentOffset"), v3 >= 0.0))
    {
      v8 = OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator;
      v9 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
      if (!v9)
        goto LABEL_28;
      objc_msgSend(v9, "setHidden:", 1);
      v10 = *(void **)&v1[v8];
      if (!v10)
        goto LABEL_28;
      v11 = v10;
      objc_msgSend(v11, "removeFromSuperview");
LABEL_27:

LABEL_28:
      return;
    }
    v4 = OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator;
    v5 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
    if (v5)
    {
      v6 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
      v7 = v6;
    }
    else
    {
      v7 = objc_msgSend(objc_allocWithZone((Class)DOCSeparatorView), "init");
      v6 = 0;
      v5 = *(void **)&v0[v4];
    }
    *(_QWORD *)&v0[v4] = v7;
    v11 = v7;
    v12 = v6;

    objc_msgSend(v11, "frame");
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v19 = (void *)objc_opt_self(DOCSeparatorView);
    v20 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v19, "separatorThicknessForTraitCollection:", v20);
    v22 = v21;

    v23 = objc_msgSend(v1, "view");
    if (v23)
    {
      v24 = v23;
      v25 = UIView.doc_isRTL.getter(v23);

      v26 = 0.0;
      if ((v25 & 1) != 0)
      {
        v27 = objc_msgSend(v1, "collectionView");
        if (!v27)
        {
LABEL_33:
          __break(1u);
          return;
        }
        v28 = v27;
        objc_msgSend(v27, "frame");
        v30 = v29;
        v32 = v31;
        v34 = v33;
        v36 = v35;

        v61.origin.x = v30;
        v61.origin.y = v32;
        v61.size.width = v34;
        v61.size.height = v36;
        MaxX = CGRectGetMaxX(v61);
        v62.origin.x = v14;
        v62.origin.y = v16;
        v62.size.width = v22;
        v62.size.height = v18;
        v26 = MaxX - CGRectGetWidth(v62);
      }
      v38 = objc_msgSend(v1, "collectionView");
      if (v38)
      {
        v39 = v38;
        objc_msgSend(v38, "frame");
        v41 = v40;
        v43 = v42;
        v45 = v44;
        v47 = v46;

        v63.origin.x = v41;
        v63.origin.y = v43;
        v63.size.width = v45;
        v63.size.height = v47;
        MinY = CGRectGetMinY(v63);
        v49 = objc_msgSend(v1, "collectionView");
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v49, "frame");
          v52 = v51;

          objc_msgSend(v11, "setFrame:", v26, MinY, v22, v52);
          objc_msgSend(v11, "setHidden:", 0);
          v53 = objc_msgSend(v11, "superview");
          v54 = objc_msgSend(v1, "collectionView");
          v55 = v54;
          if (v53)
          {
            if (v54)
            {
              sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
              v56 = v53;
              v57 = static NSObject.== infix(_:_:)(v56, v55);

              if ((v57 & 1) != 0)
                goto LABEL_27;
LABEL_25:
              v58 = objc_msgSend(v1, "collectionView");
              if (v58)
              {
                v59 = v58;
                objc_msgSend(v58, "addSubview:", v11);

                goto LABEL_27;
              }
              goto LABEL_32;
            }
            v55 = v53;
          }
          else if (!v54)
          {
            goto LABEL_27;
          }

          goto LABEL_25;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
}

void sub_100380EF0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[24];
  _BYTE v32[24];

  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
    goto LABEL_49;
  v2 = v1;
  v3 = objc_msgSend(v1, "visibleCells");

  v4 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v11 = v5;
    else
      v11 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v5);
    if (v6)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v5);
    v12 = (int64_t *)&v30[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v30[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v32, 0, 0);
    v13 = *v12;
    if ((unint64_t)*v12 >> 62)
      goto LABEL_39;
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v13 = *v12;
      swift_bridgeObjectRetain(*v12);
      if (v14 >= 2)
        v13 = sub_1003847E4(1, v13);
      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0)
          v29 = v13;
        else
          v29 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v15 = _CocoaArrayWrapper.endIndex.getter(v29);
        swift_bridgeObjectRelease(v13);
        if (!v15)
        {
LABEL_37:
          swift_bridgeObjectRelease(v13);
          return;
        }
      }
      else
      {
        v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v15)
          goto LABEL_37;
      }
      v16 = 4;
      while (1)
      {
        v12 = (int64_t *)(v16 - 4);
        v17 = (v13 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v13)
            : (char *)*(id *)(v13 + 8 * v16);
        v18 = v17;
        v19 = v16 - 3;
        if (__OFADD__(v12, 1))
          break;
        v20 = *(_QWORD *)&v17[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource];
        v21 = type metadata accessor for DOCItemCollectionContainerDataSource();
        v22 = swift_dynamicCastClass(v20, v21);
        if (!v22)
        {
          swift_bridgeObjectRelease(v13);

          return;
        }
        if (!*(_QWORD *)(v22 + 104)
          || (v23 = (void **)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController],
              swift_beginAccess(&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v31, 0, 0), (v24 = *v23) == 0)|| (v25 = type metadata accessor for DOCItemCollectionViewController(0), !swift_dynamicCastClass(v24, v25)))
        {

          goto LABEL_37;
        }
        swift_unknownObjectRetain(v20);
        v26 = v24;
        v27 = sub_100179980();

        if (!v27)
        {

          swift_unknownObjectRelease(v20);
          goto LABEL_37;
        }
        objc_msgSend(v30, "setNeedsFocusUpdate");

        swift_unknownObjectRelease(v20);
        ++v16;
        if (v19 == v15)
          goto LABEL_37;
      }
      __break(1u);
LABEL_39:
      if (v13 < 0)
        v28 = v13;
      else
        v28 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v13);
    }
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_16;
LABEL_4:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      v10 = type metadata accessor for DOCColumnViewCell();
      if (swift_dynamicCastClass(v9, v10))
        sub_100324D34(0);

    }
    goto LABEL_16;
  }
  __break(1u);
LABEL_49:
  __break(1u);
}

double sub_10038125C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  BOOL v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  char *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  _BOOL8 v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  double v33;
  id v34;
  id v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char v44[24];
  char v45[24];
  char v46[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v1, v46, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_52;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(*v1, 2);
  if (!v3)
  {
LABEL_56:
    swift_bridgeObjectRelease(v2);
    goto LABEL_44;
  }
LABEL_3:
  v4 = v2 & 0xC000000000000001;
  v5 = v2 & 0xFFFFFFFFFFFFFF8;
  v6 = (_BYTE *)v2;
  v2 += 32;
  while (1)
  {
    v7 = __OFSUB__(v3--, 1);
    if (v7)
      goto LABEL_48;
    if (v4)
    {
      v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v6);
    }
    else
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        if (v2 < 0)
          v37 = v2;
        else
          v37 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v2, 2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (!v3)
          goto LABEL_56;
        goto LABEL_3;
      }
      if (v3 >= *(_QWORD *)(v5 + 16))
        goto LABEL_51;
      v8 = (char *)*(id *)(v2 + 8 * v3);
    }
    v43 = v8;
    v9 = &v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v45, 0, 0);
    v10 = *(_QWORD *)v9;
    if (v10)
    {
      v11 = type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass(v10, v11))
        break;
    }

    if (!v3)
      goto LABEL_49;
  }
  swift_bridgeObjectRelease_n(v6, 2);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v38 = *v1;
    else
      v38 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v38);
  }
  else
  {
    v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
  }
  if (!v12)
  {
LABEL_43:

    goto LABEL_44;
  }
  v13 = v2 & 0xC000000000000001;
  v41 = v2 + 32;
  v42 = v2 & 0xFFFFFFFFFFFFFF8;
  v39 = DOCDocumentSourceIdentifierSearch;
  v40 = v2;
  while (2)
  {
    v7 = __OFSUB__(v12--, 1);
    if (!v7)
    {
      if (v13)
      {
        v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v2);
      }
      else
      {
        if ((v12 & 0x8000000000000000) != 0)
          goto LABEL_46;
        if (v12 >= *(_QWORD *)(v42 + 16))
          goto LABEL_47;
        v15 = (char *)*(id *)(v41 + 8 * v12);
      }
      v14 = v15;
      v16 = &v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v44, 0, 0);
      v17 = *(void **)v16;
      if (*(_QWORD *)v16)
      {
        v18 = swift_dynamicCastClass(*(_QWORD *)v16, v11);
        if (v18)
        {
          v6 = (_BYTE *)v18;
          sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
          v19 = v17;
          if ((static NSObject.== infix(_:_:)(v14, v43) & 1) == 0
            || (v20 = *(void **)&v6[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration],
                (objc_msgSend(v20, "isPopoverOrWidget") & 1) != 0)
            || objc_msgSend(v20, "isPickerUI")
            && v6[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] != 1)
          {
            v21 = 0;
            goto LABEL_30;
          }
          v24 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v39);
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
          v27 = v26;
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          if (v25 == v28 && v27 == v29)
          {

            swift_bridgeObjectRelease_n(v27, 2);
            v2 = v40;
          }
          else
          {
            v31 = v29;
            v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v28, v29, 0);

            swift_bridgeObjectRelease(v27);
            *(_QWORD *)&v33 = swift_bridgeObjectRelease(v31).n128_u64[0];
            v2 = v40;
            if ((v32 & 1) == 0)
            {
              v21 = 1;
              goto LABEL_30;
            }
          }
          v34 = objc_msgSend(v6, "traitCollection", v33);
          v35 = objc_msgSend(v34, "horizontalSizeClass");

          v21 = v35 != (id)1;
LABEL_30:
          v22 = *(void **)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
          if (v22)
          {
            v23 = v22;
            objc_msgSend(v23, "setAllowsMultipleSelection:", v21);

          }
          v14 = v19;
        }
      }

      if (!v12)
        goto LABEL_43;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  v2 = (uint64_t)v6;
  swift_bridgeObjectRelease(v6);
LABEL_44:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_100381690()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController];
  }
  else
  {
    v3 = v0;
    v4 = sub_10006922C((uint64_t *)&unk_1006508F8);
    swift_allocObject(v4, 32, 7);
    v5 = v0;
    v2 = NSNotification.SubscriptionsController.init(observee:)(v6);
    v7 = *(_QWORD *)&v3[v1];
    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release(v7);
  }
  swift_retain();
  return v2;
}

id sub_10038177C(void *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t active;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  objc_super v31;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  v6 = type metadata accessor for ScrollToItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext];
  active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 56))(v7, 1, 1, active);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_configuration] = a1;
  v9 = objc_allocWithZone((Class)type metadata accessor for DOCColumnLayout());
  v10 = a1;
  v11 = objc_msgSend(v9, "init");
  objc_msgSend(v11, "setScrollDirection:", 1);
  objc_msgSend(v11, "setMinimumLineSpacing:", 0.0);
  objc_msgSend(v11, "setMinimumInteritemSpacing:", 0.0);
  v31.receiver = v1;
  v31.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v31, "initWithCollectionViewLayout:", v11);
  v13 = sub_100381690();
  if (qword_100640E20 != -1)
    swift_once(&qword_100640E20, sub_100086BA8);
  v14 = qword_100672728;
  v15 = (void *)objc_opt_self(NSOperationQueue);
  v16 = objc_msgSend(v15, "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, void (*)(char *), _QWORD))(*(_QWORD *)v13 + 152))(v14, &v30, v16, sub_100381B5C, 0);
  v18 = v17;
  swift_release(v13);

  swift_bridgeObjectRelease(v18);
  sub_10000CB4C((uint64_t)&v30, &qword_100642730);
  v19 = sub_100381690();
  if (qword_100640E08 != -1)
    swift_once(&qword_100640E08, sub_100086B74);
  v20 = static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews;
  v21 = objc_msgSend(v15, "mainQueue", 0, 0, 0, 0);
  (*(void (**)(uint64_t, __int128 *, id, uint64_t (*)(), _QWORD))(*(_QWORD *)v19 + 152))(v20, &v30, v21, sub_100381DC8, 0);
  v23 = v22;
  swift_release(v19);

  swift_bridgeObjectRelease(v23);
  sub_10000CB4C((uint64_t)&v30, &qword_100642730);
  v24 = sub_100381690();
  if (qword_100640E10 != -1)
    swift_once(&qword_100640E10, sub_100086B40);
  v25 = qword_100672718;
  v26 = objc_msgSend(v15, "mainQueue", 0, 0, 0, 0);
  (*(void (**)(uint64_t, __int128 *, id, uint64_t (*)(), _QWORD))(*(_QWORD *)v24 + 152))(v25, &v30, v26, sub_100381DC8, 0);
  v28 = v27;

  swift_release(v24);
  swift_bridgeObjectRelease(v28);
  sub_10000CB4C((uint64_t)&v30, &qword_100642730);
  return v12;
}

void sub_100381B5C(char *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  char *v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  unint64_t v24;
  _QWORD v25[4];

  v2 = objc_msgSend(a1, "isViewLoaded");
  if ((_DWORD)v2)
  {
    Notification.object.getter(v25, v2);
    if (!v25[3])
    {
      sub_10000CB4C((uint64_t)v25, &qword_100642730);
      return;
    }
    v3 = type metadata accessor for DOCItemCollectionViewController(0);
    if ((swift_dynamicCast(v23, v25, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
    {
      v4 = (void *)v23[0];
      v5 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
      swift_beginAccess(&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v25, 0, 0);
      v6 = *v5;
      v24 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v21 = v6;
        else
          v21 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v6, 2);
        v7 = _CocoaArrayWrapper.endIndex.getter(v21);
        if (v7)
          goto LABEL_6;
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v6, 2);
        if (v7)
        {
LABEL_6:
          if (v7 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v7; ++i)
          {
            if ((v6 & 0xC000000000000001) != 0)
              v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
            else
              v9 = (char *)*(id *)(v6 + 8 * i + 32);
            v10 = v9;
            v11 = &v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
            swift_beginAccess(&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v23, 0, 0);
            v12 = *(void **)v11;
            if (*(_QWORD *)v11 && (v13 = swift_dynamicCastClass(*(_QWORD *)v11, v3)) != 0)
            {
              v14 = v13;
              v15 = v12;

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
              v18 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v17 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v18 >= v17 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
              v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v14);
              specialized Array._endMutation()(v19);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v6);
          v20 = (_QWORD *)v24;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease(v6);
      v20 = _swiftEmptyArrayStorage;
LABEL_25:
      swift_bridgeObjectRelease(v6);
      v22 = sub_1000E0078((uint64_t)v4, (uint64_t)v20);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
      {
        sub_100380EF0();
        sub_10038125C();
      }

    }
  }
}

void sub_100381DCC(char *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  char *v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  unint64_t v24;
  _QWORD v25[4];

  v2 = objc_msgSend(a1, "isViewLoaded");
  if ((_DWORD)v2)
  {
    Notification.object.getter(v25, v2);
    if (!v25[3])
    {
      sub_10000CB4C((uint64_t)v25, &qword_100642730);
      return;
    }
    v3 = type metadata accessor for DOCItemCollectionViewController(0);
    if ((swift_dynamicCast(v23, v25, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
    {
      v4 = (void *)v23[0];
      v5 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
      swift_beginAccess(&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v25, 0, 0);
      v6 = *v5;
      v24 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v6 >> 62)
      {
        if (v6 < 0)
          v21 = v6;
        else
          v21 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v6, 2);
        v7 = _CocoaArrayWrapper.endIndex.getter(v21);
        if (v7)
          goto LABEL_6;
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v6, 2);
        if (v7)
        {
LABEL_6:
          if (v7 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v7; ++i)
          {
            if ((v6 & 0xC000000000000001) != 0)
              v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
            else
              v9 = (char *)*(id *)(v6 + 8 * i + 32);
            v10 = v9;
            v11 = &v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
            swift_beginAccess(&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v23, 0, 0);
            v12 = *(void **)v11;
            if (*(_QWORD *)v11 && (v13 = swift_dynamicCastClass(*(_QWORD *)v11, v3)) != 0)
            {
              v14 = v13;
              v15 = v12;

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
              v18 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v17 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v18 >= v17 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
              v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v14);
              specialized Array._endMutation()(v19);
            }
            else
            {

            }
          }
          swift_bridgeObjectRelease(v6);
          v20 = (_QWORD *)v24;
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease(v6);
      v20 = _swiftEmptyArrayStorage;
LABEL_25:
      swift_bridgeObjectRelease(v6);
      v22 = sub_1000E0078((uint64_t)v4, (uint64_t)v20);
      swift_bridgeObjectRelease(v20);
      if ((v22 & 1) != 0)
        sub_100380EF0();

    }
  }
}

uint64_t sub_100382088(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  objc_super v16;
  uint64_t v17;
  uint64_t v18;

  v16.receiver = v2;
  v16.super_class = (Class)swift_getObjectType(v2, a2);
  v3 = objc_msgSendSuper2(&v16, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v17 = v4;
  v18 = v6;
  v7 = objc_msgSend(v2, "navigationItem");
  v8 = objc_msgSend(v7, "title");

  if (v8)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

  }
  else
  {
    v11 = (void *)0x800000010052C3D0;
    v9 = 0xD00000000000001ALL;
  }
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 34;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8736;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(0xE200000000000000);
  return v17;
}

void sub_1003821CC()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  NSString v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  NSString v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t j;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  objc_super v44;

  v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v44, "viewDidLoad");
  v2 = objc_msgSend(v0, "collectionView");
  if (!v2)
    goto LABEL_32;
  v3 = v2;
  v4 = type metadata accessor for DOCColumnViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v4);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v6);

  objc_msgSend(v3, "setAllowsSelection:", 0);
  objc_msgSend(v3, "setAlwaysBounceHorizontal:", 1);
  objc_msgSend(v3, "setPreservesSuperviewLayoutMargins:", 0);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v3;
  v9 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setContentInsetAdjustmentBehavior:", 2);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_configuration];
  v11 = v8;
  v12 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration(v10);
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v15 = v14;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  objc_msgSend(v11, "setFocusGroupIdentifier:", v12, v13);

  objc_msgSend(v11, "setAllowsFocus:", 0);
  v16 = objc_msgSend(v11, "subviews");
  v17 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v29 = v18;
    else
      v29 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v18);
    if (v19)
    {
LABEL_6:
      v20 = sub_10004F2F0(0, &qword_100650978, DOCSeparatorView_ptr);
      v21 = swift_getObjCClassFromMetadata(v20);
      if (v19 < 1)
      {
        __break(1u);
        goto LABEL_36;
      }
      v22 = v21;
      v43 = v11;
      for (i = 0; i != v19; ++i)
      {
        if ((v18 & 0xC000000000000001) != 0)
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
        else
          v26 = *(id *)(v18 + 8 * i + 32);
        v27 = v26;
        v28 = objc_msgSend(v26, "isKindOfClass:", v22, v43);
        if ((_DWORD)v28)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
          v24 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
          v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v27);
          specialized ContiguousArray._endMutation()(v25);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v18);
      v11 = v43;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_30;
      goto LABEL_22;
    }
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19)
      goto LABEL_6;
  }
  swift_bridgeObjectRelease(v18);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_30;
LABEL_22:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_30:
    swift_retain();
    v30 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (!v30)
      goto LABEL_31;
    goto LABEL_24;
  }
  v30 = _swiftEmptyArrayStorage[2];
  v31 = swift_retain();
  if (v30)
  {
LABEL_24:
    if (v30 >= 1)
    {
      for (j = 0; j != v30; ++j)
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
          v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, _swiftEmptyArrayStorage);
        else
          v33 = (id)_swiftEmptyArrayStorage[j + 4];
        v34 = v33;
        objc_msgSend(v33, "removeFromSuperview");

      }
      goto LABEL_31;
    }
LABEL_36:
    __break(1u);
    return;
  }
LABEL_31:
  swift_release_n(_swiftEmptyArrayStorage, 2, v31);
  v36 = type metadata accessor for DOCColumnViewControllerCollectionView();
  v37 = swift_dynamicCastClassUnconditional(v11, v36, 0, 0, 0);
  v38 = swift_allocObject(&unk_1005E33A0, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16);
  v39 = swift_allocObject(&unk_1005E33C8, 32, 7);
  *(_QWORD *)(v39 + 16) = sub_100387E1C;
  *(_QWORD *)(v39 + 24) = v38;
  v40 = objc_allocWithZone((Class)sub_10006922C(&qword_100650980));
  v41 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v37, sub_1000626D8, v39);
  v42 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = v41;

LABEL_32:
  if (v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] == 1)
  {
    sub_10037EEC0();
    sub_10037FF70();
  }
}

void sub_1003826AC(char a1)
{
  char *v1;
  double v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14[24];
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v15, "viewWillAppear:", a1 & 1);
  if (v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] == 1)
  {
    v4 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v14, 0, 0);
    v5 = *(_QWORD *)v4;
    swift_bridgeObjectRetain(v5);
    sub_10037E0D8(v6);
    *(_QWORD *)&v3 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  v7 = objc_msgSend(v1, "collectionView", v3);
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "contentOffset");
    v10 = v9;
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v13 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(_QWORD *)v13 = v10;
  *((_QWORD *)v13 + 1) = v12;
  v13[16] = v8 == 0;
  sub_10037FF70();
}

double sub_1003827EC(char a1)
{
  char *v1;
  id v3;
  void *v4;
  NSString v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v12, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_configuration]);
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v8 = v7;
      v5 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
    objc_msgSend(v4, "setFocusGroupIdentifier:", v5, v6);

  }
  v9 = objc_msgSend(v1, "collectionView");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setDelegate:", v1);

  }
  sub_10038057C();
  sub_100380EF0();
  return sub_10038125C();
}

void sub_10038298C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "preparedCells");
    if (!v3)
    {
LABEL_18:
      __break(1u);
      return;
    }
    v4 = v3;
    v5 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v12 = v6;
      else
        v12 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v12);
      swift_bridgeObjectRelease(v6);
      if (v7)
        goto LABEL_5;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_5:
        if (v7 >= 1)
        {
          v8 = 0;
          do
          {
            if ((v6 & 0xC000000000000001) != 0)
              v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
            else
              v9 = *(id *)(v6 + 8 * v8 + 32);
            v10 = v9;
            ++v8;
            v11 = type metadata accessor for DOCColumnViewCell();
            swift_dynamicCastClass(v10, v11);

          }
          while (v7 != v8);
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_18;
      }
    }
LABEL_16:

    swift_bridgeObjectRelease(v6);
  }
}

uint64_t sub_100382B3C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char *v6;
  char *v7;
  uint64_t v8;
  _QWORD *Strong;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14[24];

  if (a1)
  {
    v3 = a1;
    if (!(a1 >> 62))
      goto LABEL_3;
  }
  else
  {
    v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v14, 0, 0);
    v3 = *v11;
    swift_bridgeObjectRetain(v3);
    if (!((unint64_t)v3 >> 62))
    {
LABEL_3:
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(a1);
      if (v4 == 1)
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease(v3);
      goto LABEL_17;
    }
  }
  if (v3 < 0)
    v12 = v3;
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v3);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v3);
  if (v13 != 1)
    goto LABEL_16;
  swift_bridgeObjectRetain(v3);
  v10 = _CocoaArrayWrapper.endIndex.getter(v12);
  result = swift_bridgeObjectRelease(v3);
  if (!v10)
  {
    swift_bridgeObjectRelease(v3);
    return v10 & 1;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease(v3);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_visibleViewController], v8);

    if (Strong)
    {
      LOBYTE(v10) = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x218))();

      return v10 & 1;
    }
LABEL_17:
    LOBYTE(v10) = 0;
    return v10 & 1;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = (char *)*(id *)(v3 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100382CC0(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  char *v46;
  void (*v47)(_QWORD, __n128);
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t active;
  int v72;
  id v73;
  _QWORD aBlock[5];
  uint64_t v75;
  char v76[32];

  v72 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  v70 = v3;
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  __chkstk_darwin(v5);
  v65 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  active = type metadata accessor for ActiveScrollItemContext(0);
  __chkstk_darwin(active);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_1006508D8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v62 - v13;
  v15 = type metadata accessor for ScrollToItem(0);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
  v17 = __chkstk_darwin(v15);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v62 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v62 - v21;
  v73 = v1;
  v23 = (uint64_t)v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem;
  v25 = v24;
  swift_beginAccess(v23, v76, 0, 0);
  sub_1000271D4(v23, (uint64_t)v14, &qword_1006508D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v15) == 1)
    return sub_10000CB4C((uint64_t)v14, &qword_1006508D8);
  v63 = v20;
  v64 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001D0788((uint64_t)v14, (uint64_t)v22, type metadata accessor for ScrollToItem);
  v62 = v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v12, 1, 1, v15);
  swift_beginAccess(v23, aBlock, 33, 0);
  sub_10008BB40((uint64_t)v12, v23, &qword_1006508D8);
  swift_endAccess(aBlock);
  v27 = v73;
  v28 = objc_msgSend(v73, "collectionView");
  v29 = (uint64_t)v22;
  if (!v28)
    goto LABEL_9;
  v30 = v28;
  v31 = type metadata accessor for DOCColumnViewControllerCollectionView();
  v32 = swift_dynamicCastClass(v30, v31);
  if (!v32)
  {

LABEL_9:
    v46 = &v22[*(int *)(v15 + 24)];
    v47 = *(void (**)(_QWORD, __n128))v46;
    if (*(_QWORD *)v46)
    {
      v48 = *((_QWORD *)v46 + 1);
      v49 = swift_retain();
      v47(0, v49);
      sub_100087534((uint64_t)v47, v48);
    }
    v45 = (uint64_t)v22;
    return sub_10007C720(v45, type metadata accessor for ScrollToItem);
  }
  v33 = (void *)v32;
  v34 = (uint64_t)v22;
  v35 = (uint64_t)v8;
  sub_10007C6DC(v34, (uint64_t)v8, type metadata accessor for ScrollToItem);
  *(_QWORD *)&v8[*(int *)(active + 20)] = v33;
  v36 = v30;
  sub_100383250((uint64_t)v8);
  v37 = (uint64_t)v63;
  sub_10007C6DC(v29, (uint64_t)v63, type metadata accessor for ScrollToItem);
  v38 = v64;
  sub_10007C6DC(v37, v64, type metadata accessor for ScrollToItem);
  v39 = *(unsigned __int8 *)(v62 + 80);
  v40 = (v39 + 24) & ~v39;
  active = v29;
  v41 = (v16 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_1005E30A8, v41 + 8, v39 | 7);
  *(_QWORD *)(v42 + 16) = v33;
  sub_1001D0788(v37, v42 + v40, type metadata accessor for ScrollToItem);
  *(_QWORD *)(v42 + v41) = v27;
  v43 = v36;
  v44 = v27;
  if ((v72 & 1) != 0)
  {
    sub_1003833B4(v33, v38);

    swift_release(v42);
    sub_10007C720(v38, type metadata accessor for ScrollToItem);
  }
  else
  {
    sub_10007C720(v38, type metadata accessor for ScrollToItem);
    v50 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v51 = (void *)static OS_dispatch_queue.main.getter(v50);
    aBlock[4] = sub_100386E74;
    v75 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E30C0;
    v52 = _Block_copy(aBlock);
    v53 = v75;
    swift_retain();
    v54 = swift_release(v53);
    v55 = v43;
    v56 = v65;
    static DispatchQoS.unspecified.getter(v54);
    aBlock[0] = _swiftEmptyArrayStorage;
    v57 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v58 = sub_10006922C((uint64_t *)&unk_100647540);
    v59 = sub_1000791AC();
    v61 = v68;
    v60 = v69;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v58, v59, v69, v57);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v61, v52);
    _Block_release(v52);

    swift_release(v42);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v60);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v56, v67);
  }
  sub_10007C720(v35, type metadata accessor for ActiveScrollItemContext);
  v45 = active;
  return sub_10007C720(v45, type metadata accessor for ScrollToItem);
}

void sub_100383250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  void *object;
  unint64_t v9;
  uint64_t active;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_1006508E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100383788(0);
  v13 = 0;
  v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v14);
  v13 = 0xD000000000000014;
  v14 = 0x800000010052C2C0;
  v7._countAndFlagsBits = sub_10037D400();
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9 = v14;
  sub_1003835C0(v13, v14);
  swift_bridgeObjectRelease(v9);
  sub_10007C6DC(a1, (uint64_t)v6, type metadata accessor for ActiveScrollItemContext);
  active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 56))(v6, 0, 1, active);
  v11 = v2 + OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext;
  swift_beginAccess(v11, &v13, 33, 0);
  sub_10008BB40((uint64_t)v6, v11, (uint64_t *)&unk_1006508E0);
  swift_endAccess(&v13);
  sub_1004A7B3C();
}

uint64_t sub_1003833B4(void *a1, uint64_t a2)
{
  Class isa;
  id v5;
  double MaxX;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  double v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  CGRect v26;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", isa);

  if (v5)
  {
    objc_msgSend(v5, "frame");
    MaxX = CGRectGetMaxX(v26);
    objc_msgSend(a1, "visibleSize");
    v8 = MaxX - v7;
    if (v8 < 0.0)
      v9 = 0.0;
    else
      v9 = v8;
    objc_msgSend(a1, "contentOffset");
    v11 = v10;
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    v12._object = (void *)0x800000010052C280;
    v12._countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v12);
    v22 = v9;
    v23 = v11;
    type metadata accessor for CGPoint(0);
    _print_unlocked<A, B>(_:_:)(&v22, &v24, v13, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v14._countAndFlagsBits = 0x6574616D696E6120;
    v14._object = (void *)0xEA00000000003D64;
    String.append(_:)(v14);
    v15 = type metadata accessor for ScrollToItem(0);
    v16 = *(unsigned __int8 *)(a2 + *(int *)(v15 + 20));
    if (*(_BYTE *)(a2 + *(int *)(v15 + 20)))
      v17 = 1702195828;
    else
      v17 = 0x65736C6166;
    if ((_DWORD)v16)
      v18 = 0xE400000000000000;
    else
      v18 = 0xE500000000000000;
    v19 = v18;
    String.append(_:)(*(Swift::String *)&v17);
    swift_bridgeObjectRelease(v18);
    v20 = v25;
    sub_1003835C0(v24, v25);
    swift_bridgeObjectRelease(v20);
    objc_msgSend(a1, "setContentOffset:animated:", v16, v9, v11, *(_QWORD *)&v22, *(_QWORD *)&v23);

  }
  if (*(_BYTE *)(a2 + *(int *)(type metadata accessor for ScrollToItem(0) + 20)) != 1)
    return sub_100383788(1);
  result = (uint64_t)objc_msgSend(a1, "isScrollAnimating");
  if ((result & 1) == 0)
    return sub_100383788(1);
  return result;
}

uint64_t sub_1003835C0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v18 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v20 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v19 = sub_1000544FC(v18, a2, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[ScrollToItem] %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100383788(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t active;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  Swift::String v15;
  void *object;
  unint64_t v17;
  __n128 v18;
  id v19;
  char *v20;
  void (*v21)(_QWORD, __n128);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  _BYTE v26[24];

  v3 = sub_10006922C((uint64_t *)&unk_1006508E0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v24 - v7;
  active = type metadata accessor for ActiveScrollItemContext(0);
  v10 = *(_QWORD *)(active - 8);
  __chkstk_darwin(active);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext, v26, 0, 0);
  sub_1000271D4(v13, (uint64_t)v8, (uint64_t *)&unk_1006508E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, active) == 1)
    return sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_1006508E0);
  sub_1001D0788((uint64_t)v8, (uint64_t)v12, type metadata accessor for ActiveScrollItemContext);
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v25);
  v24 = 0xD000000000000013;
  v25 = 0x800000010052C2A0;
  v15._countAndFlagsBits = sub_10037D400();
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17 = v25;
  sub_1003835C0(v24, v25);
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v6, 1, 1, active, v18);
  swift_beginAccess(v13, &v24, 33, 0);
  sub_10008BB40((uint64_t)v6, v13, (uint64_t *)&unk_1006508E0);
  swift_endAccess(&v24);
  v19 = *(id *)&v12[*(int *)(active + 20)];
  sub_1004A7BD8();

  v20 = &v12[*(int *)(type metadata accessor for ScrollToItem(0) + 24)];
  v21 = *(void (**)(_QWORD, __n128))v20;
  if (*(_QWORD *)v20)
  {
    v22 = *((_QWORD *)v20 + 1);
    v23 = swift_retain();
    v21(a1 & 1, v23);
    sub_100087534((uint64_t)v21, v22);
  }
  return sub_10007C720((uint64_t)v12, type metadata accessor for ActiveScrollItemContext);
}

void sub_100383A7C(void *a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  __n128 v19;
  id v20;
  void *v21;
  Class isa;
  id v23;
  id v24;
  void *v25;
  unsigned __int8 v26;
  char v28[24];

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v28, 0, 0);
  v14 = *v13;
  swift_bridgeObjectRetain(*v13);
  sub_10017449C((uint64_t)a1, v14);
  v16 = v15;
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v14);
  if ((v18 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v19);
    goto LABEL_9;
  }
  IndexPath.init(item:section:)(v16, 0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v20 = objc_msgSend(v3, "collectionView");
  if (v20)
  {
    v21 = v20;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v21, "layoutAttributesForItemAtIndexPath:", isa);

    if (!v23)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    v24 = objc_msgSend(v3, "collectionView");
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v23, "frame");
      v26 = objc_msgSend(v25, "_isRectFullyVisible:");

      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

        return;
      }
      sub_10037CBF8(a1, a2 & 1, 0, 0);

      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100383CF4(uint64_t a1, char a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  id v23;
  uint64_t v24;
  id v25;
  _BYTE v26[24];
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = type metadata accessor for UITraitOverrides(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v27.receiver = v2;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "viewDidMoveToWindow:shouldAppearOrDisappear:", a1, a2 & 1, v7);
  if (a1)
  {
    v10 = objc_msgSend(v2, "collectionView");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "preparedCells");
      if (!v12)
        goto LABEL_22;
      v13 = v12;
      v14 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      v25 = v11;
      if ((unint64_t)v15 >> 62)
      {
        if (v15 < 0)
          v24 = v15;
        else
          v24 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v15);
        v16 = _CocoaArrayWrapper.endIndex.getter(v24);
        swift_bridgeObjectRelease(v15);
        if (v16)
          goto LABEL_6;
      }
      else
      {
        v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v16)
        {
LABEL_6:
          if (v16 >= 1)
          {
            for (i = 0; i != v16; ++i)
            {
              if ((v15 & 0xC000000000000001) != 0)
                v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
              else
                v18 = *(id *)(v15 + 8 * i + 32);
              v19 = v18;
              v20 = type metadata accessor for DOCColumnViewCell();
              v21 = swift_dynamicCastClass(v19, v20);
              if (v21)
              {
                v22 = (id *)(v21 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
                swift_beginAccess(v21 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v26, 0, 0);
                if (*v22)
                {
                  v23 = *v22;
                  UIViewController.traitOverrides.getter(v23);
                  UIMutableTraits.horizontalSizeClass.setter(1, v6, &protocol witness table for UITraitOverrides);
                  UIViewController.traitOverrides.setter(v9);

                  v19 = v23;
                }
              }

            }
            goto LABEL_19;
          }
          __break(1u);
LABEL_22:
          __break(1u);
          return;
        }
      }
LABEL_19:

      swift_bridgeObjectRelease(v15);
    }
  }
}

void sub_100383F94(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  uint64_t v22;
  id v23;
  _BYTE v24[24];
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = type metadata accessor for UITraitOverrides(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v25.receiver = v1;
  v25.super_class = ObjectType;
  objc_msgSendSuper2(&v25, "traitCollectionDidChange:", a1, v5);
  v8 = objc_msgSend(v1, "collectionView");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "preparedCells");
    if (!v10)
      goto LABEL_21;
    v11 = v10;
    v12 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    v23 = v9;
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v22 = v13;
      else
        v22 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v22);
      swift_bridgeObjectRelease(v13);
      if (v14)
        goto LABEL_5;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_5:
        if (v14 >= 1)
        {
          for (i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
            else
              v16 = *(id *)(v13 + 8 * i + 32);
            v17 = v16;
            v18 = type metadata accessor for DOCColumnViewCell();
            v19 = swift_dynamicCastClass(v17, v18);
            if (v19)
            {
              v20 = (id *)(v19 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
              swift_beginAccess(v19 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v24, 0, 0);
              if (*v20)
              {
                v21 = *v20;
                UIViewController.traitOverrides.getter(v21);
                UIMutableTraits.horizontalSizeClass.setter(1, v4, &protocol witness table for UITraitOverrides);
                UIViewController.traitOverrides.setter(v7);

                v17 = v21;
              }
            }

          }
          goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
LABEL_18:

    swift_bridgeObjectRelease(v13);
  }
}

void sub_100384280(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  void **v17;
  void *v18;
  unsigned __int8 *v19;
  id v20;
  char v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id *v27;
  id v28;
  char *v29;
  id *v30;
  unsigned __int8 *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  _BYTE v44[24];
  char v45[24];
  _QWORD aBlock[5];
  uint64_t v47;

  v2 = v1;
  v4 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v4);
  v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = IndexPath.item.getter(v7);
  v9 = &v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], aBlock, 32, 0);
  v10 = *(_QWORD *)v9;
  if ((*(_QWORD *)v9 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v10);
    goto LABEL_5;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v8 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = *(id *)(v10 + 8 * v8 + 32);
LABEL_5:
  v12 = v11;
  swift_endAccess(aBlock);
  v13 = objc_msgSend(v12, "parentViewController");
  if (v13)
  {
    v14 = v13;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v15 = v2;
    v16 = v14;
    LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

    if ((v14 & 1) != 0)
    {
      v17 = (void **)&a1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
      swift_beginAccess(&a1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController], v44, 0, 0);
      v18 = *v17;
      if (*v17)
      {
        type metadata accessor for DOCBrowserContainerController();
        v19 = v12;
        v20 = v18;
        v21 = static NSObject.== infix(_:_:)(v20, v19);

        if ((v21 & 1) != 0)
        {
          v22 = v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding];
          v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 0;
          if (v22 == 1)
            sub_1002C5128();
          goto LABEL_17;
        }
      }
    }
  }
  objc_msgSend(v12, "doc_removeFromParentWithRemoveSubviewBlock:", 0);
  v23 = swift_allocObject(&unk_1005E3350, 32, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = v12;
  aBlock[4] = sub_100387DF0;
  v47 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005E3368;
  v24 = _Block_copy(aBlock);
  v25 = v47;
  v19 = v12;
  v26 = a1;
  objc_msgSend(v2, "doc_addChildViewController:addSubviewBlock:", v19, v24, swift_release(v25).n128_f64[0]);
  _Block_release(v24);
  v27 = (id *)&v26[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess(v27, aBlock, 0, 0);
  if (!*v27)
    goto LABEL_17;
  v28 = *v27;
  UIViewController.traitOverrides.getter();
  UIMutableTraits.horizontalSizeClass.setter(1, v4, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v6);

  v29 = (char *)*v27;
  if (!*v27)
    goto LABEL_17;
  v30 = (id *)&v29[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v29[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v45, 0, 0);
  if (!*v30)
    goto LABEL_17;
  v31 = (unsigned __int8 *)*v30;
  v32 = objc_msgSend(v31, "view");
  if (!v32)
    goto LABEL_21;
  v33 = v32;
  v34 = objc_msgSend(v2, "view");
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v34, "layoutMargins");
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;

    objc_msgSend(v33, "setLayoutMargins:", v37, v39, v41, v43);
    v19 = v31;
LABEL_17:

    return;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_1003847E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  if (a1 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v2 = a2;
  v3 = a1;
  if (a1)
  {
    v41 = _swiftEmptyArrayStorage;
    v42 = _swiftEmptyArrayStorage;
    if (!(a2 >> 62))
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_5:
        if ((v2 & 0xC000000000000001) != 0)
        {
          v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
          v6 = v5;
          v7 = 0;
          v8 = 1;
          while (1)
          {
            v12 = (uint64_t)v41;
            v13 = v41[2];
            if ((uint64_t)v13 < v3)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
              v9 = v41[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
              v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
              specialized ContiguousArray._endMutation()(v10);
            }
            else
            {
              if (v7 >= v13)
                goto LABEL_36;
              v14 = (id)v41[v7 + 4];
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
              v15 = v42[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
              v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
              specialized ContiguousArray._endMutation()(v16);
              if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
              {
                v12 = sub_100467134((uint64_t)v41);
                v41 = (_QWORD *)v12;
              }
              if (v7 >= *(_QWORD *)(v12 + 16))
                goto LABEL_37;
              v17 = v12 + 8 * v7;

              *(_QWORD *)(v17 + 32) = v6;
              specialized ContiguousArray._endMutation()(v18);
              if ((uint64_t)++v7 >= v3)
              {
                if (v4 == v8)
                  goto LABEL_45;
                v7 = 0;
                goto LABEL_9;
              }
            }
            if (v4 == v8)
              goto LABEL_45;
LABEL_9:
            v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
            v6 = v5;
            if (__OFADD__(v8++, 1))
            {
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
          }
        }
        v20 = v2 & 0xFFFFFFFFFFFFFF8;
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_35;
        v21 = 0;
        v22 = 0;
        v23 = v4 - 1;
        v40 = v2;
        while (1)
        {
          v27 = *(void **)(v2 + 8 * v21 + 32);
          v28 = (uint64_t)v41;
          v29 = v41[2];
          if ((uint64_t)v29 < v3)
            break;
          if (v22 >= v29)
            goto LABEL_38;
          v2 = v23;
          v30 = (void *)v41[v22 + 4];
          v31 = v27;
          v32 = v30;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
          v33 = v42[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
          v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v32);
          specialized ContiguousArray._endMutation()(v34);
          if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
          {
            v28 = sub_100467134((uint64_t)v41);
            v41 = (_QWORD *)v28;
          }
          if (v22 >= *(_QWORD *)(v28 + 16))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v35 = v28 + 8 * v22;

          *(_QWORD *)(v35 + 32) = v31;
          specialized ContiguousArray._endMutation()(v36);
          ++v22;
          v23 = v2;
          v2 = v40;
          if ((uint64_t)v22 < v3)
            goto LABEL_24;
          if (v23 == v21)
            goto LABEL_45;
          v22 = 0;
LABEL_25:
          if ((unint64_t)++v21 >= *(_QWORD *)(v20 + 16))
            goto LABEL_35;
        }
        v24 = v27;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = v41[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
LABEL_24:
        if (v23 == v21)
          goto LABEL_45;
        goto LABEL_25;
      }
      goto LABEL_45;
    }
LABEL_41:
    if (v2 < 0)
      v37 = v2;
    else
      v37 = v2 & 0xFFFFFFFFFFFFFF8;
    v4 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v4)
      goto LABEL_5;
LABEL_45:
    swift_bridgeObjectRelease(v2);
    v19 = v42;
    swift_release(v41);
    return (uint64_t)v19;
  }
  if ((a2 & 0x8000000000000000) != 0 || (a2 & 0x4000000000000000) != 0)
  {
    v39 = sub_10028F010(a2);
    swift_bridgeObjectRelease(v2);
    return (uint64_t)v39;
  }
  return a2 & 0xFFFFFFFFFFFFFF8;
}

uint64_t sub_100384BCC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  objc_super v26;
  _BYTE v27[24];

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  v3 = swift_beginAccess(&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v27, 0, 0).n128_u64[0];
  v4 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v4 < 0)
      v15 = *v2;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    v3 = swift_bridgeObjectRelease(v4).n128_u64[0];
    if (v16 >= 1)
      goto LABEL_3;
LABEL_23:
    v26.receiver = v0;
    v26.super_class = ObjectType;
    v17 = objc_msgSendSuper2(&v26, "preferredFocusEnvironments", *(double *)&v3);
    v18 = sub_10006922C((uint64_t *)&unk_100648EE0);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    return v12;
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_23;
LABEL_3:
  v5 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v5 < 0)
      v19 = *v2;
    else
      v19 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = *v2;
  v8 = (unint64_t)v7 >> 62;
  if (v6 < 2)
  {
LABEL_13:
    if (!v8)
    {
      v11 = swift_bridgeObjectRetain_n(v7, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
      swift_bridgeObjectRelease(v7);
      return v7;
    }
LABEL_35:
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v22 = sub_10006922C((uint64_t *)&unk_100648EE0);
    v12 = _bridgeCocoaArray<A>(_:)(v21, v22);
    swift_bridgeObjectRelease(v7);
    return v12;
  }
  if (!v8)
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (!__OFSUB__(0, v9))
      goto LABEL_8;
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v7 < 0)
    v20 = v7;
  else
    v20 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (__OFSUB__(0, v9))
    goto LABEL_34;
LABEL_8:
  if (!v9)
  {
    result = 0;
    goto LABEL_16;
  }
  result = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = result | v9;
    if (((result | v9) & 0x8000000000000000) == 0)
    {
      if (v9 < result)
      {
        __break(1u);
        goto LABEL_13;
      }
LABEL_16:
      sub_10028FF38(result, 0, v7);
      v12 = v13;
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRetain(v12);
      if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
      {
        v23 = sub_10006922C((uint64_t *)&unk_100648EE0);
        v24 = _bridgeCocoaArray<A>(_:)(v12, v23);
        swift_release_n(v12, 2, v25);
        return v24;
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v14);
        swift_release(v12);
      }
      return v12;
    }
  }
  __break(1u);
  return result;
}

void sub_100384F08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD aBlock[6];
  char v12[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v12, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v3)
    goto LABEL_15;
LABEL_3:
  v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = (char *)*(id *)(v2 + 8 * v4 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_8:
  v6 = v5;
  swift_bridgeObjectRelease(v2);
  Strong = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting]);
  if (Strong)
  {
    v8 = (void *)Strong;
    aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016C02C;
    aBlock[3] = &unk_1005E3318;
    v9 = _Block_copy(aBlock);
    objc_msgSend(v8, "beginLoadingAdditionalParents:", v9);
    _Block_release(v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {

  }
}

void sub_100385280(uint64_t a1, uint64_t a2, void *a3)
{
  void **v4;
  void *v5;
  id v6;
  _BYTE v7[24];

  v4 = (void **)(a2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v7, 1, 0);
  v5 = *v4;
  *v4 = a3;
  v6 = a3;
  sub_100324838(v5);

}

void sub_1003853AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSURL *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;
  _BYTE v23[24];

  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v6, v23, 0, 0);
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    if (v7 < 0)
      v17 = *v6;
    else
      v17 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v18 = sub_10006922C(&qword_100650908);
    v9 = _bridgeCocoaArray<A>(_:)(v17, v18);
    swift_bridgeObjectRelease(v7);
    v7 = v9;
  }
  else
  {
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    swift_bridgeObjectRelease(v7);
    v9 = v7;
  }
  v10 = type metadata accessor for DOCTransitionableProxy();
  v11 = (_QWORD *)swift_allocObject(v10, 24, 7);
  v11[2] = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v19 = v7;
    else
      v19 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v7);
    if (!v20)
      goto LABEL_5;
  }
  else
  {
    v12 = (NSURL *)(v9 & 0xFFFFFFFFFFFFF8);
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
      sub_10012B03C(0xD00000000000003BLL, 0x800000010052C2E0);
  }
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  aBlock[4] = a2;
  v22 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018CC0;
  aBlock[3] = &unk_1005E32F0;
  v15 = _Block_copy(aBlock);
  v16 = v22;
  swift_retain();
  objc_msgSend(v11, "getTransitionControllerForURL:completionBlock:", v14, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  swift_release(v11);

}

double sub_100385784(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;
  _BYTE v24[24];

  v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v9, v24, 0, 0);
  v10 = *v9;
  if ((unint64_t)*v9 >> 62)
  {
    if (v10 < 0)
      v18 = *v9;
    else
      v18 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v19 = sub_10006922C(&qword_100650908);
    v12 = _bridgeCocoaArray<A>(_:)(v18, v19);
    swift_bridgeObjectRelease(v10);
    v10 = v12;
  }
  else
  {
    v11 = swift_bridgeObjectRetain_n(v10, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
    swift_bridgeObjectRelease(v10);
    v12 = v10;
  }
  v13 = type metadata accessor for DOCTransitionableProxy();
  v14 = (_QWORD *)swift_allocObject(v13, 24, 7);
  v14[2] = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v20 = v10;
    else
      v20 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v10);
    if (!v21)
      goto LABEL_5;
  }
  else if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_10012B03C(0xD00000000000003BLL, 0x800000010052C2E0);
  }
  aBlock[4] = a3;
  v23 = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005E3200;
  v15 = _Block_copy(aBlock);
  v16 = v23;
  swift_retain();
  objc_msgSend(v14, "getViewFor:waitForNewThumbnail::", a1, a2 & 1, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

double sub_1003859E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v6;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;
  _BYTE v28[24];

  v13 = (uint64_t *)(v6 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v13, v28, 0, 0);
  v14 = *v13;
  if ((unint64_t)*v13 >> 62)
  {
    if (v14 < 0)
      v22 = *v13;
    else
      v22 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v23 = sub_10006922C(&qword_100650908);
    v16 = _bridgeCocoaArray<A>(_:)(v22, v23);
    swift_bridgeObjectRelease(v14);
    v14 = v16;
  }
  else
  {
    v15 = swift_bridgeObjectRetain_n(v14, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v15);
    swift_bridgeObjectRelease(v14);
    v16 = v14;
  }
  v17 = type metadata accessor for DOCTransitionableProxy();
  v18 = (_QWORD *)swift_allocObject(v17, 24, 7);
  v18[2] = v14;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v24 = v14;
    else
      v24 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v14);
    if (!v25)
      goto LABEL_5;
  }
  else if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_10012B03C(0xD00000000000003BLL, 0x800000010052C2E0);
  }
  aBlock[4] = a2;
  v27 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = a4;
  aBlock[3] = a5;
  v19 = _Block_copy(aBlock);
  v20 = v27;
  swift_retain();
  objc_msgSend(v18, *a6, a1, v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

void sub_100385C3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  Class isa;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;
  _BYTE v23[24];

  v8 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v8, v23, 0, 0);
  v9 = *v8;
  if ((unint64_t)*v8 >> 62)
  {
    if (v9 < 0)
      v17 = *v8;
    else
      v17 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v18 = sub_10006922C(&qword_100650908);
    v11 = _bridgeCocoaArray<A>(_:)(v17, v18);
    swift_bridgeObjectRelease(v9);
    v9 = v11;
  }
  else
  {
    v10 = swift_bridgeObjectRetain_n(v9, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    swift_bridgeObjectRelease(v9);
    v11 = v9;
  }
  v12 = type metadata accessor for DOCTransitionableProxy();
  v13 = (_QWORD *)swift_allocObject(v12, 24, 7);
  v13[2] = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v19 = v9;
    else
      v19 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v9);
    if (!v20)
      goto LABEL_5;
  }
  else if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_10012B03C(0xD00000000000003BLL, 0x800000010052C2E0);
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  aBlock[4] = a3;
  v22 = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10016C02C;
  aBlock[3] = &unk_1005E3160;
  v15 = _Block_copy(aBlock);
  v16 = v22;
  swift_retain();
  objc_msgSend(v13, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, a2 & 1, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  swift_release(v13);

}

_QWORD *sub_100385EE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for ScrollToItem(0);
    *((_BYTE *)a1 + *(int *)(v8 + 20)) = *((_BYTE *)a2 + *(int *)(v8 + 20));
    v9 = *(int *)(v8 + 24);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    if (*v11)
    {
      v12 = v11[1];
      *v10 = *v11;
      v10[1] = v12;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    v14 = *(int *)(a3 + 20);
    v15 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)a1 + v14) = v15;
    v16 = v15;
  }
  return a1;
}

void sub_100385FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for ScrollToItem(0) + 24));
  if (*v5)
    swift_release(v5[1]);

}

uint64_t sub_100386018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for ScrollToItem(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  if (*v10)
  {
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = v13;
  return a1;
}

uint64_t sub_1003860B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for ScrollToItem(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a1 + v8);
  v12 = *(_QWORD *)(a2 + v8);
  if (!v11)
  {
    if (v12)
    {
      v15 = *(_QWORD *)(v10 + 8);
      *v9 = v12;
      v9[1] = v15;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (!v12)
  {
    swift_release(v9[1]);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v10 + 8);
  v14 = v9[1];
  *v9 = v12;
  v9[1] = v13;
  swift_retain();
  swift_release(v14);
LABEL_8:
  v16 = *(int *)(a3 + 20);
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  return a1;
}

uint64_t sub_100386198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for ScrollToItem(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = *v10;
  if (*v10)
  {
    v12 = v10[1];
    *v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100386230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for ScrollToItem(0);
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = *(_BYTE *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(v7 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a1 + v8);
  v12 = *(_QWORD *)(a2 + v8);
  if (!v11)
  {
    if (v12)
    {
      v15 = *(_QWORD *)(v10 + 8);
      *v9 = v12;
      v9[1] = v15;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (!v12)
  {
    swift_release(v9[1]);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v10 + 8);
  v14 = v9[1];
  *v9 = v12;
  v9[1] = v13;
  swift_release(v14);
LABEL_8:
  v16 = *(int *)(a3 + 20);
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  return a1;
}

uint64_t sub_100386300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038630C);
}

uint64_t sub_10038630C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ScrollToItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100386388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100386394);
}

uint64_t sub_100386394(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ScrollToItem(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

_QWORD *sub_10038640C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    if (*v10)
    {
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
      swift_retain(v11);
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
  }
  return a1;
}

uint64_t sub_1003864BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;

  v4 = type metadata accessor for IndexPath(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  if (*v6)
    return swift_release(v6[1]);
  return result;
}

uint64_t sub_100386518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*v9)
  {
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_10038659C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *(_QWORD *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      v14 = *(_QWORD *)(v9 + 8);
      *v8 = v11;
      v8[1] = v14;
      swift_retain(v14);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release(v8[1]);
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(v9 + 8);
  v13 = v8[1];
  *v8 = v11;
  v8[1] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_100386654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (*v9)
  {
    v11 = v9[1];
    *v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_1003866D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (!*(_QWORD *)(a1 + v7))
  {
    if (v10)
    {
      v13 = v9[1];
      *v8 = v10;
      v8[1] = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v10)
  {
    swift_release(v8[1]);
    goto LABEL_7;
  }
  v11 = v9[1];
  v12 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  swift_release(v12);
  return a1;
}

uint64_t sub_10038677C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100386788);
}

uint64_t sub_100386788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_100386810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038681C);
}

uint64_t sub_10038681C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_100386894()
{
  uint64_t v0;

  return sub_10037FCE8(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003868A4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  _BYTE v40[24];
  char v41[24];

  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    if (v38 < 0)
      v35 = v38;
    else
      v35 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38);
    v37 = _CocoaArrayWrapper.endIndex.getter(v35);
    if (v37)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease(v38);
    return;
  }
  v37 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v38);
  if (!v37)
    goto LABEL_26;
LABEL_3:
  v5 = v38 & 0xC000000000000001;
  v6 = 4;
  v7 = &selRef_viewOptionsRoot;
  while (1)
  {
    if (v5)
      v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v38);
    else
      v8 = (char *)*(id *)(v38 + 8 * v6);
    v9 = v8;
    v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    v11 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v41, 0, 0);
    v12 = *v11;
    if (*v11)
    {
      v13 = type metadata accessor for DOCItemCollectionViewController(0);
      v14 = (void *)swift_dynamicCastClass(v12, v13);
      if (v14)
        v15 = v12;
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v14, v7[378]);

    v16 = *v11;
    if (v16)
    {
      v17 = type metadata accessor for DOCItemCollectionViewController(0);
      v18 = swift_dynamicCastClass(v16, v17);
      if (v18)
        break;
    }
LABEL_5:

    ++v6;
    if (v10 == v37)
      goto LABEL_26;
  }
  v19 = (char *)v18;
  v20 = v16;
  objc_msgSend(v19, "loadViewIfNeeded");
  v21 = *(void **)&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v21)
  {
    v22 = v21;

    v23 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
    v24 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
    v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
    v26 = v25 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess(v25 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v40, 33, 0);
    swift_retain();
    sub_10008BB40((uint64_t)v4, v26, (uint64_t *)&unk_100642710);
    swift_endAccess(v40);
    swift_release(v25);
    v28 = *(_QWORD *)&v22[v24];
    if (*(_BYTE *)(v28 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) == 1)
    {
      v29 = &v22[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v22[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v27);
      if (Strong)
      {
        v32 = Strong;
        v33 = *((_QWORD *)v29 + 1);
        ObjectType = swift_getObjectType(Strong, v31);
        v34 = v28 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
        swift_beginAccess(v34, v39, 0, 0);
        sub_1000271D4(v34, (uint64_t)v4, (uint64_t *)&unk_100642710);
        (*(void (**)(char *, _UNKNOWN **, char *, uint64_t, uint64_t))(v33 + 16))(v22, &off_1005E7FD8, v4, ObjectType, v33);
        swift_unknownObjectRelease(v32);
        sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
      }
    }

    v7 = &selRef_viewOptionsRoot;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_100386C00(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v2 = a2;
  v3 = a1;
  v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_21:
    if (v2 < 0)
      v11 = v2;
    else
      v11 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
    v13 = v12 - v3;
    if (__OFSUB__(v12, v3))
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRetain(v2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
    if (v15 < 0)
    {
LABEL_38:
      __break(1u);
      return;
    }
    if (v14 >= (v13 & ~(v13 >> 63)) || v14 <= -1)
      v17 = v13 & ~(v13 >> 63);
    else
      v17 = v14;
    if (v13 >= 1)
      v7 = v17;
    else
      v7 = v13 & ~(v13 >> 63);
    swift_bridgeObjectRetain(v2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
    if (v18 >= v7)
      goto LABEL_10;
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - a1) & ~((uint64_t)(v5 - a1) >> 63)))
    v6 = (v5 - a1) & ~((uint64_t)(v5 - a1) >> 63);
  else
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)(v5 - a1) >= 1)
    v7 = v6;
  else
    v7 = (v5 - a1) & ~((uint64_t)(v5 - a1) >> 63);
  if ((uint64_t)v5 < v7)
    goto LABEL_36;
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for DOCBrowserContainerController();
    v8 = 0;
    do
    {
      v9 = v8 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v8);
      v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    if (v2 < 0)
      v10 = v2;
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(0, v7, v10);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

uint64_t sub_100386DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for ScrollToItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v7)
    swift_release(v7[1]);
  v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;

  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_100386E74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollToItem(0) - 8) + 80);
  return sub_1003833B4(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100386EB8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100386EDC()
{
  uint64_t v0;

  sub_10037FE10(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100386EF4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100386F18(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

void sub_100386F2C()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t active;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs] = 0;
  v1 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  v2 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  v3 = type metadata accessor for ScrollToItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext];
  active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(active - 8) + 56))(v4, 1, 1, active);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCColumnViewController.swift", 35, 2, 279, 0);
  __break(1u);
}

void sub_100387078(void *a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  id *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  _BYTE v33[24];
  _BYTE v34[24];

  v2 = objc_msgSend(a1, "collectionView");
  if (!v2)
    return;
  v3 = v2;
  v4 = objc_msgSend(v2, "preparedCells");
  if (!v4)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v5 = v4;
  v6 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_5;
LABEL_24:

    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v7 < 0)
    v30 = v7;
  else
    v30 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    goto LABEL_24;
LABEL_5:
  if (v8 < 1)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v31 = v3;
  v9 = 0;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    else
      v20 = *(id *)(v7 + 8 * v9 + 32);
    v19 = v20;
    v21 = type metadata accessor for DOCColumnViewCell();
    v22 = swift_dynamicCastClass(v19, v21);
    if (!v22)
      goto LABEL_8;
    v23 = (uint64_t *)(v22 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
    swift_beginAccess(v22 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v34, 0, 0);
    v24 = *v23;
    if (!*v23)
      goto LABEL_8;
    v25 = (id *)(v24 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess(v24 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v33, 0, 0);
    if (!*v25)
      goto LABEL_8;
    v26 = *v25;
    v27 = objc_msgSend(v26, "view", v31);
    if (!v27)
      goto LABEL_26;
    v28 = v27;
    v29 = objc_msgSend(a2, "view");
    if (!v29)
      break;
    v10 = v29;
    objc_msgSend(v29, "layoutMargins");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    objc_msgSend(v28, "setLayoutMargins:", v12, v14, v16, v18);
    v19 = v26;
LABEL_8:
    ++v9;

    if (v8 == v9)
      goto LABEL_18;
  }
  __break(1u);
LABEL_18:

  swift_bridgeObjectRelease(v7);
}

void sub_100387308(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id *v18;
  id v19;
  id v20;
  id v21;
  char v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  _BYTE v55[24];

  v3 = objc_msgSend(a1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "preparedCells");
    if (!v5)
      goto LABEL_40;
    v6 = v5;
    v7 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v49 = v8;
      else
        v49 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v49);
      swift_bridgeObjectRelease(v8);
      if (v9)
        goto LABEL_5;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_5:
        v54 = v9;
        if (v9 >= 1)
        {
          v50 = v4;
          v51 = v8;
          v10 = 0;
          v11 = v8 & 0xC000000000000001;
          v12 = v9;
          v52 = a2;
          v53 = v8 & 0xC000000000000001;
          while (1)
          {
            if (v11)
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
            else
              v13 = *(id *)(v8 + 8 * v10 + 32);
            v14 = v13;
            v15 = type metadata accessor for DOCColumnViewCell();
            v16 = swift_dynamicCastClass(v14, v15);
            if (v16)
            {
              v17 = (void *)v16;
              v18 = (id *)(v16 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
              swift_beginAccess(v16 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v55, 1, 0);
              v19 = *v18;
              if (*v18)
              {
                sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
                v20 = v19;
                v21 = a2;
                v22 = static NSObject.== infix(_:_:)(v20, v21);

                if ((v22 & 1) != 0)
                {
                  v23 = *v18;
                  *v18 = 0;
                  if (v23)
                  {
                    v24 = v23;
                    v25 = objc_msgSend(v24, "viewIfLoaded", v50);
                    v26 = objc_msgSend(v25, "superview");

                    v27 = objc_msgSend(v17, "contentView");
                    v28 = v27;
                    if (v26)
                    {
                      if (v27)
                      {
                        sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
                        v29 = v24;
                        v30 = v26;
                        v31 = static NSObject.== infix(_:_:)(v30, v28);

                        v24 = v29;
                        v8 = v51;

                        v28 = v24;
                        if ((v31 & 1) == 0)
                          goto LABEL_24;
LABEL_21:
                        objc_msgSend(v24, "doc_removeFromParentWithRemoveSubviewBlock:", 0);
                        v32 = objc_msgSend(v24, "viewIfLoaded");
                        objc_msgSend(v32, "removeFromSuperview");
                        v28 = v24;
                      }
                      else
                      {
                        v32 = v24;
                        v28 = v26;
                      }
                    }
                    else
                    {
                      v32 = v24;
                      if (!v27)
                        goto LABEL_21;
                    }

LABEL_24:
                    if (*v18)
                    {
                      v33 = *v18;
                      v34 = objc_msgSend(v17, "contentView");
                      v35 = objc_msgSend(v33, "view");
                      if (!v35)
                        goto LABEL_38;
                      v36 = v35;
                      v37 = v24;
                      objc_msgSend(v34, "addSubview:", v35);

                      v38 = objc_msgSend(v33, "view");
                      if (!v38)
                        goto LABEL_39;
                      v39 = v38;
                      v40 = objc_msgSend(v17, "contentView");
                      objc_msgSend(v40, "bounds");
                      v42 = v41;
                      v44 = v43;
                      v46 = v45;
                      v48 = v47;

                      objc_msgSend(v39, "setFrame:", v42, v44, v46, v48);
                      sub_100324B18();
                      sub_100324D34(0);

                      v14 = v37;
                      v11 = v53;
                      v12 = v54;
                      a2 = v52;
                    }
                    else
                    {
                      v33 = v24;
                      a2 = v52;
                      v11 = v53;
                      v12 = v54;
                    }

                    v14 = v33;
                    goto LABEL_8;
                  }
                }
                v11 = v53;
                v12 = v54;
              }
            }
LABEL_8:
            ++v10;

            if (v12 == v10)
            {

              swift_bridgeObjectRelease(v8);
              return;
            }
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
    }

    swift_bridgeObjectRelease(v8);
  }
}

void sub_100387780(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id *v12;
  char *v13;
  void **v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id Strong;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[24];

  v3 = IndexPath.item.getter(a1);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess(v4, v52, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = v6 - 1;
    if (!__OFSUB__(v6, 1))
      goto LABEL_3;
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v5 < 0)
    v47 = v5;
  else
    v47 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v48 = _CocoaArrayWrapper.endIndex.getter(v47);
  swift_bridgeObjectRelease(v5);
  v7 = v48 - 1;
  if (__OFSUB__(v48, 1))
    goto LABEL_33;
LABEL_3:
  if (v3 == v7)
    sub_10037FF70();
  v8 = type metadata accessor for DOCColumnViewCell();
  v9 = swift_dynamicCastClass(a1, v8);
  if (!v9)
    goto LABEL_37;
  v10 = (char *)v9;
  v11 = a1;
  sub_100384280(v10);
  v12 = (id *)&v10[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess(&v10[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController], v51, 0, 0);
  v13 = (char *)*v12;
  if (!*v12)
  {
LABEL_27:
    sub_100324D34(0);

    return;
  }
  v14 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  *(_QWORD *)&v15 = swift_beginAccess(&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v50, 0, 0).n128_u64[0];
  v16 = *v14;
  if (!*v14
    || (v17 = type metadata accessor for DOCItemCollectionViewController(0),
        (v18 = swift_dynamicCastClass(v16, v17)) == 0))
  {
LABEL_25:
    if (*v12)
      objc_msgSend(*v12, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren", v15);
    goto LABEL_27;
  }
  v19 = (_BYTE *)v18;
  Strong = (id)swift_unknownObjectWeakLoadStrong(v18 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing);
  v21 = v16;
  if (!Strong)
  {
LABEL_19:
    v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
    v41 = (uint64_t *)&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v49, 1, 0);
    v42 = *v41;
    *v41 = 2;
    if (v42 != 2)
    {
      v43 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
      v44 = *(_QWORD *)(v43 + 16);
      if (v44)
      {
        v45 = (uint64_t *)(v43 + 64);
        do
        {
          v46 = *v45;
          v45 += 5;
          *(_BYTE *)(v46 + 24) = *(_BYTE *)(v46 + 25);
          --v44;
        }
        while (v44);
      }
      sub_100026A34();
    }

    goto LABEL_25;
  }
  v22 = objc_msgSend(v19, "parentViewController");
  if (!v22 || (v23 = v22, v22, v23 != Strong))
  {
    swift_unknownObjectRelease(Strong);
    goto LABEL_19;
  }
  v24 = objc_msgSend(v19, "view");
  if (!v24)
    goto LABEL_34;
  v25 = v24;
  v26 = objc_msgSend(v24, "superview");

  if (v26)
  {
LABEL_18:
    swift_unknownObjectRelease(Strong);

    goto LABEL_19;
  }
  v27 = objc_msgSend(Strong, "view");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "bounds");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;

    objc_msgSend(v25, "setFrame:", v30, v32, v34, v36);
    objc_msgSend(v25, "setAutoresizingMask:", 18);
    v37 = objc_msgSend(Strong, "view");
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v37, "addSubview:", v25);

      v39 = objc_msgSend(Strong, "_doc_ipi_updateContentOverlayInsetsForSelfAndChildren");
      sub_1002C3CF4((uint64_t)v39, v40);
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010052C370, "Files/DOCColumnViewController.swift", 35, 2, 554, 0);
  __break(1u);
}

void sub_100387B70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  id v6;
  id v7;
  char v8;
  id v9;
  _BYTE v10[24];

  v2 = type metadata accessor for DOCColumnViewCell();
  v3 = swift_dynamicCastClass(a1, v2);
  if (v3)
  {
    v4 = (id *)(v3 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
    swift_beginAccess(v3 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController, v10, 0, 0);
    v5 = *v4;
    if (*v4)
    {
      v6 = a1;
      v7 = v5;
      v8 = sub_100324A40(v7);

      if ((v8 & 1) != 0)
      {
        if (*v4)
        {
          v9 = *v4;
          sub_1002C7138(0);

          v6 = v9;
        }
      }

    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ALL, 0x800000010052C370, "Files/DOCColumnViewController.swift", 35, 2, 594, 0);
    __break(1u);
  }
}

void sub_100387C74(void *a1)
{
  uint64_t v1;
  double v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  void *Strong;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  char v13[24];

  objc_msgSend(a1, "contentOffset");
  if (v2 <= -100.0)
  {
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers, v13, 0, 0);
    v4 = *v3;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v12 = v4;
      else
        v12 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (v5)
      {
LABEL_4:
        v6 = v5 - 1;
        if (__OFSUB__(v5, 1))
        {
          __break(1u);
        }
        else if ((v4 & 0xC000000000000001) == 0)
        {
          if ((v6 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v6 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v7 = (char *)*(id *)(v4 + 8 * v6 + 32);
            goto LABEL_9;
          }
          __break(1u);
          return;
        }
        v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
LABEL_9:
        v8 = v7;
        swift_bridgeObjectRelease(v4);
        Strong = (void *)swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting]);
        if (Strong)
        {
          v10 = Strong;
          v11 = objc_msgSend(Strong, "canLoadAdditionalParents");

          swift_unknownObjectRelease(v10);
          if ((v11 & 1) != 0)
            sub_100384F08();
        }
        else
        {

        }
        return;
      }
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (v5)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease(v4);
  }
}

uint64_t sub_100387DC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100387DF0(uint64_t a1)
{
  uint64_t v1;

  sub_100385280(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100387DF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100387E1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10037FBA8(a1, a2, a3, v3);
}

uint64_t sub_100387E24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t static NavigationDirection.typeDisplayRepresentation.getter()
{
  return TypeDisplayRepresentation.init(stringLiteral:)(0x6F69746365726944, 0xE90000000000006ELL);
}

Files::NavigationDirection_optional __swiftcall NavigationDirection.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  Files::NavigationDirection_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0A48, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = Files_NavigationDirection_forward;
  else
    v4.value = Files_NavigationDirection_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static NavigationDirection.allCases.getter()
{
  return &off_1005C0A98;
}

uint64_t NavigationDirection.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64726177726F66;
  else
    return 1801675106;
}

uint64_t sub_100387F4C(char *a1, char *a2)
{
  return sub_10039DF74(*a1, *a2);
}

Swift::Int sub_100387F58()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x64726177726F66;
  else
    v2 = 1801675106;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100387FD0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x64726177726F66;
  else
    v2 = 1801675106;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100388024(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x64726177726F66;
  else
    v3 = 1801675106;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100388098@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0A48, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003880F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1801675106;
  if (*v1)
    v2 = 0x64726177726F66;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_10038812C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005C0AC0;
}

uint64_t sub_10038813C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100388CB0();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100388174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100388C2C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003881AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672CB0);
  sub_10007E788(v10, (uint64_t)qword_100672CB0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x657461676976614ELL, 0xE800000000000000);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_HISTORY_INTENT_TITLE", 29, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Navigate History action", 37, v13);
}

uint64_t sub_10038834C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100650A28);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100650A30);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1003222F0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for NavigateHistoryIntent, v6);
  v7._object = (void *)0x800000010052C560;
  v7._countAndFlagsBits = 0xD000000000000026;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E4E88);
  v9 = sub_10006922C(&qword_100650A38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for NavigateHistoryIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for NavigateHistoryIntent, v6);
}

uint64_t sub_1003884C4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672CC8);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672CC8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_10038851C@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641080, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672CB0, (uint64_t)sub_1003881AC, a1);
}

uint64_t sub_100388540@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641088, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672CC8, (uint64_t)sub_1003884C4, a1);
}

uint64_t sub_100388568(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100388580, 0, 0);
}

uint64_t sub_100388580()
{
  uint64_t v0;

  static IntentResult.result<>()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003885B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100388F84();
  *a1 = result;
  return result;
}

uint64_t sub_1003885D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003222F0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t _s5Files19NavigationDirectionO26caseDisplayRepresentationsSDyAC10AppIntents0E14RepresentationVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  __int16 v32;
  int v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v0 = sub_10006922C(&qword_100643E80);
  __chkstk_darwin(v0);
  v43 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v2);
  v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v40 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C(&qword_100650A40);
  v17 = sub_10006922C(&qword_100650A48);
  v18 = *(_QWORD *)(v17 - 8);
  v39 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v39, v19 | 7);
  v41 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_1004D4CE0;
  v22 = v21 + v20;
  v36 = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(1801675074, 0xE400000000000000);
  v24 = v9;
  static Locale.current.getter(v23);
  v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v40 = *(_QWORD *)(v40 + 104);
  ((void (*)(char *))v40)(v6);
  v32 = 2;
  v25 = v6;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_INTENT_DIRECTION_BACK_TITLE", 36, 2, v12, 0x6E65746E49707041, 0xEA00000000007374, v9, v6, "Title of the back navigation direction", 38, v32);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v26 = v42;
  v35(v42, 1, 1, v44);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v43;
  v28(v43, 1, 1, v27);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v26, v29);
  *(_BYTE *)(v22 + v39) = 1;
  v30 = String.LocalizationValue.init(stringLiteral:)(0x64726177726F46, 0xE700000000000000);
  static Locale.current.getter(v30);
  ((void (*)(char *, _QWORD, uint64_t))v40)(v25, v37, v38);
  LOWORD(v33) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_INTENT_DIRECTION_FORWARD_TITLE", 39, 2, v12, 0x6E65746E49707041, 0xEA00000000007374, v24, v25, "Title of the forward navigation direction", 41, v33);
  v35(v26, 1, 1, v44);
  v28(v29, 1, 1, v27);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v26, v29);
  return sub_1003F2E24(v41);
}

unint64_t sub_100388A08()
{
  unint64_t result;

  result = qword_100650988;
  if (!qword_100650988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_100650988);
  }
  return result;
}

unint64_t sub_100388A50()
{
  unint64_t result;

  result = qword_100650990;
  if (!qword_100650990)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_100650990);
  }
  return result;
}

unint64_t sub_100388A98()
{
  unint64_t result;

  result = qword_100650998;
  if (!qword_100650998)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_100650998);
  }
  return result;
}

unint64_t sub_100388AE0()
{
  unint64_t result;

  result = qword_1006509A0;
  if (!qword_1006509A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509A0);
  }
  return result;
}

uint64_t sub_100388B24()
{
  return sub_100062698(&qword_1006509A8, &qword_1006509B0, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_100388B54()
{
  unint64_t result;

  result = qword_1006509B8;
  if (!qword_1006509B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509B8);
  }
  return result;
}

unint64_t sub_100388B9C()
{
  unint64_t result;

  result = qword_1006509C0;
  if (!qword_1006509C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509C0);
  }
  return result;
}

unint64_t sub_100388BE4()
{
  unint64_t result;

  result = qword_1006509C8;
  if (!qword_1006509C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509C8);
  }
  return result;
}

unint64_t sub_100388C2C()
{
  unint64_t result;

  result = qword_1006509D0;
  if (!qword_1006509D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509D0);
  }
  return result;
}

uint64_t sub_100388C70(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100388CB0();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100388CB0()
{
  unint64_t result;

  result = qword_1006509D8;
  if (!qword_1006509D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509D8);
  }
  return result;
}

unint64_t sub_100388CF8()
{
  unint64_t result;

  result = qword_1006509E0;
  if (!qword_1006509E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509E0);
  }
  return result;
}

unint64_t sub_100388D40()
{
  unint64_t result;

  result = qword_1006509E8;
  if (!qword_1006509E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509E8);
  }
  return result;
}

unint64_t sub_100388D88()
{
  unint64_t result;

  result = qword_1006509F0;
  if (!qword_1006509F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NavigationDirection, &type metadata for NavigationDirection);
    atomic_store(result, (unint64_t *)&qword_1006509F0);
  }
  return result;
}

unint64_t sub_100388DD0()
{
  unint64_t result;

  result = qword_1006509F8;
  if (!qword_1006509F8)
  {
    result = swift_getWitnessTable(&unk_1004E4DFC, &type metadata for NavigateHistoryIntent);
    atomic_store(result, (unint64_t *)&qword_1006509F8);
  }
  return result;
}

unint64_t sub_100388E18()
{
  unint64_t result;

  result = qword_100650A00;
  if (!qword_100650A00)
  {
    result = swift_getWitnessTable(&unk_1004E4E24, &type metadata for NavigateHistoryIntent);
    atomic_store(result, (unint64_t *)&qword_100650A00);
  }
  return result;
}

uint64_t sub_100388E5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F5B4, 1);
}

uint64_t sub_100388E6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F58C, 1);
}

uint64_t storeEnumTagSinglePayload for NavigationDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100388EC8 + 4 * byte_1004E4AD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100388EFC + 4 * byte_1004E4AD0[v4]))();
}

uint64_t sub_100388EFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100388F04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100388F0CLL);
  return result;
}

uint64_t sub_100388F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100388F20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100388F24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100388F2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NavigationDirection()
{
  return &type metadata for NavigationDirection;
}

ValueMetadata *type metadata accessor for NavigateHistoryIntent()
{
  return &type metadata for NavigateHistoryIntent;
}

uint64_t sub_100388F58()
{
  return sub_100062698(&qword_100650A10, &qword_100650A18, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100388F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  __int16 v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[3];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  __chkstk_darwin(v0);
  v40 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)&v36 - v5;
  v6 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10006922C(&qword_100650A20);
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000010052C430);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v24(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v34 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_HISTORY_INTENT_DIRECTION_PARAMETER_TITLE", 49, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Title for the direction parameter of the Navigate history AppIntent", 67, v34);
  v25 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x800000010052C4E0);
  static Locale.current.getter(v25);
  v24(v11, v23, v8);
  LOWORD(v35) = 2;
  v26 = v37;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_HISTORY_INTENT_DIRECTION_PARAMETER_DESCRIPTION", 55, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Description for the direction parameter of the Navigate history AppIntent", 73, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
  v43[0] = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v38;
  v28(v38, 1, 1, v27);
  v30 = v39;
  v28(v39, 1, 1, v27);
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v32 = sub_100388CB0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v21, v26, v43, v29, v30, v31, &off_1005C0AE8, v32);
}

uint64_t sub_10038936C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

_QWORD *sub_100389394(void *a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v12;
  void *v13;
  id v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  if (!a1)
    return _swiftEmptyArrayStorage;
  v4 = a1;
  if ((objc_msgSend(a2, "isInUIPDocumentLanding") & 1) == 0 && (sub_10038967C(v4) & 1) != 0)
  {
    v5 = objc_msgSend(a2, "hostBundleTitle");
    v6 = v5;
    if (v5)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v12 = objc_msgSend(v2, "splitViewController");
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v12, "doc_splitViewState");

      v15 = objc_msgSend(v14, "isSidebarShownInline");
      v16 = objc_msgSend(a2, "isFilesApp");
      if ((v15 & 1) != 0)
        goto LABEL_17;
    }
    else
    {
      v16 = objc_msgSend(a2, "isFilesApp");
    }
    v17 = v16;
    if ((objc_msgSend(a2, "isPickerUI") & 1) == 0 && (v17 & 1) == 0)
    {
      if (!v9)
      {

        goto LABEL_19;
      }
      v26 = objc_msgSend(v4, "displayNameComposedWithLocalizedAppName:", v6);

      if (v26)
      {
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        v10 = sub_100081A50(0, 1, 1, _swiftEmptyArrayStorage);
        v31 = v10[2];
        v30 = v10[3];
        v32 = v30 >> 1;
        v33 = v31 + 1;
        if (v30 >> 1 <= v31)
        {
          v10 = sub_100081A50((_QWORD *)(v30 > 1), v31 + 1, 1, v10);
          v30 = v10[3];
          v32 = v30 >> 1;
        }
        v10[2] = v33;
        v34 = &v10[2 * v31];
        v34[4] = v27;
        v34[5] = v29;
        if (v32 < (uint64_t)(v31 + 2))
          v10 = sub_100081A50((_QWORD *)(v30 > 1), v31 + 2, 1, v10);
        v10[2] = v31 + 2;
        v35 = &v10[2 * v33];
        v35[4] = v7;
        v35[5] = v9;
        goto LABEL_20;
      }
LABEL_18:
      swift_bridgeObjectRelease(v9);
LABEL_19:
      v10 = _swiftEmptyArrayStorage;
LABEL_20:
      v18 = objc_msgSend(v4, "displayName");
      if (v18)
      {
        v19 = v18;
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v22 = v21;

        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = sub_100081A50(0, v10[2] + 1, 1, v10);
        v24 = v10[2];
        v23 = v10[3];
        if (v24 >= v23 >> 1)
          v10 = sub_100081A50((_QWORD *)(v23 > 1), v24 + 1, 1, v10);
        v10[2] = v24 + 1;
        v25 = &v10[2 * v24];
        v25[4] = v20;
        v25[5] = v22;
      }
      goto LABEL_7;
    }
LABEL_17:

    goto LABEL_18;
  }
  v10 = _swiftEmptyArrayStorage;
LABEL_7:

  return v10;
}

uint64_t sub_10038967C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == (id)6)
  {
    v5 = 0;
  }
  else
  {
    v6 = sub_10006922C(&qword_10064FE20);
    inited = swift_initStackObject(v6, &v20);
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    v8 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
    *(_QWORD *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
    v9 = inited + 32;
    v10 = (void *)DOCDocumentSourceIdentifierSharedItems;
    *(_QWORD *)(inited + 40) = DOCDocumentSourceIdentifierSharedItems;
    v11 = v8;
    v12 = v10;
    v13 = objc_msgSend(a1, "sourceIdentifier");
    v14 = objc_msgSend(a1, "originalSourceIdentifier");
    if (!v14)
      v14 = String._bridgeToObjectiveC()();
    if ((sub_1000DFACC((uint64_t)v13, inited) & 1) != 0)
    {

      swift_setDeallocating(inited);
      v15 = *(_QWORD *)(inited + 16);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy(v9, v15, v16);

      v5 = 1;
    }
    else
    {
      v5 = sub_1000DFACC((uint64_t)v14, inited);

      swift_setDeallocating(inited);
      v17 = *(_QWORD *)(inited + 16);
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy(v9, v17, v18);
    }
  }
  return v5 & 1;
}

unint64_t sub_100389810()
{
  unint64_t result;

  result = qword_100650A50;
  if (!qword_100650A50)
  {
    result = swift_getWitnessTable(&unk_1004E4F40, &type metadata for NavigateQuickLookIntent);
    atomic_store(result, (unint64_t *)&qword_100650A50);
  }
  return result;
}

unint64_t sub_100389858()
{
  unint64_t result;

  result = qword_100650A58;
  if (!qword_100650A58)
  {
    result = swift_getWitnessTable(&unk_1004E4F68, &type metadata for NavigateQuickLookIntent);
    atomic_store(result, (unint64_t *)&qword_100650A58);
  }
  return result;
}

uint64_t sub_10038989C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F620, 1);
}

uint64_t sub_1003898AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10056F5F8, 1);
}

uint64_t sub_1003898BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672CE0);
  sub_10007E788(v10, (uint64_t)qword_100672CE0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x800000010052C860);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_QUICKLOOK_INTENT_TITLE", 31, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Navigate Quick Look AppIntent", 43, v13);
}

uint64_t sub_100389A60()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100650A78);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100650A80);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10038A0EC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1, &type metadata for NavigateQuickLookIntent, v6);
  v7._object = (void *)0x800000010052C810;
  v7._countAndFlagsBits = 0xD000000000000028;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E4FA8);
  v9 = sub_10006922C(&qword_100650A88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for NavigateQuickLookIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for NavigateQuickLookIntent, v6);
}

uint64_t sub_100389BD8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672CF8);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672CF8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_100389C30@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641090, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672CE0, (uint64_t)sub_1003898BC, a1);
}

uint64_t sub_100389C54@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100641098, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672CF8, (uint64_t)sub_100389BD8, a1);
}

uint64_t sub_100389C7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100389D04();
  *a1 = result;
  return result;
}

uint64_t sub_100389CA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10038A0EC();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for NavigateQuickLookIntent()
{
  return &type metadata for NavigateQuickLookIntent;
}

uint64_t sub_100389CD8()
{
  return sub_100062698(&qword_100650A68, &qword_100650A70, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100389D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  __int16 v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[3];

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  __chkstk_darwin(v0);
  v40 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)&v36 - v5;
  v6 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10006922C(&qword_100650A20);
  v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000010052C430);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v24(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v34 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_QUICKLOOK_INTENT_DIRECTION_PARAMETER_TITLE", 51, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Title for the direction parameter of the Navigate Quick Look AppIntent", 70, v34);
  v25 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x800000010052C770);
  static Locale.current.getter(v25);
  v24(v11, v23, v8);
  LOWORD(v35) = 2;
  v26 = v37;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("NAVIGATE_QUICKLOOK_INTENT_DIRECTION_PARAMETER_DESCRIPTION", 57, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Description for the direction parameter of the Navigate Quick Look AppIntent", 76, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
  v43[0] = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v38;
  v28(v38, 1, 1, v27);
  v30 = v39;
  v28(v39, 1, 1, v27);
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v32 = sub_100388CB0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v21, v26, v43, v29, v30, v31, &off_1005C0B10, v32);
}

unint64_t sub_10038A0EC()
{
  unint64_t result;

  result = qword_100657050;
  if (!qword_100657050)
  {
    result = swift_getWitnessTable(&unk_1004E4EB0, &type metadata for NavigateQuickLookIntent);
    atomic_store(result, &qword_100657050);
  }
  return result;
}

uint64_t sub_10038A130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void DOCSourceByType.regularSources.getter(uint64_t a1)
{
  sub_10038A168(a1, 0);
}

void DOCSourceByType.sharedSources.getter(uint64_t a1)
{
  sub_10038A168(a1, 1);
}

void sub_10038A168(uint64_t a1, char a2)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = sub_10001CCD0(a2);
    if ((v4 & 1) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v3));
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

char *DOCSourceOrderObserver.__allocating_init(configuration:sourceObserver:updateBlock:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(a1, a2, a3, a4);
}

void sub_10038A2B8(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[32];
  _BYTE v26[24];
  unint64_t v27;

  v6 = type metadata accessor for DOCSharedServerSource();
  v7 = swift_dynamicCastClass(a1, v6);
  v8 = (_QWORD *)(v2 + 16);
  swift_beginAccess(v2 + 16, v26, 0, 0);
  v9 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v9 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  LOBYTE(v7) = v7 != 0;
  v10 = sub_10001CCD0(v7);
  if ((v11 & 1) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  v27 = v12;
  swift_bridgeObjectRetain_n(v12, 2);
  v3 = a1;
  v13 = sub_10038B36C(v12, v3);
  v15 = v14;
  swift_bridgeObjectRelease(v12);

  if ((v15 & 1) != 0)
  {
    swift_bridgeObjectRelease(v12);
    return;
  }

  v9 = v27;
  if (!(v27 >> 62))
  {
    v16 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = v3;
    if (v16 >= a2)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_11:
  if (v9 < 0)
    v21 = v9;
  else
    v21 = v9 & 0xFFFFFFFFFFFFFF8;
  v22 = v3;
  swift_bridgeObjectRetain(v9);
  v23 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v9);
  if (v23 >= a2)
  {
LABEL_6:
    if ((a2 & 0x8000000000000000) == 0)
    {
      sub_1004591E0(a2, a2, (uint64_t)v3);
      v18 = v27;
      swift_beginAccess(v8, v25, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
      v24 = *v8;
      *v8 = 0x8000000000000000;
      sub_100356A94(v18, v7, isUniquelyReferenced_nonNull_native);
      v20 = *v8;
      *v8 = v24;
      swift_bridgeObjectRelease(v20);
      swift_endAccess(v25);
      return;
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

char *DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v32[5];
  uint64_t v33;
  char v34[24];
  objc_super v35;
  char v36[72];

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation] = 0;
  v8 = &v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver] = a2;
  v9 = type metadata accessor for DOCSourceOrderStrategy();
  v10 = swift_allocObject(v9, 24, 7);
  v11 = sub_10006922C(&qword_100650AB8);
  inited = swift_initStackObject(v11, v36);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = _swiftEmptyArrayStorage;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = _swiftEmptyArrayStorage;
  v13 = sub_1003F95A4(inited);
  swift_setDeallocating(inited);
  v14 = v4;
  swift_retain();
  v15 = a1;
  v16 = a2;
  v17 = sub_10006922C(&qword_100650AC0);
  swift_arrayDestroy(inited + 32, 2, v17);
  *(_QWORD *)(v10 + 16) = v13;
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy] = v10;

  v35.receiver = v14;
  v35.super_class = (Class)type metadata accessor for DOCSourceOrderObserver();
  v18 = (char *)objc_msgSendSuper2(&v35, "init");
  v19 = (void **)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v19, v34, 0, 0);
  v20 = *v19;
  if (v20)
  {
    v32[0] = v20;
    KeyPath = swift_getKeyPath(&unk_1004E4FF8);
    v22 = swift_allocObject(&unk_1005E3780, 24, 7);
    swift_unknownObjectWeakInit(v22 + 16);
    v23 = v20;
    v20 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_1000AB024, v22, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v22);

  }
  v24 = *(void **)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation];
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation] = v20;

  v25 = *(void **)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver];
  v26 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration];
  v27 = swift_allocObject(&unk_1005E3780, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v32[4] = sub_1000AB198;
  v33 = v27;
  v32[0] = _NSConcreteStackBlock;
  v32[1] = (id)1107296256;
  v32[2] = sub_10002E508;
  v32[3] = &unk_1005E3798;
  v28 = _Block_copy(v32);
  swift_release(v33);
  v29 = objc_msgSend(v25, "addSubscriberForConfiguration:usingBlock:", v26, v28);
  _Block_release(v28);
  v30 = *(void **)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken];
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken] = v29;

  swift_release(a4);
  return v18;
}

id DOCSourceOrderObserver.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_super v6;

  v1 = v0;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken])
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver], "removeSubscriberForToken:");
  v2 = OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation;
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation];
  if (v3)
  {
    v4 = v3;
    dispatch thunk of NSKeyValueObservation.invalidate()();

    v3 = *(void **)&v1[v2];
  }
  *(_QWORD *)&v1[v2] = 0;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCSourceOrderObserver();
  return objc_msgSendSuper2(&v6, "dealloc");
}

void sub_10038A8B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = objc_msgSend(*a1, "DOCSourceOrderKey");
  if (v3)
  {
    v4 = v3;
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
}

void sub_10038A914(_QWORD *a1, void **a2)
{
  void *v2;
  NSArray v3;
  Class isa;

  v2 = *a2;
  if (*a1)
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  isa = v3.super.isa;
  objc_msgSend(v2, "setDOCSourceOrderKey:");

}

void DOCSourceOrderObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCSourceOrderObserver", 28, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10038A9D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for DOCSourceByType()
{
  return &type metadata for DOCSourceByType;
}

uint64_t storeEnumTagSinglePayload for DOCSourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10038AA50 + 4 * byte_1004E4FD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10038AA84 + 4 * byte_1004E4FD0[v4]))();
}

uint64_t sub_10038AA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038AA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10038AA94);
  return result;
}

uint64_t sub_10038AAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10038AAA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10038AAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038AAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10038AAC4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  NSString v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _BOOL8 v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  os_log_t v70;
  void *v71;
  void (*v72)(_BYTE *, uint64_t);
  _BYTE *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  double v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  os_log_t v90;
  _BYTE v92[12];
  int v93;
  void *v94;
  os_log_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v92[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v4);
  v9 = &v92[-v8];
  __chkstk_darwin(v7);
  v11 = &v92[-v10];
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return 1;
  v12 = objc_msgSend(a1, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v14 = v13;

  v15._countAndFlagsBits = 0x6C7070612E6D6F63;
  v15._object = (void *)0xE900000000000065;
  LOBYTE(v12) = String.hasPrefix(_:)(v15);
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(v14).n128_u64[0];
  if ((v12 & 1) != 0)
  {
    v18 = Logger.UI.unsafeMutableAddressor(v16);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v11, v18, v2);
    v19 = a1;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v95 = (os_log_t)swift_slowAlloc(64, -1);
      v100 = v95;
      *(_DWORD *)v22 = 136315394;
      v23 = sub_1000544FC(0xD000000000000016, 0x800000010052CAA0, (uint64_t *)&v100);
      v97 = v3;
      v98 = v23;
      *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99).n128_u64[0];
      *(_WORD *)(v22 + 12) = 2080;
      v25 = objc_msgSend(v19, "identifier", v24);
      v96 = v2;
      v26 = v25;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

      v98 = sub_1000544FC(v27, v29, (uint64_t *)&v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);

      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s [PROTECTED APPS] Source is internal and can't be hidden, not filtering out: %s", (uint8_t *)v22, 0x16u);
      v30 = v95;
      swift_arrayDestroy(v95, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v11, v96);
      return 1;
    }

    v72 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v73 = v11;
    goto LABEL_15;
  }
  v31 = objc_msgSend(a1, "identifier", v17);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v35 = (void *)objc_opt_self(FPProviderDomain);
  v100 = 0;
  v36 = objc_msgSend(v35, "providerDomainWithID:cachePolicy:error:", v34, 2, &v100);
  v37 = v100;
  if (!v36)
  {
    v74 = v100;
    v75 = _convertNSErrorToError(_:)(v37);

    swift_willThrow(v76);
    v77 = swift_errorRelease(v75);
    v78 = Logger.UI.unsafeMutableAddressor(v77);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, v78, v2);
    v79 = a1;
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.error.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc(22, -1);
      v95 = (os_log_t)swift_slowAlloc(64, -1);
      v100 = v95;
      *(_DWORD *)v82 = 136315394;
      v98 = sub_1000544FC(0xD000000000000016, 0x800000010052CAA0, (uint64_t *)&v100);
      *(_QWORD *)&v83 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99).n128_u64[0];
      *(_WORD *)(v82 + 12) = 2080;
      v84 = objc_msgSend(v79, "identifier", v83);
      v97 = v3;
      v85 = v84;
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
      v96 = v2;
      v87 = v86;
      v89 = v88;

      v98 = sub_1000544FC(v87, v89, (uint64_t *)&v100);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);

      swift_bridgeObjectRelease(v89);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s [PROTECTED APPS] Could not get FPProviderDomain from source identifier: %s", (uint8_t *)v82, 0x16u);
      v90 = v95;
      swift_arrayDestroy(v95, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v90, -1, -1);
      swift_slowDealloc(v82, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v6, v96);
      return 1;
    }

    v72 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v73 = v6;
LABEL_15:
    v72(v73, v2);
    return 1;
  }
  v38 = v36;
  v39 = v100;

  v40 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v41 = objc_msgSend(v38, "topLevelBundleIdentifier");
  if (!v41)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v44 = v43;
    v41 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v42 = swift_bridgeObjectRelease(v44).n128_u64[0];
  }
  v45 = objc_msgSend(v40, "hostAppCanNavigateToAppBundleID:", v41, v42);

  v46 = v45 == 0;
  v48 = Logger.UI.unsafeMutableAddressor(v47);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v9, v48, v2);
  v49 = a1;
  v50 = v38;
  v51 = v49;
  v52 = v3;
  v53 = v51;
  v54 = v50;
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.debug.getter();
  v57 = v56;
  if (os_log_type_enabled(v55, v56))
  {
    v95 = v55;
    v58 = swift_slowAlloc(38, -1);
    v93 = v57;
    v59 = v58;
    v94 = (void *)swift_slowAlloc(96, -1);
    v100 = v94;
    *(_DWORD *)v59 = 136315906;
    v97 = v52;
    v98 = sub_1000544FC(0xD000000000000016, 0x800000010052CAA0, (uint64_t *)&v100);
    v96 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);
    *(_WORD *)(v59 + 12) = 1024;
    LODWORD(v98) = v45 == 0;
    *(_QWORD *)&v60 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 4).n128_u64[0];
    *(_WORD *)(v59 + 18) = 2080;
    v61 = objc_msgSend(v53, "identifier", v60);
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v64 = v63;

    v98 = sub_1000544FC(v62, v64, (uint64_t *)&v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);

    *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
    *(_WORD *)(v59 + 28) = 2080;
    v66 = objc_msgSend(v54, "topLevelBundleIdentifier", v65);
    v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v69 = v68;

    v98 = sub_1000544FC(v67, v69, (uint64_t *)&v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99);

    swift_bridgeObjectRelease(v69);
    v70 = v95;
    _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v93, "%s [PROTECTED APPS] Host app should see: %{BOOL}d source identifier: %s containing app bundle identifier: %s", (uint8_t *)v59, 0x26u);
    v71 = v94;
    swift_arrayDestroy(v94, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v59, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v9, v96);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v9, v2);
  }
  return v46;
}

uint64_t sub_10038B36C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    v6 = 0;
    v21 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "identifier", v21);
      v10 = objc_msgSend(a2, "identifier");
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      if (v11 == v14 && v13 == v15)
      {

        swift_bridgeObjectRelease_n(v13, 2);
        return v6;
      }
      v17 = v15;
      v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);

      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      if ((v3 & 1) != 0)
        return v6;
      v18 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      ++v6;
      if (v18 == v5)
        return 0;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_10038B518()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038B548()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

id DOCInlineRenameOverlayView.hitTest(_:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  char *v3;
  void *v4;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  BOOL v37;
  id v38;
  objc_super v40;
  CGPoint v41;
  CGRect v42;

  v4 = v3;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell]);
  if (!Strong
    || (v9 = (void *)Strong,
        v10 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView),
        v11 = v10,
        v9,
        !v10))
  {
    v40.receiver = v4;
    v40.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
    return objc_msgSendSuper2(&v40, "hitTest:withEvent:", a1, a2, a3);
  }
  sub_10038B860(v4);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v22 = sub_100253CE8(v20, v21);
  v23 = objc_msgSend(v22, "superview");

  if (v23)
  {
    v26 = sub_100253CE8(v24, v25);
    objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v26, a2, a3);
    v28 = v27;
    v30 = v29;

    v33 = sub_100253CE8(v31, v32);
    v34 = objc_msgSend(v33, "hitTest:withEvent:", a1, v28, v30);

    if (v34)
    {
      v35 = sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
      if (objc_msgSend(v34, "isKindOfClass:", swift_getObjCClassFromMetadata(v35)))
      {

        return v34;
      }

    }
  }
  objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v11, a2, a3);
  v36 = objc_msgSend(v11, "hitTest:withEvent:", a1);
  if (v36)
  {
    v34 = v36;

  }
  else
  {
    v42.origin.x = v13;
    v42.origin.y = v15;
    v42.size.width = v17;
    v42.size.height = v19;
    v41.x = a2;
    v41.y = a3;
    v37 = CGRectContainsPoint(v42, v41);

    if (v37)
    {
      return 0;
    }
    else
    {
      v38 = v4;
      return v4;
    }
  }
  return v34;
}

uint64_t type metadata accessor for DOCInlineRenameOverlayView()
{
  return objc_opt_self(_TtC5Files26DOCInlineRenameOverlayView);
}

void sub_10038B860(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;

  v3 = v1 + OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    v7 = v6;

    if (v6)
    {
      objc_msgSend(v7, "frame", 0.0, 0.0);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v16 = (void *)swift_unknownObjectWeakLoadStrong(v3);
      objc_msgSend(a1, "convertRect:fromView:", v16, v9, v11, v13, v15);
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;

      sub_10007EAFC(v18, v20, v22, v24, -5.0, -5.0);
    }
  }
}

id DOCInlineRenameOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell]);
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id DOCInlineRenameOverlayView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell]);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id DOCInlineRenameOverlayView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038BB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Rename.unsafeMutableAddressor(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v8 = swift_retain_n(v0, 4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = swift_slowAlloc(32, -1);
    v33 = v2;
    v13 = v12;
    v32 = swift_slowAlloc(96, -1);
    v35 = v32;
    *(_DWORD *)v13 = 136315650;
    v31 = v11;
    v34 = sub_1000544FC(0x4E746E6572727563, 0xEB0000000065646FLL, &v35);
    *(_QWORD *)&v14 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35).n128_u64[0];
    *(_WORD *)(v13 + 12) = 2080;
    v15 = objc_msgSend(*(id *)(v1 + 64), "filename", v14);
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v34 = sub_1000544FC(v16, v18, &v35);
    v19 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_release_n(v1, 2, v19);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v13 + 22) = 2080;
    v20 = *(_QWORD *)(v1 + 64);
    ObjectType = swift_getObjectType(v20, v21);
    swift_unknownObjectRetain(v20);
    v23 = DOCNode.nodeDescription.getter(ObjectType);
    v25 = v24;
    swift_unknownObjectRelease(v20);
    v34 = sub_1000544FC(v23, v25, &v35);
    v26 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_release_n(v1, 2, v26);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v31, "%s fileName: %s node: %s", (uint8_t *)v13, 0x20u);
    v27 = v32;
    swift_arrayDestroy(v32, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v33);
  }
  else
  {

    swift_release_n(v1, 4, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

void sub_10038BE3C(id *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  id v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  id v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  void (*v44)(_BYTE *, uint64_t);
  uint64_t v45;
  uint64_t (*v46)(_BYTE *, void (*)(_QWORD, _QWORD), uint64_t);
  id *v47;
  uint64_t v48;
  void *v49;
  id *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  id *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  __n128 v73;
  _BYTE *v74;
  id *v75;
  id v76;
  id *v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _BYTE v90[12];
  int v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  void (*v97)(_BYTE *, uint64_t, uint64_t);
  id *v98;
  void (*v99)(_BYTE *, uint64_t);
  uint64_t Strong;
  uint64_t v101;

  v2 = v1;
  v98 = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v90[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v90[-v9];
  v11 = __chkstk_darwin(v8);
  v13 = &v90[-v12];
  v14 = __chkstk_darwin(v11);
  v16 = &v90[-v15];
  v17 = Logger.Rename.unsafeMutableAddressor(v14);
  v97 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
  v97(v16, v17, v3);
  v18 = swift_retain_n(v1, 4);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.debug.getter();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v94 = v13;
  v99 = (void (*)(_QWORD, _QWORD))v17;
  if (v22)
  {
    v23 = swift_slowAlloc(32, -1);
    v95 = v7;
    v24 = v23;
    v92 = swift_slowAlloc(96, -1);
    v101 = v92;
    *(_DWORD *)v24 = 136315650;
    v91 = v21;
    Strong = sub_1000544FC(0x49746E6572727563, 0xEF6C6C65436D6574, &v101);
    *(_QWORD *)&v25 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101).n128_u64[0];
    *(_WORD *)(v24 + 12) = 2080;
    v26 = objc_msgSend(v2[8], "filename", v25);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v93 = v10;
    v28 = v2;
    v29 = v27;
    v96 = v3;
    v31 = v30;

    Strong = sub_1000544FC(v29, v31, &v101);
    v32 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
    swift_release_n(v28, 2, v32);
    swift_bridgeObjectRelease(v31);
    *(_WORD *)(v24 + 22) = 2080;
    v33 = v28[8];
    ObjectType = swift_getObjectType(v33, v34);
    swift_unknownObjectRetain(v33);
    v36 = DOCNode.nodeDescription.getter(ObjectType);
    v38 = v37;
    swift_unknownObjectRelease(v33);
    Strong = sub_1000544FC(v36, v38, &v101);
    v2 = v28;
    v10 = v93;
    v39 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
    swift_release_n(v2, 2, v39);
    v40 = v38;
    v3 = v96;
    swift_bridgeObjectRelease(v40);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v91, "%s didSet fileName: %s node: %s", (uint8_t *)v24, 0x20u);
    v41 = v92;
    swift_arrayDestroy(v92, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    v42 = v24;
    v7 = v95;
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

    swift_release_n(v2, 4, v43);
  }
  v44 = *(void (**)(_QWORD, _QWORD))(v4 + 8);
  v44(v16, v3);
  v46 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v97;
  v47 = v98;
  if (v98 && (v48 = swift_unknownObjectWeakLoadStrong(v2 + 9, v45)) != 0)
  {
    v49 = (void *)v48;
    type metadata accessor for DOCItemCollectionCell();
    v50 = v47;
    if ((static NSObject.== infix(_:_:)(v50, v49) & 1) != 0)
    {
      v51 = v46(v10, (void (*)(_BYTE *, uint64_t))v99, v3);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v52, v53))
      {
        v99 = v44;
        v54 = (uint8_t *)swift_slowAlloc(12, -1);
        v55 = swift_slowAlloc(32, -1);
        v101 = v55;
        v93 = v10;
        *(_DWORD *)v54 = 136315138;
        Strong = sub_1000544FC(0x49746E6572727563, 0xEF6C6C65436D6574, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s current item cell and previous cell are the same. No need to re-host renaming between cells. Resuming first responder if needed.", v54, 0xCu);
        swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1, -1);
        swift_slowDealloc(v54, -1, -1);

        v99(v93, v3);
      }
      else
      {

        v44(v10, v3);
      }
      sub_10038CF58();

    }
    else
    {
      v74 = v94;
      v46(v94, (void (*)(_BYTE *, uint64_t))v99, v3);
      v75 = v50;
      v76 = v49;
      v77 = v75;
      v78 = v76;
      v79 = Logger.logObject.getter(v78);
      v80 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v79, v80))
      {
        v81 = swift_slowAlloc(32, -1);
        v82 = swift_slowAlloc(96, -1);
        v99 = v44;
        v83 = v82;
        v101 = v82;
        *(_DWORD *)v81 = 136315650;
        v98 = v2;
        Strong = sub_1000544FC(0x49746E6572727563, 0xEF6C6C65436D6574, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
        *(_WORD *)(v81 + 12) = 2080;
        Strong = (uint64_t)v77;
        v96 = v3;
        v84 = String.init<A>(describing:)(&Strong, &type metadata for UnsafeMutableRawPointer);
        v86 = v85;
        Strong = sub_1000544FC(v84, v85, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);

        swift_bridgeObjectRelease(v86);
        *(_WORD *)(v81 + 22) = 2080;
        Strong = (uint64_t)v78;
        v87 = String.init<A>(describing:)(&Strong, &type metadata for UnsafeMutableRawPointer);
        v89 = v88;
        Strong = sub_1000544FC(v87, v88, &v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);

        swift_bridgeObjectRelease(v89);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s moving rename from: %s to: %s", (uint8_t *)v81, 0x20u);
        swift_arrayDestroy(v83, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v83, -1, -1);
        swift_slowDealloc(v81, -1, -1);

        v99(v74, v96);
      }
      else
      {

        v44(v74, v3);
      }
      sub_10038D588(v77, v78);

    }
  }
  else
  {
    v46(v7, (void (*)(_BYTE *, uint64_t))v99, v3);
    swift_retain_n(v2, 2);
    v56 = v47;
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc(32, -1);
      v95 = v7;
      v60 = v59;
      v61 = swift_slowAlloc(96, -1);
      v101 = v61;
      *(_DWORD *)v60 = 136315650;
      Strong = sub_1000544FC(0x49746E6572727563, 0xEF6C6C65436D6574, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
      *(_WORD *)(v60 + 12) = 2080;
      Strong = (uint64_t)v47;
      v62 = v56;
      v63 = sub_10006922C(&qword_100650EC8);
      v99 = v44;
      v64 = v63;
      v65 = String.init<A>(describing:)(&Strong, v63);
      v96 = v3;
      v67 = v66;
      Strong = sub_1000544FC(v65, v66, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);

      swift_bridgeObjectRelease(v67);
      *(_WORD *)(v60 + 22) = 2080;
      Strong = swift_unknownObjectWeakLoadStrong(v2 + 9, v68);
      v69 = String.init<A>(describing:)(&Strong, v64);
      v71 = v70;
      Strong = sub_1000544FC(v69, v70, &v101);
      v72 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, &v101);
      swift_release_n(v2, 2, v72);
      swift_bridgeObjectRelease(v71);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s oldValue: %s or currentItemCell: %s were nil. Not updating renaming session.", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy(v61, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v60, -1, -1);

      v99(v95, v96);
    }
    else
    {

      swift_release_n(v2, 2, v73);
      v44(v7, v3);
    }
  }
}

uint64_t sub_10038C784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    v2 = v0;
    v3 = sub_10006922C(&qword_100650EC0);
    swift_allocObject(v3, 32, 7);
    v4 = swift_retain();
    v1 = NSNotification.SubscriptionsController.init(observee:)(v4);
    v5 = *(_QWORD *)(v2 + 88);
    *(_QWORD *)(v2 + 88) = v1;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v1;
}

uint64_t *NSNotificationName.DOCInlineRenameControllerWillBeginRename.unsafeMutableAddressor()
{
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  return &static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
}

void sub_10038C844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  Notification.object.getter(v5, a1);
  v2 = sub_10006922C(&qword_100642730);
  if ((swift_dynamicCast(&v4, v5, v2, (char *)&type metadata for Swift.AnyObject + 8, 6) & 1) == 0
    || (v3 = v4, swift_unknownObjectRelease(v4), v3 != a1))
  {
    sub_10038EF44();
  }
}

void sub_10038C8C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  void **v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  Class v20;
  id v21;
  void *v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  _QWORD *Strong;

  v3 = v2;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + 9, a2);
  if (Strong)
  {
    v5 = swift_unknownObjectWeakLoadStrong(v2 + 2, v4);
    swift_unknownObjectRelease(v5);
    if (v5)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1006410A0 != -1)
        swift_once(&qword_1006410A0, sub_100390884);
      objc_msgSend(v6, "postNotificationName:object:", static NSNotificationName.DOCInlineRenameControllerWillBeginRename, v2);

      v8 = swift_unknownObjectWeakLoadStrong(v2 + 2, v7);
      if (v8)
      {
        v10 = v8;
        v11 = v3[3];
        ObjectType = swift_getObjectType(v8, v9);
        (*(void (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
        swift_unknownObjectRelease(v10);
      }
      v13 = swift_allocObject(&unk_1005E39B0, 24, 7);
      swift_weakInit(v13 + 16, v3);
      swift_retain();
      v14 = sub_1002F2520((uint64_t)sub_100390EB0, v13, (uint64_t)sub_100390EB0, v13);
      swift_release_n(v13, 2, v15);
      v16 = v3[10];
      v3[10] = v14;
      swift_bridgeObjectRelease(v16);
      v17 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *Strong) + 0x3C0))(v3);
      v19 = (void *)v3[4];
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(Strong, "window");
        if (v21)
        {
          v22 = v21;
          objc_msgSend(v21, "addSubview:", v20);
          isa = (Class)(id)DOCConstraintsToResizeWithReferenceView(v20, v22, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
          if (!isa)
          {
            v24 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
            v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v24);
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v25);
          }
          objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

          v20 = isa;
        }

      }
      sub_10038F324(v17, v18);
    }

  }
}

void sub_10038CB34()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  void (*v19)(_BYTE *, uint64_t);
  uint64_t Strong;
  void *v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  _QWORD *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE v39[4];
  int v40;
  os_log_t v41;
  _QWORD *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v39[-v7];
  v10 = Logger.Rename.unsafeMutableAddressor(v9);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  v12 = v11(v8, v10, v2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v43 = v1;
    v15 = swift_slowAlloc(12, -1);
    v45 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v47 = v17;
    v44 = v10;
    *(_DWORD *)v16 = 136315138;
    v46 = sub_1000544FC(0x6E65526573756170, 0xED00002928656D61, &v47);
    v1 = v43;
    v10 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s if needed", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v18 = v16;
    v2 = v45;
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v19(v8, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (Strong)
  {
    v21 = (void *)Strong;
    v22 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v22)
    {
      v23 = v22;
      if (objc_msgSend(v23, "isFirstResponder"))
      {
        v11(v5, v10, v2);
        v24 = v23;
        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.debug.getter(v25);
        v27 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          v28 = swift_slowAlloc(22, -1);
          v45 = v2;
          v29 = v28;
          v42 = (_QWORD *)swift_slowAlloc(8, -1);
          v44 = swift_slowAlloc(32, -1);
          v47 = v44;
          *(_DWORD *)v29 = 136315394;
          v41 = v25;
          v46 = sub_1000544FC(0x6E65526573756170, 0xED00002928656D61, &v47);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
          *(_WORD *)(v29 + 12) = 2112;
          v43 = v5;
          v46 = (uint64_t)v24;
          v30 = v24;
          v40 = v27;
          v31 = v24;
          v32 = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
          v33 = v42;
          *v42 = v22;

          v24 = v31;
          v34 = v41;
          _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s resigning: %@ first responder.", (uint8_t *)v29, 0x16u);
          v35 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v33, 1, v35);
          swift_slowDealloc(v33, -1, -1);
          v36 = v44;
          swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v36, -1, -1);
          swift_slowDealloc(v29, -1, -1);

          v37 = v43;
          v38 = v45;
        }
        else
        {

          v37 = v5;
          v38 = v2;
        }
        v19(v37, v38);
        objc_msgSend(v24, "resignFirstResponder");
      }

    }
    else
    {
      v23 = (id)Strong;
    }

  }
}

void sub_10038CF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t Strong;
  void *v22;
  void *v23;
  id v24;
  uint8_t *v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  os_log_t v51;
  int v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint8_t *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (uint8_t *)&v51 - v6;
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v51 - v9;
  v11 = (char *)Logger.Rename.unsafeMutableAddressor(v8);
  v12 = *(uint64_t (**)(char *, char *, uint64_t))(v1 + 16);
  v13 = v12(v10, v11, v0);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v16 = os_log_type_enabled(v14, v15);
  v55 = v4;
  v57 = v7;
  if (v16)
  {
    v56 = v0;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v60 = v18;
    *(_DWORD *)v17 = 136315138;
    v59 = sub_1000544FC(0x6552656D75736572, 0xEE002928656D616ELL, &v60);
    v0 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s if needed", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v10, v0);
  Strong = swift_unknownObjectWeakLoadStrong(v58 + 72, v20);
  if (Strong)
  {
    v22 = (void *)Strong;
    v23 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v23)
    {
      v24 = v23;
      if ((objc_msgSend(v24, "isFirstResponder") & 1) != 0)
      {

        return;
      }
      v25 = v57;
      v12((char *)v57, v11, v0);
      v26 = (char *)v24;
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.debug.getter();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc(22, -1);
        v58 = v11;
        v31 = v30;
        v53 = (_QWORD *)swift_slowAlloc(8, -1);
        v54 = swift_slowAlloc(32, -1);
        v60 = v54;
        *(_DWORD *)v31 = 136315394;
        v59 = sub_1000544FC(0x6552656D75736572, 0xEE002928656D616ELL, &v60);
        v56 = v0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
        *(_WORD *)(v31 + 12) = 2112;
        v51 = v27;
        v52 = v29;
        v59 = (uint64_t)v26;
        v32 = v26;
        v0 = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
        v33 = v53;
        *v53 = v23;

        v34 = v51;
        _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v52, "%s setting: %@ to first responder.", (uint8_t *)v31, 0x16u);
        v35 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v33, 1, v35);
        swift_slowDealloc(v33, -1, -1);
        v36 = v54;
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        v37 = v31;
        v11 = v58;
        swift_slowDealloc(v37, -1, -1);

        v38 = v57;
      }
      else
      {

        v38 = v25;
      }
      v19((char *)v38, v0);
      v39 = objc_msgSend(v26, "window");
      if (v39)
      {
        v40 = v39;
        v41 = objc_msgSend(v39, "windowScene");
        if (v41)
        {
          v42 = v41;
          v43 = objc_msgSend(v41, "focusSystem");

          if (v43)
          {

            if (objc_msgSend(v40, "isFocused"))
            {
              objc_msgSend(v26, "becomeFirstResponder");

            }
            else
            {
              v44 = v55;
              v45 = v12(v55, v11, v0);
              v46 = Logger.logObject.getter(v45);
              v47 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v46, v47))
              {
                v48 = (uint8_t *)swift_slowAlloc(12, -1);
                v49 = swift_slowAlloc(32, -1);
                v58 = v26;
                v50 = v49;
                v60 = v49;
                *(_DWORD *)v48 = 136315138;
                v57 = v48 + 4;
                v59 = sub_1000544FC(0x6552656D75736572, 0xEE002928656D616ELL, &v60);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
                _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s skipping first responder because window isn't key", v48, 0xCu);
                swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v50, -1, -1);
                swift_slowDealloc(v48, -1, -1);

              }
              else
              {

              }
              v19(v44, v0);
            }
            return;
          }
        }

      }
      objc_msgSend(v26, "becomeFirstResponder");

    }
  }
}

void sub_10038D588(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Rename.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = a1;
  v13 = a2;
  v14 = v12;
  v15 = v13;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(32, -1);
    v40 = v3;
    v19 = v18;
    v20 = (_QWORD *)swift_slowAlloc(16, -1);
    v38 = swift_slowAlloc(32, -1);
    v42 = v38;
    *(_DWORD *)v19 = 136315650;
    v39 = v6;
    v41 = sub_1000544FC(0xD000000000000014, 0x800000010052CCC0, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    *(_WORD *)(v19 + 12) = 2112;
    v37 = v7;
    v41 = (uint64_t)v14;
    v21 = v14;
    v36 = v16;
    v22 = v15;
    v23 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    *v20 = v14;

    *(_WORD *)(v19 + 22) = 2112;
    v41 = (uint64_t)v22;
    v24 = v22;
    v15 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    v20[1] = v22;

    v25 = v36;
    _os_log_impl((void *)&_mh_execute_header, v36, v17, "%s from: %@, to: %@", (uint8_t *)v19, 0x20u);
    v26 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v20, 2, v26);
    swift_slowDealloc(v20, -1, -1);
    v27 = v38;
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    v28 = v19;
    v3 = v40;
    swift_slowDealloc(v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v39);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  if (*((_BYTE *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming) == 1)
  {
    v29 = *(void **)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v29)
    {
      v30 = *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController);
      *(_QWORD *)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController) = 0;
      v31 = v29;
      swift_release(v30);
      (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v14) + 0x3C8))(0, 0);
      (*(void (**)(id))((swift_isaMask & *v15) + 0x3E0))(v31);
      (*(void (**)(uint64_t))((swift_isaMask & *v15) + 0x3C0))(v3);
      v33 = *(_QWORD *)(v3 + 32);
      if (v33)
      {
        Strong = swift_unknownObjectWeakLoadStrong(v3 + 72, v32);
        swift_unknownObjectWeakAssign(v33 + OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell, Strong);

        v31 = (id)Strong;
      }

    }
  }
}

void sub_10038D928(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *Strong;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18[24];

  v4 = v3;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3 + 72);
  if (Strong)
  {
    v9 = Strong;
    v10 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();

    if (v10)
    {
      v11 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
      swift_beginAccess(&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], v18, 0, 0);
      v12 = *(_QWORD *)v11;
      if (v12 && a2)
      {
        v13 = *(_QWORD *)(v4 + 56);
        *(_QWORD *)(v4 + 48) = a1;
        *(_QWORD *)(v4 + 56) = a2;
        swift_bridgeObjectRetain_n(a2, 2);
        swift_unknownObjectRetain(v12);
        swift_bridgeObjectRelease(v13);
        ObjectType = swift_getObjectType(v12);
        v15 = swift_allocObject(&unk_1005E39B0, 24, 7);
        swift_weakInit(v15 + 16, v4);
        v16 = swift_allocObject(&unk_1005E39D8, 64, 7);
        *(_QWORD *)(v16 + 16) = v15;
        *(_QWORD *)(v16 + 24) = v10;
        *(_QWORD *)(v16 + 32) = v12;
        *(_BYTE *)(v16 + 40) = a3 & 1;
        *(_QWORD *)(v16 + 48) = a1;
        *(_QWORD *)(v16 + 56) = a2;
        swift_unknownObjectRetain(v12);
        swift_retain();
        v17 = v10;
        DOCNode.fpfs_fetchFPItem(completion:)(sub_100390DC8, v16, ObjectType);

        swift_unknownObjectRelease(v12);
        swift_release(v15);
        swift_release(v16);
      }
      else
      {

      }
    }
  }
}

void sub_10038DAB0(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD aBlock[5];
  uint64_t v41;

  LODWORD(v39) = a5;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v17);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v37 = v19;
    v38 = v18;
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v36 = v14;
    v22 = a1;
    v23 = a6;
    v24 = v22;
    v35 = static OS_dispatch_queue.main.getter(v22);
    v25 = swift_allocObject(&unk_1005E3A00, 72, 7);
    *(_QWORD *)(v25 + 16) = a2;
    *(_QWORD *)(v25 + 24) = a3;
    *(_QWORD *)(v25 + 32) = a4;
    *(_BYTE *)(v25 + 40) = v39 & 1;
    *(_QWORD *)(v25 + 48) = v24;
    *(_QWORD *)(v25 + 56) = v23;
    *(_QWORD *)(v25 + 64) = a7;
    aBlock[4] = sub_100390E20;
    v41 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E3A18;
    v26 = _Block_copy(aBlock);
    v27 = v41;
    v39 = v24;
    swift_retain();
    v28 = a3;
    swift_unknownObjectRetain(a4);
    swift_bridgeObjectRetain(a7);
    swift_release(v27);
    static DispatchQoS.unspecified.getter(v29);
    aBlock[0] = _swiftEmptyArrayStorage;
    v30 = sub_10008BAAC();
    v31 = sub_10006922C((uint64_t *)&unk_100647540);
    v32 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v13, v30);
    v33 = (void *)v35;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v21, v16, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v13);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
  }
}

void sub_10038DCF8(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  _BYTE v26[24];

  v14 = type metadata accessor for UTType(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v26, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
    if (v20)
    {
      if ((objc_msgSend(v20, "shouldShowFileExtensions") & 1) != 0)
        goto LABEL_7;
      v25 = a5;
      if (qword_1006410A8 != -1)
        swift_once(&qword_1006410A8, sub_1000AA544);
      v21 = objc_msgSend(a3, "contentType", v25);
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v21);

      v22 = sub_10007693C((uint64_t)v17);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      a5 = v25;
      if ((v22 & 1) != 0)
LABEL_7:
        a4 = 1;
      v23 = (_QWORD *)swift_allocObject(&unk_1005E3A50, 48, 7);
      v23[2] = v19;
      v23[3] = a6;
      v23[4] = a7;
      v23[5] = a3;
      v24 = swift_allocObject(&unk_1005E3A78, 24, 7);
      *(_QWORD *)(v24 + 16) = a3;
      swift_unknownObjectRetain_n(a3, 2);
      swift_retain();
      swift_bridgeObjectRetain(a7);
      sub_10038F4F4(a5, a6, a7, a4 & 1, (void (*)(uint64_t, _QWORD, uint64_t))sub_100390E6C, (uint64_t)v23, (void **)sub_100390EA8, v24);
      swift_release(v19);
      swift_release(v23);
      swift_release(v24);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10038DF00(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *Strong;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  NSObject *v30;
  __n128 v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  __n128 v54;
  void *v55;
  uint64_t v56;
  NSObject *v57;
  __n128 v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSString v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  char *v93;
  os_log_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  _QWORD v98[3];
  char v99[8];
  uint64_t v100;
  uint64_t v101;

  v95 = a6;
  v96 = a7;
  v94 = a5;
  v97 = a3;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v91 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)v91 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)v91 - v21;
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a4 + 72);
  if (!Strong)
    goto LABEL_8;
  v24 = Strong;
  v25 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();
  v93 = (char *)v25;
  if (!v25)
  {

LABEL_8:
    v35 = Logger.Rename.unsafeMutableAddressor(Strong);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v35, v10);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v101 = v40;
      *(_DWORD *)v39 = 136315138;
      v100 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s: no cell or cell content. Bailing on rename completion handler.", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  if ((v97 & 0x100) != 0)
  {
    v41 = swift_errorRetain(a1);
    v42 = Logger.Rename.unsafeMutableAddressor(v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v42, v10);
    swift_errorRetain(a1);
    v43 = swift_errorRetain(a1);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc(22, -1);
      v94 = v44;
      v47 = v46;
      v96 = swift_slowAlloc(64, -1);
      v101 = v96;
      *(_DWORD *)v47 = 136315394;
      v100 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
      *(_WORD *)(v47 + 12) = 2080;
      v95 = v10;
      swift_getErrorValue(a1, v99, v98);
      v48 = Error.localizedDescription.getter(v98[1], v98[2]);
      v50 = v49;
      v100 = sub_1000544FC(v48, v49, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
      swift_bridgeObjectRelease(v50);
      v51 = v97;
      sub_1002A8744(a1, a2, v97, 1);
      sub_1002A8744(a1, a2, v51, 1);
      v52 = v94;
      _os_log_impl((void *)&_mh_execute_header, v94, v45, "%s: renaming failed with error: %s", (uint8_t *)v47, 0x16u);
      v53 = v96;
      swift_arrayDestroy(v96, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      sub_1002A8744(a1, a2, v51, 1);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v95);
    }
    else
    {
      v51 = v97;
      sub_1002A8744(a1, a2, v97, 1);
      sub_1002A8744(a1, a2, v51, 1);
      swift_errorRelease(a1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
LABEL_20:
    v70 = v93;
LABEL_24:
    (*(void (**)(BOOL, _QWORD, __n128))((swift_isaMask & *v24) + 0x3C8))((v51 & 0x100) == 0, 0, v54);

    return;
  }
  v26 = *((_BYTE *)v24 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
  v27 = Logger.Rename.unsafeMutableAddressor(v25);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  if ((v26 & 1) == 0)
  {
    v28(v19, v27, v10);
    v55 = (void *)v96;
    v56 = swift_unknownObjectRetain_n(v96, 2);
    v57 = Logger.logObject.getter(v56);
    v59 = static os_log_type_t.info.getter(v58);
    v60 = v59;
    if (os_log_type_enabled(v57, v59))
    {
      v61 = swift_slowAlloc(22, -1);
      LODWORD(v94) = v60;
      v62 = v61;
      v92 = swift_slowAlloc(64, -1);
      v101 = v92;
      *(_DWORD *)v62 = 136315394;
      v100 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v101);
      *(_QWORD *)&v63 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101).n128_u64[0];
      *(_WORD *)(v62 + 12) = 2080;
      v91[1] = v62 + 14;
      v64 = objc_msgSend(v55, "description", v63);
      v95 = v10;
      v65 = v64;
      v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v68 = v67;

      v100 = sub_1000544FC(v66, v68, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
      swift_unknownObjectRelease_n(v55, 2);
      swift_bridgeObjectRelease(v68);
      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v94, "%s: renaming for %s ended with success but cell was not being renamed", (uint8_t *)v62, 0x16u);
      v69 = v92;
      swift_arrayDestroy(v92, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v95);
    }
    else
    {

      swift_unknownObjectRelease_n(v55, 2);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }
    LOWORD(v51) = v97;
    goto LABEL_20;
  }
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v22, v27, v10);
  v30 = Logger.logObject.getter(v29);
  v32 = static os_log_type_t.info.getter(v31);
  if (os_log_type_enabled(v30, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v101 = v34;
    *(_DWORD *)v33 = 136315138;
    v100 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
    _os_log_impl((void *)&_mh_execute_header, v30, v32, "%s: renaming ended with success", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v10);
  LOWORD(v51) = v97;
  v70 = v93;
  v71 = (void *)v96;
  if ((v97 & 1) != 0)
  {
    v77 = String._bridgeToObjectiveC()();
    v78 = objc_msgSend(v77, "stringByDeletingPathExtension");

    v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v81 = v80;

    v82 = (uint64_t *)&v70[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
    v76 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
    v73 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8];
    *v82 = v79;
    v82[1] = v81;
  }
  else
  {
    v72 = &v93[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
    v74 = *(_QWORD *)&v93[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
    v73 = *(_QWORD *)&v93[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8];
    v75 = v95;
    *(_QWORD *)v72 = v94;
    *((_QWORD *)v72 + 1) = v75;
    swift_bridgeObjectRetain(v75);
    v76 = v74;
  }
  sub_1004AE738(v76, v73);
  v83 = objc_msgSend(v71, "filename", swift_bridgeObjectRelease(v73).n128_f64[0]);
  if (v83)
  {
    v84 = v83;
    v85 = objc_msgSend(v83, "stringByDeletingPathExtension");

    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v88 = v87;

    v89 = (uint64_t *)&v70[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle];
    v90 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle + 8];
    *v89 = v86;
    v89[1] = v88;
    v54 = swift_bridgeObjectRelease(v90);
    goto LABEL_24;
  }
  __break(1u);
}

uint64_t sub_10038E7E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  __n128 v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  __n128 v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  double v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  double v65;
  id v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE v72[4];
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[3];
  _BYTE v78[8];
  uint64_t v79;
  uint64_t v80;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v72[-v11];
  __chkstk_darwin(v13);
  v16 = &v72[-v15];
  if (a2)
  {
    v17 = swift_errorRetain(a2);
    v18 = Logger.Rename.unsafeMutableAddressor(v17);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v16, v18, v6);
    swift_errorRetain(a2);
    swift_unknownObjectRetain(a3);
    swift_errorRetain(a2);
    v19 = swift_unknownObjectRetain(a3);
    v20 = Logger.logObject.getter(v19);
    v22 = static os_log_type_t.info.getter(v21);
    v23 = v22;
    if (os_log_type_enabled(v20, v22))
    {
      v24 = swift_slowAlloc(32, -1);
      v74 = swift_slowAlloc(96, -1);
      v80 = v74;
      *(_DWORD *)v24 = 136315650;
      v73 = v23;
      v79 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v80);
      *(_QWORD *)&v25 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80).n128_u64[0];
      *(_WORD *)(v24 + 12) = 2080;
      v26 = objc_msgSend(a3, "description", v25);
      v76 = v6;
      v27 = v26;
      v28 = a3;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v75 = v7;
      v31 = v30;

      v79 = sub_1000544FC(v29, v31, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_unknownObjectRelease_n(v28, 2);
      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v24 + 22) = 2080;
      swift_getErrorValue(a2, v78, v77);
      v32 = Error.localizedDescription.getter(v77[1], v77[2]);
      v34 = v33;
      v79 = sub_1000544FC(v32, v33, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_bridgeObjectRelease(v34);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v73, "%s: finished block has been called for renaming %s with error: %s", (uint8_t *)v24, 0x20u);
      v35 = v74;
      swift_arrayDestroy(v74, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v24, -1, -1);

      swift_errorRelease(a2);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v75 + 8))(v16, v76);
    }
    swift_errorRelease(a2);
    swift_unknownObjectRelease_n(a3, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    v58 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
    v59 = v16;
  }
  else if (a1)
  {
    v37 = a1;
    v38 = Logger.Rename.unsafeMutableAddressor(v37);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v38, v6);
    swift_unknownObjectRetain_n(a3, 2);
    v39 = v37;
    v40 = Logger.logObject.getter(v39);
    v42 = static os_log_type_t.info.getter(v41);
    v43 = v42;
    if (os_log_type_enabled(v40, v42))
    {
      v44 = swift_slowAlloc(32, -1);
      v73 = v43;
      v45 = v44;
      v74 = swift_slowAlloc(96, -1);
      v80 = v74;
      *(_DWORD *)v45 = 136315650;
      v76 = v6;
      v79 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v80);
      *(_QWORD *)&v46 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80).n128_u64[0];
      *(_WORD *)(v45 + 12) = 2080;
      v47 = objc_msgSend(a3, "description", v46);
      v75 = v7;
      v48 = v47;
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v51 = v50;

      v79 = sub_1000544FC(v49, v51, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_unknownObjectRelease_n(a3, 2);
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(v51).n128_u64[0];
      *(_WORD *)(v45 + 22) = 2080;
      v53 = objc_msgSend(v39, "description", v52);
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v56 = v55;

      v79 = sub_1000544FC(v54, v56, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);

      swift_bridgeObjectRelease(v56);
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v73, "%s: finished block has been called for renaming %s with renamed item: %s", (uint8_t *)v45, 0x20u);
      v57 = v74;
      swift_arrayDestroy(v74, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v75 + 8))(v9, v76);
    }

    swift_unknownObjectRelease_n(a3, 2);
    v58 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
    v59 = v9;
  }
  else
  {
    v60 = Logger.Rename.unsafeMutableAddressor(v14);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v12, v60, v6);
    v61 = swift_unknownObjectRetain_n(a3, 2);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc(22, -1);
      v74 = swift_slowAlloc(64, -1);
      v80 = v74;
      *(_DWORD *)v64 = 136315394;
      v76 = v6;
      v79 = sub_1000544FC(0xD00000000000002ELL, 0x800000010052CC90, &v80);
      v75 = v7;
      *(_QWORD *)&v65 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80).n128_u64[0];
      *(_WORD *)(v64 + 12) = 2080;
      v66 = objc_msgSend(a3, "description", v65);
      v67 = a3;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v70 = v69;

      v79 = sub_1000544FC(v68, v70, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_unknownObjectRelease_n(v67, 2);
      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "%s: finished block has been called for renaming %s without FPItem", (uint8_t *)v64, 0x16u);
      v71 = v74;
      swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v64, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v75 + 8))(v12, v76);
    }

    swift_unknownObjectRelease_n(a3, 2);
    v58 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
    v59 = v12;
  }
  return v58(v59, v6);
}

void sub_10038EF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Rename.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    v18 = sub_1000544FC(0x65526C65636E6163, 0xEE002928656D616ELL, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72, v13);
  if (Strong)
  {
    v16 = (_QWORD *)Strong;
    v17 = swift_unknownObjectWeakLoadStrong(v1 + 16, v15);
    swift_unknownObjectRelease(v17);
    if (v17)
      (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v16) + 0x3C8))(0, 0);

  }
}

double sub_10038F134(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t Strong;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  LODWORD(v3) = a1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Rename.unsafeMutableAddressor(v8);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v23 = (int)v3;
    v3 = (uint8_t *)v13;
    v14 = swift_slowAlloc(32, -1);
    v25 = v14;
    *(_DWORD *)v3 = 136315138;
    v24 = sub_1000544FC(0xD000000000000012, 0x8000000100516B10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s", v3, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    v15 = v3;
    LOBYTE(v3) = v23;
    swift_slowDealloc(v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = *(void **)(v2 + 32);
  if (v16)
    objc_msgSend(v16, "removeFromSuperview");
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v19 = Strong;
    v20 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v20 + 40))(v3 & 1, ObjectType, v20);
    *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
  }
  return result;
}

void sub_10038F324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  id v6;
  int IsHardwareKeyboardAttached;
  void *v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + 72, a2);
  if (Strong)
  {
    v15 = (char *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(v2 + 16, v4);
    swift_unknownObjectRelease(v5);
    if (v5)
    {
      if ((*(_BYTE *)(v2 + 40) & 1) != 0
        || (v6 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice"),
            IsHardwareKeyboardAttached = GSEventIsHardwareKeyboardAttached(),
            v6,
            IsHardwareKeyboardAttached))
      {
        v8 = v15;
        v9 = *(void **)&v15[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
        if (v9)
        {
          v10 = *(char **)(v2 + 64);
          swift_unknownObjectRetain(v10);
          v11 = v9;
          sub_100253974(v10, v12);
LABEL_11:
          swift_unknownObjectRelease(v10);

          v8 = v11;
        }
      }
      else
      {
        v8 = v15;
        v13 = *(void **)&v15[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
        if (v13)
        {
          v10 = *(char **)(v2 + 64);
          swift_unknownObjectRetain(v10);
          v11 = v13;
          sub_100253AF8(v10, v14);
          goto LABEL_11;
        }
      }
    }
    else
    {
      v8 = v15;
    }

  }
}

uint64_t DOCInlineRenameController.deinit()
{
  uint64_t v0;
  _BYTE v2[24];

  sub_10038F9A4();
  swift_beginAccess(v0 + 96, v2, 0, 0);
  if (*(double *)(v0 + 96) != 0.0)
    sub_1003903E0();
  sub_10008F5C0(v0 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectWeakDestroy(v0 + 72);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(*(_QWORD *)(v0 + 152));
  return v0;
}

uint64_t DOCInlineRenameController.__deallocating_deinit()
{
  uint64_t v0;

  DOCInlineRenameController.deinit();
  return swift_deallocClassInstance(v0, 160, 7);
}

void sub_10038F4F4(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t, _QWORD, uint64_t), uint64_t a6, void **a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;

  if (v8[19])
  {
    v14 = sub_10028A0E8();
    v15 = swift_allocError(&type metadata for FilenameValidationError, v14, 0, 0);
    *v16 = 1;
    a5(v15, 0, 256);
    swift_errorRelease(v15);
    v17 = swift_allocError(&type metadata for FilenameValidationError, v14, 0, 0);
    *v18 = 1;
LABEL_9:
    ((void (*)(void *, uint64_t))a7)(a1, v17);
    swift_errorRelease(v17);
    return;
  }
  v19 = v8;
  Strong = swift_unknownObjectWeakLoadStrong(v8 + 2);
  if (!Strong
    || (v23 = Strong,
        v24 = v19[3],
        ObjectType = swift_getObjectType(Strong),
        v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(ObjectType, v24),
        swift_unknownObjectRelease(v23),
        !v26))
  {
    v35 = sub_10028A0E8();
    v36 = swift_allocError(&type metadata for FilenameValidationError, v35, 0, 0);
    *v37 = 0;
    a5(v36, 0, 256);
    swift_errorRelease(v36);
    v17 = swift_allocError(&type metadata for FilenameValidationError, v35, 0, 0);
    *v38 = 0;
    goto LABEL_9;
  }
  v27 = type metadata accessor for DOCItemRenameOperation();
  v28 = (_QWORD *)swift_allocObject(v27, 40, 7);
  v28[3] = v26;
  v28[4] = 0;
  v28[2] = a1;
  v29 = v19[19];
  v19[19] = v28;
  v30 = a1;
  v31 = v26;
  swift_release(v29);
  v32 = v19[19];
  if (v32
    && (v33 = *(_QWORD *)(v32 + 32),
        *(_QWORD *)(v32 + 32) = v19[18],
        swift_retain(),
        swift_release(v33),
        (v34 = (_QWORD *)v19[19]) != 0))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1004A13FC(a2, a3, a4 & 1, a7, a8, v34, (uint64_t)v19, (uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))a5, a6);

    swift_release(v34);
    swift_release(v19);
    swift_release(a6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10038F74C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, __n128), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v32 = a4;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Rename.unsafeMutableAddressor(v15);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v29 = a2;
    v20 = swift_slowAlloc(12, -1);
    v30 = a6;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v31 = a5;
    v23 = v22;
    v34[0] = v22;
    HIDWORD(v28) = a3;
    *(_DWORD *)v21 = 136315138;
    v33 = sub_1000544FC(0xD000000000000049, 0x800000010052CC40, v34);
    a2 = v29;
    LOWORD(a3) = WORD2(v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s performItemRename completed", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v24 = v23;
    a5 = v31;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v25 = *(_QWORD *)(v32 + 152);
  *(_QWORD *)(v32 + 152) = 0;
  v26 = swift_release(v25);
  return a5(a1, a2, a3 & 0x1FF, v26);
}

uint64_t sub_10038F948(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v6 = result;
    sub_10038FAD8(a1, v5);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_10038F9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 80), 2);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    v9 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 80) = _swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v9);
  }
  if (v1 < 0)
    v8 = *(_QWORD *)(v0 + 80);
  else
    v8 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 80), 2);
  v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v2)
    goto LABEL_13;
LABEL_3:
  result = objc_opt_self(NSNotificationCenter);
  if (v2 >= 1)
  {
    v4 = (void *)result;
    v5 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v5 + 32);
        swift_unknownObjectRetain(v6);
      }
      ++v5;
      v7 = objc_msgSend(v4, "defaultCenter");
      objc_msgSend(v7, "removeObserver:", v6);
      swift_unknownObjectRelease(v6);

    }
    while (v2 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10038FAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *Strong;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  char v18;
  uint64_t v19;
  int8x16_t v21[3];
  __int128 v22;
  __int128 v23;

  v3 = v2;
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2 + 72, a2);
  if (Strong)
  {
    v5 = Strong[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];

    v6 = v5 ^ 1;
  }
  else
  {
    v6 = 0;
  }
  v7 = Notification.userInfo.getter();
  if (!v7)
  {
    v22 = 0u;
    v23 = 0u;
LABEL_15:
    sub_10007EB54((uint64_t)&v22);
    v16 = 0uLL;
    v18 = 1;
    v17 = 0uLL;
    goto LABEL_16;
  }
  v8 = v7;
  *(_QWORD *)&v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  *((_QWORD *)&v22 + 1) = v9;
  AnyHashable.init<A>(_:)(&v22, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_100067654((uint64_t)v21), (v11 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_100067748((uint64_t)v21);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_15;
  type metadata accessor for CGRect(0);
  v13 = swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, v12, 6);
  if (v13)
    v14 = -1;
  else
    v14 = 0;
  v15 = (int8x16_t)vdupq_n_s64(v14);
  v16 = vandq_s8(v21[0], v15);
  v17 = vandq_s8(v21[1], v15);
  v18 = v13 ^ 1;
LABEL_16:
  *(int8x16_t *)(v3 + 104) = v16;
  *(int8x16_t *)(v3 + 120) = v17;
  *(_BYTE *)(v3 + 136) = v18;
  v19 = Notification.userInfo.getter();
  sub_10038FF00(v19, v6 & 1);
  return swift_bridgeObjectRelease(v19);
}

double sub_10038FC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (Strong)
  {
    if (*((_BYTE *)Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming) == 1)
    {
      v21 = Strong;
      sub_1002700C0();

      return result;
    }

  }
  v8 = Logger.Rename.unsafeMutableAddressor(Strong);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  swift_retain_n(v1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = swift_slowAlloc(64, -1);
    v23 = v13;
    *(_DWORD *)v12 = 136315394;
    v22 = sub_1000544FC(0x764F706154646964, 0xEF292879616C7265, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    *(_WORD *)(v12 + 12) = 2080;
    v22 = v1;
    v14 = type metadata accessor for DOCInlineRenameController();
    swift_retain();
    v15 = String.init<A>(describing:)(&v22, v14);
    v17 = v16;
    v22 = sub_1000544FC(v15, v16, &v23);
    v18 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_release_n(v1, 2, v18);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s inline rename overlay view tapped but the rename text view was missing. Cancelling rename. Self: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2, v19);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_10038F134(0);
}

void sub_10038FF00(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double Height;
  uint64_t v33;
  void *v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  double v54;
  double v55;
  double v56;
  double v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74[3];
  double v75;
  double v76;
  double v77;
  double v78;
  CGRect v79;
  CGRect v80;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16, v8);
    if (Strong)
    {
      v13 = Strong;
      v14 = *(_QWORD *)(v2 + 24);
      ObjectType = swift_getObjectType(Strong, v12);
      v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14);
      if (!v16)
      {
        swift_unknownObjectRelease(v13);
        return;
      }
      v72 = v16;
      v17 = objc_msgSend(v16, "window");

      if (!v17)
      {
        swift_unknownObjectRelease(v13);

        return;
      }
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(ObjectType, v14) & 1) != 0)
      {
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_beginAccess(v3 + 96, &v75, 33, 0);
        objc_msgSend(v72, "doc_adjustForAutomaticKeyboardInfo:animated:lastAdjustment:", isa, 1, v3 + 96);
        swift_endAccess(&v75);

      }
      v20 = swift_unknownObjectWeakLoadStrong(v3 + 72, v18);
      if (v20)
      {
        v21 = (char *)v20;
        objc_msgSend(v72, "bounds");
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;
        objc_msgSend(v72, "adjustedContentInset");
        v79.origin.x = sub_10007EAFC(v23, v25, v27, v29, v30, v31);
        Height = CGRectGetHeight(v79);
        objc_msgSend(v21, "frame");
        if (Height < CGRectGetHeight(v80)
          && (v33 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView,
              (v34 = *(void **)&v21[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView]) != 0)
          && (a2 & 1) == 0)
        {
          v53 = v34;
          objc_msgSend(v53, "bounds");
          v58 = *(void **)&v21[v33];
          if (!v58)
          {
            __break(1u);
            return;
          }
          v59 = v54;
          v60 = v55;
          v61 = v56;
          v62 = v57;
          v63 = v58;
          objc_msgSend(v72, "convertRect:fromCoordinateSpace:", v63, v59, v60, v61, v62);
          v37 = v64;
          v39 = v65;
          v41 = v66;
          v68 = v67;

          v75 = v37;
          v76 = v39;
          v43 = v68 + 5.0;
          v77 = v41;
          v78 = v43;
        }
        else
        {
          v35 = objc_msgSend(v21, "frame");
          v37 = v36;
          v39 = v38;
          v41 = v40;
          v43 = v42;
          v75 = v36;
          v76 = v38;
          v77 = v40;
          v78 = v42;
        }
        v44 = Logger.Rename.unsafeMutableAddressor(v35);
        v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v44, v6);
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc(22, -1);
          v70 = swift_slowAlloc(64, -1);
          v74[0] = v70;
          *(_DWORD *)v48 = 136315394;
          v73 = sub_1000544FC(0xD000000000000023, 0x800000010052CC10, v74);
          v71 = v21;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
          *(_WORD *)(v48 + 12) = 2080;
          v49 = CGRect.debugDescription.getter(v37, v39, v41, v43);
          v51 = v50;
          v73 = sub_1000544FC(v49, v50, v74);
          v21 = v71;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
          swift_bridgeObjectRelease(v51);
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s rename cell frame: %s", (uint8_t *)v48, 0x16u);
          v52 = v70;
          swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v52, -1, -1);
          swift_slowDealloc(v48, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        swift_beginAccess(&v75, v74, 0, 0);
        objc_msgSend(v72, "scrollRectToVisible:animated:", 1, v75, v76, v77, v78);
        swift_unknownObjectRelease(v13);

      }
      else
      {
        swift_unknownObjectRelease(v13);
      }

    }
  }
}

void sub_1003903E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  void *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  CGFloat MinX;
  CGFloat Height;
  CGFloat v41;
  CGFloat Width;
  CGFloat v43;
  uint64_t v44;
  CGFloat *v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  Class isa;
  void *v49;
  void *v50;
  CGFloat v51;
  unint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;
  uint64_t v56[6];
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Rename.unsafeMutableAddressor(v6);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v56[0] = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)&v54 = sub_1000544FC(0xD000000000000019, 0x800000010052CCE0, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s restoring scroll view's offset", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong);
    v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(ObjectType, v15);
    if (v17)
    {
      v18 = v17;
      if ((*(_BYTE *)(v1 + 136) & 1) == 0)
      {
        v19 = *(double *)(v1 + 120);
        v51 = *(double *)(v1 + 128);
        v21 = *(double *)(v1 + 104);
        v20 = *(double *)(v1 + 112);
        v22 = objc_msgSend(v17, "window");
        if (v22)
        {
          v23 = v22;
          v24 = objc_msgSend(v22, "screen");
          objc_msgSend(v24, "bounds");
          v26 = v25;
          v28 = v27;
          v30 = v29;
          v32 = v31;

        }
        else
        {
          v23 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          objc_msgSend(v23, "bounds");
          v26 = v33;
          v28 = v34;
          v30 = v35;
          v32 = v36;
        }

        v37 = sub_1003F1838((uint64_t)_swiftEmptyArrayStorage);
        *(_QWORD *)&v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
        *((_QWORD *)&v54 + 1) = v38;
        AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String);
        v57.origin.x = v26;
        v57.origin.y = v28;
        v57.size.width = v30;
        v57.size.height = v32;
        MinX = CGRectGetMinX(v57);
        v58.origin.x = v26;
        v58.origin.y = v28;
        v58.size.width = v30;
        v58.size.height = v32;
        Height = CGRectGetHeight(v58);
        v59.origin.x = v21;
        v59.origin.y = v20;
        v59.size.width = v19;
        v41 = v51;
        v59.size.height = v51;
        Width = CGRectGetWidth(v59);
        v60.origin.x = v21;
        v60.origin.y = v20;
        v60.size.width = v19;
        v60.size.height = v41;
        v43 = CGRectGetHeight(v60);
        type metadata accessor for CGRect(0);
        v55 = v44;
        v45 = (CGFloat *)swift_allocObject(&unk_1005E3AA0, 48, 7);
        *(_QWORD *)&v54 = v45;
        v45[2] = MinX;
        v45[3] = Height;
        v45[4] = Width;
        v45[5] = v43;
        sub_100079B28(&v54, v53);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
        v52 = v37;
        sub_10035695C(v53, (uint64_t)v56, isUniquelyReferenced_nonNull_native);
        v47 = v52;
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_100067748((uint64_t)v56);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15) & 1) != 0)
        {
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v47);
          objc_msgSend(v18, "doc_adjustForAutomaticKeyboardInfo:animated:lastAdjustment:", isa, 1, v1 + 96, swift_beginAccess(v1 + 96, v56, 33, 0).n128_f64[0]);
          swift_endAccess(v56);

        }
        else
        {
          swift_bridgeObjectRelease(v47);
        }
        v49 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 72);
        if (v49)
        {
          v50 = v49;
          objc_msgSend(v49, "frame");
          objc_msgSend(v18, "scrollRectToVisible:animated:", 1);

        }
      }
      swift_unknownObjectRelease(v14);

    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
}

NSString sub_100390884()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.DOCInlineRenameControllerWillBeginRename = (uint64_t)result;
  return result;
}

id static NSNotificationName.DOCInlineRenameControllerWillBeginRename.getter()
{
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  return (id)static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
}

uint64_t type metadata accessor for DOCInlineRenameController()
{
  return objc_opt_self(_TtC5Files25DOCInlineRenameController);
}

uint64_t sub_100390918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;

  v8 = a4 + 16;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16);
  *(_QWORD *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  v9 = swift_unknownObjectWeakInit(a4 + 72);
  *(_QWORD *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(_BYTE *)(a4 + 136) = 1;
  *(_QWORD *)(a4 + 144) = 0;
  *(_QWORD *)(a4 + 152) = 0;
  *(_QWORD *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign(v9, a2);
  *(_QWORD *)(a4 + 24) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign(v8, a1);
  v10 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain(a3);
  v11 = objc_msgSend(v10, "initWithTarget:action:", a4, "didTapOverlay");
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 72, v13);
  swift_unknownObjectWeakAssign(&v12[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell], Strong);

  objc_msgSend(v12, "addGestureRecognizer:", v11);
  v15 = *(void **)(a4 + 32);
  *(_QWORD *)(a4 + 32) = v12;

  v16 = sub_10038C784();
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  v17 = static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
  v18 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, void (*)(uint64_t), _QWORD))(*(_QWORD *)v16 + 144))(v17, &v22, v18, sub_10038C844, 0);
  v20 = v19;
  swift_release(v16);

  swift_bridgeObjectRelease(v20);
  sub_10007EB54((uint64_t)&v22);
  return a4;
}

uint64_t sub_100390B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  void *Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;

  v8 = a4 + 16;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16);
  *(_QWORD *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  v9 = swift_unknownObjectWeakInit(a4 + 72);
  *(_QWORD *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(_BYTE *)(a4 + 136) = 1;
  *(_QWORD *)(a4 + 144) = 0;
  *(_QWORD *)(a4 + 152) = 0;
  *(_QWORD *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign(v9, a2);
  *(_QWORD *)(a4 + 24) = &off_1005F1018;
  swift_unknownObjectWeakAssign(v8, a1);
  v10 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain(a3);
  v11 = objc_msgSend(v10, "initWithTarget:action:", a4, "didTapOverlay");
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 72);
  swift_unknownObjectWeakAssign(&v12[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell], Strong);

  objc_msgSend(v12, "addGestureRecognizer:", v11);
  v14 = *(void **)(a4 + 32);
  *(_QWORD *)(a4 + 32) = v12;

  v15 = sub_10038C784();
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  v16 = static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
  v17 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, void (*)(uint64_t), _QWORD))(*(_QWORD *)v15 + 144))(v16, &v21, v17, sub_10038C844, 0);
  v19 = v18;
  swift_release(v15);

  swift_bridgeObjectRelease(v19);
  sub_10007EB54((uint64_t)&v21);
  return a4;
}

uint64_t sub_100390D68()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100390D8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100390DC8(void *a1)
{
  uint64_t v1;

  sub_10038DAB0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100390DDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100390E20()
{
  uint64_t v0;

  sub_10038DCF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100390E38()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_100390E6C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;

  sub_10038DF00(a1, a2, a3 & 0x1FF, *(_QWORD *)(v3 + 16), *(NSObject **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_100390E84()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100390EA8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10038E7E4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100390EB0(uint64_t a1)
{
  uint64_t v1;

  return sub_10038F948(a1, v1);
}

uint64_t sub_100390EB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100390ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  Swift::UInt64 v14;
  Swift::UInt64 v15;
  Swift::UInt64 v16;
  Swift::UInt64 v17;
  Swift::UInt64 v18;
  Swift::UInt64 v19;
  Swift::UInt64 v20;
  Swift::UInt64 v21;
  Swift::UInt64 v22;
  Swift::UInt64 v23;
  Swift::UInt64 v24;
  Swift::UInt64 v25;
  Swift::UInt64 v26;
  Swift::UInt64 v27;
  id v28;
  id v29;

  v2 = v1;
  v29 = *(id *)v2;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v6 = v5;
  v7 = v29;
  String.hash(into:)(a1, v4, v6);
  swift_bridgeObjectRelease(v6);
  sub_10007C390(&v29);
  Hasher._combine(_:)(*(_QWORD *)(v2 + 8));
  v28 = *(id *)(v2 + 16);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v10 = v9;
  v11 = v28;
  String.hash(into:)(a1, v8, v10);
  swift_bridgeObjectRelease(v10);
  sub_10007C390(&v28);
  Hasher._combine(_:)(*(_QWORD *)(v2 + 24));
  Hasher._combine(_:)(*(_QWORD *)(v2 + 32));
  Hasher._combine(_:)(*(_BYTE *)(v2 + 40) & 1);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 41) & 1);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 42) & 1);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_QWORD *)(v2 + 56);
  v14 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 72);
  v16 = *(_QWORD *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 88);
  v19 = *(_QWORD *)(v2 + 96);
  v18 = *(_QWORD *)(v2 + 104);
  if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v20 = v12;
  else
    v20 = 0;
  Hasher._combine(_:)(v20);
  if ((v13 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v21 = v13;
  else
    v21 = 0;
  Hasher._combine(_:)(v21);
  if ((v14 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v22 = v14;
  else
    v22 = 0;
  Hasher._combine(_:)(v22);
  if ((v15 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v23 = v15;
  else
    v23 = 0;
  Hasher._combine(_:)(v23);
  if ((v16 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v24 = v16;
  else
    v24 = 0;
  Hasher._combine(_:)(v24);
  if ((v17 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v25 = v17;
  else
    v25 = 0;
  Hasher._combine(_:)(v25);
  if ((v19 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v26 = v19;
  else
    v26 = 0;
  Hasher._combine(_:)(v26);
  if ((v18 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v27 = v18;
  else
    v27 = 0;
  Hasher._combine(_:)(v27);
}

BOOL sub_10039103C(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[7];
  _OWORD v14[7];

  v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  v3 = a1[6];
  v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  v6 = *a2;
  v7 = a2[1];
  v13[6] = v3;
  v14[0] = v6;
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  v11 = a2[4];
  v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_100391780((uint64_t)v13, (uint64_t)v14);
}

Swift::Int sub_1003910A0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100390ED8((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1003910E0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100390ED8((uint64_t)v2);
  return Hasher._finalize()();
}

void sub_100391118()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  Swift::UInt64 v11;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v0[1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v0[2];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v0[3];
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  v7 = v0[6];
  v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v0[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = v7;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v11 = v8;
  else
    v11 = 0;
  Hasher._combine(_:)(v11);
}

Swift::Int sub_1003911B8()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  Swift::UInt64 v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13, 0);
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v0[1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v0[2];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v0[3];
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  v7 = v0[6];
  v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v0[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = v7;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v11 = v8;
  else
    v11 = 0;
  Hasher._combine(_:)(v11);
  return Hasher._finalize()();
}

BOOL sub_100391290(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1003916FC((double *)v7, (double *)v8);
}

Swift::Int sub_1003912E0(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  Swift::UInt64 v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;
  Swift::UInt64 v14;
  Swift::UInt64 v15;
  Swift::UInt64 v16;
  Swift::UInt64 v17;
  _QWORD v19[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  Hasher.init(_seed:)(v19, a1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v10 = v2;
  else
    v10 = 0;
  Hasher._combine(_:)(v10);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v11 = v3;
  else
    v11 = 0;
  Hasher._combine(_:)(v11);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v12 = v4;
  else
    v12 = 0;
  Hasher._combine(_:)(v12);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v13 = v5;
  else
    v13 = 0;
  Hasher._combine(_:)(v13);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v14 = v6;
  else
    v14 = 0;
  Hasher._combine(_:)(v14);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v15 = v7;
  else
    v15 = 0;
  Hasher._combine(_:)(v15);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v16 = v8;
  else
    v16 = 0;
  Hasher._combine(_:)(v16);
  if ((v9 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v17 = v9;
  else
    v17 = 0;
  Hasher._combine(_:)(v17);
  return Hasher._finalize()();
}

BOOL static DOCUniformHorizontalEdgeInsets.__derived_struct_equals(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  _BOOL4 v6;

  v6 = a1 == a4;
  if (a2 != a5)
    v6 = 0;
  return a3 == a6 && v6;
}

void DOCUniformHorizontalEdgeInsets.hash(into:)(double a1, double a2, double a3)
{
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = *(_QWORD *)&a1;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)&a2;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v7 = *(_QWORD *)&a3;
  else
    v7 = 0;
  Hasher._combine(_:)(v7);
}

Swift::Int DOCUniformHorizontalEdgeInsets.hashValue.getter(double a1, double a2, double a3)
{
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  DOCUniformHorizontalEdgeInsets.hash(into:)(a1, a2, a3);
  return Hasher._finalize()();
}

Swift::Int sub_10039149C()
{
  double *v0;
  double v1;
  double v2;
  double v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  Hasher.init(_seed:)(v5, 0);
  DOCUniformHorizontalEdgeInsets.hash(into:)(v1, v2, v3);
  return Hasher._finalize()();
}

void sub_1003914FC()
{
  double *v0;

  DOCUniformHorizontalEdgeInsets.hash(into:)(*v0, v0[1], v0[2]);
}

Swift::Int sub_100391508(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;
  double v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  Hasher.init(_seed:)(v6, a1);
  DOCUniformHorizontalEdgeInsets.hash(into:)(v2, v3, v4);
  return Hasher._finalize()();
}

unint64_t sub_100391568()
{
  unint64_t result;

  result = qword_100650ED0;
  if (!qword_100650ED0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCUniformHorizontalEdgeInsets, &type metadata for DOCUniformHorizontalEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_100650ED0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUniformHorizontalEdgeInsets()
{
  return &type metadata for DOCUniformHorizontalEdgeInsets;
}

Swift::Int sub_1003915BC(double a1, double a2)
{
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)&a1;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = *(_QWORD *)&a2;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_100391628(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int sub_100391654()
{
  double *v0;

  return sub_1003915BC(*v0, v0[1]);
}

void sub_10039165C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;

  v1 = v0[1];
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v0;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1003916A0(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v7, a1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_1003916FC(double *a1, double *a2)
{
  _BOOL8 result;

  result = 0;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && a1[7] == a2[7])
  {
    return 1;
  }
  return result;
}

BOOL sub_100391780(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v4 = *(void **)a1;
  v24 = *(id *)a2;
  v25 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  if (v5 == v8 && v7 == v9)
  {
    sub_10007C3B8(&v25);
    sub_10007C3B8(&v24);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10007C390(&v24);
    sub_10007C390(&v25);
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    sub_10007C3B8(&v25);
    sub_10007C3B8(&v24);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    sub_10007C390(&v24);
    sub_10007C390(&v25);
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  v14 = *(void **)(a1 + 16);
  v22 = *(id *)(a2 + 16);
  v23 = v14;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v20 = v18;
  if (v15 == v19 && v17 == v18)
  {
    sub_10007C3B8(&v23);
    sub_10007C3B8(&v22);
    swift_bridgeObjectRelease_n(v17, 2);
    sub_10007C390(&v22);
    sub_10007C390(&v23);
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
    sub_10007C3B8(&v23);
    sub_10007C3B8(&v22);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v20);
    sub_10007C390(&v22);
    sub_10007C390(&v23);
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24)
    || *(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32)
    || ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) != 0)
  {
    return 0;
  }
  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 80) == *(double *)(a2 + 80))
  {
    return *(double *)(a1 + 88) == *(double *)(a2 + 88)
        && *(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104);
  }
  return result;
}

uint64_t _s14descr1005E3D29O4SpecV13LayoutMetricsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s14descr1005E3D29O4SpecV13LayoutMetricsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *_s14descr1005E3D29O4SpecV13LayoutMetricsVMa()
{
  return &_s14descr1005E3D29O4SpecV13LayoutMetricsVN;
}

ValueMetadata *type metadata accessor for DOCGridItemSpacing()
{
  return &type metadata for DOCGridItemSpacing;
}

uint64_t _s14descr1005E3D29O4SpecVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = v3;
  v9 = v5;
  return a1;
}

uint64_t _s14descr1005E3D29O4SpecVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t _s14descr1005E3D29O4SpecVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  return a1;
}

uint64_t _s14descr1005E3D29O4SpecVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1005E3D29O4SpecVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1005E3D29O4SpecVMa()
{
  return &_s14descr1005E3D29O4SpecVN;
}

unint64_t sub_100391CCC()
{
  unint64_t result;

  result = qword_100650ED8;
  if (!qword_100650ED8)
  {
    result = swift_getWitnessTable(&unk_1004E52C8, &_s14descr1005E3D29O4SpecVN);
    atomic_store(result, (unint64_t *)&qword_100650ED8);
  }
  return result;
}

unint64_t sub_100391D14()
{
  unint64_t result;

  result = qword_100650EE0;
  if (!qword_100650EE0)
  {
    result = swift_getWitnessTable(&unk_1004E5330, &type metadata for DOCGridItemSpacing);
    atomic_store(result, (unint64_t *)&qword_100650EE0);
  }
  return result;
}

unint64_t sub_100391D5C()
{
  unint64_t result;

  result = qword_100650EE8;
  if (!qword_100650EE8)
  {
    result = swift_getWitnessTable(&unk_1004E5398, &_s14descr1005E3D29O4SpecV13LayoutMetricsVN);
    atomic_store(result, (unint64_t *)&qword_100650EE8);
  }
  return result;
}

id sub_100391DA0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t ObjectType;
  id v6;
  id v7;
  id result;
  void *v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  void *object;
  NSString v14;
  id v15;
  uint64_t v16;
  objc_super v17;
  Swift::String v18;

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files12DOCSearchBar_configuration] = a1;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for DOCSearchBar();
  v6 = a1;
  v7 = objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = (id)_DocumentManagerBundle(v7);
  if (result)
  {
    v9 = result;
    v18._object = (void *)0x800000010052CD50;
    v10._countAndFlagsBits = 0x686372616553;
    v10._object = (void *)0xE600000000000000;
    v11.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v11.value._object = (void *)0xEB00000000656C62;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0xD000000000000022;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v18)._object;

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setPlaceholder:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

    if (objc_msgSend((id)objc_opt_self(UITraitCollection), "enclosingTabSwitcherCanBeFloating"))objc_msgSend(v7, "_setOverrideInlineInactiveWidth:", 1.79769313e308);
    v15 = v7;
    v16 = UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)(0, 1, sub_100392040, 0, ObjectType);
    swift_unknownObjectRelease(v16);

    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100391FCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSearchBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCSearchBar()
{
  return objc_opt_self(_TtC5Files12DOCSearchBar);
}

id sub_10039202C()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC5Files12DOCSearchBar_configuration);
}

id sub_100392040(void *a1)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UITraitCollection), "enclosingTabSwitcherCanBeFloating");
  if ((_DWORD)result)
    return objc_msgSend(a1, "_setOverrideInlineInactiveWidth:", 1.79769313e308);
  return result;
}

uint64_t sub_100392098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_10006922C(&qword_100651050);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 48))
  {
    v6 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_1004E5468);
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);
    swift_release(KeyPath);
    v8 = sub_1003924A4();
    v6 = Publisher.eraseToAnyPublisher()(v2, v8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 48) = v6;
    swift_retain();
    swift_release(v9);
  }
  swift_retain();
  return v6;
}

uint64_t sub_100392188()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

_QWORD *sub_1003921CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void **v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v8[3];

  v1 = v0;
  v0[2] = 0;
  v0[3] = 0;
  v8[0] = &_swiftEmptyDictionarySingleton;
  v2 = sub_10006922C(&qword_100651060);
  swift_allocObject(v2, 32, 7);
  v0[4] = DOCThreadSafeState.init(_:)(v8);
  v3 = (void **)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v3, v8, 0, 0);
  v4 = *v3;
  if (*v3)
  {
    v5 = *v3;
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v4 = 0;
  }
  v1[5] = v5;
  v1[6] = 0;
  v6 = v4;
  return v1;
}

void sub_100392354(char a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v3 = v2;
  v4 = objc_allocWithZone((Class)NSUserDefaults);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v6 = objc_msgSend(v4, "initWithSuiteName:", v5);

  if (v6)
  {
    objc_msgSend(v6, "setBool:forKey:", a1 & 1, DOCUserDefaultsForceShowFilenameExtensionsKey);

  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010052CEC0, "Files/DOCFileExtensionManager.swift", 35, 2, 153, 0);
    __break(1u);
  }
}

const char *sub_100392454()
{
  return "forceDisplayFilenameExtensions";
}

id sub_100392460@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "forceDisplayFilenameExtensions");
  *a2 = (_BYTE)result;
  return result;
}

id sub_100392490(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setForceDisplayFilenameExtensions:", *a1);
}

unint64_t sub_1003924A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100651058;
  if (!qword_100651058)
  {
    v1 = sub_10007E830(&qword_100651050);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100651058);
  }
  return result;
}

id sub_100392500()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell_Base();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCItemCollectionGridCell_Base()
{
  return objc_opt_self(_TtC5Files30DOCItemCollectionGridCell_Base);
}

uint64_t sub_100392550(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a6;
  v31 = a7;
  v29 = a5;
  v32 = a4;
  v34 = a2;
  v35 = a3;
  v33 = a1;
  v9 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v28 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.Placement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + qword_1006726F0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v9);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = (v14 + v18 + v17) & ~v18;
  v20 = v19 + v11;
  v21 = swift_allocObject(&unk_1005E4130, v19 + v11 + 1, v16 | v18 | 7);
  v22 = v31;
  *(_QWORD *)(v21 + 16) = v30;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21 + v17, v15, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21 + v19, v28, v9);
  *(_BYTE *)(v21 + v20) = v32;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v29, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v35, v9);
  *(_BYTE *)(v7 + 32) = 1;
  v23 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  v24 = type metadata accessor for UICellAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = v34;
  *(_QWORD *)(v7 + 16) = v33;
  *(_QWORD *)(v7 + 24) = v25;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BF340;
  *(_BYTE *)(v7 + 32) = 1;
  v26 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v7
                                                                 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v26 = sub_100399B60;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v21;
  return v7;
}

uint64_t sub_10039276C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a6;
  v31 = a7;
  v29 = a5;
  v32 = a4;
  v34 = a2;
  v35 = a3;
  v33 = a1;
  v9 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v28 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.Placement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + qword_1006726F0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v9);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = (v14 + v18 + v17) & ~v18;
  v20 = v19 + v11;
  v21 = swift_allocObject(&unk_1005E4068, v19 + v11 + 1, v16 | v18 | 7);
  v22 = v31;
  *(_QWORD *)(v21 + 16) = v30;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v21 + v17, v15, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21 + v19, v28, v9);
  *(_BYTE *)(v21 + v20) = v32;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v29, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v35, v9);
  *(_BYTE *)(v7 + 32) = 1;
  v23 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  v24 = type metadata accessor for UICellAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = v34;
  *(_QWORD *)(v7 + 16) = v33;
  *(_QWORD *)(v7 + 24) = v25;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BF370;
  *(_BYTE *)(v7 + 32) = 1;
  v26 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v7
                                                                 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v26 = sub_100399B38;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v21;
  return v7;
}

uint64_t sub_100392988(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a6;
  v32 = a7;
  v30 = a5;
  v33 = a4;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  v9 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v29 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.Placement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + qword_1006726F0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a5, v12, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v9);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v14 + v19 + v18) & ~v19;
  v21 = v20 + v11;
  v22 = swift_allocObject(&unk_1005E4248, v20 + v11 + 1, v17 | v19 | 7);
  v23 = v32;
  *(_QWORD *)(v22 + 16) = v31;
  *(_QWORD *)(v22 + 24) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22 + v18, v16, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v22 + v20, v29, v9);
  *(_BYTE *)(v22 + v21) = v33;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v30, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v36, v9);
  *(_BYTE *)(v7 + 32) = 1;
  v24 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  v25 = type metadata accessor for UICellAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = v35;
  *(_QWORD *)(v7 + 16) = v34;
  *(_QWORD *)(v7 + 24) = v26;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_1005BFA08;
  *(_BYTE *)(v7 + 32) = 1;
  v27 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v7
                                                                 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *v27 = sub_10039A044;
  v27[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v22;
  return v7;
}

uint64_t sub_100392BA4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void (*v26)(void);
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;

  v37 = a5;
  v35 = a4;
  v36 = a6;
  v32 = a3;
  v8 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.Placement(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v33 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void *)a2(v16);
  v20 = sub_10006922C(&qword_100651B40);
  v21 = swift_dynamicCastClassUnconditional(a1, v20, 0, 0, 0);
  v22 = qword_1006726F0;
  v23 = *(void **)(v21 + qword_1006726F0);
  *(_QWORD *)(v21 + qword_1006726F0) = v19;
  v24 = v19;
  swift_retain();

  (*(void (**)(id))(*(_QWORD *)v21 + 248))(v24);
  v25 = *(void **)(v21 + v22);
  if (v25)
  {
    v26 = *(void (**)(void))(*(_QWORD *)v21 + 256);
    v27 = v25;
    v26();

  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v32, v11);
  v28 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v10, v35, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v10, 0, 1, v28);
  v30 = v24;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)(v18);

  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v34);
}

uint64_t sub_100392DC8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t *a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;

  v35 = a5;
  v33 = a4;
  v34 = a7;
  v31 = a3;
  v10 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.Placement(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v17 = *(_QWORD *)(v32 - 8);
  v18 = __chkstk_darwin(v32);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)a2(v18);
  v22 = sub_10006922C(a6);
  v23 = swift_dynamicCastClassUnconditional(a1, v22, 0, 0, 0);
  v24 = *(void **)(v23 + qword_1006726F0);
  *(_QWORD *)(v23 + qword_1006726F0) = v21;
  v25 = v21;
  swift_retain();

  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v31, v13);
  v26 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, v33, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v12, 0, 1, v26);
  v28 = v25;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)(v20);

  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v32);
}

void sub_100392FB8(unsigned __int8 a1)
{
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[32];
  _BYTE v17[24];

  v2 = v1;
  v3 = *((unsigned __int8 *)v1 + qword_100651100);
  *((_BYTE *)v1 + qword_100651100) = a1;
  if (a1 == 2)
  {
    if (v3 != 2)
      sub_1003931C0(0xD000000000000013, 0x800000010052D540);
  }
  else if (v3 == 2 || ((((v3 & 1) == 0) ^ a1) & 1) == 0)
  {
    v4 = a1 & 1;
    v5 = sub_100396C28();
    *(_BYTE *)(v5 + qword_100651950) = v4;
    v6 = *(void **)(v5 + qword_1006726F0);
    if (v6)
      objc_msgSend(v6, "setOn:animated:", v4, 0);
    swift_release(v5);
    v7 = sub_100396C28();
    v8 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
    swift_beginAccess(v8, v17, 0, 0);
    v9 = *v8;
    swift_retain();
    v10 = swift_bridgeObjectRetain(v9);
    v11 = sub_100493AB4(v10, v7);
    swift_bridgeObjectRelease(v9);
    swift_release(v7);
    if ((v11 & 1) == 0)
    {
      swift_beginAccess(v8, v16, 33, 0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v13 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v14 >= v13 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
      v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v7);
      specialized Array._endMutation()(v15);
      swift_endAccess(v16);
      sub_100393368();
    }
    swift_release(v7);
  }
}

void sub_10039318C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

double sub_1003931C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v5 = (uint64_t)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78);
  swift_beginAccess(v5, v17, 0, 0);
  v6 = *(_QWORD *)v5;
  if (*(_QWORD *)v5 >> 62)
  {
    if (v6 < 0)
      v12 = *(_QWORD *)v5;
    else
      v12 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v5);
    v7 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_beginAccess(v5, v16, 33, 0);
  swift_bridgeObjectRetain(a2);
  v8 = sub_100399504((uint64_t *)v5, a1, a2);
  swift_bridgeObjectRelease(a2);
  v9 = *(_QWORD *)v5;
  if (!(*(_QWORD *)v5 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10 >= v8)
      goto LABEL_5;
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v9 < 0)
    v13 = *(_QWORD *)v5;
  else
    v13 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v5);
  v10 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v9);
  if (v10 < v8)
    goto LABEL_17;
LABEL_5:
  sub_10045BC00(v8, v10);
  swift_endAccess(v16);
  v5 = *(_QWORD *)v5;
  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) == v7)
      return result;
    goto LABEL_7;
  }
LABEL_18:
  if (v5 < 0)
    v14 = v5;
  else
    v14 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v15 = _CocoaArrayWrapper.endIndex.getter(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (v15 != v7)
LABEL_7:
    sub_100393368();
  return result;
}

uint64_t sub_100393368()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  _BYTE v57[24];
  unint64_t v58[3];
  char *v59;
  char v60[32];

  v1 = sub_10006922C(&qword_100645FB8);
  v2 = __chkstk_darwin(v1);
  v55 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v48 - v5;
  __chkstk_darwin(v4);
  v8 = (char *)&v48 - v7;
  v9 = type metadata accessor for UICellAccessory(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v56 = (char *)&v48 - v14;
  v15 = *((unsigned __int8 *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x70));
  v16 = objc_msgSend(v0, "traitCollection");
  v50 = (char *)objc_msgSend(v16, "sourceOutlineStyle");

  v17 = *(_QWORD *)((swift_isaMask & *v0) + 0x78);
  v49 = v0;
  v18 = (_QWORD *)((char *)v0 + v17);
  swift_beginAccess((char *)v0 + v17, v60, 0, 0);
  v19 = *v18;
  v20 = (char *)_swiftEmptyArrayStorage;
  v58[0] = (unint64_t)_swiftEmptyArrayStorage;
  v53 = v19;
  if ((unint64_t)v19 >> 62)
  {
LABEL_33:
    if (v19 < 0)
      v35 = v53;
    else
      v35 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v53);
    v36 = v35;
    v19 = v53;
    v21 = _CocoaArrayWrapper.endIndex.getter(v36);
    if (v21)
      goto LABEL_3;
  }
  else
  {
    v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v19);
    if (v21)
    {
LABEL_3:
      v48 = v6;
      v22 = 0;
      v54 = v19 & 0xC000000000000001;
      v51 = v19 + 32;
      v52 = v19 & 0xFFFFFFFFFFFFFF8;
      v20 = v50;
      v6 = (char *)v21;
      while (1)
      {
        if (v54)
        {
          v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v19);
          v24 = v23;
          v25 = __OFADD__(v22++, 1);
          if (v25)
            goto LABEL_30;
        }
        else
        {
          if ((unint64_t)v22 >= *(_QWORD *)(v52 + 16))
            goto LABEL_31;
          v24 = *(_QWORD *)(v51 + 8 * (_QWORD)v22);
          swift_retain();
          v25 = __OFADD__(v22++, 1);
          if (v25)
          {
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        if ((_DWORD)v15 && *(_BYTE *)(v24 + 32) == 1
          || (v26 = *(_QWORD **)(v24 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles),
              (v27 = v26[2]) == 0))
        {
LABEL_4:
          swift_release(v24);
        }
        else
        {
          if ((char *)v26[4] != v20)
          {
            if (v27 == 1)
              goto LABEL_18;
            if ((char *)v26[5] != v20)
            {
              if (v27 == 2)
                goto LABEL_18;
              if ((char *)v26[6] != v20)
              {
                if (v27 != 3)
                {
                  v32 = 7;
                  while (1)
                  {
                    v33 = v32 - 3;
                    if (__OFADD__(v32 - 4, 1))
                      goto LABEL_32;
                    if ((char *)v26[v32] == v20)
                      goto LABEL_16;
                    ++v32;
                    v19 = v53;
                    if (v33 == v27)
                      goto LABEL_4;
                  }
                }
LABEL_18:
                swift_release(v24);
                v19 = v53;
                goto LABEL_5;
              }
            }
          }
LABEL_16:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
          v28 = v15;
          v29 = *(_QWORD *)(v58[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
          v30 = v29;
          v15 = v28;
          v20 = v50;
          v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v24);
          specialized ContiguousArray._endMutation()(v31);
          v19 = v53;
        }
LABEL_5:
        if (v22 == v6)
        {
          swift_bridgeObjectRelease(v19);
          v34 = v58[0];
          v20 = (char *)_swiftEmptyArrayStorage;
          v6 = v48;
          if ((v58[0] & 0x8000000000000000) == 0)
            goto LABEL_38;
          goto LABEL_54;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v19);
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_54;
LABEL_38:
  if ((v34 & 0x4000000000000000) == 0)
  {
    v37 = *(_QWORD *)(v34 + 16);
    if (v37)
      goto LABEL_40;
LABEL_55:
    swift_release(v34);
    v44 = (char *)_swiftEmptyArrayStorage;
    return UICollectionViewListCell.accessories.setter(v44);
  }
LABEL_54:
  v47 = swift_bridgeObjectRetain(v34);
  v37 = _CocoaArrayWrapper.endIndex.getter(v47);
  swift_release(v34);
  if (!v37)
    goto LABEL_55;
LABEL_40:
  v59 = v20;
  result = sub_100155178(0, v37 & ~(v37 >> 63), 0);
  if ((v37 & 0x8000000000000000) == 0)
  {
    v39 = 0;
    v52 = v34 & 0xC000000000000001;
    v53 = v37;
    v54 = v34;
    do
    {
      if (v52)
      {
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v34);
      }
      else
      {
        v40 = *(_QWORD *)(v34 + 8 * v39 + 32);
        swift_retain();
      }
      v41 = v40 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
      swift_beginAccess(v40 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, v58, 0, 0);
      sub_1000271D4(v41, (uint64_t)v8, &qword_100645FB8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        (*(void (**)(uint64_t))(v40 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider))(v40);
        sub_10000CB4C((uint64_t)v8, &qword_100645FB8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v13, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      v42 = v55;
      sub_10032C4B0((uint64_t)v6, v55);
      swift_beginAccess(v41, v57, 33, 0);
      sub_10032C4F8(v42, v41);
      swift_endAccess(v57);
      v43 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v43(v56, v13, v9);
      swift_release(v40);
      v44 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
      {
        sub_100155178(0, *((_QWORD *)v44 + 2) + 1, 1);
        v44 = v59;
      }
      v46 = *((_QWORD *)v44 + 2);
      v45 = *((_QWORD *)v44 + 3);
      if (v46 >= v45 >> 1)
      {
        sub_100155178(v45 > 1, v46 + 1, 1);
        v44 = v59;
      }
      ++v39;
      *((_QWORD *)v44 + 2) = v46 + 1;
      v43(&v44[((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v46], v56, v9);
      v59 = v44;
      v34 = v54;
    }
    while (v53 != v39);
    swift_release(v54);
    return UICollectionViewListCell.accessories.setter(v44);
  }
  __break(1u);
  return result;
}

id sub_10039395C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  qword_100672D20 = (uint64_t)result;
  byte_100672D28 = 0;
  return result;
}

uint64_t sub_100393994()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  double v11;
  void (*v12)(_BYTE *, _QWORD);
  _BOOL8 v13;
  uint64_t (*v14)(_BYTE *, _QWORD);
  _BYTE v16[32];

  v1 = v0;
  if ((*(_BYTE *)(v0 + 24) & 1) != 0
    || (v3 = *(_QWORD *)v0, v2 = *(_QWORD *)(v0 + 8), String.count.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8)) < 1))
  {
    v2 = 0xE100000000000000;
    v3 = 32;
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
  UIListContentConfiguration.text.setter(v3, v2);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v16);
  UIListContentConfiguration.TextProperties.numberOfLines.setter(v4);
  v5(v16, 0);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain(v7);
  UIListContentConfiguration.secondaryText.setter(v6, v7);
  v8 = *(void **)(v1 + 56);
  v9 = v8;
  v10 = UIListContentConfiguration.image.setter(v8);
  v11 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v10);
  v12 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v16);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v11, v11);
  v12(v16, 0);
  v13 = (*(_BYTE *)(v1 + 48) & 1) == 0;
  v14 = (uint64_t (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v16);
  UIListContentConfiguration.ImageProperties.accessibilityIgnoresInvertColors.setter(v13);
  return v14(v16, 0);
}

double sub_100393AD4@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  sub_100399984((uint64_t)v5);
  v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  result = *(double *)&v6;
  v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

id sub_100393B1C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  double v7;
  int v8;
  uint64_t (**v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE v27[24];
  _OWORD v28[2];
  uint64_t v29;
  objc_super v30;
  objc_super v31;
  objc_super v32;
  objc_super v33;
  objc_super v34;
  objc_super v35;
  objc_super v36;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = sub_10006922C(&qword_10064A0A8);
  v3 = __chkstk_darwin(v2);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v37.receiver = v0;
  v37.super_class = ObjectType;
  objc_msgSendSuper2(&v37, "prepareForReuse", v3);
  v6 = &v0[qword_100651090];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakAssign(v6, 0);
  v8 = v0[qword_1006510E0];
  v0[qword_1006510E0] = 0;
  if (v8)
  {
    v9 = (uint64_t (**)(uint64_t))&v5[*(int *)(v2 + 48)];
    v10 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
    v11 = type metadata accessor for UICellAccessory.DisplayedState(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v5, v10, v11);
    *v9 = sub_100398CE8;
    v9[1] = 0;
    sub_10000CB4C((uint64_t)v5, &qword_10064A0A8);
    v12 = *(_QWORD *)&v0[qword_1006510D8];
    *(_QWORD *)&v0[qword_1006510D8] = 0;
    sub_100396928(v12);
    *(_QWORD *)&v7 = swift_release(v12).n128_u64[0];
  }
  v36.receiver = v0;
  v36.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v36, "isEditing", v7);
  v35.receiver = v0;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "setEditing:", 0);
  v34.receiver = v0;
  v34.super_class = ObjectType;
  if (v13 != objc_msgSendSuper2(&v34, "isEditing"))
  {
    v33.receiver = v0;
    v33.super_class = ObjectType;
    v14 = objc_msgSendSuper2(&v33, "isEditing");
    sub_10039742C(0, v15);
    v17 = *(void **)&v0[qword_1006510B8];
    if (v17)
      objc_msgSend(v17, "setUserInteractionEnabled:", v14);
    sub_100397170((char)v14, v16);
  }
  v32.receiver = v0;
  v32.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v32, "isSelected");
  v31.receiver = v0;
  v31.super_class = ObjectType;
  objc_msgSendSuper2(&v31, "setSelected:", 0);
  v30.receiver = v0;
  v30.super_class = ObjectType;
  if (v18 != objc_msgSendSuper2(&v30, "isSelected"))
    objc_msgSend(v0, "setNeedsUpdateConfiguration");
  v19 = v0[qword_100651100];
  v0[qword_100651100] = 2;
  if (v19 != 2)
    sub_1003931C0(0xD000000000000013, 0x800000010052D540);
  v0[qword_100651098] = 0;
  v0[qword_1006510A0] = 0;
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  v20 = (uint64_t)&v0[qword_1006510A8];
  swift_beginAccess(&v0[qword_1006510A8], v27, 33, 0);
  sub_10039A0E4((uint64_t)v28, v20, &qword_100651B58);
  swift_endAccess(v27);
  sub_100394218();
  sub_10000CB4C((uint64_t)v28, &qword_100651B58);
  v21 = *(void **)&v0[qword_1006510B0];
  *(_QWORD *)&v0[qword_1006510B0] = 0;

  sub_100393F0C(0);
  sub_100393FD8(0);
  v22 = *(_QWORD *)&v0[qword_1006510F8];
  *(_QWORD *)&v0[qword_1006510F8] = 0;
  swift_release(v22);
  sub_10039742C(0, v23);
  v24 = *(void **)&v0[qword_1006510B8];
  if (v24)
    objc_msgSend(v24, "setHidden:", 1);
  return objc_msgSend(v0, "setUserInteractionEnabled:", 1);
}

void sub_100393E40(char a1)
{
  char *v1;
  objc_class *ObjectType;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_super v9;
  objc_super v10;
  objc_super v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v12, "isEditing");
  v11.receiver = v1;
  v11.super_class = ObjectType;
  objc_msgSendSuper2(&v11, "setEditing:", a1 & 1);
  v10.receiver = v1;
  v10.super_class = ObjectType;
  if (v4 != objc_msgSendSuper2(&v10, "isEditing"))
  {
    v9.receiver = v1;
    v9.super_class = ObjectType;
    v5 = objc_msgSendSuper2(&v9, "isEditing");
    sub_10039742C(0, v6);
    v8 = *(void **)&v1[qword_1006510B8];
    if (v8)
      objc_msgSend(v8, "setUserInteractionEnabled:", v5);
    sub_100397170((char)v5, v7);
  }
}

void sub_100393F0C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v7;
  char v8;
  char *v9;

  v2 = v1;
  v3 = a1;
  v4 = qword_1006510E8;
  v5 = *(void **)(v2 + qword_1006510E8);
  *(_QWORD *)(v2 + qword_1006510E8) = a1;
  v9 = a1;
  if (!v3)
  {
    if (!v5)
    {
LABEL_8:
      v6 = v5;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (!v5)
  {
LABEL_5:
    swift_unknownObjectWeakAssign(&v3[OBJC_IVAR____TtC5Files21DOCEjectionController_delegate], v2);
    goto LABEL_7;
  }
  type metadata accessor for DOCEjectionController();
  v6 = v5;
  v7 = v9;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
  {
    v3 = *(char **)(v2 + v4);
    if (v3)
      goto LABEL_5;
LABEL_7:
    sub_100396B48();
    goto LABEL_8;
  }
LABEL_9:

}

void sub_100393FD8(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = *(void **)&v2[qword_1006510F0];
  *(_QWORD *)&v2[qword_1006510F0] = a1;
  v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    objc_msgSend(v2, "setNeedsUpdateConfiguration");
    goto LABEL_7;
  }
  if (!v4)
    goto LABEL_6;
  type metadata accessor for DOCEjectButton(0);
  v5 = v4;
  v6 = v8;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  if ((v7 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

void sub_10039408C(void *a1)
{
  id v1;

  v1 = a1;
  sub_100393B1C();

}

void sub_1003940C0(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = type metadata accessor for UICellConfigurationState(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, "traitCollectionDidChange:", a1, v7);
  sub_100394218();
  v10 = objc_msgSend(v2, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v10);

  sub_100394470((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_100394B28();
  v11 = objc_msgSend(v2, "traitCollection", sub_100394E64());
  v12 = sub_10023B9F4(&off_1005C0B38);
  v14 = v13;
  swift_arrayDestroy(&unk_1005C0B58, 1, &_s6TraitsVN);
  LOBYTE(a1) = sub_10000BE74(v12, a1);
  swift_bridgeObjectRelease(v14);

  if ((a1 & 1) != 0)
    sub_100398538();
}

void sub_100394218()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  id v6;
  Class v7;
  Class v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  char v20[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = static CGSize.doc_preferredSourceListIconSize(for:)();
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "unspecifiedConfiguration");

  v7 = sub_100365B04();
  if (v7)
    goto LABEL_2;
  v8 = (Class)objc_msgSend(v1, "tintColor");
  if (!v8)
  {
    v7 = (Class)objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
LABEL_2:
    v8 = v7;
  }
  v9 = (uint64_t)&v1[qword_1006510A8];
  swift_beginAccess(&v1[qword_1006510A8], v20, 0, 0);
  if (*(_QWORD *)(v9 + 24))
  {
    sub_100092328(v9, (uint64_t)v17);
    v10 = v18;
    v11 = v19;
    sub_10007E7A0(v17, v18);
    v12 = (void *)(*(uint64_t (**)(id, char *, Class, uint64_t, uint64_t, double, double, double))(v11 + 8))(v6, v1, v8, v10, v11, v3, v5, -12.0);
    v13 = (id)sub_100068588(v17);
  }
  else
  {
    if (qword_1006410B0 != -1)
      swift_once(&qword_1006410B0, sub_10039395C);
    v13 = (id)qword_100672D20;
    v12 = v13;
  }
  __chkstk_darwin(v13);
  v14 = objc_msgSend(v1, "window");
  v15 = v14;
  if (v14)

  v16 = __chkstk_darwin(v15 == 0);
  UIView.doc_performBlock(allowingAnimations:block:)(v16, sub_10039A158);

}

void sub_100394470(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  _UNKNOWN **v21;
  void *v22;
  id v23;
  id v24;
  char v25;
  id v26;
  uint64_t v27;
  uint64_t (**v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __n128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  Class isa;
  char *v63;
  void *v64;
  objc_class *v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[6];
  char v82[32];

  v2 = v1;
  v80 = a1;
  v3 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  __chkstk_darwin(v3);
  v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C((uint64_t *)&unk_100651B60);
  __chkstk_darwin(v5);
  v78 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIListContentConfiguration(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v68 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for UIButton.Configuration.Size(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v73 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UICellAccessory.Placement(0);
  v11 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = qword_1006510F0;
  v19 = *(void **)((char *)v2 + qword_1006510F0);
  if (v19)
  {
    v75 = v8;
    v76 = v7;
    v67 = qword_1006510F8;
    v20 = *(_QWORD *)((char *)v2 + qword_1006510F8);
    v21 = &off_100651000;
    if (v20)
    {
      v22 = *(void **)(v20 + qword_1006517D0);
      type metadata accessor for DOCEjectButton(0);
      v23 = v19;
      v24 = v22;
      v25 = static NSObject.== infix(_:_:)(v24, v23);

      v21 = &off_100651000;
      if ((v25 & 1) != 0)
      {

LABEL_7:
        v8 = v75;
        v7 = v76;
        goto LABEL_8;
      }
    }
    else
    {
      v26 = v19;
    }
    v27 = type metadata accessor for DOCSidebarItemCell.EjectAccessoryItem(0);
    *(_QWORD *)((char *)v21[250] + swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52))) = v19;
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v18, enum case for UICellAccessory.LayoutDimension.actual(_:), v14);
    v28 = (uint64_t (**)())&v13[*(int *)(sub_10006922C(&qword_10064A0A8) + 48)];
    v29 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
    v30 = type metadata accessor for UICellAccessory.DisplayedState(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v13, v29, v30);
    *v28 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v28[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for UICellAccessory.Placement.trailing(_:), v79);
    v31 = swift_allocObject(&unk_1005E4220, 24, 7);
    *(_QWORD *)(v31 + 16) = v19;
    v32 = v19;
    v33 = sub_100392988(0x7463656A65, 0xE500000000000000, (uint64_t)v18, 1, (uint64_t)v13, (uint64_t)sub_10010DF40, v31);
    v34 = *(_QWORD *)((char *)v2 + v67);
    *(_QWORD *)((char *)v2 + v67) = v33;
    swift_release(v34);
    sub_1003931C0(0x7463656A65, 0xE500000000000000);

    goto LABEL_7;
  }
LABEL_8:
  v35 = v8;
  v36 = objc_msgSend(v2, "traitCollection", v16, v67);
  v37 = objc_msgSend(v36, "sourceOutlineStyle");

  v39 = UICellConfigurationState.isSelected.getter(v38);
  v40 = *(_QWORD *)((char *)v2 + qword_1006510F8);
  if (!v40 || !(v39 & 1 | (v37 == (id)1)))
  {
    sub_1003931C0(0x7463656A65, 0xE500000000000000);
    return;
  }
  v41 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess(v41, v82, 0, 0);
  v42 = *v41;
  swift_retain_n(v40, 2);
  swift_bridgeObjectRetain(v42);
  v44 = sub_100493AB4(v43, v40);
  swift_bridgeObjectRelease(v42);
  v45 = swift_release(v40);
  if ((v44 & 1) == 0)
  {
    swift_beginAccess(v41, v81, 33, 0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
    v48 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v47 = *(_QWORD *)((*v41 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v48 >= v47 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
    v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v40);
    specialized Array._endMutation()(v49);
    swift_endAccess(v81);
    sub_100393368();
  }
  v50 = *(void **)((char *)v2 + v77);
  if (v50)
  {
    v51 = (uint64_t)v73;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v72 + 104))(v73, enum case for UIButton.Configuration.Size.medium(_:), v74, v45);
    v52 = v50;
    sub_1002603F0(v51);

  }
  v53 = (Class)objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  UICollectionViewCell.contentConfiguration.getter(v81, v53);
  if (!v81[3])
  {
    sub_10000CB4C((uint64_t)v81, &qword_100651B70);
    v55 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v78, 1, 1, v7);
    goto LABEL_21;
  }
  v54 = sub_10006922C(&qword_10064FFD0);
  v55 = (uint64_t)v78;
  v56 = swift_dynamicCast(v78, v81, v54, v7, 6);
  v57 = v35;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v55, v56 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v55, 1, v7) == 1)
  {
LABEL_21:

    sub_10000CB4C(v55, (uint64_t *)&unk_100651B60);
    goto LABEL_22;
  }
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 32);
  v59 = v68;
  v60 = v58(v68, v55, v7);
  v61 = v69;
  UIListContentConfiguration.imageProperties.getter(v60);
  isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)v53).super.isa;

  (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v71);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v7);
  v53 = isa;
LABEL_22:
  v63 = *(char **)(v40 + qword_1006517D0);
  v64 = *(void **)&v63[OBJC_IVAR____TtC5Files14DOCEjectButton_color];
  *(_QWORD *)&v63[OBJC_IVAR____TtC5Files14DOCEjectButton_color] = v53;
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v65 = v53;
  v66 = static NSObject.== infix(_:_:)(v65, v64);

  if ((v66 & 1) == 0)
    objc_msgSend(v63, "setNeedsUpdateConfiguration");
  swift_release(v40);

}

double sub_100394B28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[6];
  _BYTE v34[24];

  v1 = sub_10006922C((uint64_t *)&unk_100651B60);
  __chkstk_darwin(v1);
  v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10006922C(&qword_10064B4F8);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v32[-v8];
  v10 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78));
  swift_beginAccess(v10, v34, 0, 0);
  v11 = *v10;
  swift_bridgeObjectRetain(v11);
  v13 = sub_10039985C(v12, 0xD000000000000013, 0x800000010052D4D0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v13)
  {
    v15 = type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
    v16 = swift_dynamicCastClass(v13, v15);
    if (!v16)
    {
LABEL_9:
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
      return result;
    }
    v17 = v16;
    v18 = qword_1006514E0;
    v19 = *(id *)(v16 + qword_1006514E0);
    v20 = sub_100365B04();
    sub_1002923B8(v20);

    v21 = *(_QWORD *)(v17 + v18);
    UICollectionViewCell.contentConfiguration.getter(v33, v22);
    if (v33[3])
    {
      v23 = sub_10006922C(&qword_10064FFD0);
      v24 = type metadata accessor for UIListContentConfiguration(0);
      v25 = swift_dynamicCast(v3, v33, v23, v24, 6);
      v26 = *(_QWORD *)(v24 - 8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v3, v25 ^ 1u, 1, v24);
      v27 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v3, 1, v24);
      if ((_DWORD)v27 != 1)
      {
        UIListContentConfiguration.imageProperties.getter(v27);
        (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v3, v24);
        v28 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
LABEL_8:
        v31 = v21 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties;
        swift_beginAccess(v21 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties, v33, 0, 0);
        sub_1000271D4(v31, (uint64_t)v6, &qword_10064B4F8);
        swift_beginAccess(v31, v32, 33, 0);
        sub_10039A0E4((uint64_t)v9, v31, &qword_10064B4F8);
        swift_endAccess(v32);
        sub_1002924B4((uint64_t)v6);
        sub_10000CB4C((uint64_t)v9, &qword_10064B4F8);
        sub_10000CB4C((uint64_t)v6, &qword_10064B4F8);
        goto LABEL_9;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v33, &qword_100651B70);
      v29 = type metadata accessor for UIListContentConfiguration(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v3, 1, 1, v29);
    }
    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_100651B60);
    v30 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    goto LABEL_8;
  }
  return result;
}

double sub_100394E64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[6];
  _BYTE v34[24];

  v1 = sub_10006922C((uint64_t *)&unk_100651B60);
  __chkstk_darwin(v1);
  v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10006922C(&qword_10064B4F8);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v32[-v8];
  v10 = (_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78));
  swift_beginAccess(v10, v34, 0, 0);
  v11 = *v10;
  swift_bridgeObjectRetain(v11);
  v13 = sub_10039985C(v12, 0xD000000000000015, 0x800000010052D4B0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v13)
  {
    v15 = type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
    v16 = swift_dynamicCastClass(v13, v15);
    if (!v16)
    {
LABEL_9:
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
      return result;
    }
    v17 = v16;
    v18 = qword_100651658;
    v19 = *(id *)(v16 + qword_100651658);
    v20 = sub_100365B04();
    sub_1004A1F68(v20);

    v21 = *(_QWORD *)(v17 + v18);
    UICollectionViewCell.contentConfiguration.getter(v33, v22);
    if (v33[3])
    {
      v23 = sub_10006922C(&qword_10064FFD0);
      v24 = type metadata accessor for UIListContentConfiguration(0);
      v25 = swift_dynamicCast(v3, v33, v23, v24, 6);
      v26 = *(_QWORD *)(v24 - 8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v3, v25 ^ 1u, 1, v24);
      v27 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v3, 1, v24);
      if ((_DWORD)v27 != 1)
      {
        UIListContentConfiguration.imageProperties.getter(v27);
        (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v3, v24);
        v28 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
LABEL_8:
        v31 = v21 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties;
        swift_beginAccess(v21 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties, v33, 0, 0);
        sub_1000271D4(v31, (uint64_t)v6, &qword_10064B4F8);
        swift_beginAccess(v31, v32, 33, 0);
        sub_10039A0E4((uint64_t)v9, v31, &qword_10064B4F8);
        swift_endAccess(v32);
        sub_1004A2064((uint64_t)v6);
        sub_10000CB4C((uint64_t)v9, &qword_10064B4F8);
        sub_10000CB4C((uint64_t)v6, &qword_10064B4F8);
        goto LABEL_9;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v33, &qword_100651B70);
      v29 = type metadata accessor for UIListContentConfiguration(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v3, 1, 1, v29);
    }
    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_100651B60);
    v30 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    goto LABEL_8;
  }
  return result;
}

void sub_1003951A0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1003940C0(a3);

}

uint64_t sub_1003951F8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  Class isa;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v6 = type metadata accessor for UICellConfigurationState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v10 = a1;
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v13.receiver = v10;
  v13.super_class = ObjectType;
  objc_msgSendSuper2(&v13, "_bridgedUpdateConfigurationUsingState:", isa);

  sub_100394218();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1003952C8(double a1, double a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_100398FCC(*(void **)(*(_QWORD *)v4 + 16), *(_BYTE *)(*(_QWORD *)v4 + 24), a4, a1, a2);
}

uint64_t sub_1003952DC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 25, 7);
}

id sub_100395300(double a1, double a2, double a3, uint64_t a4, void *a5)
{
  return sub_100398E78(a5, a1, a3);
}

void sub_10039532C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t ObjCClassMetadata;
  void *ObjCClassFromMetadata;
  uint64_t v14;
  NSString v15;
  NSString v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;

  v5 = sub_10006922C((uint64_t *)&unk_100651B48);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a1;
  v22 = a2;
  v8 = objc_msgSend(v2, "window");
  v9 = v8;
  if (v8)

  v10 = __chkstk_darwin(v9 == 0);
  *(_QWORD *)&v20[-32] = sub_100399BE8;
  *(_QWORD *)&v20[-24] = v20;
  *(_QWORD *)&v20[-16] = v2;
  UIView.doc_performBlock(allowingAnimations:block:)(v10, sub_100399C34);
  swift_bridgeObjectRelease(a2);
  sub_1003954E4();
  v11 = objc_msgSend((id)objc_opt_self(DOCAXIdentifier), "sidebar");
  ObjCClassMetadata = swift_getObjCClassMetadata(v11);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(ObjCClassMetadata);
  sub_10048E058(v7);
  v14 = *(_QWORD *)&v7[*(int *)(v5 + 40) + 8];
  swift_bridgeObjectRetain(v14);
  sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100651B48);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(ObjCClassFromMetadata, "itemWithTitle:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v19).n128_u64[0];
  }
  objc_msgSend(v2, "setAccessibilityIdentifier:", v16, v17);

}

void sub_1003954E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  unint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  NSString v26;
  uint64_t v27;

  v1 = sub_10006922C((uint64_t *)&unk_100651B48);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039742C(0, v4);
  v5 = *(void **)(v0 + qword_1006510B8);
  if (!v5)
    return;
  v6 = v5;
  sub_10048E058(v3);
  v7 = (uint64_t *)&v3[*(int *)(v1 + 40)];
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain(v8);
  sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_100651B48);
  v10 = objc_msgSend(v6, "text");
  if (!v10)
    goto LABEL_8;
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;

  if (v12 == v9 && v14 == v8)
  {
    v17 = swift_bridgeObjectRelease(v8).n128_u64[0];
    goto LABEL_10;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v9, v8, 0);
  v17 = swift_bridgeObjectRelease(v14).n128_u64[0];
  if ((v16 & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain(v8);
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setText:", v18, swift_bridgeObjectRelease(v8).n128_f64[0]);

  }
LABEL_10:
  v19 = objc_msgSend(v6, "placeholder", *(double *)&v17);
  if (!v19)
    goto LABEL_17;
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v23 = v22;

  if (v21 != v9 || v23 != v8)
  {
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v9, v8, 0);
    swift_bridgeObjectRelease(v23);
    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRelease(v8);
LABEL_18:

      return;
    }
LABEL_17:
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setPlaceholder:", v26, swift_bridgeObjectRelease(v8).n128_f64[0]);

    goto LABEL_18;
  }

  swift_bridgeObjectRelease_n(v8, 2);
}

uint64_t sub_1003956F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain(a3);
  result = swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 32) = a2;
  *(_QWORD *)(a1 + 40) = a3;
  return result;
}

double sub_10039573C(uint64_t a1)
{
  sub_100394470(a1);
  sub_100394B28();
  return sub_100394E64();
}

void sub_100395754(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;
  _BYTE v39[24];

  v2 = v1;
  v4 = qword_1006510C8;
  v5 = *(void **)((char *)v2 + qword_1006510C8);
  if (v5)
  {
    if (!a1)
      goto LABEL_5;
    sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
    v6 = a1;
    v7 = v5;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      return;
    v5 = *(void **)((char *)v2 + v4);
    if (v5)
    {
LABEL_5:
      v9 = type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
      swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
      v10 = v5;
      v11 = sub_100395B8C(v10);
      v12 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
      v37 = sub_100399B4C;
      v38 = v11;
      v33 = _NSConcreteStackBlock;
      v34 = 1107296256;
      v35 = sub_10004A82C;
      v36 = &unk_1005E40A8;
      v13 = _Block_copy(&v33);
      v14 = v38;
      swift_retain();
      swift_release(v14);
      objc_msgSend(v12, "performAfterLaunch:", v13);
      _Block_release(v13);

      v15 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
      swift_beginAccess(v15, &v33, 0, 0);
      v16 = *v15;
      swift_retain();
      v17 = swift_bridgeObjectRetain(v16);
      LOBYTE(v13) = sub_100493AB4(v17, v11);
      swift_bridgeObjectRelease(v16);
      swift_release(v11);
      if ((v13 & 1) == 0)
      {
        swift_beginAccess(v15, v39, 33, 0);
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v20 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v11);
        specialized Array._endMutation()(v21);
        swift_endAccess(v39);
        sub_100393368();
      }

      v22 = v11;
      goto LABEL_15;
    }
  }
  else if (!a1)
  {
    return;
  }
  v23 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess(v23, v39, 0, 0);
  v24 = *v23;
  v25 = swift_bridgeObjectRetain(v24);
  v26 = sub_10039985C(v25, 0xD000000000000013, 0x800000010052D4D0);
  swift_bridgeObjectRelease(v24);
  if (!v26)
    return;
  v27 = type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
  v28 = swift_dynamicCastClass(v26, v27);
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
    v37 = sub_100399B44;
    v38 = v29;
    v33 = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_10004A82C;
    v36 = &unk_1005E4080;
    v31 = _Block_copy(&v33);
    v32 = v38;
    swift_retain();
    swift_release(v32);
    objc_msgSend(v30, "performAfterLaunch:", v31);
    _Block_release(v31);

    sub_1003931C0(*(_QWORD *)(v29 + 16), *(_QWORD *)(v29 + 24));
  }
  v22 = v26;
LABEL_15:
  swift_release(v22);
}

uint64_t sub_100395AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + qword_1006514E0);
  v2 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel);
  *(_QWORD *)(v3 + 24) = &off_1005D7C60;
  swift_unknownObjectWeakAssign(v3 + 16, v1);
  v4 = *(_QWORD *)(v1 + v2);
  swift_retain();
  sub_100293BB8();
  return swift_release(v4);
}

uint64_t sub_100395B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + qword_1006514E0);
  v2 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel);
  swift_retain();
  sub_100293CB8();
  swift_release(v3);
  v4 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v4 + 24) = 0;
  return swift_unknownObjectWeakAssign(v4 + 16, 0);
}

uint64_t sub_100395B8C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t (**v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.Placement(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel();
  swift_allocObject(v11, 89, 7);
  swift_retain();
  v12 = a1;
  v13 = sub_1002935C4(v12);
  v14 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView(0));
  swift_retain();
  v16 = sub_1002922C0(v15);
  *(_QWORD *)(v2 + qword_1006514E0) = v16;
  v17 = v16;
  swift_release(v2);
  v18 = (uint64_t (**)())&v10[*(int *)(sub_10006922C(&qword_10064A0A8) + 48)];
  v19 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
  v20 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v10, v19, v20);
  *v18 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v18[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UICellAccessory.Placement.trailing(_:), v7);
  v21 = swift_allocObject(&unk_1005E40E0, 24, 7);
  *(_QWORD *)(v21 + 16) = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v6, enum case for UICellAccessory.LayoutDimension.actual(_:), v26);
  v22 = v17;
  v23 = sub_10039276C(0xD000000000000013, 0x800000010052D4D0, (uint64_t)v6, 2, (uint64_t)v10, (uint64_t)sub_10010DF40, v21);

  swift_release(v13);
  return v23;
}

void sub_100395DA8()
{
  uint64_t v0;

}

uint64_t sub_100395DB8()
{
  return sub_100396540(&qword_1006514E0);
}

void sub_100395DC4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  void (*v47)();
  uint64_t v48;
  char v49[24];

  v2 = v1;
  v4 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess(v4, v49, 0, 0);
  v5 = *v4;
  v6 = swift_bridgeObjectRetain(*v4);
  v7 = sub_10039985C(v6, 0xD000000000000015, 0x800000010052D4B0);
  swift_bridgeObjectRelease(v5);
  v8 = qword_1006510D0;
  v9 = *(void **)((char *)v2 + qword_1006510D0);
  if (!v9)
  {
    if (a1)
      goto LABEL_17;
    goto LABEL_21;
  }
  if (!a1)
    goto LABEL_10;
  sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
  v10 = a1;
  v11 = v9;
  v12 = static NSObject.== infix(_:_:)(v11, v10);

  v9 = *(void **)((char *)v2 + v8);
  if ((v12 & 1) != 0)
  {
    if (v9 && !v7)
      goto LABEL_10;
LABEL_21:
    swift_release(v7);
    return;
  }
  if (!v9)
    goto LABEL_17;
LABEL_10:
  v13 = v9;
  v14 = *(_QWORD *)DOCUSBFormatting.shared.unsafeMutableAddressor(v13);
  v15 = objc_msgSend(v13, "identifier", swift_retain().n128_f64[0]);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v14 + 160))(v16, v18);
  swift_release(v14);
  swift_bridgeObjectRelease(v18);

  if (!v19)
  {

LABEL_17:
    v34 = *v4;
    v35 = swift_bridgeObjectRetain(*v4);
    v36 = sub_10039985C(v35, 0xD000000000000015, 0x800000010052D4B0);
    swift_bridgeObjectRelease(v34);
    if (v36)
    {
      v37 = type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
      v38 = swift_dynamicCastClass(v36, v37);
      if (v38)
      {
        v39 = v38;
        v40 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
        v47 = sub_100399A6C;
        v48 = v39;
        v43 = _NSConcreteStackBlock;
        v44 = 1107296256;
        v45 = sub_10004A82C;
        v46 = &unk_1005E3FB8;
        v41 = _Block_copy(&v43);
        v42 = v48;
        swift_retain();
        swift_release(v42);
        objc_msgSend(v40, "performAfterLaunch:", v41);
        _Block_release(v41);

        sub_1003931C0(*(_QWORD *)(v39 + 16), *(_QWORD *)(v39 + 24));
      }
      swift_release(v36);
    }
    goto LABEL_21;
  }
  v20 = type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = v13;
  sub_1003962BC(v21);
  v23 = v22;
  v24 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  v47 = sub_100399A8C;
  v48 = v23;
  v43 = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_10004A82C;
  v46 = &unk_1005E3FE0;
  v25 = _Block_copy(&v43);
  v26 = v48;
  swift_retain();
  swift_release(v26);
  objc_msgSend(v24, "performAfterLaunch:", v25);
  _Block_release(v25);

  v27 = *v4;
  swift_retain();
  v28 = swift_bridgeObjectRetain(v27);
  v29 = sub_100493AB4(v28, v23);
  swift_bridgeObjectRelease(v27);
  swift_release(v23);
  if ((v29 & 1) == 0)
  {
    swift_beginAccess(v4, &v43, 33, 0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    v32 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v31 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v32 >= v31 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
    v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v23);
    specialized Array._endMutation()(v33);
    swift_endAccess(&v43);
    sub_100393368();
  }
  swift_release(v23);
  swift_release(v7);

}

void sub_1003961EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v1 = *(_QWORD *)(a1 + qword_100651658);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation);
  v8 = v2;
  KeyPath = swift_getKeyPath(&unk_1004E57F0);
  v4 = swift_allocObject(&unk_1005E4018, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = v2;
  v6 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_100399B08, v4, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v4);

  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver) = v6;

}

void sub_1003962BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t (**v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;

  v2 = v1;
  v28 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v4 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICellAccessory.Placement(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v12 = *(_QWORD *)DOCUSBFormatting.shared.unsafeMutableAddressor(v11);
  *(_QWORD *)&v13 = swift_retain().n128_u64[0];
  v29 = a1;
  v14 = objc_msgSend(a1, "identifier", v13);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 160))(v15, v17);
  swift_release(v12);
  swift_bridgeObjectRelease(v17);
  if (v18)
  {
    v19 = objc_allocWithZone((Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem(0));
    v20 = v18;
    v21 = sub_1004A1E68(v20);
    *(_QWORD *)(v2 + qword_100651658) = v21;
    v22 = v21;
    swift_release(v2);
    v23 = (uint64_t (**)())&v10[*(int *)(sub_10006922C(&qword_10064A0A8) + 48)];
    v24 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
    v25 = type metadata accessor for UICellAccessory.DisplayedState(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v10, v24, v25);
    *v23 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v23[1] = 0;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for UICellAccessory.Placement.trailing(_:), v7);
    v26 = swift_allocObject(&unk_1005E4040, 24, 7);
    *(_QWORD *)(v26 + 16) = v22;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UICellAccessory.LayoutDimension.actual(_:), v28);
    v27 = v22;
    sub_10039276C(0xD000000000000015, 0x800000010052D4B0, (uint64_t)v6, 2, (uint64_t)v10, (uint64_t)sub_1000EB2FC, v26);

  }
  else
  {
    __break(1u);
  }
}

void sub_100396524()
{
  uint64_t v0;

}

uint64_t sub_100396534()
{
  return sub_100396540(&qword_100651658);
}

uint64_t sub_100396540(_QWORD *a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease(v1[3]);
  sub_10000CB4C((uint64_t)v1 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, &qword_100645FB8);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles));
  swift_release(*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider + 8));

  return swift_deallocClassInstance(v1, *(unsigned int *)(*v1 + 48), *(unsigned __int16 *)(*v1 + 52));
}

uint64_t sub_1003965D8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t (**v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UICellAccessory.Placement(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v22 - v11;
  v13 = (uint64_t (**)(uint64_t))((char *)&v22 + *(int *)(sub_10006922C(&qword_10064A0A8) + 48) - v11);
  v14 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v15 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v12, v14, v15);
  *v13 = sub_100398CE8;
  v13[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v12, enum case for UICellAccessory.Placement.leading(_:), v6);
  if (a1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICellAccessory.LayoutDimension.actual(_:), v2);
    v16 = sub_10006922C(&qword_100651B38);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    if (a1 == 1)
    {
      v17 = 0x800000010052D520;
      v18 = sub_100396844;
      v19 = 0xD00000000000001CLL;
    }
    else
    {
      v19 = 0xD000000000000020;
      v17 = 0x800000010052D4F0;
      v18 = sub_1003968F4;
    }
    v20 = sub_10039276C(v19, v17, (uint64_t)v5, 2, (uint64_t)v10, (uint64_t)v18, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return 0;
  }
  return v20;
}

id sub_100396844()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 8.0, 8.0);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setCornerRadius:", 4.0);

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  return v0;
}

id sub_1003968F4()
{
  return objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 8.0, 8.0);
}

double sub_100396928(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v24[32];
  _BYTE v25[24];

  v2 = v1;
  v4 = qword_1006510D8;
  v5 = *(_QWORD *)((char *)v1 + qword_1006510D8);
  if (v5)
  {
    v7 = *(_QWORD *)(v5 + 16);
    v6 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain(v6);
    if (!a1)
    {
      if (!v6)
        return result;
      *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
      v9 = *(_QWORD *)((char *)v2 + v4);
      if (!v9)
        return result;
      goto LABEL_21;
    }
  }
  else
  {
    if (!a1)
      return result;
    v6 = 0;
    v7 = 0;
  }
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v10);
  if (!v6)
  {
    if (!v10)
      return result;
    goto LABEL_19;
  }
  if (!v10)
  {
    v10 = v6;
LABEL_19:
    swift_bridgeObjectRelease(v10);
    goto LABEL_20;
  }
  if (v7 == v11 && v6 == v10)
  {
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
    return result;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v11, v10, 0);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  if ((v13 & 1) == 0)
  {
LABEL_20:
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    swift_retain();
    sub_1003931C0(v14, v15);
    swift_release(a1);
    v9 = *(_QWORD *)((char *)v2 + v4);
    if (!v9)
      return result;
LABEL_21:
    v16 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78));
    swift_beginAccess(v16, v25, 0, 0);
    v17 = *v16;
    swift_retain_n(v9, 2);
    v18 = swift_bridgeObjectRetain(v17);
    v19 = sub_100493AB4(v18, v9);
    swift_bridgeObjectRelease(v17);
    swift_release(v9);
    if ((v19 & 1) == 0)
    {
      swift_beginAccess(v16, v24, 33, 0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v22 = *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v9);
      specialized Array._endMutation()(v23);
      swift_endAccess(v24);
      sub_100393368();
    }
    swift_release(v9);
  }
  return result;
}

void sub_100396B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;

  v1 = v0;
  v2 = qword_1006510E8;
  v3 = *(_QWORD *)(v1 + qword_1006510E8);
  if (v3)
  {
    if (objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5Files21DOCEjectionController_source), "isEjectable"))
    {
      v4 = *(char **)(v1 + v2);
      if (v4)
      {
        v5 = *(void **)&v4[OBJC_IVAR____TtC5Files21DOCEjectionController_source];
        v6 = v4;
        if ((objc_msgSend(v5, "isEjectable") & 1) != 0)
        {
          v7 = sub_100261014();

          v8 = v7;
          sub_100393FD8(v7);

          return;
        }

      }
    }
  }
  sub_100393FD8(0);
}

void sub_100396C0C()
{
  uint64_t v0;

}

uint64_t sub_100396C1C()
{
  return sub_100396540(&qword_1006517D0);
}

uint64_t sub_100396C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = qword_100651108;
  if (*(_QWORD *)(v0 + qword_100651108))
  {
    v2 = *(_QWORD *)(v0 + qword_100651108);
  }
  else
  {
    v3 = swift_allocObject(&unk_1005E4108, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16);
    v2 = sub_100399230((uint64_t)sub_100399B54, v3);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v4);
  }
  swift_retain();
  return v2;
}

void sub_100396CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + qword_100651090, v6);
    if (v8)
    {
      v9 = v8;
      sub_10023B2C8(v7, *(_BYTE *)(a1 + qword_100651950));

      swift_unknownObjectRelease(v9);
    }
    else
    {

    }
  }
}

id sub_100396D4C()
{
  return objc_msgSend(objc_allocWithZone((Class)UISwitch), "init");
}

void sub_100396D70(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  id v5;

  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v3 = swift_allocObject(&unk_1005E41F8, 24, 7);
  swift_weakInit(v3 + 16, v1);
  v5 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v4, 0, 0, 0, sub_100399F78, v3);
  objc_msgSend(a1, "addAction:forControlEvents:", v5, 4096);

}

uint64_t sub_100396E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    v5 = qword_1006726F0;
    v6 = *(void **)(result + qword_1006726F0);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v7, "isOn");
      *(_BYTE *)(v4 + qword_100651950) = (_BYTE)v8;
      v9 = *(void **)(v4 + v5);
      if (v9)
        objc_msgSend(v9, "setOn:animated:", v8, 0);
      v11 = *(void (**)(uint64_t))(v4 + qword_100651948);
      v10 = *(_QWORD *)(v4 + qword_100651948 + 8);
      swift_retain(v10);
      v11(v4);
      swift_release(v4);

      result = v10;
    }
    return swift_release(result);
  }
  return result;
}

id sub_100396F14(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, "setOn:animated:", *(unsigned __int8 *)(v1 + qword_100651950), 0);
}

uint64_t sub_100396F30()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_100651948 + 8));
}

uint64_t sub_100396F44()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  sub_10000CB4C((uint64_t)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, &qword_100645FB8);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider + 8));

  swift_release(*(_QWORD *)((char *)v0 + qword_100651948 + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

id sub_100396FD8(void *a1, uint64_t a2)
{
  return sub_1003970F4(a1, a2, (SEL *)&selRef_isSelected);
}

void sub_100396FE4(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *ObjectType;
  id v6;
  unsigned int v7;
  objc_super v8;
  objc_super v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(a1, a2);
  v10.receiver = a1;
  v10.super_class = ObjectType;
  v6 = a1;
  v7 = objc_msgSendSuper2(&v10, "isSelected");
  v9.receiver = v6;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "setSelected:", a3);
  v8.receiver = v6;
  v8.super_class = ObjectType;
  if (v7 != objc_msgSendSuper2(&v8, "isSelected"))
    objc_msgSend(v6, "setNeedsUpdateConfiguration");

}

void sub_10039708C(void *a1, uint64_t a2)
{
  id v2;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType(a1, a2);
  v2 = v3.receiver;
  objc_msgSendSuper2(&v3, "tintColorDidChange");
  objc_msgSend(v2, "setNeedsUpdateConfiguration", v3.receiver, v3.super_class);

}

id sub_1003970E8(void *a1, uint64_t a2)
{
  return sub_1003970F4(a1, a2, (SEL *)&selRef_isEditing);
}

id sub_1003970F4(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1, a2);
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_100397130(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100393E40(a3);

}

void sub_100397170(char a1, uint64_t a2)
{
  _BYTE *v2;
  void *v4;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  _BYTE *v16;
  char v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  sub_10039742C(0, a2);
  v4 = *(void **)&v2[qword_1006510B8];
  if (v4)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[qword_100651090]);
    if (Strong)
    {
      v6 = Strong;
      if (*(_QWORD *)&v2[qword_1006510B0] || (v2[qword_100651098] & 1) != 0)
      {
        v7 = v4;
        swift_unknownObjectRelease(v6);
      }
      else
      {
        v17 = v2[qword_1006510A0];
        v18 = v4;
        swift_unknownObjectRelease(v6);
        if ((v17 & 1) == 0)
        {

          return;
        }
      }
      v8 = swift_allocObject(&unk_1005E4158, 40, 7);
      *(_QWORD *)(v8 + 16) = v4;
      *(_BYTE *)(v8 + 24) = a1 & 1;
      *(_QWORD *)(v8 + 32) = v2;
      v9 = (void *)objc_opt_self(UIView);
      v10 = (_QWORD *)swift_allocObject(&unk_1005E4180, 40, 7);
      v10[2] = sub_100399E6C;
      v10[3] = v8;
      v10[4] = v2;
      v11 = swift_allocObject(&unk_1005E41A8, 32, 7);
      *(_QWORD *)(v11 + 16) = sub_100399EA8;
      *(_QWORD *)(v11 + 24) = v10;
      aBlock[4] = sub_10006657C;
      v20 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10006655C;
      aBlock[3] = &unk_1005E41C0;
      v12 = _Block_copy(aBlock);
      v13 = v20;
      v14 = v2;
      v15 = v4;
      v16 = v14;
      swift_retain();
      swift_retain();
      swift_release(v13);
      objc_msgSend(v9, "performWithoutAnimation:", v12);
      swift_release(v8);

      _Block_release(v12);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v11, "", 98, 734, 44, 1);
      swift_release(v10);
      swift_release(v11);
      if ((v14 & 1) != 0)
        __break(1u);
    }
  }
}

id sub_1003973A4(void *a1)
{
  objc_class *ObjectType;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(a1);
  v3 = a1;
  sub_10039742C(0, v4);
  v5 = *(void **)&v3[qword_1006510B8];
  if (v5 && objc_msgSend(v5, "isFirstResponder"))
  {

    return 0;
  }
  else
  {
    v8.receiver = v3;
    v8.super_class = ObjectType;
    v6 = objc_msgSendSuper2(&v8, "canBecomeFocused");

  }
  return v6;
}

void sub_10039742C(int a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t Strong;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  double v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  unsigned __int8 v48;
  double v49;
  uint64_t v50;
  objc_class *v51;
  int v52;
  id v53;
  id v54;
  objc_super v55;
  uint64_t v56;
  objc_super v57;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = sub_10006922C((uint64_t *)&unk_100651B48);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v12 = (char *)&v50 - v11;
  v13 = qword_1006510B8;
  if (!*(_QWORD *)&v2[qword_1006510B8])
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v2[qword_100651090], v10);
    swift_unknownObjectRelease(Strong);
    if (Strong)
    {
      v57.receiver = v3;
      v57.super_class = ObjectType;
      if ((objc_msgSendSuper2(&v57, "isEditing") & 1) != 0 || (a1 & 1) != 0)
      {
        sub_10048E058(v12);
        v15 = *(id *)&v12[*(int *)(v6 + 44)];
        sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100651B48);
        v16 = objc_msgSend(v15, "textLayoutGuide");

        if (v16)
        {
          v51 = ObjectType;
          v52 = a1;
          v17 = objc_msgSend(objc_allocWithZone((Class)UITextField), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          objc_msgSend(v17, "setTextSelectionBehavior:", 2);
          sub_10048E058(v9);
          v18 = *(id *)&v9[*(int *)(v6 + 44)];
          sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100651B48);
          objc_msgSend(v18, "addSubview:", v17);

          v19 = objc_msgSend(v17, "leadingAnchor");
          v20 = objc_msgSend(v16, "leadingAnchor");
          v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

          v53 = (id)objc_opt_self(NSLayoutConstraint);
          v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
          v23 = swift_allocObject(v22, 64, 7);
          *(_OWORD *)(v23 + 16) = xmmword_1004DAC10;
          *(_QWORD *)(v23 + 32) = v21;
          v54 = v21;
          v24 = objc_msgSend(v17, "trailingAnchor");
          sub_10048E058(v9);
          v25 = *(id *)&v9[*(int *)(v6 + 44)];
          sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_100651B48);
          v26 = objc_msgSend(v25, "layoutMarginsGuide");

          v27 = objc_msgSend(v26, "trailingAnchor");
          v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);

          *(_QWORD *)(v23 + 40) = v28;
          v29 = objc_msgSend(v17, "topAnchor");
          v30 = objc_msgSend(v16, "topAnchor");
          v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

          *(_QWORD *)(v23 + 48) = v31;
          v32 = objc_msgSend(v17, "bottomAnchor");
          v33 = objc_msgSend(v16, "bottomAnchor");
          v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

          *(_QWORD *)(v23 + 56) = v34;
          v56 = v23;
          specialized Array._endMutation()(v35);
          v36 = v56;
          sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          *(_QWORD *)&v38 = swift_bridgeObjectRelease(v36).n128_u64[0];
          objc_msgSend(v53, "activateConstraints:", isa, v38);

          objc_msgSend(v17, "setEnablesReturnKeyAutomatically:", 1);
          objc_msgSend(v17, "setKeyboardType:", 0);
          objc_msgSend(v17, "setReturnKeyType:", 9);
          objc_msgSend(v17, "setDelegate:", v3);
          objc_msgSend(v17, "setHidden:", 1);
          objc_msgSend(v17, "setAdjustsFontForContentSizeCategory:", 1);
          v39 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
          objc_msgSend(v17, "setFont:", v39);

          v40 = *(void **)&v3[v13];
          *(_QWORD *)&v3[v13] = v17;
          v41 = v17;

          v42 = *(void **)&v3[qword_1006510C0];
          v43 = v54;
          *(_QWORD *)&v3[qword_1006510C0] = v54;
          v44 = v43;

          v45 = sub_100398538();
          sub_1003954E4(v45);
          sub_10039742C(0);
          v46 = *(void **)&v3[v13];
          if (v46)
          {
            v55.receiver = v3;
            v55.super_class = v51;
            v47 = v46;
            v48 = objc_msgSendSuper2(&v55, "isEditing");
            v49 = 1.0;
            if (((v48 | v52) & 1) == 0)
              v49 = 0.0;
            objc_msgSend(v47, "setAlpha:", v49);

            v16 = v41;
            v41 = v44;
            v44 = v47;
          }

        }
      }
    }
  }
}

void sub_1003979F8(void *a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[32];

  v6 = sub_10006922C((uint64_t *)&unk_100651B48);
  __chkstk_darwin(v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(a1, "setHidden:", (a2 & 1) == 0);
  v31[16] = a2;
  v9 = objc_msgSend(a3, "window");
  v10 = v9;
  if (v9)

  v11 = __chkstk_darwin(v10 == 0);
  *(_QWORD *)&v31[-32] = sub_100399EC4;
  *(_QWORD *)&v31[-24] = v31;
  *(_QWORD *)&v31[-16] = a3;
  UIView.doc_performBlock(allowingAnimations:block:)(v11, sub_10039A158);
  sub_10048E058(v8);
  if ((a2 & 1) != 0)
  {
    v12 = *(_QWORD *)&v8[*(int *)(v6 + 40) + 8];
    swift_bridgeObjectRetain(v12);
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100651B48);
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setText:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    sub_10048E058(v8);
    v14 = *(_QWORD *)&v8[*(int *)(v6 + 40) + 8];
    swift_bridgeObjectRetain(v14);
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100651B48);
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setPlaceholder:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

  }
  else
  {
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100651B48);
    v16 = objc_msgSend(a3, "traitCollection");
    v17 = v16;
    if (!v16)
    {
      v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v17 = objc_msgSend(v18, "traitCollection");

    }
    v19 = v16;
    v20 = objc_msgSend(v17, "preferredContentSizeCategory");
    UIContentSizeCategory.isAccessibilityCategory.getter(v20);

    __chkstk_darwin(v21);
    *(_QWORD *)&v31[-16] = v22;
    v23 = objc_msgSend(a3, "window");
    v24 = v23;
    if (v23)

    v25 = __chkstk_darwin(v24 == 0);
    *(_QWORD *)&v31[-32] = sub_100399ED0;
    *(_QWORD *)&v31[-24] = &v31[-32];
    *(_QWORD *)&v31[-16] = a3;
    UIView.doc_performBlock(allowingAnimations:block:)(v25, sub_10039A158);
    v26 = objc_msgSend(a1, "text");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    sub_10039532C(v28, v30);
  }
}

void sub_100397D48(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;

  v2 = sub_10006922C((uint64_t *)&unk_100651B48);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v3);
  sub_10048E058(v5);
  v6 = *(id *)&v5[*(int *)(v2 + 44)];
  sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100651B48);
  objc_msgSend(v6, "layoutBelowIfNeeded");

}

uint64_t sub_100397E00(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v9;

  v2 = type metadata accessor for UICellConfigurationState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  v7 = objc_msgSend(v6, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v7) = UICellConfigurationState.isExpanded.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  return v7 & 1;
}

id sub_100397EB4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + qword_1006510E8);
  if (v1)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCEjectionController_source), "isEjectable");
  else
    return 0;
}

id sub_100397EE8(void *a1)
{
  return objc_msgSend(a1, "indentationLevel");
}

uint64_t sub_100397EF4()
{
  return 0;
}

uint64_t sub_100397EFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_100651098);
}

id sub_100397F0C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  NSString v7;
  uint64_t v9;

  v2 = sub_10006922C((uint64_t *)&unk_100651B48);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  sub_10048E058(v4);
  v6 = *(_QWORD *)&v4[*(int *)(v2 + 40) + 8];
  swift_bridgeObjectRetain(v6);
  sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100651B48);

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_100397FCC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  NSString v7;
  uint64_t v9;

  v2 = sub_10006922C((uint64_t *)&unk_100651B48);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  sub_10048E058(v4);
  v6 = *(_QWORD *)&v4[*(int *)(v2 + 40) + 40];
  swift_bridgeObjectRetain(v6);
  sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100651B48);

  if (!v6)
    return 0;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_10039809C(void *a1)
{
  char *v1;
  uint64_t v2;
  id v3;

  v1 = a1;
  sub_10039742C(0, v2);
  v3 = *(id *)&v1[qword_1006510B8];

  return v3;
}

id sub_1003980E0(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  objc_class *ObjectType;
  char *v12;
  char *v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = &v6[qword_100651090];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  v6[qword_100651098] = 0;
  v6[qword_1006510A0] = 0;
  v13 = &v6[qword_1006510A8];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  *(_QWORD *)&v6[qword_1006510B0] = 0;
  *(_QWORD *)&v6[qword_1006510B8] = 0;
  *(_QWORD *)&v6[qword_1006510C0] = 0;
  *(_QWORD *)&v6[qword_1006510C8] = 0;
  *(_QWORD *)&v6[qword_1006510D0] = 0;
  *(_QWORD *)&v6[qword_1006510D8] = 0;
  v6[qword_1006510E0] = 0;
  *(_QWORD *)&v6[qword_1006510E8] = 0;
  *(_QWORD *)&v6[qword_1006510F0] = 0;
  *(_QWORD *)&v6[qword_1006510F8] = 0;
  v6[qword_100651100] = 2;
  *(_QWORD *)&v6[qword_100651108] = 0;
  v6[qword_100651110] = 0;
  v15.receiver = v6;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_100398238(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1003980E0(a3, a4, a5, a6, a1, a2);
}

double sub_100398258()
{
  uint64_t v0;
  double result;

  sub_10008F5C0(v0 + qword_100651090);
  sub_10000CB4C(v0 + qword_1006510A8, &qword_100651B58);

  swift_release(*(_QWORD *)(v0 + qword_1006510D8));
  swift_release(*(_QWORD *)(v0 + qword_1006510F8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_100651108)).n128_u64[0];
  return result;
}

double sub_10039832C(uint64_t a1)
{
  double result;

  sub_10008F5C0(a1 + qword_100651090);
  sub_10000CB4C(a1 + qword_1006510A8, &qword_100651B58);

  swift_release(*(_QWORD *)(a1 + qword_1006510D8));
  swift_release(*(_QWORD *)(a1 + qword_1006510F8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_100651108)).n128_u64[0];
  return result;
}

uint64_t sub_10039840C()
{
  return type metadata accessor for DOCSidebarItemCell(0);
}

uint64_t type metadata accessor for DOCSidebarItemCell.RawImageIconProvider()
{
  return objc_opt_self(_TtCC5Files18DOCSidebarItemCell20RawImageIconProvider);
}

uint64_t type metadata accessor for DOCSidebarItemCell.TagIconProvider()
{
  return objc_opt_self(_TtCC5Files18DOCSidebarItemCell15TagIconProvider);
}

uint64_t type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100651510, (uint64_t)&nominal type descriptor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem);
}

uint64_t type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100651688, (uint64_t)&nominal type descriptor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem);
}

uint64_t type metadata accessor for DOCSidebarItemCell.EjectAccessoryItem(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100651800, (uint64_t)&nominal type descriptor for DOCSidebarItemCell.EjectAccessoryItem);
}

uint64_t sub_100398494(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 1, &v2, a1 + 272);
}

uint64_t type metadata accessor for DOCSidebarItemCell.SourceEnabledSwitchAccessory(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100651980, (uint64_t)&nominal type descriptor for DOCSidebarItemCell.SourceEnabledSwitchAccessory);
}

uint64_t sub_1003984EC(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = &unk_1004E55B0;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 272);
}

id sub_100398538()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  id result;
  double v6;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if ((v1 & 1) != 0)
  {
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = static CGSize.doc_preferredSourceListIconSize(for:)();

    result = *(id *)&v0[qword_1006510C0];
    if (!result)
      return result;
    v6 = v4 + 8.0;
  }
  else
  {
    result = *(id *)&v0[qword_1006510C0];
    if (!result)
      return result;
    v6 = 0.0;
  }
  return objc_msgSend(result, "setConstant:", v6);
}

void sub_10039869C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + qword_100651090);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(a1, "text");
    if (v6)
    {
      v7 = v6;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

    }
    else
    {
      v9 = 0;
    }
    sub_10023CD2C();
    swift_bridgeObjectRelease(v9);
    swift_unknownObjectRelease(v5);
  }
  v10 = *(_QWORD *)((swift_isaMask & *v2) + 0x70);
  v11 = *((unsigned __int8 *)v2 + v10);
  *((_BYTE *)v2 + v10) = 0;
  if (v11 == 1)
    sub_100393368();
}

uint64_t storeEnumTagSinglePayload for DOCSidebarItemCell.UnseenIndicatorState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10039889C + 4 * byte_1004E5535[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003988D0 + 4 * asc_1004E5530[v4]))();
}

uint64_t sub_1003988D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003988D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003988E0);
  return result;
}

uint64_t sub_1003988EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003988F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003988F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100398900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCSidebarItemCell.UnseenIndicatorState()
{
  return &type metadata for DOCSidebarItemCell.UnseenIndicatorState;
}

void destroy for DOCSidebarItemContentValueBinding(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

}

uint64_t initializeWithCopy for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarItemContentValueBinding(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarItemContentValueBinding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarIcon(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSidebarIcon()
{
  return &type metadata for DOCSidebarIcon;
}

unint64_t sub_100398CA4()
{
  unint64_t result;

  result = qword_100651B28;
  if (!qword_100651B28)
  {
    result = swift_getWitnessTable(&unk_1004E5794, &type metadata for DOCSidebarItemCell.UnseenIndicatorState);
    atomic_store(result, (unint64_t *)&qword_100651B28);
  }
  return result;
}

uint64_t sub_100398CE8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_100398CF0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;
  uint64_t v13;

  v4 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(DOCTag), "nonClearNoneTagColor");
  UICollectionViewCell.backgroundConfiguration.getter();
  v8 = type metadata accessor for UIBackgroundConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
  {
    sub_10000CB4C((uint64_t)v6, &qword_100651B30);
  }
  else
  {
    v9 = (void *)UIBackgroundConfiguration.backgroundColor.getter();
    sub_10000CB4C((uint64_t)v6, &qword_100651B30);
    if (v9)
    {
      v10 = objc_msgSend(a2, "tintColor");
      v11 = objc_msgSend(v9, "_isSimilarToColor:withinPercentage:", v10, 0.01);

      if (v11)
      {
        v12 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");

        v7 = v12;
      }
      else
      {

      }
    }
  }
  objc_msgSend(a1, "setRingColor:", v7);

}

id sub_100398E78(void *a1, double a2, double a3)
{
  uint64_t v3;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = objc_msgSend((id)objc_opt_self(DOCTagRenderingRequest), "requestForTag:tagDimension:", *(_QWORD *)(v3 + 16), a2 + a3);
  objc_msgSend(v5, "setAllowUnsizedSymbolImages:", 1);
  if (*(_BYTE *)(v3 + 24) == 1)
  {
    sub_100398CF0(v5, a1);
  }
  else
  {
    v6 = objc_msgSend(a1, "traitCollection");
    v7 = objc_msgSend(v6, "sourceOutlineStyle");

    if (v7)
      v8 = 0;
    else
      v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
    objc_msgSend(v5, "setSelectionOutlineColor:", v8);

  }
  v9 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
  v10 = objc_msgSend(v9, "renderImageWithRequest:", v5);

  return v10;
}

id sub_100398FCC(void *a1, char a2, void *a3, double a4, double a5)
{
  id v9;
  double v10;
  double v11;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD v22[5];
  uint64_t v23;

  v9 = a1;
  if ((objc_msgSend(a1, "isSymbolImage") & 1) != 0)
    return v9;
  objc_msgSend(v9, "size");
  if (v11 == a4 && v10 == a5)
    return v9;
  v13 = objc_msgSend(a3, "traitCollection");
  v14 = objc_msgSend((id)objc_opt_self(UIGraphicsImageRendererFormat), "formatForTraitCollection:", v13);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v14, a4, a5);

  v16 = swift_allocObject(&unk_1005E3F50, 41, 7);
  *(double *)(v16 + 16) = a4;
  *(double *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = v9;
  *(_BYTE *)(v16 + 40) = a2 & 1;
  v17 = swift_allocObject(&unk_1005E3F78, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100399204;
  *(_QWORD *)(v17 + 24) = v16;
  v22[4] = sub_100066584;
  v23 = v17;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_10039318C;
  v22[3] = &unk_1005E3F90;
  v18 = _Block_copy(v22);
  v19 = v23;
  v20 = v9;
  swift_retain();
  v9 = objc_msgSend(v15, "imageWithActions:", v18, swift_release(v19).n128_f64[0]);

  _Block_release(v18);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v17, "", 98, 209, 48, 1);
  swift_release(v16);
  swift_release(v17);
  if ((v13 & 1) != 0)
  {
    __break(1u);
    return v9;
  }
  return v9;
}

uint64_t sub_1003991E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

id sub_100399204()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), "drawInRect:", 0.0, 0.0, *(double *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100399220()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100399230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (**v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.Placement(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DOCSidebarItemCell.SourceEnabledSwitchAccessory(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_BYTE *)(v13 + qword_100651950) = 0;
  v14 = (_QWORD *)(v13 + qword_100651948);
  *v14 = a1;
  v14[1] = a2;
  v15 = (uint64_t (**)())&v11[*(int *)(sub_10006922C(&qword_10064A0A8) + 48)];
  v16 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v17 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v11, v16, v17);
  *v15 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v15[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for UICellAccessory.Placement.trailing(_:), v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for UICellAccessory.LayoutDimension.actual(_:), v4);
  return sub_100392550(0xD000000000000013, 0x800000010052D540, (uint64_t)v7, 2, (uint64_t)v11, (uint64_t)sub_100396D4C, 0);
}

uint64_t sub_1003993D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain(v8);
      }
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v9 == a2 && v10 == a3)
        break;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0);
      swift_release(v8);
      if ((v12 & 1) != 0)
        return v7;
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_17:
        if (a1 < 0)
          v14 = a1;
        else
          v14 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v6 = _CocoaArrayWrapper.endIndex.getter(v14);
        swift_bridgeObjectRelease(a1);
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v13 == v6)
          return 0;
      }
    }
    swift_release(v8);
  }
  return v7;
}

uint64_t sub_100399504(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v7 = *a1;
  v8 = swift_bridgeObjectRetain(*a1);
  v9 = sub_1003993D4(v8, a2, a3);
  v11 = v10;
  v12 = v3;
  swift_bridgeObjectRelease(v7);
  if (v3)
    return v9;
  if ((v11 & 1) == 0)
  {
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_64;
    v11 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_65:
      if ((v11 & 0x8000000000000000) != 0)
        v38 = v11;
      else
        v38 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v39 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v11);
      if (v13 != v39)
        goto LABEL_6;
    }
    else if (v13 != *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v13 = v9 + 5;
      v42 = v12;
      while (1)
      {
        v11 = v13 - 4;
        v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v14);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v11 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v15 = *(_QWORD *)(v14 + 8 * v13);
          swift_retain();
        }
        v16 = *(_QWORD *)(v15 + 16);
        v17 = *(_QWORD *)(v15 + 24);
        if (v16 == a2 && v17 == a3)
        {
          swift_release(v15);
          goto LABEL_39;
        }
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a2, a3, 0);
        swift_release(v15);
        if ((v19 & 1) != 0)
          goto LABEL_39;
        if (v11 != v9)
          break;
LABEL_35:
        if (__OFADD__(v9++, 1))
          goto LABEL_57;
LABEL_39:
        v32 = v13 - 3;
        if (__OFADD__(v11, 1))
          goto LABEL_56;
        v33 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (v33 < 0)
            v35 = *a1;
          else
            v35 = v33 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v34 = _CocoaArrayWrapper.endIndex.getter(v35);
          swift_bridgeObjectRelease(v33);
        }
        else
        {
          v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v13;
        if (v32 == v34)
          return v9;
      }
      v20 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *a1);
        v20 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_60;
          if (v11 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_61;
          v22 = *(_QWORD *)(v20 + 8 * v13);
          swift_retain();
          goto LABEL_24;
        }
      }
      else
      {
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_58;
        if (v9 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v21 = *(_QWORD *)(v20 + 8 * v9 + 32);
        swift_retain();
        if ((v20 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v20);
      v20 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v20);
      *a1 = v20;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v20 < 0 || (v20 & 0x4000000000000000) != 0)
      {
        v20 = sub_1000818A0(v20);
        *a1 = v20;
      }
      v24 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v22;
      v25 = swift_release(v24);
      specialized Array._endMutation()(v25);
      v26 = *a1;
      v27 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v26;
      if (!v27 || v26 < 0 || (v26 & 0x4000000000000000) != 0)
      {
        v26 = sub_1000818A0(v26);
        *a1 = v26;
      }
      v12 = v42;
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_62;
      v28 = v26 & 0xFFFFFFFFFFFFFF8;
      if (v11 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_63;
      v29 = *(_QWORD *)(v28 + 8 * v13);
      *(_QWORD *)(v28 + 8 * v13) = v21;
      v30 = swift_release(v29);
      specialized Array._endMutation()(v30);
      goto LABEL_35;
    }
    return v9;
  }
  v36 = *a1;
  if (!((unint64_t)v36 >> 62))
    return *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v36 < 0)
    v40 = v36;
  else
    v40 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  v41 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease(v36);
  return v41;
}

uint64_t sub_10039985C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_19;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v6)
  {
    v7 = 4;
    while (1)
    {
      v8 = v7 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
      v10 = __OFADD__(v8, 1);
      v11 = v7 - 3;
      if (v10)
        goto LABEL_18;
LABEL_9:
      v12 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      v14 = v12 == a2 && v13 == a3;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, a2, a3, 0) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v9;
      }
      swift_release(v9);
      ++v7;
      if (v11 == v6)
        goto LABEL_15;
    }
    v9 = *(_QWORD *)(a1 + 8 * v7);
    swift_retain(v9);
    v10 = __OFADD__(v8, 1);
    v11 = v7 - 3;
    if (!v10)
      goto LABEL_9;
LABEL_18:
    __break(1u);
LABEL_19:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return 0;
}

id sub_100399984@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  char v5;
  void *v6;
  uint64_t v7;

  v2 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v3 = objc_msgSend(v2, "traitCollection");

  v4 = objc_msgSend(v3, "preferredContentSizeCategory");
  v5 = UIContentSizeCategory.isAccessibilityCategory.getter(v4);

  if (qword_1006410B0 != -1)
    swift_once(&qword_1006410B0, sub_10039395C);
  v6 = (void *)qword_100672D20;
  v7 = 2;
  if ((v5 & 1) != 0)
    v7 = 3;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v6;
  return v6;
}

void sub_100399A6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + qword_100651658);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver) = 0;

}

void sub_100399A8C()
{
  uint64_t v0;

  sub_1003961EC(v0);
}

const char *sub_100399A94()
{
  return "operationState";
}

id sub_100399AA0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "operationState");
  *a2 = result;
  return result;
}

id sub_100399AD0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setOperationState:", *a1);
}

uint64_t sub_100399AE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100399B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004A239C(a1, a2, v2);
}

uint64_t sub_100399B10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100399B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10039A050(a1, &qword_100651B38, a2);
}

uint64_t sub_100399B44()
{
  uint64_t v0;

  return sub_100395B30(v0);
}

uint64_t sub_100399B4C()
{
  uint64_t v0;

  return sub_100395AD4(v0);
}

void sub_100399B54(uint64_t a1)
{
  uint64_t v1;

  sub_100396CB8(a1, v1);
}

uint64_t sub_100399B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(type metadata accessor for UICellAccessory.Placement(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for UICellAccessory.LayoutDimension(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_100392BA4(a1, *(uint64_t (**)(uint64_t))(v2 + 16), v2 + v6, v2 + v9, *(unsigned __int8 *)(v2 + v9 + *(_QWORD *)(v8 + 64)), a2);
}

uint64_t sub_100399BE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
    v4 = *(_QWORD *)(v1 + 16);
  else
    v4 = 0;
  if (v3)
    v5 = *(_QWORD *)(v1 + 24);
  else
    v5 = 0xE000000000000000;
  v6 = a1[1];
  swift_bridgeObjectRetain(v3);
  result = swift_bridgeObjectRelease(v6);
  *a1 = v4;
  a1[1] = v5;
  return result;
}

uint64_t sub_100399C34()
{
  uint64_t v0;

  return sub_10048F288(*(void (**)(char *, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

void sub_100399C40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_100399CB0(*(void **)(v1 + 56), *(_BYTE *)(v1 + 64), v3, *(void **)(v1 + 40));

  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 48) = *(_QWORD *)(v3 + qword_1006510B0) != 0;
}

id sub_100399CB0(void *a1, char a2, uint64_t a3, void *a4)
{
  unsigned __int8 v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v16;
  id v17;
  id v18;
  id v19;

  v8 = objc_msgSend(a1, "isSymbolImage");
  if (*(_QWORD *)(a3 + qword_1006510B0) || (v8 & 1) == 0)
    return objc_msgSend(a1, "imageWithRenderingMode:", 1);
  if ((a2 & 1) != 0)
  {
    v9 = (void *)objc_opt_self(UIColor);
    v10 = a1;
    v11 = a4;
    v12 = objc_msgSend(v9, "tintColor");
    v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v12);

    v14 = objc_msgSend(v11, "configurationByApplyingConfiguration:", v13);
  }
  else
  {
    v16 = a1;
    v14 = a4;
  }
  v17 = v14;
  v18 = objc_msgSend(a1, "imageWithConfiguration:", v17);

  if ((a2 & 1) != 0)
  {

    return v18;
  }
  else
  {
    v19 = objc_msgSend(v18, "imageWithRenderingMode:", 2);

    return v19;
  }
}

uint64_t sub_100399E40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100399E6C()
{
  uint64_t v0;

  sub_1003979F8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100399E7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100399EA8()
{
  uint64_t v0;

  sub_100397D48(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100399EB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100399EC4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(result + 24) = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t sub_100399ED0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = *(_QWORD *)(v1 + 16);
  return result;
}

double sub_100399EDC()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t Strong;
  double result;
  uint64_t v5;

  v1 = *(_QWORD *)((swift_isaMask & *v0) + 0x70);
  v2 = *((_BYTE *)v0 + v1);
  *((_BYTE *)v0 + v1) = 1;
  if ((v2 & 1) == 0)
    sub_100393368();
  Strong = swift_unknownObjectWeakLoadStrong((char *)v0 + qword_100651090);
  if (Strong)
  {
    v5 = Strong;
    sub_10023B500(v0);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100399F54()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100399F78(uint64_t a1)
{
  uint64_t v1;

  return sub_100396E38(a1, v1);
}

uint64_t sub_100399F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for UICellAccessory.Placement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = *(_QWORD *)(v7 + 64) + v9 + 1;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v11, v10);
}

uint64_t sub_10039A044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10039A050(a1, &qword_100651B78, a2);
}

uint64_t sub_10039A050@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v7 = *(_QWORD *)(type metadata accessor for UICellAccessory.Placement(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for UICellAccessory.LayoutDimension(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_100392DC8(a1, *(uint64_t (**)(uint64_t))(v3 + 16), v3 + v8, v3 + v11, *(unsigned __int8 *)(v3 + v11 + *(_QWORD *)(v10 + 64)), a2, a3);
}

uint64_t sub_10039A0E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10006922C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DOCNodeStatusAppearance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_10039A1AC + 4 * byte_1004E5825[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_10039A1E0 + 4 * byte_1004E5820[v4]))();
}

uint64_t sub_10039A1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039A1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10039A1F0);
  return result;
}

uint64_t sub_10039A1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10039A204);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_10039A208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039A210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeStatusAppearance()
{
  return &type metadata for DOCNodeStatusAppearance;
}

unint64_t sub_10039A230()
{
  unint64_t result;

  result = qword_100651B80;
  if (!qword_100651B80)
  {
    result = swift_getWitnessTable(&unk_1004E5888, &type metadata for DOCNodeStatusAppearance);
    atomic_store(result, (unint64_t *)&qword_100651B80);
  }
  return result;
}

void sub_10039A274(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

id sub_10039A2CC()
{
  uint64_t v0;
  id v1;
  NSString v2;
  void *v3;
  id v4;
  _UNKNOWN **v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  Swift::String v18;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
  swift_bridgeObjectRetain(0x8000000100525A00);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x8000000100525A00);
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "systemImageNamed:", v2);

  v5 = DSConflictStrategy_ptr;
  if (v4
    && (v6 = v0,
        v7 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor"),
        v8 = objc_msgSend(v4, "imageWithTintColor:renderingMode:", v7, 1),
        v4,
        v7,
        v0 = v6,
        v5 = DSConflictStrategy_ptr,
        v8))
  {
    v9 = v8;
    swift_bridgeObjectRelease(0x8000000100525A00);
    v10 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v6, 1);
  }
  else
  {
    swift_bridgeObjectRetain(0x8000000100525A00);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0x8000000100525A00);
    v12 = objc_msgSend(v3, "_systemImageNamed:withConfiguration:", v11, 0);

    if (!v12
      || (v12,
          v13 = objc_msgSend((id)objc_opt_self(v5[157]), "secondaryLabelColor"),
          v14 = objc_msgSend(v12, "imageWithTintColor:renderingMode:", v13, 1),
          v12,
          v13,
          !v14))
    {
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease(0xE000000000000000);
      v18._countAndFlagsBits = 0xD000000000000015;
      v18._object = (void *)0x8000000100525A00;
      String.append(_:)(v18);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001CLL, 0x800000010052D5F0, "Files/DOCNodeStatusAppearance.swift", 35, 2, 84, 0);
      __break(1u);
      JUMPOUT(0x10039A658);
    }
    v9 = v14;
    swift_bridgeObjectRelease(0x8000000100525A00);
    v10 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v0, 1);
  }
  v15 = v10;
  v16 = objc_msgSend(v9, "imageWithConfiguration:", v15);

  objc_msgSend(v1, "setImage:", v16);
  return v1;
}

objc_class *sub_10039A6A8(uint64_t a1, uint64_t a2)
{
  objc_class *result;
  objc_class *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSBundle v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t countAndFlagsBits;
  uint64_t v15;
  objc_class *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  Swift::String v25;

  switch(a2)
  {
    case 0:
      result = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (result)
      {
        v4 = result;
        v24 = 0x800000010052D6A0;
        v6 = 0x6220646572616853;
        v7 = 0xEC000000654D2079;
        v8 = 0x617A696C61636F4CLL;
        v9 = 0xEB00000000656C62;
        v10.super.isa = v4;
        v11 = 0;
        v12 = 0xE000000000000000;
        v5 = 0xD000000000000033;
LABEL_11:
        countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, *(Swift::String_optional *)&v8, v10, *(Swift::String *)&v11, *(Swift::String *)&v5)._countAndFlagsBits;

        return (objc_class *)countAndFlagsBits;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    case 1:
      result = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (result)
      {
        v4 = result;
        v5 = 0xD000000000000042;
        v24 = 0x800000010052D610;
        v6 = 0x646572616853;
        v7 = 0xE600000000000000;
        goto LABEL_10;
      }
      goto LABEL_15;
    case 2:
      result = (objc_class *)(id)_DocumentManagerBundle(a1);
      if (result)
      {
        v4 = result;
        v5 = 0xD00000000000003ALL;
        v24 = 0x8000000100522B90;
        v6 = 0x7261685320746F4ELL;
        v7 = 0xEA00000000006465;
LABEL_10:
        v8 = 0x617A696C61636F4CLL;
        v9 = 0xEB00000000656C62;
        v10.super.isa = v4;
        v11 = 0;
        v12 = 0xE000000000000000;
        goto LABEL_11;
      }
      goto LABEL_16;
  }
  v15 = swift_bridgeObjectRetain(a2);
  result = (objc_class *)(id)_DocumentManagerBundle(v15);
  if (result)
  {
    v16 = result;
    v25._countAndFlagsBits = 0xD00000000000003FLL;
    v25._object = (void *)0x800000010052D660;
    v17._countAndFlagsBits = 0x6220646572616853;
    v17._object = (void *)0xEC00000040252079;
    v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v18.value._object = (void *)0xEB00000000656C62;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v25);

    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 72, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_10006A638();
    *(_QWORD *)(v22 + 32) = a1;
    *(_QWORD *)(v22 + 40) = a2;
    v23 = static String.localizedStringWithFormat(_:_:)(v20._countAndFlagsBits, v20._object, v22);
    swift_bridgeObjectRelease(v20._object);
    swift_bridgeObjectRelease(v22);
    return (objc_class *)v23;
  }
LABEL_17:
  __break(1u);
  return result;
}

Swift::Int sub_10039A954()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v5, 0);
  if (v2)
  {
    if (v2 == 1)
    {
      v3 = 2;
    }
    else
    {
      if (v2 != 2)
      {
        Hasher._combine(_:)(1uLL);
        String.hash(into:)(v5, v1, v2);
        return Hasher._finalize()();
      }
      v3 = 3;
    }
  }
  else
  {
    v3 = 0;
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_10039A9E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt v4;
  uint64_t v5;

  v3 = v1[1];
  switch(v3)
  {
    case 0:
      v4 = 0;
      goto LABEL_7;
    case 1:
      v4 = 2;
      goto LABEL_7;
    case 2:
      v4 = 3;
LABEL_7:
      Hasher._combine(_:)(v4);
      return;
  }
  v5 = *v1;
  Hasher._combine(_:)(1uLL);
  String.hash(into:)(a1, v5, v3);
}

Swift::Int sub_10039AA64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v6, a1);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 2;
    }
    else
    {
      if (v3 != 2)
      {
        Hasher._combine(_:)(1uLL);
        String.hash(into:)(v6, v2, v3);
        return Hasher._finalize()();
      }
      v4 = 3;
    }
  }
  else
  {
    v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

uint64_t sub_10039AAEC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  v3 = a1[1];
  v4 = a2[1];
  switch(v3)
  {
    case 0:
      return !v4;
    case 1:
      return v4 == 1;
    case 2:
      return v4 == 2;
  }
  if (v4 < 3)
    return 0;
  v6 = *a1;
  if (v6 == *a2 && v3 == v4)
    return 1;
  return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v3, *a2, v4, 0);
}

uint64_t getEnumTagSinglePayload for DOCItemSharedByGroupCategory(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCItemSharedByGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemSharedByGroupCategory()
{
  return &type metadata for DOCItemSharedByGroupCategory;
}

unint64_t sub_10039AC24()
{
  unint64_t result;

  result = qword_100651B88;
  if (!qword_100651B88)
  {
    result = swift_getWitnessTable(&unk_1004E58D0, &type metadata for DOCItemSharedByGroupCategory);
    atomic_store(result, (unint64_t *)&qword_100651B88);
  }
  return result;
}

void sub_10039AC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;

  v2 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UTType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v35 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v33 = (char *)&v31 - v9;
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v15 = 0;
  v36 = (char *)_swiftEmptyArrayStorage;
  v32 = a1 + 56;
  if (!v13)
    goto LABEL_7;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v22)) + (v15 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain(v20);
    UTType.init(_:)(v19, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1001495BC((uint64_t)v4);
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v25 = v33;
      v24(v33, v4, v5);
      v34 = v24;
      v24(v35, v25, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        v36 = (char *)sub_100153308(0, *((_QWORD *)v36 + 2) + 1, 1, (unint64_t)v36);
      v27 = *((_QWORD *)v36 + 2);
      v26 = *((_QWORD *)v36 + 3);
      v28 = v27 + 1;
      v10 = v32;
      if (v27 >= v26 >> 1)
      {
        v31 = v27 + 1;
        v30 = (char *)sub_100153308(v26 > 1, v27 + 1, 1, (unint64_t)v36);
        v28 = v31;
        v36 = v30;
      }
      v29 = v36;
      *((_QWORD *)v36 + 2) = v28;
      v34(&v29[((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v27], v35, v5);
      if (v13)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v14)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v15;
    if (!v22)
    {
      v15 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_29;
      v22 = *(_QWORD *)(v10 + 8 * v15);
      if (!v22)
      {
        v15 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_29;
        v22 = *(_QWORD *)(v10 + 8 * v15);
        if (!v22)
        {
          v15 = v21 + 3;
          if (v21 + 3 >= v14)
            goto LABEL_29;
          v22 = *(_QWORD *)(v10 + 8 * v15);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v14)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v15 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v15 >= v14)
      goto LABEL_29;
    v22 = *(_QWORD *)(v10 + 8 * v15);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_10039AF80(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = type metadata accessor for UTType(0);
  v29 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "allowedContentTypes", v4);
  if (v7)
  {
    v8 = v7;
    v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String, &protocol witness table for String);
    swift_bridgeObjectRelease(v9);

    if (!v9)
      goto LABEL_5;
    __break(1u);
  }
  swift_bridgeObjectRelease(v7);
LABEL_5:
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes);
  if (v10)
  {
    v11 = *(_QWORD *)(v10 + 16);
    v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      v27 = a1;
      v30 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v10);
      sub_100081774(0, v11, 0);
      v13 = *(unsigned __int8 *)(v29 + 80);
      v26 = v10;
      v14 = v10 + ((v13 + 32) & ~v13);
      v28 = *(_QWORD *)(v29 + 72);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 16);
      do
      {
        v16 = v15(v6, v14, v3);
        v17 = UTType.identifier.getter(v16);
        v19 = v18;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v3);
        v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
        {
          sub_100081774(0, v12[2] + 1, 1);
          v12 = v30;
        }
        v21 = v12[2];
        v20 = v12[3];
        if (v21 >= v20 >> 1)
        {
          sub_100081774(v20 > 1, v21 + 1, 1);
          v12 = v30;
        }
        v12[2] = v21 + 1;
        v22 = &v12[2 * v21];
        v22[4] = v17;
        v22[5] = v19;
        v14 += v28;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease(v26);
      a1 = v27;
    }
    v23 = sub_1000D03C0((uint64_t)v12);
    swift_bridgeObjectRelease(v12);
    isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setAllowedContentTypes:", isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000020, 0x800000010052D800, "Files/DOCFileTypeSuggesters.swift", 33, 2, 21, 0);
    __break(1u);
  }
}

uint64_t sub_10039B214()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes));
}

id sub_10039B224()
{
  return sub_1001405E0(0, type metadata accessor for DOCFileTypeSuggestion);
}

uint64_t type metadata accessor for DOCFileTypeSuggestion()
{
  return objc_opt_self(_TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion);
}

double sub_10039B264(uint64_t a1, uint64_t a2, unint64_t a3, int64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  __n128 v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  __n128 v32;
  char *v33;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  double result;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id *v46;
  void (*v47)(void);
  id v48;
  _QWORD *v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, int64_t, void (*)(uint64_t), _QWORD *);
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(char *, unint64_t, uint64_t);
  unint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;

  v8 = type metadata accessor for UTType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v62 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - v12;
  __chkstk_darwin(v14);
  v69 = (char *)&v60 - v15;
  v16 = swift_allocObject(&unk_1005E4490, 24, 7);
  *(_QWORD *)(v16 + 16) = _swiftEmptyArrayStorage;
  if ((unint64_t)a4 >> 62)
    goto LABEL_44;
  v17 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a4);
  v66 = a3;
  v67 = v16;
  if (!v17)
    goto LABEL_13;
LABEL_3:
  if ((a4 & 0xC000000000000001) != 0)
  {
    v63 = v9;
    v16 = 0;
    a3 = (unint64_t)&OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
    while (1)
    {
      v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a4);
      v9 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category);
      swift_unknownObjectRelease(v18);
      if (v19 == 2)
        goto LABEL_21;
      ++v16;
      if (v9 == v17)
      {
        *(_QWORD *)&v20 = swift_bridgeObjectRelease(a4).n128_u64[0];
        v9 = v63;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v21 = 0;
  do
  {
    v22 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_42;
    if (*(_BYTE *)(*(_QWORD *)(a4 + 8 * v21 + 32) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) == 2)
    {
LABEL_21:
      swift_bridgeObjectRelease(a4);
      v33 = v68;
      v34 = &v68[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v68[OBJC_IVAR____TtC5Files12DOCSuggester_delegate]);
      if (Strong)
      {
        v36 = Strong;
        v37 = *((_QWORD *)v34 + 1);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(char *, _QWORD *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8))(v33, _swiftEmptyArrayStorage, v66, a1, a2, ObjectType, v37);
        swift_release(v67);
        *(_QWORD *)&result = swift_unknownObjectRelease(v36).n128_u64[0];
      }
      else
      {
        *(_QWORD *)&result = swift_release(v67).n128_u64[0];
      }
      return result;
    }
    ++v21;
  }
  while (v22 != v17);
  while (1)
  {
LABEL_13:
    *(_QWORD *)&v20 = swift_bridgeObjectRelease(a4).n128_u64[0];
LABEL_14:
    v23 = v68;
    v24 = *(void **)&v68[OBJC_IVAR____TtC5Files12DOCSuggester_configuration];
    if ((objc_msgSend(v24, "isFilesApp", v20, v60) & 1) != 0)
    {
      a4 = (int64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      v26 = objc_msgSend(v24, "documentContentTypes");
      a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v8);

    }
    v27 = v69;
    if (!*(_QWORD *)(a4 + 16))
      goto LABEL_40;
    swift_bridgeObjectRetain(a4);
    static UTType.folder.getter(v28);
    v29 = *(_QWORD *)(a4 + 16);
    v63 = v9;
    if (!v29)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);
LABEL_33:
      swift_bridgeObjectRelease(a4);
      v41 = v62;
      static UTType.folder.getter(v42);
      if ((swift_isUniquelyReferenced_nonNull_native(a4) & 1) == 0)
        a4 = sub_100153308(0, *(_QWORD *)(a4 + 16) + 1, 1, a4);
      v43 = v63;
      v45 = *(_QWORD *)(a4 + 16);
      v44 = *(_QWORD *)(a4 + 24);
      if (v45 >= v44 >> 1)
        a4 = sub_100153308(v44 > 1, v45 + 1, 1, a4);
      *(_QWORD *)(a4 + 16) = v45 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(a4+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v45, v41, v8);
      goto LABEL_40;
    }
    v61 = a1;
    a3 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v65 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v65(v13, a4 + a3, v8);
    v30 = sub_1001495FC();
    swift_bridgeObjectRetain(a4);
    v64 = v30;
    v31 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v27, v8, v30);
    v9 = *(_QWORD *)(v9 + 8);
    ((void (*)(char *, uint64_t))v9)(v13, v8);
    if ((v31 & 1) != 0)
      break;
    a1 = v61;
    if (v29 == 1)
    {
      swift_bridgeObjectRelease(a4);
LABEL_32:
      ((void (*)(char *, uint64_t))v9)(v69, v8);
      goto LABEL_33;
    }
    v60 = a2;
    a1 = *(_QWORD *)(v63 + 72);
    v16 = a4 + a1 + a3;
    a2 = 1;
    while (1)
    {
      v65(v13, v16, v8);
      v40 = a2 + 1;
      if (__OFADD__(a2, 1))
        break;
      a3 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v69, v8, v64);
      ((void (*)(char *, uint64_t))v9)(v13, v8);
      if ((a3 & 1) != 0)
      {
        v32 = swift_bridgeObjectRelease(a4);
        a2 = v60;
        a1 = v61;
        v23 = v68;
        goto LABEL_39;
      }
      ++a2;
      v16 += a1;
      if (v40 == v29)
      {
        swift_bridgeObjectRelease(a4);
        a2 = v60;
        a1 = v61;
        v23 = v68;
        goto LABEL_32;
      }
    }
LABEL_43:
    __break(1u);
LABEL_44:
    v56 = v9;
    v57 = v16;
    if (a4 < 0)
      v58 = a4;
    else
      v58 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v59 = v58;
    v16 = v57;
    v9 = v56;
    v17 = _CocoaArrayWrapper.endIndex.getter(v59);
    v66 = a3;
    v67 = v16;
    if (v17)
      goto LABEL_3;
  }
  v32 = swift_bridgeObjectRelease(a4);
  a1 = v61;
LABEL_39:
  ((void (*)(char *, uint64_t, __n128))v9)(v69, v8, v32);
  v25 = swift_bridgeObjectRelease(a4);
LABEL_40:
  v46 = (id *)DOCUTIDescriptorCollector.shared.unsafeMutableAddressor(v25);
  v47 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v46) + 0xA8);
  v48 = *v46;
  v47();

  v49 = *v46;
  v50 = (_QWORD *)swift_allocObject(&unk_1005E4508, 56, 7);
  v50[2] = a1;
  v50[3] = a2;
  v51 = v66;
  v52 = v67;
  v50[4] = v67;
  v50[5] = v23;
  v50[6] = v51;
  v53 = *(void (**)(uint64_t, uint64_t, int64_t, void (*)(uint64_t), _QWORD *))((swift_isaMask & *v49) + 0xA0);
  v54 = v49;
  swift_bridgeObjectRetain(a2);
  swift_retain();
  v55 = v23;
  v53(a1, a2, a4, sub_10039D82C, v50);
  swift_release(v52);

  swift_bridgeObjectRelease(a4);
  *(_QWORD *)&result = swift_release(v50).n128_u64[0];
  return result;
}

void sub_10039B83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  _QWORD v16[5];
  _QWORD *v17;

  v12 = (_QWORD *)swift_allocObject(&unk_1005E4530, 64, 7);
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  v16[4] = sub_10039D878;
  v17 = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10004A82C;
  v16[3] = &unk_1005E4548;
  v13 = _Block_copy(v16);
  v14 = v17;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a3);
  swift_retain();
  v15 = a5;
  swift_release(v14);
  DOCRunInMainThread(v13);
  _Block_release(v13);
}

double sub_10039B920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = a6;
  v7 = a5;
  v10 = (uint64_t *)(a4 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain(a1);
    v29 = v12;
    v13 = (uint64_t *)(v12 + 72);
    do
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      v16 = *(v13 - 3);
      v17 = *(v13 - 2);
      v18 = *(v13 - 5);
      v19 = *(v13 - 4);
      *(_QWORD *)&v32 = v18;
      *((_QWORD *)&v32 + 1) = v19;
      v33 = v16;
      v34 = v17;
      v35 = v14;
      v36 = v15;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v15);
      sub_10039BA98(&v32, a2, a3, v10);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v18);
      v13 += 6;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease(v29);
    v7 = a5;
    v6 = a6;
  }
  v20 = v7 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate);
  if (Strong)
  {
    v23 = Strong;
    v24 = *(_QWORD *)(v20 + 8);
    ObjectType = swift_getObjectType(Strong);
    swift_beginAccess(v10, &v32, 0, 0);
    v26 = *v10;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v24 + 8);
    v28 = swift_bridgeObjectRetain(v26);
    v27(v7, v26, v6, a2, a3, ObjectType, v24, v28);
    swift_bridgeObjectRelease(v26);
    *(_QWORD *)&result = swift_unknownObjectRelease(v23).n128_u64[0];
  }
  return result;
}

void sub_10039BA98(__int128 *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  __int128 v7;
  _BYTE *v8;
  _QWORD *v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  NSString v22;
  id v23;
  void **v24;
  void *v25;
  id v26;
  void **v27;
  void *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33[24];
  char v34[24];
  _BYTE v35[24];
  objc_super v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v7 = a1[1];
  v37 = *a1;
  v38 = v7;
  v39 = a1[2];
  v8 = objc_allocWithZone((Class)type metadata accessor for DOCFileTypeSuggestion());
  *(_QWORD *)&v8[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = 0;
  v8[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  v9 = &v8[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *v9 = a2;
  v9[1] = a3;
  v36.receiver = v8;
  v36.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  *(_QWORD *)&v10 = swift_bridgeObjectRetain(a3).n128_u64[0];
  v11 = (char *)objc_msgSendSuper2(&v36, "init", v10);
  v40 = v38;
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
  *(_OWORD *)&v11[OBJC_IVAR____TtC5Files13DOCSuggestion_title] = v38;
  v13 = *((_QWORD *)&v40 + 1);
  v14 = v11;
  sub_1001D0760((uint64_t)&v40);
  swift_bridgeObjectRelease(v12);
  sub_1000DA8F8();

  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
  *(_OWORD *)&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle] = v40;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v15);
  v14[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 2;
  v16 = v37;
  swift_bridgeObjectRetain(v37);
  sub_10039AC68(v17);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes];
  *(_QWORD *)&v14[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = v19;
  v21 = swift_bridgeObjectRelease(v20);
  if ((DOCUTIDescriptor.isFolder.getter(v21) & 1) != 0)
  {
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

    v24 = (void **)&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
    swift_beginAccess(&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage], v34, 1, 0);
    v25 = *v24;
    *v24 = v23;
    v26 = v23;

    v27 = (void **)&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess(&v14[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage], v33, 1, 0);
    v28 = *v27;
    *v27 = v23;

  }
  swift_beginAccess(a4, v35, 33, 0);
  v29 = v14;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
  specialized Array._endMutation()(v32);
  swift_endAccess(v35);

}

id sub_10039BD38(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCFileTypeSuggester);
}

uint64_t type metadata accessor for DOCFileTypeSuggester()
{
  return objc_opt_self(_TtC5Files20DOCFileTypeSuggester);
}

id sub_10039BD64()
{
  id result;

  result = sub_10039BD80();
  qword_100651B90 = (uint64_t)result;
  return result;
}

id sub_10039BD80()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String *v13;
  uint64_t v14;
  id result;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  Swift::String v38;
  Swift::String_optional v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  Swift::String_optional v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  void *v49;
  Swift::String v50;
  Swift::String_optional v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  Swift::String v61;
  uint64_t v62;
  void *v63;
  Swift::String v64;
  Swift::String_optional v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  void *v69;
  Swift::String v70;
  Swift::String_optional v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  void *v77;
  void *v78;
  Swift::String v79;
  Swift::String_optional v80;
  Swift::String v81;
  Swift::String v82;
  uint64_t v83;
  void *v84;
  Swift::String v85;
  Swift::String_optional v86;
  Swift::String v87;
  Swift::String v88;
  uint64_t v89;
  void *v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String_optional v93;
  Swift::String v94;
  uint64_t v95;
  Swift::String *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  Swift::String v100;
  Swift::String_optional v101;
  Swift::String v102;
  Swift::String v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  Swift::String v107;
  Swift::String_optional v108;
  Swift::String v109;
  Swift::String v110;
  uint64_t v111;
  void *v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String_optional v115;
  Swift::String v116;
  uint64_t v117;
  __n128 v118;
  Swift::String *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  Swift::String *v131;
  Swift::String *v132;
  Swift::String *v133;
  uint64_t v134;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String *v137;
  uint64_t v138;
  Swift::String v139;
  Swift::String v140;
  Swift::String v141;
  Swift::String v142;
  Swift::String v143;
  Swift::String v144;
  Swift::String v145;
  Swift::String v146;
  Swift::String v147;
  Swift::String v148;
  Swift::String v149;
  Swift::String v150;
  Swift::String v151;
  Swift::String v152;
  Swift::String v153;

  v138 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0);
  v0 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v2 = (Swift::String *)((char *)&v131 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v137 = (Swift::String *)((char *)&v131 - v4);
  __chkstk_darwin(v5);
  v7 = (Swift::String *)((char *)&v131 - v6);
  __chkstk_darwin(v8);
  v10 = (Swift::String *)((char *)&v131 - v9);
  __chkstk_darwin(v11);
  v13 = (Swift::String *)((char *)&v131 - v12);
  result = (id)_DocumentManagerBundle(v14);
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v16 = result;
  v17._countAndFlagsBits = 0xD000000000000015;
  v139._countAndFlagsBits = 0xD00000000000002CLL;
  v139._object = (void *)0x800000010052D850;
  v17._object = (void *)0x800000010052D830;
  v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._countAndFlagsBits = 0x736567616D49;
  v19._object = (void *)0xE600000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v139);
  object = v20._object;

  result = (id)_DocumentManagerBundle(v21);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = result;
  v134 = v0;
  countAndFlagsBits = v20._countAndFlagsBits;
  v133 = v2;
  v140._countAndFlagsBits = 0xD000000000000027;
  v140._object = (void *)0x800000010052D880;
  v23._countAndFlagsBits = 0x7441736567616D49;
  v23._object = (void *)0xEF656C7469546D6FLL;
  v24.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v24.value._object = (void *)0xEB00000000656C62;
  v25._countAndFlagsBits = 0x736567616D49;
  v25._object = (void *)0xE600000000000000;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v140);

  result = (id)_DocumentManagerBundle(v27);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v28 = result;
  v141._countAndFlagsBits = 0xD000000000000063;
  v141._object = (void *)0x800000010052D8D0;
  v29._object = (void *)0x800000010052D8B0;
  v29._countAndFlagsBits = 0xD000000000000013;
  v30.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v30.value._object = (void *)0xEB00000000656C62;
  v31._countAndFlagsBits = 0x707C736567616D69;
  v31._object = (void *)0xEF73657275746369;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v141);

  v33 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v32._countAndFlagsBits, v32._object);
  swift_bridgeObjectRelease(v32._object);
  v35 = static UTType.image.getter(v34);
  v36 = object;
  v13->_countAndFlagsBits = countAndFlagsBits;
  v13->_object = v36;
  v13[1]._countAndFlagsBits = 0x6F746F6870;
  v13[1]._object = (void *)0xE500000000000000;
  v13[2] = v26;
  v13[3]._countAndFlagsBits = 0x6F746F6870;
  v13[3]._object = (void *)0xE500000000000000;
  v13[4]._countAndFlagsBits = v33;
  result = (id)_DocumentManagerBundle(v35);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v37 = result;
  v38._countAndFlagsBits = 0xD000000000000015;
  v142._countAndFlagsBits = 0xD00000000000002CLL;
  v142._object = (void *)0x800000010052D960;
  v38._object = (void *)0x800000010052D940;
  v39.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v39.value._object = (void *)0xEB00000000656C62;
  v40._countAndFlagsBits = 0x736F65646956;
  v40._object = (void *)0xE600000000000000;
  v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v142);

  result = (id)_DocumentManagerBundle(v42);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v43 = result;
  v143._countAndFlagsBits = 0xD000000000000027;
  v143._object = (void *)0x800000010052D990;
  v44._countAndFlagsBits = 0x7441736F65646956;
  v44._object = (void *)0xEF656C7469546D6FLL;
  v45.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v45.value._object = (void *)0xEB00000000656C62;
  v46._countAndFlagsBits = 0x736F65646956;
  v46._object = (void *)0xE600000000000000;
  v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, (NSBundle)v43, v46, v143);

  result = (id)_DocumentManagerBundle(v48);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v49 = result;
  v144._countAndFlagsBits = 0xD000000000000063;
  v144._object = (void *)0x800000010052D9E0;
  v50._object = (void *)0x800000010052D9C0;
  v50._countAndFlagsBits = 0xD000000000000013;
  v51.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v51.value._object = (void *)0xEB00000000656C62;
  v52._countAndFlagsBits = 0x6D7C736F65646976;
  v52._object = (void *)0xED0000736569766FLL;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, v51, (NSBundle)v49, v52, v144);

  v54 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v53._countAndFlagsBits, v53._object);
  swift_bridgeObjectRelease(v53._object);
  v56 = static UTType.movie.getter(v55);
  *v10 = v41;
  v10[1]._countAndFlagsBits = 0x6569766F6DLL;
  v10[1]._object = (void *)0xE500000000000000;
  v10[2] = v47;
  v10[3]._countAndFlagsBits = 0x6569766F6DLL;
  v10[3]._object = (void *)0xE500000000000000;
  v10[4]._countAndFlagsBits = v54;
  result = (id)_DocumentManagerBundle(v56);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v57 = result;
  v58._countAndFlagsBits = 0xD000000000000015;
  v145._countAndFlagsBits = 0xD000000000000031;
  v145._object = (void *)0x800000010052DA70;
  v58._object = (void *)0x800000010052DA50;
  v59.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v59.value._object = (void *)0xEB00000000656C62;
  v60._countAndFlagsBits = 0x6946206F69647541;
  v60._object = (void *)0xEB0000000073656CLL;
  v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v145);

  result = (id)_DocumentManagerBundle(v62);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v63 = result;
  object = v61._object;
  v146._countAndFlagsBits = 0xD00000000000002CLL;
  v146._object = (void *)0x800000010052DAB0;
  v64._countAndFlagsBits = 0x7441736F69647541;
  v64._object = (void *)0xEF656C7469546D6FLL;
  v65.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v65.value._object = (void *)0xEB00000000656C62;
  v66._countAndFlagsBits = 0x6946206F69647541;
  v66._object = (void *)0xEB0000000073656CLL;
  v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v146);

  result = (id)_DocumentManagerBundle(v68);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v69 = result;
  v147._countAndFlagsBits = 0xD000000000000068;
  v147._object = (void *)0x800000010052DB00;
  v70._object = (void *)0x800000010052DAE0;
  v70._countAndFlagsBits = 0xD000000000000013;
  v71.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v71.value._object = (void *)0xEB00000000656C62;
  v72._countAndFlagsBits = 0x6F737C6F69647561;
  v72._object = (void *)0xEB00000000646E75;
  v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v70, v71, (NSBundle)v69, v72, v147);

  v74 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v73._countAndFlagsBits, v73._object);
  v75 = swift_bridgeObjectRelease(v73._object);
  v76 = static UTType.audio.getter(v75);
  v77 = object;
  v7->_countAndFlagsBits = v61._countAndFlagsBits;
  v7->_object = v77;
  v7[1]._countAndFlagsBits = 0x636973756DLL;
  v7[1]._object = (void *)0xE500000000000000;
  v7[2] = v67;
  v7[3]._countAndFlagsBits = 0x636973756DLL;
  v7[3]._object = (void *)0xE500000000000000;
  v7[4]._countAndFlagsBits = v74;
  result = (id)_DocumentManagerBundle(v76);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v78 = result;
  v131 = v13;
  v132 = v10;
  v79._countAndFlagsBits = 0xD00000000000001CLL;
  v148._countAndFlagsBits = 0xD000000000000038;
  v148._object = (void *)0x800000010052DB90;
  v79._object = (void *)0x800000010052DB70;
  v80.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v80.value._object = (void *)0xEB00000000656C62;
  v81._countAndFlagsBits = 0x61746E6573657250;
  v81._object = (void *)0xED0000736E6F6974;
  v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, v80, (NSBundle)v78, v81, v148);

  result = (id)_DocumentManagerBundle(v83);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v84 = result;
  object = v7;
  v85._countAndFlagsBits = 0xD000000000000016;
  v149._countAndFlagsBits = 0xD000000000000033;
  v149._object = (void *)0x800000010052DBF0;
  v85._object = (void *)0x800000010052DBD0;
  v86.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v86.value._object = (void *)0xEB00000000656C62;
  v87._countAndFlagsBits = 0x61746E6573657250;
  v87._object = (void *)0xED0000736E6F6974;
  v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v85, v86, (NSBundle)v84, v87, v149);

  result = (id)_DocumentManagerBundle(v89);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v90 = result;
  v91._countAndFlagsBits = 0xD000000000000014;
  v92._countAndFlagsBits = 0xD00000000000001ALL;
  v150._countAndFlagsBits = 0xD00000000000006FLL;
  v150._object = (void *)0x800000010052DC70;
  v92._object = (void *)0x800000010052DC30;
  v91._object = (void *)0x800000010052DC50;
  v93.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v93.value._object = (void *)0xEB00000000656C62;
  v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, v93, (NSBundle)v90, v91, v150);

  v95 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v94._countAndFlagsBits, v94._object);
  swift_bridgeObjectRelease(v94._object);
  v96 = v137;
  v98 = static UTType.presentation.getter(v97);
  *v96 = v82;
  v96[1]._countAndFlagsBits = 0x642E6E6F2E636F64;
  v96[1]._object = (void *)0xEA0000000000636FLL;
  v96[2] = v88;
  v96[3]._countAndFlagsBits = 0x642E6E6F2E636F64;
  v96[3]._object = (void *)0xEA0000000000636FLL;
  v96[4]._countAndFlagsBits = v95;
  result = (id)_DocumentManagerBundle(v98);
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v99 = result;
  v100._countAndFlagsBits = 0xD000000000000018;
  v151._countAndFlagsBits = 0xD000000000000037;
  v151._object = (void *)0x800000010052DD00;
  v100._object = (void *)0x800000010052DCE0;
  v101.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v101.value._object = (void *)0xEB00000000656C62;
  v102._countAndFlagsBits = 0x4320656372756F53;
  v102._object = (void *)0xEB0000000065646FLL;
  v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v100, v101, (NSBundle)v99, v102, v151);

  result = (id)_DocumentManagerBundle(v104);
  v105 = (uint64_t)object;
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v106 = result;
  v107._countAndFlagsBits = 0xD000000000000012;
  v152._countAndFlagsBits = 0xD000000000000032;
  v152._object = (void *)0x800000010052DD60;
  v107._object = (void *)0x800000010052DD40;
  v108.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v108.value._object = (void *)0xEB00000000656C62;
  v109._countAndFlagsBits = 0x4320656372756F53;
  v109._object = (void *)0xEB0000000065646FLL;
  v110 = NSLocalizedString(_:tableName:bundle:value:comment:)(v107, v108, (NSBundle)v106, v109, v152);

  result = (id)_DocumentManagerBundle(v111);
  if (result)
  {
    v112 = result;
    v113._countAndFlagsBits = 0xD000000000000016;
    v153._countAndFlagsBits = 0xD00000000000006ELL;
    v153._object = (void *)0x800000010052DDE0;
    v113._object = (void *)0x800000010052DDA0;
    v114._object = (void *)0x800000010052DDC0;
    v115.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v115.value._object = (void *)0xEB00000000656C62;
    v114._countAndFlagsBits = 0xD000000000000016;
    v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v113, v115, (NSBundle)v112, v114, v153);

    v117 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter(v116._countAndFlagsBits, v116._object);
    v118 = swift_bridgeObjectRelease(v116._object);
    v119 = v133;
    static UTType.sourceCode.getter(v118);
    *v119 = v103;
    v119[1]._countAndFlagsBits = 0x642E6E6F2E636F64;
    v119[1]._object = (void *)0xEA0000000000636FLL;
    v119[2] = v110;
    v119[3]._countAndFlagsBits = 0x642E6E6F2E636F64;
    v119[3]._object = (void *)0xEA0000000000636FLL;
    v119[4]._countAndFlagsBits = v117;
    v120 = sub_10006922C((uint64_t *)&unk_100651CC0);
    v121 = *(_QWORD *)(v134 + 72);
    v122 = *(unsigned __int8 *)(v134 + 80);
    v123 = (v122 + 32) & ~v122;
    v124 = 4 * v121;
    v125 = swift_allocObject(v120, v123 + 5 * v121, v122 | 7);
    *(_OWORD *)(v125 + 16) = xmmword_1004DB530;
    v126 = v125 + v123;
    v127 = (uint64_t)v131;
    sub_10039D888((uint64_t)v131, v126);
    v128 = (uint64_t)v132;
    sub_10039D888((uint64_t)v132, v126 + v121);
    sub_10039D888(v105, v126 + 2 * v121);
    v129 = v126 + 3 * v121;
    v130 = (uint64_t)v137;
    sub_10039D888((uint64_t)v137, v129);
    sub_10039D8CC((uint64_t)v119, v126 + v124);
    sub_10039D910(v130);
    sub_10039D910(v105);
    sub_10039D910(v128);
    sub_10039D910(v127);
    return (id)v125;
  }
LABEL_31:
  __break(1u);
  return result;
}

double sub_10039C9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  uint64_t *v32;
  double result;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD aBlock[5];
  _QWORD *v44;

  if (objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_configuration), "isFilesApp"))
  {
    if ((unint64_t)a4 >> 62)
      goto LABEL_28;
    v9 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a4);
    for (; v9; v9 = _CocoaArrayWrapper.endIndex.getter(v39))
    {
      if ((a4 & 0xC000000000000001) != 0)
      {
        v10 = v4;
        v11 = 0;
        v4 = &OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
        while (1)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a4);
          v13 = v11 + 1;
          if (__OFADD__(v11, 1))
            break;
          v14 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category);
          swift_unknownObjectRelease(v12);
          if (v14 == 2)
          {
            swift_bridgeObjectRelease(a4);
            v4 = v10;
            goto LABEL_23;
          }
          ++v11;
          if (v13 == v9)
          {
            v41 = a3;
            swift_bridgeObjectRelease(a4);
            v4 = v10;
            goto LABEL_15;
          }
        }
        __break(1u);
      }
      else
      {
        v15 = 0;
        while (1)
        {
          v16 = v15 + 1;
          if (__OFADD__(v15, 1))
            break;
          if (*(_BYTE *)(*(_QWORD *)(a4 + 8 * v15 + 32) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) == 2)
          {
            swift_bridgeObjectRelease(a4);
            goto LABEL_23;
          }
          ++v15;
          if (v16 == v9)
            goto LABEL_14;
        }
      }
      __break(1u);
LABEL_28:
      if (a4 < 0)
        v39 = a4;
      else
        v39 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a4);
    }
LABEL_14:
    v41 = a3;
    swift_bridgeObjectRelease(a4);
LABEL_15:
    v17 = swift_allocObject(&unk_1005E4490, 24, 7);
    *(_QWORD *)(v17 + 16) = _swiftEmptyArrayStorage;
    v18 = (_QWORD *)(v17 + 16);
    v20 = String.doc_sanitizedForComparison.getter(a1, a2, v19);
    v22 = v21;
    v42 = v4;
    v23 = *(_QWORD **)((char *)v4
                     + OBJC_IVAR____TtC5Files35DOCNaturalLanguageFileTypeSuggester_naturalLanguageFileTypeDescriptors);
    v24 = v23[2];
    if (v24)
    {
      v25 = v20;
      v40 = v17;
      v26 = *(_QWORD *)(type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0)
                      - 8);
      v27 = (char *)v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      v28 = *(_QWORD *)(v26 + 72);
      swift_bridgeObjectRetain(v23);
      do
      {
        sub_10039CCFC(v27, v25, v22, a1, a2, v18);
        v27 += v28;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease(v22);
      v17 = v40;
    }
    else
    {
      v23 = v21;
    }
    swift_bridgeObjectRelease(v23);
    v29 = (_QWORD *)swift_allocObject(&unk_1005E44B8, 56, 7);
    v29[2] = v42;
    v29[3] = v17;
    v29[4] = v41;
    v29[5] = a1;
    v29[6] = a2;
    aBlock[4] = sub_10039D7E8;
    v44 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E44D0;
    v30 = _Block_copy(aBlock);
    v31 = v44;
    v32 = v42;
    swift_retain();
    swift_bridgeObjectRetain(a2);
    swift_release(v31);
    DOCRunInMainThread(v30);
    _Block_release(v30);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  else
  {
LABEL_23:
    v34 = (char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate);
    if (Strong)
    {
      v36 = Strong;
      v37 = *((_QWORD *)v34 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8))(v4, _swiftEmptyArrayStorage, a3, a1, a2, ObjectType, v37);
      *(_QWORD *)&result = swift_unknownObjectRelease(v36).n128_u64[0];
    }
  }
  return result;
}

void sub_10039CCFC(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *i;
  uint64_t v13;
  Swift::String v14;
  Swift::Bool v15;
  _BYTE *v16;
  _QWORD *v17;
  double v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSString v29;
  void *v30;
  id v31;
  void **v32;
  void *v33;
  uint64_t v34;
  char *v35;
  NSString v36;
  id v37;
  void **v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char v54[24];
  char v55[24];
  objc_super v56;

  v6 = *((_QWORD *)a1 + 8);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(v6);
    for (i = (_QWORD *)(v6 + 40); ; i += 2)
    {
      v13 = *i;
      swift_bridgeObjectRetain(*i);
      v14._countAndFlagsBits = a2;
      v14._object = a3;
      v15 = String.hasPrefix(_:)(v14);
      swift_bridgeObjectRelease(v13);
      if (v15)
        break;
      if (!--v7)
      {
        swift_bridgeObjectRelease(v6);
        return;
      }
    }
    swift_bridgeObjectRelease(v6);
    v16 = objc_allocWithZone((Class)type metadata accessor for DOCFileTypeSuggestion());
    *(_QWORD *)&v16[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = 0;
    v16[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
    v17 = &v16[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    *v17 = a4;
    v17[1] = a5;
    v56.receiver = v16;
    v56.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
    *(_QWORD *)&v18 = swift_bridgeObjectRetain(a5).n128_u64[0];
    v19 = (char *)objc_msgSendSuper2(&v56, "init", v18);
    v20 = *((_QWORD *)a1 + 1);
    v21 = &v19[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files13DOCSuggestion_title + 8];
    *(_QWORD *)v21 = *(_QWORD *)a1;
    *((_QWORD *)v21 + 1) = v20;
    v23 = v19;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease(v22);
    sub_1000DA8F8();

    v24 = *((_QWORD *)a1 + 5);
    v25 = &v23[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    v26 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle + 8];
    *(_QWORD *)v25 = *((_QWORD *)a1 + 4);
    *((_QWORD *)v25 + 1) = v24;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v26);
    v23[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 2;
    v27 = *((_QWORD *)a1 + 3);
    v28 = v23;
    swift_bridgeObjectRetain(v27);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v30 = (void *)objc_opt_self(UIImage);
    v31 = objc_msgSend(v30, "systemImageNamed:", v29);

    v32 = (void **)&v28[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
    swift_beginAccess(&v28[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage], v55, 1, 0);
    v33 = *v32;
    *v32 = v31;

    v34 = *((_QWORD *)a1 + 7);
    v35 = v28;
    swift_bridgeObjectRetain(v34);
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v30, "systemImageNamed:", v36, swift_bridgeObjectRelease(v34).n128_f64[0]);

    v38 = (void **)&v35[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess(&v35[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage], v54, 1, 0);
    v39 = *v38;
    *v38 = v37;

    v40 = sub_10006922C((uint64_t *)&unk_10064B460);
    v41 = type metadata accessor for UTType(0);
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(unsigned __int8 *)(v42 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v40, v44 + *(_QWORD *)(v42 + 72), v43 | 7);
    *(_OWORD *)(v45 + 16) = xmmword_1004D9670;
    v46 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v45 + v44, &a1[*(int *)(v46 + 36)], v41);
    v47 = *(_QWORD *)&v35[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes];
    *(_QWORD *)&v35[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = v45;
    swift_bridgeObjectRelease(v47);
    v48 = v35;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
    v50 = *(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v49 = *(_QWORD *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v50 >= v49 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
    v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
    specialized Array._endMutation()(v51);

  }
}

uint64_t sub_10039D080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v18[24];

  v10 = a1 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate, a2);
  if (result)
  {
    v13 = result;
    v14 = *(_QWORD *)(v10 + 8);
    ObjectType = swift_getObjectType(result, v12);
    swift_beginAccess(a2 + 16, v18, 0, 0);
    v16 = *(_QWORD *)(a2 + 16);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
    swift_bridgeObjectRetain(v16);
    v17(a1, v16, a3, a4, a5, ObjectType, v14);
    swift_bridgeObjectRelease(v16);
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

uint64_t sub_10039D158()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC5Files35DOCNaturalLanguageFileTypeSuggester_naturalLanguageFileTypeDescriptors));
}

id sub_10039D168(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCNaturalLanguageFileTypeSuggester);
}

uint64_t type metadata accessor for DOCNaturalLanguageFileTypeSuggester()
{
  return objc_opt_self(_TtC5Files35DOCNaturalLanguageFileTypeSuggester);
}

uint64_t *sub_10039D1A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v15);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[8];
    v10 = *(int *)(a3 + 36);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[8] = v9;
    v13 = type metadata accessor for UTType(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13);
  }
  return v3;
}

uint64_t sub_10039D290(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[8]);
  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for UTType(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_10039D2F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[8];
  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[8] = v8;
  v12 = type metadata accessor for UTType(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  return a1;
}

_QWORD *sub_10039D3B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = a2[8];
  v15 = a1[8];
  a1[8] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(int *)(a3 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for UTType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_10039D4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UTType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

_QWORD *sub_10039D518(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a1[8];
  a1[8] = a2[8];
  swift_bridgeObjectRelease(v14);
  v15 = *(int *)(a3 + 36);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for UTType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_10039D5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039D5D0);
}

uint64_t sub_10039D5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_10039D64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039D658);
}

uint64_t sub_10039D658(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(uint64_t a1)
{
  uint64_t result;

  result = qword_100651C78;
  if (!qword_100651C78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor);
  return result;
}

uint64_t sub_10039D708(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_1004E59E8;
  v4[1] = &unk_1004E59E8;
  v4[2] = &unk_1004E59E8;
  v4[3] = &unk_1004E59E8;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for UTType(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10039D790()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039D7B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10039D7E8()
{
  uint64_t *v0;

  return sub_10039D080(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_10039D7F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 56, 7);
}

void sub_10039D82C(uint64_t a1)
{
  uint64_t v1;

  sub_10039B83C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10039D83C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

double sub_10039D878()
{
  uint64_t *v0;

  return sub_10039B920(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10039D888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039D8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039D910(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10039D954(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x657469726F766166;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x69726F7661666E75;
    else
      v4 = 0x656C67676F74;
    if (v3 == 1)
      v5 = 0xEA00000000006574;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x69726F7661666E75;
      else
        v2 = 0x656C67676F74;
      if (v6 == 1)
        v7 = 0xEA00000000006574;
      else
        v7 = 0xE600000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x657469726F766166;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x657469726F766166)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10039DA6C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_10039DAB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039DB34 + 4 * byte_1004E5A04[a2]))(0xD000000000000011);
}

uint64_t sub_10039DB34(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x800000010050BA40;
  if (a1 == 0xD000000000000011 && v1 == 0x800000010050BA40)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000011, 0x800000010050BA40, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_10039DBF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039DC30(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039DCE0 + 4 * byte_1004E5A10[a2]))(2037411651);
}

uint64_t sub_10039DCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 2037411651 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 2037411651, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_10039DDC4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039DE04(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039DE98 + 4 * byte_1004E5A1E[a2]))(0x796C746E65636572);
}

uint64_t sub_10039DE98(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x796C746E65636572 && v1 == 0xEC00000064657355)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x796C746E65636572, 0xEC00000064657355, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEC00000064657355);
  return v2 & 1;
}

uint64_t sub_10039DF74(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64726177726F66;
  else
    v3 = 1801675106;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64726177726F66;
  else
    v5 = 1801675106;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10039E010(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039E060(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039E0E8 + 4 * byte_1004E5A29[a2]))(0x676E697461657263);
}

uint64_t sub_10039E0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x676E697461657263 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x676E697461657263, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_10039E1B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039E208(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039E2A4 + 4 * byte_1004E5A36[a2]))(2036429415);
}

uint64_t sub_10039E2A4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 2036429415 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 2036429415, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

void sub_10039E3A0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_10039E3EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039E4EC + 4 * byte_1004E5A47[a2]))(0x64616F6C6E776F64);
}

uint64_t sub_10039E4EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64616F6C6E776F64 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x64616F6C6E776F64, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v2 & 1;
}

uint64_t sub_10039E650(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x637241656C707061;
  else
    v3 = 7367034;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xEC00000065766968;
  if ((a2 & 1) != 0)
    v5 = 0x637241656C707061;
  else
    v5 = 7367034;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000065766968;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10039E6F4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10039E758(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10039E7B4 + 4 * byte_1004E5A56[a2]))(0x6E69726165707061);
}

uint64_t sub_10039E7B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E69726165707061 && v1 == 0xE900000000000067)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6E69726165707061, 0xE900000000000067, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000067);
  return v2 & 1;
}

uint64_t sub_10039E858(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEF646574726F7070;
  v3 = 0x7553746F4E707061;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 0xD00000000000001ALL;
    if (v4 == 1)
      v6 = 0x800000010050BB00;
    else
      v6 = 0x800000010050BB20;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x7553746F4E707061;
  v6 = 0xEF646574726F7070;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 0xD00000000000001ALL;
    if (v7 == 1)
      v2 = 0x800000010050BB00;
    else
      v2 = 0x800000010050BB20;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_10039E974(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  char *v6;
  void *v7;
  void **v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _BYTE v25[24];

  v3 = v2;
  v6 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
  if (v6)
  {
    v7 = v6;
    v8 = (void **)&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v25, 0, 0);
    v9 = *v8;
    if (v9)
    {
      v10 = type metadata accessor for DOCItemCollectionViewController(0);
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v12 = (void *)v11;
        v13 = v9;

        v14 = objc_msgSend(v3, "effectiveSearchController");
        if (v14)
        {
          v15 = v14;
          if ((objc_msgSend(v14, "isActive") & 1) != 0)
          {
            v16 = v15;
          }
          else
          {
            sub_100188564(a1, a2 & 1);
            v17 = objc_msgSend(v3, "internalNavigationController");
            v18 = objc_msgSend(v17, "topViewController");

            if (v18)
            {
              v19 = type metadata accessor for DOCColumnViewController(0);
              if (swift_dynamicCastClass(v18, v19))
              {
                v20 = objc_msgSend(v12, "parentViewController");
                if (v20)
                {
                  v21 = v20;
                  v22 = type metadata accessor for DOCBrowserContainerController();
                  v23 = (void *)swift_dynamicCastClass(v21, v22);
                  if (v23)
                  {
                    sub_100383A7C(v23, 1);
                    v24 = v18;
                    v18 = v15;
                  }
                  else
                  {
                    v24 = v21;
                    v21 = v15;
                  }

                }
                else
                {
                  v21 = v15;
                }
              }
              else
              {
                v21 = v13;
                v13 = v15;
              }

              v16 = v13;
              v13 = v18;
            }
            else
            {
              v16 = v13;
              v13 = v15;
            }
          }

        }
        v7 = v13;
      }
    }

  }
}

uint64_t DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _UNKNOWN **v12;
  char v13;
  id v14;
  unsigned int v15;
  id v16;
  char v17;
  char v18;
  char v19;
  id v20;
  unsigned int v21;
  id v22;
  char v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  void **v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  void *v35;
  void **v36;
  void *v37;
  uint64_t v38;
  id v39;
  char *v40;
  void *v41;
  void **v42;
  void *v43;
  uint64_t v44;
  id v45;
  char *v46;
  void *v47;
  void **v48;
  void *v49;
  uint64_t v50;
  id v51;
  char *v52;
  void **v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void *v61;
  void **v62;
  void *v63;
  uint64_t v64;
  id v65;
  char *v66;
  void **v67;
  uint64_t v68;
  id v69;
  char *v70;
  char *v71;
  void *v72;
  void **v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  char *v78;
  void **v79;
  uint64_t v80;
  id v81;
  char *v82;
  void *v83;
  char *v84;
  void **v85;
  uint64_t v86;
  id v87;
  char *v88;
  char *v89;
  void **v90;
  uint64_t v91;
  id v92;
  char *v93;
  char *v94;
  void *v95;
  void **v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  unsigned __int8 v104;
  void *v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  id v111;
  unsigned __int8 v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  void *v117;
  char v118;
  char *v119;
  id *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  void *v129;
  unsigned __int8 v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  double v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  id v140;
  void *v141;
  id v142;
  _BYTE v144[24];
  _QWORD v145[3];
  uint64_t v146;

  v3 = v2;
  if ((static Selector.== infix(_:_:)("performFind:", a1) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("performGoToEnclosingFolder:", a1) & 1) != 0)
      return (uint64_t)objc_msgSend(v2, "canPerformGoToEnclosingFolder");
    if ((static Selector.== infix(_:_:)("performGoBackInHistory:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("performGoForwardInHistory:", a1) & 1) != 0)
    {
      v9 = objc_msgSend(v2, "traitCollection");
      v10 = objc_msgSend(v9, "supportHistoryNavigation");
LABEL_12:
      v6 = (uint64_t)v10;
      goto LABEL_13;
    }
    if ((static Selector.== infix(_:_:)("performViewAsIcons:", a1) & 1) != 0
      || (static Selector.== infix(_:_:)("performViewAsList:", a1) & 1) != 0)
    {
      return 1;
    }
    if ((static Selector.== infix(_:_:)("performViewAsColumns:", a1) & 1) != 0)
    {
      v12 = sub_10000D9D0();
      v13 = sub_1000DFDCC(2, (uint64_t)v12);
      swift_bridgeObjectRelease(v12);
      return v13 & 1;
    }
    if ((static Selector.== infix(_:_:)("performViewAsUserSizeSmaller:", a1) & 1) != 0)
    {
      v14 = objc_msgSend((id)objc_opt_self(DOCFeature), "viewOptionsSizeSetting");
      v15 = objc_msgSend(v14, "isEnabled");

      if (!v15)
        return 0;
      v16 = objc_msgSend(v3, "configuration");
      v17 = sub_1001FD214((uint64_t)v16);

      v18 = v17 & 1;
      v19 = 1;
      return sub_1003B8900(v19, v18) != 2;
    }
    if ((static Selector.== infix(_:_:)("performViewAsUserSizeLarger:", a1) & 1) != 0)
    {
      v20 = objc_msgSend((id)objc_opt_self(DOCFeature), "viewOptionsSizeSetting");
      v21 = objc_msgSend(v20, "isEnabled");

      if (!v21)
        return 0;
      v22 = objc_msgSend(v3, "configuration");
      v23 = sub_1001FD214((uint64_t)v22);

      v18 = v23 & 1;
      v19 = 0;
      return sub_1003B8900(v19, v18) != 2;
    }
    if ((static Selector.== infix(_:_:)("performUseGrouping:", a1) & 1) != 0)
    {
      v24 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (!v24)
        return 0;
      v9 = v24;
      v25 = (uint64_t *)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
      v6 = *v25;
      if (v6)
      {
        v26 = type metadata accessor for DOCItemCollectionViewController(0);
        v6 = swift_dynamicCastClass(v6, v26) != 0;
      }
LABEL_13:

      return v6;
    }
    if ((static Selector.== infix(_:_:)("performSortByName:", a1) & 1) != 0)
    {
      v27 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v27)
      {
        v28 = v27;
        v29 = (void **)&v27[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v27[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v30 = *v29;
        if (*v29)
        {
          v31 = type metadata accessor for DOCItemCollectionViewController(0);
          v32 = (void *)swift_dynamicCastClass(v30, v31);
          if (v32)
            v33 = v30;
        }
        else
        {
          v32 = 0;
        }

      }
      else
      {
        v32 = 0;
      }
      v52 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      v6 = (uint64_t)v52;
      if (v52)
      {
        v53 = (void **)&v52[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v52[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v54 = *v53;
        if (v54)
        {
          v55 = type metadata accessor for DOCItemCollectionViewController(0);
          v56 = swift_dynamicCastClass(v54, v55);
          if (v56)
          {
            v57 = v54;

            v58 = (char *)objc_retain(*(id *)(v56
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            v59 = *(_QWORD *)&v58[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
            swift_bridgeObjectRetain(v59);

            if (*(_QWORD *)(v59 + 16))
            {
              swift_bridgeObjectRetain(v59);
              __asm { BR              X8 }
            }
LABEL_112:

            swift_bridgeObjectRelease(v59);
            v6 = 0;
            goto LABEL_113;
          }
          goto LABEL_111;
        }
        goto LABEL_110;
      }
      goto LABEL_109;
    }
    if ((static Selector.== infix(_:_:)("performSortByDate:", a1) & 1) != 0)
    {
      v34 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v34)
      {
        v35 = v34;
        v36 = (void **)&v34[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v34[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v37 = *v36;
        if (*v36)
        {
          v38 = type metadata accessor for DOCItemCollectionViewController(0);
          v32 = (void *)swift_dynamicCastClass(v37, v38);
          if (v32)
            v39 = v37;
        }
        else
        {
          v32 = 0;
        }

      }
      else
      {
        v32 = 0;
      }
      v66 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      v6 = (uint64_t)v66;
      if (v66)
      {
        v67 = (void **)&v66[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v66[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v54 = *v67;
        if (v54)
        {
          v68 = type metadata accessor for DOCItemCollectionViewController(0);
          v56 = swift_dynamicCastClass(v54, v68);
          if (v56)
          {
            v69 = v54;

            v70 = (char *)objc_retain(*(id *)(v56
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            v59 = *(_QWORD *)&v70[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
            swift_bridgeObjectRetain(v59);

            if (*(_QWORD *)(v59 + 16))
            {
              swift_bridgeObjectRetain(v59);
              __asm { BR              X8 }
            }
            goto LABEL_112;
          }
LABEL_111:

          v6 = 0;
          v54 = 0;
LABEL_115:
          sub_100144F34(0, (uint64_t)v54, v56);
          return v6;
        }
LABEL_110:

        v6 = 0;
LABEL_114:
        v56 = 0;
        goto LABEL_115;
      }
LABEL_109:

LABEL_113:
      v54 = 0;
      goto LABEL_114;
    }
    if ((static Selector.== infix(_:_:)("performSortBySize:", a1) & 1) != 0)
    {
      v40 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v40)
      {
        v41 = v40;
        v42 = (void **)&v40[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v40[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v43 = *v42;
        if (*v42)
        {
          v44 = type metadata accessor for DOCItemCollectionViewController(0);
          v32 = (void *)swift_dynamicCastClass(v43, v44);
          if (v32)
            v45 = v43;
        }
        else
        {
          v32 = 0;
        }

      }
      else
      {
        v32 = 0;
      }
      v78 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      v6 = (uint64_t)v78;
      if (v78)
      {
        v79 = (void **)&v78[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v78[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v54 = *v79;
        if (v54)
        {
          v80 = type metadata accessor for DOCItemCollectionViewController(0);
          v56 = swift_dynamicCastClass(v54, v80);
          if (v56)
          {
            v81 = v54;

            v82 = (char *)objc_retain(*(id *)(v56
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            v59 = *(_QWORD *)&v82[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
            swift_bridgeObjectRetain(v59);

            if (*(_QWORD *)(v59 + 16))
            {
              swift_bridgeObjectRetain(v59);
              __asm { BR              X8 }
            }
            goto LABEL_112;
          }
          goto LABEL_111;
        }
        goto LABEL_110;
      }
      goto LABEL_109;
    }
    if ((static Selector.== infix(_:_:)("performSortByKind:", a1) & 1) != 0)
    {
      v46 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v46)
      {
        v47 = v46;
        v48 = (void **)&v46[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v46[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v49 = *v48;
        if (*v48)
        {
          v50 = type metadata accessor for DOCItemCollectionViewController(0);
          v32 = (void *)swift_dynamicCastClass(v49, v50);
          if (v32)
            v51 = v49;
        }
        else
        {
          v32 = 0;
        }

      }
      else
      {
        v32 = 0;
      }
      v84 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      v6 = (uint64_t)v84;
      if (v84)
      {
        v85 = (void **)&v84[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v84[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v54 = *v85;
        if (v54)
        {
          v86 = type metadata accessor for DOCItemCollectionViewController(0);
          v56 = swift_dynamicCastClass(v54, v86);
          if (v56)
          {
            v87 = v54;

            v88 = (char *)objc_retain(*(id *)(v56
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            v59 = *(_QWORD *)&v88[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
            swift_bridgeObjectRetain(v59);

            if (*(_QWORD *)(v59 + 16))
            {
              swift_bridgeObjectRetain(v59);
              __asm { BR              X8 }
            }
            goto LABEL_112;
          }
          goto LABEL_111;
        }
        goto LABEL_110;
      }
      goto LABEL_109;
    }
    if ((static Selector.== infix(_:_:)("performSortByTags:", a1) & 1) != 0)
    {
      v60 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v60)
      {
        v61 = v60;
        v62 = (void **)&v60[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v60[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v63 = *v62;
        if (*v62)
        {
          v64 = type metadata accessor for DOCItemCollectionViewController(0);
          v32 = (void *)swift_dynamicCastClass(v63, v64);
          if (v32)
            v65 = v63;
        }
        else
        {
          v32 = 0;
        }

      }
      else
      {
        v32 = 0;
      }
      v89 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      v6 = (uint64_t)v89;
      if (v89)
      {
        v90 = (void **)&v89[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v89[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v54 = *v90;
        if (v54)
        {
          v91 = type metadata accessor for DOCItemCollectionViewController(0);
          v56 = swift_dynamicCastClass(v54, v91);
          if (v56)
          {
            v92 = v54;

            v93 = (char *)objc_retain(*(id *)(v56
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            v59 = *(_QWORD *)&v93[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
            swift_bridgeObjectRetain(v59);

            if (*(_QWORD *)(v59 + 16))
            {
              swift_bridgeObjectRetain(v59);
              __asm { BR              X8 }
            }
            goto LABEL_112;
          }
          goto LABEL_111;
        }
        goto LABEL_110;
      }
      goto LABEL_109;
    }
    if ((static Selector.== infix(_:_:)("performSortBySharedBy:", a1) & 1) != 0)
    {
      v71 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      if (v71)
      {
        v72 = v71;
        v73 = (void **)&v71[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v71[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v144, 0, 0);
        v74 = *v73;
        if (*v73)
        {
          v75 = type metadata accessor for DOCItemCollectionViewController(0);
          v76 = (void *)swift_dynamicCastClass(v74, v75);
          if (v76)
            v77 = v74;
        }
        else
        {
          v76 = 0;
        }

      }
      else
      {
        v76 = 0;
      }
      v94 = (char *)objc_msgSend(v3, "effectiveBrowserViewController");
      if (v94)
      {
        v95 = v94;
        v96 = (void **)&v94[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v94[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
        v97 = *v96;
        if (v97
          && (v98 = type metadata accessor for DOCItemCollectionViewController(0),
              (v99 = swift_dynamicCastClass(v97, v98)) != 0))
        {
          v100 = v99;
          v101 = v97;

          v102 = (char *)objc_retain(*(id *)(v100
                                           + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

          v103 = *(_QWORD *)&v102[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
          swift_bridgeObjectRetain(v103);

          if (*(_QWORD *)(v103 + 16))
          {
            swift_bridgeObjectRetain(v103);
            __asm { BR              X8 }
          }

          swift_bridgeObjectRelease(v103);
        }
        else
        {

        }
      }
      else
      {

      }
LABEL_130:
      v104 = 0;
      return v104 & 1;
    }
    if ((static Selector.== infix(_:_:)("performGroupByKind:", a1) & 1) != 0)
    {
      if ((sub_1003A15DC() & 1) == 0)
        return 0;
      v83 = (void *)DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter();
      if (!v83)
        return 0;
LABEL_135:

      v105 = (void *)DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter();
      v106 = sub_1001453FC();

      return v106 != 8;
    }
    if ((static Selector.== infix(_:_:)("performGroupByDate:", a1) & 1) != 0)
    {
      if ((sub_1003A15DC() & 1) == 0)
        return 0;
      v83 = (void *)DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter();
      if (!v83)
        return 0;
      goto LABEL_135;
    }
    if ((static Selector.== infix(_:_:)("performGroupBySize:", a1) & 1) != 0)
    {
      if ((sub_1003A15DC() & 1) == 0)
        return 0;
      v83 = (void *)DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter();
      if (!v83)
        return 0;
      goto LABEL_135;
    }
    if ((static Selector.== infix(_:_:)("performGroupBySharedBy:", a1) & 1) != 0)
    {
      if ((sub_1003A15DC() & 1) == 0)
        return 0;
      v83 = (void *)DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter();
      if (!v83)
        return 0;
      goto LABEL_135;
    }
    if ((static Selector.== infix(_:_:)("performCreateFolder:", a1) & 1) != 0)
    {
      v6 = (uint64_t)sub_100137C00(0, a1, a2);
      if (!v6)
        return v6;
      v107 = type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass(v6, v107))
      {
        v108 = 0;
LABEL_145:
        v110 = sub_10024FB04(v108);

        return v110 & 1;
      }
      goto LABEL_153;
    }
    if ((static Selector.== infix(_:_:)("performCreateFolderWithSelection:", a1) & 1) != 0)
    {
      v6 = (uint64_t)sub_100137C00(0, a1, a2);
      if (!v6)
        return v6;
      v109 = type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass(v6, v109))
      {
        v108 = 1;
        goto LABEL_145;
      }
LABEL_153:

      return 0;
    }
    if ((static Selector.== infix(_:_:)("performCreateDocumentOrOpenNewWindow:", a1) & 1) != 0)
    {
      v111 = objc_msgSend(v2, "configuration");
      v112 = objc_msgSend(v111, "isFilesApp");

      if ((v112 & 1) != 0)
        return 1;
      v113 = objc_msgSend(v3, "hierarchyController");
      v114 = (void *)sub_100005D2C();

      if (!v114)
        return 0;
      v115 = objc_msgSend(v114, "fileProviderItem");

      if (!v115)
        goto LABEL_167;
      v116 = objc_msgSend(v114, "fileProviderItem");
      if (v116)
      {
        v117 = v116;
        v118 = sub_1003A1AF4(v116);

        if ((v118 & 1) != 0)
        {
          v104 = 1;

          return v104 & 1;
        }
LABEL_167:
        v104 = sub_1003A16A8();

        return v104 & 1;
      }
      __break(1u);
LABEL_185:
      __break(1u);
      JUMPOUT(0x1003A0274);
    }
    if ((static Selector.== infix(_:_:)("performEjectMedium:", a1) & 1) != 0)
    {
      v119 = (char *)objc_msgSend(v2, "effectiveBrowserViewController");
      v6 = (uint64_t)v119;
      if (!v119)
        return v6;
      v120 = (id *)&v119[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v119[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v145, 0, 0);
      v121 = *v120;
      v9 = *v120;

      if (!v121)
        return 0;
      v122 = type metadata accessor for DOCItemCollectionViewController(0);
      v123 = swift_dynamicCastClass(v9, v122);
      if (!v123)
      {

        return 0;
      }
      v10 = objc_msgSend(*(id *)(v123 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "isEjectable");
      goto LABEL_12;
    }
    if ((static Selector.== infix(_:_:)("performGoToLocation:", a1) & 1) != 0)
    {
      v124 = objc_msgSend(v2, "presentedViewController");

      if (!v124)
      {
        v125 = objc_msgSend(v3, "traitCollection");
        v126 = objc_msgSend(v125, "horizontalSizeClass");

        return v126 == (id)2;
      }
      return 0;
    }
    if ((static Selector.== infix(_:_:)("performDismiss:", a1) & 1) == 0)
    {
      if ((static Selector.== infix(_:_:)("performRename:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("performCommandReturnKey:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("performMoveHere:", a1) & 1) != 0
        || (static Selector.== infix(_:_:)("performConfirmPickerExportOrDrillIn:", a1) & 1) != 0)
      {
        v131 = sub_100137C00(0, a1, a2);
        if (!v131)
          return 0;
        v9 = v131;
        v132 = type metadata accessor for DOCItemCollectionViewController(0);
        v6 = swift_dynamicCastClass(v9, v132);
        if (v6)
        {
          sub_1000685A8(a2, (uint64_t)v145);
          v133 = v146;
          if (v146)
          {
            v134 = sub_10007E7A0(v145, v146);
            v135 = *(_QWORD *)(v133 - 8);
            v136 = __chkstk_darwin(v134);
            v138 = &v144[-((v137 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
            (*(void (**)(_BYTE *, double))(v135 + 16))(v138, v136);
            v139 = _bridgeAnythingToObjectiveC<A>(_:)(v138, v133);
            (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v138, v133);
            sub_100068588(v145);
          }
          else
          {
            v139 = 0;
          }
          v6 = (uint64_t)objc_msgSend((id)v6, "canPerformAction:withSender:", a1, v139);
          swift_unknownObjectRelease(v139);
        }
        goto LABEL_13;
      }
      if ((static Selector.== infix(_:_:)("performShowDebugMenu:", a1) & 1) != 0)
        return 1;
      if ((static Selector.== infix(_:_:)("performConnectToServer:", a1) & 1) == 0)
        return 2;
      v140 = DOCFullDocumentManagerViewController.tabbedBrowserController.getter();
      if (v140)
      {
        v141 = v140;
        v142 = objc_msgSend(v3, "configuration");
        v104 = sub_10003796C(v142);

        return v104 & 1;
      }
      goto LABEL_130;
    }
    v127 = sub_100131280();

    if (v127)
    {
      v128 = sub_100131280();
      if (!v128)
        goto LABEL_185;
      v129 = v128;
      v130 = objc_msgSend(v128, "isActive");

      if ((v130 & 1) != 0)
        return 1;
    }
    v9 = objc_msgSend(v3, "configuration");
    v10 = objc_msgSend(v9, "isPickerUI");
    goto LABEL_12;
  }
  if ((objc_msgSend(v2, "isEditing") & 1) != 0)
    return 0;
  v7 = objc_msgSend(v2, "internalNavigationController");
  v6 = (uint64_t)objc_msgSend(v7, "topViewController");

  if (v6)
  {
    v8 = objc_msgSend((id)v6, "navigationItem");

    v6 = (uint64_t)objc_msgSend(v8, "searchController");
    if (v6)
    {

      return 1;
    }
  }
  return v6;
}

_QWORD *DOCFullDocumentManagerViewController.keyCommands.getter()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, "configuration");
  v2 = objc_msgSend(v1, "isPopoverOrWidget");

  if ((v2 & 1) != 0)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(DOCKeyCommandController), "dismissingKeyCommandsWithAction:", "performDismiss:");
  v5 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  sub_100130620(v6);
  return _swiftEmptyArrayStorage;
}

void sub_1003A05C4(uint64_t *a1)
{
  void *v1;
  char *v3;
  id v4;
  id *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v11[24];

  v3 = (char *)objc_msgSend(v1, "effectiveBrowserViewController");
  v4 = v3;
  if (!v3)
  {
    v6 = 0;
    goto LABEL_9;
  }
  v5 = (id *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
  v6 = *v5;
  if (!v6)
  {

LABEL_8:
    v4 = 0;
    goto LABEL_9;
  }
  v7 = type metadata accessor for DOCItemCollectionViewController(0);
  v8 = swift_dynamicCastClass(v6, v7);
  if (!v8)
  {

    v6 = 0;
    goto LABEL_8;
  }
  v9 = v8;
  v10 = v6;

  v4 = *(id *)(v9 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v6 = objc_msgSend(v4, "identifier");
LABEL_9:
  sub_100138A9C(a1, (id *)v6);

}

void sub_1003A09D0()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  _BYTE v16[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v16, 0, 0);
    v4 = *v3;
    if (v4)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = (void *)swift_dynamicCastClass(v4, v5);
      if (v6)
        v7 = v4;
    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }
  v8 = sub_100145114();
  v10 = v9;
  v12 = v11;
  v14 = v13;

  if (v10)
  {
    sub_100136024(v8, v10, v12, v14 & 1);
    sub_10004F2F0(0, (unint64_t *)&unk_1006443B0, DOCUserInterfaceStateStore_ptr);
    v15 = objc_msgSend(v0, "configuration");
    static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)(v8, v10, v12, v14 & 1, v15);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v10);

  }
}

void sub_1003A0D1C()
{
  void *v0;
  char *v1;
  id v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  void **v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v18, 0, 0);
    v4 = *v3;
    if (*v3)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = v6;
        v8 = v4;

        v2 = *(id *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
        v9 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
        if (v9)
        {
          v10 = v9;
          v11 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess(&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v17, 0, 0);
          v12 = *v11;
          if (v12)
          {
            v13 = (void *)swift_dynamicCastClass(v12, v5);
            if (v13)
              v14 = v12;
          }
          else
          {
            v13 = 0;
          }

        }
        else
        {
          v13 = 0;
        }
        v15 = sub_1001453FC();

        if (v15 != 8)
        {
          v16 = objc_msgSend(v2, "identifier");
          sub_100138F78(v15, v16);

          v2 = v16;
        }
      }
    }

  }
}

void sub_1003A1018(void *a1, uint64_t a2, void *a3, uint64_t *a4, SEL *a5)
{
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[4];

  v8 = *a4;
  v14[3] = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
  v14[0] = a3;
  v9 = a3;
  v10 = a1;
  v11 = sub_100137C00(0, v8, (uint64_t)v14);
  sub_10007EB54((uint64_t)v14);
  if (v11)
  {
    v12 = type metadata accessor for DOCItemCollectionViewController(0);
    v13 = (void *)swift_dynamicCastClass(v11, v12);
    if (v13)
      objc_msgSend(v13, *a5, v9, v14[0]);

    v9 = v10;
    v10 = v11;
  }

}

void sub_1003A1324(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unsigned int v19;
  __objc2_prot *v20;
  __objc2_prot *v21;

  if (objc_msgSend(a1, "doc_isCancellingKeyCommand"))
  {
    v3 = objc_msgSend(v1, "presentedViewController");
    if (v3)
    {
      v4 = v3;
      v20 = &OBJC_PROTOCOL___DOCKeyCommandDismissible;
      v5 = swift_dynamicCastObjCProtocolConditional(v3, 1, &v20);

      if (v5)
      {
        v6 = objc_msgSend(v1, "presentedViewController");
        if (v6)
        {
          v7 = v6;
          objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
    }
    v8 = objc_msgSend(v1, "internalNavigationController");
    v9 = objc_msgSend(v8, "topViewController");

    if (v9)
    {
      v10 = objc_msgSend(v9, "navigationItem");

      v11 = objc_msgSend(v10, "searchController");
      if (v11)
      {
        if (objc_msgSend(v11, "isActive"))
        {
          objc_msgSend(v11, "setActive:", 0);

          return;
        }

      }
    }
    v17 = objc_msgSend(v1, "configuration");
    goto LABEL_18;
  }
  if (!objc_msgSend(a1, "doc_isDismissingKeyCommand"))
    return;
  v12 = objc_msgSend(v1, "presentedViewController");
  if (!v12
    || (v13 = v12,
        v21 = &OBJC_PROTOCOL___DOCKeyCommandDismissible,
        v14 = swift_dynamicCastObjCProtocolConditional(v12, 1, &v21),
        v13,
        !v14))
  {
    v17 = objc_msgSend(v1, "configuration");
LABEL_18:
    v18 = v17;
    v19 = objc_msgSend(v18, "isPickerUI");

    if (v19)
      objc_msgSend(v1, "didIndicateCancelPicker");
    return;
  }
  v15 = objc_msgSend(v1, "presentedViewController");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

uint64_t sub_1003A15DC()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v9;
  char v10;
  _BYTE v12[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (!v1)
    goto LABEL_6;
  v2 = v1;
  v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v12, 0, 0);
  v4 = *v3;
  if (!v4
    || (v5 = type metadata accessor for DOCItemCollectionViewController(0), (v6 = swift_dynamicCastClass(v4, v5)) == 0))
  {

LABEL_6:
    v10 = 0;
    return v10 & 1;
  }
  v7 = v6;
  v8 = v4;

  v9 = static DOCItemGroupingBehavior.__derived_enum_equals(_:_:)(*(unsigned __int8 *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior), 7);
  v10 = v9 ^ 1;
  return v10 & 1;
}

unint64_t sub_1003A16A8()
{
  void *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  id v6;
  void *v7;
  id v8;
  char v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = (char *)objc_msgSend(v0, "hierarchyController");
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v11, 0, 0);
  v3 = *v2;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease(v3);
    v9 = 0;
    return v9 & 1;
  }
  if (v3 < 0)
    v10 = v3;
  else
    v10 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v4)
    goto LABEL_13;
LABEL_3:
  result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    v7 = v6;

    swift_bridgeObjectRelease(v3);
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v8 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
    v9 = static NSObject.== infix(_:_:)(v7, v8);

    return v9 & 1;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.validate(_:)(UICommand a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  uint64_t v10;
  id v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *v16;
  id v17;
  unsigned int v18;
  void *v19;
  void *v20;
  id v21;
  Swift::String v22;
  Swift::String v23;

  v3 = static Selector.== infix(_:_:)("performCreateDocumentOrOpenNewWindow:", -[objc_class action](a1.super.super.isa, "action"));
  if ((v3 & 1) == 0)
    return;
  v4 = (id)_DocumentManagerBundle(v3);
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = v4;
  v22._object = (void *)0x800000010052DE50;
  v6._countAndFlagsBits = 0x646E69572077654ELL;
  v6._object = (void *)0xEA0000000000776FLL;
  v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v7.value._object = (void *)0xEB00000000656C62;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000031;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v22)._object;

  v11 = (id)_DocumentManagerBundle(v10);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v12 = v11;
  v23._object = (void *)0x800000010052DE90;
  v13._countAndFlagsBits = 0x4420657461657243;
  v13._object = (void *)0xEF746E656D75636FLL;
  v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v14.value._object = (void *)0xEB00000000656C62;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD000000000000031;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v23)._object;

  v17 = objc_msgSend(v1, "configuration");
  v18 = objc_msgSend(v17, "isFilesApp");

  if (v18)
    v19 = v16;
  else
    v19 = object;
  if (v18)
    v20 = object;
  else
    v20 = v16;
  swift_bridgeObjectRelease(v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  -[objc_class setDiscoverabilityTitle:](a1.super.super.isa, "setDiscoverabilityTitle:", v21);

}

uint64_t sub_1003A1A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v6;
  if (v3 == v7 && v5 == v6)
  {
    v9 = 1;
    v8 = v5;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v6, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v8);
  return v9 & 1;
}

uint64_t sub_1003A1AF4(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v7;
  _BYTE v8[40];

  v2 = (void *)FPActionImportHere;
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v3, v8);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a1;
  v7 = inited;
  specialized Array._endMutation()(inited);
  v5 = a1;
  LOBYTE(a1) = sub_1003598CC(v2, v7);
  swift_bridgeObjectRelease(v7);
  return a1 & 1;
}

void sub_1003A1B80()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, "internalNavigationController");
  v2 = objc_msgSend(v1, "topViewController");

  if (v2)
  {
    v3 = objc_msgSend(v2, "navigationItem");

    v4 = objc_msgSend(v3, "searchController");
    if (v4)
    {
      objc_msgSend(v4, "setActive:", 1);
      v5 = objc_msgSend(v4, "searchBar");
      objc_msgSend(v5, "becomeFirstResponder");

    }
  }
}

uint64_t sub_1003A1C74()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  _QWORD *v8;
  uint64_t KeyPath;
  double v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_10064EBF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = objc_msgSend(v6, "supportHistoryNavigation");

  if (v7)
  {
    sub_10006922C((uint64_t *)&unk_100644190);
    if (qword_100640D60 != -1)
      swift_once(&qword_100640D60, sub_100083BC4);
    v8 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1);
    KeyPath = swift_getKeyPath(&unk_1004E5A78);
    v10 = __chkstk_darwin(KeyPath);
    *(&v13 - 2) = v1;
    (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v8) + 0x90))(&v14, v10);

    swift_release(KeyPath);
    v11 = v14;
    sub_100267FB4(0, (uint64_t)v4);
    swift_release(v11);
  }
  return sub_100322334((uint64_t)v4);
}

uint64_t sub_1003A1E10()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  _QWORD *v8;
  uint64_t KeyPath;
  double v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t)v0;
  v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_10064EBF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = objc_msgSend(v6, "supportHistoryNavigation");

  if (v7)
  {
    sub_10006922C((uint64_t *)&unk_100644190);
    if (qword_100640D60 != -1)
      swift_once(&qword_100640D60, sub_100083BC4);
    v8 = (_QWORD *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v1);
    KeyPath = swift_getKeyPath(&unk_1004E5A78);
    v10 = __chkstk_darwin(KeyPath);
    *(&v13 - 2) = v1;
    (*(void (**)(uint64_t *__return_ptr, double))((swift_isaMask & *v8) + 0x90))(&v14, v10);

    swift_release(KeyPath);
    v11 = v14;
    sub_100267FB4(1, (uint64_t)v4);
    swift_release(v11);
  }
  return sub_100322334((uint64_t)v4);
}

void sub_1003A1FAC()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unsigned int v9;
  _BYTE v10[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v10, 0, 0);
    v4 = *v3;
    if (*v3)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = swift_dynamicCastClass(v4, v5);
      if (v6)
      {
        v7 = v6;
        v8 = v4;

        v9 = 7;
        if ((static DOCItemGroupingBehavior.__derived_enum_equals(_:_:)(*(unsigned __int8 *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior), 7) & 1) != 0)v9 = *(unsigned __int8 *)(*(_QWORD *)(v7+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)+ OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode);
        DOCItemCollectionViewController.groupOption(changeTo:)(v9);
        v2 = v8;
      }
    }

  }
}

double sub_1003A2094()
{
  void *v0;
  char *v1;
  void *v2;
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  void *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  _BYTE v20[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v19, 0, 0);
    v4 = *v3;
    if (*v3)
    {
      v5 = type metadata accessor for DOCItemCollectionViewController(0);
      v6 = (void *)swift_dynamicCastClass(v4, v5);
      if (v6)
        v7 = v4;
    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }
  v8 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v8)
  {
    v9 = v8;
    v10 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v20, 0, 0);
    v11 = *v10;
    if (v11
      && (v12 = type metadata accessor for DOCItemCollectionViewController(0),
          (v13 = swift_dynamicCastClass(v11, v12)) != 0))
    {
      v14 = v13;
      v15 = v11;

      v16 = (char *)objc_retain(*(id *)(v14
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

      v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
      swift_bridgeObjectRetain(v17);

      if (*(_QWORD *)(v17 + 16))
      {
        swift_bridgeObjectRetain(v17);
        __asm { BR              X8 }
      }

      *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
    }
    else
    {

    }
  }
  else
  {

  }
  return result;
}

void sub_1003A22E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n(v0, 2);
  swift_bridgeObjectRelease(0xE400000000000000);
  JUMPOUT(0x1003A22F8);
}

void sub_1003A23B8()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  unint64_t v25;
  objc_class *v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void (**v33)(_QWORD, _QWORD, _QWORD);
  id v34;
  Class isa;
  void *v36;
  uint64_t v37;
  id v38;
  objc_super v39;
  char v40[80];

  v1 = v0;
  v2 = objc_msgSend(v0, "configuration");
  v3 = objc_msgSend(v2, "isFilesApp");

  if (v3)
  {
    v4 = objc_msgSend(v1, "actionManager");
    v5 = sub_10034EEA4();

    if ((unint64_t)v5 >> 62)
      goto LABEL_27;
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v37))
    {
      v38 = v1;
      v7 = UIDocumentBrowserActionIdentifierNewWindow;
      v8 = 4;
      while (1)
      {
        v9 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v5)
           : *(id *)(v5 + 8 * v8);
        v10 = v9;
        v1 = (void *)(v8 - 3);
        if (__OFADD__(v8 - 4, 1))
          break;
        v11 = objc_msgSend(v9, "identifier");
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        if (v12 == v15 && v14 == v16)
        {
          swift_bridgeObjectRelease_n(v5, 2);
          goto LABEL_19;
        }
        v18 = v16;
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v18);
        if ((v19 & 1) != 0)
        {
          v14 = v5;
LABEL_19:
          swift_bridgeObjectRelease_n(v14, 2);
          v20 = v10;
          v21 = objc_msgSend(v38, "configuration");
          v22 = sub_10006922C(&qword_100641A70);
          inited = swift_initStackObject(v22, v40);
          *(_OWORD *)(inited + 16) = xmmword_1004D9670;
          *(_QWORD *)(inited + 32) = 0xD000000000000036;
          *(_QWORD *)(inited + 40) = 0x8000000100519820;
          v24 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
          *(_QWORD *)(inited + 72) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          *(_QWORD *)(inited + 48) = v24;
          v25 = sub_10008B1F0(inited);
          v26 = (objc_class *)type metadata accessor for DOCActionContext();
          v27 = (char *)objc_allocWithZone(v26);
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = 0;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v21;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v38;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
          *(_QWORD *)&v27[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v25;
          v39.receiver = v27;
          v39.super_class = v26;
          v28 = v38;
          v29 = objc_msgSendSuper2(&v39, "init");
          v30 = objc_msgSend(v28, "actionManager");
          if (objc_msgSend(v20, "requiresResolvedItems"))
          {
            v31 = v20;
            sub_10035E100((uint64_t)_swiftEmptyArrayStorage, v31, v29);

            v30 = v31;
            goto LABEL_23;
          }
          v32 = objc_msgSend(v20, "unresolvedHandler");
          if (v32)
          {
            v33 = (void (**)(_QWORD, _QWORD, _QWORD))v32;
            v34 = v29;
            _Block_copy(v33);
            sub_10006922C((uint64_t *)&unk_1006424B0);
            isa = Array._bridgeToObjectiveC()().super.isa;
            ((void (**)(_QWORD, Class, id))v33)[2](v33, isa, v34);

            _Block_release(v33);
            _Block_release(v33);
LABEL_23:

            v30 = v20;
            v36 = v29;
          }
          else
          {
            v36 = v20;
          }

          return;
        }

        ++v8;
        if (v1 == (void *)v6)
          goto LABEL_15;
      }
      __break(1u);
LABEL_27:
      if (v5 < 0)
        v37 = v5;
      else
        v37 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
    }
LABEL_15:
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    objc_msgSend(v1, "performCreateDocument");
  }
}

void sub_1003A281C()
{
  void *v0;
  char *v1;
  void *v2;
  id *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(void *);
  _QWORD *v10;
  _BYTE v11[24];

  v1 = (char *)objc_msgSend(v0, "effectiveBrowserViewController");
  if (v1)
  {
    v2 = v1;
    v3 = (id *)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v11, 0, 0);
    v4 = *v3;
    v5 = *v3;

    if (v4)
    {
      v6 = type metadata accessor for DOCItemCollectionViewController(0);
      v7 = swift_dynamicCastClass(v5, v6);
      if (v7)
      {
        v8 = *(_QWORD **)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
        v9 = *(void (**)(void *))((swift_isaMask & *v8) + 0x288);
        v10 = v8;
        v9(v0);

        v5 = v10;
      }

    }
  }
}

void sub_1003A28FC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  char *v7;

  v1 = v0;
  objc_msgSend(v0, "setGoToFileProviderSources:", 0);
  v2 = objc_msgSend(v0, "configuration");
  v3 = objc_msgSend(v1, "sourceObserver");
  if (v3)
  {
    v4 = v3;
    v5 = swift_allocObject(&unk_1005E45B0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    v7 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v2, v4, (uint64_t)sub_1003A2A0C, v5);
    objc_msgSend(v1, "setSourceOrderObserver:", v7);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003A29E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003A2A0C(uint64_t a1)
{
  uint64_t v1;

  sub_1003DCAC8(a1, v1);
}

id sub_1003A2A18(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  id v12;
  id v13;
  uint64_t v14;
  id v16;

  v3 = v2;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v7 = v6;
  v16 = 0;
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v3), "wrapperWithURL:readonly:error:", v6, a2 & 1, &v16);

  v9 = v16;
  if (v8)
  {
    v10 = type metadata accessor for URL(0);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v12 = v9;
    v11(a1, v10);
  }
  else
  {
    v13 = v16;
    _convertNSErrorToError(_:)(v9);

    swift_willThrow();
    v14 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
  }
  return v8;
}

id sub_1003A2B38(uint64_t a1, void *a2, _QWORD *a3)
{
  char *v3;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  Class isa;
  id result;
  void *v31;
  NSString v32;
  id v33;
  uint64_t v34;
  objc_class *v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  unsigned __int8 v41;
  objc_super v42;
  id v43[2];
  __int128 v44;
  _QWORD v45[4];

  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems] = 0;
  v7 = OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID;
  v8 = v3;
  *(_QWORD *)&v3[v7] = sub_1003F2170((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy] = a1;
  swift_unknownObjectRetain(a1);

  v9 = objc_msgSend(a3, "copy");
  _bridgeAnyObjectToAny(_:)(v45, v9);
  swift_unknownObjectRelease(v9);
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr);
  v11 = (unint64_t)&type metadata for Any;
  swift_dynamicCast(v43, v45, (char *)&type metadata for Any + 8, v10, 7);
  v12 = v43[0];
  objc_msgSend(v43[0], "setInProcess:", 1);
  objc_msgSend(v12, "setNeverCreateBookmarkForOpenInPlace:", 1);
  objc_msgSend(v12, "setShouldIgnoreInteractionMode:", 1);
  if ((objc_msgSend(a3, "isFilesApp") & 1) != 0)
    goto LABEL_13;
  v39 = a1;
  v40 = a2;
  v13 = objc_msgSend(a3, "forbiddenActionIdentifiers");
  v14 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierArchive);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserActionIdentifierUnarchive);
  v20 = v14[2];
  v21 = v20 + 2;
  if (__OFADD__(v20, 2))
  {
    __break(1u);
  }
  else
  {
    a1 = v19;
    v37 = v18;
    v38 = a3;
    v22 = swift_bridgeObjectRetain(v14);
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v22);
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || (a3 = v14, v21 > v14[3] >> 1))
    {
      if (v20 <= v21)
        v24 = v20 + 2;
      else
        v24 = v20;
      a3 = sub_100081A50(isUniquelyReferenced_nonNull_native, v24, 1, v14);
    }
    v20 = a3[2];
    v11 = a3[3];
    v21 = v20 + 1;
    swift_bridgeObjectRetain(v17);
    if (v20 < v11 >> 1)
      goto LABEL_10;
  }
  a3 = sub_100081A50((_QWORD *)(v11 > 1), v21, 1, a3);
LABEL_10:
  a3[2] = v21;
  v25 = &a3[2 * v20];
  v25[4] = v15;
  v25[5] = v17;
  v26 = a3[3];
  v27 = v20 + 2;
  swift_bridgeObjectRetain(a1);
  if (v21 >= v26 >> 1)
    a3 = sub_100081A50((_QWORD *)(v26 > 1), v20 + 2, 1, a3);
  a2 = v40;
  a3[2] = v27;
  v28 = &a3[2 * v21];
  v28[4] = v37;
  v28[5] = a1;
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setForbiddenActionIdentifiers:", isa, swift_bridgeObjectRelease(a3).n128_f64[0]);

  a3 = v38;
  a1 = v39;
LABEL_13:
  result = objc_msgSend(a2, "_auxiliaryConnection");
  if (result)
  {
    v31 = result;
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v31, "valueForEntitlement:", v32);

    if (v33)
    {
      _bridgeAnyObjectToAny(_:)(v43, v33);
      swift_unknownObjectRelease(v33);
    }
    else
    {
      *(_OWORD *)v43 = 0u;
      v44 = 0u;
    }
    sub_100070EDC((uint64_t)v43, (uint64_t)v45, &qword_100642730);
    if (v45[3])
    {
      if (swift_dynamicCast(&v41, v45, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      {
        v34 = v41;
LABEL_22:
        objc_msgSend(v12, "setSupportsRelatedFilesInPicker:", v34);
        v35 = (objc_class *)type metadata accessor for DOCServiceDocumentBrowserViewController();
        v42.receiver = v8;
        v42.super_class = v35;
        v36 = objc_msgSendSuper2(&v42, "initWithConfiguration:", v12);
        objc_msgSend(v36, "setDelegate:", v36);

        swift_unknownObjectRelease(a1);
        return v36;
      }
    }
    else
    {
      sub_10000CB4C((uint64_t)v45, &qword_100642730);
    }
    v34 = 0;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1003A3088()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  id v4;
  id result;
  void *v6;
  void *v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for DOCServiceDocumentBrowserViewController();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  v2 = objc_msgSend(v0, "configuration");
  v3 = objc_msgSend(v2, "isInUIPDocumentLanding");

  if (!v3)
    return objc_msgSend(v1, "setTabbedBrowserViewControllerDelegate:", v1);
  v4 = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectBackdropView), "init");
  objc_msgSend(v4, "setRenderMode:", 1);
  if (qword_100641070 != -1)
    swift_once(&qword_100641070, sub_100379F44);
  objc_msgSend(v4, "setCaptureGroup:", qword_100672C98);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v6 = result;
    UIView.doc_addAutoresizingSubview(_:insetBy:)(v4, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);

    result = objc_msgSend(v1, "view");
    if (result)
    {
      v7 = result;
      objc_msgSend(result, "sendSubviewToBack:", v4);

      return objc_msgSend(v1, "setTabbedBrowserViewControllerDelegate:", v1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1003A32DC(char a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  unsigned __int8 *v6;
  uint64_t v7;
  id v8;
  unsigned __int8 v9;
  id v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DOCServiceDocumentBrowserViewController();
  objc_msgSendSuper2(&v11, "viewDidDisappear:", a1 & 1);
  v4 = objc_msgSend(v2, "effectiveFullBrowser");
  v5 = objc_msgSend(v4, "documentManager");

  v6 = (unsigned __int8 *)objc_msgSend(v5, "activeDocumentCreationSession");
  if (v6)
  {
    v7 = v6[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase];

    __asm { BR              X9 }
  }
  v8 = objc_msgSend(v2, "configuration");
  v9 = objc_msgSend(v8, "isInUIPDocumentLanding");

  if ((v9 & 1) == 0)
  {
    v10 = objc_msgSend(v2, "effectiveFullBrowser");
    objc_msgSend(v10, "dismissSearch");

  }
}

void sub_1003A35A8(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  char **v26;
  uint8_t *v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  void *v39;
  id v40;
  __n128 v41;
  Class isa;
  _QWORD v43[2];
  uint8_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v3 = v2;
  v49 = a2;
  v50 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003AE48C(1);
  v53 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems);
  if (v12)
  {
    swift_bridgeObjectRetain(v12);
    sub_10013064C(v13);
  }
  v14 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems);
  if (v14)
  {
    swift_bridgeObjectRetain(v14);
    sub_10013064C(v15);
  }
  v16 = (uint64_t)v53;
  v17 = a1;
  v18 = sub_1003AE218(v16, (uint64_t)v17);
  swift_bridgeObjectRelease(v16);

  if (v18)
  {
    v48 = v5;
    v20 = Logger.DocumentManager.unsafeMutableAddressor(v19);
    v21 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
    v22 = v18;
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.info.getter(v24);
    v26 = &selRef_setTextSelectionBehavior_;
    if (os_log_type_enabled(v23, v25))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = (_QWORD *)swift_slowAlloc(32, -1);
      v53 = v45;
      v46 = v9;
      v47 = v21;
      *(_DWORD *)v27 = 136315138;
      v43[1] = v27 + 4;
      v44 = v27;
      v28 = objc_msgSend(v22, "uuid");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

      v31 = UUID.uuidString.getter(v30);
      v33 = v32;
      v34 = v48;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v50);
      v51 = sub_1000544FC(v31, v33, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);

      v35 = v33;
      v26 = &selRef_setTextSelectionBehavior_;
      swift_bridgeObjectRelease(v35);
      v36 = v25;
      v37 = v44;
      _os_log_impl((void *)&_mh_execute_header, v23, v36, "didPerformAction: performing action on button %s", v44, 0xCu);
      v38 = v45;
      swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
      v34 = v48;
    }
    v39 = *(void **)(v3 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    v40 = objc_msgSend(v22, v26[36]);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v50);
    objc_msgSend(v39, "_didTriggerBarButtonWithUUID:overflowAction:", isa, v49 & 1);

  }
}

id sub_1003A3A4C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v9[5];
  uint64_t v10;

  v3 = (void *)objc_opt_self(DOCUISession);
  v4 = swift_allocObject(&unk_1005E5848, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v9[4] = sub_1003B1E78;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004A82C;
  v9[3] = &unk_1005E5860;
  v5 = _Block_copy(v9);
  v6 = v10;
  v7 = a2;
  objc_msgSend(v3, "performAfterCATransactionCommits:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  return objc_msgSend(v7, "updateTraitCollectionTabBarSetting");
}

void sub_1003A3C38(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  double v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  __n128 v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _OWORD v56[2];
  __objc2_prot *v57;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "setAction:", "didPerformActionOn:", v5);
  objc_msgSend(a1, "setTarget:", v1);
  v8 = objc_msgSend(a1, "menuRepresentation");
  if (v8)
  {
    v9 = v8;
    v57 = &OBJC_PROTOCOL___UIMenuLeaf;
    v10 = swift_dynamicCastObjCProtocolConditional(v8, 1);
    v54 = v7;
    if (!v10)
    {
      *(_QWORD *)&v56[0] = 0;
      *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(34);
      *(_QWORD *)&v20 = swift_bridgeObjectRelease(*((_QWORD *)&v56[0] + 1)).n128_u64[0];
      *(_QWORD *)&v56[0] = 0xD000000000000020;
      *((_QWORD *)&v56[0] + 1) = 0x800000010052E0B0;
      v21 = objc_msgSend(v9, "description", v20);
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v25._countAndFlagsBits = v22;
      v25._object = v24;
      String.append(_:)(v25);

      swift_bridgeObjectRelease(v24);
      v27 = *((_QWORD *)&v56[0] + 1);
      v28 = *(_QWORD *)&v56[0];
      goto LABEL_13;
    }
    v11 = (void *)v10;
    v12 = v9;
    v13 = objc_msgSend(v11, "title");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = String.count.getter(v14, v16);
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
    if (v17 < 1)
    {
      v19 = objc_msgSend(a1, "title", v18);
      if (!v19)
      {
        v29 = 0;
        v31 = 0xE000000000000000;
        goto LABEL_8;
      }
    }
    else
    {
      v19 = objc_msgSend(v11, "title", v18);
    }
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v31 = v30;

LABEL_8:
    v32 = objc_msgSend(v11, "image");
    if (!v32)
      v32 = objc_msgSend(a1, "image");
    if (String.count.getter(v29, v31) > 0 || v32)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v44 = swift_allocObject(&unk_1005E4920, 24, 7);
      swift_unknownObjectWeakInit(v44 + 16);
      v45 = swift_allocObject(&unk_1005E4948, 32, 7);
      *(_QWORD *)(v45 + 16) = v44;
      *(_QWORD *)(v45 + 24) = a1;
      v46 = v32;
      v47 = a1;
      v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v29, v31, 0, 0, v32, 0, 0, 0, v48, 0, 0, 0, sub_1003B0F98, v45);
      objc_msgSend(v47, "setMenuRepresentation:", v49);

LABEL_18:
      return;
    }

    swift_bridgeObjectRelease(v31);
    v28 = 0xD000000000000023;
    v27 = 0x800000010052E0E0;
    v7 = v54;
LABEL_13:
    v33 = Logger.DocumentManager.unsafeMutableAddressor(v26);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v33, v3);
    v34 = a1;
    swift_bridgeObjectRetain(v27);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(22, -1);
      v39 = swift_slowAlloc(8, -1);
      v53 = v4;
      v40 = (_QWORD *)v39;
      v51 = swift_slowAlloc(32, -1);
      v55 = (uint64_t)v34;
      *(_QWORD *)&v56[0] = v51;
      *(_DWORD *)v38 = 138412546;
      v50 = v28;
      v52 = v3;
      v41 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
      *v40 = v34;

      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain(v27);
      v55 = sub_1000544FC(v50, v27, (uint64_t *)v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "BarButtonItem can not be displayed in overflow menu. bbi: %@, reason: %s", (uint8_t *)v38, 0x16u);
      v42 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v40, 1, v42);
      swift_slowDealloc(v40, -1, -1);
      v43 = v51;
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n(v27, 2);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    sub_10004F2F0(0, &qword_100651E38, UICommand_ptr);
    memset(v56, 0, sizeof(v56));
    v12 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(0, 0xE000000000000000, 0, 0, 0, 0, "actionNoOneImplements:", v56, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    objc_msgSend(v34, "setMenuRepresentation:", v12);
    goto LABEL_18;
  }
}

void sub_1003A4210(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1003A35A8(a3, 1);

  }
}

void sub_1003A426C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t aBlock[5];
  uint64_t v36;
  char v37[16];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.DocumentManager.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v33 = a2;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    aBlock[0] = v32;
    *(_DWORD *)v13 = 136315138;
    v31 = v13 + 4;
    v14 = sub_10004F2F0(0, &qword_100644390, DOCRemoteBarButton_ptr);
    swift_bridgeObjectRetain(a1);
    v16 = Array.description.getter(v15, v14);
    v18 = v17;
    swift_bridgeObjectRelease(a1);
    v34 = sub_1000544FC(v16, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    v19 = v18;
    a2 = v33;
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "DOCServiceDocumentBrowserViewController received new leading items %s", v13, 0xCu);
    v20 = v32;
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v21 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems];
  *(_QWORD *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v21);
  v22 = a2;
  sub_1003AE0AC(a1, (uint64_t)v22, (uint64_t)v37, "DOCServiceDocumentBrowserViewController: received Leading Button with UUID : %s");
  v24 = v23;

  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "setAdditionalLeadingNavigationBarButtonItems:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  v27 = swift_allocObject(&unk_1005E57A8, 24, 7);
  *(_QWORD *)(v27 + 16) = v22;
  aBlock[4] = (uint64_t)sub_1003B1EE4;
  v36 = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005E57C0;
  v28 = _Block_copy(aBlock);
  v29 = v36;
  v30 = v22;
  objc_msgSend(v26, "performAfterLaunch:", v28, swift_release(v29).n128_f64[0]);
  _Block_release(v28);

}

void sub_1003A45DC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t aBlock[5];
  uint64_t v36;
  char v37[16];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.DocumentManager.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v33 = a2;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    aBlock[0] = v32;
    *(_DWORD *)v13 = 136315138;
    v31 = v13 + 4;
    v14 = sub_10004F2F0(0, &qword_100644390, DOCRemoteBarButton_ptr);
    swift_bridgeObjectRetain(a1);
    v16 = Array.description.getter(v15, v14);
    v18 = v17;
    swift_bridgeObjectRelease(a1);
    v34 = sub_1000544FC(v16, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    v19 = v18;
    a2 = v33;
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "DOCServiceDocumentBrowserViewController recived new trailing items %s", v13, 0xCu);
    v20 = v32;
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v21 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems];
  *(_QWORD *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v21);
  v22 = a2;
  sub_1003AE0AC(a1, (uint64_t)v22, (uint64_t)v37, "DOCServiceDocumentBrowserViewController: received Trailing Button with UUID : %s");
  v24 = v23;

  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "setAdditionalTrailingNavigationBarButtonItems:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  v27 = swift_allocObject(&unk_1005E5708, 24, 7);
  *(_QWORD *)(v27 + 16) = v22;
  aBlock[4] = (uint64_t)sub_1003B1EE4;
  v36 = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005E5720;
  v28 = _Block_copy(aBlock);
  v29 = v36;
  v30 = v22;
  objc_msgSend(v26, "performAfterLaunch:", v28, swift_release(v29).n128_f64[0]);
  _Block_release(v28);

}

void sub_1003A4930(void **a1@<X0>, uint64_t a2@<X1>, const char *a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  __n128 v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD v31[2];
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v37 = a3;
  v40 = a2;
  v7 = type metadata accessor for UUID(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v16 = Logger.DocumentManager.unsafeMutableAddressor(v15);
  v38 = v11;
  v39 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v16, v10);
  v17 = v14;
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v43 = v32;
    v34 = v4;
    *(_DWORD *)v21 = 136315138;
    v31[1] = v21 + 4;
    v22 = objc_msgSend(v17, "uuid");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

    v25 = UUID.uuidString.getter(v24);
    v33 = a4;
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
    v41 = sub_1000544FC(v25, v27, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);

    v28 = v27;
    a4 = v33;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, v37, v21, 0xCu);
    v29 = v32;
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
  v30 = objc_msgSend(v17, "barButton");
  sub_1003A3C38(v30);
  *a4 = v30;
}

double sub_1003A4BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  double result;
  _QWORD v18[5];
  uint64_t v19;

  v11 = sub_10004F2F0(0, &qword_100644390, DOCRemoteBarButton_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v11);
  v13 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  v18[4] = a5;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10004A82C;
  v18[3] = a6;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = a1;
  swift_bridgeObjectRetain(v12);
  swift_release(v15);
  DOCRunInMainThread(v14);
  _Block_release(v14);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_1003A4CD0(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Bool v11;
  NSURL *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  double v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  int v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v27 = a2;
  v28 = a4;
  v29 = a3;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 17) & ~v15;
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1005E5528, v18 + 8, v15 | 7);
  *(_BYTE *)(v19 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19 + v16, v10, v7);
  v20 = (_QWORD *)(v19 + v17);
  v21 = v27;
  *v20 = v28;
  v20[1] = a5;
  *(_QWORD *)(v19 + v18) = v21;
  aBlock[4] = sub_1003B1CC8;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005E5540;
  v22 = _Block_copy(aBlock);
  v23 = v31;
  swift_retain();
  v24 = v21;
  *(_QWORD *)&v25 = swift_release(v23).n128_u64[0];
  objc_msgSend(v24, "revealDocumentAtURL:importIfNeeded:completion:", v14, v29 & 1, v22, v25);
  _Block_release(v22);

}

uint64_t sub_1003A4E6C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t), uint64_t a6, void (*a7)(char *, char *, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSURL *v27;
  void *v28;
  void *v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t (*v40)(_QWORD, uint64_t);
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v39 = a7;
  v40 = a5;
  v41 = a6;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - v18;
  if ((a3 & 1) != 0)
    URL.stopAccessingSecurityScopedResource()();
  sub_1000271D4(a1, (uint64_t)v12, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    return v40(0, a2);
  }
  v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v20(v19, v12, v13);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    return v40(0, a2);
  }
  v22 = objc_msgSend(v39, "configuration");
  v39 = v20;
  v23 = v22;
  v24 = objc_msgSend(v22, "hostIdentifier");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v38 = v25;

  v26 = swift_allocObject(&unk_1005E5578, 32, 7);
  *(_QWORD *)(v26 + 16) = v40;
  *(_QWORD *)(v26 + 24) = v41;
  swift_retain();
  URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v27);
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  v31 = *(unsigned __int8 *)(v14 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (v15 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject(&unk_1005E55A0, v33 + 8, v31 | 7);
  *(_QWORD *)(v34 + 16) = sub_1003B1D3C;
  *(_QWORD *)(v34 + 24) = v26;
  v39((char *)(v34 + v32), v16, v13);
  *(_QWORD *)(v34 + v33) = 0;
  aBlock[4] = sub_1003AF838;
  v43 = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005E55B8;
  v35 = _Block_copy(aBlock);
  v36 = v43;
  swift_retain();
  v37 = swift_release(v36);
  FPExtendBookmarkForDocumentURL(v29, v30, v35, v37);
  _Block_release(v35);
  swift_bridgeObjectRelease(v38);
  swift_release(v26);

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

void sub_1003A5178(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  id v6;

  if (!a1 || a3)
  {
    a4(0, a3);
  }
  else
  {
    v6 = a1;
    a4(a1, 0);

  }
}

uint64_t sub_1003A51EC(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  id v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v29 = a4;
  v28 = a3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v12);
  v15 = &v27[-v14];
  v16 = objc_msgSend(a2, "url", v13);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v15, v8);
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v18 + v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1005E5668, v19 + 16, v17 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
  v21 = v20 + ((v18 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v21 = a1;
  *(_BYTE *)(v21 + 8) = v28;
  v22 = (_QWORD *)(v20 + v19);
  *v22 = v29;
  v22[1] = a5;
  aBlock[4] = sub_1003B1C34;
  v31 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E5680;
  v23 = _Block_copy(aBlock);
  v24 = v31;
  v25 = a1;
  swift_retain();
  swift_release(v24);
  DOCRunInMainThread(v23);
  _Block_release(v23);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v15, v8);
}

void sub_1003A54D4(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, void *a4)
{
  id v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  _QWORD v12[5];
  _QWORD *v13;

  if (a1)
  {
    a2(0, 0);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)DOCDownloadSettings), "init");
    v8 = (_QWORD *)swift_allocObject(&unk_1005E5438, 40, 7);
    v8[2] = a2;
    v8[3] = a3;
    v8[4] = a4;
    v12[4] = sub_1003B1C14;
    v13 = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100083540;
    v12[3] = &unk_1005E5450;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain();
    v11 = a4;
    objc_msgSend(v7, "fetchDefaultDownloadsLocationItem:", v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);

  }
}

void sub_1003A55D8(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, void *a5)
{
  void *v9;
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  _QWORD v16[5];
  _QWORD *v17;

  if (!a1 || a2)
  {
    a3(0);
  }
  else
  {
    v9 = (void *)objc_opt_self(FPItemManager);
    v10 = a1;
    v11 = objc_msgSend(v9, "defaultManager");
    v12 = (_QWORD *)swift_allocObject(&unk_1005E5488, 40, 7);
    v12[2] = a3;
    v12[3] = a4;
    v12[4] = a5;
    v16[4] = sub_1003B1C24;
    v17 = v12;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100175118;
    v16[3] = &unk_1005E54A0;
    v13 = _Block_copy(v16);
    v14 = v17;
    swift_retain();
    v15 = a5;
    objc_msgSend(v11, "fetchURLForItem:completionHandler:", v10, v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);

  }
}

uint64_t sub_1003A5700(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v31 = a5;
  v32 = a4;
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  sub_1000271D4(a1, (uint64_t)v10, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000CB4C((uint64_t)v10, &qword_100643470);
    return a3(0, a2);
  }
  v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v18(v17, v10, v11);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return a3(0, a2);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v21 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1005E54D8, v22 + 16, v20 | 7);
  v18((char *)(v23 + v21), v14, v11);
  v24 = v23 + ((v21 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  v26 = v31;
  v25 = v32;
  *(_QWORD *)v24 = v31;
  *(_BYTE *)(v24 + 8) = 0;
  v27 = (_QWORD *)(v23 + v22);
  *v27 = a3;
  v27[1] = v25;
  aBlock[4] = sub_1003B1C34;
  v34 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E54F0;
  v28 = _Block_copy(aBlock);
  v29 = v34;
  v30 = v26;
  swift_retain();
  swift_release(v29);
  DOCRunInMainThread(v28);
  _Block_release(v28);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

void sub_1003A5A48(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "effectiveFullBrowser");
  v2 = objc_msgSend(v1, "documentManager");

  sub_10041A310(0);
}

void sub_1003A5AF8(void *a1, void (*a2)(_QWORD, id), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *Strong;
  id v28;
  void *v29;
  id v30;
  NSURL *v31;
  void *v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  NSString v36;
  unsigned int v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  _QWORD *v73;
  id v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(_QWORD, id);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;

  v80 = a7;
  v81 = a8;
  v82 = a2;
  v83 = a3;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v16 - 8);
  v85 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v79 - v21;
  v23 = objc_msgSend(a1, "parentViewController", v20);
  if (!v23)
    goto LABEL_9;
  v24 = v23;
  v25 = type metadata accessor for DOCServiceViewController();
  v26 = swift_dynamicCastClass(v24, v25);
  if (!v26)
  {

    goto LABEL_9;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtC5Files24DOCServiceViewController_currentServiceContext);

  if (!Strong
    || (v28 = objc_msgSend(Strong, "_auxiliaryConnection"),
        Strong,
        !v28))
  {
LABEL_9:
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserErrorDomain);
    v48 = v47;
    v49 = objc_allocWithZone((Class)NSError);
    v50 = String._bridgeToObjectiveC()();
    v51 = objc_msgSend(v49, "initWithDomain:code:userInfo:", v50, 1, 0, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v53 = Logger.UI.unsafeMutableAddressor(v52);
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v22, v53, v85);
    v54 = v51;
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v57 = 138412290;
      v86 = v54;
      v59 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
      *v58 = v54;

      _os_log_impl((void *)&_mh_execute_header, v55, v56, "[Rename] Rename API failed no service connection. Error: %@", v57, 0xCu);
      v60 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v58, 1, v60);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v22, v85);
    v61 = v54;
    v82(0, v54);
    goto LABEL_13;
  }
  v29 = v28;
  v30 = objc_msgSend(a4, "url");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

  URL._bridgeToObjectiveC()(v31);
  v33 = v32;
  v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v15, v12);
  v79 = v29;
  LOBYTE(v29) = objc_msgSend(v29, "doc_hasSandboxAccessToFile:", v33);

  if ((v29 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
    v63 = v62;
    v64 = objc_allocWithZone((Class)NSError);
    v65 = String._bridgeToObjectiveC()();
    v66 = objc_msgSend(v64, "initWithDomain:code:userInfo:", v65, 257, 0, swift_bridgeObjectRelease(v63).n128_f64[0]);

    v68 = Logger.UI.unsafeMutableAddressor(v67);
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v18, v68, v85);
    v69 = v66;
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.error.getter(v70);
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc(12, -1);
      v73 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v72 = 138412290;
      v86 = v69;
      v74 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
      *v73 = v69;

      _os_log_impl((void *)&_mh_execute_header, v70, v71, "[Rename] Rename API failed no sandbox access. Error: %@", v72, 0xCu);
      v75 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v73, 1, v75);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v72, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v18, v85);
    v61 = v69;
    v82(0, v69);

LABEL_13:
    return;
  }
  v35 = (void *)objc_opt_self(DOCFileRenamingSupport);
  v36 = String._bridgeToObjectiveC()();
  v86 = 0;
  v37 = objc_msgSend(v35, "_validateFileName:error:", v36, &v86);

  v38 = v86;
  if (v37)
  {
    v39 = (void *)objc_opt_self(FPItemManager);
    v40 = v38;
    v41 = objc_msgSend(v39, "defaultManager");
    v42 = objc_msgSend(a4, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v42);

    v43 = (_QWORD *)swift_allocObject(&unk_1005E5258, 64, 7);
    v44 = v81;
    v43[2] = v82;
    v43[3] = v83;
    v43[4] = a5;
    v45 = v80;
    v43[5] = a6;
    v43[6] = v45;
    v43[7] = v44;
    swift_retain();
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(v44);
    FPItemManager.doc_fetchItem(for:completionHandler:)(v15, sub_1003B1A70, v43);

    v46 = swift_release(v43);
    ((void (*)(char *, uint64_t, __n128))v34)(v15, v12, v46);
  }
  else
  {
    v76 = v86;
    v77 = _convertNSErrorToError(_:)(v38);

    swift_willThrow(v78);
    swift_errorRetain(v77);
    v82(0, (id)v77);
    swift_errorRelease(v77);
    swift_errorRelease(v77);

  }
}

void sub_1003A61E4(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v15;
  id v16;
  id v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  _QWORD v25[5];
  _QWORD *v26;

  if (a1)
  {
    type metadata accessor for DOCRenameOperation(0);
    v15 = (void *)objc_opt_self(DOCUndoManager);
    v16 = a1;
    v17 = objc_msgSend(v15, "shared", swift_bridgeObjectRetain(a6).n128_f64[0]);
    v18 = (void *)DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)(v16, a5, a6, v17);
    v19 = (_QWORD *)swift_allocObject(&unk_1005E5280, 72, 7);
    v19[2] = a3;
    v19[3] = a4;
    v19[4] = a7;
    v19[5] = a8;
    v19[6] = a5;
    v19[7] = a6;
    v19[8] = v16;
    v25[4] = sub_1003B1ABC;
    v26 = v19;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_10047CFA8;
    v25[3] = &unk_1005E5298;
    v20 = _Block_copy(v25);
    v21 = v26;
    v22 = v16;
    swift_bridgeObjectRetain(a6);
    v23 = v18;
    swift_retain();
    swift_bridgeObjectRetain(a8);
    objc_msgSend(v23, "setFinishedBlock:", v20, swift_release(v21).n128_f64[0]);
    _Block_release(v20);

    v24 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    objc_msgSend(v24, "scheduleAction:", v23);

  }
  else
  {
    a3();
  }
}

void sub_1003A63B0(uint64_t a1, void **a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t (*a5)(uint64_t a1, uint64_t a2), uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  id v53[5];
  _QWORD *v54;
  void **aBlock;
  unint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, void *);
  void *v58;
  uint64_t (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char v61;

  v52 = a5;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1000271D4(a1, (uint64_t)&aBlock, &qword_100642730);
    if (v58)
    {
      v28 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v18 = swift_dynamicCast(v53, &aBlock, (char *)&type metadata for Any + 8, v28, 6);
      if ((v18 & 1) != 0)
      {
        v29 = v53[0];
        v30 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v31 = swift_allocObject(&unk_1005E5320, 32, 7);
        *(_QWORD *)(v31 + 16) = a3;
        *(_QWORD *)(v31 + 24) = a4;
        v59 = sub_1003B1B50;
        v60 = v31;
        aBlock = _NSConcreteStackBlock;
        v56 = 1107296256;
        v57 = sub_100175118;
        v58 = &unk_1005E5338;
        v32 = _Block_copy(&aBlock);
        v33 = v60;
        swift_retain();
        objc_msgSend(v30, "fetchURLForItem:completionHandler:", v29, v32, swift_release(v33).n128_f64[0]);
        _Block_release(v32);

        return;
      }
    }
    else
    {
      v18 = sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
    }
  }
  v49 = a6;
  v50 = a7;
  v51 = a8;
  v21 = Logger.UI.unsafeMutableAddressor(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v21, v16);
  swift_errorRetain(a2);
  v22 = swift_errorRetain(a2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.error.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v47 = a3;
    v48 = a4;
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v25 = 138412290;
    if (a2)
    {
      swift_errorRetain(a2);
      v27 = _swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = (void **)v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v56);
    }
    else
    {
      aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v56);
      v27 = 0;
    }
    *v26 = v27;
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Rename] Rename API failed with error: %@", v25, 0xCu);
    v34 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v26, 1, v34);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
    a3 = v47;
    a4 = v48;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (a2
    && (aBlock = a2,
        swift_errorRetain(a2),
        v35 = sub_10006922C((uint64_t *)&unk_100643490),
        v36 = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr),
        (swift_dynamicCast(v53, &aBlock, v35, v36, 6) & 1) != 0))
  {
    v37 = v53[0];
    if (objc_msgSend(v53[0], "code") == (id)-1001)
    {
      aBlock = (void **)0xD000000000000032;
      v56 = 0x800000010052E220;
      v57 = 0;
      v58 = 0;
      v38 = v49;
      v59 = v52;
      v60 = v49;
      v61 = 1;
      swift_bridgeObjectRetain(v49);
      v40 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v39);
      DOCAnalyticsManager.sendAPIAbuseEvent(_:)(&aBlock);

      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(0);
      swift_bridgeObjectRelease(0x800000010052E220);
      v41 = (_QWORD *)swift_allocObject(&unk_1005E52D0, 56, 7);
      v42 = v51;
      v41[2] = v50;
      v41[3] = v42;
      v41[4] = a9;
      v41[5] = a3;
      v41[6] = a4;
      v53[4] = sub_1003B1B20;
      v54 = v41;
      v53[0] = _NSConcreteStackBlock;
      v53[1] = (id)1107296256;
      v53[2] = sub_10004A82C;
      v53[3] = &unk_1005E52E8;
      v43 = _Block_copy(v53);
      v44 = v54;
      swift_retain();
      swift_bridgeObjectRetain(v42);
      v45 = a9;
      swift_release(v44);
      DOCRunInMainThread(v43);

      _Block_release(v43);
    }
    else
    {
      a3(0, a2);

    }
  }
  else
  {
    a3(0, a2);
  }
}

void sub_1003A68D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v10;
  void *v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  _QWORD *v31;
  void (*v32)(uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, void *, _QWORD, _QWORD, __n128, void (*)(char), _QWORD *);
  id v33;
  __n128 v34;
  _BYTE v35[24];
  Swift::String v36;
  Swift::String v37;

  v10 = (id)_DocumentManagerBundle(a1);
  if (v10)
  {
    v11 = v10;
    v36._object = (void *)0x800000010052E2F0;
    v12._object = (void *)0x800000010052E2B0;
    v12._countAndFlagsBits = 0x100000000000003ALL;
    v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v13.value._object = (void *)0xEB00000000656C62;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0xD000000000000050;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v36);

    v16 = sub_10006922C((uint64_t *)&unk_100644560);
    v17 = swift_allocObject(v16, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_10006A638();
    *(_QWORD *)(v17 + 32) = a1;
    *(_QWORD *)(v17 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    v18 = String.init(format:_:)(v15._countAndFlagsBits, v15._object, v17);
    v20 = v19;
    v21 = swift_bridgeObjectRelease(v15._object);
    v22 = (uint64_t *)DOCSystemAlert.shared.unsafeMutableAddressor(v21);
    swift_beginAccess(v22, v35, 0, 0);
    v23 = *v22;
    swift_retain();
    v25 = (id)_DocumentManagerBundle(v24);
    if (v25)
    {
      v26 = v25;
      v37._object = (void *)0xE200000000000000;
      v27._countAndFlagsBits = 19279;
      v27._object = (void *)0xE200000000000000;
      v28.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v28.value._object = (void *)0xEB00000000656C62;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v37._countAndFlagsBits = 19279;
      v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v37);

      v31 = (_QWORD *)swift_allocObject(&unk_1005E5370, 40, 7);
      v31[2] = a3;
      v31[3] = a4;
      v31[4] = a5;
      v32 = *(void (**)(uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, void *, _QWORD, _QWORD, __n128, void (*)(char), _QWORD *))(*(_QWORD *)v23 + 144);
      v33 = a3;
      v34 = swift_retain();
      v32(v18, v20, 0, 0xE000000000000000, v30._countAndFlagsBits, v30._object, 0, 0, v34, sub_1003B1B9C, v31);
      swift_bridgeObjectRelease(v20);
      swift_release(v23);
      swift_bridgeObjectRelease(v30._object);
      swift_release(v31);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003A6B20(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  NSObject *v21;
  NSObject **v22;
  uint64_t v23;
  uint8_t *v24;
  id v25;
  NSObject **v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  char *v30;
  NSObject *v31;
  uint64_t v32;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
  v10 = v9;
  v11 = objc_allocWithZone((Class)NSError);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "initWithDomain:code:userInfo:", v12, 3072, 0, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v15 = Logger.UI.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v15, v5);
  v16 = a2;
  v30 = v8;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v29 = a3;
    v19 = swift_slowAlloc(12, -1);
    v28 = v5;
    v20 = (uint8_t *)v19;
    v26 = (NSObject **)swift_slowAlloc(8, -1);
    v27 = v6;
    *(_DWORD *)v20 = 138412290;
    v31 = v16;
    v21 = v16;
    a3 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    v22 = v26;
    *v26 = v16;

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Rename: cancelled: %@", v20, 0xCu);
    v23 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v22, 1, v23);
    v6 = v27;
    swift_slowDealloc(v22, -1, -1);
    v24 = v20;
    v5 = v28;
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {

    v17 = v16;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v5);
  v25 = v13;
  a3(0, v13);

}

uint64_t sub_1003A6D8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(id, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v17;
  id v18;
  _BYTE v19[16];

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v19[-v14];
  sub_1000271D4(a1, (uint64_t)v8, &qword_100643470);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000CB4C((uint64_t)v8, &qword_100643470);
    return a3(0, a2);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_10004F2F0(0, &qword_100644C20, FPSandboxingURLWrapper_ptr);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v15, v9);
    v17 = sub_1003A2A18((uint64_t)v12, 0);
    v18 = v17;
    a3(v17, 0);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  }
}

void sub_1003A7010(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v8[4] = a3;
  v9 = a4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004A82C;
  v8[3] = &unk_1005E51D0;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_retain();
  objc_msgSend(a1, "dismissAllPresentedViewControllers:completion:", a2 & 1, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

void sub_1003A71BC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  id v14;
  void *v15;
  NSString v16;
  id v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  Class isa;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  _OWORD v68[2];
  _QWORD aBlock[3];
  void *v70;
  double (*v71)(uint64_t, uint64_t);
  _QWORD *v72;

  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  v66 = v5;
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "parentViewController", v6);
  if (!v9)
    goto LABEL_7;
  v10 = v9;
  v11 = type metadata accessor for DOCServiceViewController();
  v12 = swift_dynamicCastClass(v10, v11);
  if (!v12)
  {

    v18 = 0;
    if (a2 < 0)
      goto LABEL_48;
    goto LABEL_18;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12 + OBJC_IVAR____TtC5Files24DOCServiceViewController_currentServiceContext);

  if (!Strong)
  {
LABEL_7:
    v18 = 0;
    if (a2 < 0)
      goto LABEL_48;
    goto LABEL_18;
  }
  v14 = objc_msgSend(Strong, "_auxiliaryConnection");
  if (!v14)
  {
    __break(1u);
    return;
  }
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "valueForEntitlement:", v16);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v68, v17);
    swift_unknownObjectRelease(v17);

  }
  else
  {

    memset(v68, 0, sizeof(v68));
  }
  sub_100070EDC((uint64_t)v68, (uint64_t)aBlock, &qword_100642730);
  if (v70)
  {
    if (swift_dynamicCast(&v67, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      v18 = v67;
      goto LABEL_17;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
  }
  v18 = 0;
LABEL_17:
  if (a2 < 0)
    goto LABEL_48;
LABEL_18:
  if ((a2 & 0x4000000000000000) != 0)
    goto LABEL_48;
  v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v19; v19 = _CocoaArrayWrapper.endIndex.getter(v52))
  {
    v20 = 0;
    v21 = a2 & 0xC000000000000001;
    v60 = a2 & 0xFFFFFFFFFFFFFF8;
    v59 = a2 + 32;
    v58 = a1;
    v57 = a2;
    v56 = v18;
    v55 = v19;
    v61 = a2 & 0xC000000000000001;
    while (1)
    {
      if (v21)
      {
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a2);
      }
      else
      {
        if (v20 >= *(_QWORD *)(v60 + 16))
          goto LABEL_47;
        v28 = *(id *)(v59 + 8 * v20);
      }
      v29 = v28;
      if (__OFADD__(v20++, 1))
        break;
      v31 = objc_msgSend(v28, "identifier");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v63 = v33;
      v64 = v32;

      if ((v18 & 1) == 0)
      {
        v34 = objc_msgSend(v29, "supportedContentTypes");
        v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, &type metadata for String);

        v22 = _swiftEmptyArrayStorage;
        aBlock[0] = _swiftEmptyArrayStorage;
        v36 = *(_QWORD *)(v35 + 16);
        if (v36)
        {
          v62 = v35;
          v37 = (_QWORD *)(v35 + 40);
          v38 = v65;
          do
          {
            v40 = *(v37 - 1);
            v39 = *v37;
            swift_bridgeObjectRetain(*v37);
            v42 = static UTType.folder.getter(v41);
            v43 = UTType.identifier.getter(v42);
            v45 = v44;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v38);
            if (v40 == v43 && v39 == v45)
            {
              swift_bridgeObjectRelease_n(v39, 2);
            }
            else
            {
              v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v39, v43, v45, 0);
              swift_bridgeObjectRelease(v45);
              if ((v47 & 1) != 0)
              {
                swift_bridgeObjectRelease(v39);
              }
              else
              {
                v48 = aBlock[0];
                if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
                {
                  sub_100081774(0, *(_QWORD *)(v48 + 16) + 1, 1);
                  v48 = aBlock[0];
                }
                v50 = *(_QWORD *)(v48 + 16);
                v49 = *(_QWORD *)(v48 + 24);
                if (v50 >= v49 >> 1)
                {
                  sub_100081774(v49 > 1, v50 + 1, 1);
                  v48 = aBlock[0];
                }
                *(_QWORD *)(v48 + 16) = v50 + 1;
                v51 = v48 + 16 * v50;
                *(_QWORD *)(v51 + 32) = v40;
                *(_QWORD *)(v51 + 40) = v39;
                v38 = v65;
              }
            }
            v37 += 2;
            --v36;
          }
          while (v36);
          swift_bridgeObjectRelease(v62);
          v22 = (_QWORD *)aBlock[0];
          a1 = v58;
          a2 = v57;
          v18 = v56;
          v19 = v55;
        }
        else
        {
          swift_bridgeObjectRelease(v35);
        }
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v29, "setSupportedContentTypes:", isa, swift_release(v22).n128_f64[0]);

        v21 = v61;
      }
      v24 = swift_allocObject(&unk_1005E4920, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      v25 = (_QWORD *)swift_allocObject(&unk_1005E5118, 40, 7);
      v26 = v64;
      v25[2] = v24;
      v25[3] = v26;
      v25[4] = v63;
      v71 = sub_1003B199C;
      v72 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003A7858;
      v70 = &unk_1005E5130;
      v27 = _Block_copy(aBlock);
      objc_msgSend(v29, "setResolvedHandler:", v27, swift_release(v72).n128_f64[0]);
      _Block_release(v27);

      if (v20 == v19)
        goto LABEL_52;
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    if (a2 < 0)
      v52 = a2;
    else
      v52 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_52:
  swift_bridgeObjectRelease(a2);
  sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
  v53 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "setCustomActions:", v53);

}

double sub_1003A777C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  void *v7;
  NSString v8;
  Class isa;
  _BYTE v10[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    swift_unknownObjectRetain(v7);

    v8 = String._bridgeToObjectiveC()();
    sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "_didTriggerCustomActionWithIdentifier:onItemBookmarks:", v8, isa);

    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003A7858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, __int128 *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v6 = *(void (**)(uint64_t, __int128 *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  if (a3)
  {
    *((_QWORD *)&v12 + 1) = swift_getObjectType(a3, v8);
    *(_QWORD *)&v11 = a3;
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v6(v9, &v11);
  swift_release(v5);
  swift_bridgeObjectRelease(v9);
  return sub_10000CB4C((uint64_t)&v11, &qword_100642730);
}

void sub_1003A7A00(void *a1)
{
  id v2;
  id v3;
  NSString v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSString v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  id v20;

  v2 = objc_msgSend(a1, "configuration");
  v3 = objc_msgSend(v2, "sceneIdentifier");

  if (v3)
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = qword_100640D20;
    v6 = v3;
    if (v5 != -1)
      swift_once(&qword_100640D20, sub_1000AE5F8);
    v7 = (void *)qword_100643720;
    v8 = objc_msgSend((id)qword_100643720, "objectForKey:", v6);
    if (!v8)
    {
      v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInteractionManager()), "init");
      objc_msgSend(v7, "setObject:forKey:", v8, v6);
    }

    objc_msgSend((id)qword_100643720, "setObject:forKey:", v8, v4);
  }
  v9 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setGlobalTabbedBrowserController:forIdentifier:", a1, v10);

  v11 = objc_msgSend(a1, "configuration");
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setSceneIdentifier:", v12);

  v13 = objc_msgSend(a1, "fullRecentsViewController");
  v14 = objc_msgSend(v13, "configuration");

  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setSceneIdentifier:", v15);

  v16 = objc_msgSend(a1, "fullSharedViewController");
  v17 = objc_msgSend(v16, "configuration");

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setSceneIdentifier:", v18);

  v19 = objc_msgSend(a1, "splitBrowserViewController");
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setSceneIdentifier:", v20);

}

void sub_1003A7CDC(void *a1, void *a2)
{
  id v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  char v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  NSObject *v34;
  _QWORD *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  char *v45;
  void *v46;
  void **v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  unsigned int v52;
  uint64_t v53;
  NSObject *v54;
  NSObject *v55;
  id v56;
  unsigned __int8 v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void *v68;
  uint64_t v69;
  uint64_t *v70;
  void *v71;
  uint64_t v72;
  double v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  NSString *v78;
  SEL v79;
  uint64_t v80;
  char *v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  void *v86;
  uint8_t *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  id v99;
  NSObject *v100;
  uint64_t v101;
  os_log_type_t v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  Swift::String v116;
  Swift::String v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  char *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint8_t *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[2];
  _QWORD *v131;
  void *v132;
  char *v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  id v139;
  NSObject *v140;
  __objc2_prot *v141;
  __objc2_prot *v142;
  char v143[24];
  char v144[24];
  _OWORD v145[2];
  __int128 v146;
  __int128 v147;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v137 = (char *)v130 - v10;
  __chkstk_darwin(v11);
  v138 = (char *)v130 - v12;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v130 - v15;
  v139 = a1;
  v17 = objc_msgSend(a1, "view", v14);
  if (!v17)
  {
    __break(1u);
LABEL_77:

    __break(1u);
    goto LABEL_78;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "window");

  if (!v19)
    goto LABEL_35;
  v20 = objc_msgSend(v19, "firstResponder");

  if (!v20)
    goto LABEL_35;
  v2 = objc_msgSend(v20, "_responderWindow");
  v21 = objc_msgSend(v139, "view");
  if (!v21)
    goto LABEL_77;
  v22 = v21;
  v23 = objc_msgSend(v21, "window");

  if (v2)
  {
    if (!v23)
    {

      goto LABEL_35;
    }
    sub_10004F2F0(0, (unint64_t *)&unk_100648D00, UIWindow_ptr);
    v25 = a2;
    v26 = v2;
    v27 = static NSObject.== infix(_:_:)(v26, v23);

    a2 = v25;
    if ((v27 & 1) == 0)
    {

      goto LABEL_35;
    }
  }
  else if (v23)
  {

    goto LABEL_35;
  }
  v133 = v8;
  v28 = Logger.DocumentManager.unsafeMutableAddressor(v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v16, v28, v5);
  v29 = v20;
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.debug.getter(v30);
  v32 = os_log_type_enabled(v30, v31);
  v140 = v29;
  v132 = a2;
  if (v32)
  {
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v131 = (_QWORD *)swift_slowAlloc(8, -1);
    v134 = v33;
    *(_DWORD *)v33 = 138412290;
    v130[1] = v33 + 4;
    *(_QWORD *)&v146 = v29;
    v34 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, (char *)&v146 + 8);
    v35 = v131;
    *v131 = v20;

    v36 = v31;
    v37 = v134;
    _os_log_impl((void *)&_mh_execute_header, v30, v36, "DOCServiceDocumentBrowserViewController already has a current first responder: %@", v134, 0xCu);
    v38 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v35, 1, v38);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {

    v30 = v29;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  v134 = (uint8_t *)objc_msgSend(v139, "effectiveFullBrowser");
  v39 = (char *)-[uint8_t dataSource](v134, "dataSource");
  v40 = (uint64_t *)&v39[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess(&v39[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v144, 0, 0);
  v41 = *v40;
  swift_bridgeObjectRetain(*v40);

  v136 = v5;
  v135 = v6;
  if ((unint64_t)v41 >> 62)
    goto LABEL_71;
  v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  v43 = v140;
  if (!v42)
  {
LABEL_75:

    swift_bridgeObjectRelease(v41);
    goto LABEL_34;
  }
  while (1)
  {
    while (__OFSUB__(v42--, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      if (v41 < 0)
        v129 = v41;
      else
        v129 = v41 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v41);
      v42 = _CocoaArrayWrapper.endIndex.getter(v129);
      swift_bridgeObjectRelease(v41);
      v43 = v140;
      if (!v42)
        goto LABEL_75;
    }
    if ((v41 & 0xC000000000000001) != 0)
    {
      v45 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v41);
      goto LABEL_26;
    }
    if ((v42 & 0x8000000000000000) != 0)
      goto LABEL_69;
    if (v42 >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_70;
    v45 = (char *)*(id *)(v41 + 32 + 8 * v42);
LABEL_26:
    v46 = v45;
    v47 = (void **)&v45[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v45[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v143, 0, 0);
    v48 = *v47;
    if (!*v47)
      goto LABEL_19;
    v142 = &OBJC_PROTOCOL___DOCKeyboardFocusable;
    v49 = swift_dynamicCastObjCProtocolConditional(v48, 1);
    if (v49)
      break;
LABEL_18:
    v43 = v140;
LABEL_19:

    if (!v42)
      goto LABEL_75;
  }
  v50 = (void *)v49;
  v51 = v48;
  v52 = objc_msgSend(v50, "acceptsKeyboardFocus");

  if (!v52)
  {
    v46 = v51;
    goto LABEL_18;
  }

  swift_bridgeObjectRelease(v41);
  v141 = &OBJC_PROTOCOL___DOCFirstResponderEstablishing;
  v53 = swift_dynamicCastObjCProtocolConditional(v50, 1);
  if (!v53)
  {

LABEL_34:
    v5 = v136;
    v6 = v135;
    v8 = v133;
    a2 = v132;
    goto LABEL_35;
  }
  v54 = v53;

  v55 = v140;
  v5 = v136;
  v6 = v135;
  v8 = v133;
  a2 = v132;
  if (v54 == v55)
    return;
LABEL_35:
  v56 = v139;
  objc_msgSend(v139, "becomeFirstResponder");
  v57 = objc_msgSend(v56, "establishFirstResponder");
  if ((v57 & 1) == 0)
    objc_msgSend(v139, "becomeFirstResponder");
  if (!a2)
  {
    v146 = 0u;
    v147 = 0u;
LABEL_51:
    v61 = sub_10000CB4C((uint64_t)&v146, &qword_100642730);
    goto LABEL_52;
  }
  v58 = objc_msgSend(a2, "propertyList");
  if (v58)
  {
    v59 = v58;
    _bridgeAnyObjectToAny(_:)(v145, v58);
    swift_unknownObjectRelease(v59);
  }
  else
  {
    memset(v145, 0, sizeof(v145));
  }
  sub_100070EDC((uint64_t)v145, (uint64_t)&v146, &qword_100642730);
  if (!*((_QWORD *)&v147 + 1))
    goto LABEL_51;
  v60 = sub_10006922C(&qword_10064FB28);
  v61 = swift_dynamicCast(v145, &v146, (char *)&type metadata for Any + 8, v60, 6);
  if ((v61 & 1) == 0)
  {
LABEL_52:
    v80 = Logger.DocumentManager.unsafeMutableAddressor(v61);
    v81 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v138, v80, v5);
    v82 = a2;
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = v6;
      v86 = a2;
      v87 = (uint8_t *)swift_slowAlloc(12, -1);
      v88 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v146 = v88;
      *(_DWORD *)v87 = 136315138;
      if (v86)
      {
        v89 = objc_msgSend(v82, "description");
        v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
        v92 = v91;

      }
      else
      {
        v92 = 0xE500000000000000;
        v90 = 0x2A6C696E2ALL;
      }
      *(_QWORD *)&v145[0] = sub_1000544FC(v90, v92, (uint64_t *)&v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v145, (char *)v145 + 8);

      swift_bridgeObjectRelease(v92);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s without additional info", v87, 0xCu);
      swift_arrayDestroy(v88, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v88, -1, -1);
      swift_slowDealloc(v87, -1, -1);

      v93 = *(void (**)(char *, uint64_t))(v85 + 8);
      v94 = v138;
    }
    else
    {

      v93 = *(void (**)(char *, uint64_t))(v6 + 8);
      v94 = v81;
    }
    v95 = v5;
    goto LABEL_59;
  }
  v62 = *(_QWORD *)&v145[0];
  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCUIKeyCommandPropertyListOriginalKeyCommandActionKey);
  v65 = v64;
  if (!*(_QWORD *)(v62 + 16) || (v66 = sub_10007EF08(v63, v64), (v67 & 1) == 0))
  {
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v62);
    v97 = Logger.DocumentManager.unsafeMutableAddressor(v96);
    v98 = v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v137, v97, v5);
    v99 = a2;
    v100 = Logger.logObject.getter(v99);
    v101 = v5;
    v102 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v100, v102))
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v98, v101);
      return;
    }
    v136 = v101;
    v103 = swift_slowAlloc(12, -1);
    v135 = v6;
    v104 = (uint8_t *)v103;
    v105 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v146 = v105;
    *(_DWORD *)v104 = 136315138;
    v106 = objc_msgSend(v99, "description");
    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    *(_QWORD *)&v145[0] = sub_1000544FC(v107, v109, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v145, (char *)v145 + 8);

    swift_bridgeObjectRelease(v109);
    _os_log_impl((void *)&_mh_execute_header, v100, v102, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s without 'real' action info", v104, 0xCu);
    swift_arrayDestroy(v105, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v105, -1, -1);
    swift_slowDealloc(v104, -1, -1);

    v93 = *(void (**)(char *, uint64_t))(v135 + 8);
    v94 = v137;
    goto LABEL_66;
  }
  v68 = a2;
  v69 = v5;
  v70 = (uint64_t *)(*(_QWORD *)(v62 + 56) + 16 * v66);
  v72 = *v70;
  v71 = (void *)v70[1];
  swift_bridgeObjectRetain(v71);
  swift_bridgeObjectRelease(v65);
  *(_QWORD *)&v73 = swift_bridgeObjectRelease(v62).n128_u64[0];
  if ((v57 & 1) == 0)
    goto LABEL_64;
  v74 = objc_msgSend(v139, "view", v73);
  if (!v74)
  {
LABEL_78:
    __break(1u);
    return;
  }
  v75 = v74;
  v76 = objc_msgSend(v74, "window");

  if (v76)
  {
    v77 = objc_msgSend(v76, "firstResponder");

    if (v77)
    {
      v78 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v71);
      v79 = NSSelectorFromString(v78);

      sub_1003B0464((uint64_t)v79, v77);
      return;
    }
  }
LABEL_64:
  *(_QWORD *)&v146 = 0;
  *((_QWORD *)&v146 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v110 = *((_QWORD *)&v146 + 1);
  v111 = objc_msgSend(v68, "description");
  v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
  v113 = v6;
  v115 = v114;
  swift_bridgeObjectRelease(v110);

  *(_QWORD *)&v146 = v112;
  *((_QWORD *)&v146 + 1) = v115;
  v116._countAndFlagsBits = 0x61206C616572202CLL;
  v116._object = (void *)0xEF203A6E6F697463;
  String.append(_:)(v116);
  v117._countAndFlagsBits = v72;
  v117._object = v71;
  String.append(_:)(v117);
  swift_bridgeObjectRelease(v71);
  v118 = v146;
  v120 = Logger.DocumentManager.unsafeMutableAddressor(v119);
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v8, v120, v69);
  swift_bridgeObjectRetain(*((_QWORD *)&v118 + 1));
  v122 = Logger.logObject.getter(v121);
  v123 = v8;
  v124 = static os_log_type_t.default.getter(v122);
  if (!os_log_type_enabled(v122, v124))
  {

    swift_bridgeObjectRelease_n(*((_QWORD *)&v118 + 1), 2);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v123, v69);
    return;
  }
  v125 = swift_slowAlloc(12, -1);
  v136 = v69;
  v126 = (uint8_t *)v125;
  v127 = v123;
  v128 = swift_slowAlloc(32, -1);
  *(_QWORD *)&v146 = v128;
  *(_DWORD *)v126 = 136315138;
  swift_bridgeObjectRetain(*((_QWORD *)&v118 + 1));
  *(_QWORD *)&v145[0] = sub_1000544FC(v118, *((unint64_t *)&v118 + 1), (uint64_t *)&v146);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v145, (char *)v145 + 8);
  swift_bridgeObjectRelease_n(*((_QWORD *)&v118 + 1), 3);
  _os_log_impl((void *)&_mh_execute_header, v122, v124, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s failed to establish an appropriate firstResponder", v126, 0xCu);
  swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v128, -1, -1);
  swift_slowDealloc(v126, -1, -1);

  v93 = *(void (**)(char *, uint64_t))(v113 + 8);
  v94 = v127;
LABEL_66:
  v95 = v136;
LABEL_59:
  v93(v94, v95);
}

void sub_1003A8AA0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  Swift::Bool v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v28 = a3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, "url", v11);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

  v15 = URL.startAccessingSecurityScopedResource()();
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  v17 = swift_allocObject(&unk_1005E4F38, 32, 7);
  *(_BYTE *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = a1;
  v18 = objc_msgSend(a1, "url");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

  URL._bridgeToObjectiveC()(v19);
  v21 = v20;
  v16(v13, v9);
  v22 = (_QWORD *)swift_allocObject(&unk_1005E4F60, 56, 7);
  v22[2] = a4;
  v22[3] = a5;
  v22[4] = sub_1003B1888;
  v22[5] = v17;
  v22[6] = a2;
  aBlock[4] = sub_1003B18C8;
  v30 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005E4F78;
  v23 = _Block_copy(aBlock);
  v24 = v30;
  swift_retain();
  swift_retain();
  v25 = a2;
  *(_QWORD *)&v26 = swift_release(v24).n128_u64[0];
  objc_msgSend(v25, "importDocumentAtURL:mode:toCurrentBrowserLocationWithCompletion:", v21, v28, v23, v26);
  _Block_release(v23);
  swift_release(v17);

}

uint64_t sub_1003A8C88(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v9 = objc_msgSend(a2, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

    URL.stopAccessingSecurityScopedResource()();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_1003A8D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v22;
  id v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  NSURL *v27;
  void *v28;
  void *v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  id v40;
  uint64_t (*v41)(_QWORD, uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  _QWORD aBlock[5];
  uint64_t v45;

  v40 = a7;
  v41 = a3;
  v42 = a5;
  v43 = a6;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - v18;
  sub_1000271D4(a1, (uint64_t)v12, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    v20 = v41(0, a2);
    return v42(v20);
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v39(v19, v12, v13);
    v22 = objc_msgSend(v40, "configuration");
    v23 = objc_msgSend(v22, "hostIdentifier");

    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v40 = v24;

    v25 = (_QWORD *)swift_allocObject(&unk_1005E4FB0, 48, 7);
    v25[2] = v41;
    v25[3] = a4;
    v26 = v43;
    v25[4] = v42;
    v25[5] = v26;
    swift_retain();
    swift_retain();
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v27);
    v29 = v28;
    v30 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    v31 = *(unsigned __int8 *)(v14 + 80);
    v32 = (v31 + 32) & ~v31;
    v33 = (v15 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject(&unk_1005E4FD8, v33 + 8, v31 | 7);
    *(_QWORD *)(v34 + 16) = sub_1003B1904;
    *(_QWORD *)(v34 + 24) = v25;
    v39((char *)(v34 + v32), v16, v13);
    *(_QWORD *)(v34 + v33) = 0;
    aBlock[4] = sub_1003AF838;
    v45 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005E4FF0;
    v35 = _Block_copy(aBlock);
    v36 = v45;
    swift_retain();
    v37 = swift_release(v36);
    FPExtendBookmarkForDocumentURL(v29, v30, v35, v37);
    _Block_release(v35);
    swift_bridgeObjectRelease(v40);
    swift_release(v25);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
}

void sub_1003A9154(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  Swift::Bool v14;
  void (*v15)(char *, uint64_t);
  id v16;
  Swift::Bool v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v35 = a5;
  v36 = a6;
  v37 = a3;
  v38 = a4;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "url", v10);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);

  v14 = URL.startAccessingSecurityScopedResource()();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  v16 = objc_msgSend(a2, "url");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = URL.startAccessingSecurityScopedResource()();
  v15(v12, v8);
  v18 = objc_msgSend(a1, "url");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

  URL._bridgeToObjectiveC()(v19);
  v21 = v20;
  v15(v12, v8);
  v22 = objc_msgSend(a2, "url");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

  URL._bridgeToObjectiveC()(v23);
  v25 = v24;
  v15(v12, v8);
  v26 = swift_allocObject(&unk_1005E4DF8, 72, 7);
  v27 = v36;
  *(_QWORD *)(v26 + 16) = v35;
  *(_QWORD *)(v26 + 24) = v27;
  *(_BYTE *)(v26 + 32) = v14;
  *(_QWORD *)(v26 + 40) = a1;
  *(_BYTE *)(v26 + 48) = v17;
  v28 = v37;
  *(_QWORD *)(v26 + 56) = a2;
  *(_QWORD *)(v26 + 64) = v28;
  aBlock[4] = sub_1003B17B4;
  v40 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005E4E10;
  v29 = _Block_copy(aBlock);
  v30 = v40;
  swift_retain();
  v31 = a1;
  v32 = a2;
  v33 = v28;
  *(_QWORD *)&v34 = swift_release(v30).n128_u64[0];
  objc_msgSend(v33, "importDocumentAtURL:nextToDocumentAtURL:mode:completionHandler:", v21, v25, v38, v29, v34);
  _Block_release(v29);

}

uint64_t sub_1003A9394(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4, int a5, void *a6, int a7, void *a8, void *a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  void *v23;
  uint64_t result;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  NSURL *v34;
  void *v35;
  void *v36;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  int v48;
  uint64_t (*v49)(_QWORD, uint64_t);
  int v50;
  uint64_t v51;
  void *v52;
  _QWORD aBlock[5];
  uint64_t v54;

  v51 = a4;
  v52 = a8;
  v48 = a7;
  v50 = a5;
  v49 = a3;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  sub_1000271D4(a1, (uint64_t)v14, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    v47 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v47(v21, v14, v15);
    v27 = objc_msgSend(a9, "configuration");
    v28 = objc_msgSend(v27, "hostIdentifier");

    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v46 = v29;

    v30 = swift_allocObject(&unk_1005E4E48, 64, 7);
    *(_QWORD *)(v30 + 16) = v49;
    v31 = v52;
    *(_QWORD *)(v30 + 24) = v51;
    *(_BYTE *)(v30 + 32) = v50 & 1;
    *(_QWORD *)(v30 + 40) = a6;
    *(_BYTE *)(v30 + 48) = v48 & 1;
    *(_QWORD *)(v30 + 56) = v31;
    swift_retain();
    v32 = a6;
    v33 = v31;
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v34);
    v36 = v35;
    v37 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    v38 = *(unsigned __int8 *)(v16 + 80);
    v39 = (v38 + 32) & ~v38;
    v40 = (v17 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = swift_allocObject(&unk_1005E4E70, v40 + 8, v38 | 7);
    *(_QWORD *)(v41 + 16) = sub_1003B181C;
    *(_QWORD *)(v41 + 24) = v30;
    v47((char *)(v41 + v39), v18, v15);
    *(_QWORD *)(v41 + v40) = 0;
    aBlock[4] = sub_1003AF838;
    v54 = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100083540;
    aBlock[3] = &unk_1005E4E88;
    v42 = _Block_copy(aBlock);
    v43 = v54;
    swift_retain();
    v44 = swift_release(v43);
    FPExtendBookmarkForDocumentURL(v36, v37, v42, v44);
    _Block_release(v42);
    swift_bridgeObjectRelease(v46);
    swift_release(v30);

    v18 = v21;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v22 = v48;
  v23 = v52;
  sub_10000CB4C((uint64_t)v14, &qword_100643470);
  result = v49(0, a2);
  if ((v50 & 1) != 0)
  {
    v25 = objc_msgSend(a6, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

    URL.stopAccessingSecurityScopedResource()();
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if ((v22 & 1) != 0)
  {
    v26 = objc_msgSend(v23, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    URL.stopAccessingSecurityScopedResource()();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_1003A9730(uint64_t a1, int a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), int a5, char a6, void *a7, char a8, id a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;

  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = a4(a1, a3);
  if ((a6 & 1) != 0)
  {
    v20 = objc_msgSend(a7, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

    URL.stopAccessingSecurityScopedResource()();
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if ((a8 & 1) != 0)
  {
    v21 = objc_msgSend(a9, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v21);

    URL.stopAccessingSecurityScopedResource()();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

void sub_1003A99C4(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v10 = swift_allocObject(a4, 25, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = a3;
  v14[4] = a5;
  v15 = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10004A82C;
  v14[3] = a6;
  v11 = _Block_copy(v14);
  v12 = v15;
  v13 = a1;
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);

}

double sub_1003A9A90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  double result;
  _QWORD v18[5];
  _QWORD *v19;

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;
  v13 = (_QWORD *)swift_allocObject(a4, 40, 7);
  v13[2] = a1;
  v13[3] = v10;
  v13[4] = v12;
  v18[4] = a5;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10004A82C;
  v18[3] = a6;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = a1;
  swift_bridgeObjectRetain(v12);
  swift_release(v15);
  DOCRunInMainThread(v14);
  _Block_release(v14);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t sub_1003A9C2C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  __n128 v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD aBlock[5];
  uint64_t v18;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject(&unk_1005E48D0, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  aBlock[4] = sub_1003B0F60;
  v18 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E48E8;
  v6 = _Block_copy(aBlock);
  v7 = v18;
  v8 = v0;
  swift_release(v7);
  DOCRunInMainThread(v6);
  _Block_release(v6);
  v10 = Logger.UI.unsafeMutableAddressor(v9);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.info.getter(v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "[Interaction] Clearing last opened item in '_clearCurrentOpenInteraction' (call from host)", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1003A9DA8(void *a1)
{
  id v1;
  id v2;
  char *v3;
  void **v4;
  void *v5;
  _BYTE v6[24];

  v1 = objc_msgSend(a1, "configuration");
  v2 = objc_msgSend(v1, "sceneIdentifier");

  v3 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v2);
  v4 = (void **)&v3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v6, 1, 0);
  v5 = *v4;
  *v4 = 0;
  sub_1000AE638(v5);

}

void sub_1003A9E88(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10046A808();
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(a4, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);

    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    aBlock[4] = a2;
    v20 = a3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018CC0;
    aBlock[3] = &unk_1005E4C08;
    v17 = _Block_copy(aBlock);
    v18 = v20;
    swift_retain();
    objc_msgSend(v12, "getTransitionControllerForURL:completionBlock:", v16, v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);
    swift_unknownObjectRelease(v12);

  }
  else
  {
    a2();
  }
}

void sub_1003AA0F8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v7 = sub_10046A808();
  if (v7)
  {
    v8 = v7;
    v11[4] = a2;
    v12 = a3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100018CC0;
    v11[3] = &unk_1005E4B68;
    v9 = _Block_copy(v11);
    v10 = v12;
    swift_retain();
    objc_msgSend(v8, "getTransitionControllerForItem:completionBlock:", a4, v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    a2();
  }
}

void sub_1003AA2E0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  unsigned __int8 v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  id v27;
  _QWORD *v28;
  id v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _BYTE v35[24];
  _BYTE v36[24];

  v4 = v3;
  v33 = a2;
  v34 = a1;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v3, "doc_hasDisappeared", v8);
  if (qword_100640F50 != -1)
    goto LABEL_7;
  while (1)
  {
    v12 = (void *)qword_100672B20;
    v13 = (uint64_t *)(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
    swift_beginAccess(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions, v36, 0, 0);
    v14 = *v13;
    if ((unint64_t)*v13 >> 62)
    {
      if (v14 < 0)
        v18 = *v13;
      else
        v18 = v14 & 0xFFFFFFFFFFFFFF8;
      v19 = v12;
      swift_bridgeObjectRetain(v14);
      if (!_CocoaArrayWrapper.endIndex.getter(v18))
        goto LABEL_14;
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      v16 = v12;
      swift_bridgeObjectRetain(v14);
      if (!v15)
        goto LABEL_14;
    }
    if ((v14 & 0xC000000000000001) != 0)
      break;
    v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease(v14);
    if (v17)
      goto LABEL_15;
    __break(1u);
LABEL_7:
    swift_once(&qword_100640F50, sub_1002A22DC);
  }
  v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
  swift_unknownObjectRelease(v20);
LABEL_14:
  swift_bridgeObjectRelease(v14);
LABEL_15:
  v21 = type metadata accessor for DOCTransitionableContext.SettingsTransaction(0);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  UUID.init()(v22);
  *(_BYTE *)(v22 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings) = v11;
  swift_beginAccess(v13, v35, 33, 0);
  v23 = *v13;
  if (!((unint64_t)*v13 >> 62))
  {
    swift_retain();
LABEL_17:
    sub_100459A64(0, 0, v22);
    swift_endAccess(v35);

    v24 = (_QWORD *)swift_allocObject(&unk_1005E47E0, 40, 7);
    v24[2] = v33;
    v24[3] = a3;
    v24[4] = v22;
    v25 = (void *)objc_opt_self(FPItemManager);
    swift_retain();
    v26 = objc_msgSend(v25, "defaultManager", swift_retain().n128_f64[0]);
    v27 = objc_msgSend(v34, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v28 = (_QWORD *)swift_allocObject(&unk_1005E4808, 40, 7);
    v28[2] = v4;
    v28[3] = sub_1003AF840;
    v28[4] = v24;
    v29 = v4;
    swift_retain();
    FPItemManager.doc_fetchItem(for:completionHandler:)(v10, sub_1003AF858, v28);
    swift_release(v22);
    swift_release(v24);

    v30 = swift_release(v28);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v30);
    return;
  }
  if (v23 < 0)
    v31 = *v13;
  else
    v31 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_retain();
  swift_bridgeObjectRetain(v23);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v23);
  if ((v32 & 0x8000000000000000) == 0)
    goto LABEL_17;
  __break(1u);
}

void sub_1003AA600(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t *v6;
  id v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  a2();
  if (qword_100640F50 != -1)
    swift_once(&qword_100640F50, sub_1002A22DC);
  v5 = (void *)qword_100672B20;
  v6 = (uint64_t *)(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions, v12, 33, 0);
  swift_retain();
  v7 = v5;
  v8 = sub_1003B0C20(v6, a4);
  swift_release(a4);
  v9 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    if (v9 < 0)
      v11 = *v6;
    else
      v11 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v6);
    v10 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v9);
    if (v10 >= v8)
      goto LABEL_5;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10 >= v8)
    {
LABEL_5:
      sub_10045C3C4(v8, v10);
      swift_endAccess(v12);

      return;
    }
  }
  __break(1u);
}

void sub_1003AA720(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v9 = (_QWORD *)swift_allocObject(&unk_1005E4830, 48, 7);
  v9[2] = a3;
  v9[3] = a1;
  v9[4] = a4;
  v9[5] = a5;
  v14[4] = sub_1003AF898;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10004A82C;
  v14[3] = &unk_1005E4848;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = a1;
  swift_retain();
  v13 = a3;
  swift_release(v11);
  DOCRunInMainThread(v10);
  _Block_release(v10);
}

void sub_1003AA7EC(uint64_t a1, void *a2, void (*a3)(_QWORD, __n128), uint64_t a4)
{
  id v7;
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v7 = sub_10046A808();
  if (v7)
  {
    v9 = v7;
    if (a2)
    {
      v10 = swift_allocObject(&unk_1005E4880, 32, 7);
      *(_QWORD *)(v10 + 16) = a3;
      *(_QWORD *)(v10 + 24) = a4;
      v14[4] = sub_1003AF8A4;
      v15 = v10;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 1107296256;
      v14[2] = sub_100083540;
      v14[3] = &unk_1005E4898;
      v11 = _Block_copy(v14);
      v12 = v15;
      v13 = a2;
      swift_retain();
      objc_msgSend(v9, "getViewFor:waitForNewThumbnail::", v13, 1, v11, swift_release(v12).n128_f64[0]);
      _Block_release(v11);
      swift_unknownObjectRelease(v9);

      return;
    }
    v8 = swift_unknownObjectRelease(v7);
  }
  a3(0, v8);
}

void sub_1003AA8FC(void *a1, void *a2, void (*a3)(id))
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  uint64_t RenderId;
  id v22;
  id v23;

  if (a1 && a2)
  {
    v5 = a1;
    v6 = a2;
    v7 = objc_msgSend(v5, "layer");
    v8 = (id)CALayerGetContext();

    if (v8)
    {
      v9 = objc_msgSend(v8, "contextId");

      v10 = objc_msgSend(v5, "superview");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v5, "frame");
        objc_msgSend(v11, "convertRect:toView:", 0);
        v13 = v12;
        v15 = v14;
        v17 = v16;
        v19 = v18;

        v20 = objc_msgSend(v5, "layer");
        RenderId = CALayerGetRenderId();

        v22 = objc_msgSend(objc_allocWithZone((Class)DOCAnimatableInfo), "init");
        objc_msgSend(v22, "setSourceContextId:", v9);
        objc_msgSend(v22, "setSourceLayerRenderId:", RenderId);
        objc_msgSend(v22, "setSourceFrame:", v13, v15, v17, v19);
        objc_msgSend(v22, "setSourcePath:", v6);
        v23 = v22;
        a3(v22);

        return;
      }
    }

  }
  a3(0);
}

void sub_1003AAB7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Class isa;
  Class v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[24];

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v43 = (char *)Strong;
    v17 = Logger.DocumentManager.unsafeMutableAddressor(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
    v18 = swift_bridgeObjectRetain_n(a1, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.debug.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v40 = a5;
      v21 = swift_slowAlloc(12, -1);
      v42 = a6;
      v22 = (uint8_t *)v21;
      v39 = swift_slowAlloc(32, -1);
      v45 = v39;
      v41 = a4;
      *(_DWORD *)v22 = 136315138;
      v37 = v22 + 4;
      v38 = v22;
      v23 = a3;
      v24 = sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
      swift_bridgeObjectRetain(a1);
      v26 = Array.description.getter(v25, v24);
      v28 = v27;
      swift_bridgeObjectRelease(a1);
      v29 = v26;
      a3 = v23;
      v44 = sub_1000544FC(v29, v28, &v45);
      LOBYTE(a4) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v28);
      v30 = v20;
      v31 = v38;
      _os_log_impl((void *)&_mh_execute_header, v19, v30, "Notifying host about presenting the activity view controller on documents %s", v38, 0xCu);
      v32 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      a6 = v42;
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v33 = v43;
    v34 = *(void **)&v43[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
    swift_unknownObjectRetain(v34);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v36 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "_presentActivityViewControllerForItemBookmarks:withPopoverTracker:isContentManaged:additionalActivities:activityProxy:", isa, a3, a4 & 1, v36, a6);

    swift_unknownObjectRelease(v34);
  }
}

double sub_1003AAFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *Strong;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  double result;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  Class isa;
  id v41;
  _QWORD v42[2];
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[5];
  uint64_t v47;
  char v48[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v42 - v9;
  a2 += 16;
  swift_beginAccess(a2, v48, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  v12 = Logger.DocumentManager.unsafeMutableAddressor(Strong);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if (Strong)
  {
    v13(v7, v12, v4);
    v14 = swift_bridgeObjectRetain_n(a1, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      aBlock[0] = v44;
      v43 = v17;
      *(_DWORD *)v17 = 136315138;
      v42[1] = v17 + 4;
      v18 = sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
      swift_bridgeObjectRetain(a1);
      v20 = Array.description.getter(v19, v18);
      v22 = v21;
      swift_bridgeObjectRelease(a1);
      v45 = sub_1000544FC(v20, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, aBlock);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v22);
      v23 = v43;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Notifying host about the picked documents %s", v43, 0xCu);
      v24 = v44;
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v30 = swift_allocObject(&unk_1005E4A60, 32, 7);
    *(_QWORD *)(v30 + 16) = Strong;
    *(_QWORD *)(v30 + 24) = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v31 = Strong;
    v32 = objc_msgSend(v31, "presentedViewController");
    if (v32)
    {
      v33 = v32;
      v34 = type metadata accessor for DOCServiceInfoViewController();
      v35 = swift_dynamicCastClass(v33, v34);
      if (v35)
      {
        v36 = (void *)v35;
        aBlock[4] = (uint64_t)sub_1003B15A4;
        v47 = v30;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10004A82C;
        aBlock[3] = (uint64_t)&unk_1005E4A78;
        v37 = _Block_copy(aBlock);
        v38 = v47;
        swift_retain();
        objc_msgSend(v36, "dismissViewControllerAnimated:completion:", 1, v37, swift_release(v38).n128_f64[0]);
        _Block_release(v37);
        swift_bridgeObjectRelease(a1);

        swift_release(v30);
        return result;
      }

    }
    v39 = *(void **)&v31[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v39, "_didPickItemBookmarks:", isa);

    v41 = objc_msgSend(v31, "configuration");
    LOBYTE(isa) = objc_msgSend(v41, "isInUIPDocumentLanding");

    if ((isa & 1) == 0)
      sub_1003A9C2C();
    swift_bridgeObjectRelease(a1);

    *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  }
  else
  {
    v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v10, v12, v4);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.debug.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to notify host about the picked documents, self went away", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

void sub_1003AB464(char *a1)
{
  void *v2;
  Class isa;
  id v4;

  v2 = *(void **)&a1[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
  sub_10004F2F0(0, &qword_100651E40, DOCItemBookmark_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "_didPickItemBookmarks:", isa);

  v4 = objc_msgSend(a1, "configuration");
  LOBYTE(v2) = objc_msgSend(v4, "isInUIPDocumentLanding");

  if ((v2 & 1) == 0)
    sub_1003A9C2C();
}

void sub_1003AB578(void *a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  _BOOL4 v19;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100643470);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v19 = URL.startAccessingSecurityScopedResource()();
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v9, v6);
    v16 = objc_msgSend(v14, "url");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    a3(v13, a2);
    sub_10000CB4C((uint64_t)v13, &qword_100643470);
    if (v19)
    {
      v17 = objc_msgSend(v14, "url");
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

      URL.stopAccessingSecurityScopedResource()();
      v18(v9, v6);
    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56))(v13, 1, 1, v6, v11);
    a3(v13, a2);
    sub_10000CB4C((uint64_t)v13, &qword_100643470);
  }
}

void sub_1003AB774(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, uint64_t);
  id v7;

  v6 = *(void (**)(void *, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1003AB8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v8, &qword_100643470);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  (*(void (**)(uint64_t, void *, uint64_t))(a3 + 16))(a3, v12, a2);

}

uint64_t sub_1003AB9D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  NSURL *v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  if (result && !a3)
  {
    v16 = v4;
    v17 = v5;
    v6 = (void *)result;
    v7 = a4 + 16;
    swift_beginAccess(a4 + 16, v15, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v7, v8);
    if (result)
    {
      v9 = (void *)result;
      v10 = *(void **)(result + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
      v11 = v6;
      swift_unknownObjectRetain(v10);

      URL._bridgeToObjectiveC()(v12);
      v14 = v13;
      objc_msgSend(v10, "_didImportDocumentAtURL:toDestinationItemBookmark:", v13, v11);

      return swift_unknownObjectRelease(v10);
    }
  }
  return result;
}

void sub_1003ABC88(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  NSObject *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  void (*v39)(uint64_t, char *, uint64_t);
  id v40;
  id v41;
  NSURL *v42;
  void *v43;
  void *v44;
  NSString v45;
  char *v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  __n128 v50;
  void (*v51)(char *, uint64_t);
  __n128 v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  char *v64;
  os_log_type_t v65;
  uint64_t v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  void (*v73)(char *, uint64_t, __n128);
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  dispatch_group_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  id v85;
  NSObject *v86;
  id v87;
  uint64_t v88;
  NSObject *v89;
  id v90;
  NSURL *v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  NSObject *v98;
  void *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  __n128 v122;
  char *v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  int v137;
  char *v138;
  char *v139;
  NSObject *v140;
  void (*v141)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, char *, uint64_t);
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  dispatch_group_t v149;
  uint64_t (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  id v153;
  _QWORD *v154;
  void **aBlock;
  uint64_t v156;
  void *v157;
  void *v158;
  uint64_t (*v159)();
  _QWORD *v160;

  v114 = a4;
  v113 = a3;
  v137 = a2;
  v120 = type metadata accessor for DispatchWorkItemFlags(0);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for DispatchQoS(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v152 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v152 + 64);
  __chkstk_darwin(v11);
  v127 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v112 - v14;
  __chkstk_darwin(v16);
  v136 = (char *)&v112 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v112 - v19;
  __chkstk_darwin(v21);
  v138 = (char *)&v112 - v22;
  v23 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v23);
  v121 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v139 = (char *)&v112 - v26;
  v149 = dispatch_group_create();
  v151 = swift_allocObject(&unk_1005E46F0, 24, 7);
  *(_QWORD *)(v151 + 16) = _swiftEmptyArrayStorage;
  v27 = *(_QWORD *)(a1 + 16);
  v112 = a1;
  if (v27)
  {
    v148 = v27;
    v134 = v20;
    v28 = *(unsigned __int8 *)(v152 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = a1;
    v31 = a1 + v29;
    v133 = *(_QWORD *)(v152 + 72);
    v150 = *(uint64_t (**)(char *, char *, uint64_t))(v152 + 16);
    v128 = v28 | 7;
    v132 = (v28 + 24) & ~v28;
    v131 = (v12 + 7 + v132) & 0xFFFFFFFFFFFFFFF8;
    v130 = (v131 + 15) & 0xFFFFFFFFFFFFFFF8;
    v129 = v130 + 8;
    v126 = v29;
    v125 = (v12 + 7 + v29) & 0xFFFFFFFFFFFFFFF8;
    v124 = v125 + 8;
    v32 = swift_bridgeObjectRetain(v30);
    v33 = v31;
    v123 = (char *)&type metadata for Any + 8;
    v32.n128_u64[0] = 136315138;
    v122 = v32;
    v34 = v149;
    v142 = v7;
    v143 = v8;
    v35 = v138;
    v36 = v139;
    v135 = v10;
    v144 = v15;
    while (1)
    {
      v54 = v7;
      v55 = v8;
      v147 = v33;
      v56 = v150;
      ((void (*)(char *))v150)(v36);
      v57 = v152;
      v141 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v152 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v141)(v36, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v36, 1, v11) == 1)
        break;
      v145 = *(void (**)(char *, char *, uint64_t))(v152 + 32);
      v145(v35, v36, v11);
      dispatch_group_enter(v34);
      v59 = Logger.DocumentManager.unsafeMutableAddressor(v58);
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v10, v59, v54);
      v60 = v35;
      v61 = v134;
      v62 = v56(v134, v60, v11);
      v63 = Logger.logObject.getter(v62);
      v64 = v10;
      v65 = static os_log_type_t.debug.getter(v63);
      if (os_log_type_enabled(v63, v65))
      {
        v66 = swift_slowAlloc(12, -1);
        v67 = (void **)swift_slowAlloc(32, -1);
        aBlock = v67;
        *(_DWORD *)v66 = v122.n128_u32[0];
        v68 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v69 = dispatch thunk of CustomStringConvertible.description.getter(v11, v68);
        v71 = v70;
        *(_QWORD *)(v66 + 4) = sub_1000544FC(v69, v70, (uint64_t *)&aBlock);
        v72 = swift_bridgeObjectRelease(v71);
        v73 = *(void (**)(char *, uint64_t, __n128))(v152 + 8);
        v73(v61, v11, v72);
        _os_log_impl((void *)&_mh_execute_header, v63, v65, "creating DOCItemBookmark from url %s", (uint8_t *)v66, 0xCu);
        swift_arrayDestroy(v67, 1, v123);
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v66, -1, -1);

        (*(void (**)(char *, uint64_t))(v143 + 8))(v64, v142);
      }
      else
      {
        v73 = *(void (**)(char *, uint64_t, __n128))(v152 + 8);
        ((void (*)(char *, uint64_t))v73)(v61, v11);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v64, v54);
      }
      v35 = v138;
      v74 = v128;
      v146 = (void (*)(char *, uint64_t))v73;
      if ((v137 & 1) != 0)
      {
        v75 = objc_msgSend(v153, "configuration", v112);
        v76 = objc_msgSend(v75, "hostIdentifier");

        static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
        v78 = v77;

      }
      else
      {
        v78 = 0;
      }
      v79 = v149;
      v80 = (void (*)(char *, char *, uint64_t))v150;
      v81 = v136;
      v150(v136, v35, v11);
      v82 = (uint64_t)v144;
      v80(v144, v81, v11);
      v83 = swift_allocObject(&unk_1005E4768, v129, v74);
      *(_QWORD *)(v83 + 16) = v79;
      v84 = (void (*)(uint64_t, char *, uint64_t))v145;
      v145((char *)(v83 + v132), v81, v11);
      *(_QWORD *)(v83 + v131) = v153;
      *(_QWORD *)(v83 + v130) = v151;
      if (v78)
      {
        v37 = v74;
        v38 = v79;
        v39 = v84;
        v40 = v153;
        swift_retain_n(v151, 2);
        v140 = v38;
        v41 = v40;
        URL.startAccessingSecurityScopedResource()();
        URL._bridgeToObjectiveC()(v42);
        v44 = v43;
        v45 = String._bridgeToObjectiveC()();
        v46 = v127;
        v150(v127, v35, v11);
        v47 = swift_allocObject(&unk_1005E4790, v124, v37);
        *(_QWORD *)(v47 + 16) = sub_1003AF7BC;
        *(_QWORD *)(v47 + 24) = v83;
        v39(v47 + v126, v46, v11);
        *(_QWORD *)(v47 + v125) = 0;
        v159 = sub_1003AF838;
        v160 = (_QWORD *)v47;
        aBlock = _NSConcreteStackBlock;
        v156 = 1107296256;
        v157 = sub_100083540;
        v158 = &unk_1005E47A8;
        v48 = _Block_copy(&aBlock);
        v49 = v160;
        swift_retain();
        v50 = swift_release(v49);
        FPExtendBookmarkForDocumentURL(v44, v45, v48, v50);
        _Block_release(v48);

        swift_release(v83);
        v51 = v146;
        v146(v144, v11);
        swift_bridgeObjectRelease(v78);
      }
      else
      {
        v85 = objc_allocWithZone((Class)DOCItemBookmark);
        v86 = v79;
        v87 = v153;
        v88 = v151;
        swift_retain_n(v151, 2);
        v89 = v86;
        v90 = v87;
        URL._bridgeToObjectiveC()(v91);
        v93 = v92;
        v94 = objc_msgSend(v85, "initWithURL:fileProviderItem:", v92, 0);

        v95 = (uint64_t)v121;
        v150(v121, v35, v11);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v141)(v95, 0, 1, v11);
        sub_1003AC7BC(v94, v95, 0, v89, v82, v90, v88);

        sub_10000CB4C(v95, &qword_100643470);
        v96 = swift_release(v83);
        v51 = v146;
        ((void (*)(uint64_t, uint64_t, __n128))v146)(v82, v11, v96);
      }
      v8 = v143;
      swift_release(v151);

      v51(v35, v11);
      v33 = v147 + v133;
      v34 = v149;
      v53 = v148-- == 1;
      v7 = v142;
      v10 = v135;
      v36 = v139;
      if (v53)
        goto LABEL_15;
    }
  }
  else
  {
    v141 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v152 + 56);
    v52 = swift_bridgeObjectRetain(a1);
    v34 = v149;
    v36 = v139;
LABEL_15:
    v141(v36, 1, 1, v11, v52);
  }
  swift_bridgeObjectRelease(v112);
  v97 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v98 = v34;
  v99 = (void *)static OS_dispatch_queue.main.getter(v97);
  v100 = (_QWORD *)swift_allocObject(&unk_1005E4718, 40, 7);
  v101 = v114;
  v100[2] = v113;
  v100[3] = v101;
  v102 = v151;
  v100[4] = v151;
  v159 = sub_100360C78;
  v160 = v100;
  aBlock = _NSConcreteStackBlock;
  v156 = 1107296256;
  v157 = sub_10004A82C;
  v158 = &unk_1005E4730;
  v103 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v104 = v115;
  static DispatchQoS.unspecified.getter(v105);
  v154 = _swiftEmptyArrayStorage;
  v106 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v107 = sub_10006922C((uint64_t *)&unk_100647540);
  v108 = sub_1000791AC();
  v109 = v118;
  v110 = v120;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v154, v107, v108, v120, v106);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v104, v109, v99, v103);
  _Block_release(v103);

  (*(void (**)(char *, uint64_t))(v119 + 8))(v109, v110);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v104, v117);
  v111 = v160;
  swift_release(v102);
  swift_release(v111);
}

void sub_1003AC7BC(void *a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t *v45;
  os_log_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  int v50;
  id v51;
  id v52;
  dispatch_group_t v53;
  uint64_t v54;
  uint64_t v55[3];

  v52 = a6;
  v53 = a4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && !a3)
  {
    v19 = (_QWORD *)(a7 + 16);
    v20 = a1;
    v21 = Logger.DocumentManager.unsafeMutableAddressor(v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v21, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
    v22 = v20;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter(v23);
    v50 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v51 = v22;
      v26 = v25;
      v49 = (_QWORD *)swift_slowAlloc(8, -1);
      v27 = swift_slowAlloc(32, -1);
      v47 = v27;
      *(_DWORD *)v26 = 138412546;
      v46 = v23;
      v44[1] = v26 + 12;
      v44[2] = v26 + 4;
      v54 = (uint64_t)v51;
      v55[0] = v27;
      v45 = v55;
      v28 = v51;
      v48 = v19;
      v29 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
      *v49 = a1;

      *(_WORD *)(v26 + 12) = 2080;
      v30 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v31 = dispatch thunk of CustomStringConvertible.description.getter(v11, v30);
      v33 = v32;
      v54 = sub_1000544FC(v31, v32, v55);
      v19 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v45);
      v34 = swift_bridgeObjectRelease(v33);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v34);
      v23 = v46;
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v50, "DOCItemBookmark created %@ from url %s", (uint8_t *)v26, 0x16u);
      v35 = sub_10006922C(&qword_100643AB0);
      v36 = v49;
      swift_arrayDestroy(v49, 1, v35);
      swift_slowDealloc(v36, -1, -1);
      v37 = v47;
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      v38 = v26;
      v22 = v51;
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v39 = v52;
    objc_sync_enter(v52);
    swift_beginAccess(v19, v55, 33, 0);
    v40 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
    v42 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v41 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v42 >= v41 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
    v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
    specialized Array._endMutation()(v43);
    swift_endAccess(v55);
    objc_sync_exit(v39);

    dispatch_group_leave(v53);
  }
  else
  {
    dispatch_group_leave(v53);
  }
}

id sub_1003ACC00(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCServiceDocumentBrowserViewController);
}

void sub_1003ACC64()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  objc_msgSend(v0, "signal");

}

id sub_1003ACD6C()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t *v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  char *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  unsigned int v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  __objc2_prot *v22;
  __objc2_prot *v23;
  _BYTE v24[24];
  _BYTE v25[24];

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "window");

    if (v3)
    {
      if ((objc_msgSend(v3, "isKeyWindow") & 1) == 0)
        objc_msgSend(v3, "makeKeyWindow");

    }
    v4 = (uint64_t *)objc_msgSend(v0, "effectiveFullBrowser");
    v5 = (char *)objc_msgSend(v4, "dataSource");
    v6 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v25, 0, 0);
    v7 = *v6;
    swift_bridgeObjectRetain(v7);

    if ((unint64_t)v7 >> 62)
    {
LABEL_30:
      if (v7 < 0)
        v20 = v7;
      else
        v20 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v8 = _CocoaArrayWrapper.endIndex.getter(v20);
      swift_bridgeObjectRelease(v7);
      if (v8)
        goto LABEL_8;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_8:
        v21 = v4;
        v4 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
        while (1)
        {
          if (__OFSUB__(v8--, 1))
          {
            __break(1u);
LABEL_26:

            goto LABEL_27;
          }
          if ((v7 & 0xC000000000000001) != 0)
          {
            v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v7);
          }
          else
          {
            if ((v8 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
            if (v8 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_29;
            v11 = (char *)*(id *)(v7 + 32 + 8 * v8);
          }
          v9 = v11;
          v12 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess(&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v24, 0, 0);
          v13 = *v12;
          if (v13)
          {
            v23 = &OBJC_PROTOCOL___DOCKeyboardFocusable;
            v14 = swift_dynamicCastObjCProtocolConditional(v13, 1, &v23);
            if (v14)
            {
              v15 = (void *)v14;
              v16 = v13;
              v17 = objc_msgSend(v15, "acceptsKeyboardFocus");

              if (v17)
              {

                swift_bridgeObjectRelease(v7);
                v22 = &OBJC_PROTOCOL___DOCFirstResponderEstablishing;
                v18 = (void *)swift_dynamicCastObjCProtocolConditional(v15, 1, &v22);
                if (v18)
                {
                  v19 = objc_msgSend(v18, "establishFirstResponder");

                  return v19;
                }

                return 0;
              }
              v9 = v16;
            }
          }

          if (!v8)
            goto LABEL_26;
        }
      }
    }

LABEL_27:
    swift_bridgeObjectRelease(v7);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003AD038(void *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  double v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  _BYTE *v17;
  objc_class *v18;
  uint64_t v20;
  objc_super v21;
  id v22;

  v3 = v2;
  v6 = type metadata accessor for UITraitOverrides(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "documentLandingMode", v7) != (id)-1)
  {
    v11 = objc_msgSend(a1, "documentLandingMode");
    UIViewController.traitOverrides.getter(v11);
    v22 = v11;
    v12 = sub_1003AF6A4();
    v13 = sub_10005A360(&qword_100651D68, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_1004D91E4);
    dispatch thunk of UIMutableTraits.subscript.setter(&v22, &type metadata for DOCUIPDocumentLandingModeTrait, &type metadata for DOCUIPDocumentLandingModeTrait, v12, v13, v6, &protocol witness table for UITraitOverrides);
    *(_QWORD *)&v10 = UIViewController.traitOverrides.setter(v9).n128_u64[0];
  }
  if (objc_msgSend(a1, "documentLandingMode", v10) != (id)-1)
  {
    v14 = objc_msgSend(v3, "parentViewController");
    if (v14)
    {
      v15 = v14;
      v16 = type metadata accessor for DOCServiceViewController();
      v17 = (_BYTE *)swift_dynamicCastClass(v15, v16);
      if (v17 && (v17[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding] & 1) == 0)
      {
        v17[OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding] = 1;
        objc_msgSend(v17, "setModalInPresentation:", 1);
      }

    }
  }
  v18 = (objc_class *)type metadata accessor for DOCServiceDocumentBrowserViewController();
  v21.receiver = v3;
  v21.super_class = v18;
  return objc_msgSendSuper2(&v21, "_applyBrowserStateChange:force:", a1, a2 & 1);
}

void DOCTabbedBrowserViewController.applyBrowserStateChange(_:)(void *a1)
{
  void *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v3 = swift_allocObject(&unk_1005E45D8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = a1;
  v8[4] = sub_1003AD318;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004A82C;
  v8[3] = &unk_1005E45F0;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v1;
  v7 = a1;
  swift_release(v5);
  DOCRunInMainThread(v4);
  _Block_release(v4);
}

uint64_t sub_1003AD2EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003AD318()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "applyBrowserStateChange:force:", *(_QWORD *)(v0 + 24), 0);
}

id DOCTabbedBrowserViewController.applyBrowserStateChange(_:force:)(uint64_t a1, char a2)
{
  void *v2;

  return objc_msgSend(v2, "_applyBrowserStateChange:force:", a1, a2 & 1);
}

id DOCTabbedBrowserViewController.performBrowserStateChange(_:)(uint64_t a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, "configuration");
  v4 = objc_msgSend(v3, "inProcess");

  if (v4
    && objc_msgSend(v1, "enclosedInUIPDocumentLanding")
    && (v5 = type metadata accessor for DOCServiceDocumentBrowserViewController(),
        (v6 = swift_dynamicCastClass(v1, v5)) != 0))
  {
    return objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy), "performBrowserStateChange:", a1);
  }
  else
  {
    return objc_msgSend(v1, "_applyBrowserStateChange:force:", a1);
  }
}

uint64_t type metadata accessor for DOCServiceDocumentBrowserViewController()
{
  return objc_opt_self(_TtC5Files39DOCServiceDocumentBrowserViewController);
}

id sub_1003AD550(void *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  double v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  id v17;

  v3 = v2;
  v6 = type metadata accessor for UITraitOverrides(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "documentLandingMode", v7) != (id)-1)
  {
    v11 = objc_msgSend(a1, "documentLandingMode");
    UIViewController.traitOverrides.getter(v11);
    v17 = v11;
    v12 = sub_1003AF6A4();
    v13 = sub_10005A360(&qword_100651D68, (uint64_t (*)(uint64_t))type metadata accessor for DOCUIPDocumentLandingMode, (uint64_t)&unk_1004D91E4);
    dispatch thunk of UIMutableTraits.subscript.setter(&v17, &type metadata for DOCUIPDocumentLandingModeTrait, &type metadata for DOCUIPDocumentLandingModeTrait, v12, v13, v6, &protocol witness table for UITraitOverrides);
    *(_QWORD *)&v10 = UIViewController.traitOverrides.setter(v9).n128_u64[0];
  }
  v14 = objc_msgSend(v3, "shouldDeferBrowserStateChanges", v10);
  if ((v14 & 1) != 0)
    return objc_msgSend(v3, "updateDeferredBrowserStateChangesWith:", a1);
  __chkstk_darwin(v14);
  *(&v16 - 4) = (uint64_t)a1;
  *(&v16 - 3) = (uint64_t)v3;
  *((_BYTE *)&v16 - 16) = a2 & 1;
  return (id)DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(0, sub_1003AF6E8);
}

void sub_1003AD6CC(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a1, "contentMode");
  v6 = v5;
  if ((unint64_t)v5 >= 3)
  {
    if (v5 != (id)-1)
    {
LABEL_9:
      type metadata accessor for DOCUIPBrowserContentMode(0);
      v10 = v6;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v8, &v10, v8, &type metadata for Int);
      __break(1u);
    }
  }
  else if (v5 != objc_msgSend(a2, "effectiveTabSwitcherTab") || (a3 & 1) != 0)
  {
    objc_msgSend(a2, "switchToTab:", v6);
    v7 = objc_msgSend(a2, "view");
    if (v7)
    {
      v9 = v7;
      objc_msgSend(v7, "layoutBelowIfNeeded");

      return;
    }
    __break(1u);
    goto LABEL_9;
  }
}

void sub_1003AD814(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (objc_msgSend(v2, "shouldDeferBrowserStateChanges"))
  {
    v5 = objc_msgSend(v2, "deferredBrowserStateChanges");
    if (v5
      && (v6 = v5,
          v10 = 0,
          v11 = 0,
          v12 = 1,
          static DOCUIPBrowserState._conditionallyBridgeFromObjectiveC(_:result:)(v5, &v10),
          v6,
          v12 != 1))
    {
      v7 = v10;
      v8 = v11;
    }
    else
    {
      v7 = DOCUIPBrowserState.init()();
    }
    if (a1 != -1)
      v7 = a1;
    if (a2 != -1)
      v8 = a2;
    v9 = (id)DOCUIPBrowserState._bridgeToObjectiveC()(v7, v8);
    objc_msgSend(v2, "setDeferredBrowserStateChanges:", v9);

  }
}

uint64_t sub_1003AD948()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1005E4628, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_1003ADCB0;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E4640;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10006922C((uint64_t *)&unk_100647540);
  v18 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1003ADB44()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = type metadata accessor for DOCServiceDocumentBrowserViewController();
  v1 = UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(v0, 0, v0);
  if (v1)
  {
    v2 = (id)v1;
    sub_1003AE48C(0);

  }
}

id sub_1003ADC80()
{
  return sub_1001405E0(0, type metadata accessor for doc_invalidObjCActionClass);
}

uint64_t type metadata accessor for doc_invalidObjCActionClass()
{
  return objc_opt_self(_TtC5FilesP33_C5D1CB1CA0AFEDBC7090129A90982C9D26doc_invalidObjCActionClass);
}

void sub_1003ADCB0()
{
  sub_1003ADB44();
}

void sub_1003ADCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  CGFloat *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  char *v51;
  int64_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  CGRect v56;
  CGRect v57;

  v4 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  __chkstk_darwin(v4);
  v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100651D58);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = __chkstk_darwin(v9);
  v12 = (char *)&v46 - v11;
  if (a1 == a2)
  {
    v53 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    v53 = 0;
    return;
  }
  v52 = 0;
  v50 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v48 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v49 = (unint64_t)(v14 + 63) >> 6;
  v47 = v49 - 1;
  v17 = (uint64_t *)&unk_100651D48;
  v18 = (uint64_t)v51;
  v19 = v55;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v21 = (v16 - 1) & v16;
      v22 = v20 | (v52 << 6);
LABEL_8:
      v23 = v50;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v54 + 16))(v8, *(_QWORD *)(v50 + 48) + *(_QWORD *)(v54 + 72) * v22, v55, v10);
      v24 = (_OWORD *)(*(_QWORD *)(v23 + 56) + 32 * v22);
      v25 = sub_10006922C(v17);
      v26 = &v8[*(int *)(v25 + 48)];
      v27 = v24[1];
      *(_OWORD *)v26 = *v24;
      *((_OWORD *)v26 + 1) = v27;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
      goto LABEL_30;
    }
    v28 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v28 < v49)
    {
      v29 = *(_QWORD *)(v48 + 8 * v28);
      if (v29)
        goto LABEL_12;
      v30 = v52 + 2;
      ++v52;
      if (v28 + 1 < v49)
      {
        v29 = *(_QWORD *)(v48 + 8 * v30);
        if (v29)
          goto LABEL_15;
        v52 = v28 + 1;
        if (v28 + 2 < v49)
        {
          v29 = *(_QWORD *)(v48 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          v52 = v28 + 2;
          if (v28 + 3 < v49)
          {
            v29 = *(_QWORD *)(v48 + 8 * (v28 + 3));
            if (v29)
            {
              v28 += 3;
              goto LABEL_12;
            }
            v30 = v28 + 4;
            v52 = v28 + 3;
            if (v28 + 4 < v49)
              break;
          }
        }
      }
    }
LABEL_29:
    v31 = sub_10006922C(v17);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
    v21 = 0;
LABEL_30:
    sub_100070EDC((uint64_t)v8, (uint64_t)v12, &qword_100651D58);
    v32 = v17;
    v33 = sub_10006922C(v17);
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v12, 1, v33);
    v53 = v34 == 1;
    if (v34 != 1)
    {
      v35 = v21;
      v36 = (CGFloat *)&v12[*(int *)(v33 + 48)];
      v37 = v12;
      v38 = v54;
      v39 = v37;
      (*(void (**)(uint64_t))(v54 + 32))(v18);
      v40 = *v36;
      v41 = v36[1];
      v42 = v36[2];
      v43 = v36[3];
      v44 = sub_10007EF98(v18);
      LOBYTE(v36) = v45;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v18, v19);
      if ((v36 & 1) != 0)
      {
        v56 = *(CGRect *)(*(_QWORD *)(a2 + 56) + 32 * v44);
        v57.origin.x = v40;
        v57.origin.y = v41;
        v57.size.width = v42;
        v57.size.height = v43;
        v17 = v32;
        v12 = v39;
        v16 = v35;
        if (CGRectEqualToRect(v56, v57))
          continue;
      }
    }
    return;
  }
  v29 = *(_QWORD *)(v48 + 8 * v30);
  if (v29)
  {
LABEL_15:
    v28 = v30;
LABEL_12:
    v21 = (v29 - 1) & v29;
    v22 = __clz(__rbit64(v29)) + (v28 << 6);
    v52 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v49)
    {
      v52 = v47;
      goto LABEL_29;
    }
    v29 = *(_QWORD *)(v48 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1003AE0AC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  _QWORD *v20;

  v5 = v4;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v20 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    if (v8 < 0)
    {
      __break(1u);
      return;
    }
    v9 = 0;
    while (v8 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v18 = v10;
      sub_1003A4930(&v18, a2, a4, &v19);

      if (v5)
      {
        swift_release(v20);
        return;
      }
      ++v9;
      v13 = v19;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = v20[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      specialized ContiguousArray._endMutation()(v15);
      if (v8 == v9)
        return;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
}

void *sub_1003AE218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  char v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "barButton");
      v9 = static NSObject.== infix(_:_:)(v8, a2);

      if ((v9 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v6;
      }

      ++v4;
      if (v7 == v3)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_1003AE370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }
    v7 = static UUID.== infix(_:_:)(v6 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid, a2);
    swift_release(v6);
    if ((v7 & 1) != 0)
      return v5;
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4)
      return 0;
  }
}

void sub_1003AE48C(int a1)
{
  void *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double v32;
  void *v33;
  id v34;
  uint64_t ObjectType;
  double v36;
  CGFloat v37;
  double v38;
  double v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  id v44;
  double v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  __n128 v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  __n128 v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  unint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  id v98;
  id v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  char isUniquelyReferenced_nonNull_native;
  __n128 v111;
  _QWORD *v112;
  __n128 v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, __n128);
  uint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  int64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  id *v147;
  uint64_t v148;
  int64_t v149;
  id *v150;
  uint64_t v151;
  uint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t);
  uint64_t *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  char *v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  char v170;
  char v171;
  int64_t v172;
  uint64_t v173;
  void *v174;
  Class isa;
  Class v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  int v180;
  id v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  int64_t v186;
  unint64_t v187;
  id *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD v201[5];
  double v202[4];
  char v203;
  CGRect v204;
  CGRect v205;

  v2 = (int64_t)v1;
  v180 = a1;
  v195 = sub_10006922C(&qword_100651D48);
  __chkstk_darwin(v195);
  v185 = (char *)&v178 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v194 = (uint64_t)&v178 - v5;
  __chkstk_darwin(v6);
  v193 = (char *)&v178 - v7;
  __chkstk_darwin(v8);
  v192 = (char *)&v178 - v9;
  v10 = type metadata accessor for UUID(0);
  v198 = *(_QWORD *)(v10 - 8);
  v199 = v10;
  __chkstk_darwin(v10);
  v189 = (char *)&v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v191 = (uint64_t)&v178 - v13;
  __chkstk_darwin(v14);
  v16 = (uint64_t)&v178 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (uint64_t)&v178 - v19;
  v21 = objc_msgSend(v1, "effectiveBrowserViewController", v18);
  if (!v21)
    return;
  v22 = v21;
  v23 = objc_msgSend(v21, "navigationController");

  if (!v23)
    return;
  v181 = objc_msgSend(v23, "navigationBar");

  if (!v181)
    return;
  v24 = type metadata accessor for DOCNavigationBar();
  v25 = swift_dynamicCastClass(v181, v24);
  if (!v25)
  {

    return;
  }
  v26 = v25;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  LODWORD(v182) = objc_msgSend((id)objc_opt_self(DOCFeature), "_UIPTabInfrastructureEnabled");
  if (!(_DWORD)v182)
    goto LABEL_28;
  v31 = objc_msgSend((id)v26, "topItem");
  if (!v31
    || (v33 = v31,
        v34 = objc_msgSend(v31, "overflowPresentationSource"),
        v33,
        !v34))
  {
LABEL_10:
    objc_msgSend((id)v26, "bounds", v32);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v44 = objc_msgSend((id)v26, "_restingHeights");
    if (v44)
    {
      v46 = v44;
      v47 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
      v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

      if ((unint64_t)v48 >> 62)
      {
        if (v48 < 0)
          v56 = v48;
        else
          v56 = v48 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v48);
        v57 = _CocoaArrayWrapper.endIndex.getter(v56);
        swift_bridgeObjectRelease(v48);
        if (v57)
          goto LABEL_13;
      }
      else if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        if ((v48 & 0xC000000000000001) != 0)
        {
          v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
        }
        else
        {
          if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_151:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v199);
            __break(1u);
            return;
          }
          v49 = *(id *)(v48 + 32);
        }
        v50 = v49;
        objc_msgSend(v49, "doubleValue", swift_bridgeObjectRelease(v48).n128_f64[0]);
        v43 = v51;

        goto LABEL_24;
      }
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v48).n128_u64[0];
    }
LABEL_24:
    v58 = objc_msgSend((id)v2, "traitCollection", v45);
    v59 = objc_msgSend(v58, "layoutDirection");

    if (v59 == (id)1)
    {
      v60 = 100.0;
    }
    else
    {
      v204.origin.x = v37;
      v204.origin.y = v39;
      v204.size.width = v41;
      v204.size.height = v43;
      v60 = CGRectGetWidth(v204) + -100.0;
    }
    objc_msgSend((id)v26, "convertRect:toView:", 0, v60, v39, 1.0, v43);
    v27 = v61;
    v28 = v62;
    v29 = v63;
    v30 = v64;
    goto LABEL_28;
  }
  ObjectType = swift_getObjectType(v34);
  UIPopoverPresentationControllerSourceItem.frame(in:)(v201, v26, ObjectType);
  sub_100070EDC((uint64_t)v201, (uint64_t)v202, &qword_10064A6C0);
  if (v203 == 1)
  {
    *(_QWORD *)&v32 = swift_unknownObjectRelease(v34).n128_u64[0];
    goto LABEL_10;
  }
  objc_msgSend((id)v26, "convertRect:toView:", 0, v202[0], v202[1], v202[2], v202[3]);
  v27 = v52;
  v28 = v53;
  v29 = v54;
  v30 = v55;
  swift_unknownObjectRelease(v34);
LABEL_28:
  v65 = sub_1003F2170((uint64_t)_swiftEmptyArrayStorage);
  v200 = (uint64_t)_swiftEmptyArrayStorage;
  v184 = OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems;
  v66 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems);
  if (v66)
  {
    swift_bridgeObjectRetain(v66);
    sub_10013064C(v67);
  }
  v183 = OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems;
  v68 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems);
  if (v68)
  {
    swift_bridgeObjectRetain(v68);
    sub_10013064C(v69);
  }
  v70 = v200;
  if ((unint64_t)v200 >> 62)
    goto LABEL_145;
  v71 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v178 = v70;
    v187 = v71;
    v186 = v2;
    if (!v71)
      break;
    v179 = v26;
    v70 = 0;
    v190 = v178 & 0xFFFFFFFFFFFFFF8;
    v188 = (id *)(v178 + 32);
    v26 = v187;
    while (1)
    {
      if ((unint64_t)v70 >= *(_QWORD *)(v190 + 16))
      {
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
        goto LABEL_144;
      }
      v196 = v188[v70];
      v72 = objc_msgSend(v196, "uuid");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

      if (*(_QWORD *)(v65 + 16))
      {
        v74 = sub_10007EF98(v20);
        if ((v75 & 1) != 0)
        {
          v205.origin.x = 0.0;
          v205.origin.y = 0.0;
          v205.size.width = 0.0;
          v205.size.height = 0.0;
          if (!CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(v65 + 56) + 32 * v74), v205))
          {
            (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v20, v199);

            goto LABEL_38;
          }
        }
      }
      v200 = (uint64_t)_swiftEmptyArrayStorage;
      v76 = *(_QWORD *)(v2 + v184);
      if (v76)
      {
        swift_bridgeObjectRetain(v76);
        sub_10013064C(v77);
      }
      v78 = *(_QWORD *)(v2 + v183);
      if (v78)
      {
        swift_bridgeObjectRetain(v78);
        sub_10013064C(v79);
      }
      v80 = v200;
      v197 = v65;
      if ((unint64_t)v200 >> 62)
      {
        if (v200 < 0)
          v116 = v200;
        else
          v116 = v200 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v200);
        v26 = _CocoaArrayWrapper.endIndex.getter(v116);
        if (!v26)
        {
LABEL_53:
          swift_bridgeObjectRelease_n(v80, 2);
          goto LABEL_54;
        }
      }
      else
      {
        v26 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v200);
        if (!v26)
          goto LABEL_53;
      }
      v2 = 0;
      while (1)
      {
        v65 = v2 + 1;
        if (__OFADD__(v2, 1))
        {
          __break(1u);
          goto LABEL_130;
        }
        v81 = *(id *)(v80 + 8 * v2 + 32);
        v82 = objc_msgSend(v81, "uuid");
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v82, v83);

        LOBYTE(v82) = static UUID.== infix(_:_:)(v16, v20);
        v84 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
        v84(v16, v199);
        if ((v82 & 1) != 0)
          break;

        ++v2;
        if (v65 == v26)
          goto LABEL_53;
      }
      swift_bridgeObjectRelease_n(v80, 2);
      v98 = objc_msgSend(v81, "remoteUIBarButtonItemDisplayedInNavigationBar:", v179);

      if (v98)
      {
        v99 = objc_msgSend(v98, "_doc_ipi_viewForPresenting");
        objc_msgSend(v98, "_doc_ipi_rectForPresenting");
        objc_msgSend(v99, "convertRect:toView:", 0);
        v101 = v100;
        v103 = v102;
        v105 = v104;
        v107 = v106;
        v108 = v199;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v198 + 16))(v16, v20, v199);
        v109 = v197;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v197);
        v200 = v109;
        sub_10035810C(v16, isUniquelyReferenced_nonNull_native, v101, v103, v105, v107);
        v65 = v200;
        v111 = swift_bridgeObjectRelease(0x8000000000000000);
        ((void (*)(uint64_t, uint64_t, __n128))v84)(v16, v108, v111);

        v84(v20, v108);
        goto LABEL_37;
      }
LABEL_54:
      v65 = v197;
      if (!(_DWORD)v182)
      {
        (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v20, v199);

        goto LABEL_37;
      }
      v2 = *(_QWORD *)(v198 + 16);
      v85 = v191;
      ((void (*)(uint64_t, uint64_t, uint64_t))v2)(v191, v20, v199);
      v86 = swift_isUniquelyReferenced_nonNull_native(v65);
      v200 = v65;
      v26 = sub_10007EF98(v85);
      v88 = *(_QWORD *)(v65 + 16);
      v89 = (v87 & 1) == 0;
      v90 = v88 + v89;
      if (__OFADD__(v88, v89))
        goto LABEL_143;
      v91 = v87;
      if (*(_QWORD *)(v65 + 24) >= v90)
        break;
      sub_1002E2AAC(v90, v86);
      v92 = sub_10007EF98(v191);
      if ((v91 & 1) != (v93 & 1))
        goto LABEL_151;
      v26 = v92;
      v65 = v200;
      if ((v91 & 1) == 0)
        goto LABEL_59;
LABEL_65:
      v112 = (_QWORD *)(*(_QWORD *)(v65 + 56) + 32 * v26);
      *v112 = v27;
      v112[1] = v28;
      v112[2] = v29;
      v112[3] = v30;
LABEL_66:
      v113 = swift_bridgeObjectRelease(0x8000000000000000);
      v114 = v199;
      v115 = *(void (**)(uint64_t, uint64_t, __n128))(v198 + 8);
      v115(v191, v199, v113);

      ((void (*)(uint64_t, uint64_t))v115)(v20, v114);
LABEL_37:
      v2 = v186;
      v26 = v187;
LABEL_38:
      if (++v70 == v26)
        goto LABEL_75;
    }
    if ((v86 & 1) != 0)
    {
      v65 = v200;
      if ((v87 & 1) != 0)
        goto LABEL_65;
    }
    else
    {
      sub_1002EA2E0();
      v65 = v200;
      if ((v91 & 1) != 0)
        goto LABEL_65;
    }
LABEL_59:
    *(_QWORD *)(v65 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    ((void (*)(unint64_t, uint64_t, uint64_t))v2)(*(_QWORD *)(v65 + 48) + *(_QWORD *)(v198 + 72) * v26, v191, v199);
    v94 = (_QWORD *)(*(_QWORD *)(v65 + 56) + 32 * v26);
    *v94 = v27;
    v94[1] = v28;
    v94[2] = v29;
    v94[3] = v30;
    v95 = *(_QWORD *)(v65 + 16);
    v96 = __OFADD__(v95, 1);
    v97 = v95 + 1;
    if (!v96)
    {
      *(_QWORD *)(v65 + 16) = v97;
      goto LABEL_66;
    }
LABEL_144:
    __break(1u);
LABEL_145:
    if (v70 < 0)
      v177 = v70;
    else
      v177 = v70 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v70);
    v71 = _CocoaArrayWrapper.endIndex.getter(v177);
    swift_bridgeObjectRelease(v70);
  }
LABEL_75:
  swift_bridgeObjectRelease(v178);
  v117 = *(_QWORD *)(v65 + 16);
  v118 = _swiftEmptyArrayStorage;
  if (v117)
  {
    v200 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v65);
    specialized ContiguousArray.reserveCapacity(_:)(v117);
    v119 = sub_1003754F8(v65);
    v121 = v120;
    v188 = (id *)objc_opt_self(NSValue);
    if ((v119 & 0x8000000000000000) == 0 && v119 < 1 << *(_BYTE *)(v65 + 32))
    {
      v26 = 0;
      v122 = v65 + 64;
      v184 = v65 + 80;
      v197 = v65;
      v191 = v65 + 64;
      v187 = v117;
      do
      {
        v20 = (unint64_t)v119 >> 6;
        v2 = 1 << v119;
        if ((*(_QWORD *)(v122 + 8 * ((unint64_t)v119 >> 6)) & (1 << v119)) == 0)
          goto LABEL_131;
        if (*(_DWORD *)(v65 + 36) != v121)
          goto LABEL_132;
        v123 = v195;
        v124 = (uint64_t)v192;
        v125 = &v192[*(int *)(v195 + 48)];
        v126 = *(_QWORD *)(v65 + 48);
        v196 = *(id *)(v198 + 72);
        v127 = *(void (**)(char *, uint64_t, uint64_t))(v198 + 16);
        v128 = v199;
        v127(v192, v126 + (_QWORD)v196 * v119, v199);
        v129 = (uint64_t *)(*(_QWORD *)(v197 + 56) + 32 * v119);
        v27 = *v129;
        v28 = v129[1];
        v29 = v129[2];
        v30 = v129[3];
        *(_QWORD *)v125 = *v129;
        *((_QWORD *)v125 + 1) = v28;
        *((_QWORD *)v125 + 2) = v29;
        *((_QWORD *)v125 + 3) = v30;
        v130 = v193;
        v131 = v128;
        v65 = v197;
        v190 = (uint64_t)v127;
        v127(v193, v124, v131);
        v132 = &v130[*(int *)(v123 + 48)];
        *(_QWORD *)v132 = v27;
        *((_QWORD *)v132 + 1) = v28;
        *((_QWORD *)v132 + 2) = v29;
        *((_QWORD *)v132 + 3) = v30;
        v133 = (uint64_t)v130;
        v134 = v194;
        v70 = (uint64_t)&qword_100651D48;
        sub_100070EDC(v133, v194, &qword_100651D48);
        sub_10000CB4C(v124, &qword_100651D48);
        v135 = objc_msgSend(v188, "valueWithCGRect:", *(double *)(v134 + *(int *)(v123 + 48)), *(double *)(v134 + *(int *)(v123 + 48) + 8), *(double *)(v134 + *(int *)(v123 + 48) + 16), *(double *)(v134 + *(int *)(v123 + 48) + 24));
        v136 = sub_10000CB4C(v134, &qword_100651D48);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v136);
        v16 = *(_QWORD *)(v200 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
        v137 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v135);
        specialized ContiguousArray._endMutation()(v137);
        v138 = 1 << *(_BYTE *)(v65 + 32);
        if (v119 >= v138)
          goto LABEL_133;
        v122 = v191;
        v139 = *(_QWORD *)(v191 + 8 * v20);
        if ((v139 & v2) == 0)
          goto LABEL_134;
        if (*(_DWORD *)(v65 + 36) != v121)
          goto LABEL_135;
        v140 = v139 & (-2 << (v119 & 0x3F));
        if (v140)
        {
          v119 = __clz(__rbit64(v140)) | v119 & 0xFFFFFFFFFFFFFFC0;
          v141 = v187;
        }
        else
        {
          v142 = v20 + 1;
          v143 = (unint64_t)(v138 + 63) >> 6;
          v141 = v187;
          if (v20 + 1 >= v143)
            goto LABEL_92;
          v144 = *(_QWORD *)(v191 + 8 * v142);
          if (!v144)
          {
            while (v143 - 2 != v20)
            {
              v144 = *(_QWORD *)(v184 + 8 * v20++);
              if (v144)
              {
                v142 = v20 + 1;
                goto LABEL_91;
              }
            }
LABEL_92:
            v119 = 1 << *(_BYTE *)(v65 + 32);
            goto LABEL_93;
          }
LABEL_91:
          v119 = __clz(__rbit64(v144)) + (v142 << 6);
        }
LABEL_93:
        if (++v26 == v141)
          goto LABEL_97;
      }
      while ((v119 & 0x8000000000000000) == 0 && v119 < v138);
    }
    __break(1u);
LABEL_97:
    v118 = (_QWORD *)v200;
    swift_bridgeObjectRelease(v65);
    v2 = *(_QWORD *)(v65 + 16);
    v145 = _swiftEmptyArrayStorage;
    if (v2)
    {
      v183 = (uint64_t)v118;
      v200 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v65);
      sub_10015532C(0, v2, 0);
      v26 = sub_1003754F8(v65);
      v147 = 0;
      v182 = v65 + 88;
      v70 = v191;
      v184 = v2;
      v187 = v146;
      v148 = (uint64_t)v192;
      while (1)
      {
        v96 = __OFADD__(v147, 1);
        v150 = (id *)((char *)v147 + 1);
        if (v96)
          goto LABEL_136;
        if ((v26 & 0x8000000000000000) != 0 || (uint64_t)v26 >= 1 << *(_BYTE *)(v65 + 32))
          goto LABEL_137;
        v20 = v26 >> 6;
        v16 = 1 << v26;
        if ((*(_QWORD *)(v70 + 8 * (v26 >> 6)) & (1 << v26)) == 0)
          goto LABEL_138;
        if (*(_DWORD *)(v65 + 36) != (_DWORD)v146)
          goto LABEL_139;
        v188 = v150;
        v151 = v195;
        v152 = (uint64_t *)(v148 + *(int *)(v195 + 48));
        v153 = *(_QWORD *)(v65 + 48) + (_QWORD)v196 * v26;
        v154 = v65;
        v155 = v199;
        v156 = (void (*)(char *, uint64_t, uint64_t))v190;
        ((void (*)(uint64_t, unint64_t, uint64_t))v190)(v148, v153, v199);
        v157 = (uint64_t *)(*(_QWORD *)(v154 + 56) + 32 * v26);
        v27 = *v157;
        v28 = v157[1];
        v29 = v157[2];
        v30 = v157[3];
        *v152 = *v157;
        v152[1] = v28;
        v152[2] = v29;
        v152[3] = v30;
        v158 = (uint64_t)v193;
        v156(v193, v148, v155);
        v159 = (_QWORD *)(v158 + *(int *)(v151 + 48));
        *v159 = v27;
        v159[1] = v28;
        v159[2] = v29;
        v159[3] = v30;
        v160 = v194;
        sub_100070EDC(v158, v194, &qword_100651D48);
        sub_10000CB4C(v148, &qword_100651D48);
        v161 = v185;
        v156(v185, v160, v155);
        v2 = *(_QWORD *)(v198 + 32);
        ((void (*)(char *, char *, uint64_t))v2)(v189, v161, v155);
        sub_10000CB4C(v160, &qword_100651D48);
        v145 = (_QWORD *)v200;
        if ((swift_isUniquelyReferenced_nonNull_native(v200) & 1) == 0)
        {
          sub_10015532C(0, v145[2] + 1, 1);
          v145 = (_QWORD *)v200;
        }
        v163 = v145[2];
        v162 = v145[3];
        v70 = v191;
        if (v163 >= v162 >> 1)
        {
          sub_10015532C(v162 > 1, v163 + 1, 1);
          v145 = (_QWORD *)v200;
        }
        v145[2] = v163 + 1;
        ((void (*)(char *, char *, uint64_t))v2)((char *)v145+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ v163 * (_QWORD)v196, v189, v199);
        v200 = (uint64_t)v145;
        v65 = v197;
        v149 = 1 << *(_BYTE *)(v197 + 32);
        if ((uint64_t)v26 >= v149)
          goto LABEL_140;
        v164 = *(_QWORD *)(v70 + 8 * v20);
        if ((v164 & v16) == 0)
          goto LABEL_141;
        LODWORD(v146) = v187;
        if (*(_DWORD *)(v197 + 36) != (_DWORD)v187)
          goto LABEL_142;
        v165 = v164 & (-2 << (v26 & 0x3F));
        if (v165)
        {
          v149 = __clz(__rbit64(v165)) | v26 & 0xFFFFFFFFFFFFFFC0;
          v2 = v184;
          v147 = v188;
        }
        else
        {
          v166 = v20 + 1;
          v167 = (unint64_t)(v149 + 63) >> 6;
          v2 = v184;
          v147 = v188;
          if (v20 + 1 < v167)
          {
            v168 = *(_QWORD *)(v70 + 8 * v166);
            if (!v168)
            {
              v166 = v20 + 2;
              if (v20 + 2 >= v167)
                goto LABEL_100;
              v168 = *(_QWORD *)(v70 + 8 * v166);
              if (!v168)
              {
                while (v167 - 3 != v20)
                {
                  v168 = *(_QWORD *)(v182 + 8 * v20++);
                  if (v168)
                  {
                    v166 = v20 + 2;
                    goto LABEL_116;
                  }
                }
                goto LABEL_100;
              }
            }
LABEL_116:
            v149 = __clz(__rbit64(v168)) + (v166 << 6);
          }
        }
LABEL_100:
        v26 = v149;
        if (v147 == (id *)v2)
        {
          swift_bridgeObjectRelease(v197);
          v118 = (_QWORD *)v183;
          break;
        }
      }
    }
  }
  else
  {
    v145 = _swiftEmptyArrayStorage;
  }
  if ((v180 & 1) != 0
    || (v169 = *(_QWORD *)(v186
                         + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID),
        swift_bridgeObjectRetain(v65),
        swift_bridgeObjectRetain(v169),
        sub_1003ADCB8(v65, v169),
        v171 = v170,
        swift_bridgeObjectRelease(v65),
        swift_bridgeObjectRelease(v169),
        (v171 & 1) == 0))
  {
    v172 = v186;
    v173 = *(_QWORD *)(v186
                     + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID);
    *(_QWORD *)(v186
              + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID) = v65;
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRelease(v173);
    v174 = *(void **)(v172 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    sub_10004F2F0(0, &qword_100651D50, NSValue_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v118);
    v176 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v174, "_updateRemoteBarButtonFrames:forUUID:", isa, v176, swift_bridgeObjectRelease(v145).n128_f64[0]);
    swift_bridgeObjectRelease(v65);

  }
  else
  {
    swift_bridgeObjectRelease(v65);

    swift_bridgeObjectRelease(v145);
    swift_bridgeObjectRelease(v118);
  }
}

unint64_t sub_1003AF6A4()
{
  unint64_t result;

  result = qword_100651D60;
  if (!qword_100651D60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCUIPDocumentLandingModeTrait, &type metadata for DOCUIPDocumentLandingModeTrait);
    atomic_store(result, (unint64_t *)&qword_100651D60);
  }
  return result;
}

void sub_1003AF6E8()
{
  uint64_t v0;

  sub_1003AD6CC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1003AF6F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003AF71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1003AF7BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1003AC7BC(a1, a2, a3, *(NSObject **)(v3 + 16), v3 + v8, *(void **)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1003AF840(uint64_t a1)
{
  uint64_t v1;

  sub_1003AA600(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1003AF84C()
{
  return sub_1003B1B64((void (*)(_QWORD))&_swift_release);
}

void sub_1003AF858(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003AA720(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1003AF864()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003AF898()
{
  uint64_t v0;

  sub_1003AA7EC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD, __n128))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003AF8A4(void *a1, void *a2)
{
  uint64_t v2;

  sub_1003AA8FC(a1, a2, *(void (**)(id))(v2 + 16));
}

void sub_1003AF8AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];
  uint64_t v59[6];
  char v60;

  v55 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v52 - v6;
  v8 = objc_msgSend(v0, "configuration", v5);
  v9 = objc_msgSend(v8, "hostIdentifier");

  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v54 = v10;

  v56 = swift_allocObject(&unk_1005E5398, 24, 7);
  *(_QWORD *)(v56 + 16) = v0;
  v11 = v0;
  v12 = (uint64_t *)DOCAPIRateLimiter.shared.unsafeMutableAddressor();
  swift_beginAccess(v12, v58, 0, 0);
  v13 = *v12;
  v14 = objc_msgSend(v11, "configuration", swift_retain().n128_f64[0]);
  v15 = objc_msgSend(v14, "hostIdentifier");

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = objc_msgSend(v11, "configuration");
  v20 = objc_msgSend(v19, "roleIdentifier");

  if (v20)
  {
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(), uint64_t))(*(_QWORD *)v13 + 88))(1, v16, v18, v21, v23, sub_1003B1BD0, v56);
  swift_release(v13);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v23);
  if ((v24 & 1) != 0)
  {
    swift_bridgeObjectRelease(v54);
    v27 = Logger.UI.unsafeMutableAddressor(v26);
    v28 = v55;
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v27, v55);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.debug.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v59[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v57 = sub_1000544FC(0xD000000000000026, 0x800000010052E390, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s function ran without rate-limiting.", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v28);
    swift_release(v56);
  }
  else
  {
    v34 = Logger.UI.unsafeMutableAddressor(v25);
    v35 = v55;
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v7, v34, v55);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.debug.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v59[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v57 = sub_1000544FC(0xD000000000000026, 0x800000010052E390, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s create document function is rate-limited. Returning error.", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v35);
    v59[0] = 0xD00000000000003ALL;
    v59[1] = 0x800000010052E350;
    v59[2] = 0;
    v59[3] = 0;
    v42 = v54;
    v59[4] = v53;
    v59[5] = v54;
    v60 = 0;
    v43 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v41);
    DOCAnalyticsManager.sendAPIAbuseEvent(_:)(v59);

    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRelease(0x800000010052E350);
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
    v45 = v44;
    v46 = objc_allocWithZone((Class)NSError);
    v47 = String._bridgeToObjectiveC()();
    v48 = objc_msgSend(v46, "initWithDomain:code:userInfo:", v47, 3072, 0, swift_bridgeObjectRelease(v45).n128_f64[0]);

    v49 = *(void **)&v11[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    v50 = v48;
    v51 = (void *)_convertErrorToNSError(_:)(v50);

    objc_msgSend(v49, "_didDenyCreateDocumentSessionWithError:", v51);
    swift_release(v56);

  }
}

void sub_1003AFE30(void *a1, uint64_t a2, uint64_t a3, void *a4, void (**a5)(const void *, _QWORD, void *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (**v69)(const void *, _QWORD, void *);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[24];
  uint64_t v75[6];
  char v76;

  v70 = type metadata accessor for Logger(0);
  v72 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v67 = (char *)&v66 - v12;
  v13 = swift_allocObject(&unk_1005E5208, 24, 7);
  *(_QWORD *)(v13 + 16) = a5;
  v69 = a5;
  _Block_copy(a5);
  v14 = objc_msgSend(a4, "configuration");
  v15 = objc_msgSend(v14, "hostIdentifier");

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = (_QWORD *)swift_allocObject(&unk_1005E5230, 80, 7);
  v19[2] = a4;
  v19[3] = sub_1003B1E9C;
  v19[4] = v13;
  v19[5] = a1;
  v19[6] = a2;
  v19[7] = a3;
  v66 = v16;
  v19[8] = v16;
  v19[9] = v18;
  v20 = a4;
  v71 = v13;
  swift_retain();
  v21 = a1;
  swift_bridgeObjectRetain(a3);
  v22 = swift_bridgeObjectRetain(v18);
  v23 = (uint64_t *)DOCAPIRateLimiter.shared.unsafeMutableAddressor(v22);
  swift_beginAccess(v23, v74, 0, 0);
  v24 = *v23;
  v25 = objc_msgSend(v20, "configuration", swift_retain().n128_f64[0]);
  v26 = objc_msgSend(v25, "hostIdentifier");

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = objc_msgSend(v20, "configuration");
  v31 = objc_msgSend(v30, "roleIdentifier");

  if (v31)
  {
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(), _QWORD *))(*(_QWORD *)v24 + 88))(0, v27, v29, v32, v34, sub_1003B1A28, v19);
  swift_release(v24);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v34);
  if ((v35 & 1) != 0)
  {
    swift_bridgeObjectRelease(v18);
    v38 = Logger.UI.unsafeMutableAddressor(v37);
    v39 = v72;
    v40 = v67;
    v41 = v70;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 16))(v67, v38, v70);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v75[0] = v46;
      *(_DWORD *)v45 = 136315138;
      v73 = sub_1000544FC(0xD00000000000002ALL, 0x800000010052E260, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s function ran without rate-limiting.", v45, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    swift_release(v71);
    swift_release(v19);
  }
  else
  {
    v47 = Logger.UI.unsafeMutableAddressor(v36);
    v48 = v72;
    v49 = v68;
    v50 = v70;
    v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 16))(v68, v47, v70);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.debug.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = v49;
      v56 = swift_slowAlloc(32, -1);
      v75[0] = v56;
      *(_DWORD *)v54 = 136315138;
      v73 = sub_1000544FC(0xD00000000000002ALL, 0x800000010052E260, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s rename function is rate-limited. Returning error.", v54, 0xCu);
      swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      v57 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v55, v50);
    }
    else
    {

      v57 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    }
    v75[0] = 0xD000000000000032;
    v75[1] = 0x800000010052E220;
    v75[2] = 0;
    v75[3] = 0;
    v75[4] = v66;
    v75[5] = v18;
    v76 = 0;
    v58 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v57);
    DOCAnalyticsManager.sendAPIAbuseEvent(_:)(v75);

    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRelease(0x800000010052E220);
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
    v60 = v59;
    v61 = objc_allocWithZone((Class)NSError);
    v62 = String._bridgeToObjectiveC()();
    v63 = objc_msgSend(v61, "initWithDomain:code:userInfo:", v62, 3072, 0, swift_bridgeObjectRelease(v60).n128_f64[0]);

    v64 = v63;
    v65 = (void *)_convertErrorToNSError(_:)(v64);
    v69[2](v69, 0, v65);
    swift_release(v71);
    swift_release(v19);

  }
}

id sub_1003B0464(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  int v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _QWORD v66[5];
  uint64_t v67[4];
  uint64_t v68;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v61 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v61 - v12;
  v14 = sub_10006922C(&qword_100651E48);
  inited = swift_initStackObject(v14, &v68);
  *(_OWORD *)(inited + 16) = xmmword_1004E5AB0;
  *(_QWORD *)(inited + 32) = "performCreateDocumentOrOpenNewWindow:";
  *(_QWORD *)(inited + 40) = "performCreateFolder:";
  *(_QWORD *)(inited + 48) = "performCreateFolderWithSelection:";
  *(_QWORD *)(inited + 56) = "performOpen:";
  *(_QWORD *)(inited + 64) = "performGetInfo:";
  *(_QWORD *)(inited + 72) = "performRename:";
  *(_QWORD *)(inited + 80) = "performDuplicate:";
  *(_QWORD *)(inited + 88) = "performRevealItem:";
  *(_QWORD *)(inited + 96) = "performMarkAsFavorite:";
  *(_QWORD *)(inited + 104) = "performEjectMedium:";
  *(_QWORD *)(inited + 112) = "performFind:";
  *(_QWORD *)(inited + 120) = "copy:";
  *(_QWORD *)(inited + 128) = "paste:";
  *(_QWORD *)(inited + 136) = "selectAll:";
  *(_QWORD *)(inited + 144) = "performViewAsIcons:";
  *(_QWORD *)(inited + 152) = "performViewAsList:";
  *(_QWORD *)(inited + 160) = "performViewAsColumns:";
  *(_QWORD *)(inited + 168) = "performUseGrouping:";
  *(_QWORD *)(inited + 176) = "performSortByName:";
  *(_QWORD *)(inited + 184) = "performSortByDate:";
  *(_QWORD *)(inited + 192) = "performSortBySize:";
  *(_QWORD *)(inited + 200) = "performSortByKind:";
  *(_QWORD *)(inited + 208) = "performSortByTags:";
  *(_QWORD *)(inited + 216) = "performSortBySharedBy:";
  *(_QWORD *)(inited + 224) = "performGroupByKind:";
  *(_QWORD *)(inited + 232) = "performGroupByDate:";
  *(_QWORD *)(inited + 240) = "performGroupBySize:";
  *(_QWORD *)(inited + 248) = "performGroupBySharedBy:";
  *(_QWORD *)(inited + 256) = "performGoToEnclosingFolder:";
  *(_QWORD *)(inited + 264) = "performGoToRecents:";
  *(_QWORD *)(inited + 272) = "performGoToBrowse:";
  *(_QWORD *)(inited + 280) = "performGoToDocuments:";
  *(_QWORD *)(inited + 288) = "performGoToDesktop:";
  *(_QWORD *)(inited + 296) = "performGoToDownloads:";
  *(_QWORD *)(inited + 304) = "performGoToICloudDrive:";
  *(_QWORD *)(inited + 312) = "performGoToShared:";
  *(_QWORD *)(inited + 320) = "performGoToLocation:";
  *(_QWORD *)(inited + 328) = "performConnectToServer:";
  if ((static Selector.== infix(_:_:)("performCreateDocumentOrOpenNewWindow:", a1) & 1) == 0)
  {
    v18 = 40;
    while ((static Selector.== infix(_:_:)(*(_QWORD *)(inited + v18), a1) & 1) == 0)
    {
      v18 += 8;
      if (v18 == 336)
      {
        v19 = swift_setDeallocating(inited);
        v20 = Logger.DocumentManager.unsafeMutableAddressor(v19);
        v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v20, v4);
        v22 = Logger.logObject.getter(v21);
        v23 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v22, v23))
        {
          v64 = v4;
          v24 = (uint8_t *)swift_slowAlloc(12, -1);
          v25 = swift_slowAlloc(32, -1);
          v67[0] = v25;
          *(_DWORD *)v24 = 136315138;
          v26 = Selector.description.getter(a1);
          v28 = v27;
          v66[0] = sub_1000544FC(v26, v27, v67);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, &v66[1]);
          swift_bridgeObjectRelease(v28);
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "DOCServiceDocumentBrowserViewController will not perform unsupported keyCommand action %s", v24, 0xCu);
          swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v25, -1, -1);
          swift_slowDealloc(v24, -1, -1);

          return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v64);
        }

        v43 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
        v44 = v7;
        return (id)v43(v44, v4);
      }
    }
  }
  v16 = objc_msgSend(a2, "targetForAction:withSender:", a1, 0, swift_bridgeObjectRelease(inited).n128_f64[0]);
  if (v16)
  {
    v17 = v16;
    _bridgeAnyObjectToAny(_:)(v66, v16);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    memset(v66, 0, 32);
  }
  sub_100070EDC((uint64_t)v66, (uint64_t)v67, &qword_100642730);
  if (!v67[3])
  {
    v31 = sub_10000CB4C((uint64_t)v67, &qword_100642730);
    goto LABEL_15;
  }
  v30 = sub_10004F2F0(0, (unint64_t *)&unk_100651E50, UIResponder_ptr);
  v31 = swift_dynamicCast(&v65, v67, (char *)&type metadata for Any + 8, v30, 6);
  if ((v31 & 1) == 0)
  {
LABEL_15:
    v34 = Logger.DocumentManager.unsafeMutableAddressor(v31);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v34, v4);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v64 = v4;
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v67[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v40 = Selector.description.getter(a1);
      v42 = v41;
      v66[0] = sub_1000544FC(v40, v41, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, &v66[1]);
      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "DOCServiceDocumentBrowserViewController can not perform keyCommand (no target found) for action %s", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v64);
    }

    v43 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v44 = v10;
    return (id)v43(v44, v4);
  }
  v32 = v65;
  v33 = objc_msgSend(v65, "respondsToSelector:", a1);
  if ((_DWORD)v33)
  {
    objc_msgSend(v32, "performSelector:withObject:", a1, 0);
    return v32;
  }
  v45 = Logger.DocumentManager.unsafeMutableAddressor(v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v13, v45, v4);
  v46 = v32;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.fault.getter();
  v49 = v48;
  if (os_log_type_enabled(v47, v48))
  {
    v50 = swift_slowAlloc(22, -1);
    v63 = swift_slowAlloc(64, -1);
    v67[0] = v63;
    *(_DWORD *)v50 = 136315394;
    v61[1] = v50 + 4;
    v51 = v46;
    v52 = objc_msgSend(v51, "description");
    v64 = v4;
    v53 = v52;
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v62 = v49;
    v56 = v55;

    v66[0] = sub_1000544FC(v54, v56, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, &v66[1]);

    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v50 + 12) = 2080;
    v57 = Selector.description.getter(a1);
    v59 = v58;
    v66[0] = sub_1000544FC(v57, v58, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v66, &v66[1]);
    swift_bridgeObjectRelease(v59);
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v62, "DOCServiceDocumentBrowserViewController can not perform keyCommand. Target found %s does not respond to action %s", (uint8_t *)v50, 0x16u);
    v60 = v63;
    swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v64);
  }

  v43 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v44 = v13;
  return (id)v43(v44, v4);
}

unint64_t sub_1003B0C20(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  v7 = sub_1003AE370(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if (!v2)
  {
    if ((v9 & 1) != 0)
    {
      v27 = *a1;
      if ((unint64_t)v27 >> 62)
      {
        if (v27 < 0)
          v31 = v27;
        else
          v31 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v7 = _CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease(v27);
      }
      else
      {
        return *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_57;
      v9 = *a1;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_58:
        if ((v9 & 0x8000000000000000) != 0)
          v29 = v9;
        else
          v29 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v30 = _CocoaArrayWrapper.endIndex.getter(v29);
        swift_bridgeObjectRelease(v9);
        if (v10 != v30)
          goto LABEL_6;
      }
      else if (v10 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid;
        for (i = v7 + 5; ; ++i)
        {
          v9 = i - 4;
          v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v12);
          }
          else
          {
            if ((v9 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
            if (v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_48;
            v13 = *(_QWORD *)(v12 + 8 * i);
            swift_retain();
          }
          v10 = static UUID.== infix(_:_:)(v13 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid, a2);
          swift_release(v13);
          if ((v10 & 1) == 0)
            break;
LABEL_32:
          v10 = i - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_49;
          v24 = *a1;
          if ((unint64_t)*a1 >> 62)
          {
            if (v24 < 0)
              v26 = *a1;
            else
              v26 = v24 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*a1);
            v25 = _CocoaArrayWrapper.endIndex.getter(v26);
            swift_bridgeObjectRelease(v24);
          }
          else
          {
            v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v10 == v25)
            return v7;
        }
        if (v9 == v7)
        {
LABEL_31:
          if (__OFADD__(v7++, 1))
            goto LABEL_50;
          goto LABEL_32;
        }
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
          v10 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v9 & 0x8000000000000000) != 0)
              goto LABEL_53;
            if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_54;
            v15 = *(_QWORD *)(v10 + 8 * i);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_51;
          if (v7 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_52;
          v14 = *(_QWORD *)(v10 + 8 * v7 + 32);
          swift_retain();
          if ((v10 & 0xC000000000000001) == 0)
            goto LABEL_17;
        }
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v10);
        v10 = *a1;
LABEL_20:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
        *a1 = v10;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
        {
          v10 = sub_1000818A0(v10);
          *a1 = v10;
        }
        v17 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v15;
        swift_release(v17);
        specialized Array._endMutation()(v18);
        v10 = *a1;
        v19 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
        *a1 = v10;
        if (!v19 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
        {
          v10 = sub_1000818A0(v10);
          *a1 = v10;
        }
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_55;
        v20 = v10 & 0xFFFFFFFFFFFFFF8;
        if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
        v21 = *(_QWORD *)(v20 + 8 * i);
        *(_QWORD *)(v20 + 8 * i) = v14;
        swift_release(v21);
        specialized Array._endMutation()(v22);
        goto LABEL_31;
      }
    }
  }
  return v7;
}

void sub_1003B0F60()
{
  uint64_t v0;

  sub_1003A9DA8(*(void **)(v0 + 16));
}

uint64_t sub_1003B0F68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B0F8C()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1003B0F98(uint64_t a1)
{
  uint64_t v1;

  sub_1003A4210(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003B0FA0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  _QWORD v27[2];
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.DocumentManager.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v29 = v2;
    v14 = (uint8_t *)v13;
    v28 = swift_slowAlloc(32, -1);
    v31 = v28;
    *(_DWORD *)v14 = 136315138;
    v27[1] = v14 + 4;
    v15 = type metadata accessor for URL(0);
    swift_bridgeObjectRetain(a1);
    v17 = Array.description.getter(v16, v15);
    v19 = v18;
    swift_bridgeObjectRelease(a1);
    v30 = sub_1000544FC(v17, v19, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "DOCServiceDocumentBrowserViewController did Pick URLs %s", v14, 0xCu);
    v20 = v28;
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v21 = v14;
    v2 = v29;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v22 = objc_msgSend(v2, "configuration");
  v23 = objc_msgSend(v22, "interactionMode");

  v24 = swift_allocObject(&unk_1005E4920, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  swift_retain();
  sub_1003ABC88(a1, v23 == (id)1, (uint64_t)sub_1003B1598, v24);
  return swift_release_n(v24, 2, v25);
}

void sub_1003B122C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSURL *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  __n128 v30;
  void *v31;
  void (*v32)(uint64_t, char *, uint64_t);
  NSString v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v36 = a2;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = v4;
  v7 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v32 - v10;
  v12 = objc_msgSend(v2, "configuration", v9);
  v13 = objc_msgSend(v12, "hostIdentifier");

  v33 = (NSString)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v37 = v14;

  v15 = swift_allocObject(&unk_1005E4920, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16(v11, a1, v6);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(&unk_1005E4970, v18 + v7, v17 | 7);
  *(_QWORD *)(v19 + 16) = v15;
  v34 = v15;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v32(v19 + v18, v11, v6);
  swift_retain();
  v20 = v36;
  URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v21);
  v23 = v22;
  v33 = String._bridgeToObjectiveC()();
  v24 = v35;
  v16(v35, v20, v6);
  v25 = (v17 + 32) & ~v17;
  v26 = (v7 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(&unk_1005E4998, v26 + 8, v17 | 7);
  *(_QWORD *)(v27 + 16) = sub_1003B152C;
  *(_QWORD *)(v27 + 24) = v19;
  v32(v27 + v25, v24, v6);
  *(_QWORD *)(v27 + v26) = 0;
  aBlock[4] = sub_1003AF838;
  v39 = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005E49B0;
  v28 = _Block_copy(aBlock);
  v29 = v39;
  swift_retain();
  v30 = swift_release(v29);
  v31 = v33;
  FPExtendBookmarkForDocumentURL(v23, v33, v28, v30);
  _Block_release(v28);
  swift_release(v34);
  swift_release(v19);
  swift_bridgeObjectRelease(v37);

}

uint64_t sub_1003B14B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003B152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  type metadata accessor for URL(0);
  return sub_1003AB9D8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1003B1588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003AB8F4(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1003B1590(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003AB578(a1, a2, *(void (**)(char *, uint64_t))(v2 + 16));
}

double sub_1003B1598(uint64_t a1)
{
  uint64_t v1;

  return sub_1003AAFDC(a1, v1);
}

void sub_1003B15A4()
{
  uint64_t v0;

  sub_1003AB464(*(char **)(v0 + 16));
}

uint64_t sub_1003B15AC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_unknownObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1003B15E8(uint64_t a1)
{
  uint64_t v1;

  sub_1003AAB7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1003B15F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B1620()
{
  uint64_t v0;

  sub_1003AA0F8(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003B1630()
{
  uint64_t v0;

  sub_1003A9E88(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1003B163C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003B1660()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setDefaultDocumentAspectRatio:", *(double *)(v0 + 24));
}

uint64_t sub_1003B1674()
{
  return sub_1003B1B64((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003B1680()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setLocalizedCreateDocumentActionTitle:", v2);

}

uint64_t sub_1003B16C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1003B16EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAllowsPickingMultipleItems:", *(unsigned __int8 *)(v0 + 24));
}

id sub_1003B1700()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAllowsDocumentCreation:", *(unsigned __int8 *)(v0 + 24));
}

void sub_1003B1714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001F86E8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003B172C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1003B1768()
{
  uint64_t v0;

  sub_1003A9154(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1003B1778()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003B17B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A9394(a1, a2, *(uint64_t (**)(_QWORD, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void **)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_1003B17E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003B181C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1003A9730(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32), *(void **)(v3 + 40), *(_BYTE *)(v3 + 48), *(id *)(v3 + 56));
}

uint64_t sub_1003B1858()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003A8AA0);
}

uint64_t sub_1003B1864()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B1888()
{
  uint64_t v0;

  return sub_1003A8C88(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003B1894()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003B18C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A8D34(a1, a2, *(uint64_t (**)(_QWORD, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_1003B18D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B1904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(uint64_t (**)(uint64_t))(v3 + 32);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, a3);
  return v4(v5);
}

void sub_1003B1944()
{
  uint64_t v0;

  sub_1003A7CDC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003B194C()
{
  return sub_1003B1B64((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003B1958()
{
  uint64_t v0;

  sub_1003A7A00(*(void **)(v0 + 16));
}

void sub_1003B1968()
{
  uint64_t v0;

  sub_1003A71BC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003B1970()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003B199C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A777C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003B19A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003B19D4()
{
  uint64_t v0;

  sub_1003A7010(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1003B19E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1003B1A28()
{
  uint64_t v0;

  sub_1003A5AF8(*(void **)(v0 + 16), *(void (**)(_QWORD, id))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1003B1A3C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_1003B1A70(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003A61E4(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1003B1A80()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

void sub_1003B1ABC(uint64_t a1, void **a2)
{
  uint64_t v2;

  sub_1003A63B0(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_1003B1AEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003B1B20()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003A68D0);
}

uint64_t sub_1003B1B2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B1B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A6D8C(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_1003B1B58()
{
  return sub_1003B1B64((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003B1B64(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, 40, 7);
}

void sub_1003B1B9C(char a1)
{
  uint64_t v1;

  sub_1003A6B20(a1 & 1, *(void **)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24));
}

uint64_t sub_1003B1BAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B1BD0()
{
  uint64_t v0;

  sub_1003A5A48(*(void **)(v0 + 16));
}

uint64_t sub_1003B1BD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1003B1C04()
{
  uint64_t v0;

  sub_1003A54D4(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1003B1C14(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003A55D8(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1003B1C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003A5700(a1, a2, *(uint64_t (**)(_QWORD, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1003B1C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 17) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1003B1CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003A4E6C(a1, a2, *(_BYTE *)(v2 + 16), v2 + v6, *(uint64_t (**)(_QWORD, uint64_t))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(void (**)(char *, char *, uint64_t))(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1003B1D3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003A5178(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16));
}

uint64_t sub_1003B1D4C()
{
  uint64_t v0;

  return sub_1003A51EC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1003B1D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v6);
}

void sub_1003B1DF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  sub_1003A4CD0(v0 + v2, *(void **)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1003B1E48()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003B1E54()
{
  uint64_t v0;

  sub_1003A45DC(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1003B1E5C()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003B1E68()
{
  uint64_t v0;

  sub_1003A426C(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

id sub_1003B1E70(uint64_t a1)
{
  uint64_t v1;

  return sub_1003A3A4C(a1, *(void **)(v1 + 16));
}

void sub_1003B1E78()
{
  sub_1003AE48C(1);
}

void sub_1003B204C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v5 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v6 = Set.Iterator.init(_cocoa:)(v34, v3, v4, v5);
    v1 = v34[0];
    v32 = v34[1];
    v7 = v34[2];
    v8 = v34[3];
    v9 = v34[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v7 = v11;
    v8 = 0;
  }
  v30 = v7;
  v31 = (unint64_t)(v7 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v14 = __CocoaSet.Iterator.next()(v6);
  if (!v14)
    goto LABEL_39;
  v15 = v14;
  v33 = v14;
  v16 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  swift_unknownObjectRetain(v15);
  swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
  v17 = v35;
  *(_QWORD *)&v18 = swift_unknownObjectRelease(v15).n128_u64[0];
  v19 = v8;
  v20 = v9;
  if (!v17)
    goto LABEL_39;
  while (1)
  {
    v25 = objc_msgSend(v17, "activityType", v18, v30);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    if (v26 == 0xD000000000000020 && v28 == 0x8000000100519670)
    {
      swift_bridgeObjectRelease(0x8000000100519670);
      goto LABEL_39;
    }
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD000000000000020, 0x8000000100519670, 0);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
      goto LABEL_39;

    v8 = v19;
    v9 = v20;
    if (v1 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v9)
      break;
    v20 = (v9 - 1) & v9;
    v21 = __clz(__rbit64(v9)) | (v8 << 6);
    v19 = v8;
LABEL_32:
    v17 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
    if (!v17)
      goto LABEL_39;
  }
  v22 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v22 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v22);
  v19 = v8 + 1;
  if (v23)
    goto LABEL_31;
  v19 = v8 + 2;
  if (v8 + 2 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 3;
  if (v8 + 3 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 4;
  if (v8 + 4 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
    goto LABEL_31;
  v19 = v8 + 5;
  if (v8 + 5 >= v31)
    goto LABEL_39;
  v23 = *(_QWORD *)(v32 + 8 * v19);
  if (v23)
  {
LABEL_31:
    v20 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_32;
  }
  v24 = v8 + 6;
  while (v31 != v24)
  {
    v23 = *(_QWORD *)(v32 + 8 * v24++);
    if (v23)
    {
      v19 = v24 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10021C590(v1);
}

