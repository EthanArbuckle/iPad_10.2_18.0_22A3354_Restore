Swift::String *DOCQuickLookSceneConfiguration.unsafeMutableAddressor()
{
  return &DOCQuickLookSceneConfiguration;
}

Swift::String *DOCQuickLookSceneIsShared.unsafeMutableAddressor()
{
  return &DOCQuickLookSceneIsShared;
}

void sub_1003B2438(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(_QWORD);
  char *v44;
  id v45;
  char *v46;
  id v47;
  char *v48;
  char *v49;
  id v50;
  char *v51;
  NSObject *v52;
  _BOOL4 v53;
  uint64_t v54;
  _QWORD *v55;
  double v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  void *v63;
  id v64;
  char *v65;
  char *v66;
  NSObject *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t ObjectType;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  char **v84;
  char *v85;
  void *v86;
  char *v87;
  id v88;
  NSObject *v89;
  os_log_type_t v90;
  _BOOL4 v91;
  uint64_t v92;
  id v93;
  void (*v94)(char *, uint64_t);
  NSObject *v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  void (*v122)(char *, uint64_t);
  id v123;
  char *v124;
  char *v125;
  char v126;
  char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  id v135;
  id v136;
  id v137;
  NSObject *v138;
  os_log_type_t v139;
  uint64_t v140;
  _QWORD *v141;
  id v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  char *v147;
  id v148;
  NSObject *v149;
  os_log_type_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  id v154;
  id v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  id v160;
  id v161;
  uint64_t v162;
  void *v163;
  void *v164;
  char v165;
  void *v166;
  id v167;
  uint64_t v168;
  id v169;
  void *v170;
  id v171;
  id v172;
  id v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  void *v179;
  id v180;
  char *v181;
  uint64_t v182;
  NSObject *v183;
  os_log_type_t v184;
  uint8_t *v185;
  uint64_t v186;
  id v187;
  id v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  NSString v193;
  id v194;
  objc_class *v195;
  _QWORD *v196;
  void *v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  char *v203;
  uint64_t v204;
  objc_class *v205;
  char *v206;
  id v207;
  id v208;
  char *v209;
  id v210;
  void *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  void **v215;
  void *v216;
  id v217;
  void *v218;
  uint64_t KeyPath;
  uint64_t v220;
  id v221;
  void *v222;
  uint64_t v223;
  char *v224;
  int v225;
  char *v226;
  char *v227;
  uint64_t v228;
  NSObject *v229;
  id v230;
  uint64_t v231;
  char *v232;
  char *v233;
  _QWORD *v234;
  id v235;
  uint64_t v236;
  void (*v237)(char *, uint64_t, uint64_t);
  id v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  objc_super v244;
  uint64_t v245[5];
  id v246;
  _BYTE v247[16];
  char v248[12];
  char v249[8];

  v4 = v3;
  v238 = a2;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v223 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v223 - v12;
  __chkstk_darwin(v14);
  v227 = (char *)&v223 - v15;
  __chkstk_darwin(v16);
  v226 = (char *)&v223 - v17;
  __chkstk_darwin(v18);
  v233 = (char *)&v223 - v19;
  __chkstk_darwin(v20);
  v240 = (char *)&v223 - v21;
  __chkstk_darwin(v22);
  v241 = (char *)&v223 - v23;
  v24 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
  v25 = (char *)DOCPreviewController.init()();
  v26 = &v25[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  swift_beginAccess(&v25[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate], v249, 1, 0);
  *((_QWORD *)v26 + 1) = &off_1005E58E8;
  swift_unknownObjectWeakAssign(v26, v4);
  v27 = &v25[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate];
  swift_beginAccess(&v25[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate], v248, 1, 0);
  *((_QWORD *)v27 + 1) = &off_1005E58D8;
  swift_unknownObjectWeakAssign(v27, v4);
  v28 = &v25[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
  swift_beginAccess(&v25[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity], v247, 1, 0);
  *v28 = 1;
  v29 = *(void **)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
  v239 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController] = v25;
  v243 = v25;

  v30 = objc_opt_self(UIWindowScene);
  v31 = swift_dynamicCastObjCClass(a1, v30);
  if (!v31)
  {
    v72 = Logger.Application.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v72, v7);
    v73 = a1;
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc(12, -1);
      v77 = swift_slowAlloc(32, -1);
      v245[0] = v77;
      *(_DWORD *)v76 = 136315138;
      ObjectType = swift_getObjectType(v73);
      v79 = _typeName(_:qualified:)(ObjectType, 0);
      v228 = v7;
      v81 = v80;
      v246 = (id)sub_1000544FC(v79, v80, v245);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);

      swift_bridgeObjectRelease(v81);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Denying creation of quicklook window / scene.  Unexpected scene type received: %s)", v76, 0xCu);
      swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v228);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    return;
  }
  v32 = (void *)v31;
  v234 = (_QWORD *)v8;
  v235 = a3;
  v224 = v13;
  v33 = objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions);
  v34 = a1;
  v35 = objc_msgSend(v33, "init");
  v245[3] = type metadata accessor for UIWindowSceneProminentPlacement(0);
  v245[4] = sub_10005A360(&qword_100647BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UIWindowSceneProminentPlacement, (uint64_t)&protocol conformance descriptor for UIWindowSceneProminentPlacement);
  sub_10006CBAC(v245);
  static UIWindowScenePlacement<>._largeProminentPlacement()();
  UIWindowSceneActivationRequestOptions.placement.setter(v245);

  v36 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", v32);
  v37 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window;
  v38 = *(void **)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window];
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window] = v36;

  v231 = v37;
  v39 = *(id *)&v4[v37];
  v40 = v243;
  if (v39)
    v39 = objc_msgSend(v39, "setRootViewController:", v243);
  v41 = Logger.Application.unsafeMutableAddressor(v39);
  v42 = v234;
  v43 = (void (*)(_QWORD))v234[2];
  v44 = v241;
  v236 = v41;
  v237 = (void (*)(_QWORD, _QWORD, _QWORD))v43;
  v43(v241);
  v45 = v34;
  v46 = v40;
  v47 = v45;
  v48 = v4;
  v49 = v46;
  v50 = v47;
  v51 = v48;
  v52 = Logger.logObject.getter(v51);
  v225 = static os_log_type_t.debug.getter(v52);
  v229 = v52;
  v53 = os_log_type_enabled(v52, (os_log_type_t)v225);
  v242 = v4;
  v243 = v51;
  v230 = v50;
  v232 = v49;
  if (v53)
  {
    v228 = v7;
    v54 = swift_slowAlloc(52, -1);
    v55 = (_QWORD *)swift_slowAlloc(24, -1);
    v223 = swift_slowAlloc(64, -1);
    v245[0] = v223;
    *(_DWORD *)v54 = 136316162;
    v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
    *(_QWORD *)&v56 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247).n128_u64[0];
    *(_WORD *)(v54 + 12) = 2080;
    v57 = objc_msgSend(v32, "session", v56);
    v58 = objc_msgSend(v57, "persistentIdentifier");

    v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v61 = v60;

    v246 = (id)sub_1000544FC(v59, v61, v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);

    swift_bridgeObjectRelease(v61);
    *(_WORD *)(v54 + 22) = 2112;
    v246 = v32;
    v62 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
    *v55 = v32;

    *(_WORD *)(v54 + 32) = 2112;
    v63 = *(void **)&v242[v231];
    if (!v63)
    {

      __break(1u);
      return;
    }
    v246 = *(id *)&v242[v231];
    v64 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
    v55[1] = v63;
    v65 = v243;

    *(_WORD *)(v54 + 42) = 2112;
    v49 = v232;
    v246 = v232;
    v66 = v232;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
    v55[2] = v25;

    v67 = v229;
    _os_log_impl((void *)&_mh_execute_header, v229, (os_log_type_t)v225, "%s: sceneIdentifier: %s scene: %@, window: %@, doc vc: %@", (uint8_t *)v54, 0x34u);
    v68 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v55, 3, v68);
    swift_slowDealloc(v55, -1, -1);
    v69 = v223;
    swift_arrayDestroy(v223, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v54, -1, -1);

    v70 = (char *)v234[1];
    v71 = v241;
    v7 = v228;
  }
  else
  {

    v70 = (char *)v42[1];
    v71 = v44;
  }
  v241 = v70;
  ((void (*)(char *, uint64_t))v70)(v71, v7);
  v82 = v238;
  v83 = objc_msgSend(v238, "stateRestorationActivity");
  v84 = &selRef_showTips;
  v85 = v240;
  if (!v83)
  {
    v98 = objc_msgSend(v235, "userActivities");
    v99 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v100 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
    v101 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v98, v99, v100);

    sub_1003B204C(v101);
    v103 = v102;
    v104 = swift_bridgeObjectRelease(v101);
    if (v103)
    {
      v105 = sub_10033A66C();
      if (v105)
      {
        v106 = v105;
        v107 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v108 = swift_allocObject(v107, 40, 7);
        *(_OWORD *)(v108 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v108 + 32) = v106;
        v245[0] = v108;
        specialized Array._endMutation()(v108);
        v109 = v245[0];

        v110 = v226;
        v237(v226, v236, v7);
        v111 = swift_bridgeObjectRetain_n(v109, 2);
        v112 = Logger.logObject.getter(v111);
        v113 = static os_log_type_t.debug.getter(v112);
        v114 = v113;
        if (os_log_type_enabled(v112, v113))
        {
          v115 = swift_slowAlloc(22, -1);
          LODWORD(v240) = v114;
          v116 = v115;
          v238 = (id)swift_slowAlloc(64, -1);
          v245[0] = (uint64_t)v238;
          *(_DWORD *)v116 = 136315394;
          v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
          v228 = v7;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
          *(_WORD *)(v116 + 12) = 2080;
          v234 = (_QWORD *)(v116 + 14);
          v117 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
          swift_bridgeObjectRetain(v109);
          v119 = Array.description.getter(v118, v117);
          v121 = v120;
          swift_bridgeObjectRelease(v109);
          v122 = (void (*)(_QWORD, _QWORD))v241;
          v246 = (id)sub_1000544FC(v119, v121, v245);
          v7 = v228;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
          swift_bridgeObjectRelease_n(v109, 2);
          swift_bridgeObjectRelease(v121);
          _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v240, "%s: Restore from quick look items: %s", (uint8_t *)v116, 0x16u);
          v123 = v238;
          swift_arrayDestroy(v238, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v123, -1, -1);
          swift_slowDealloc(v116, -1, -1);

          v122(v226, v7);
        }
        else
        {

          swift_bridgeObjectRelease_n(v109, 2);
          ((void (*)(char *, uint64_t))v241)(v110, v7);
        }
        v124 = v242;
        v127 = v243;
        v161 = objc_msgSend(v235, "userActivities");
        v162 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v161, v99, v100);

        sub_1003B204C(v162);
        v164 = v163;
        swift_bridgeObjectRelease(v162);
        if (v164)
        {
          v165 = sub_10033AE9C();

          v127[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene] = v165 & 1;
        }
        v166 = *(void **)&v124[v239];
        v134 = v232;
        if (v166)
        {
          swift_bridgeObjectRetain(v109);
          v167 = v166;
          DOCPreviewController.set(_:defaultIndex:)(v109, 0, 0, 0, 1);

          swift_bridgeObjectRelease_n(v109, 2);
        }
        else
        {
          swift_bridgeObjectRelease(v109);
        }
        v84 = &selRef_showTips;
        goto LABEL_40;
      }

    }
    v147 = v227;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v237)(v227, v236, v7, v104);
    v148 = v235;
    v149 = Logger.logObject.getter(v148);
    v150 = static os_log_type_t.error.getter(v149);
    if (os_log_type_enabled(v149, v150))
    {
      v151 = swift_slowAlloc(22, -1);
      v152 = (_QWORD *)swift_slowAlloc(8, -1);
      v153 = swift_slowAlloc(32, -1);
      v245[0] = v153;
      *(_DWORD *)v151 = 136315394;
      v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
      *(_WORD *)(v151 + 12) = 2112;
      v246 = v148;
      v154 = v148;
      v228 = v7;
      v155 = v154;
      v82 = v238;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
      *v152 = v148;

      _os_log_impl((void *)&_mh_execute_header, v149, v150, "%s: Unexpected scene connection options: %@", (uint8_t *)v151, 0x16u);
      v156 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v152, 1, v156);
      swift_slowDealloc(v152, -1, -1);
      swift_arrayDestroy(v153, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v153, -1, -1);
      swift_slowDealloc(v151, -1, -1);

      v157 = v227;
      v158 = v228;
    }
    else
    {

      v157 = v147;
      v158 = v7;
    }
    ((void (*)(char *, uint64_t))v241)(v157, v158);
    v159 = v232;
    v160 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v160, "requestSceneSessionDestruction:options:errorHandler:", v82, 0, 0);

    return;
  }
  v86 = v83;
  v87 = v49;
  v237(v240, v236, v7);
  v88 = v86;
  v89 = Logger.logObject.getter(v88);
  v90 = static os_log_type_t.debug.getter(v89);
  v91 = os_log_type_enabled(v89, v90);
  v234 = v86;
  if (v91)
  {
    v92 = swift_slowAlloc(22, -1);
    v229 = swift_slowAlloc(8, -1);
    v238 = (id)swift_slowAlloc(32, -1);
    v245[0] = (uint64_t)v238;
    *(_DWORD *)v92 = 136315394;
    v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
    *(_WORD *)(v92 + 12) = 2112;
    v246 = v88;
    v93 = v88;
    v94 = (void (*)(_QWORD, _QWORD))v241;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
    v95 = v229;
    v229->isa = (Class)v86;

    _os_log_impl((void *)&_mh_execute_header, v89, v90, "%s: stateRestorationActivity: %@", (uint8_t *)v92, 0x16u);
    v96 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v95, 1, v96);
    v87 = v232;
    swift_slowDealloc(v95, -1, -1);
    v97 = v238;
    swift_arrayDestroy(v238, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v97, -1, -1);
    swift_slowDealloc(v92, -1, -1);

    v94(v240, v7);
    v84 = &selRef_showTips;
  }
  else
  {

    ((void (*)(char *, uint64_t))v241)(v85, v7);
  }
  v124 = v242;
  v125 = v233;
  v126 = sub_10033AE9C();
  v127 = v243;
  v243[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene] = v126 & 1;
  v128 = sub_10033A66C();
  if (v128)
  {
    v129 = (void *)v128;
    v130 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v131 = swift_allocObject(v130, 40, 7);
    *(_OWORD *)(v131 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v131 + 32) = v129;
    v245[0] = v131;
    specialized Array._endMutation()(v131);
    v132 = v245[0];
    v133 = *(void **)&v124[v239];
    v134 = v87;
    if (v133)
    {
      v135 = v129;
      v136 = v133;
      DOCPreviewController.set(_:defaultIndex:)(v132, 0, 0, 0, 1);

      swift_bridgeObjectRelease(v132);
    }
    else
    {
      swift_bridgeObjectRelease(v245[0]);

    }
  }
  else
  {
    v237(v125, v236, v7);
    v137 = v88;
    v138 = Logger.logObject.getter(v137);
    v139 = static os_log_type_t.error.getter(v138);
    if (os_log_type_enabled(v138, v139))
    {
      v140 = swift_slowAlloc(22, -1);
      v141 = (_QWORD *)swift_slowAlloc(8, -1);
      v240 = (char *)swift_slowAlloc(32, -1);
      v245[0] = (uint64_t)v240;
      *(_DWORD *)v140 = 136315394;
      v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
      *(_WORD *)(v140 + 12) = 2112;
      v246 = v137;
      v142 = v137;
      v143 = (void (*)(_QWORD, _QWORD))v241;
      v124 = v242;
      v84 = &selRef_showTips;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
      *v141 = v234;

      _os_log_impl((void *)&_mh_execute_header, v138, v139, "%s: stateRestorationActivity contained no restorable state: %@", (uint8_t *)v140, 0x16u);
      v144 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v141, 1, v144);
      v145 = v141;
      v134 = v232;
      swift_slowDealloc(v145, -1, -1);
      v146 = v240;
      swift_arrayDestroy(v240, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v146, -1, -1);
      swift_slowDealloc(v140, -1, -1);

      v143(v233, v7);
    }
    else
    {
      v134 = v87;

      ((void (*)(char *, uint64_t))v241)(v125, v7);
    }
    v127 = v243;
  }
LABEL_40:
  v168 = v231;
  v169 = objc_msgSend(*(id *)&v124[v231], "makeKeyAndVisible");
  v170 = *(void **)&v124[v168];
  if (v170)
  {
    v171 = objc_allocWithZone((Class)DOCAppearance);
    v172 = v170;
    v173 = objc_msgSend(v171, "init");
    objc_msgSend(v172, "setAppearance:", v173);

  }
  sub_1003B3D50((uint64_t)v169);
  sub_1003B3F30();
  v174 = objc_msgSend(v235, v84[221]);
  v175 = sub_10004F2F0(0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v176 = sub_1000835B4(&qword_100647CA0, (unint64_t *)&unk_100651ED0, NSUserActivity_ptr);
  v177 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v174, v175, v176);

  sub_1003B204C(v177);
  v179 = v178;
  swift_bridgeObjectRelease(v177);
  if (!v179 || (v180 = (id)sub_10033AA7C(), v179, !v180))
  {
    v180 = objc_msgSend(objc_allocWithZone((Class)DOCConfiguration), "init");
    v181 = v224;
    v182 = ((uint64_t (*)(char *, uint64_t, uint64_t))v237)(v224, v236, v7);
    v183 = Logger.logObject.getter(v182);
    v184 = static os_log_type_t.error.getter(v183);
    if (os_log_type_enabled(v183, v184))
    {
      v185 = (uint8_t *)swift_slowAlloc(12, -1);
      v186 = swift_slowAlloc(32, -1);
      v245[0] = v186;
      *(_DWORD *)v185 = 136315138;
      v246 = (id)sub_1000544FC(0xD00000000000001FLL, 0x8000000100519BB0, v245);
      v127 = v243;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v246, v247);
      _os_log_impl((void *)&_mh_execute_header, v183, v184, "%s: couldn't fetch configuration from UserActivity. Keep going with DOCConfiguration() but things might act weirdly", v185, 0xCu);
      swift_arrayDestroy(v186, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v186, -1, -1);
      swift_slowDealloc(v185, -1, -1);
    }

    ((void (*)(char *, uint64_t))v241)(v181, v7);
  }
  v187 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v188 = objc_msgSend(v187, "userActionForConfiguration:", v180);

  v189 = objc_msgSend(v180, "hostIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v189);
  v191 = v190;

  v192 = objc_allocWithZone((Class)DOCSourceObserver);
  v193 = String._bridgeToObjectiveC()();
  v194 = objc_msgSend(v192, "initWithUserAction:hostIdentifier:", v188, v193, swift_bridgeObjectRelease(v191).n128_f64[0]);

  v195 = (objc_class *)type metadata accessor for DOCHierarchyController(0);
  v196 = objc_allocWithZone(v195);
  v197 = (void *)objc_opt_self(FPItemManager);
  v198 = v180;
  v199 = v194;
  v200 = objc_msgSend(v197, "defaultManager");
  v201 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v202 = objc_allocWithZone(v195);
  v203 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(v198, v199, 3, v200, v201);
  v204 = swift_getObjectType(v196);
  swift_deallocPartialClassInstance(v196, v204, *(unsigned int *)((swift_isaMask & *v196) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v196) + 0x34));
  v205 = (objc_class *)type metadata accessor for DOCDocumentManager();
  v206 = (char *)objc_allocWithZone(v205);
  *(_QWORD *)&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit(&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_uiBrowserDelegate]);
  swift_unknownObjectWeakInit(&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser]);
  *(_QWORD *)&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = v198;
  *(_QWORD *)&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = v199;
  *(_QWORD *)&v206[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = v203;
  v244.receiver = v206;
  v244.super_class = v205;
  v207 = v198;
  v208 = v199;
  v209 = v203;
  v210 = objc_msgSendSuper2(&v244, "init");
  v211 = *(void **)&v127[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager];
  *(_QWORD *)&v127[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager] = v210;

  v212 = v242;
  v213 = v239;
  v214 = *(_QWORD *)&v242[v239];
  if (v214)
  {
    v215 = (void **)(v214 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
    swift_beginAccess(v214 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration, v245, 1, 0);
    v216 = *v215;
    *v215 = v207;
    v217 = v207;

    v218 = *(void **)&v212[v213];
    if (v218)
    {
      v246 = *(id *)&v212[v213];
      KeyPath = swift_getKeyPath(&unk_1004E5BC8);
      v220 = swift_allocObject(&unk_1005E5A00, 24, 7);
      swift_unknownObjectWeakInit(v220 + 16);
      v221 = v218;
      v218 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 1, sub_1003B7418, v220, &protocol witness table for NSObject);
      swift_release(KeyPath);
      swift_release(v220);

    }
  }
  else
  {
    v218 = 0;
  }
  v222 = *(void **)&v127[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookPreviewItemObserver];
  *(_QWORD *)&v127[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookPreviewItemObserver] = v218;

}

void sub_1003B3D50(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  Swift::String v18;

  v2 = (id)_DocumentManagerBundle(a1);
  if (v2)
  {
    v3 = v2;
    v18._countAndFlagsBits = 0xD000000000000025;
    v18._object = (void *)0x800000010052E500;
    v4._object = (void *)0x800000010052E4E0;
    v4._countAndFlagsBits = 0xD000000000000019;
    v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5.value._object = (void *)0xEB00000000656C62;
    v6._countAndFlagsBits = 0x6F4C206B63697551;
    v6._object = (void *)0xEA00000000006B6FLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v18)._object;

    v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
    if (!v8 || (v9 = objc_msgSend(v8, "windowScene")) == 0)
    {
      swift_bridgeObjectRelease(object);
      return;
    }
    v10 = v9;
    v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
    if (v11)
    {
      v12 = objc_msgSend(v11, "currentPreviewItem");
      if (v12)
      {
        v13 = v12;
        if ((objc_msgSend(v12, "respondsToSelector:", "previewItemTitle") & 1) != 0)
        {
          v14 = objc_msgSend(v13, "previewItemTitle");
          swift_unknownObjectRelease(v13);
          if (!v14)
          {
            v17 = 0;
            goto LABEL_12;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v16 = v15;
          swift_bridgeObjectRelease(object);

          object = v16;
        }
        else
        {
          swift_unknownObjectRelease(v13);
        }
      }
    }
    v17 = String._bridgeToObjectiveC()();
LABEL_12:
    swift_bridgeObjectRelease(object);
    objc_msgSend(v10, "setTitle:", v17);

    return;
  }
  __break(1u);
}

void sub_1003B3F30()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  id v21;
  __n128 v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v1 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - v5;
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - v8;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)&v0[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v16, "currentPreviewItem");
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, "previewItemURL");
      swift_unknownObjectRelease(v18);
      if (v19)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

        v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v20(v6, 0, 1, v10);
      }
      else
      {
        v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v20(v6, 1, 1, v10);
      }
      sub_1000B34E4((uint64_t)v6, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v3, v14, v10);
        v20(v3, 0, 1, v10);
        sub_1003B5744((uint64_t)v3, (uint64_t)v0);

        sub_100157D6C((uint64_t)v3);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        return;
      }
    }
    else
    {
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v20(v9, 1, 1, v10);
    }
    sub_100157D6C((uint64_t)v9);
    v21 = objc_msgSend(v16, "currentPreviewItem");
    if (v21)
    {
      v23 = v21;
      v24 = objc_opt_self(QLItem);
      v25 = (void *)swift_dynamicCastObjCClass(v23, v24);
      if (v25)
      {
        v26 = objc_msgSend(v25, "fpItem");
        if (v26)
        {
          v27 = v26;
          v28 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
          v29 = swift_allocObject(&unk_1005E5960, 24, 7);
          *(_QWORD *)(v29 + 16) = v0;
          aBlock[4] = sub_1003B7310;
          v34 = v29;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100175118;
          aBlock[3] = &unk_1005E5978;
          v30 = _Block_copy(aBlock);
          v31 = v34;
          v32 = v0;
          objc_msgSend(v28, "fetchURLForItem:completionHandler:", v27, v30, swift_release(v31).n128_f64[0]);

          _Block_release(v30);
          swift_unknownObjectRelease(v23);

          return;
        }
      }
      v22 = swift_unknownObjectRelease(v23);
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v20)(v3, 1, 1, v10, v22);
    sub_1003B5744((uint64_t)v3, (uint64_t)v0);

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v11 + 56))(v3, 1, 1, v10, v12);
    sub_1003B5744((uint64_t)v3, (uint64_t)v0);
  }
  sub_100157D6C((uint64_t)v3);
}

void sub_1003B42D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1003B3D50(Strong);

  }
  swift_beginAccess(v3, &v8, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1003B3F30();

  }
}

double sub_1003B43D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  __n128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  void *v32;
  uint64_t v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v36;
  NSURL *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  void *v59;
  id v60;
  double result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  os_log_t v68;
  void (*v69)(char *, uint64_t, __n128);
  void *v70;
  char *v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v77 = (char *)&v62 - v11;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  v63 = a1;
  if (v15)
  {
    v71 = v9;
    v73 = v5;
    v74 = v3;
    v16 = a1;
    v17 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v75 = *(_QWORD *)(v7 + 72);
    v76 = v18;
    v19 = swift_bridgeObjectRetain(v16);
    v19.n128_u64[0] = 136315650;
    v66 = v19;
    v65 = (char *)&type metadata for Any + 8;
    v20 = v77;
    v67 = v2;
    while (1)
    {
      v76(v14, v17, v6);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v35)(v14, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v14, v6);
      v36 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      URL._bridgeToObjectiveC()(v37);
      v39 = v38;
      v80 = 0;
      v40 = objc_msgSend(v36, "itemForURL:error:", v38, &v80);

      v41 = v80;
      if (v40)
      {
        v42 = v80;
        v43 = v40;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
        v45 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v44 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v45 >= v44 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
        v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
        specialized Array._endMutation()(v46);

        v20 = v77;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v77, v6);
      }
      else
      {
        v47 = v80;
        v48 = _convertNSErrorToError(_:)(v41);

        v50 = swift_willThrow(v49);
        v51 = Logger.Application.unsafeMutableAddressor(v50);
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v51, v2);
        v52 = v71;
        v76(v71, (uint64_t)v77, v6);
        swift_errorRetain(v48);
        v53 = swift_errorRetain(v48);
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.error.getter(v54);
        v72 = v55;
        if (os_log_type_enabled(v54, v55))
        {
          v21 = swift_slowAlloc(32, -1);
          v70 = (void *)swift_slowAlloc(96, -1);
          v80 = v70;
          *(_DWORD *)v21 = v66.n128_u32[0];
          *(_QWORD *)(v21 + 4) = sub_1000544FC(0x28734C5255746573, 0xEE00293A736C7275, (uint64_t *)&v80);
          *(_WORD *)(v21 + 12) = 2080;
          v22 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v68 = v54;
          v23 = dispatch thunk of CustomStringConvertible.description.getter(v6, v22);
          v25 = v24;
          *(_QWORD *)(v21 + 14) = sub_1000544FC(v23, v24, (uint64_t *)&v80);
          v26 = swift_bridgeObjectRelease(v25);
          v69 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
          v69(v52, v6, v26);
          *(_WORD *)(v21 + 22) = 2080;
          v78 = v48;
          swift_errorRetain(v48);
          v27 = sub_10006922C((uint64_t *)&unk_100643490);
          v28 = String.init<A>(describing:)(&v78, v27);
          v30 = v29;
          *(_QWORD *)(v21 + 24) = sub_1000544FC(v28, v29, (uint64_t *)&v80);
          swift_bridgeObjectRelease(v30);
          swift_errorRelease(v48);
          swift_errorRelease(v48);
          v31 = v68;
          _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v72, "%s: couldn't fetch item for url. URL %s error %s", (uint8_t *)v21, 0x20u);
          v32 = v70;
          swift_arrayDestroy(v70, 3, v65);
          swift_slowDealloc(v32, -1, -1);
          v33 = v21;
          v2 = v67;
          swift_slowDealloc(v33, -1, -1);

          swift_errorRelease(v48);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v2);
          v20 = v77;
          ((void (*)(char *, uint64_t))v69)(v77, v6);
        }
        else
        {

          swift_errorRelease(v48);
          swift_errorRelease(v48);
          v56 = *(void (**)(char *, uint64_t))(v7 + 8);
          v56(v52, v6);
          swift_errorRelease(v48);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v2);
          v57 = v77;
          v56(v77, v6);
          v20 = v57;
        }
      }
      v17 += v75;
      if (!--v15)
        goto LABEL_13;
    }
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56);
    v34 = swift_bridgeObjectRetain(a1);
LABEL_13:
    v35(v14, 1, 1, v6, v34);
  }
  swift_bridgeObjectRelease(v63);
  v58 = v79;
  v59 = *(void **)(v64 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (v59)
  {
    swift_bridgeObjectRetain(v79);
    v60 = v59;
    DOCPreviewController.set(_:defaultIndex:)(v58, 0, 0, 0, 1);

    swift_bridgeObjectRelease(v58);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v58).n128_u64[0];
  return result;
}

void sub_1003B49B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v25 = v5;
    v14 = v13;
    v22 = (_QWORD *)swift_slowAlloc(8, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v14 = 136315394;
    v26 = sub_1000544FC(0xD000000000000016, 0x8000000100519B90, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    *(_WORD *)(v14 + 12) = 2112;
    v23 = v4;
    v26 = (uint64_t)v10;
    v15 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    v16 = v22;
    *v22 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: scene: %@", (uint8_t *)v14, 0x16u);
    v17 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v16, 1, v17);
    swift_slowDealloc(v16, -1, -1);
    v18 = v24;
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager) = 0;

  v20 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window) = 0;

  v21 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController) = 0;

}

id sub_1003B4E84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickLookSceneDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003B4F20()
{
  return type metadata accessor for QuickLookSceneDelegate(0);
}

uint64_t type metadata accessor for QuickLookSceneDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_100651EA8;
  if (!qword_100651EA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for QuickLookSceneDelegate);
  return result;
}

void sub_1003B4F64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = "\b";
  sub_1000B352C(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_1004E5B60;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_1003B4FE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  id v11;

  v6 = *(void **)(v5 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager);
  if (v6)
  {
    v11 = v6;
    sub_1004752C0(a2, a3, a4, a5);

  }
}

uint64_t sub_1003B5078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  __n128 v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];

  v1 = type metadata accessor for Logger(0);
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - v8;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v48 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v48 - v18;
  v20 = v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL, v51, 0, 0);
  sub_1002320B8(v20, (uint64_t)v9);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v21(v9, 1, v10) != 1)
  {
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v19, v9, v10);
    v29 = URL.absoluteString.getter(v31);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v19, v10, v32);
    return v29;
  }
  sub_100157D6C((uint64_t)v9);
  v22 = *(void **)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (!v22)
    return 0;
  v23 = objc_msgSend(v22, "currentPreviewItem");
  if (!v23)
    return 0;
  v24 = v23;
  v25 = objc_msgSend(v23, "previewItemURL");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, 1, 1, v10);
    goto LABEL_10;
  }
  v26 = v25;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v27(v6, v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  if (v21(v6, 1, v10) == 1)
  {
LABEL_10:
    sub_100157D6C((uint64_t)v6);
    v33 = objc_opt_self(QLItem);
    v34 = swift_dynamicCastObjCClass(v24, v33);
    v36 = v49;
    v35 = v50;
    if (v34)
    {
      v37 = (void *)v34;
      swift_unknownObjectRetain(v24);
      v38 = objc_msgSend(v37, "fpItem");
      if (v38)
      {
        v39 = v38;
        v40 = objc_msgSend(v38, "itemID");
        v29 = FPItemID.identifierString.getter();
        swift_unknownObjectRelease_n(v24, 2);

        return v29;
      }
      swift_unknownObjectRelease(v24);
    }
    v41 = Logger.UI.unsafeMutableAddressor(v34);
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v3, v41, v35);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "No ID to return", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
      swift_unknownObjectRelease(v24);

    }
    else
    {

      v46 = swift_unknownObjectRelease(v24);
    }
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v3, v35, v46);
    return 0;
  }
  v28 = ((uint64_t (*)(char *, char *, uint64_t))v27)(v16, v6, v10);
  v29 = URL.absoluteString.getter(v28);
  v30 = swift_unknownObjectRelease(v24);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v16, v10, v30);
  return v29;
}

uint64_t sub_1003B547C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  os_log_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  swift_errorRetain(a1);
  v11 = v10;
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(32, -1);
    v28 = v5;
    v16 = v15;
    v17 = (_QWORD *)swift_slowAlloc(16, -1);
    v27 = swift_slowAlloc(32, -1);
    v30 = v27;
    *(_DWORD *)v16 = 136315650;
    v29 = sub_1000544FC(0xD000000000000020, 0x800000010052E4B0, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    *(_WORD *)(v16 + 12) = 2112;
    v26 = v4;
    v29 = (uint64_t)v11;
    v18 = v11;
    v25 = v13;
    v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    *v17 = v11;

    *(_WORD *)(v16 + 22) = 2112;
    swift_errorRetain(a1);
    v20 = _swift_stdlib_bridgeErrorToNSError(a1);
    v29 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    v17[1] = v20;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    v21 = v25;
    _os_log_impl((void *)&_mh_execute_header, v25, v14, "%s requestSceneSessionDestruction for scene: %@ failed with error: %@", (uint8_t *)v16, 0x20u);
    v22 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v17, 2, v22);
    swift_slowDealloc(v17, -1, -1);
    v23 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v7, v26);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1003B5744(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];

  v64 = a2;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v61 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v60);
  v62 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Logger.Application.unsafeMutableAddressor(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  v19 = sub_1002320B8(a1, (uint64_t)v12);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v63 = v9;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v59 = v3;
    v24 = v23;
    v56 = swift_slowAlloc(64, -1);
    v66[0] = v56;
    *(_DWORD *)v24 = 136315394;
    v57 = a1;
    v65 = sub_1000544FC(0xD000000000000019, 0x800000010052E530, v66);
    v58 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
    *(_WORD *)(v24 + 12) = 2080;
    sub_1002320B8((uint64_t)v12, (uint64_t)v9);
    v25 = String.init<A>(describing:)(v9, v60);
    v27 = v26;
    v65 = sub_1000544FC(v25, v26, v66);
    a1 = v57;
    v4 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
    swift_bridgeObjectRelease(v27);
    sub_100157D6C((uint64_t)v12);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s identifier: %s", (uint8_t *)v24, 0x16u);
    v28 = v56;
    swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v29 = v24;
    v3 = v59;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    sub_100157D6C((uint64_t)v12);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v30 = v62;
  sub_1002320B8(a1, v62);
  v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v30, 1, v3);
  v32 = v64;
  if (v31 == 1)
  {
    sub_100157D6C(v30);
    v33 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 0);
    v34 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v63, 1, 1, v3);
    v35 = v32 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
    swift_beginAccess(v32 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL, v66, 33, 0);
    sub_100118024(v34, v35);
    swift_endAccess(v66);
  }
  else
  {
    v36 = v61;
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32))(v61, v30, v3);
    v38 = v4;
    v39 = URL.absoluteString.getter(v37);
    v41 = v40;
    sub_10004F2F0(0, (unint64_t *)&unk_100647BD0, NSPredicate_ptr);
    v42 = sub_10006922C((uint64_t *)&unk_100644560);
    v43 = swift_allocObject(v42, 72, 7);
    *(_OWORD *)(v43 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v43 + 56) = &type metadata for String;
    *(_QWORD *)(v43 + 64) = sub_10006A638();
    *(_QWORD *)(v43 + 32) = v39;
    *(_QWORD *)(v43 + 40) = v41;
    v33 = (id)NSPredicate.init(format:_:)(0x203D3D20666C6573, 0xEA00000000004025, v43);
    v44 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v63, v36, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v44, 0, 1, v3);
    v45 = v32 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
    swift_beginAccess(v32 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL, v66, 33, 0);
    sub_100118024(v44, v45);
    swift_endAccess(v66);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v3);
  }
  v46 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window;
  v47 = *(void **)(v32 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  if (v47)
  {
    v48 = objc_msgSend(v47, "windowScene");
    if (v48)
    {
      v49 = v48;
      v50 = objc_msgSend(v48, "activationConditions");

      objc_msgSend(v50, "setCanActivateForTargetContentIdentifierPredicate:", v33);
    }
    v51 = *(void **)(v32 + v46);
    if (v51)
    {
      v52 = objc_msgSend(v51, "windowScene");
      if (v52)
      {
        v53 = v52;
        v54 = objc_msgSend(v52, "activationConditions");

        objc_msgSend(v54, "setPrefersToActivateForTargetContentIdentifierPredicate:", v33);
        v33 = v54;
      }
    }
  }

}

uint64_t sub_1003B5CB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100643470);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  sub_1002320B8(a1, (uint64_t)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = swift_allocObject(&unk_1005E59B0, v17 + v13, v16 | 7);
  *(_QWORD *)(v18 + 16) = a3;
  sub_1000B34E4((uint64_t)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  aBlock[4] = sub_1003B73B8;
  v32 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E59C8;
  v19 = _Block_copy(aBlock);
  v20 = v32;
  v21 = a3;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_10006922C((uint64_t *)&unk_100647540);
  v25 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v5, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v29);
}

uint64_t sub_1003B5F10()
{
  return sub_1003B5078();
}

void sub_1003B5F30()
{
  sub_1003B3F30();
}

void sub_1003B5F50(uint64_t a1)
{
  sub_1003B3D50(a1);
}

void sub_1003B5F70()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  if (v1)
  {
    v2 = objc_msgSend(v1, "windowScene");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "session");
      v5 = sub_1003B601C();
      objc_msgSend(v4, "setStateRestorationActivity:", v5);

    }
  }
}

id sub_1003B601C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  void **v26;
  void *v27;
  void *v28;
  Swift::Int v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  Class v39;
  double v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  _BOOL4 v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  void *v77;
  Class v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  void *v84;
  unint64_t v85;
  Class v86;
  _QWORD v87[2];
  __int128 v88;
  unint64_t v89;
  void *v90;
  id v91;
  id v92;
  _QWORD v93[3];
  uint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  uint64_t v98;
  char v99[64];
  uint64_t v100;
  _QWORD v101[2];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend(v6, "currentPreviewItem");
  if (!v7)
    goto LABEL_17;
  v8 = v7;
  v9 = objc_opt_self(QLItem);
  v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
  if (!v10)
  {
    swift_unknownObjectRelease(v8);
LABEL_17:

    return 0;
  }
  v11 = objc_msgSend(v10, "fpItem");
  if (!v11)
  {

    swift_unknownObjectRelease(v8);
    return 0;
  }
  v92 = v6;
  v12 = v11;
  v13 = objc_allocWithZone((Class)NSUserActivity);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "initWithActivityType:", v14);

  v16 = (void *)objc_opt_self(NSKeyedArchiver);
  v96 = 0;
  v91 = v12;
  v17 = objc_msgSend(v16, "archivedDataWithRootObject:requiringSecureCoding:error:", v12, 1, &v96);
  v18 = v96;
  if (v17)
  {
    v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    v22 = v92;
    if (v15)
    {
      v23 = sub_10006922C(&qword_100643CC0);
      inited = swift_initStackObject(v23, v99);
      v88 = xmmword_1004D4CE0;
      *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
      v25 = v15;
      v26 = (void **)DOCUserActivityFPItemKey.unsafeMutableAddressor();
      v28 = *v26;
      v27 = v26[1];
      v90 = (void *)v21;
      *(_QWORD *)(inited + 32) = v28;
      *(_QWORD *)(inited + 40) = v27;
      *(_QWORD *)(inited + 48) = 0xD000000000000019;
      v89 = 0x80000001005196C0;
      *(_QWORD *)(inited + 56) = 0x80000001005196C0;
      swift_bridgeObjectRetain(v27);
      v29 = sub_1003F98B8(inited);
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, 2, &type metadata for String);
      isa = Set._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v25, "setRequiredUserInfoKeys:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

      v31 = sub_10006922C((uint64_t *)&unk_100651EC0);
      v32 = swift_initStackObject(v31, &v98);
      *(_OWORD *)(v32 + 16) = v88;
      v33 = *v26;
      v34 = (unint64_t)v26[1];
      v96 = v33;
      v97 = v34;
      *(_QWORD *)&v88 = v25;
      swift_bridgeObjectRetain(v34);
      v21 = (unint64_t)v90;
      v35 = v92;
      AnyHashable.init<A>(_:)(&v96, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(v32 + 96) = &type metadata for Data;
      *(_QWORD *)(v32 + 72) = v19;
      *(_QWORD *)(v32 + 80) = v21;
      v96 = (id)0xD000000000000019;
      v97 = v89;
      sub_10012F5E0(v19, v21);
      AnyHashable.init<A>(_:)(&v96, &type metadata for String, &protocol witness table for String);
      v36 = *(_BYTE *)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene);
      *(_QWORD *)(v32 + 168) = &type metadata for Bool;
      *(_BYTE *)(v32 + 144) = v36;
      v37 = v32;
      v22 = v35;
      v38 = sub_1003F1838(v37);
      v39 = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
      v41 = (void *)v88;
      objc_msgSend((id)v88, "addUserInfoEntriesFromDictionary:", v39, v40);

    }
    v42 = objc_msgSend(v22, "userActivity");
    if (v42)
    {
      v43 = v42;
      v44 = objc_msgSend(v42, "userInfo");

      v45 = v19;
      if (v44)
      {
        v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v44, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        swift_bridgeObjectRetain(v46);
        v48 = sub_100204288(v47);
        swift_bridgeObjectRelease(v46);
        if (v15)
        {
          v89 = v46;
          v49 = v15;
          v50 = objc_msgSend(v49, "requiredUserInfoKeys");
          if (v50)
          {
            v51 = v50;
            *(_QWORD *)&v88 = v49;
            v52 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v50, &type metadata for String, &protocol witness table for String);

            v100 = v52;
            v53 = *(_QWORD *)(v48 + 16);
            if (v53)
            {
              v90 = (void *)v21;
              v54 = (uint64_t *)(v48 + 40);
              do
              {
                v55 = *(v54 - 1);
                v56 = *v54;
                swift_bridgeObjectRetain(*v54);
                sub_10007AB00((uint64_t *)&v96, v55, v56);
                swift_bridgeObjectRelease(v97);
                v54 += 2;
                --v53;
              }
              while (v53);
              v57 = swift_bridgeObjectRelease(v48).n128_u64[0];
              v52 = v100;
              v21 = (unint64_t)v90;
              v45 = v19;
            }
            else
            {
              v57 = swift_bridgeObjectRelease(v48).n128_u64[0];
            }
            if (v52)
            {
              v78 = Set._bridgeToObjectiveC()().super.isa;
              v57 = swift_bridgeObjectRelease(v52).n128_u64[0];
            }
            else
            {
              v78 = 0;
            }
            v49 = (id)v88;
            objc_msgSend((id)v88, "setRequiredUserInfoKeys:", v78, *(double *)&v57);

          }
          else
          {
            objc_msgSend(v49, "setRequiredUserInfoKeys:", 0, swift_bridgeObjectRelease(v48).n128_f64[0]);
            v78 = (Class)v49;
          }

          v79 = sub_10006922C((uint64_t *)&unk_100651EC0);
          v80 = swift_initStackObject(v79, &v95);
          *(_OWORD *)(v80 + 16) = xmmword_1004D9670;
          v81 = v49;
          v82 = DOCUserActivityQuickLookStateRestorationUserInfoKey.unsafeMutableAddressor();
          v84 = *(void **)v82;
          v83 = *(_QWORD *)(v82 + 8);
          v96 = v84;
          v97 = v83;
          swift_bridgeObjectRetain(v83);
          AnyHashable.init<A>(_:)(&v96, &type metadata for String, &protocol witness table for String);
          *(_QWORD *)(v80 + 96) = sub_10006922C((uint64_t *)&unk_100647BC0);
          *(_QWORD *)(v80 + 72) = v89;
          v85 = sub_1003F1838(v80);
          v86 = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v81, "addUserInfoEntriesFromDictionary:", v86, swift_bridgeObjectRelease(v85).n128_f64[0]);

          sub_1000D4C00(v45, v21);
        }
        else
        {

          swift_bridgeObjectRelease(v48);
          sub_1000D4C00(v19, v21);
          swift_bridgeObjectRelease(v46);
        }
        swift_unknownObjectRelease(v8);
      }
      else
      {
        swift_unknownObjectRelease(v8);
        sub_1000D4C00(v19, v21);

      }
    }
    else
    {
      swift_unknownObjectRelease(v8);
      sub_1000D4C00(v19, v21);

    }
  }
  else
  {
    v59 = v18;
    v60 = _convertNSErrorToError(_:)(v18);

    v62 = swift_willThrow(v61);
    v63 = Logger.Application.unsafeMutableAddressor(v62);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v63, v1);
    swift_errorRetain(v60);
    v64 = v60;
    v65 = swift_errorRetain(v60);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter(v66);
    v68 = v67;
    v69 = os_log_type_enabled(v66, v67);
    v70 = v92;
    if (v69)
    {
      v71 = swift_slowAlloc(22, -1);
      LODWORD(v89) = v68;
      v72 = v71;
      v90 = (void *)swift_slowAlloc(64, -1);
      v96 = v90;
      *(_DWORD *)v72 = 136315394;
      v100 = sub_1000544FC(0xD00000000000001ELL, 0x8000000100519580, (uint64_t *)&v96);
      *(_QWORD *)&v88 = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      *(_WORD *)(v72 + 12) = 2080;
      v87[1] = v72 + 14;
      swift_getErrorValue(v64, &v94, v93);
      v73 = Error.localizedDescription.getter(v93[1], v93[2]);
      v75 = v74;
      v100 = sub_1000544FC(v73, v74, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v75);
      swift_errorRelease(v64);
      swift_errorRelease(v64);
      v76 = (void *)v88;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v88, (os_log_type_t)v89, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v72, 0x16u);
      v77 = v90;
      swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v72, -1, -1);

      swift_unknownObjectRelease(v8);
      swift_errorRelease(v64);

    }
    else
    {
      swift_unknownObjectRelease(v8);

      swift_errorRelease(v64);
      swift_errorRelease(v64);
      swift_errorRelease(v64);

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v15;
}

uint64_t sub_1003B693C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Application.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = a1;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v19 = (_QWORD *)swift_slowAlloc(8, -1);
    v21 = swift_slowAlloc(32, -1);
    v23 = v21;
    *(_DWORD *)v11 = 136315394;
    v22 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    *(_WORD *)(v11 + 12) = 2112;
    v22 = (uint64_t)v8;
    v12 = v8;
    v20 = v2;
    v13 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    v14 = v19;
    *v19 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: userActivity: %@", (uint8_t *)v11, 0x16u);
    v15 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v15);
    swift_slowDealloc(v14, -1, -1);
    v16 = v21;
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1003B6B84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Application.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = swift_bridgeObjectRetain_n(a1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v23 = v2;
    v12 = v11;
    v22 = swift_slowAlloc(64, -1);
    v25 = v22;
    *(_DWORD *)v12 = 136315394;
    v24 = sub_1000544FC(0xD000000000000019, 0x8000000100519EA0, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    *(_WORD *)(v12 + 12) = 2080;
    v21[1] = v12 + 14;
    v13 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v14 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    swift_bridgeObjectRetain(a1);
    v16 = Set.description.getter(v15, v13, v14);
    v18 = v17;
    swift_bridgeObjectRelease(a1);
    v24 = sub_1000544FC(v16, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: openURLContexts: %s", (uint8_t *)v12, 0x16u);
    v19 = v22;
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1003B6DFC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  void *v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id aBlock;
  _QWORD v45[4];
  uint64_t v46;

  v1 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v1);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = v0;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  v13 = &off_100651000;
  if (os_log_type_enabled(v11, v12))
  {
    v42 = v3;
    v14 = swift_slowAlloc(32, -1);
    v40 = (_QWORD *)swift_slowAlloc(8, -1);
    v41 = swift_slowAlloc(64, -1);
    v43 = v41;
    *(_DWORD *)v14 = 136315650;
    aBlock = sub_1000544FC(0xD000000000000020, 0x800000010052E4B0, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v45);
    *(_WORD *)(v14 + 12) = 2080;
    aBlock = sub_1003B5078();
    v45[0] = v15;
    v16 = sub_10006922C(&qword_100648C80);
    v17 = String.init<A>(describing:)((id *)&aBlock, v16);
    v19 = v18;
    aBlock = sub_1000544FC(v17, v18, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v45);

    *(_QWORD *)&v20 = swift_bridgeObjectRelease(v19).n128_u64[0];
    *(_WORD *)(v14 + 22) = 2112;
    v21 = *(void **)&v10[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window];
    if (v21 && (v22 = objc_msgSend(v21, "windowScene", v20)) != 0)
    {
      v23 = v22;
      aBlock = (uint64_t)v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v45);
    }
    else
    {
      aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v45);
      v23 = 0;
    }
    v24 = v40;
    *v40 = v23;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s sceneIdentifier: %s scene: %@ setting clearing currentDocumentIdentifier state", (uint8_t *)v14, 0x20u);
    v25 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v24, 1, v25);
    swift_slowDealloc(v24, -1, -1);
    v26 = v41;
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v3 = v42;
    v13 = &off_100651000;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v27 = *(void **)((char *)v13[460] + (_QWORD)v10);
  if (v27)
  {
    v28 = objc_msgSend(v27, "windowScene");
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v31 = objc_msgSend(v29, "session");
      v32 = swift_allocObject(&unk_1005E5910, 24, 7);
      *(_QWORD *)(v32 + 16) = v29;
      v45[3] = sub_1003B7308;
      v46 = v32;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v45[0] = 1107296256;
      v45[1] = sub_1000602CC;
      v45[2] = &unk_1005E5928;
      v33 = _Block_copy(&aBlock);
      v34 = v46;
      v35 = v29;
      objc_msgSend(v30, "requestSceneSessionDestruction:options:errorHandler:", v31, 0, v33, swift_release(v34).n128_f64[0]);
      _Block_release(v33);

      v36 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v3, 1, 1, v36);
      v37 = (uint64_t)&v10[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL];
      swift_beginAccess(&v10[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL], (id *)&aBlock, 33, 0);
      sub_100118024((uint64_t)v3, v37);
      swift_endAccess((id *)&aBlock);
      v38 = *(void **)&v10[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
      *(_QWORD *)&v10[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController] = 0;

    }
  }
}

uint64_t sub_1003B72E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B7308(uint64_t a1)
{
  uint64_t v1;

  return sub_1003B547C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003B7310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003B5CB4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1003B7318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_1003B73B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10006922C(&qword_100643470) - 8) + 80);
  sub_1003B5744(v0 + ((v1 + 24) & ~v1), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1003B73F4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B7418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003B42D8(a1, a2, v2);
}

void DOCAppearStateTracker.performSkippedViewWillAppearWorkaroundIfNeeded(for:_:)()
{
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

void sub_1003B74D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  _DWORD *v13;
  NSObject *v14;
  NSObject *v15;
  NSObject **v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E69726165707061, 0xE900000000000067, 0x6465726165707061, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000067);
  if ((v7 & 1) != 0 && *(_BYTE *)(v1 + 17) == 1)
  {
    *(_BYTE *)(v1 + 17) = 0;
    v8 = sub_1003B7C9C(v3);
    if ((v8 & 1) != 0)
    {
      v9 = Logger.UI.unsafeMutableAddressor(v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v4, v9, v2);
      v10 = v3;
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (_DWORD *)swift_slowAlloc(12, -1);
        *(_QWORD *)(v6 - 112) = swift_slowAlloc(8, -1);
        *(_QWORD *)(v6 - 104) = v13;
        *v13 = 138412290;
        *(_QWORD *)(v6 - 120) = v13 + 1;
        *(_QWORD *)(v6 - 88) = v10;
        v14 = v10;
        *(_QWORD *)(v6 - 96) = v5;
        v15 = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 88, v6 - 80);
        v16 = *(NSObject ***)(v6 - 112);
        *v16 = v10;

        v17 = *(uint8_t **)(v6 - 104);
        v5 = *(void (**)(uint64_t))(v6 - 96);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "WARNING: performing skipped .appearing work for %@", v17, 0xCu);
        v18 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v16, 1, v18);
        swift_slowDealloc(v16, -1, -1);
        swift_slowDealloc(v17, -1, -1);
      }
      else
      {

        v11 = v10;
      }

      v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v2);
      v5(v19);
    }
  }
}

uint64_t DOCAppearState.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003B7704 + 4 * byte_1004E5C10[a1]))(0x6165707061736964, 0xEB00000000646572);
}

uint64_t sub_1003B7704()
{
  return 0x6E69726165707061;
}

uint64_t sub_1003B7720()
{
  return 0x6465726165707061;
}

uint64_t DOCAppearState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003B7784 + 4 * byte_1004E5C14[a1]))(0x6165707061736964, 0xEB00000000646572);
}

uint64_t sub_1003B7784()
{
  return 0x6E69726165707061;
}

uint64_t sub_1003B77A0()
{
  return 0x6465726165707061;
}

void sub_1003B77CC(char *a1)
{
  sub_10039E6F4(*a1);
}

void sub_1003B77D8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1003B7830()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E69726165707061, 0xE900000000000067);
  swift_bridgeObjectRelease(0xE900000000000067);
  return Hasher._finalize()();
}

void sub_1003B78A4()
{
  __asm { BR              X10 }
}

uint64_t sub_1003B78E8(uint64_t a1)
{
  String.hash(into:)(a1, 0x6E69726165707061, 0xE900000000000067);
  return swift_bridgeObjectRelease(0xE900000000000067);
}

void sub_1003B7940(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1003B7994()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E69726165707061, 0xE900000000000067);
  swift_bridgeObjectRelease(0xE900000000000067);
  return Hasher._finalize()();
}

unint64_t sub_1003B7A08@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s5Files14DOCAppearStateO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003B7A34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1003B7A6C + 4 * byte_1004E5C24[*v0]))();
}

void sub_1003B7A6C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69726165707061;
  a1[1] = 0xE900000000000067;
}

void sub_1003B7A8C(_QWORD *a1@<X8>)
{
  *a1 = 0x6465726165707061;
  a1[1] = 0xE800000000000000;
}

void sub_1003B7AA8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEC000000676E6972;
}

uint64_t sub_1003B7ABC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003B7AF4 + 4 * byte_1004E5C28[*v0]))(0x6165707061736964, 0xEB00000000646572);
}

uint64_t sub_1003B7AF4()
{
  return 0x6E69726165707061;
}

uint64_t sub_1003B7B10()
{
  return 0x6465726165707061;
}

Swift::Void __swiftcall DOCViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  sub_1003B7B88(a1, 1, (SEL *)&selRef_viewWillAppear_);
}

Swift::Void __swiftcall DOCViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  sub_1003B7B88(a1, 1, (SEL *)&selRef_viewIsAppearing_);
}

Swift::Void __swiftcall DOCViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  sub_1003B7B88(a1, 2, (SEL *)&selRef_viewDidAppear_);
}

Swift::Void __swiftcall DOCViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  sub_1003B7B88(a1, 3, (SEL *)&selRef_viewWillDisappear_);
}

Swift::Void __swiftcall DOCViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_1003B7B88(a1, 0, (SEL *)&selRef_viewDidDisappear_);
}

id sub_1003B7B88(char a1, char a2, SEL *a3)
{
  char *v3;
  void *v6;
  uint64_t v8;
  objc_super v10;

  v6 = v3;
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files17DOCViewController_appearStateTracker];
  swift_retain();
  sub_100021890((uint64_t)v6, a2);
  swift_release(v8);
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for DOCViewController();
  return objc_msgSendSuper2(&v10, *a3, a1 & 1);
}

void sub_1003B7C10()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_100651EE8 = v2;
}

uint64_t sub_1003B7C9C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  _QWORD *v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - v7;
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "bundleIdentifier");

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

  }
  else
  {
    v13 = 0x800000010052E5E0;
    v11 = 0xD000000000000011;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSaveToFilesExtensionIdentifier);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
    {
      v20 = Logger.UI.unsafeMutableAddressor(v19);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v20, v2);
      v21 = a1;
      v22 = swift_bridgeObjectRetain(v13);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.fault.getter();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc(22, -1);
        LODWORD(v47) = v25;
        v27 = v26;
        v45 = (_QWORD *)swift_slowAlloc(8, -1);
        v48 = swift_slowAlloc(32, -1);
        v50 = (uint64_t)v21;
        v51 = v48;
        *(_DWORD *)v27 = 138412546;
        v49 = v3;
        v46 = v23;
        v28 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
        v29 = v45;
        *v45 = v21;

        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain(v13);
        v50 = sub_1000544FC(v11, v13, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
        swift_bridgeObjectRelease_n(v13, 3);
        v30 = v46;
        _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v47, "WARNING: %@ will not perform skipped .appearing work (not allowed for %s)", (uint8_t *)v27, 0x16u);
        v31 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v29, 1, v31);
        swift_slowDealloc(v29, -1, -1);
        v32 = v48;
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v2);
      }
      else
      {

        swift_bridgeObjectRelease_n(v13, 2);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      return 0;
    }
  }
  swift_bridgeObjectRelease(v13);
  if (qword_1006410C0 != -1)
    v33 = swift_once(&qword_1006410C0, sub_1003B7C10);
  if (byte_100651EE8 != 1)
    return 1;
  v34 = Logger.UI.unsafeMutableAddressor(v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v34, v2);
  v35 = a1;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc(22, -1);
    v39 = (_QWORD *)swift_slowAlloc(8, -1);
    v47 = swift_slowAlloc(32, -1);
    v50 = (uint64_t)v35;
    v51 = v47;
    *(_DWORD *)v38 = 138412546;
    v48 = v2;
    v49 = v3;
    v40 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    *v39 = v35;

    *(_WORD *)(v38 + 12) = 2080;
    v50 = sub_1000544FC(0xD00000000000002CLL, 0x800000010052E600, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "WARNING: %@ will not perform skipped .appearing work (%s was true)", (uint8_t *)v38, 0x16u);
    v41 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v39, 1, v41);
    swift_slowDealloc(v39, -1, -1);
    v42 = v47;
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v48);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0;
}

void sub_1003B81F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Logger(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

void sub_1003B828C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  _DWORD *v13;
  NSObject *v14;
  NSObject **v15;
  uint8_t *v16;
  uint64_t v17;

  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E69726165707061, 0xE900000000000067, 0x6465726165707061, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000067);
  if ((v7 & 1) != 0 && *(_BYTE *)(v4 + 17) == 1)
  {
    *(_BYTE *)(v4 + 17) = 0;
    v8 = sub_1003B7C9C(v3);
    if ((v8 & 1) != 0)
    {
      v9 = Logger.UI.unsafeMutableAddressor(v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v9, v2);
      v10 = v3;
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (_DWORD *)swift_slowAlloc(12, -1);
        *(_QWORD *)(v6 - 104) = swift_slowAlloc(8, -1);
        *(_QWORD *)(v6 - 96) = v13;
        *(_QWORD *)(v6 - 88) = v10;
        *v13 = 138412290;
        *(_QWORD *)(v6 - 112) = v13 + 1;
        v14 = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 88, v6 - 80);
        v15 = *(NSObject ***)(v6 - 104);
        *v15 = v10;

        v16 = *(uint8_t **)(v6 - 96);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "WARNING: performing skipped .appearing work for %@", v16, 0xCu);
        v17 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v15, 1, v17);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v16, -1, -1);
      }
      else
      {

        v11 = v10;
      }

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      sub_1002C55C0(v0);
    }
  }
}

unint64_t _s5Files14DOCAppearStateO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0B70, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1003B84C8()
{
  unint64_t result;

  result = qword_100651EF0;
  if (!qword_100651EF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCAppearState, &type metadata for DOCAppearState);
    atomic_store(result, (unint64_t *)&qword_100651EF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCAppearState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003B8558 + 4 * byte_1004E5C35[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003B858C + 4 * byte_1004E5C30[v4]))();
}

uint64_t sub_1003B858C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B859CLL);
  return result;
}

uint64_t sub_1003B85A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B85B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003B85B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B85BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCAppearState()
{
  return &type metadata for DOCAppearState;
}

uint64_t getEnumTagSinglePayload for DOCBrowserLayoutConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for DOCBrowserLayoutConfiguration()
{
  return &type metadata for DOCBrowserLayoutConfiguration;
}

uint64_t storeEnumTagSinglePayload for DOCBrowserLayoutConfiguration.SizeSetting(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003B8678 + 4 * byte_1004E5D65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003B86AC + 4 * asc_1004E5D60[v4]))();
}

uint64_t sub_1003B86AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B86B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B86BCLL);
  return result;
}

uint64_t sub_1003B86C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B86D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003B86D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B86DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserLayoutConfiguration.SizeSetting()
{
  return &type metadata for DOCBrowserLayoutConfiguration.SizeSetting;
}

ValueMetadata *type metadata accessor for DOCBrowserLayoutConfiguration.Trait()
{
  return &type metadata for DOCBrowserLayoutConfiguration.Trait;
}

uint64_t sub_1003B8708(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v8;
  char v9;

  v8 = a1;
  v9 = a2 & 1;
  v6 = sub_1001463A0();
  return dispatch thunk of UIMutableTraits.subscript.setter(&v8, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v6, a3, a4);
}

uint64_t sub_1003B8768(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v6;

  v4 = sub_1001463A0();
  dispatch thunk of UIMutableTraits.subscript.getter(&v6, &type metadata for DOCBrowserLayoutConfiguration.Trait, &type metadata for DOCBrowserLayoutConfiguration.Trait, v4, a1, a2);
  return v6;
}

objc_class *sub_1003B87C4(uint64_t a1)
{
  char v1;
  objc_class *result;
  objc_class *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSBundle v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t countAndFlagsBits;
  unint64_t v13;

  v1 = a1;
  result = (objc_class *)(id)_DocumentManagerBundle(a1);
  v3 = result;
  if ((v1 & 1) != 0)
  {
    if (result)
    {
      v4 = 0xD00000000000002CLL;
      v13 = 0x800000010052E6C0;
      v5 = 0x800000010052E6A0;
      v6 = 0xD000000000000016;
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v3;
      v10 = 0x6C7561666544;
      goto LABEL_6;
    }
  }
  else
  {
    if (result)
    {
      v4 = 0xD00000000000002CLL;
      v13 = 0x800000010052E670;
      v5 = 0x800000010052E650;
      v6 = 0xD000000000000016;
      v7 = 0x617A696C61636F4CLL;
      v8 = 0xEB00000000656C62;
      v9.super.isa = v3;
      v10 = 0x6361706D6F43;
LABEL_6:
      v11._countAndFlagsBits = v10 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v11._object = (void *)0xE700000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, *(Swift::String_optional *)&v7, v9, v11, *(Swift::String *)&v4)._countAndFlagsBits;

      return (objc_class *)countAndFlagsBits;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B8900(char a1, char a2)
{
  unsigned int v2;
  _QWORD v4[2];
  uint64_t v5;

  v4[0] = 1;
  v4[1] = (a2 & 1) - 1;
  SignedNumeric.advanced(amount:direction:)(&v5, v4, a1 & 1, &type metadata for Int, &protocol witness table for Int);
  if (v5)
    v2 = 2;
  else
    v2 = 1;
  if (v5 == -1)
    return 0;
  else
    return v2;
}

Swift::Int sub_1003B896C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1 - 1);
  return Hasher._finalize()();
}

void sub_1003B89B0()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 - 1);
}

Swift::Int sub_1003B89DC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2 - 1);
  return Hasher._finalize()();
}

_QWORD *sub_1003B8A1C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result)
    v2 = 2;
  else
    v2 = 1;
  if (*result == -1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1003B8A3C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 - 1;
}

unint64_t sub_1003B8A50()
{
  unint64_t result;

  result = qword_100652020;
  if (!qword_100652020)
  {
    result = swift_getWitnessTable(&unk_1004E5E18, &type metadata for DOCBrowserLayoutConfiguration.SizeSetting);
    atomic_store(result, (unint64_t *)&qword_100652020);
  }
  return result;
}

unint64_t sub_1003B8A98()
{
  unint64_t result;

  result = qword_100652028;
  if (!qword_100652028)
  {
    result = swift_getWitnessTable(&unk_1004E5E80, &type metadata for DOCBrowserLayoutConfiguration);
    atomic_store(result, (unint64_t *)&qword_100652028);
  }
  return result;
}

uint64_t sub_1003B8ADC(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  else
    return 0;
}

Swift::Int sub_1003B8B0C()
{
  uint64_t v0;
  Swift::UInt v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2 - 1);
  return Hasher._finalize()();
}

void sub_1003B8B68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  Hasher._combine(_:)(*(_QWORD *)v0);
  Hasher._combine(_:)(v1 - 1);
}

Swift::Int sub_1003B8BA4(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *(_QWORD *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3 - 1);
  return Hasher._finalize()();
}

void sub_1003B8C00(uint64_t a1@<X8>)
{
  char v1;

  v1 = byte_100652018;
  *(_QWORD *)a1 = qword_100652010;
  *(_BYTE *)(a1 + 8) = v1;
}

uint64_t sub_1003B8C20()
{
  uint64_t v0;

  v0 = qword_100652000;
  swift_bridgeObjectRetain(off_100652008);
  return v0;
}

uint64_t sub_1003B8C60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = sub_10006922C(&qword_100644A58);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = sub_10006922C(&qword_1006524B8);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = sub_1003B8F34();
  v16 = v15;
  v17 = v15[2];
  if (v17)
  {
    v32 = v14;
    v33 = v11;
    v34 = v3;
    v35 = a1;
    v18 = *(unsigned __int8 *)(v3 + 80);
    v31 = v15;
    v19 = (uint64_t)v15 + ((v18 + 32) & ~v18);
    v36 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1000271D4(v19, (uint64_t)v8, &qword_100644A58);
      v20 = v2;
      v21 = *(int *)(v2 + 48);
      v22 = type metadata accessor for UICellAccessory(0);
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v5, v8, v22);
      v24 = *(_QWORD *)&v8[v21];
      *(_QWORD *)&v5[v21] = v24;
      v25 = type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
      if (swift_dynamicCastClass(v24, v25))
        break;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
      sub_10000CB4C((uint64_t)v8, &qword_100644A58);
      v19 += v36;
      --v17;
      v2 = v20;
      if (!v17)
      {
        v26 = 1;
        v3 = v34;
        a1 = v35;
        v14 = v32;
        v11 = v33;
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    v14 = v32;
    sub_100070EDC((uint64_t)v8, (uint64_t)v32, &qword_100644A58);
    v26 = 0;
    v2 = v20;
    v3 = v34;
    a1 = v35;
    v11 = v33;
LABEL_8:
    v16 = v31;
  }
  else
  {
    v26 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, v26, 1, v2);
  swift_bridgeObjectRelease(v16);
  sub_100070EDC((uint64_t)v14, (uint64_t)v11, &qword_1006524B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    sub_10000CB4C((uint64_t)v11, &qword_1006524B8);
    v27 = type metadata accessor for UICellAccessory(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 1, 1, v27);
  }
  else
  {

    v29 = type metadata accessor for UICellAccessory(0);
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(a1, v11, v29);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
  }
}

_QWORD *sub_1003B8F34()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(char *, uint64_t, uint64_t);
  double v17;
  uint64_t v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v0 = type metadata accessor for UICellAccessory.AccessoryType(0);
  v36 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (void **)((char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for UICellAccessory(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100644A58);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UICollectionViewListCell.accessories.getter(v8);
  v12 = v11;
  v13 = *(_QWORD *)(v11 + 16);
  if (v13)
  {
    v37 = _swiftEmptyArrayStorage;
    sub_100155244(0, v13, 0);
    v14 = *(unsigned __int8 *)(v4 + 80);
    v29 = v12;
    v15 = v12 + ((v14 + 32) & ~v14);
    v31 = *(_QWORD *)(v4 + 72);
    v32 = v4;
    v33 = v0;
    v16 = *(double (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v30 = enum case for UICellAccessory.AccessoryType.customView(_:);
    do
    {
      v17 = v16(v6, v15, v3);
      UICellAccessory.accessoryType.getter(v17);
      v18 = v36;
      v19 = (*(uint64_t (**)(void **, uint64_t))(v36 + 88))(v2, v0);
      if (v19 == v30)
      {
        (*(void (**)(void **, uint64_t))(v18 + 96))(v2, v0);
        v20 = *v2;
        v21 = sub_10006922C(&qword_1006524C0);
        v22 = swift_dynamicCastClass(v20, v21);
        if (!v22)

      }
      else
      {
        (*(void (**)(void **, uint64_t))(v18 + 8))(v2, v0);
        v22 = 0;
      }
      v23 = *(int *)(v35 + 48);
      v16(v10, (uint64_t)v6, v3);
      *(_QWORD *)&v10[v23] = v22;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
      v24 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      {
        sub_100155244(0, v24[2] + 1, 1);
        v24 = v37;
      }
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_100155244(v25 > 1, v26 + 1, 1);
        v24 = v37;
      }
      v24[2] = v26 + 1;
      sub_100070EDC((uint64_t)v10, (uint64_t)v24+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v26, &qword_100644A58);
      v15 += v31;
      --v13;
      v0 = v33;
    }
    while (v13);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    swift_bridgeObjectRelease(v11);
    return _swiftEmptyArrayStorage;
  }
  return v24;
}

uint64_t sub_1003B9208(_BYTE *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  __n128 v12;
  void (*v13)(_BYTE *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[24];
  char v20[24];

  v2 = v1;
  v4 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = &v2[qword_100672D48];
  v12 = swift_beginAccess(&v2[qword_100672D48], v20, 0, 0);
  v13 = *(void (**)(_BYTE *, char *, uint64_t, __n128))(v5 + 16);
  v13(v10, v11, v4, v12);
  v14 = swift_beginAccess(v11, v19, 33, 0);
  (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 24))(v11, a1, v4, v14);
  swift_endAccess(v19);
  ((void (*)(_BYTE *, char *, uint64_t))v13)(v7, v11, v4);
  v15 = sub_10005A360(&qword_1006524C8, (uint64_t (*)(uint64_t))&type metadata accessor for UICellAccessory.DisplayedState, (uint64_t)&protocol conformance descriptor for UICellAccessory.DisplayedState);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v10, v4, v15);
  v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v17(v7, v4);
  if ((v16 & 1) == 0)
    objc_msgSend(v2, "setNeedsUpdateConfiguration");
  v17(a1, v4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v10, v4);
}

uint64_t sub_1003B938C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t *v16;
  __int128 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  _OWORD v26[2];
  uint64_t v27;
  _QWORD v28[5];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[5];
  _BYTE v36[24];
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v2 = v1;
  v4 = (_QWORD *)(v1 + qword_100672D50);
  swift_beginAccess(v1 + qword_100672D50, v36, 0, 0);
  v5 = v4[3];
  if (v5)
  {
    v6 = v4[4];
    v7 = sub_10007E7A0(v4, v4[3]);
    v8 = *(_QWORD *)(v5 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v37, v5, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
  }
  else
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
  }
  sub_1000271D4(a1, (uint64_t)v29, &qword_100655F90);
  v12 = v30;
  if (v30)
  {
    v13 = v31;
    sub_10007E7A0(v29, v30);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v35, v12, v13);
    sub_100068588(v29);
  }
  else
  {
    sub_10000CB4C((uint64_t)v29, &qword_100655F90);
    memset(v35, 0, sizeof(v35));
  }
  sub_1000271D4((uint64_t)&v37, (uint64_t)v29, &qword_1006524A8);
  sub_1000271D4((uint64_t)v35, (uint64_t)&v32, &qword_1006524A8);
  if (!v30)
  {
    sub_10000CB4C((uint64_t)v35, &qword_1006524A8);
    sub_10000CB4C((uint64_t)&v37, &qword_1006524A8);
    if (!*((_QWORD *)&v33 + 1))
    {
      v16 = &qword_1006524A8;
      v17 = (__int128 *)v29;
      return sub_10000CB4C((uint64_t)v17, v16);
    }
    goto LABEL_14;
  }
  sub_1000271D4((uint64_t)v29, (uint64_t)v28, &qword_1006524A8);
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_10000CB4C((uint64_t)v35, &qword_1006524A8);
    sub_10000CB4C((uint64_t)&v37, &qword_1006524A8);
    sub_100067748((uint64_t)v28);
LABEL_14:
    sub_10000CB4C((uint64_t)v29, &qword_1006524B0);
    goto LABEL_15;
  }
  v26[0] = v32;
  v26[1] = v33;
  v27 = v34;
  v14 = static AnyHashable.== infix(_:_:)(v28, v26);
  sub_100067748((uint64_t)v26);
  sub_10000CB4C((uint64_t)v35, &qword_1006524A8);
  sub_10000CB4C((uint64_t)&v37, &qword_1006524A8);
  sub_100067748((uint64_t)v28);
  result = sub_10000CB4C((uint64_t)v29, &qword_1006524A8);
  if ((v14 & 1) == 0)
  {
LABEL_15:
    v18 = qword_100652030;
    v19 = *(unsigned __int8 **)(v2 + qword_100652030);
    *(_QWORD *)(v2 + qword_100652030) = 0;
    sub_1003BA720(v19);
    swift_release(v19);
    sub_1000271D4((uint64_t)v4, (uint64_t)&v37, &qword_100655F90);
    if (*((_QWORD *)&v38 + 1))
    {
      sub_1000E85C4(&v37, (uint64_t)v29);
      sub_100092328((uint64_t)v29, (uint64_t)&v37);
      v20 = type metadata accessor for DOCGenericOperationProgress(0);
      swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      v21 = *((_QWORD *)&v38 + 1);
      v22 = sub_10007E7A0(&v37, *((uint64_t *)&v38 + 1));
      v28[3] = v21;
      v23 = sub_10006CBAC(v28);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v23, v22, v21);
      sub_100092328((uint64_t)&v37, (uint64_t)v35);
      v24 = sub_100400FE8((uint64_t)v28, v35, (uint64_t)&off_1005C0BF0);
      sub_100068588(&v37);
      v25 = *(unsigned __int8 **)(v2 + v18);
      *(_QWORD *)(v2 + v18) = v24;
      swift_retain();
      sub_1003BA720(v25);
      swift_release(v24);
      swift_release(v25);
      return sub_100068588(v29);
    }
    v16 = &qword_100655F90;
    v17 = &v37;
    return sub_10000CB4C((uint64_t)v17, v16);
  }
  return result;
}

double sub_1003B9730()
{
  char *v0;
  uint64_t v1;
  unsigned __int8 *v2;
  double result;
  _BYTE v4[24];
  _BYTE v5[24];
  _BYTE v6[40];
  _OWORD v7[2];
  uint64_t v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  objc_msgSendSuper2(&v9, "prepareForReuse");
  v0[qword_100672D58] = 0;
  objc_msgSend(v0, "setNeedsUpdateConfiguration");
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  v1 = (uint64_t)&v0[qword_100672D50];
  swift_beginAccess(&v0[qword_100672D50], v5, 0, 0);
  sub_1000271D4(v1, (uint64_t)v6, &qword_100655F90);
  swift_beginAccess(v1, v4, 33, 0);
  sub_1003BDD04((uint64_t)v7, v1);
  swift_endAccess(v4);
  sub_1003B938C((uint64_t)v6);
  sub_10000CB4C((uint64_t)v7, &qword_100655F90);
  sub_10000CB4C((uint64_t)v6, &qword_100655F90);
  v2 = *(unsigned __int8 **)&v0[qword_100652030];
  *(_QWORD *)&v0[qword_100652030] = 0;
  sub_1003BA720(v2);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

void sub_1003B983C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1003B9730();

}

uint64_t sub_1003B9870(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  double v40;
  double v41;
  void *v42;
  void *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)(uint64_t, void *);
  _QWORD *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  char *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  objc_class *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char v102[24];
  char v103[24];
  _QWORD v104[3];
  uint64_t v105;
  uint64_t (**v106)(uint64_t, void *);

  v2 = v1;
  v4 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v4);
  v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory(0);
  v96 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v99 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v97 = (uint64_t)&v82 - v11;
  v12 = sub_10006922C(&qword_100645FB8);
  __chkstk_darwin(v12);
  v95 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v98 = (uint64_t)&v82 - v15;
  v101 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  __chkstk_darwin(v101);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v100 = (uint64_t)&v82 - v19;
  v20 = type metadata accessor for UIBackgroundConfiguration(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v82 - v26;
  UICollectionViewCell.defaultBackgroundConfiguration()(v25);
  v28 = type metadata accessor for UICellConfigurationState(0);
  v105 = v28;
  v106 = (uint64_t (**)(uint64_t, void *))&protocol witness table for UICellConfigurationState;
  v29 = sub_10006CBAC(v104);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v29, a1, v28);
  UIBackgroundConfiguration.updated(for:)(v104);
  v30 = v21;
  v31 = *(void (**)(char *, uint64_t))(v21 + 8);
  v31(v23, v20);
  sub_100068588(v104);
  v32 = *(_QWORD *)&v2[qword_100652030];
  if (!v32 || (v2[qword_100672D58] & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v6, v27, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v6, 0, 1, v20);
    UICollectionViewCell.backgroundConfiguration.setter(v6);
    v105 = v101;
    v106 = (uint64_t (**)(uint64_t, void *))sub_10005A360(&qword_100652498, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E60C0);
    v33 = sub_10006CBAC(v104);
    sub_1003BA154(32, 0xE100000000000000, 32, 0xE100000000000000, 0, 0, 1, 3, (uint64_t)v33, 1);
    UICollectionViewCell.contentConfiguration.setter(v104);
    return ((uint64_t (*)(char *, uint64_t))v31)(v27, v20);
  }
  v87 = v30;
  v83 = v8;
  v88 = (uint64_t (*)(char *, uint64_t))v31;
  v89 = v27;
  v90 = v6;
  v91 = v20;
  swift_retain();
  v85 = sub_1003BDA34();
  v36 = v35;
  swift_retain();
  swift_bridgeObjectRetain(v36);
  v84 = sub_1003BDB74();
  v38 = v37;
  swift_bridgeObjectRetain(v37);
  v39 = objc_msgSend(v2, "traitCollection", swift_release(v32).n128_f64[0]);
  objc_msgSend(v39, "displayScale");
  v41 = v40;

  sub_1003BD6F8(64.0, 64.0, v41);
  v43 = v42;
  v44 = v32 + *(_QWORD *)(*(_QWORD *)v32 + 328);
  v45 = v2;
  v46 = *(_QWORD *)v44;
  v47 = *(_BYTE *)(v44 + 8);
  v48 = *(_BYTE *)(v32 + *(_QWORD *)(*(_QWORD *)v32 + 336));
  v86 = v42;
  v49 = v100;
  v50 = v46;
  v51 = v45;
  sub_1003BA154((uint64_t)v85, v36, (uint64_t)v84, v38, v43, v50, v47, v48, v100, 0);
  sub_1003BD630(v49, (uint64_t)v17);
  sub_1003BD6BC(v49);
  sub_1003BD5EC((uint64_t)v17, v49);
  v52 = (uint64_t)&v45[qword_100672D50];
  swift_beginAccess(&v45[qword_100672D50], v103, 0, 0);
  sub_1000271D4(v52, (uint64_t)v104, &qword_100655F90);
  v53 = v105;
  if (v105)
  {
    v54 = v106;
    v55 = sub_10007E7A0(v104, v105);
    v56 = *(_QWORD *)(v53 - 8);
    v57 = __chkstk_darwin(v55);
    v59 = (char *)&v82 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v56 + 16))(v59, v57);
    sub_10000CB4C((uint64_t)v104, &qword_100655F90);
    v60 = (void *)v54[3](v53, v54);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v53);
    LODWORD(v59) = objc_msgSend(v60, "isCancellable");

    if ((_DWORD)v59)
    {
      v61 = v98;
      sub_1003B8C60(v98);
      v62 = v95;
      sub_1000271D4(v61, v95, &qword_100645FB8);
      v63 = v96;
      v64 = v83;
      v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v62, 1, v83);
      v66 = v91;
      v67 = v90;
      if (v65 == 1)
      {
        type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
        v68 = &v51[qword_100672D48];
        v69 = swift_beginAccess(&v51[qword_100672D48], v102, 0, 0);
        v70 = (uint64_t)v92;
        (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v93 + 16))(v92, v68, v94, v69);
        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v71 = swift_allocObject(&unk_1005E5D38, 24, 7);
        swift_unknownObjectWeakInit(v71 + 16);
        v73 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v72, 0, 0, 0, sub_1003BDCFC, v71);
        v74 = v97;
        v63 = v96;
        sub_1003BA504(v70, v73, v97);

        (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v70, v94);
        sub_10000CB4C(v95, &qword_100645FB8);
      }
      else
      {
        v74 = v97;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v97, v62, v64);
      }
      v76 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v99, v74, v64);
      v75 = (_QWORD *)sub_1000697E0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v78 = v75[2];
      v77 = v75[3];
      if (v78 >= v77 >> 1)
        v75 = (_QWORD *)sub_1000697E0(v77 > 1, v78 + 1, 1, (unint64_t)v75);
      v75[2] = v78 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))((unint64_t)v75+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(_QWORD *)(v63 + 72) * v78, v99, v64);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v97, v64);
      sub_10000CB4C(v98, &qword_100645FB8);
      goto LABEL_14;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)v104, &qword_100655F90);
  }
  v75 = _swiftEmptyArrayStorage;
  v66 = v91;
  v67 = v90;
  v76 = v89;
LABEL_14:
  v79 = v87;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v67, v76, v66);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v67, 0, 1, v66);
  UICollectionViewCell.backgroundConfiguration.setter(v67);
  v105 = v101;
  v106 = (uint64_t (**)(uint64_t, void *))sub_10005A360(&qword_100652498, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E60C0);
  v80 = sub_10006CBAC(v104);
  v81 = v100;
  sub_1003BD630(v100, (uint64_t)v80);
  UICollectionViewCell.contentConfiguration.setter(v104);
  UICollectionViewListCell.accessories.setter(v75);

  swift_release(v32);
  sub_1003BD6BC(v81);
  return v88(v76, v66);
}

void sub_1003BA154(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v17;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void (*v26)(_BYTE *, _QWORD);
  id v27;
  void (*v28)(_BYTE *, _QWORD);
  id v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  _BYTE v32[32];

  v17 = a1;
  static UIListContentConfiguration.subtitleCell()(a1);
  v19 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v20 = a9 + v19[5];
  *(_QWORD *)v20 = a6;
  *(_BYTE *)(v20 + 8) = a7 & 1;
  *(_BYTE *)(a9 + v19[6]) = a8;
  *(_BYTE *)(a9 + v19[7]) = a10;
  if (String.count.getter(v17, a2) <= 0)
  {
    swift_bridgeObjectRelease(a2);
    a2 = 0xE100000000000000;
    v17 = 32;
  }
  UIListContentConfiguration.text.setter(v17, a2);
  if (String.count.getter(a3, a4) <= 0)
  {
    swift_bridgeObjectRelease(a4);
    a4 = 0xE100000000000000;
    a3 = 32;
  }
  UIListContentConfiguration.secondaryText.setter(a3, a4);
  v21 = (uint64_t)a5;
  if (!a5)
  {
    if (qword_1006410C8 != -1)
      swift_once(&qword_1006410C8, sub_1003BAE5C);
    v21 = qword_100672D40;
    v22 = (id)qword_100672D40;
  }
  v23 = a5;
  UIListContentConfiguration.image.setter(v21);
  v24 = (void *)objc_opt_self(UIFont);
  v25 = objc_msgSend(v24, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v26 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v32);
  UIListContentConfiguration.TextProperties.font.setter(v25);
  v26(v32, 0);
  v27 = objc_msgSend(v24, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v28 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v32);
  UIListContentConfiguration.TextProperties.font.setter(v27);
  v28(v32, 0);
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v30 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v32);
  UIListContentConfiguration.TextProperties.color.setter(v29);
  v30(v32, 0);
  v31 = UIListContentConfiguration.directionalLayoutMargins.setter(8.0, 18.0, 8.0, 20.0);
  UIListContentConfiguration.imageToTextPadding.setter(v31, 14.0);

}

void sub_1003BA3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _BYTE v15[24];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + qword_100672D50;
    swift_beginAccess(Strong + qword_100672D50, v15, 0, 0);
    sub_1000271D4(v5, (uint64_t)v16, &qword_100655F90);

    v6 = v17;
    if (v17)
    {
      v7 = v18;
      v8 = sub_10007E7A0(v16, v17);
      v9 = *(_QWORD *)(v6 - 8);
      v10 = __chkstk_darwin(v8);
      v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *, double))(v9 + 16))(v12, v10);
      sub_10000CB4C((uint64_t)v16, &qword_100655F90);
      v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v6);
      objc_msgSend(v13, "cancel");

    }
    else
    {
      sub_10000CB4C((uint64_t)v16, &qword_100655F90);
    }
  }
}

uint64_t sub_1003BA504@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (**v18)();
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[2];

  v25[1] = a3;
  v5 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v8 = *(_QWORD *)(v25[0] - 8);
  __chkstk_darwin(v25[0]);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.Placement(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v25 - v16;
  v18 = (uint64_t (**)())((char *)v25 + *(int *)(sub_10006922C(&qword_10064A0A8) + 48) - v16);
  v19 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, a1, v19);
  *v18 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v18[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v17, enum case for UICellAccessory.Placement.trailing(_:), v11);
  objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0));
  v20 = a2;
  v21 = sub_1003BB8F8(a2);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  v22 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  v23 = v21;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v23, v14, 2, v7, 0, 2);
  static UICellAccessory.customView(configuration:)(v10);

  (*(void (**)(char *, _QWORD))(v8 + 8))(v10, v25[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

double sub_1003BA720(unsigned __int8 *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  Swift::String v9;
  Swift::String v10;
  uint64_t ObjectType;
  Swift::String v12;
  void *object;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void *v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;

  v2 = v1;
  v3 = qword_100652030;
  v4 = *(unsigned __int8 **)&v1[qword_100652030];
  if (!v4)
  {
    if (!a1)
      return result;
LABEL_7:
    v5 = (uint64_t *)&a1[direct field offset for DOCOperationProgress.updateHandler];
    swift_beginAccess(&a1[direct field offset for DOCOperationProgress.updateHandler], &v29, 1, 0);
    v6 = *v5;
    v7 = v5[1];
    *v5 = 0;
    v5[1] = 0;
    sub_100087534(v6, v7);
    v4 = *(unsigned __int8 **)&v2[v3];
    if (!v4)
      return result;
    goto LABEL_8;
  }
  if (a1 && v4 == a1)
    return result;
  if (a1)
    goto LABEL_7;
LABEL_8:
  v31 = 0;
  v32 = 0xE000000000000000;
  swift_retain();
  _StringGuts.grow(_:)(26);
  v9._countAndFlagsBits = 0x205D6C6C65635BLL;
  v9._object = (void *)0xE700000000000000;
  String.append(_:)(v9);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 60;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  ObjectType = swift_getObjectType(v2);
  v12._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14._countAndFlagsBits = 8250;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v33 = v2;
  _print_unlocked<A, B>(_:_:)(&v33, &v30, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15 = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x73626F20776F6E20;
  v16._object = (void *)0xEF20676E69767265;
  String.append(_:)(v16);
  v17 = &v4[*(_QWORD *)(*(_QWORD *)v4 + 344)];
  v18 = *(_QWORD *)v17;
  v19 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v17 + 2);
  v21 = *((_QWORD *)v17 + 3);
  swift_bridgeObjectRetain(v21);
  v22._countAndFlagsBits = static String._fromSubstring(_:)(v18, v19, v20, v21);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v32);
  swift_beginAccess(v4 + 24, &v31, 1, 0);
  v24 = v4[24];
  v4[24] = 1;
  if (v24 != 1)
  {
    swift_retain();
    sub_10025EB70();
    swift_release(v4);
  }
  v25 = swift_allocObject(&unk_1005E5D38, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = (uint64_t *)&v4[direct field offset for DOCOperationProgress.updateHandler];
  swift_beginAccess(&v4[direct field offset for DOCOperationProgress.updateHandler], &v30, 1, 0);
  v27 = *v26;
  v28 = v26[1];
  *v26 = (uint64_t)sub_1003BDA2C;
  v26[1] = v25;
  sub_100087534(v27, v28);
  objc_msgSend(v2, "setNeedsUpdateConfiguration");
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void *sub_1003BA9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *result;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  _QWORD v21[5];
  _BYTE v22[24];

  v4 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v8 = result;
    UICollectionViewCell.contentConfiguration.getter(v21, v8);
    v9 = sub_10006922C(&qword_100651B70);
    swift_dynamicCast(v6, v21, v9, v4, 7);

    v10 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 328));
    v11 = *v10;
    LOBYTE(v10) = *((_BYTE *)v10 + 8);
    v12 = &v6[*(int *)(v4 + 20)];
    *(_QWORD *)v12 = v11;
    v12[8] = (char)v10;
    v13 = sub_1003BDA34();
    v15 = v14;
    swift_bridgeObjectRetain(v14);
    UIListContentConfiguration.text.setter(v13, v15);
    v16 = sub_1003BDB74();
    v18 = v17;
    swift_bridgeObjectRetain(v17);
    UIListContentConfiguration.secondaryText.setter(v16, v18);
    v21[3] = v4;
    v21[4] = sub_10005A360(&qword_100652498, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E60C0);
    v19 = sub_10006CBAC(v21);
    sub_1003BD630((uint64_t)v6, (uint64_t)v19);
    v20 = v8;
    UICollectionViewCell.contentConfiguration.setter(v21);

    return (void *)sub_1003BD6BC((uint64_t)v6);
  }
  return result;
}

id sub_1003BAB48(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  v5 = &a1[qword_100672D48];
  v6 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v7 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  v8 = &a1[qword_100672D50];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  a1[qword_100672D58] = 0;
  *(_QWORD *)&a1[qword_100652030] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  return objc_msgSendSuper2(&v10, "initWithCoder:", a3);
}

id sub_1003BAC00(_BYTE *a1, double a2, double a3, double a4, double a5)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v10 = &a1[qword_100672D48];
  v11 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  v12 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = &a1[qword_100672D50];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  a1[qword_100672D58] = 0;
  *(_QWORD *)&a1[qword_100652030] = 0;
  v15.receiver = a1;
  v15.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  return objc_msgSendSuper2(&v15, "initWithFrame:", a2, a3, a4, a5);
}

double sub_1003BACE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0 + qword_100672D48;
  v2 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10000CB4C(v0 + qword_100672D50, &qword_100655F90);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_100652030)).n128_u64[0];
  return result;
}

id sub_1003BAD44()
{
  return sub_1000D8CEC(type metadata accessor for DOCProgressCollectionListCell);
}

double sub_1003BAD50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = a1 + qword_100672D48;
  v3 = type metadata accessor for UICellAccessory.DisplayedState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_10000CB4C(a1 + qword_100672D50, &qword_100655F90);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_100652030)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListCell(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100652060, (uint64_t)&nominal type descriptor for DOCProgressCollectionListCell);
}

uint64_t sub_1003BADCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UICellAccessory.DisplayedState(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "(";
    v4[2] = &unk_1004E5F98;
    v4[3] = &unk_1004E5FB0;
    result = swift_initClassMetadata2(a1, 256, 4, v4, a1 + 224);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003BAE54()
{
  return type metadata accessor for DOCProgressCollectionListCell(0);
}

id sub_1003BAE5C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  qword_100672D40 = (uint64_t)result;
  return result;
}

Swift::Int sub_1003BAE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  int v7;
  Swift::UInt v8;
  Swift::UInt8 v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  v1 = type metadata accessor for UIListContentConfiguration(0);
  v2 = sub_10005A360(&qword_1006524A0, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)(v11, v1, v2);
  v3 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v4 = v0 + v3[5];
  if ((*(_BYTE *)(v4 + 8) & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v5 = *(_QWORD *)v4;
    Hasher._combine(_:)(1uLL);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = v5;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
  }
  v7 = *(unsigned __int8 *)(v0 + v3[6]);
  if (v7 == 2)
  {
    v8 = 0;
  }
  else
  {
    if (v7 != 3)
    {
      v9 = v7 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v9);
      goto LABEL_13;
    }
    v8 = 1;
  }
  Hasher._combine(_:)(v8);
LABEL_13:
  Hasher._combine(_:)(*(_BYTE *)(v0 + v3[7]));
  return Hasher._finalize()();
}

char *sub_1003BAFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v7;

  __chkstk_darwin(a1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BD630(v1, (uint64_t)v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListCell.ContentView(0));
  v5 = sub_1003BB680((uint64_t)v3);
  sub_10005A360(&qword_100652488, type metadata accessor for DOCProgressCollectionListCell.ContentView, (uint64_t)&unk_1004E60F0);
  return v5;
}

uint64_t sub_1003BB050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BD630(v1, a1);
}

void sub_1003BB060(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  int v10;
  Swift::UInt v11;
  Swift::UInt8 v12;

  v5 = type metadata accessor for UIListContentConfiguration(0);
  v6 = sub_10005A360(&qword_1006524A0, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = v2 + a2[5];
  if ((*(_BYTE *)(v7 + 8) & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v8 = *(_QWORD *)v7;
    Hasher._combine(_:)(1uLL);
    if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v9 = v8;
    else
      v9 = 0;
    Hasher._combine(_:)(v9);
  }
  v10 = *(unsigned __int8 *)(v2 + a2[6]);
  if (v10 == 2)
  {
    v11 = 0;
  }
  else
  {
    if (v10 != 3)
    {
      v12 = v10 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v12);
      goto LABEL_13;
    }
    v11 = 1;
  }
  Hasher._combine(_:)(v11);
LABEL_13:
  Hasher._combine(_:)(*(_BYTE *)(v2 + a2[7]));
}

Swift::Int sub_1003BB160(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  int v9;
  Swift::UInt v10;
  Swift::UInt8 v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13, a1);
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = sub_10005A360(&qword_1006524A0, (uint64_t (*)(uint64_t))&type metadata accessor for UIListContentConfiguration, (uint64_t)&protocol conformance descriptor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)(v13, v4, v5);
  v6 = v2 + a2[5];
  if ((*(_BYTE *)(v6 + 8) & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v7 = *(_QWORD *)v6;
    Hasher._combine(_:)(1uLL);
    if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v8 = v7;
    else
      v8 = 0;
    Hasher._combine(_:)(v8);
  }
  v9 = *(unsigned __int8 *)(v2 + a2[6]);
  if (v9 == 2)
  {
    v10 = 0;
  }
  else
  {
    if (v9 != 3)
    {
      v11 = v9 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v11);
      goto LABEL_13;
    }
    v10 = 1;
  }
  Hasher._combine(_:)(v10);
LABEL_13:
  Hasher._combine(_:)(*(_BYTE *)(v2 + a2[7]));
  return Hasher._finalize()();
}

void *sub_1003BB27C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void *result;
  _BYTE *v22;
  uint64_t v23;
  _BYTE v25[40];

  v2 = v1;
  v4 = sub_10006922C(&qword_100652490);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v25[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v25[-v11 - 8];
  v13 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100092328((uint64_t)a1, (uint64_t)v25);
  v17 = sub_10006922C(&qword_10064FFD0);
  v18 = swift_dynamicCast(v12, v25, v17, v13, 6);
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v12, 0, 1, v13);
    sub_1003BD5EC((uint64_t)v12, (uint64_t)v16);
    sub_1003BD630((uint64_t)v16, (uint64_t)v9);
    v19(v9, 0, 1, v13);
    v20 = v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
    swift_beginAccess(v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration, v25, 33, 0);
    sub_1003BD674((uint64_t)v9, v20);
    swift_endAccess(v25);
    sub_1000271D4(v20, (uint64_t)v6, &qword_100652490);
    result = (void *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1003BC9B0();
      v22 = &v6[*(int *)(v13 + 20)];
      v23 = 0;
      if ((v22[8] & 1) == 0)
        v23 = *(_QWORD *)v22;
      *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView)
                + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted) = v23;
      sub_1002AE018();
      if (v6[*(int *)(v13 + 28)] != 1)
        goto LABEL_8;
      result = *(void **)(v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack);
      if (result)
      {
        objc_msgSend(result, "setAlpha:", 0.0);
LABEL_8:
        sub_100068588(a1);
        sub_1003BD6BC((uint64_t)v16);
        return (void *)sub_1003BD6BC((uint64_t)v6);
      }
    }
    __break(1u);
  }
  else
  {
    v19(v12, 1, 1, v13);
    sub_100068588(a1);
    return (void *)sub_10000CB4C((uint64_t)v12, &qword_100652490);
  }
  return result;
}

void (*sub_1003BB50C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*result)(uint64_t *, char);
  _QWORD *v9;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = sub_10006922C(&qword_100652490);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[14] = v5;
  v6 = v1 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
  swift_beginAccess(v6, v3 + 10, 0, 0);
  sub_1000271D4(v6, (uint64_t)v5, &qword_100652490);
  v7 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  result = (void (*)(uint64_t *, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v3[3] = v7;
    v3[4] = sub_10005A360(&qword_100652498, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E60C0);
    v9 = sub_10006CBAC(v3);
    sub_1003BD5EC((uint64_t)v5, (uint64_t)v9);
    return sub_1003BB618;
  }
  return result;
}

void sub_1003BB618(uint64_t *a1, char a2)
{
  _QWORD *v2;
  void *v3;

  v2 = (_QWORD *)*a1;
  v3 = *(void **)(*a1 + 112);
  if ((a2 & 1) != 0)
  {
    sub_100092328(*a1, (uint64_t)(v2 + 5));
    sub_1003BB27C(v2 + 5);
    sub_100068588(v2);
  }
  else
  {
    sub_1003BB27C((_QWORD *)*a1);
  }
  free(v3);
  free(v2);
}

char *sub_1003BB680(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *result;
  uint64_t v22;
  objc_super v23;
  _BYTE v24[24];

  v22 = a1;
  v2 = sub_10006922C(&qword_100652490);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration];
  v6 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v8 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel;
  v9 = objc_allocWithZone((Class)UILabel);
  v10 = v1;
  *(_QWORD *)&v1[v8] = objc_msgSend(v9, "init");
  v11 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v13 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView;
  v14 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
  sub_1000A6FF8(0, 0.5);
  *(_QWORD *)&v10[v13] = v15;
  v16 = v22;
  *(_QWORD *)&v10[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack] = 0;
  sub_1003BD630(v16, (uint64_t)v4);
  v7((uint64_t)v4, 0, 1, v6);
  swift_beginAccess(v5, v24, 33, 0);
  sub_1003BD674((uint64_t)v4, v5);
  swift_endAccess(v24);

  v17 = (objc_class *)type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
  v23.receiver = v10;
  v23.super_class = v17;
  v18 = 0;
  v19 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 100.0, 100.0);
  sub_1003BC064();
  sub_1003BC9B0();
  v20 = v16 + *(int *)(v6 + 20);
  if ((*(_BYTE *)(v20 + 8) & 1) == 0)
    v18 = *(_QWORD *)v20;
  *(_QWORD *)(*(_QWORD *)&v19[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView]
            + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted) = v18;
  sub_1002AE018();
  if (*(_BYTE *)(v16 + *(int *)(v6 + 28)) != 1)
    goto LABEL_6;
  result = *(char **)&v19[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  if (result)
  {
    objc_msgSend(result, "setAlpha:", 0.0);
LABEL_6:

    sub_1003BD6BC(v16);
    return v19;
  }
  __break(1u);
  return result;
}

char *sub_1003BB8F8(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  UIButtonType v6;
  id v7;
  char *v8;
  UIButton v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  UIAction_optional v40;

  v3 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[qword_100652288] = 0;
  swift_unknownObjectWeakInit(&v1[qword_100652290]);
  sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
  v6 = qword_100640B60;
  v7 = a1;
  v8 = v1;
  v40.value.super.super.isa = (Class)a1;
  v9.super.super.super.super.isa = UIButton.init(type:primaryAction:)(v6, v40).super.super.super.super.isa;
  *(UIButton *)&v8[qword_100652280] = v9;
  v10 = v9.super.super.super.super.isa;
  static UIButton.Configuration.borderless()(v10);
  v12 = type metadata accessor for UIButton.Configuration(0, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  UIButton.configuration.setter(v5);

  v13 = (objc_class *)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
  v39.receiver = v8;
  v39.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v39, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = *(void **)&v14[qword_100652280];
  v16 = v14;
  v17 = v15;
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "addSubview:", v17);
  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004DAC10;
  v21 = objc_msgSend(v16, "topAnchor");
  v22 = objc_msgSend(v17, "topAnchor");
  v23 = objc_msgSend(v21, "constraintLessThanOrEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v16, "bottomAnchor");
  v25 = objc_msgSend(v17, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v16, "leadingAnchor");
  v28 = objc_msgSend(v17, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v16, "trailingAnchor");
  v31 = objc_msgSend(v17, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 56) = v32;
  v38 = v20;
  specialized Array._endMutation()(v33);
  v34 = v38;
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v34).n128_f64[0]);

  return v16;
}

void sub_1003BBCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _BOOL8 v8;
  void *v9;
  id v10;

  v5 = *(void **)(v2 + qword_100652280);
  v6 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v8 = (*(_BYTE *)(a1 + *(int *)(v6 + 24)) & 1) == 0 || (*(_BYTE *)(a1 + *(int *)(v6 + 24)) & 0xFE) == 2;
  objc_msgSend(v5, "setEnabled:", v8);
  v9 = *(void **)(a2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView);
  v10 = v9;
  sub_1003BBD80(v9);
}

void sub_1003BBD28(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
  v1 = v4.receiver;
  v2 = objc_msgSendSuper2(&v4, "layoutSubviews");
  sub_1003BBE78((uint64_t)v2, v3);

}

void sub_1003BBD80(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  void *Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;

  v2 = v1;
  v3 = &v1[qword_100652290];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  v5 = swift_unknownObjectWeakAssign(v3, a1);
  v6 = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (v6)
  {
    v7 = v6;
    if (Strong)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
      v8 = Strong;
      v9 = v7;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
        goto LABEL_9;
    }
    else
    {

    }
  }
  else if (!Strong)
  {
    goto LABEL_10;
  }
  v11 = *(void **)&v2[qword_100652288];
  *(_QWORD *)&v2[qword_100652288] = 0;

  objc_msgSend(v2, "setNeedsLayout");
  v8 = Strong;
LABEL_9:

LABEL_10:
}

void sub_1003BBE78(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id Strong;

  Strong = (id)swift_unknownObjectWeakLoadStrong(&v2[qword_100652290], a2);
  if (Strong)
  {
    v3 = objc_msgSend(v2, "window");

    if (v3)
    {
      v4 = objc_msgSend(Strong, "window");

      if (v4)
      {
        v5 = qword_100652288;
        v6 = *(void **)&v2[qword_100652288];
        if (v6)
          goto LABEL_6;
        v7 = objc_msgSend(*(id *)&v2[qword_100652280], "centerYAnchor");
        v8 = objc_msgSend(Strong, "centerYAnchor");
        v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

        v10 = *(void **)&v2[v5];
        *(_QWORD *)&v2[v5] = v9;

        v6 = *(void **)&v2[v5];
        if (v6)
        {
LABEL_6:
          v11 = v6;
          objc_msgSend(v11, "setActive:", 1);

        }
      }
    }

  }
}

void sub_1003BBFC4(uint64_t a1, uint64_t a2)
{
  sub_100226BB0(a1, a2, (uint64_t)"Files.CancelAccessoryView", 25);
}

uint64_t sub_1003BBFD4()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + qword_100652290);
}

id sub_1003BC010()
{
  return sub_1000D8CEC(type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView);
}

uint64_t sub_1003BC01C(uint64_t a1)
{

  return swift_unknownObjectWeakDestroy(a1 + qword_100652290);
}

void sub_1003BC064()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  Class isa;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  Class v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  Class v68;
  uint64_t v69;
  uint64_t v70;
  Class v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  int v80;
  int v81;
  __C::UILayoutPriority priority[2];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView];
  objc_msgSend(v2, "setContentMode:", 1);
  v3 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel];
  v4 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel];
  v5 = v3;
  v6 = v4;
  objc_msgSend(v5, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v5, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v5, "setMinimumScaleFactor:", 0.94);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v5, "setContentCompressionResistancePriority:forAxis:", 1, v7);
  LODWORD(v8) = 1148846080;
  objc_msgSend(v5, "setContentHuggingPriority:forAxis:", 1, v8);

  v9 = v6;
  objc_msgSend(v9, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v9, "setMinimumScaleFactor:", 0.94);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 1, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v9, "setContentHuggingPriority:forAxis:", 1, v11);

  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v13 = swift_allocObject(v12, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9720;
  v14 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView];
  *(_QWORD *)(v13 + 32) = v5;
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 48) = v9;
  *(_QWORD *)&priority[0].rawValue = v13;
  specialized Array._endMutation()(v13);
  v15 = objc_allocWithZone((Class)UIStackView);
  sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v78 = v5;
  v74 = v9;
  v75 = v14;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(*(_QWORD *)&priority[0].rawValue).n128_f64[0]);

  objc_msgSend(v17, "setAxis:", 1);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "addSubview:", v2);
  v19 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v19 + 32) = v18;
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)&priority[0].rawValue = v19;
  specialized Array._endMutation()(v19);
  v20 = objc_allocWithZone((Class)UIStackView);
  v21 = v18;
  v77 = v17;
  v22 = Array._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v20, "initWithArrangedSubviews:", v22, swift_bridgeObjectRelease(*(_QWORD *)&priority[0].rawValue).n128_f64[0]);

  objc_msgSend(v23, "setAlignment:", 3);
  objc_msgSend(v23, "setAxis:", 0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v23);
  v76 = objc_msgSend(v1, "layoutMarginsGuide");
  v24 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack] = v23;
  v73 = v23;

  v25 = objc_msgSend(v2, "topAnchor");
  v26 = objc_msgSend(v78, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, 0.0);

  v28 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint;
  v29 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint] = v27;

  v30 = swift_allocObject(v12, 128, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1004E5F40;
  v31 = objc_msgSend(v21, "leadingAnchor");
  v32 = objc_msgSend(v2, "leadingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(v21, "trailingAnchor");
  v35 = objc_msgSend(v2, "trailingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v30 + 40) = v36;
  v79 = v21;
  v37 = objc_msgSend(v21, "heightAnchor");
  v38 = objc_msgSend(v2, "heightAnchor");
  v39 = objc_msgSend(v37, "constraintGreaterThanOrEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(v2, "heightAnchor");
  v41 = objc_msgSend(v40, "constraintLessThanOrEqualToConstant:", 96.0);

  *(_QWORD *)(v30 + 56) = v41;
  v42 = *(void **)&v1[v28];
  if (v42)
  {
    v72 = (id)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v30 + 64) = v42;
    v43 = v42;
    v44 = objc_msgSend(v2, "bottomAnchor");
    v45 = objc_msgSend(v74, "centerYAnchor");
    v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

    type metadata accessor for UILayoutPriority(0);
    v48 = v47;
    v80 = 1065353216;
    v81 = 1148846080;
    v49 = sub_10005A360((unint64_t *)&unk_10064A060, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)(priority, &v81, &v80, v48, v49);
    v50 = NSLayoutConstraint.with(priority:)(priority[0]).super.isa;

    *(_QWORD *)(v30 + 72) = v50;
    v51 = objc_msgSend(v2, "widthAnchor");
    v52 = objc_msgSend(v2, "heightAnchor");
    v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

    *(_QWORD *)(v30 + 80) = v53;
    v54 = objc_msgSend(v75, "heightAnchor");
    v55 = objc_msgSend(v54, "constraintEqualToConstant:", 20.0);

    *(_QWORD *)(v30 + 88) = v55;
    v56 = objc_msgSend(v73, "leadingAnchor");
    v57 = objc_msgSend(v76, "leadingAnchor");
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

    *(_QWORD *)(v30 + 96) = v58;
    v59 = objc_msgSend(v73, "trailingAnchor");
    v60 = objc_msgSend(v76, "trailingAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

    *(_QWORD *)(v30 + 104) = v61;
    v62 = objc_msgSend(v73, "topAnchor");
    v63 = objc_msgSend(v76, "topAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v30 + 112) = v64;
    v65 = objc_msgSend(v73, "bottomAnchor");
    v66 = objc_msgSend(v76, "bottomAnchor");
    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

    v80 = 1065353216;
    v81 = 1148846080;
    static _UIKitNumericRawRepresentable.- infix(_:_:)(priority, &v81, &v80, v48, v49);
    v68 = NSLayoutConstraint.with(priority:)(priority[0]).super.isa;

    *(_QWORD *)(v30 + 120) = v68;
    *(_QWORD *)&priority[0].rawValue = v30;
    specialized Array._endMutation()(v69);
    v70 = *(_QWORD *)&priority[0].rawValue;
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v71 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v72, "activateConstraints:", v71, swift_bridgeObjectRelease(v70).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1003BC9B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSString v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSString v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  double v36;
  double v37;
  id v38;
  void *v39;
  double v40;
  double v41;
  uint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v42 - v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  if (!v9)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v10 = v9;
  UIListContentConfiguration.imageToTextPadding.getter();
  objc_msgSend(v10, "setSpacing:");

  UIListContentConfiguration.directionalLayoutMargins.getter();
  v11 = objc_msgSend(v0, "setDirectionalLayoutMargins:");
  v12 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel];
  v13 = UIListContentConfiguration.text.getter(v11);
  v15 = v14;
  v16 = UIListContentConfiguration.textProperties.getter(v13);
  v17 = (void *)UIListContentConfiguration.TextProperties.font.getter(v16);
  objc_msgSend(v12, "setFont:", v17);

  v18 = (void *)UIListContentConfiguration.TextProperties.color.getter();
  objc_msgSend(v12, "setTextColor:", v18);

  if (v15)
    v19 = String._bridgeToObjectiveC()();
  else
    v19 = 0;
  objc_msgSend(v12, "setText:", v19);
  swift_bridgeObjectRelease(v15);

  v20 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v21 = v20(v8, v2);
  v22 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel];
  UIListContentConfiguration.secondaryText.getter(v21);
  v24 = v23;
  v25 = UIListContentConfiguration.secondaryTextProperties.getter();
  v26 = (void *)UIListContentConfiguration.TextProperties.font.getter(v25);
  objc_msgSend(v22, "setFont:", v26);

  v27 = (void *)UIListContentConfiguration.TextProperties.color.getter();
  objc_msgSend(v22, "setTextColor:", v27);

  if (v24)
    v28 = String._bridgeToObjectiveC()();
  else
    v28 = 0;
  objc_msgSend(v22, "setText:", v28);
  swift_bridgeObjectRelease(v24);

  v29 = v20(v6, v2);
  v30 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView];
  v31 = (void *)UIListContentConfiguration.image.getter(v29);
  objc_msgSend(v30, "setImage:", v31);

  v32 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint];
  if (!v32)
    goto LABEL_13;
  v33 = v32;
  v34 = objc_msgSend(v12, "font");
  if (!v34)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v35 = v34;
  objc_msgSend(v34, "ascender");
  v37 = v36;

  v38 = objc_msgSend(v12, "font");
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v38, "capHeight");
    v41 = v40;

    objc_msgSend(v33, "setConstant:", v37 - v41);
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_1003BCCE4()
{
  uint64_t v0;

  sub_10000CB4C(v0 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration, &qword_100652490);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint));

}

id sub_1003BCD68()
{
  return sub_1000D8CEC(type metadata accessor for DOCProgressCollectionListCell.ContentView);
}

uint64_t sub_1003BCE04()
{
  return type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentView(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100652268, (uint64_t)&nominal type descriptor for DOCProgressCollectionListCell.ContentView);
}

void sub_1003BCE20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  sub_1003BCEAC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_1004E5FB0;
    v4[6] = &unk_1004E5FB0;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

void sub_1003BCEAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100652278)
  {
    v2 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100652278);
  }
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100652440, (uint64_t)&nominal type descriptor for DOCProgressCollectionListCell.ContentConfiguration);
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_1006522C0, (uint64_t)&nominal type descriptor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView);
}

uint64_t sub_1003BCF28(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_1004E5FB0;
  v2[2] = "\b";
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 120);
}

uint64_t sub_1003BCF80()
{
  return type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
}

_QWORD *sub_1003BCF88(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UIListContentConfiguration(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1003BD034(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UIListContentConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1003BD068(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003BD0E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003BD16C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003BD1EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1003BD26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BD278);
}

uint64_t sub_1003BD278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for UIListContentConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003BD304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BD310);
}

uint64_t sub_1003BD310(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_1003BD388(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UIListContentConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_1004E6040;
    v4[3] = &unk_1004E5F98;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003BD40C()
{
  return sub_10005A360(&qword_100652480, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E6058);
}

id sub_1003BD438()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel), "leadingAnchor");
}

uint64_t sub_1003BD464@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  _BYTE v11[24];

  v3 = sub_10006922C(&qword_100652490);
  __chkstk_darwin(v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
  swift_beginAccess(v6, v11, 0, 0);
  sub_1000271D4(v6, (uint64_t)v5, &qword_100652490);
  v7 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    a1[3] = v7;
    a1[4] = sub_10005A360(&qword_100652498, type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration, (uint64_t)&unk_1004E60C0);
    v9 = sub_10006CBAC(a1);
    return sub_1003BD5EC((uint64_t)v5, (uint64_t)v9);
  }
  return result;
}

void (*sub_1003BD568(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1003BB50C(v2);
  return sub_1000E10D4;
}

uint64_t sub_1003BD5B0(uint64_t a1)
{
  uint64_t result;

  result = sub_10005A360(&qword_100652488, type metadata accessor for DOCProgressCollectionListCell.ContentView, (uint64_t)&unk_1004E60F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003BD5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BD630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BD674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100652490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BD6BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003BD6F8(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  id v27;
  uint64_t v28;

  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 352));
  v15 = v14[3];
  v16 = v14[4];
  v17 = sub_10007E7A0(v14, v15);
  v18 = *(_QWORD *)(v15 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v28 - v20;
  (*(void (**)(char *, double))(v18 + 16))((char *)&v28 - v20, v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *v13;
      v24 = v13[1];
      sub_10004F2F0(0, (unint64_t *)&qword_10064E0C0, UIImage_ptr);
      v25 = static UIImage.doc_executablesFrameworkImage(named:)(v23, v24);
      swift_bridgeObjectRelease(v24);
      if (!v25)
        __break(1u);
    }
    else
    {
      v27 = sub_1000C4C64(a1, a2, a3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 32))(v10, v13, v7);
    isa = UTType._bridgeToObjectiveC()().super.isa;
    sub_1000C4AE0(isa, a1, a2, a3);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1003BD928(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  double *v6;
  char v7;
  double *v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  if ((static UIListContentConfiguration.== infix(_:_:)() & 1) == 0)
    goto LABEL_17;
  v4 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  v5 = v4[5];
  v6 = (double *)(a1 + v5);
  v7 = *(_BYTE *)(a1 + v5 + 8);
  v8 = (double *)(a2 + v5);
  v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if ((v7 & 1) != 0)
  {
    if (!v9)
      return v9 & 1;
  }
  else
  {
    if (*v6 != *v8)
      LOBYTE(v9) = 1;
    if ((v9 & 1) != 0)
      goto LABEL_17;
  }
  v10 = v4[6];
  v11 = *(unsigned __int8 *)(a1 + v10);
  v12 = *(unsigned __int8 *)(a2 + v10);
  if (v11 == 2)
  {
    if (v12 != 2)
    {
LABEL_17:
      LOBYTE(v9) = 0;
      return v9 & 1;
    }
  }
  else if (v11 == 3)
  {
    if (v12 != 3)
      goto LABEL_17;
  }
  else if ((v12 & 0xFE) == 2 || ((v11 & 1) == 0) == (v12 & 1))
  {
    goto LABEL_17;
  }
  LOBYTE(v9) = *(_BYTE *)(a1 + v4[7]) ^ *(_BYTE *)(a2 + v4[7]) ^ 1;
  return v9 & 1;
}

uint64_t sub_1003BDA08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void *sub_1003BDA2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1003BA9AC(a1, v1);
}

id sub_1003BDA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_beginAccess(v1, v17, 33, 0);
  if (*(_BYTE *)v1 == 1)
  {
    v2 = *(_QWORD *)(v1 + 8);
LABEL_5:
    swift_endAccess(v17);
    return (id)v2;
  }
  v3 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352));
  v4 = v3[3];
  v5 = v3[4];
  v6 = sub_10007E7A0(v3, v4);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v17[-v9 - 8];
  (*(void (**)(_BYTE *, double))(v7 + 16))(&v17[-v9 - 8], v8);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v4);
  result = objc_msgSend(v11, "localizedDescription");
  if (result)
  {
    v13 = result;
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v15 = v14;

    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v15;
    *(_BYTE *)v1 = 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

objc_class *sub_1003BDB74()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  double v12;
  objc_class *result;
  objc_class *v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 376);
  swift_beginAccess(v1, v19, 33, 0);
  if (*(_BYTE *)v1 == 1)
  {
    v2 = *(objc_class **)(v1 + 8);
LABEL_8:
    swift_endAccess(v19);
    return v2;
  }
  v3 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352));
  v4 = v3[3];
  v5 = v3[4];
  v6 = sub_10007E7A0(v3, v4);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v19[-v9 - 8];
  (*(void (**)(_BYTE *, double))(v7 + 16))(&v19[-v9 - 8], v8);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v4);
  objc_msgSend(v11, "fractionCompleted");
  if (v12 <= 0.0)
  {
    v14 = (objc_class *)objc_msgSend(v11, "fileOperationKind");
    v15 = sub_10046E0DC((uint64_t)v14);
    goto LABEL_7;
  }
  result = (objc_class *)objc_msgSend(v11, "localizedAdditionalDescription");
  if (result)
  {
    v14 = result;
    v15 = (objc_class *)static String._unconditionallyBridgeFromObjectiveC(_:)(result);
LABEL_7:
    v2 = v15;
    v17 = v16;

    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v17;
    *(_BYTE *)v1 = 1;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1003BDCFC(uint64_t a1)
{
  uint64_t v1;

  sub_1003BA3B8(a1, v1);
}

uint64_t sub_1003BDD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100655F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id DOCFileOperation.progress.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void DOCFileOperation.progress.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*DOCFileOperation.progress.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DOCFileOperation.dateStarted.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DOCFileOperation.dateStarted.modify())(_QWORD)
{
  type metadata accessor for DOCFileOperation(0);
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation(0) + 28);
  return sub_100348154(v3, a1);
}

uint64_t DOCFileOperation.iconType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation(0) + 28);
  return sub_1003481C8(a1, v3);
}

uint64_t (*DOCFileOperation.iconType.modify())(_QWORD)
{
  type metadata accessor for DOCFileOperation(0);
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

unint64_t DOCFileOperation.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  Swift::String v3;

  _StringGuts.grow(_:)(24);
  v0 = swift_bridgeObjectRelease(0xE000000000000000);
  v1._countAndFlagsBits = AnyHashable.description.getter(v0);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0xD000000000000015;
}

uint64_t sub_1003BDF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

Swift::Int sub_1003BDF98(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  AnyHashable.hash(into:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_1003BDFD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006524D0;
  if (!qword_1006524D0)
  {
    v1 = type metadata accessor for DOCFileOperation(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCFileOperation, v1);
    atomic_store(result, (unint64_t *)&qword_1006524D0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DOCFileOperation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = (void *)a2[5];
    v4[5] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v8;
    v13(v10, v11, v12);
    v15 = *(int *)(a3 + 28);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v18);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = v17[1];
      *v16 = *v17;
      v16[1] = v22;
      swift_bridgeObjectRetain(v22);
      swift_storeEnumTagMultiPayload(v16, v18, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
      swift_storeEnumTagMultiPayload(v16, v18, 0);
    }
  }
  return v4;
}

double destroy for DOCFileOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  double result;
  uint64_t v10;

  sub_100068588((_QWORD *)a1);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v6 + 8)).n128_u64[0];
  }
  else if (!EnumCaseMultiPayload)
  {
    v10 = type metadata accessor for UTType(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v7;
  v12(v9, v10, v11);
  v14 = *(int *)(a3 + 28);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
  if (EnumCaseMultiPayload == 1)
  {
    v20 = v16[1];
    *v15 = *v16;
    v15[1] = v20;
    swift_bridgeObjectRetain(v20);
    swift_storeEnumTagMultiPayload(v15, v17, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for UTType(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
    swift_storeEnumTagMultiPayload(v15, v17, 0);
  }
  return a1;
}

_QWORD *assignWithCopy for DOCFileOperation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;

  sub_10025C2AC(a1, a2);
  v6 = (void *)a2[5];
  v7 = (void *)a1[5];
  a1[5] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    sub_100348714((uint64_t)a1 + v13);
    v16 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v16);
    if (EnumCaseMultiPayload == 1)
    {
      *v14 = *v15;
      v19 = v15[1];
      v14[1] = v19;
      swift_bridgeObjectRetain(v19);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for UTType(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
      swift_storeEnumTagMultiPayload(v14, v16, 0);
    }
  }
  return a1;
}

uint64_t initializeWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
  if (swift_getEnumCaseMultiPayload(v14, v15))
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for UTType(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload(v13, v15, 0);
  }
  return a1;
}

uint64_t assignWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_100068588((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;

  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 28);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_100348714(a1 + v13);
    v16 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
    if (swift_getEnumCaseMultiPayload(v15, v16))
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for UTType(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 0);
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BE684);
}

uint64_t sub_1003BE684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BE730);
}

uint64_t sub_1003BE730(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = type metadata accessor for DOCProgressProvidingOperationIconType(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1003BEA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  v1 = v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers;
  swift_beginAccess(v1, v16, 33, 0);
  v2 = *(_QWORD *)v1;
  if (!(*(_QWORD *)v1 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v2 < 0)
    v11 = *(_QWORD *)v1;
  else
    v11 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)v1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v2);
  if (!v12)
    goto LABEL_19;
LABEL_3:
  v3 = (void *)sub_1001B3C28();
  if (v3)
    goto LABEL_7;
  v4 = *(_QWORD *)v1;
  if (*(_QWORD *)v1 >> 62)
    goto LABEL_26;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 - 1;
  if (!__OFSUB__(v5, 1))
  {
    do
    {
      v3 = (void *)sub_100088620(v6);
LABEL_7:

      swift_endAccess(v16);
      v1 = sub_10005F27C();
      if ((unint64_t)v1 >> 62)
      {
LABEL_20:
        if (v1 < 0)
          v13 = v1;
        else
          v13 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v1);
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease(v1);
        if (!v4)
        {
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
      }
      else
      {
        v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v4)
          goto LABEL_24;
      }
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v1);
      v16[0] = v1;
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v1 < 0 || (v1 & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_1000818A0(v1);
        v1 = isUniquelyReferenced_nonNull_bridgeObject;
        v16[0] = isUniquelyReferenced_nonNull_bridgeObject;
      }
      v8 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
        v9 = v8 - 1;
        v10 = *(void **)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
        *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

        sub_10009D1E8(v16[0]);
        return;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      if (v4 < 0)
        v14 = v4;
      else
        v14 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v15 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease(v4);
      v6 = v15 - 1;
    }
    while (!__OFSUB__(v15, 1));
  }
  __break(1u);
}

uint64_t sub_1003BED00()
{
  char *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  objc_super v11;
  uint64_t v12;
  unint64_t v13;

  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = 0x72756F5361746144;
  v13 = 0xEB00000000286563;
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID];
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID + 8];
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 539828265;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for DOCBrowserNavigationDataSource();
  v5 = objc_msgSendSuper2(&v11, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  return v12;
}

id sub_1003BEE28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserNavigationDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_1003BF1C8(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  double result;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE v30[24];
  uint64_t v31;

  v5 = v4;
  v8 = sub_10007F738(a3);
  if (v8)
  {
    v10 = v8;
    v11 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess(v5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v30, 0, 0);
    v31 = *v11;
    swift_bridgeObjectRetain(v31);
    sub_1001DB5B4(a2, v12, v13);
    swift_bridgeObjectRetain(v10);
    sub_100130658(v14);
    v15 = 0;
    if (*(_QWORD *)(v5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2)
    {
      if ((sub_1001D38B4() & 1) != 0)
      {
        v29 = sub_1003BF4A8();
        sub_1001DB5B4(a2, v16, v17);
        swift_bridgeObjectRetain(v10);
        sub_100130658(v18);
        v15 = v29;
      }
      else
      {
        v15 = 0;
      }
    }
    v19 = v31;
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0)
        v25 = v31;
      else
        v25 = v31 & 0xFFFFFFFFFFFFFF8;
      v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      swift_bridgeObjectRetain(v19);
      v21 = _bridgeCocoaArray<A>(_:)(v25, v26);
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      swift_bridgeObjectRetain(v31);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v21 = v19;
    }
    swift_bridgeObjectRelease(v19);
    if (v15)
    {
      v22 = v15 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)v15 >> 62)
      {
        if (v15 < 0)
          v22 = v15;
        v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        swift_bridgeObjectRetain(v15);
        v28 = _bridgeCocoaArray<A>(_:)(v22, v27);
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease_n(v15, 2);
        v15 = v28;
        goto LABEL_13;
      }
      swift_bridgeObjectRetain(v15);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      swift_bridgeObjectRelease(v10);
      v24 = v15;
    }
    else
    {
      v24 = (uint64_t)v10;
    }
    swift_bridgeObjectRelease(v24);
LABEL_13:
    sub_100036718(v21, v15, a4 & 1);
    swift_bridgeObjectRelease(v21);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  return result;
}

unint64_t sub_1003BF4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _BYTE v10[24];

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
  {
    v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v10, 0, 0);
    v7 = *v8;
    if (v7)
    {
      swift_bridgeObjectRetain(v7);
      return v7;
    }
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v1)
    return (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (v2)
      goto LABEL_5;
    goto LABEL_17;
  }
  if (v1 >= 0)
    v9 = v1 & 0xFFFFFFFFFFFFFF8;
  else
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)_swiftEmptyArrayStorage;
  }
LABEL_5:
  result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_21:
    v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v1);
    goto LABEL_10;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = (char *)*(id *)(v1 + 8 * result + 32);
LABEL_10:
    v5 = v4;
    swift_bridgeObjectRelease(v1);
    v6 = &v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v10, 0, 0);
    v7 = *(_QWORD *)v6;
    swift_bridgeObjectRetain(v7);

    return v7;
  }
  __break(1u);
  return result;
}

void sub_1003BF660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v9;
  char *v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  int v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t inited;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  Class isa;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  char v82[24];
  unint64_t v83;
  char v84[40];
  _QWORD v85[3];
  uint64_t v86[3];
  char v87[32];

  v4 = v3;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider);
  if (Strong)
  {
    v9 = Strong;
    v10 = (char *)objc_msgSend(Strong, "provideContainerControllerAt:from:isUserInteraction:isBrowsingTrash:", a2, a3, 0, 0);
    swift_unknownObjectRelease(v9);
    v11 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v87, 0, 0);
    v12 = *v11;
    if (v12)
    {
      v13 = type metadata accessor for DOCItemCollectionViewController(0);
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
        v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v82, 1, 0);
        v18 = *v17;
        *v17 = v16;
        if (v18 != v16)
        {
          v19 = *(_QWORD *)(v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
          v20 = *(_QWORD *)(v19 + 16);
          if (v20)
          {
            v21 = (uint64_t *)(v19 + 64);
            do
            {
              v22 = *v21;
              v21 += 5;
              *(_BYTE *)(v22 + 24) = *(_BYTE *)(v22 + 25);
              --v20;
            }
            while (v20);
          }
          v23 = v12;
          sub_100026A34();

        }
      }
    }
    v24 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v25 + 32) = v10;
    v86[0] = v25;
    specialized Array._endMutation()(v25);
    v26 = v86[0];
    v27 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v86, 1, 0);
    v28 = *v27;
    v85[0] = v26;
    v29 = v10;
    swift_bridgeObjectRetain(v28);
    sub_100130658(v30);
    v31 = *v27;
    *v27 = v85[0];
    swift_bridgeObjectRelease(v31);
    v32 = *v27;
    if ((unint64_t)*v27 >> 62)
    {
      if (v32 < 0)
        v66 = *v27;
      else
        v66 = v32 & 0xFFFFFFFFFFFFFF8;
      v67 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      swift_bridgeObjectRetain(v32);
      v34 = _bridgeCocoaArray<A>(_:)(v66, v67);
    }
    else
    {
      v33 = swift_bridgeObjectRetain_n(*v27, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v33);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v34 = v32;
    }
    swift_bridgeObjectRelease(v32);
    sub_10009CDE4(0);
    swift_bridgeObjectRelease(v34);
    v35 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
    {
      v52 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
      swift_beginAccess(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v85, 0, 0);
      v53 = *v52;
      if (*v52)
        v54 = *v52;
      else
        v54 = (uint64_t)_swiftEmptyArrayStorage;
      inited = swift_initStackObject(v24, v84);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v29;
      v83 = inited;
      specialized Array._endMutation()(inited);
      v56 = v83;
      if ((unint64_t)v54 >> 62)
      {
        if (v54 < 0)
          v68 = v54;
        else
          v68 = v54 & 0xFFFFFFFFFFFFFF8;
        v69 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        v70 = v29;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
        v59 = _bridgeCocoaArray<A>(_:)(v68, v69);
        swift_bridgeObjectRelease(v54);
      }
      else
      {
        v57 = v29;
        swift_bridgeObjectRetain(v53);
        swift_bridgeObjectRetain(v54);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v58);
        sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
        v59 = v54;
      }
      swift_bridgeObjectRelease(v54);
      v83 = v56;
      sub_1001305E4(v59);
      sub_10009D1E8(v83);
      goto LABEL_61;
    }
    v36 = *(void **)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate);
    if (v36)
    {
      v37 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
      swift_beginAccess(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v85, 0, 0);
      v38 = *v37;
      swift_bridgeObjectRetain(*v37);
      v39 = v36;
      v40 = sub_100174624(a2, v38);
      v42 = v41;
      swift_bridgeObjectRelease(v38);
      if ((v42 & 1) == 0)
      {
        v43 = *v37;
        swift_bridgeObjectRetain(*v37);
        v44 = sub_100174624((uint64_t)v39, v43);
        v46 = v45;
        swift_bridgeObjectRelease(v43);
        if ((v46 & 1) == 0)
        {
          if (v40 < v44 && *(_QWORD *)(v4 + v35) == 2)
          {
            v4 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
            if (!v4)
            {

              return;
            }
            v27 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFF8);
            if (!((unint64_t)v4 >> 62))
            {
              v47 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v4);
              if (v47)
                goto LABEL_20;
              goto LABEL_78;
            }
LABEL_74:
            if (v4 >= 0)
              v81 = v27;
            else
              v81 = (uint64_t *)v4;
            swift_bridgeObjectRetain(v4);
            v47 = _CocoaArrayWrapper.endIndex.getter(v81);
            if (v47)
            {
LABEL_20:
              v48 = v47 - 1;
              if (__OFSUB__(v47, 1))
              {
                __break(1u);
              }
              else if ((v4 & 0xC000000000000001) == 0)
              {
                if ((v48 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v48 < v27[2])
                {
                  v49 = *(id *)(v4 + 8 * v48 + 32);
LABEL_25:
                  v50 = v49;
                  swift_bridgeObjectRelease(v4);
                  v51 = v50[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
                  v50[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 1;
                  if (v51 != 1)
                    sub_100380B00();

LABEL_65:
                  return;
                }
                __break(1u);
                goto LABEL_83;
              }
              v49 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v4);
              goto LABEL_25;
            }
LABEL_78:

            swift_bridgeObjectRelease(v4);
            return;
          }

LABEL_61:
          v72 = *v27;
          if ((unint64_t)v72 >> 62)
          {
            if (v72 < 0)
              v79 = v72;
            else
              v79 = v72 & 0xFFFFFFFFFFFFFF8;
            v80 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
            swift_bridgeObjectRetain(v72);
            v74 = _bridgeCocoaArray<A>(_:)(v79, v80);
          }
          else
          {
            v73 = swift_bridgeObjectRetain_n(v72, 2);
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v73);
            sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
            v74 = v72;
          }
          swift_bridgeObjectRelease(v72);
          sub_100036718(v74, 0, 0);
          swift_bridgeObjectRelease(v74);
          v75 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver);
          if (v75)
          {
            v76 = (void *)v75;
            v77 = sub_10005F27C();
            sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v76, "dataSource:didUpdate:animated:", v4, isa, 0, swift_bridgeObjectRelease(v77).n128_f64[0]);

            swift_unknownObjectRelease(v76);
          }
          goto LABEL_65;
        }
      }

    }
    v60 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
    if (!v60)
      goto LABEL_61;
    v39 = (id)(v60 & 0xFFFFFFFFFFFFFF8);
    if ((unint64_t)v60 >> 62)
    {
      if (v60 >= 0)
        v71 = v60 & 0xFFFFFFFFFFFFFF8;
      else
        v71 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
      swift_bridgeObjectRetain(*(_QWORD *)(v4
                                         + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
      v61 = _CocoaArrayWrapper.endIndex.getter(v71);
      if (v61)
      {
LABEL_38:
        v62 = v61 - 1;
        if (__OFSUB__(v61, 1))
        {
          __break(1u);
        }
        else if ((v60 & 0xC000000000000001) == 0)
        {
          if ((v62 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v62 < *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            v63 = *(id *)(v60 + 8 * v62 + 32);
LABEL_43:
            v64 = v63;
            swift_bridgeObjectRelease(v60);
            v65 = v64[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
            v64[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
            if ((v65 & 1) != 0)
              sub_100380B00();

            goto LABEL_61;
          }
          __break(1u);
          goto LABEL_74;
        }
        v63 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v60);
        goto LABEL_43;
      }
    }
    else
    {
      v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v4
                                         + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
      if (v61)
        goto LABEL_38;
    }
    swift_bridgeObjectRelease(v60);
    goto LABEL_61;
  }
LABEL_83:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010052EF10, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 623, 0);
  __break(1u);
}

double sub_1003BFF08(void ***a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  void *object;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  void **v35;
  uint64_t v36;
  int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void **aBlock;
  unint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v56 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&result = swift_beginAccess(a1, v66, 0, 0).n128_u64[0];
  v14 = *a1;
  if ((*a1)[2])
  {
    v54 = v8;
    v55 = v7;
    aBlock = v14;
    swift_bridgeObjectRetain(v14);
    v15 = sub_10006922C(&qword_10064F390);
    v16 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
    v17 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease(v14);
    aBlock = 0;
    v60 = 0xE000000000000000;
    _StringGuts.grow(_:)(65);
    v20._countAndFlagsBits = 0xD00000000000002ALL;
    v20._object = (void *)0x800000010052EDB0;
    String.append(_:)(v20);
    v65 = a2;
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v23._object = (void *)0x800000010052EDE0;
    v23._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v23);
    v24._countAndFlagsBits = v17;
    v24._object = v19;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v19);
    v25._countAndFlagsBits = 33;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    v26 = (uint64_t)aBlock;
    v27 = v60;
    v29 = Logger.UI.unsafeMutableAddressor(v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v29, v58);
    v30 = swift_bridgeObjectRetain_n(v27, 2);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.fault.getter();
    v33 = os_log_type_enabled(v31, v32);
    v52 = v5;
    v53 = v4;
    v51 = v26;
    if (v33)
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = (void **)swift_slowAlloc(32, -1);
      aBlock = v35;
      *(_DWORD *)v34 = 136315138;
      swift_bridgeObjectRetain(v27);
      v65 = sub_1000544FC(v26, v27, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v27, 2);
    }
    v36 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v58);
    v37 = DOCIsInternalBuild(v36);
    v39 = v54;
    v38 = v55;
    if (v37)
    {
      v40 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      v41 = (void *)static OS_dispatch_queue.main.getter(v40);
      v42 = swift_allocObject(&unk_1005E5FE0, 32, 7);
      *(_QWORD *)(v42 + 16) = v51;
      *(_QWORD *)(v42 + 24) = v27;
      v63 = sub_1003C3D18;
      v64 = v42;
      aBlock = _NSConcreteStackBlock;
      v60 = 1107296256;
      v61 = sub_10004A82C;
      v62 = &unk_1005E5FF8;
      v43 = _Block_copy(&aBlock);
      swift_release(v64);
      v44 = v56;
      static DispatchQoS.unspecified.getter(v45);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v46 = sub_10008BAAC();
      v47 = sub_10006922C((uint64_t *)&unk_100647540);
      v48 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      v49 = v47;
      v50 = v53;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v49, v48, v53, v46);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v38, v43);
      _Block_release(v43);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v50);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v39);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v27).n128_u64[0];
    }
  }
  return result;
}

void sub_1003C03DC(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = (uint64_t)a4;
  v10 = *a3;
  v11 = (unint64_t)*a3 >> 62;
  if (v11)
  {
    if (v10 < 0)
      v12 = *a3;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*a3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v10);
    if (v5 >= v7)
      goto LABEL_13;
    swift_bridgeObjectRetain(v10);
    v12 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= (uint64_t)a4)
      goto LABEL_13;
  }
  a5 += 2;
  v26 = a1;
  v27 = a2;
  swift_bridgeObjectRetain(a2);
  v13._countAndFlagsBits = 40;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  if (v11)
  {
    if (v10 < 0)
      v15 = v10;
    else
      v15 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v14 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v28 = v14;
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  a1 = v26;
  v5 = v27;
  swift_beginAccess(a5, &v26, 33, 0);
  v7 = *a5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a5);
  *a5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_37;
  while (1)
  {
    v21 = *(_QWORD *)(v7 + 16);
    v20 = *(_QWORD *)(v7 + 24);
    if (v21 >= v20 >> 1)
    {
      v7 = (uint64_t)sub_100081A50((_QWORD *)(v20 > 1), v21 + 1, 1, (_QWORD *)v7);
      *a5 = v7;
    }
    *(_QWORD *)(v7 + 16) = v21 + 1;
    v22 = (_QWORD *)(v7 + 16 * v21);
    v22[4] = a1;
    v22[5] = v5;
    swift_endAccess(&v26);
    v7 = v12;
LABEL_13:
    if (!v7)
      break;
    if (v7 < 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v11)
    {
      if (v10 < 0)
        v23 = v10;
      else
        v23 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v12 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFSUB__(0, v12))
      goto LABEL_34;
    v24 = -v7;
    if (v12 >= 0 && -v12 > v24)
    {
      __break(1u);
      return;
    }
    v25 = v12 - v7;
    if (__OFADD__(v12, v24))
      goto LABEL_35;
    if (v12 >= v25)
    {
      sub_10045C0C8(v25, v12);
      return;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    v7 = (uint64_t)sub_100081A50(0, *(_QWORD *)(v7 + 16) + 1, 1, (_QWORD *)v7);
    *a5 = v7;
  }
}

uint64_t sub_1003C06BC(char a1, uint64_t a2, uint64_t (*a3)(void))
{
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[24];

  if ((a1 & 1) != 0)
  {
    v4 = (void **)(a2 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess(a2 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, v12, 0, 0);
    v5 = *v4;
    if (v5)
    {
      v6 = type metadata accessor for DOCItemCollectionViewController(0);
      v7 = swift_dynamicCastClass(v5, v6);
      if (v7)
      {
        v8 = v7;
        v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
        if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
        {
          *(_BYTE *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
          v10 = v5;
          sub_10009A978(0, (uint64_t)_swiftEmptyArrayStorage);
          *(_BYTE *)(v8 + v9) = 0;

        }
      }
    }
  }
  return a3();
}

void sub_1003C0788(uint64_t (*a1)(void), void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  void *v21;
  void *v22;
  char *v23;
  id v24;
  double Current;
  Class isa;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void (*v31)(id);
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  void (*v39)(uint64_t);
  char *v40;
  uint64_t v41;
  id v42;

  v5 = v4;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = objc_msgSend((id)objc_opt_self(DOCKeyboardFocusManager), "sharedManager");
  v14 = sub_10008666C();
  if (!v14)
    goto LABEL_20;
  v15 = v14;
  v41 = a4;
  v16 = (char *)objc_msgSend(v4, "view");
  if (!v16)
  {
    v17 = v15;
LABEL_19:

LABEL_20:
    v36 = a1();
    a3(v36);

    return;
  }
  v17 = v16;
  v18 = (char *)objc_msgSend(v16, "superview");
  if (!v18)
  {
LABEL_18:

    goto LABEL_19;
  }
  v19 = v18;
  v20 = objc_msgSend(v17, "snapshotViewAfterScreenUpdates:", 0);
  v40 = v17;
  if (!v20)
  {

    v15 = v40;
    v17 = v19;
    goto LABEL_18;
  }
  v21 = v20;
  v39 = a3;
  __chkstk_darwin(objc_msgSend(v42, "setExternalFirstResponderInFlight:", 1));
  v37 = v22;
  v38 = v21;
  *(&v37 - 6) = v22;
  *(&v37 - 5) = v21;
  v23 = v40;
  *(&v37 - 4) = v40;
  *(&v37 - 3) = v15;
  *(&v37 - 2) = a1;
  *(&v37 - 1) = a2;
  DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(0, sub_1003C3EAC);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  Current = CFAbsoluteTimeGetCurrent();
  while ((objc_msgSend(v15, "isActive") & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.2)
  {
    Date.init(timeIntervalSinceNow:)(0.05);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    objc_msgSend(v24, "runUntilDate:", isa);

  }
  __chkstk_darwin(v27);
  *(&v37 - 4) = v15;
  *(&v37 - 3) = v5;
  v28 = v38;
  *(&v37 - 2) = v23;
  *(&v37 - 1) = v28;
  DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)(0, sub_1003C3F24);
  v29 = objc_msgSend(v5, "navigationBar");
  v30 = objc_msgSend(v29, "topItem");

  v31 = (void (*)(id))v39;
  if (!v30)
    goto LABEL_15;
  v32 = objc_msgSend(v30, "searchController");

  if (!v32)
    goto LABEL_15;
  v33 = type metadata accessor for DOCSearchController();
  v34 = (void *)swift_dynamicCastClass(v32, v33);
  if (!v34)
  {
LABEL_14:

LABEL_15:
    v31(objc_msgSend(v42, "setExternalFirstResponderInFlight:", 0));

    return;
  }
  v35 = objc_msgSend(v34, "searchBar");

  v32 = objc_msgSend(v35, "searchField");
  if (v32)
  {
    objc_msgSend(v32, "becomeFirstResponder");
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1003C0B8C(uint64_t a1, void *a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  Class isa;
  uint64_t v27;

  v6 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v9 = -v7;
    if (!__OFSUB__(0, v7))
      goto LABEL_3;
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (a1 < 0)
    v25 = a1;
  else
    v25 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v7 = _CocoaArrayWrapper.endIndex.getter(v25);
  v9 = -v7;
  if (__OFSUB__(0, v7))
    goto LABEL_41;
LABEL_3:
  if ((unint64_t)(v9 + 1) >= 2)
  {
    v10 = v7 - 2;
    if (__OFSUB__(v7, 2))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v7 < v10)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (!v6)
    {
LABEL_6:
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_14;
    }
  }
  else
  {
    if (v7 < 0)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v10 = 0;
    if (!v6)
      goto LABEL_6;
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v11 = _CocoaArrayWrapper.endIndex.getter(v12);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(a1).n128_u64[0];
LABEL_14:
  if (v11 < v10)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v10 < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v14);
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 < v7)
    goto LABEL_44;
  if (v7 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if ((a1 & 0xC000000000000001) == 0 || v10 == v7)
    goto LABEL_29;
  if (v10 >= (unint64_t)v7)
  {
LABEL_49:
    __break(1u);
    return;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v15 = v10;
  do
  {
    v16 = v15 + 1;
    _ArrayBuffer._typeCheckSlowPath(_:)(v15);
    v15 = v16;
  }
  while (v7 != v16);
LABEL_29:
  if (v6)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v17 = _CocoaArrayWrapper.subscript.getter(v10, v7, v20);
    v18 = v21;
    v10 = v22;
    v19 = v23;
    swift_bridgeObjectRelease_n(a1, 2);
  }
  else
  {
    v17 = a1 & 0xFFFFFFFFFFFFFF8;
    v18 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v19 = (2 * v7) | 1;
  }
  v24 = objc_msgSend(a2, "internalNavigationController", v8);
  v27 = *a3;
  swift_bridgeObjectRetain(*a3);
  swift_unknownObjectRetain(v17);
  sub_10013067C(v17, v18, v10, v19);
  sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v24, "setViewControllers:animated:", isa, 0, swift_bridgeObjectRelease(v27).n128_f64[0]);
  swift_unknownObjectRelease(v17);

}

void sub_1003C0E38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  _BYTE v23[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void **)DOCLog.UI.unsafeMutableAddressor(Strong);
    v10 = sub_10006922C((uint64_t *)&unk_100644560);
    v11 = swift_allocObject(v10, 72, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
    v12 = v9;
    v13 = objc_msgSend(v8, "shortDebugID");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v11 + 56) = &type metadata for String;
    v17 = sub_10006A638();
    *(_QWORD *)(v11 + 64) = v17;
    *(_QWORD *)(v11 + 32) = v14;
    *(_QWORD *)(v11 + 40) = v16;
    v18 = static os_log_type_t.default.getter(v17);
    os_log(_:dso:log:type:_:)("Transition should be finished for self:(%@). Setting VCs", 56, 2, &_mh_execute_header, v12, v18, v11);

    v19 = objc_msgSend(v8, "internalNavigationController", swift_bridgeObjectRelease(v11).n128_f64[0]);
    swift_beginAccess(a2 + 16, &v22, 0, 0);
    v20 = *(_QWORD *)(a2 + 16);
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setViewControllers:animated:", isa, a3 & 1, swift_bridgeObjectRelease(v20).n128_f64[0]);

  }
}

void sub_1003C1008(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, SEL *a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v12 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v12);
  v14 = a3;
  v15 = a5;
  v16 = a1;
  v17 = sub_10043BE64(v13);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, *a7, v15, isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  swift_bridgeObjectRelease(v13);
}

_BYTE *sub_1003C1134(char **a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  _BYTE *v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char *v17;
  void **v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  void *v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];

  v2 = v1;
  v4 = objc_msgSend(v1, "configuration");
  v5 = objc_allocWithZone((Class)type metadata accessor for DOCColumnViewController(0));
  v6 = sub_10038177C(v4);
  v7 = (unint64_t *)&v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v37, 1, 0);
  v8 = *v7;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v8);
  sub_10037D860(a1);
  v9 = *v7;
  *v7 = (unint64_t)a1;
  swift_bridgeObjectRelease(v9);
  v10 = *v7;
  swift_bridgeObjectRetain(*v7);
  LOBYTE(a1) = sub_10023DA8C(v11, v8);
  swift_bridgeObjectRelease(v10);
  if ((a1 & 1) == 0)
  {
    v33 = v8;
    v34 = v2;
    v12 = *v7;
    if (*v7 >> 62)
      goto LABEL_19;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*v7, 2);
    for (; v13; v13 = _CocoaArrayWrapper.endIndex.getter(v30))
    {
      v14 = 0;
      while (1)
      {
        v17 = (v12 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12)
            : (char *)*(id *)(v12 + 32 + 8 * v14);
        v16 = v17;
        if (__OFADD__(v14++, 1))
          break;
        v19 = (void **)&v17[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v17[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v36, 0, 0);
        v20 = *v19;
        if (v20)
        {
          v21 = type metadata accessor for DOCItemCollectionViewController(0);
          v22 = swift_dynamicCastClass(v20, v21);
          if (v22)
          {
            v23 = v22;
            v24 = (uint64_t *)(v22 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
            swift_beginAccess(v22 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v35, 1, 0);
            v25 = *v24;
            *v24 = 2;
            if (v25 != 2)
            {
              v26 = *(_QWORD *)(v23 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
              v27 = *(_QWORD *)(v26 + 16);
              if (v27)
              {
                v28 = (uint64_t *)(v26 + 64);
                do
                {
                  v29 = *v28;
                  v28 += 5;
                  *(_BYTE *)(v29 + 24) = *(_BYTE *)(v29 + 25);
                  --v27;
                }
                while (v27);
              }
              v15 = v20;
              sub_100026A34();

              v16 = v15;
            }
          }
        }

        if (v14 == v13)
          goto LABEL_23;
      }
      __break(1u);
LABEL_19:
      if (v12 < 0)
        v30 = v12;
      else
        v30 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v12, 2);
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v12, 2);
    if (objc_msgSend(v6, "isViewLoaded"))
    {
      v8 = *v7;
      swift_bridgeObjectRetain(*v7);
      sub_10037E0D8(v31);
      swift_bridgeObjectRelease(v33);
    }
    else
    {
      v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
    }
    v2 = v34;
  }
  objc_msgSend(v2, "configureColumnViewController:", v6, swift_bridgeObjectRelease(v8).n128_f64[0]);
  return v6;
}

id sub_1003C14C0(uint64_t a1, id a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary) = 0;
  v6 = objc_msgSend(a2, "navigationBar");
  v7 = objc_msgSend(v6, "topItem");

  if (v7)
  {
    v8 = objc_msgSend(v7, "searchController");

    if (v8)
    {
      v9 = type metadata accessor for DOCSearchController();
      v10 = (void *)swift_dynamicCastClass(v8, v9);
      if (v10)
        objc_msgSend(v10, "setActive:", 1);

    }
  }
  objc_msgSend(a3, "setAlpha:", 1.0);
  return objc_msgSend(a4, "removeFromSuperview");
}

uint64_t sub_1003C15A8()
{
  uint64_t result;

  sub_10006922C(&qword_100652570);
  result = static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)(0x656761726F7473, 0xE700000000000000);
  static UINavigationItem.associatedObjectStorageKey = result;
  return result;
}

uint64_t *UINavigationItem.associatedObjectStorageKey.unsafeMutableAddressor()
{
  if (qword_1006410D0 != -1)
    swift_once(&qword_1006410D0, sub_1003C15A8);
  return &static UINavigationItem.associatedObjectStorageKey;
}

uint64_t static UINavigationItem.associatedObjectStorageKey.getter()
{
  _BYTE v1[24];

  if (qword_1006410D0 != -1)
    swift_once(&qword_1006410D0, sub_1003C15A8);
  swift_beginAccess(&static UINavigationItem.associatedObjectStorageKey, v1, 0, 0);
  return static UINavigationItem.associatedObjectStorageKey;
}

void static UINavigationItem.associatedObjectStorageKey.setter(uint64_t a1)
{
  _BYTE v2[24];

  if (qword_1006410D0 != -1)
    swift_once(&qword_1006410D0, sub_1003C15A8);
  swift_beginAccess(&static UINavigationItem.associatedObjectStorageKey, v2, 1, 0);
  static UINavigationItem.associatedObjectStorageKey = a1;
}

uint64_t (*static UINavigationItem.associatedObjectStorageKey.modify(uint64_t a1))(_QWORD)
{
  if (qword_1006410D0 != -1)
    swift_once(&qword_1006410D0, sub_1003C15A8);
  swift_beginAccess(&static UINavigationItem.associatedObjectStorageKey, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t UINavigationItem.associatedObjectStorage.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  sub_10006922C(&qword_100652570);
  if (qword_1006410D0 != -1)
    swift_once(&qword_1006410D0, sub_1003C15A8);
  swift_beginAccess(&static UINavigationItem.associatedObjectStorageKey, v2, 0, 0);
  return static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)(v0);
}

uint64_t sub_1003C17FC(uint64_t a1, void *a2)
{
  uint64_t *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  _BYTE v9[24];

  v4 = (uint64_t *)DOCSystemAlert.shared.unsafeMutableAddressor();
  swift_beginAccess(v4, v9, 0, 0);
  v5 = *v4;
  swift_retain(v5);
  _StringGuts.grow(_:)(162);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  v7._object = (void *)0x800000010052EE30;
  v7._countAndFlagsBits = 0x10000000000000A0;
  String.append(_:)(v7);
  (*(void (**)(unint64_t, unint64_t, _QWORD, unint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v5 + 144))(0xD000000000000020, 0x800000010052EE00, 0, 0xE000000000000000, 19279, 0xE200000000000000, 0, 0, 0, 0);
  swift_release(v5);
  return swift_bridgeObjectRelease(0xE000000000000000);
}

_QWORD *sub_1003C18F0(unint64_t a1, unint64_t a2, uint64_t a3, char a4, char a5)
{
  id v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  id v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *result;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;

  LOBYTE(v5) = a5;
  LOBYTE(v6) = a4;
  v8 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v9)
      return _swiftEmptyArrayStorage;
    sub_100081748(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v10 = 0;
    v22 = a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider;
    v23 = v8 & 0xC000000000000001;
    v21 = v6 & 1;
    v11 = v5 & 1;
    v6 = v8;
    while (v9 != v10)
    {
      if (v23)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v12 = *(id *)(v8 + 8 * v10 + 32);
      v5 = v12;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v22, v13);
      if (!Strong)
        goto LABEL_21;
      v15 = Strong;
      v16 = objc_msgSend(Strong, "provideContainerControllerAt:from:isUserInteraction:isBrowsingTrash:", v5, a3, v21, v11);
      swift_unknownObjectRelease(v15);
      a2 = _swiftEmptyArrayStorage[2];
      v17 = _swiftEmptyArrayStorage[3];
      if (a2 >= v17 >> 1)
        sub_100081748(v17 > 1, a2 + 1, 1);
      ++v10;
      _swiftEmptyArrayStorage[2] = a2 + 1;
      v18 = &_swiftEmptyArrayStorage[2 * a2];
      v18[4] = v5;
      v18[5] = v16;
      v8 = v6;
      if (v9 == v10)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_16:
    if (v8 < 0)
      v20 = v8;
    else
      v20 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v8);
  }
  __break(1u);
LABEL_21:
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x800000010052EF10, "Files/DOCBrowserNavigationDataSource.swift", 42, 2, 623, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003C1AFC(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = String.index(_:offsetBy:limitedBy:)(v6 | (v5 << 16), -result, 15, a2, a3);
    if ((v8 & 1) != 0)
      v9 = 15;
    else
      v9 = v7;
    return String.subscript.getter(15, v9, a2, a3);
  }
  return result;
}

void sub_1003C1B84(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = a1;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      v6 = -v5;
      if (!__OFSUB__(0, v5))
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v2);
  v6 = -v5;
  if (__OFSUB__(0, v5))
    goto LABEL_33;
LABEL_4:
  v7 = -v3;
  if (v6 > 0 || v6 <= v7)
  {
    v8 = v5 - v3;
    if (__OFADD__(v5, v7))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v8 < 0)
    {
LABEL_37:
      __break(1u);
      return;
    }
    if (!v4)
      goto LABEL_7;
  }
  else
  {
    v8 = 0;
    if (!v4)
    {
LABEL_7:
      v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_16;
    }
  }
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v2);
  if (v11 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  swift_bridgeObjectRetain(v2);
  v9 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v2);
LABEL_16:
  if (v9 < v8)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    type metadata accessor for DOCBrowserContainerController();
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v12);
      v12 = v13;
    }
    while (v8 != v13);
  }
  if (v4)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    _CocoaArrayWrapper.subscript.getter(0, v8, v14);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
  }
}

void sub_1003C1D44(uint64_t a1, void *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  unsigned __int8 v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void (**aBlock)(void);
  uint64_t v46;
  id v47;
  _BYTE v48[24];
  uint64_t v49;
  _BYTE v50[24];

  v46 = swift_allocObject(&unk_1005E61C0, 24, 7);
  *(_QWORD *)(v46 + 16) = a2;
  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(v4, v50, 0, 0);
  v5 = *v4;
  v49 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
LABEL_28:
    if (v5 < 0)
      v35 = v5;
    else
      v35 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v5, 2);
    _Block_copy(a2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v35);
    aBlock = (void (**)(void))a2;
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v5, 2);
    _Block_copy(a2);
    aBlock = (void (**)(void))a2;
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v8 = 4;
      while (1)
      {
        if (v7)
          v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v5);
        else
          v9 = (char *)*(id *)(v5 + 8 * v8);
        v10 = v9;
        a2 = (void *)(v8 - 3);
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        v11 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v48, 0, 0);
        v12 = *v11;
        if (v12
          && (v13 = type metadata accessor for DOCItemCollectionViewController(0),
              (v14 = swift_dynamicCastClass(v12, v13)) != 0))
        {
          v15 = v14;
          v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
          if (!v16)
          {
            _Block_release(aBlock);
            __break(1u);
            return;
          }
          v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
          if ((*(_BYTE *)(v17 + 16) & 1) != 0)
          {
            v18 = v12;
LABEL_17:
            v25 = *(void **)(v15 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
            if (v25 && (v26 = objc_msgSend(v25, "searchController")) != 0)
            {
              v27 = v26;
              v28 = type metadata accessor for DOCSearchController();
              v29 = swift_dynamicCastClass(v27, v28);

              if (v29)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
                v32 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v31 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v32 >= v31 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
                v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
                specialized Array._endMutation()(v33);
              }
              else
              {

              }
            }
            else
            {

            }
            goto LABEL_5;
          }
          v19 = v5;
          v20 = v6;
          v21 = v7;
          v22 = *(void **)v17;
          v47 = v12;
          v23 = v22;
          v24 = objc_msgSend(v23, "doc_displaysSearchResults");

          v7 = v21;
          v6 = v20;
          v5 = v19;
          if ((v24 & 1) == 0)
            goto LABEL_17;

        }
        else
        {

        }
LABEL_5:
        ++v8;
        if (a2 == (void *)v6)
        {
          swift_bridgeObjectRelease(v5);
          v34 = v49;
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v5);
  v34 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease(v5);
  if ((unint64_t)v34 >> 62)
    goto LABEL_46;
  v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v34);
  for (; v36; v36 = _CocoaArrayWrapper.endIndex.getter(v44))
  {
    v37 = 4;
    while (1)
    {
      v38 = (v34 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v34)
          : *(id *)(v34 + 8 * v37);
      v39 = v38;
      v40 = v37 - 3;
      if (__OFADD__(v37 - 4, 1))
        break;
      if (objc_msgSend(v38, "isActive"))
      {
        swift_bridgeObjectRelease_n(v34, 2);
        v42 = swift_allocObject(&unk_1005E61E8, 32, 7);
        *(_QWORD *)(v42 + 16) = sub_1001F6B10;
        *(_QWORD *)(v42 + 24) = v46;
        v43 = v39;
        swift_retain();
        sub_10045EA44((uint64_t (*)(id))sub_100066584, v42, 0);
        swift_release(v46);

        v41 = v42;
        goto LABEL_44;
      }

      ++v37;
      if (v40 == v36)
        goto LABEL_42;
    }
    __break(1u);
LABEL_46:
    if (v34 < 0)
      v44 = v34;
    else
      v44 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
  }
LABEL_42:
  swift_bridgeObjectRelease_n(v34, 2);
  aBlock[2]();
  v41 = v46;
LABEL_44:
  swift_release(v41);
}

uint64_t sub_1003C218C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v25[24];
  uint64_t v26;

  v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v25, 0, 0);
  v26 = *v5;
  swift_bridgeObjectRetain(v26);
  v6 = a3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
  specialized Array._endMutation()(v9);
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2
    && (sub_1001D38B4() & 1) != 0)
  {
    v24 = sub_1003BF4A8();
    v10 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);
    v14 = v24;
  }
  else
  {
    v14 = 0;
  }
  v15 = v26;
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v21 = v26;
    else
      v21 = v26 & 0xFFFFFFFFFFFFFF8;
    v22 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v15);
    v17 = _bridgeCocoaArray<A>(_:)(v21, v22);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    swift_bridgeObjectRetain(v26);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v17 = v15;
  }
  swift_bridgeObjectRelease(v15);
  if (v14)
  {
    v18 = v14 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v18 = v14;
      v23 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      swift_bridgeObjectRetain(v14);
      _bridgeCocoaArray<A>(_:)(v18, v23);
      swift_bridgeObjectRelease_n(v14, 2);
    }
    else
    {
      swift_bridgeObjectRetain(v14);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      swift_bridgeObjectRelease(v14);
    }
  }
  return v17;
}

void sub_1003C23FC(uint64_t a1, char a2, uint64_t a3, void (**a4)(_QWORD, __n128))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  __n128 v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  char v31[24];

  v8 = swift_allocObject(&unk_1005E6030, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  if (*(_QWORD *)(a3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2
    || (v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers)) == 0)
  {
    _Block_copy(a4);
    goto LABEL_13;
  }
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a4);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_5;
LABEL_21:
    v25 = swift_bridgeObjectRelease(v9);
    goto LABEL_13;
  }
  if (v9 >= 0)
    v30 = v9 & 0xFFFFFFFFFFFFFF8;
  else
    v30 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  _Block_copy(a4);
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v10)
    goto LABEL_21;
LABEL_5:
  v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
    goto LABEL_10;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v12 = (char *)*(id *)(v9 + 8 * v11 + 32);
LABEL_10:
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  v14 = (unint64_t *)&v13[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&v13[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v31, 0, 0);
  v15 = *v14;
  swift_bridgeObjectRetain(*v14);
  sub_1003C1B84(a1, v15);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease(v15);
  v24 = v23 >> 1;
  if (v21 == v23 >> 1)
  {

    v25 = swift_unknownObjectRelease(v17);
LABEL_13:
    a4[2](a4, v25);
    v26 = (_QWORD *)v8;
LABEL_14:
    swift_release(v26);
    return;
  }
  if (v24 > v21)
  {
    v27 = *(id *)(v19 + 8 * v24 - 8);
    swift_unknownObjectRelease(v17);
    v28 = (_QWORD *)swift_allocObject(&unk_1005E6058, 40, 7);
    v28[2] = v27;
    v28[3] = sub_1000E62C0;
    v28[4] = v8;
    v29 = v27;
    swift_retain();
    sub_10037CBF8(v27, a2 & 1, (void (*)(_QWORD))sub_1003C3D70, (uint64_t)v28);
    swift_release(v8);

    v26 = v28;
    goto LABEL_14;
  }
LABEL_26:
  __break(1u);
}

void sub_1003C2658(int a1, uint64_t a2, int64_t a3, char a4, uint64_t a5, void *aBlock)
{
  _QWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE v37[24];
  uint64_t v38;

  _Block_copy(aBlock);
  v11 = sub_10007F738(a3);
  if (!v11)
  {
    _Block_release(aBlock);
    return;
  }
  v12 = v11;
  v13 = (uint64_t *)(a5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(a5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v37, 0, 0);
  v38 = *v13;
  swift_bridgeObjectRetain(v38);
  sub_1001DB5B4(a2, v14, v15);
  swift_bridgeObjectRetain(v12);
  sub_100130658(v16);
  v17 = 0;
  if (*(_QWORD *)(a5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2)
  {
    if ((sub_1001D38B4() & 1) != 0)
    {
      v36 = sub_1003BF4A8();
      sub_1001DB5B4(a2, v18, v19);
      swift_bridgeObjectRetain(v12);
      sub_100130658(v20);
      v17 = v36;
    }
    else
    {
      v17 = 0;
    }
  }
  v21 = v38;
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v31 = v38;
    else
      v31 = v38 & 0xFFFFFFFFFFFFFF8;
    v32 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRetain(v21);
    v23 = _bridgeCocoaArray<A>(_:)(v31, v32);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    swift_bridgeObjectRetain(v38);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    v23 = v21;
  }
  swift_bridgeObjectRelease(v21);
  if (!v17)
  {
    v26 = (uint64_t)v12;
    goto LABEL_13;
  }
  v24 = v17 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v17 >> 62))
  {
    swift_bridgeObjectRetain(v17);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v25);
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    swift_bridgeObjectRelease(v12);
    v26 = v17;
LABEL_13:
    swift_bridgeObjectRelease(v26);
    goto LABEL_14;
  }
  if (v17 < 0)
    v24 = v17;
  v34 = sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
  swift_bridgeObjectRetain(v17);
  v35 = _bridgeCocoaArray<A>(_:)(v24, v34);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease_n(v17, 2);
  v17 = v35;
LABEL_14:
  sub_10009CDE4(a4 & 1);
  swift_bridgeObjectRelease(v23);
  v27 = swift_bridgeObjectRelease(v17);
  if (!((unint64_t)a3 >> 62))
  {
    v28 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v28 < a2)
      goto LABEL_16;
LABEL_26:
    (*((void (**)(void *, __n128))aBlock + 2))(aBlock, v27);
    goto LABEL_27;
  }
  if (a3 < 0)
    v33 = a3;
  else
    v33 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v28 = _CocoaArrayWrapper.endIndex.getter(v33);
  v27 = swift_bridgeObjectRelease(a3);
  if (v28 >= a2)
    goto LABEL_26;
LABEL_16:
  v29 = __OFSUB__(a2, v28);
  v30 = a2 - v28;
  if (!v29)
  {
    _Block_copy(aBlock);
    sub_1003C23FC(v30, 1, a5, (void (**)(_QWORD, __n128))aBlock);
    _Block_release(aBlock);
LABEL_27:
    _Block_release(aBlock);
    return;
  }
  __break(1u);
}

void sub_1003C2968(char a1, char *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  char ***v14;
  char **v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *Strong;
  void *v41;
  id v42;
  unint64_t v43;
  void *v44;
  char *v45;
  char v46;
  char *v47;
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];

  v4 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers];
  if (!v4)
    return;
  v5 = a2;
  LOBYTE(v6) = a1;
  v7 = v4 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v4 >> 62)
    goto LABEL_32;
  v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)&a2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers]);
  if (!v8)
  {
LABEL_36:
    swift_bridgeObjectRelease(v4);
    return;
  }
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    }
    else
    {
      if (!*(_QWORD *)(v7 + 16))
      {
        __break(1u);
        goto LABEL_39;
      }
      v9 = (char *)*(id *)(v4 + 32);
    }
    v2 = v9;
    swift_bridgeObjectRelease(v4);
    v4 = (uint64_t)&v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v51, 1, 0);
    v7 = *(_QWORD *)v4;
    if (!(*(_QWORD *)v4 >> 62))
    {
      v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)v4);
      if (!v10)
        goto LABEL_43;
      goto LABEL_9;
    }
LABEL_39:
    if (v7 < 0)
      v37 = v7;
    else
      v37 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v10 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (!v10)
    {
LABEL_43:

      swift_bridgeObjectRelease(v7);
      return;
    }
LABEL_9:
    v11 = v10 - 1;
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
LABEL_45:
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v7);
      goto LABEL_14;
    }
    if ((v7 & 0xC000000000000001) != 0)
      goto LABEL_45;
    if ((v11 & 0x8000000000000000) != 0)
      break;
    if (v11 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_47;
    v12 = *(id *)(v7 + 8 * v11 + 32);
LABEL_14:
    v13 = v12;
    swift_bridgeObjectRelease(v7);
    v14 = (char ***)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v50, 0, 0);
    v15 = *v14;
    v16 = *(_QWORD *)v4;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    sub_10037D860(v15);
    v17 = *(_QWORD *)v4;
    *(_QWORD *)v4 = v15;
    swift_bridgeObjectRelease(v17);
    v18 = *(_QWORD *)v4;
    swift_bridgeObjectRetain(*(_QWORD *)v4);
    v20 = sub_10023DA8C(v19, v16);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) != 0)
      goto LABEL_55;
    v43 = v16;
    v44 = v13;
    v3 = *(_QWORD *)v4;
    v46 = v6;
    v45 = v5;
    v47 = v2;
    if (*(_QWORD *)v4 >> 62)
      goto LABEL_48;
    v21 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v3, 2);
    if (!v21)
      goto LABEL_52;
LABEL_17:
    v22 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = (uint64_t)&OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (1)
    {
      v24 = v6
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v3)
          : (char *)*(id *)(v3 + 32 + 8 * v22);
      v5 = v24;
      if (__OFADD__(v22++, 1))
        break;
      v26 = (void **)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v49, 0, 0);
      v2 = (char *)*v26;
      if (*v26)
      {
        v27 = type metadata accessor for DOCItemCollectionViewController(0);
        v28 = swift_dynamicCastClass(v2, v27);
        if (v28)
        {
          v29 = (char *)v28;
          v30 = (uint64_t *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v48, 1, 0);
          v31 = *v30;
          *v30 = 2;
          if (v31 != 2)
          {
            v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
            v33 = *(_QWORD *)(v32 + 16);
            if (v33)
            {
              v34 = (uint64_t *)(v32 + 64);
              do
              {
                v35 = *v34;
                v34 += 5;
                *(_BYTE *)(v35 + 24) = *(_BYTE *)(v35 + 25);
                --v33;
              }
              while (v33);
            }
            v23 = v2;
            v2 = v29;
            sub_100026A34();

            v5 = v23;
          }
        }
      }

      if (v22 == v21)
        goto LABEL_52;
    }
    __break(1u);
LABEL_32:
    if (v4 >= 0)
      v36 = v7;
    else
      v36 = v4;
    swift_bridgeObjectRetain(v4);
    if (!_CocoaArrayWrapper.endIndex.getter(v36))
      goto LABEL_36;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  if (v3 < 0)
    v38 = v3;
  else
    v38 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v3, 2);
  v21 = _CocoaArrayWrapper.endIndex.getter(v38);
  if (v21)
    goto LABEL_17;
LABEL_52:
  swift_bridgeObjectRelease_n(v3, 2);
  v2 = v47;
  if (objc_msgSend(v47, "isViewLoaded"))
  {
    v16 = *(_QWORD *)v4;
    swift_bridgeObjectRetain(*(_QWORD *)v4);
    sub_10037E0D8(v39);
    swift_bridgeObjectRelease(v43);
    LOBYTE(v6) = v46;
    v13 = v44;
    v5 = v45;
  }
  else
  {
    v47[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
    LOBYTE(v6) = v46;
    v13 = v44;
    v5 = v45;
    v16 = v43;
  }
LABEL_55:
  swift_bridgeObjectRelease(v16);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_itemProvider]);
  if (Strong)
  {
    v41 = Strong;
    objc_msgSend(Strong, "configureColumnViewController:", v2);
    swift_unknownObjectRelease(v41);
  }
  v42 = v13;
  sub_10037CBF8(v13, v6 & 1, (void (*)(_QWORD))DOCSplitBrowserViewController.didCommitPreview(of:), 0);

}

void sub_1003C2DD0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE *i;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle] != 2)
    return;
  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers];
  if (!v2)
    goto LABEL_18;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease(v2);
    goto LABEL_18;
  }
  if (v2 >= 0)
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  else
    v8 = v2;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v8);
  if (!v3)
    goto LABEL_17;
LABEL_5:
  v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
    goto LABEL_33;
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_34;
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_36:
    __break(1u);
    return;
  }
  for (i = *(id *)(v2 + 8 * v4 + 32); ; i = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2))
  {
    v6 = i;
    swift_bridgeObjectRelease(v2);
    v7 = v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
    v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
    if ((v7 & 1) != 0)
      sub_100380B00();

LABEL_18:
    v2 = (uint64_t)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers], v15, 0, 0);
    v9 = *(_QWORD *)v2;
    if (*(_QWORD *)v2 >> 62)
    {
      if (v9 < 0)
        v13 = *(_QWORD *)v2;
      else
        v13 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)v2, 2);
      v4 = _CocoaArrayWrapper.endIndex.getter(v13);
      v10 = v4;
      if (!v4)
        goto LABEL_30;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      v4 = swift_bridgeObjectRetain_n(*(_QWORD *)v2, 2);
      if (!v10)
        goto LABEL_30;
    }
    if (v10 >= 1)
      break;
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    ;
  }
  for (j = 0; j != v10; ++j)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v12 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v9);
    else
      v12 = *(id *)(v9 + 8 * j + 32);
    v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 1;

  }
LABEL_30:
  swift_bridgeObjectRelease_n(v9, 2);
  v14 = *(_QWORD *)v2;
  swift_bridgeObjectRetain(v14);
  sub_1003C2968(1, v1);
  swift_bridgeObjectRelease(v14);
}

void sub_1003C2FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t *v45;
  int v46;
  uint64_t v47;
  char *v48;
  id v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  char v54[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return;
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess(v5, v54, 0, 0);
  v6 = *v5;
  if (!v6)
    return;
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (v7)
      goto LABEL_5;
LABEL_28:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if (v6 >= 0)
    v42 = v6 & 0xFFFFFFFFFFFFFF8;
  else
    v42 = v6;
  swift_bridgeObjectRetain(v6);
  v7 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v7)
    goto LABEL_28;
LABEL_5:
  v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_31:
    v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
    goto LABEL_10;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v8 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return;
  }
  v9 = (char *)*(id *)(v6 + 8 * v8 + 32);
LABEL_10:
  v10 = v9;
  swift_bridgeObjectRelease(v6);
  v11 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v53, 0, 0);
  v12 = *v11;
  if (!*v11
    || (v13 = type metadata accessor for DOCItemCollectionViewController(0),
        (v14 = swift_dynamicCastClass(v12, v13)) == 0))
  {

    return;
  }
  v15 = v14;
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v16)
    goto LABEL_34;
  v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v17 + 16) & 1) != 0)
  {
    v18 = *(_QWORD *)(*(_QWORD *)v17 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    v19 = v12;
    swift_unknownObjectRetain(v18);
  }
  else
  {
    v18 = *(_QWORD *)(v17 + 8);
    v20 = v12;
    swift_unknownObjectRetain(v18);
    if (!v18)
    {

      return;
    }
  }
  v21 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v22 = objc_msgSend(v21, "nodeRequiresAuthentication_Sync:", v18);

  v50 = v22;
  sub_1003DF398(v22);
  v24 = Logger.UI.unsafeMutableAddressor(v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v24, v1);
  v25 = v12;
  swift_unknownObjectRetain_n(v18, 2);
  v26 = v25;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.debug.getter(v27);
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc(38, -1);
    v46 = v29;
    v31 = v30;
    v45 = (uint64_t *)swift_slowAlloc(8, -1);
    v47 = swift_slowAlloc(64, -1);
    v52 = v47;
    *(_DWORD *)v31 = 136315906;
    v49 = v26;
    v51 = sub_1000544FC(0xD00000000000002ALL, 0x800000010052EEE0, &v52);
    v44 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    *(_WORD *)(v31 + 12) = 1024;
    LODWORD(v51) = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 4);
    *(_WORD *)(v31 + 18) = 2080;
    v51 = v18;
    swift_unknownObjectRetain(v18);
    v32 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v33 = String.init<A>(describing:)(&v51, v32);
    v48 = v10;
    v35 = v34;
    v51 = sub_1000544FC(v33, v34, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    swift_unknownObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease(v35);
    *(_WORD *)(v31 + 28) = 2112;
    v51 = v15;
    v36 = v49;
    v10 = v48;
    v26 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    v37 = v45;
    *v45 = v15;

    v38 = v44;
    _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v46, "[PROTECTED APPS] %s requiresAuthentication: %{BOOL}d location: %s viewController: %@", (uint8_t *)v31, 0x26u);
    v39 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v37, 1, v39);
    swift_slowDealloc(v37, -1, -1);
    v40 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(v18, 2);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v50)
  {
    v41 = swift_unknownObjectRetain(v18);
    sub_1001F1728(v41, v10);

    swift_unknownObjectRelease_n(v18, 2);
  }
  else
  {

    swift_unknownObjectRelease(v18);
  }
}

double sub_1003C3504(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void ***v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void ***v19;
  _QWORD *v20;
  _QWORD *v21;
  BOOL v22;
  void **v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t Strong;
  void *v40;
  uint64_t v41;
  Class isa;
  double result;
  uint64_t *v44;
  uint64_t v45;
  id v46;
  char v47;
  void ***v48;
  _QWORD *v49;
  uint64_t *v50;
  char v51[24];
  char v52[24];
  char v53[24];
  uint64_t v54[4];

  v3 = v2;
  LOBYTE(v4) = a2;
  v6 = swift_allocObject(&unk_1005E5FB8, 24, 7);
  *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
  v7 = (void ***)(v6 + 16);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
    goto LABEL_48;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v8)
    goto LABEL_48;
  v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
  if ((unint64_t)v8 >> 62)
    goto LABEL_30;
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers));
  if (!v10)
    goto LABEL_47;
  while (1)
  {
    v11 = v10 - 1;
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
LABEL_36:
      v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v8);
      goto LABEL_10;
    }
    v50 = (uint64_t *)v6;
    if ((v8 & 0xC000000000000001) != 0)
      goto LABEL_36;
    if ((v11 & 0x8000000000000000) != 0)
      break;
    if (v11 >= v9[2])
      goto LABEL_38;
    v12 = (char *)*(id *)(v8 + 8 * v11 + 32);
LABEL_10:
    v13 = v12;
    swift_bridgeObjectRelease(v8);
    v14 = (uint64_t *)&v13[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess(&v13[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v53, 1, 0);
    v54[0] = *v14;
    swift_bridgeObjectRetain(v54[0]);
    sub_1003C03DC(0x736E6D756C6F63, 0xE700000000000000, v54, a1, v50);
    v15 = (char **)v54[0];
    v8 = *v14;
    swift_bridgeObjectRetain(*v14);
    sub_10037D860(v15);
    v16 = *v14;
    *v14 = (uint64_t)v15;
    swift_bridgeObjectRelease(v16);
    v17 = *v14;
    swift_bridgeObjectRetain(*v14);
    LOBYTE(v15) = sub_10023DA8C(v18, v8);
    swift_bridgeObjectRelease(v17);
    if ((v15 & 1) != 0)
    {

      goto LABEL_46;
    }
    v45 = v8;
    v46 = v13;
    v47 = v4;
    v48 = v7;
    v49 = a1;
    v44 = v14;
    v6 = *v14;
    if ((unint64_t)*v14 >> 62)
      goto LABEL_39;
    v7 = *(void ****)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*v14, 2);
    if (!v7)
      goto LABEL_43;
LABEL_14:
    v19 = 0;
    v8 = v6 & 0xC000000000000001;
    v9 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (1)
    {
      v21 = v8
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v6)
          : *(id *)(v6 + 32 + 8 * (_QWORD)v19);
      a1 = v21;
      v22 = __OFADD__(v19, 1);
      v19 = (void ***)((char *)v19 + 1);
      if (v22)
        break;
      v23 = (void **)((char *)v21 + *v9);
      swift_beginAccess(v23, v52, 0, 0);
      v24 = *v23;
      if (v24)
      {
        v25 = type metadata accessor for DOCItemCollectionViewController(0);
        v26 = swift_dynamicCastClass(v24, v25);
        if (v26)
        {
          v4 = v26;
          v27 = v9;
          v28 = (uint64_t *)(v26 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess(v26 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v51, 1, 0);
          v29 = *v28;
          *v28 = 2;
          if (v29 != 2)
          {
            v30 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
            v31 = *(_QWORD *)(v30 + 16);
            if (v31)
            {
              v32 = (uint64_t *)(v30 + 64);
              do
              {
                v33 = *v32;
                v32 += 5;
                *(_BYTE *)(v33 + 24) = *(_BYTE *)(v33 + 25);
                --v31;
              }
              while (v31);
            }
            v20 = v24;
            sub_100026A34();

            a1 = v20;
          }
          v9 = v27;
        }
      }

      if (v19 == v7)
        goto LABEL_43;
    }
    __break(1u);
LABEL_30:
    if (v8 >= 0)
      v34 = (uint64_t)v9;
    else
      v34 = v8;
    swift_bridgeObjectRetain(v8);
    v10 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (!v10)
      goto LABEL_47;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  if (v6 < 0)
    v35 = v6;
  else
    v35 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v6, 2);
  v7 = (void ***)_CocoaArrayWrapper.endIndex.getter(v35);
  if (v7)
    goto LABEL_14;
LABEL_43:
  swift_bridgeObjectRelease_n(v6, 2);
  if (objc_msgSend(v46, "isViewLoaded"))
  {
    v8 = *v44;
    swift_bridgeObjectRetain(*v44);
    sub_10037E0D8(v36);

    swift_bridgeObjectRelease(v45);
    v7 = v48;
    a1 = v49;
    LOBYTE(v4) = v47;
  }
  else
  {
    *((_BYTE *)v46 + OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot) = 1;

    v7 = v48;
    a1 = v49;
    LOBYTE(v4) = v47;
    v8 = v45;
  }
LABEL_46:
  v6 = (uint64_t)v50;
LABEL_47:
  swift_bridgeObjectRelease(v8);
LABEL_48:
  v37 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers, v54, 33, 0);
  sub_1003C03DC(0xD000000000000011, 0x800000010052E9D0, v37, a1, (uint64_t *)v6);
  swift_endAccess(v54);
  v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers, v54, 33, 0);
  if (*v38)
    sub_1003C03DC(0xD000000000000014, 0x800000010052C190, v38, a1, (uint64_t *)v6);
  swift_endAccess(v54);
  sub_1003C2FE0();
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_updateObserver);
  if (Strong)
  {
    v40 = (void *)Strong;
    v41 = sub_10005F27C();
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "dataSource:didUpdate:animated:", v3, isa, v4 & 1, swift_bridgeObjectRelease(v41).n128_f64[0]);

    swift_unknownObjectRelease(v40);
  }
  sub_1003BFF08(v7, (uint64_t)a1);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

unint64_t sub_1003C3A10(char *a1)
{
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  _BYTE v14[24];

  v2 = objc_msgSend(a1, "navigationItem");
  v3 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers], v14, 0, 0);
  v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v4);
    v10 = 0;
    goto LABEL_14;
  }
  if (v4 < 0)
    v11 = v4;
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v5 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v5)
    goto LABEL_13;
LABEL_3:
  result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_16:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v4);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v4 + 8 * result + 32);
LABEL_8:
    v8 = v7;
    swift_bridgeObjectRelease(v4);
    v9 = objc_msgSend(v8, "navigationItem");

    v10 = objc_msgSend(v9, "searchController");
LABEL_14:
    objc_msgSend(v2, "doc_safeSetSearchController:", v10);

    v12 = objc_msgSend(a1, "navigationItem");
    objc_msgSend(v12, "_setPreserveSearchBarAcrossTransitions:", 1);

    v13 = objc_msgSend(a1, "navigationItem");
    objc_msgSend(v13, "setHidesSearchBarWhenScrolling:", 0);

    return (unint64_t)objc_msgSend(a1, "setDefinesPresentationContext:", 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C3BEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3C10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3C34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

void sub_1003C3C60()
{
  uint64_t v0;

  sub_1003C0E38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

unint64_t sub_1003C3C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652600;
  if (!qword_100652600)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100652600);
  }
  return result;
}

void sub_1003C3CC4()
{
  uint64_t v0;

  sub_1003C0B8C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1003C3CD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3CF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C3D18()
{
  uint64_t v0;

  return sub_1003C17FC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003C3D20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3D44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003C3D70(char a1)
{
  uint64_t v1;

  return sub_1003C06BC(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1003C3D7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

double sub_1003C3DA8()
{
  uint64_t v0;

  return sub_100029E34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_1003C3DB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C3DD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3DE8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003C3E1C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C3E48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1003C3E7C()
{
  uint64_t v0;

  return sub_10013A7A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1003C3E8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight;
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
}

uint64_t sub_1003C3EAC()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;
  uint64_t (*v3)(id);

  v1 = *(void **)(v0 + 32);
  v2 = *(_BYTE **)(v0 + 40);
  v3 = *(uint64_t (**)(id))(v0 + 48);
  objc_msgSend(*(id *)(v0 + 16), "addSubview:", *(_QWORD *)(v0 + 24));
  objc_msgSend(v1, "setAlpha:", 0.0);
  v2[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] = 1;
  return v3(objc_msgSend(v2, "setActive:", 0));
}

id sub_1003C3F24()
{
  uint64_t v0;

  return sub_1003C14C0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1003C3F60()
{
  uint64_t result;
  uint64_t v1;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  qword_100652610 = result;
  *(_QWORD *)algn_100652618 = v1;
  return result;
}

id sub_1003C3F8C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  qword_100652620 = (uint64_t)result;
  return result;
}

void sub_1003C3FC4()
{
  qword_100652628 = 0x403E000000000000;
}

id sub_1003C4138()
{
  return sub_1001405E0(0, type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView);
}

void sub_1003C4250(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1003C474C(a3 & 1);

  }
}

uint64_t sub_1003C42BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations);
  v2 = OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v1, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    v10 = *(_QWORD *)(v11 + v2);
    *(_QWORD *)(v11 + v2) = _swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v10);
  }
  if (v1 < 0)
    v9 = v1;
  else
    v9 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1, 2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = objc_opt_self(NSNotificationCenter);
  if (v3 >= 1)
  {
    v5 = (void *)result;
    v6 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v1);
      }
      else
      {
        v7 = *(_QWORD *)(v1 + 8 * v6 + 32);
        swift_unknownObjectRetain(v7);
      }
      ++v6;
      v8 = objc_msgSend(v5, "defaultCenter");
      objc_msgSend(v8, "removeObserver:", v7);
      swift_unknownObjectRelease(v7);

    }
    while (v3 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1003C4460()
{
  char *v0;
  uint64_t Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  id v13;
  void *v14;
  objc_super v15;
  CGRect v16;
  CGRect v17;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView();
  objc_msgSendSuper2(&v15, "layoutSubviews");
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_presented]);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = objc_msgSend(v0, "subviews");
    v4 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    if ((v5 & 0xC000000000000001) != 0)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    }
    else
    {
      if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_10;
      }
      v6 = *(id *)(v5 + 32);
    }
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    v9 = sub_1003C4638(v7, v8);
    v11 = v10;
    objc_msgSend(v0, "bounds");
    v12 = CGRectGetMidX(v16) - v9 * 0.5;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v7, "setFrame:", v12, CGRectGetMidY(v17) - v11 * 0.5, v9, v11);
    v13 = objc_msgSend(v2, "view");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v7, "bounds");
      objc_msgSend(v14, "setFrame:");

      return;
    }
LABEL_10:
    __break(1u);
  }
}

double sub_1003C4638(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t Strong;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGRect v11;
  CGRect v12;

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_presented], a2);
  if (Strong)
  {
    v5 = (void *)Strong;
    objc_msgSend(v2, "bounds");
    v6 = CGRectGetWidth(v11) + -88.0;
    objc_msgSend(v5, "preferredContentSize");
    if ((*(_QWORD *)&v7 & 0xFFFFFFFFFFFFFLL) != 0)
      v8 = v6;
    else
      v8 = v7;
    if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
      v8 = v7;
    if (v6 > v7)
      v6 = v8;
    objc_msgSend(v2, "bounds");
    CGRectGetHeight(v12);
    objc_msgSend(v5, "preferredContentSize");

  }
  else
  {
    objc_msgSend(a1, "bounds");
    return v9;
  }
  return v6;
}

void sub_1003C474C(char a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *Strong;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  CGFloat v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double MinY;
  double v66;
  double v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  CGRect rect1;
  void *v76;
  id (*v77)();
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v2 = v1;
  v4 = objc_msgSend(v1, "subviews");
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v68 = v6;
    else
      v68 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v6);
  if (!v7)
    return;
  v9 = Notification.userInfo.getter(v8);
  if (!v9)
    return;
  v10 = v9;
  *(double *)&v79 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey));
  v80 = v11;
  AnyHashable.init<A>(_:)(&v79, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v10 + 16) && (v12 = sub_100067654((uint64_t)&rect1.origin.y), (v13 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v81);
  }
  else
  {
    v81 = 0u;
    v82 = 0u;
  }
  sub_100067748((uint64_t)&rect1.origin.y);
  if (!*((_QWORD *)&v82 + 1))
    goto LABEL_21;
  v14 = sub_10004F2F0(0, &qword_100651D50, NSValue_ptr);
  if ((swift_dynamicCast(&v79, &v81, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return;
  }
  v15 = (void *)v79;
  *(double *)&v79 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationDurationUserInfoKey));
  v80 = v16;
  AnyHashable.init<A>(_:)(&v79, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v10 + 16) && (v17 = sub_100067654((uint64_t)&rect1.origin.y), (v18 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v10 + 56) + 32 * v17, (uint64_t)&v81);
  }
  else
  {
    v81 = 0u;
    v82 = 0u;
  }
  sub_100067748((uint64_t)&rect1.origin.y);
  if (!*((_QWORD *)&v82 + 1))
  {

LABEL_21:
    swift_bridgeObjectRelease(v10);
LABEL_22:
    sub_10007EB54((uint64_t)&v81);
    return;
  }
  if ((swift_dynamicCast(&v79, &v81, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) == 0)
  {

    goto LABEL_24;
  }
  v19 = *(double *)&v79;
  *(double *)&v79 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardAnimationCurveUserInfoKey));
  v80 = v20;
  AnyHashable.init<A>(_:)(&v79, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v10 + 16) && (v21 = sub_100067654((uint64_t)&rect1.origin.y), (v22 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v10 + 56) + 32 * v21, (uint64_t)&v81);
  }
  else
  {
    v81 = 0u;
    v82 = 0u;
  }
  swift_bridgeObjectRelease(v10);
  sub_100067748((uint64_t)&rect1.origin.y);
  if (!*((_QWORD *)&v82 + 1))
  {

    goto LABEL_22;
  }
  if ((swift_dynamicCast(&v79, &v81, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0
    || (v23 = v79,
        (Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_presented])) == 0))
  {

    return;
  }
  v25 = Strong;
  v26 = objc_msgSend(Strong, "view");
  if (!v26)
    goto LABEL_56;
  v27 = v26;
  v28 = objc_msgSend(v26, "superview");

  if (!v28)
  {

    return;
  }
  v74 = v23;
  v29 = objc_msgSend(v25, "view");
  if (!v29)
    goto LABEL_57;
  v30 = v29;
  v31 = objc_msgSend(v29, "window");

  if (!v31)
  {

    return;
  }
  objc_msgSend(v15, "CGRectValue");
  rect1.origin.x = v32;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = objc_msgSend(v25, "view");
  if (!v39)
    goto LABEL_58;
  v40 = v39;
  objc_msgSend(v39, "frame");
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v48 = v47;

  objc_msgSend(v28, "convertRect:toView:", 0, v42, v44, v46, v48);
  objc_msgSend(v31, "convertRect:fromWindow:", 0);
  v87.origin.x = v49;
  v87.origin.y = v50;
  v87.size.width = v51;
  v87.size.height = v52;
  v83.origin.x = rect1.origin.x;
  v83.origin.y = v34;
  v83.size.width = v36;
  v83.size.height = v38;
  if (!CGRectIntersectsRect(v83, v87))
  {

    return;
  }
  v53 = objc_msgSend(v2, "subviews");
  v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v53, v5);

  if ((v54 & 0xC000000000000001) != 0)
  {
    v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v54);
    goto LABEL_39;
  }
  if (!*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    return;
  }
  v55 = *(id *)(v54 + 32);
LABEL_39:
  v56 = v55;
  objc_msgSend(v55, "frame", swift_bridgeObjectRelease(v54).n128_f64[0]);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v64 = v63;
  objc_msgSend(v15, "CGRectValue");
  MinY = CGRectGetMinY(v84);
  if ((a1 & 1) == 0)
  {
    objc_msgSend(v2, "bounds", MinY);
    MinY = CGRectGetHeight(v85);
  }
  v66 = MinY * 0.5;
  v86.origin.x = v58;
  v86.origin.y = v60;
  v86.size.width = v62;
  v86.size.height = v64;
  v67 = v66 - CGRectGetHeight(v86) * 0.5;
  if (objc_msgSend(v25, "_appearState") == 1 || objc_msgSend(v25, "_appearState") == 3)
  {
    objc_msgSend(v56, "setFrame:", v58, v67, v62, v64);

  }
  else
  {
    v69 = (void *)objc_opt_self(UIView);
    v70 = swift_allocObject(&unk_1005E62C8, 56, 7);
    *(_QWORD *)(v70 + 16) = v56;
    *(double *)(v70 + 24) = v58;
    *(double *)(v70 + 32) = v67;
    *(double *)(v70 + 40) = v62;
    *(double *)(v70 + 48) = v64;
    v77 = sub_1003C6194;
    v78 = v70;
    *(_QWORD *)&rect1.origin.y = _NSConcreteStackBlock;
    *(_QWORD *)&rect1.size.width = 1107296256;
    *(_QWORD *)&rect1.size.height = sub_10004A82C;
    v76 = &unk_1005E62E0;
    v71 = _Block_copy(&rect1.origin.y);
    v72 = v78;
    v73 = v56;
    swift_release(v72);
    objc_msgSend(v69, "animateWithDuration:delay:options:animations:completion:", v74, v71, 0, v19, 0.0);

    _Block_release(v71);
  }
}

id sub_1003C4F00()
{
  return sub_1001405E0(0, type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView);
}

id sub_1003C4F48(char a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v2 = a1 & 1;
  v3 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_backgroundView;
  v4 = type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4));
  v6 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView;
  v8 = type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView();
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v9 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_hostView;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_direction] = v2;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerTransition();
  return objc_msgSendSuper2(&v11, "init");
}

void sub_1003C5098(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char *v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat MidY;
  void *v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void **v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  void *v67;
  id v68;
  void **aBlock;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  CGRect v75;
  CGRect v76;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v3)
    goto LABEL_10;
  v4 = v3;
  v5 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v5)
  {
    v6 = v4;
LABEL_9:

LABEL_10:
    objc_msgSend(a1, "completeTransition:", 0);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v7)
  {

    goto LABEL_9;
  }
  v68 = v7;
  v8 = objc_msgSend(v4, "view");
  if (v8)
  {
    v9 = v8;
    v10 = *(char **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_backgroundView];
    v11 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v10, "dismissPresentedViewController:");
    objc_msgSend(v9, "bounds");
    objc_msgSend(v10, "setFrame:");
    objc_msgSend(v10, "setAutoresizingMask:", 18);
    v67 = v11;
    objc_msgSend(v10, "addGestureRecognizer:", v11);
    v12 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v10, "setBackgroundColor:", v12);

    objc_msgSend(v10, "setAlpha:", 0.05);
    swift_unknownObjectWeakAssign(&v10[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD14BackgroundView_presented], v6);
    objc_msgSend(v6, "preferredContentSize");
    v14 = v13;
    v16 = v15;
    v17 = *(char **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView];
    v18 = objc_msgSend(v4, "view");
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, "bounds");
      v21 = v20;
      v23 = v22;
      v25 = v24;
      v27 = v26;

      objc_msgSend(v17, "setFrame:", v21, v23, v25, v27);
      objc_msgSend(v17, "setAutoresizingMask:", 18);
      swift_unknownObjectWeakAssign(&v17[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_presented], v6);
      objc_msgSend(v17, "bounds");
      v28 = CGRectGetMidX(v75) - v14 * 0.5;
      objc_msgSend(v17, "bounds");
      MidY = CGRectGetMidY(v76);
      v30 = *(void **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_hostView];
      objc_msgSend(v30, "setFrame:", v28, MidY - v16 * 0.5, v14, v16);
      objc_msgSend(v30, "setAutoresizingMask:", 45);
      objc_msgSend(v30, "bounds");
      objc_msgSend(v68, "setFrame:");
      v31 = objc_msgSend(a1, "containerView");
      objc_msgSend(v31, "center");
      v33 = v32;
      v35 = v34;

      objc_msgSend(v10, "setCenter:", v33, v35);
      v36 = objc_msgSend(a1, "containerView");
      objc_msgSend(v36, "center");
      v38 = v37;
      v40 = v39;

      objc_msgSend(v17, "setCenter:", v38, v40);
      v41 = objc_msgSend(a1, "containerView");
      objc_msgSend(v41, "addSubview:", v10);

      v42 = objc_msgSend(a1, "containerView");
      objc_msgSend(v42, "addSubview:", v17);

      objc_msgSend(v17, "addSubview:", v30);
      objc_msgSend(v30, "addSubview:", v68);
      v43 = objc_msgSend(v17, "layer");
      v44 = objc_msgSend(v30, "layer");
      sub_1003C61AC(v43, v44);

      v45 = objc_msgSend(v17, "layer");
      sub_1003C6328(v45);

      v46 = (void *)objc_opt_self(UIView);
      v47 = swift_allocObject(&unk_1005E63B8, 24, 7);
      *(_QWORD *)(v47 + 16) = v1;
      v73 = sub_1003C6698;
      v74 = v47;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10004A82C;
      v72 = &unk_1005E63D0;
      v48 = _Block_copy(&aBlock);
      v49 = v74;
      v50 = v1;
      swift_release(v49);
      v51 = swift_allocObject(&unk_1005E6408, 24, 7);
      *(_QWORD *)(v51 + 16) = a1;
      v73 = sub_10028AD48;
      v74 = v51;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10016C02C;
      v72 = &unk_1005E6420;
      v52 = _Block_copy(&aBlock);
      v53 = v74;
      swift_unknownObjectRetain(a1);
      swift_release(v53);
      objc_msgSend(v46, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v48, v52, 0.4, 0.0, 1.0, 0.0);
      _Block_release(v52);
      _Block_release(v48);
      v54 = swift_allocObject(&unk_1005E6458, 24, 7);
      *(_QWORD *)(v54 + 16) = v50;
      v73 = sub_1003C66C4;
      v74 = v54;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10004A82C;
      v72 = &unk_1005E6470;
      v55 = _Block_copy(&aBlock);
      v56 = v74;
      v57 = v50;
      swift_release(v56);
      v58 = swift_allocObject(&unk_1005E64A8, 24, 7);
      *(_QWORD *)(v58 + 16) = a1;
      v73 = sub_10028AD48;
      v74 = v58;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10016C02C;
      v72 = &unk_1005E64C0;
      v59 = _Block_copy(&aBlock);
      v60 = v74;
      swift_unknownObjectRetain(a1);
      swift_release(v60);
      objc_msgSend(v46, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v55, v59, 0.53, 0.0, 0.68, 0.0);
      _Block_release(v59);
      _Block_release(v55);
      v61 = swift_allocObject(&unk_1005E64F8, 24, 7);
      swift_unknownObjectWeakInit(v61 + 16);
      v62 = swift_allocObject(&unk_1005E64F8, 24, 7);
      swift_unknownObjectWeakInit(v62 + 16);
      swift_retain();
      swift_retain();
      v63 = sub_1002F2520((uint64_t)sub_1003C66F0, v61, (uint64_t)sub_1003C670C, v62);
      swift_release_n(v61, 2, v64);
      swift_release_n(v62, 2, v65);
      v66 = *(_QWORD *)&v17[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations];
      *(_QWORD *)&v17[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations] = v63;

      swift_bridgeObjectRelease(v66);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003C5844(uint64_t a1)
{
  double v1;
  Class isa;
  NSString v3;
  id v4;

  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView), "layer"));
  if (!UIAccessibilityIsReduceMotionEnabled() && !UIAccessibilityIsReduceTransparencyEnabled())
  {
    sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
    isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKeyPath:", isa, v3);

  }
  LODWORD(v1) = 1.0;
  objc_msgSend(v4, "setOpacity:", v1);

}

void sub_1003C5918(uint64_t a1)
{
  id v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[8];

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView), "layer"));
  v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  v6[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v6[1] = v2;
  v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  v6[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v6[3] = v3;
  v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v6[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v6[5] = v4;
  v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v6[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v6[7] = v5;
  objc_msgSend(v1, "setTransform:", v6);

}

void sub_1003C5998(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  CGFloat m12;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  CGFloat v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  CGFloat v29;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  CGFloat aBlock;
  uint64_t v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;

  v3 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey);
  if (!v3)
  {
    objc_msgSend(a1, "completeTransition:", 0);
    return;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "superview");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "superview");

    if (v7)
    {
      v8 = objc_msgSend(v4, "superview");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v7, "layer");
        v11 = objc_msgSend(v9, "layer");
        sub_1003C61AC(v10, v11);

        v12 = objc_msgSend(v7, "layer");
        m12 = CATransform3DIdentity.m12;
        m13 = CATransform3DIdentity.m13;
        m14 = CATransform3DIdentity.m14;
        m21 = CATransform3DIdentity.m21;
        m22 = CATransform3DIdentity.m22;
        m23 = CATransform3DIdentity.m23;
        m24 = CATransform3DIdentity.m24;
        m32 = CATransform3DIdentity.m32;
        m31 = CATransform3DIdentity.m31;
        m34 = CATransform3DIdentity.m34;
        m33 = CATransform3DIdentity.m33;
        m42 = CATransform3DIdentity.m42;
        m41 = CATransform3DIdentity.m41;
        m44 = CATransform3DIdentity.m44;
        m43 = CATransform3DIdentity.m43;
        aBlock = CATransform3DIdentity.m11;
        v39 = *(_QWORD *)&m12;
        v40 = m13;
        v41 = m14;
        v42 = m21;
        v43 = m22;
        v44 = m23;
        v45 = m24;
        v46 = m31;
        v47 = m32;
        v48 = m33;
        v49 = m34;
        v50 = m41;
        v51 = m42;
        v52 = m43;
        v53 = m44;
        objc_msgSend(v12, "setTransform:", &aBlock);

        v20 = objc_msgSend(v7, "layer");
        aBlock = CATransform3DIdentity.m11;
        v39 = *(_QWORD *)&m12;
        v40 = m13;
        v41 = m14;
        v42 = m21;
        v43 = m22;
        v44 = m23;
        v45 = m24;
        v46 = m31;
        v47 = m32;
        v48 = m33;
        v49 = m34;
        v50 = m41;
        v51 = m42;
        v52 = m43;
        v53 = m44;
        objc_msgSend(v20, "setTransform:", &aBlock);

        v21 = (void *)objc_opt_self(UIView);
        *(double *)&v22 = COERCE_DOUBLE(swift_allocObject(&unk_1005E6318, 32, 7));
        *(_QWORD *)(v22 + 16) = v1;
        *(_QWORD *)(v22 + 24) = v7;
        v42 = COERCE_DOUBLE(sub_1003C6320);
        v43 = *(double *)&v22;
        aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        v39 = 1107296256;
        v40 = COERCE_DOUBLE(sub_10004A82C);
        v41 = COERCE_DOUBLE(&unk_1005E6330);
        v23 = _Block_copy(&aBlock);
        v24 = v43;
        v25 = v1;
        v26 = v7;
        swift_release(*(_QWORD *)&v24);
        *(double *)&v27 = COERCE_DOUBLE(swift_allocObject(&unk_1005E6368, 24, 7));
        *(_QWORD *)(v27 + 16) = a1;
        v42 = COERCE_DOUBLE(sub_10028A444);
        v43 = *(double *)&v27;
        aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
        v39 = 1107296256;
        v40 = COERCE_DOUBLE(sub_10016C02C);
        v41 = COERCE_DOUBLE(&unk_1005E6380);
        v28 = _Block_copy(&aBlock);
        v29 = v43;
        swift_unknownObjectRetain(a1);
        swift_release(*(_QWORD *)&v29);
        objc_msgSend(v21, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v23, v28, 0.4, 0.0, 1.0, 0.0);

        _Block_release(v28);
        _Block_release(v23);
        return;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

void sub_1003C5D38(int a1, id a2)
{
  id v2;

  v2 = objc_msgSend(a2, "layer");
  sub_1003C6328(v2);

}

id sub_1003C5DA0(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCModalBlurViewControllerTransition);
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition()
{
  return objc_opt_self(_TtC5Files36DOCModalBlurViewControllerTransition);
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView()
{
  return objc_opt_self(_TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD14BackgroundView);
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView()
{
  return objc_opt_self(_TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView);
}

uint64_t sub_1003C5E54(uint64_t a1, void *a2)
{
  void *v2;
  NSString v3;
  id v4;
  objc_super v6;

  v3 = a2;
  if (!a2)
    goto LABEL_7;
  if ((a1 != 0xD000000000000020 || a2 != (void *)0x800000010052F250)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000020, 0x800000010052F250, 0) & 1) == 0)
  {
    v3 = String._bridgeToObjectiveC()();
LABEL_7:
    v6.receiver = v2;
    v6.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerView();
    v4 = objc_msgSendSuper2(&v6, "_shouldAnimatePropertyWithKey:", v3);

    return (uint64_t)v4;
  }
  return 1;
}

id sub_1003C6030(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCModalBlurViewControllerView);
}

uint64_t type metadata accessor for DOCModalBlurViewControllerView()
{
  return objc_opt_self(_TtC5Files30DOCModalBlurViewControllerView);
}

uint64_t storeEnumTagSinglePayload for DOCModalBlurViewControllerTransition.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003C60A8 + 4 * byte_1004E6285[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003C60DC + 4 * byte_1004E6280[v4]))();
}

uint64_t sub_1003C60DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C60E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003C60ECLL);
  return result;
}

uint64_t sub_1003C60F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003C6100);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003C6104(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C610C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCModalBlurViewControllerTransition.Direction()
{
  return &type metadata for DOCModalBlurViewControllerTransition.Direction;
}

unint64_t sub_1003C612C()
{
  unint64_t result;

  result = qword_100652708;
  if (!qword_100652708)
  {
    result = swift_getWitnessTable(&unk_1004E634C, &type metadata for DOCModalBlurViewControllerTransition.Direction);
    atomic_store(result, (unint64_t *)&qword_100652708);
  }
  return result;
}

uint64_t sub_1003C6170()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_1003C6194()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

id sub_1003C61AC(void *a1, id a2)
{
  id v4;
  double v5;

  objc_msgSend(a2, "setCornerRadius:", 16.0);
  objc_msgSend(a2, "setCornerCurve:", kCACornerCurveContinuous);
  objc_msgSend(a2, "setMasksToBounds:", 1);
  if (qword_1006410E0 != -1)
    swift_once(&qword_1006410E0, sub_1003C3F8C);
  v4 = objc_msgSend((id)qword_100652620, "CGColor");
  objc_msgSend(a1, "setShadowColor:", v4);

  if (qword_1006410E8 != -1)
    swift_once(&qword_1006410E8, sub_1003C3FC4);
  objc_msgSend(a1, "setShadowRadius:", *(double *)&qword_100652628);
  objc_msgSend(a1, "setShadowOffset:", 0.0, 10.0);
  LODWORD(v5) = 1051931443;
  objc_msgSend(a1, "setShadowOpacity:", v5);
  return objc_msgSend(a1, "setAllowsGroupOpacity:", 1);
}

uint64_t sub_1003C62F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003C6320()
{
  uint64_t v0;

  sub_1003C5D38(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

id sub_1003C6328(void *a1)
{
  double v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  NSString v8;
  NSString v9;
  NSString v10;
  NSString v11;
  Class isa;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class v17;
  _BOOL4 IsReduceMotionEnabled;
  double v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  CATransform3D v25;
  CATransform3D v26;

  if (!UIAccessibilityIsReduceMotionEnabled() && !UIAccessibilityIsReduceTransparencyEnabled())
  {
    if (qword_1006410D8 != -1)
      swift_once(&qword_1006410D8, sub_1003C3F60);
    v3 = *(_QWORD *)algn_100652618;
    v4 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain(v3);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "initWithType:", v5, swift_bridgeObjectRelease(v3).n128_f64[0]);

    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setName:", v7);

    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setValue:forKey:", v8, v9);

    v10 = String._bridgeToObjectiveC()();
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setValue:forKey:", v10, v11);

    isa = Int._bridgeToObjectiveC()().super.super.isa;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setValue:forKey:", isa, v13);

    v14 = sub_10006922C(&qword_100644930);
    v15 = swift_allocObject(v14, 64, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v15 + 56) = sub_10004F2F0(0, &qword_100652710, CAFilter_ptr);
    *(_QWORD *)(v15 + 32) = v6;
    v16 = v6;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "setFilters:", v17, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
  LODWORD(v2) = 0;
  objc_msgSend(a1, "setOpacity:", v2);
  objc_msgSend(a1, "anchorPoint");
  objc_msgSend(a1, "setAnchorPoint:");
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  v19 = 1.15;
  if (IsReduceMotionEnabled)
    v19 = 1.0;
  v20 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v26.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v26.m13 = v20;
  v21 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v26.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v26.m23 = v21;
  v22 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v26.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v26.m33 = v22;
  v23 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v26.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v26.m43 = v23;
  CATransform3DScale(&v25, &v26, v19, v19, 1.0);
  v26 = v25;
  return objc_msgSend(a1, "setTransform:", &v26);
}

uint64_t sub_1003C6674()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C6698()
{
  uint64_t v0;

  sub_1003C5844(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003C66A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C66C4()
{
  uint64_t v0;

  sub_1003C5918(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003C66CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C66F0(uint64_t a1)
{
  uint64_t v1;

  sub_1003C4250(a1, v1, 1);
}

void sub_1003C670C(uint64_t a1)
{
  uint64_t v1;

  sub_1003C4250(a1, v1, 0);
}

id sub_1003C675C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithSuiteName:", v4);

  return v5;
}

uint64_t sub_1003C67C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003C67D4(a1, 0, a2);
}

uint64_t sub_1003C67CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1003C67D4(a1, 1, a2);
}

uint64_t sub_1003C67D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[15];
  char v18;

  v6 = sub_10006922C(&qword_100652810);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10006922C(&qword_100652818);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100062698(&qword_100652820, &qword_100652818, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v10, v14);
  v18 = a2;
  static PredicateExpressions.build_Arg<A>(_:)(&v18, &type metadata for Bool);
  a3[3] = sub_10006922C(&qword_100652828);
  a3[4] = sub_1003C7670();
  sub_10006CBAC(a3);
  v15 = sub_100062698(&qword_100652848, &qword_100652810, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v13, v9, v10, v6, v14, v15, &protocol witness table for Bool);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

void *sub_1003C696C()
{
  return &protocol witness table for String;
}

unint64_t sub_1003C6978()
{
  return 0xD000000000000026;
}

id sub_1003C6994(uint64_t a1)
{
  return sub_1003C700C(a1);
}

uint64_t sub_1003C69B8()
{
  return Image.init(_:bundle:)(0x6349796C696D6146, 0xEA00000000006E6FLL, 0);
}

uint64_t sub_1003C69E0()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void *v19;

  v0 = sub_10006922C(&qword_100652800);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Tips.UsesConstellation(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100652808);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.UsesConstellation.init(_:)(1, v11);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v8, v5, &protocol witness table for Tips.UsesConstellation);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v5;
  v19 = &protocol witness table for Tips.UsesConstellation;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>, 1);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v13, v9, OpaqueTypeConformance2);
  v18 = v9;
  v19 = (void *)OpaqueTypeConformance2;
  v15 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>, 1);
  v16 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v4, v0, v15);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v16;
}

void sub_1003C6B88(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000010052F4D0;
}

uint64_t sub_1003C6BA8()
{
  return sub_1000B0F84(&qword_1006527F8, (uint64_t)&unk_1004E63B4);
}

uint64_t sub_1003C6BCC(uint64_t a1)
{
  uint64_t result;

  result = sub_1000B0F84(&qword_100643AD8, (uint64_t)&unk_1004E63EC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *sub_1003C6C00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, __n128);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;

  v2 = type metadata accessor for Tips.Action(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10006922C(&qword_100652858);
  __chkstk_darwin(v38);
  v37 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v36 = (uint64_t *)((char *)&v28 - v8);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v28 - v10);
  v39 = _swiftEmptyArrayStorage;
  sub_1003C6E7C(0, 0, 0);
  v12 = v39;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = swift_bridgeObjectRetain(a1);
  v35 = v13;
  v29 = a1;
  if (v13)
  {
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v31 = *(_QWORD *)(v3 + 72);
    v32 = v16;
    v17 = a1 + v16;
    v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    v33 = v3;
    v34 = v2;
    do
    {
      v18 = v38;
      v19 = &v37[*(int *)(v38 + 48)];
      v30(v19, v17, v2, v14);
      v20 = (uint64_t)v36;
      v21 = (char *)v36 + *(int *)(v18 + 48);
      *v36 = v15;
      v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v22(v21, v19, v2);
      sub_1003C7758(v20, (uint64_t)v11);
      Tips.Action.with(index:)(*v11);
      sub_1003C77A0((uint64_t)v11);
      v12 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
      {
        sub_1003C6E7C(0, v12[2] + 1, 1);
        v12 = v39;
      }
      v24 = v12[2];
      v23 = v12[3];
      if (v24 >= v23 >> 1)
      {
        sub_1003C6E7C(v23 > 1, v24 + 1, 1);
        v12 = v39;
      }
      ++v15;
      v12[2] = v24 + 1;
      v25 = v31;
      v26 = (char *)v12 + v32 + v24 * v31;
      v2 = v34;
      v22(v26, v5, v34);
      v39 = v12;
      v17 += v25;
      v3 = v33;
    }
    while (v35 != v15);
  }
  swift_bridgeObjectRelease(v29);
  return v12;
}

size_t sub_1003C6E7C(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_1003C6E98(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

size_t sub_1003C6E98(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10006922C(&qword_100652850);
  v11 = *(_QWORD *)(type metadata accessor for Tips.Action(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = type metadata accessor for Tips.Action(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_release(a4);
  return (size_t)v15;
}

id sub_1003C700C(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  unint64_t v7;
  Swift::String v8;
  Swift::String v9;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v9._countAndFlagsBits = 0xD000000000000027;
    v9._object = (void *)0x800000010052F4A0;
    v3._object = (void *)0x800000010052F480;
    v3._countAndFlagsBits = 0xD000000000000017;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v9);

    v8 = v6;
    v7 = sub_10008B9BC();
    return (id)Text.init<A>(_:)(&v8, &type metadata for String, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003C70DC(uint64_t a1)
{
  id result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  unint64_t v7;
  Swift::String v8;
  Swift::String v9;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v9._countAndFlagsBits = 0xD000000000000061;
    v9._object = (void *)0x800000010052F410;
    v3._object = (void *)0x800000010052F3D0;
    v3._countAndFlagsBits = 0xD000000000000032;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v9);

    v8 = v6;
    v7 = sub_10008B9BC();
    return (id)Text.init<A>(_:)(&v8, &type metadata for String, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1003C71AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _QWORD *result;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v17[16];
  Swift::String v18;
  Swift::String v19;

  v0 = type metadata accessor for Tips.Action(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = (id)_DocumentManagerBundle(v4);
  if (result)
  {
    v6 = result;
    v7._countAndFlagsBits = 0xD000000000000016;
    v19._countAndFlagsBits = 0xD000000000000040;
    v19._object = (void *)0x800000010052F380;
    v7._object = (void *)0x800000010052F360;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v19);

    v18 = v10;
    v11 = sub_10008B9BC();
    Tips.Action.init<A>(id:title:perform:)(0xD000000000000014, 0x800000010052F340, &v18, DOCSplitBrowserViewController.didCommitPreview(of:), 0, &type metadata for String, v11);
    v12 = sub_10006922C(&qword_100652850);
    v13 = *(unsigned __int8 *)(v1 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject(v12, v14 + *(_QWORD *)(v1 + 72), v13 | 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v1 + 32))(v15 + v14, v3, v0);
    v16 = sub_1003C6C00(v15);
    swift_setDeallocating(v15);
    swift_arrayDestroy(v15 + v14, *(_QWORD *)(v15 + 16), v0);
    swift_deallocClassInstance(v15, 32, 7);
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C7370()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v0 = sub_10006922C(&qword_100646A10);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Tips.Rule(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1006410F0 != -1)
    swift_once(&qword_1006410F0, sub_1000B10A4);
  v9 = sub_10007E788(v0, (uint64_t)qword_100652718);
  v10 = swift_beginAccess(v9, v29, 0, 0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v1 + 16);
  v11(v4, v9, v0, v10);
  Tips.Rule.init<A>(_:_:)(v4, sub_1003C67C4, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v12 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  if (qword_1006410F8 != -1)
    swift_once(&qword_1006410F8, sub_1000B1080);
  v14 = sub_10007E788(v0, (uint64_t)qword_100652730);
  v15 = swift_beginAccess(v14, v28, 0, 0);
  v11(v4, v14, v0, v15);
  Tips.Rule.init<A>(_:_:)(v4, sub_1003C67CC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v16 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13(v8, v5);
  if (qword_100641100 != -1)
    swift_once(&qword_100641100, sub_1000B0FC0);
  v17 = sub_10007E788(v0, (uint64_t)qword_100652748);
  v18 = swift_beginAccess(v17, v27, 0, 0);
  v11(v4, v17, v0, v18);
  Tips.Rule.init<A>(_:_:)(v4, sub_1003C67CC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v19 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13(v8, v5);
  v20 = static Tips.RuleBuilder.buildPartialBlock(first:)(v12);
  v21 = swift_bridgeObjectRelease(v12);
  v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v20, v16, v21);
  swift_bridgeObjectRelease(v20);
  v23 = swift_bridgeObjectRelease(v16);
  v24 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v22, v19, v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v19);
  return v24;
}

unint64_t sub_1003C7670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652830;
  if (!qword_100652830)
  {
    v1 = sub_10007E830(&qword_100652828);
    sub_100062698(&qword_100652838, &qword_100652818, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    sub_1003C76F4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100652830);
  }
  return result;
}

unint64_t sub_1003C76F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652840;
  if (!qword_100652840)
  {
    v1 = sub_10007E830(&qword_100652810);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100652840);
  }
  return result;
}

uint64_t sub_1003C7758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100652858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C77A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_100652858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DOCSymbolImageBarButtonItem.isEqual(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unsigned int v14;
  double v15;
  id v16;
  id v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  char v26;
  id v27;
  id v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  objc_super v39;
  char *v40;
  _QWORD v41[3];
  uint64_t v42;

  v2 = v1;
  sub_1000685A8(a1, (uint64_t)v41);
  if (!v42)
  {
    sub_10007EB54((uint64_t)v41);
    return 0;
  }
  v4 = (objc_class *)type metadata accessor for DOCSymbolImageBarButtonItem();
  if ((swift_dynamicCast(&v40, v41, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v40;
  sub_1000685A8(a1, (uint64_t)v41);
  v6 = v42;
  if (v42)
  {
    v7 = sub_10007E7A0(v41, v42);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = __chkstk_darwin(v7);
    v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100068588(v41);
  }
  else
  {
    v12 = 0;
  }
  v39.receiver = v2;
  v39.super_class = v4;
  v14 = objc_msgSendSuper2(&v39, "isEqual:", v12);
  *(_QWORD *)&v15 = swift_unknownObjectRelease(v12).n128_u64[0];
  if (v14)
  {

    return 1;
  }
  v16 = objc_msgSend(v2, "target", v15);
  v17 = objc_msgSend(v5, "target");
  v19 = v17;
  if (!v16)
  {
    if (!v17)
      goto LABEL_17;

    swift_unknownObjectRelease(v19);
    return 0;
  }
  if (!v17)
  {

    swift_unknownObjectRelease(v16);
    return 0;
  }
  swift_unknownObjectRelease(v16);
  *(_QWORD *)&v18 = swift_unknownObjectRelease(v19).n128_u64[0];
  if (v16 != v19)
    goto LABEL_36;
LABEL_17:
  v20 = objc_msgSend(v2, "action", v18);
  v21 = objc_msgSend(v5, "action");
  if (!v20)
  {
    if (!v21)
      goto LABEL_23;
LABEL_36:

    return 0;
  }
  if (!v21 || (static Selector.== infix(_:_:)(v20, v21) & 1) == 0)
    goto LABEL_36;
LABEL_23:
  v22 = objc_msgSend(v2, "primaryAction");
  v23 = objc_msgSend(v5, "primaryAction");
  v24 = v23;
  if (v22)
  {
    if (!v23)
    {
LABEL_32:

      return 0;
    }
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v25 = v22;
    v26 = static NSObject.== infix(_:_:)(v25, v24);

    if ((v26 & 1) == 0)
      goto LABEL_36;
  }
  else if (v23)
  {
LABEL_34:

    return 0;
  }
  v22 = objc_msgSend(v2, "menu");
  v27 = objc_msgSend(v5, "menu");
  v24 = v27;
  if (!v22)
  {
    if (!v27)
      goto LABEL_35;
    goto LABEL_34;
  }
  if (!v27)
    goto LABEL_32;
  sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
  v28 = v22;
  v29 = static NSObject.== infix(_:_:)(v28, v24);

  if ((v29 & 1) == 0)
    goto LABEL_36;
LABEL_35:
  v30 = objc_msgSend(v2, "isEnabled");
  if (v30 != objc_msgSend(v5, "isEnabled"))
    goto LABEL_36;
  v31 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor];
  v32 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 8];
  v33 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 16];
  v34 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor];
  v35 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 8];
  v36 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 16];
  if (v31 == v34 && v32 == v35)
  {

    return v33 == v36;
  }
  v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, v34, v35, 0);

  result = 0;
  if ((v37 & 1) != 0)
    return v33 == v36;
  return result;
}

void DOCSymbolImageBarButtonItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCSymbolImageBarButtonItem", 33, "init()", 6, 0);
  __break(1u);
}

id DOCSymbolImageBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSymbolImageBarButtonItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_1003C7D14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for DOCSymbolImageBarButtonItem.Descriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for DOCSymbolImageBarButtonItem.Descriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for DOCSymbolImageBarButtonItem.Descriptor()
{
  return &type metadata for DOCSymbolImageBarButtonItem.Descriptor;
}

uint64_t DOCMetadataFolderSizingViewModel.isCloudItem.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DOCMetadataFolderSizingViewModel.itemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DOCMetadataFolderSizingViewModel.folderSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t DOCMetadataFolderSizingViewModel.folderSize.setter(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = result;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 40) = a4;
  *(_BYTE *)(v4 + 41) = HIBYTE(a4) & 1;
  return result;
}

uint64_t (*DOCMetadataFolderSizingViewModel.folderSize.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCMetadataFolderSizingViewModel.updateFolderSize(_:)(uint64_t result, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = result;
  *(_QWORD *)(v4 + 24) = a2 & 1;
  *(_QWORD *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 40) = a4 & 1;
  *(_BYTE *)(v4 + 41) = 0;
  return result;
}

uint64_t DOCMetadataFolderSizingViewModel.shouldGrayTextOut.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v5;

  if ((*(_BYTE *)(v0 + 41) & 1) != 0 || (*(_BYTE *)(v0 + 24) & 1) != 0 || (*(_BYTE *)(v0 + 40) & 1) != 0)
    return 1;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1 == -1 || v2 == -1)
    return 1;
  v5 = *(_BYTE *)v0 & (v1 < 0);
  if (v2 >= 0)
    return v5;
  else
    return 0;
}

uint64_t DOCMetadataFolderSizingViewModel.sizeText.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  Swift::String v72;

  if ((*(_BYTE *)(v1 + 41) & 1) == 0 && (*(_BYTE *)(v1 + 24) & 1) == 0 && (*(_BYTE *)(v1 + 40) & 1) == 0)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v1 + 32);
    if (v2 != -1 && v3 != -1)
    {
      if ((*(_BYTE *)v1 & 1) != 0 && (v3 & 0x8000000000000000) == 0)
      {
        v11 = (void *)objc_opt_self(NSByteCountFormatter);
        v12 = objc_msgSend(v11, "stringFromByteCount:countStyle:", v3, 0);
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;

        if (v2 < 0)
        {
          v19 = v15;
        }
        else
        {
          v71 = v13;
          v16 = objc_msgSend(v11, "stringFromByteCount:countStyle:", v2, 0);
          v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
          v19 = v18;

          v20 = *(_QWORD *)(v1 + 8);
          if ((v20 & 0x8000000000000000) == 0)
          {
            v21._countAndFlagsBits = 0xD00000000000004ELL;
            v22._object = (void *)0x800000010052F660;
            v21._object = (void *)0x800000010052F730;
            v22._countAndFlagsBits = 0xD00000000000001DLL;
            v23 = DOCLocalizedDictionaryString(_:comment:)(v22, v21);
            countAndFlagsBits = v23._countAndFlagsBits;
            object = v23._object;
            v26 = sub_10006922C((uint64_t *)&unk_100644560);
            v27 = swift_allocObject(v26, 152, 7);
            *(_OWORD *)(v27 + 16) = xmmword_1004D9880;
            *(_QWORD *)(v27 + 56) = &type metadata for String;
            v28 = sub_10006A638();
            *(_QWORD *)(v27 + 32) = v17;
            *(_QWORD *)(v27 + 40) = v19;
            *(_QWORD *)(v27 + 96) = &type metadata for String;
            *(_QWORD *)(v27 + 104) = v28;
            *(_QWORD *)(v27 + 64) = v28;
            *(_QWORD *)(v27 + 72) = v71;
            *(_QWORD *)(v27 + 80) = v15;
            *(_QWORD *)(v27 + 136) = &type metadata for Int;
            *(_QWORD *)(v27 + 144) = &protocol witness table for Int;
            *(_QWORD *)(v27 + 112) = v20;
LABEL_26:
            v10 = static String.localizedStringWithFormat(_:_:)(countAndFlagsBits, object, v27);
            swift_bridgeObjectRelease(object);
            v40 = v27;
            goto LABEL_31;
          }
          swift_bridgeObjectRelease(v15);
        }
        swift_bridgeObjectRelease(v19);
        v29 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v3, 0);
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v32 = v31;

        v33 = *(_QWORD *)(v1 + 8);
        if ((v33 & 0x8000000000000000) == 0)
        {
          v34._countAndFlagsBits = 0xD00000000000001BLL;
          v35._countAndFlagsBits = 0xD000000000000041;
          v34._object = (void *)0x800000010052F6C0;
          v35._object = (void *)0x800000010052F6E0;
          v36 = DOCLocalizedDictionaryString(_:comment:)(v34, v35);
          v37 = sub_10006922C((uint64_t *)&unk_100644560);
          v38 = swift_allocObject(v37, 112, 7);
          *(_OWORD *)(v38 + 16) = xmmword_1004D4CE0;
          *(_QWORD *)(v38 + 56) = &type metadata for String;
          v39 = sub_10006A638();
          *(_QWORD *)(v38 + 32) = v30;
          *(_QWORD *)(v38 + 40) = v32;
          *(_QWORD *)(v38 + 96) = &type metadata for Int;
          *(_QWORD *)(v38 + 104) = &protocol witness table for Int;
          *(_QWORD *)(v38 + 64) = v39;
          *(_QWORD *)(v38 + 72) = v33;
          v10 = static String.localizedStringWithFormat(_:_:)(v36._countAndFlagsBits, v36._object, v38);
          swift_bridgeObjectRelease(v36._object);
          v40 = v38;
LABEL_31:
          swift_bridgeObjectRelease(v40);
          return v10;
        }
        swift_bridgeObjectRelease(v32);
      }
      if ((v2 & 0x8000000000000000) == 0)
      {
        v41 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
        objc_msgSend(v41, "setAllowedUnits:", 1);
        objc_msgSend(v41, "setAllowsNonnumericFormatting:", 1);
        v42 = objc_msgSend(v41, "stringFromByteCount:", v2);
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v45 = v44;

        if (v3 < 0)
        {
          v49 = v45;
        }
        else
        {
          v46 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v3, 0);
          v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
          v49 = v48;

          v50 = *(_QWORD *)(v1 + 8);
          if ((v50 & 0x8000000000000000) == 0)
          {
            v51._countAndFlagsBits = 0xD00000000000003CLL;
            v52._object = (void *)0x800000010052F660;
            v51._object = (void *)0x800000010052F680;
            v52._countAndFlagsBits = 0xD00000000000001DLL;
            v53 = DOCLocalizedDictionaryString(_:comment:)(v52, v51);
            countAndFlagsBits = v53._countAndFlagsBits;
            object = v53._object;
            v54 = sub_10006922C((uint64_t *)&unk_100644560);
            v27 = swift_allocObject(v54, 152, 7);
            *(_OWORD *)(v27 + 16) = xmmword_1004D9880;
            *(_QWORD *)(v27 + 56) = &type metadata for String;
            v55 = sub_10006A638();
            *(_QWORD *)(v27 + 32) = v43;
            *(_QWORD *)(v27 + 40) = v45;
            *(_QWORD *)(v27 + 96) = &type metadata for String;
            *(_QWORD *)(v27 + 104) = v55;
            *(_QWORD *)(v27 + 64) = v55;
            *(_QWORD *)(v27 + 72) = v47;
            *(_QWORD *)(v27 + 80) = v49;
            *(_QWORD *)(v27 + 136) = &type metadata for Int;
            *(_QWORD *)(v27 + 144) = &protocol witness table for Int;
            *(_QWORD *)(v27 + 112) = v50;
            goto LABEL_26;
          }
          swift_bridgeObjectRelease(v45);
        }
        swift_bridgeObjectRelease(v49);
        v56 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
        objc_msgSend(v56, "setAllowedUnits:", 1);
        objc_msgSend(v56, "setAllowsNonnumericFormatting:", 1);
        v57 = objc_msgSend(v56, "stringFromByteCount:", v2);
        v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
        v60 = v59;

        if ((v3 & 0x8000000000000000) == 0)
        {
          v61 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v3, 0);
          v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
          v64 = v63;

          v65._countAndFlagsBits = 0xD00000000000003FLL;
          v65._object = (void *)0x800000010052F620;
          v66._countAndFlagsBits = 0x6F20402528204025;
          v66._object = (void *)0xEF296B736964206ELL;
          v67 = DOCLocalizedDictionaryString(_:comment:)(v66, v65);
          v68 = sub_10006922C((uint64_t *)&unk_100644560);
          v69 = swift_allocObject(v68, 112, 7);
          *(_OWORD *)(v69 + 16) = xmmword_1004D4CE0;
          *(_QWORD *)(v69 + 56) = &type metadata for String;
          v70 = sub_10006A638();
          *(_QWORD *)(v69 + 32) = v58;
          *(_QWORD *)(v69 + 40) = v60;
          *(_QWORD *)(v69 + 96) = &type metadata for String;
          *(_QWORD *)(v69 + 104) = v70;
          *(_QWORD *)(v69 + 64) = v70;
          *(_QWORD *)(v69 + 72) = v62;
          *(_QWORD *)(v69 + 80) = v64;
          v10 = static String.localizedStringWithFormat(_:_:)(v67._countAndFlagsBits, v67._object, v69);
          swift_bridgeObjectRelease(v67._object);
          v40 = v69;
          goto LABEL_31;
        }
        swift_bridgeObjectRelease(v60);
      }
      return 11565;
    }
  }
  result = (uint64_t)(id)_DocumentManagerBundle(a1);
  if (result)
  {
    v6 = (void *)result;
    v7._countAndFlagsBits = 0xD000000000000010;
    v72._countAndFlagsBits = 0xD00000000000004DLL;
    v72._object = (void *)0x800000010052F5D0;
    v7._object = (void *)0x800000010052F5B0;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v72)._countAndFlagsBits;

    return v10;
  }
  __break(1u);
  return result;
}

__n128 initializeWithCopy for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCMetadataFolderSizingViewModel(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[42])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCMetadataFolderSizingViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCMetadataFolderSizingViewModel()
{
  return &type metadata for DOCMetadataFolderSizingViewModel;
}

uint64_t sub_1003C85D8()
{
  return sub_10021F534(&qword_100643D48, (uint64_t)&unk_1004DADF8);
}

uint64_t sub_1003C85FC()
{
  return sub_10021F534(&qword_100643D50, (uint64_t)&unk_1004DAE28);
}

uint64_t sub_1003C8620()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_1003C8650()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672D68);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672D68);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

uint64_t sub_1003C86A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10006922C(&qword_100652900);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100652908);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10030CCF0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 2, &type metadata for RenameFileIntent, v6);
  v7._object = (void *)0x800000010052F990;
  v7._countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004E6688);
  v9 = sub_10006922C(&qword_100652910);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_1004E66B0);
  v12 = sub_10006922C(&qword_100652918);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for RenameFileIntent, v6);
  return IntentParameterSummary.init(_:table:_:)(v2, 0x6E65746E49707041, 0xEA00000000007374, sub_1003C8870, 0, &type metadata for RenameFileIntent, v6);
}

uint64_t sub_1003C8870()
{
  uint64_t KeyPath;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1004E66D8);
  v1 = sub_10030CCF0();
  v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath, v1);
  swift_release(KeyPath);
  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v4 + 32) = v2;
  v8 = v4;
  specialized Array._endMutation()(v4);
  v5 = swift_retain();
  v6 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v8, &type metadata for RenameFileIntent, v1, v5);
  swift_bridgeObjectRelease(v8);
  swift_release(v2);
  return v6;
}

uint64_t sub_1003C8934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v16;
  _BYTE v17[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v10);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for IntentDialog(0);
  sub_10007E874(v13, qword_100652890);
  sub_10007E788(v13, (uint64_t)qword_100652890);
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x800000010052F8F0);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v16 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("RENAME_FILE_INTENT_NEEDS_FILE", 29, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Text of the dialog to provide a file parameter in the Rename File Intent", 72, v16);
  return IntentDialog.init(_:)(v12);
}

uint64_t sub_1003C8B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v16;
  _BYTE v17[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v10);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for IntentDialog(0);
  sub_10007E874(v13, qword_1006528A8);
  sub_10007E788(v13, (uint64_t)qword_1006528A8);
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010052F860);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v16 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("RENAME_FILE_INTENT_NEEDS_NAME", 29, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Text of the dialog to provide the new name parameter in the Rename File Intent", 78, v16);
  return IntentDialog.init(_:)(v12);
}

uint64_t sub_1003C8CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;

  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  v5 = type metadata accessor for DOCFileEntity(0);
  v4[10] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v6);
  v4[12] = swift_task_alloc(v6);
  return swift_task_switch(sub_1003C8D6C, 0, 0);
}

uint64_t sub_1003C8D6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;

  v1 = (_QWORD *)v0[12];
  v2 = v0[10];
  IntentParameter.wrappedValue.getter(v0 + 19);
  v3 = v0[19] & 1;
  v4 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v0[13] = v4;
  IntentParameter.wrappedValue.getter(v1);
  v5 = *(void **)((char *)v1 + *(int *)(v2 + 28));
  v0[14] = v5;
  v6 = v5;
  sub_1000EACF8((uint64_t)v1);
  IntentParameter.wrappedValue.getter(v0 + 2);
  v7 = v0[2];
  v8 = v0[3];
  v0[15] = v8;
  v9 = swift_task_alloc(64);
  v0[16] = v9;
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)(v9 + 32) = v6;
  *(_BYTE *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v4;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[17] = v10;
  v11 = sub_100298B84();
  *v10 = v0;
  v10[1] = sub_1003C8EBC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 4, 0, 0, 0xD000000000000025, 0x800000010052F960, sub_1003C99F0, v9, v11);
}

uint64_t sub_1003C8EBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1003C9014;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 128));
    v4 = sub_1003C8F28;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003C8F28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *(void **)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);

  swift_bridgeObjectRelease(v1);
  v6 = *(id *)(v0 + 32);
  sub_10012BCCC(v6, v4);
  v7 = sub_100379ACC();
  *(_QWORD *)(v0 + 40) = v7;
  v8 = sub_10021F534((unint64_t *)&qword_100643928, (uint64_t)&unk_1004DB0C8);
  v9 = sub_100170058();
  static IntentResult.result<A, B>(value:opensIntent:)(v4, v0 + 40, v5, &type metadata for RevealFileIntent, v8, v9);

  swift_release(v7);
  sub_1000EACF8(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C9014()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));

  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1003C9084()
{
  unint64_t result;

  result = qword_1006528C0;
  if (!qword_1006528C0)
  {
    result = swift_getWitnessTable(&unk_1004E65C8, &type metadata for RenameFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006528C0);
  }
  return result;
}

unint64_t sub_1003C90CC()
{
  unint64_t result;

  result = qword_1006528C8;
  if (!qword_1006528C8)
  {
    result = swift_getWitnessTable(&unk_1004E65F0, &type metadata for RenameFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006528C8);
  }
  return result;
}

uint64_t sub_1003C9110(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100570C1C, 1) + 8);
}

uint64_t sub_1003C9134(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100570BF4, 1);
}

uint64_t sub_1003C9144(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003C9A7C();
  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1003C917C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100641108 != -1)
    swift_once(&qword_100641108, sub_1003C8650);
  v2 = type metadata accessor for IntentAuthenticationPolicy(0);
  v3 = sub_10007E788(v2, (uint64_t)qword_100672D68);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003C91F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1006528FC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1000EA854;
  return sub_1003C8CFC(a1, v4, v5, v6);
}

uint64_t sub_1003C925C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1003C9330();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1003C9284(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10030CCF0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1003C92B0()
{
  unint64_t result;

  result = qword_1006528D8;
  if (!qword_1006528D8)
  {
    result = swift_getWitnessTable(&unk_1004E663C, &type metadata for RenameFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006528D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RenameFileIntent()
{
  return &type metadata for RenameFileIntent;
}

uint64_t sub_1003C9304()
{
  return sub_100062698(&qword_1006528E0, &qword_1006528E8, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1003C9330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v54;
  _QWORD v55[2];
  unsigned int v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD v70[3];

  v0 = sub_10006922C(&qword_1006458A8);
  __chkstk_darwin(v0);
  v65 = (char *)v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v59 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v64 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v62 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v60 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v61 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_10064C738);
  __chkstk_darwin(v10);
  v58 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InputConnectionBehavior(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v16);
  v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v55 - v20;
  v22 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v22);
  v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v25);
  v27 = (char *)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10006922C((uint64_t *)&unk_1006438D0);
  v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v69 = v7;
  v68(v27, 1, 1, v7);
  v28 = type metadata accessor for DOCFileEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v24, 1, 1, v28);
  if (qword_100641110 != -1)
    swift_once(&qword_100641110, sub_1003C8934);
  v29 = type metadata accessor for IntentDialog(0);
  v30 = sub_10007E788(v29, (uint64_t)qword_100652890);
  v31 = *(_QWORD *)(v29 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32(v21, v30, v29);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v33(v21, 0, 1, v29);
  v67 = v33;
  v33(v18, 1, 1, v29);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v35 = enum case for InputConnectionBehavior.default(_:);
  v66 = v34;
  ((void (*)(char *))v34)(v15);
  v36 = sub_10021F534((unint64_t *)&qword_100643D40, (uint64_t)&unk_1004DAF80);
  v57 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v27, v24, v21, v18, v15, v36);
  sub_10006922C(&qword_1006528F0);
  v68(v27, 1, 1, v69);
  v37 = type metadata accessor for String.IntentInputOptions(0);
  v70[0] = 0;
  v70[1] = 0;
  v38 = v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
  v39 = v15;
  if (qword_100641118 != -1)
    swift_once(&qword_100641118, sub_1003C8B18);
  v40 = sub_10007E788(v29, (uint64_t)qword_1006528A8);
  v32(v21, v40, v29);
  v67(v21, 0, 1, v29);
  v56 = v35;
  v66(v15, v35, v12);
  v58 = (char *)IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v27, v70, v38, v21, v15);
  v55[1] = sub_10006922C(&qword_1006458B0);
  v41 = v60;
  v42 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000010052F7B0);
  v43 = v62;
  static Locale.current.getter(v42);
  v44 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 104);
  v46 = v64;
  v59 = v12;
  v55[0] = v39;
  v47 = v63;
  v45(v64, enum case for LocalizedStringResource.BundleDescription.main(_:), v63);
  v48 = v61;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("RENAME_FILE_INTENT_OVERWRITE_PARAM_TITLE", 40, 2, v41, 0x6E65746E49707041, 0xEA00000000007374, v43, v46, "Title for the file or folder entity parameter of the Reveal Item intent", 71, 2);
  v49 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x800000010052F800);
  static Locale.current.getter(v49);
  v45(v46, v44, v47);
  LOWORD(v54) = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("RENAME_FILE_INTENT_OVERWRITE_PARAM_DESCRIPTION", 46, 2, v41, 0x6E65746E49707041, 0xEA00000000007374, v43, v46, "Description of the file entity parameter of the Reveal Item intent", 66, v54);
  v68(v27, 0, 1, v69);
  LOBYTE(v70[0]) = 0;
  v50 = type metadata accessor for Bool.IntentDisplayName(0);
  v51 = v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v65, 1, 1, v50);
  v67(v21, 1, 1, v29);
  v52 = v55[0];
  v66((char *)v55[0], v56, v59);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v48, v27, v70, v51, v21, v52);
  return v57;
}

void sub_1003C99F0(uint64_t a1)
{
  uint64_t v1;

  sub_100480430(a1, *(void ***)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1003C9A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003C9A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003C9A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1003C9A7C()
{
  unint64_t result;

  result = qword_100652920;
  if (!qword_100652920)
  {
    result = swift_getWitnessTable(&unk_1004E660C, &type metadata for RenameFileIntent);
    atomic_store(result, (unint64_t *)&qword_100652920);
  }
  return result;
}

void sub_1003C9B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v21;
  uint64_t v22;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v22 = 0;
  v10 = (void *)objc_opt_self(UIView);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 48) & ~v11;
  v13 = (char *)swift_allocObject(&unk_1005E6870, v12 + v9, v11 | 7);
  *((_QWORD *)v13 + 2) = &v22;
  *((_QWORD *)v13 + 3) = v3;
  *((_QWORD *)v13 + 4) = a1;
  *((_QWORD *)v13 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v14 = swift_allocObject(&unk_1005E6898, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_1003CA1AC;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_10006657C;
  v21 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005E68B0;
  v15 = _Block_copy(aBlock);
  v16 = v21;
  v17 = v3;
  swift_retain();
  swift_bridgeObjectRetain(a2);
  objc_msgSend(v10, "performWithoutAnimation:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v14, "", 104, 28, 40, 1);
  swift_release(v14);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else if (v22)
  {
    swift_release(v13);
    return;
  }
  __break(1u);
}

void sub_1003C9D20(void **a1, void *a2)
{
  NSString v4;
  Class isa;
  id v6;
  void *v7;
  objc_super v8;

  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8.receiver = a2;
  v8.super_class = (Class)type metadata accessor for DOCSidebarCollectionView();
  v6 = objc_msgSendSuper2(&v8, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v4, isa);

  v7 = *a1;
  *a1 = v6;

}

id sub_1003CA07C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1003CA0AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100649120;
  if (!qword_100649120)
  {
    v1 = objc_opt_self(UITouch);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100649120);
  }
  return result;
}

unint64_t sub_1003CA0E8()
{
  unint64_t result;
  unint64_t v1;

  result = qword_100657B00;
  if (!qword_100657B00)
  {
    v1 = sub_1003CA0AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100657B00);
  }
  return result;
}

uint64_t sub_1003CA130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003CA1AC()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_1003C9D20(*(void ***)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003CA1E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DOCBrowserHistoryShiftDirection.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int DOCBrowserHistoryShiftDirection.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

unint64_t sub_1003CA270()
{
  unint64_t result;

  result = qword_100652960;
  if (!qword_100652960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCHorizontalEdge, &type metadata for DOCHorizontalEdge);
    atomic_store(result, (unint64_t *)&qword_100652960);
  }
  return result;
}

unint64_t sub_1003CA2B8()
{
  unint64_t result;

  result = qword_100652968;
  if (!qword_100652968)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCVerticalEdge, &type metadata for DOCVerticalEdge);
    atomic_store(result, (unint64_t *)&qword_100652968);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCHorizontalEdge()
{
  return &type metadata for DOCHorizontalEdge;
}

uint64_t _s5Files17DOCHorizontalEdgeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003CA360 + 4 * byte_1004E6725[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003CA394 + 4 * asc_1004E6720[v4]))();
}

uint64_t sub_1003CA394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CA39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003CA3A4);
  return result;
}

uint64_t sub_1003CA3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003CA3B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003CA3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CA3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCVerticalEdge()
{
  return &type metadata for DOCVerticalEdge;
}

char *sub_1003CA3F0(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  objc_class *v14;
  double v15;
  id v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  double v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v50;
  objc_super v51;

  v4 = v3;
  ObjectType = swift_getObjectType(v4, a2);
  v9 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v9);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v4[OBJC_IVAR____TtC5Files15DOCRenameButton_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer] = 0;
  v13 = &v4[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  v14 = (objc_class *)type metadata accessor for DOCRenameButton();
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v51.receiver = v4;
  v51.super_class = v14;
  v15 = 0.0;
  v16 = objc_msgSendSuper2(&v51, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v17 = swift_allocObject(&unk_1005E6AE0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = v16;
  v19 = swift_retain();
  v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v19, 0, 0, 0, sub_100066584, v17);
  objc_msgSend(v18, "setDoc_primaryAction:", v20);

  v21 = v18;
  static UIButton.Configuration.filled()();
  v23 = type metadata accessor for UIButton.Configuration(0, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
  UIButton.configuration.setter(v11);

  v24 = swift_allocObject(&unk_1005E6B08, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = swift_allocObject(&unk_1005E6B30, 32, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = a1;
  aBlock[4] = sub_1003CB500;
  v50 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005E6B48;
  v26 = _Block_copy(aBlock);
  v27 = v50;
  v28 = (char *)v21;
  v29 = a1;
  swift_release(v27);
  objc_msgSend(v28, "setConfigurationUpdateHandler:", v26);
  _Block_release(v26);

  v30 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v28);
  objc_msgSend(v28, "addInteraction:", v30);
  v31 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  LODWORD(v32) = 0;
  objc_msgSend(v31, "setOpacity:", v32);
  v33 = objc_msgSend(v28, "layer");
  objc_msgSend(v33, "setMasksToBounds:", 1);

  v34 = objc_msgSend(v28, "layer");
  objc_msgSend(v34, "addSublayer:", v31);

  v35 = OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer;
  v36 = *(void **)&v28[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer];
  *(_QWORD *)&v28[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer] = v31;
  v37 = v31;

  v38 = objc_msgSend(v28, "traitCollection");
  v39 = objc_msgSend(v38, "userInterfaceStyle");

  v40 = *(void **)&v28[v35];
  if (v40)
  {
    if (v39 == (id)2)
      v15 = 1.0;
    v41 = objc_allocWithZone((Class)UIColor);
    v42 = v40;
    v43 = objc_msgSend(v41, "initWithWhite:alpha:", v15, 0.04);
    v44 = objc_msgSend(v43, "CGColor");

    objc_msgSend(v42, "setBackgroundColor:", v44);
  }
  sub_10004F2F0(0, &qword_100646BC8, UITraitCollection_ptr);
  v45 = v28;
  v46 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v47 = UIView.registerForTraitChanges<A>(_:handler:)(v46, sub_1003CB2D4, 0, ObjectType);

  swift_unknownObjectRelease(v47);
  swift_bridgeObjectRelease(v46);

  swift_release(a3);
  return v45;
}

uint64_t sub_1003CA89C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  char *v31;
  unint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  id v45;
  uint64_t KeyPath;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double Width;
  double top;
  double leading;
  double bottom;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  id v78;
  char v79[24];
  CGRect v80;

  v75 = a3;
  v77 = a2;
  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4);
  v76 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10006922C((uint64_t *)&unk_10064A080);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v70 - v17;
  v20 = type metadata accessor for UIButton.Configuration(0, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIButton.configuration.getter(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    return sub_10026187C((uint64_t)v18);
  v72 = v12;
  v73 = v16;
  v26 = v9;
  v27 = v76;
  v74 = a1;
  v28 = v77 + 16;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v18, v20);
  swift_beginAccess(v28, v79, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v28, v29);
  if (!Strong)
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  v31 = (char *)Strong;
  v32 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files15DOCRenameButton_text + 8);
  v71 = v21;
  if (v32)
  {
    v77 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files15DOCRenameButton_text);
    v70 = v32;
  }
  else
  {
    v77 = 0;
    v70 = 0xE000000000000000;
  }
  v33 = v8;
  v34 = v24;
  v35 = v27;
  v36 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v72, enum case for UIButton.Configuration.CornerStyle.dynamic(_:), v26);
  swift_bridgeObjectRetain(v32);
  UIButton.Configuration.cornerStyle.setter(v36);
  v37 = (void *)objc_opt_self(UIColor);
  v38 = UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v37, "labelColor"));
  v39 = (id)DOCFrameworkBundle(v38);
  v40 = v31;
  v41 = objc_msgSend(v31, "traitCollection");
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v37, "colorNamed:inBundle:compatibleWithTraitCollection:", v42, v39, v41);

  UIButton.Configuration.baseBackgroundColor.setter(v43);
  v44 = v75;
  v45 = objc_msgSend(v40, "traitCollection");
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)(v77, v70, v35);
  KeyPath = swift_getKeyPath(&unk_1004E6858);
  *(&v70 - 2) = __chkstk_darwin(KeyPath);
  v47 = swift_getKeyPath(&unk_1004E6888);
  v78 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v44, v45);
  v48 = sub_1002793FC();
  AttributedString.subscript.setter(&v78, v47, v48);

  v49 = v40;
  v50 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v33, 0, 1, v50);
  UIButton.Configuration.attributedTitle.setter(v33);
  v52 = swift_unknownObjectWeakLoadStrong(&v40[OBJC_IVAR____TtC5Files15DOCRenameButton_delegate], v51);
  if (v52)
  {
    v53 = v52;
    if (*(_QWORD *)(*(_QWORD *)(v52 + OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext)
                   + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave))
    {
      v54 = (void *)sub_1000D6F84();
      objc_msgSend(v54, "frame");
      v56 = v55;
      v58 = v57;
      v60 = v59;
      v62 = v61;

      v80.origin.x = v56;
      v80.origin.y = v58;
      v80.size.width = v60;
      v80.size.height = v62;
      Width = CGRectGetWidth(v80);
      swift_unknownObjectRelease(v53);
      top = 0.0;
      leading = 0.0;
      bottom = 0.0;
    }
    else
    {
      top = NSDirectionalEdgeInsetsZero.top;
      leading = NSDirectionalEdgeInsetsZero.leading;
      bottom = NSDirectionalEdgeInsetsZero.bottom;
      Width = NSDirectionalEdgeInsetsZero.trailing;
      swift_unknownObjectRelease(v52);
    }
  }
  else
  {
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    Width = NSDirectionalEdgeInsetsZero.trailing;
  }
  v67 = v73;
  v68 = v20;
  UIButton.Configuration.contentInsets.setter(top + 10.0, leading + 10.0, bottom + 10.0, Width + 10.0);
  v69 = v71;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v34, v68);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v67, 0, 1, v68);
  UIButton.configuration.setter(v67);

  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v34, v68);
}

void sub_1003CB084(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  v14 = swift_allocObject(a6, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  v20[4] = a7;
  v21 = v14;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10004A82C;
  v20[3] = a8;
  v15 = _Block_copy(v20);
  v16 = v21;
  v17 = a1;
  v18 = a3;
  v19 = a4;
  swift_unknownObjectRetain(a5);
  objc_msgSend(a5, "addAnimations:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);

  swift_unknownObjectRelease(a5);
}

double sub_1003CB1A0()
{
  uint64_t v0;
  double result;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files15DOCRenameButton_delegate);

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCRenameButton_text + 8)).n128_u64[0];
  return result;
}

id sub_1003CB1E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRenameButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCRenameButton()
{
  return objc_opt_self(_TtC5Files15DOCRenameButton);
}

uint64_t sub_1003CB27C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003CB2A0()
{
  return sub_1003CB2B0();
}

id sub_1003CB2A8()
{
  return sub_1003CB2B0();
}

id sub_1003CB2B0()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer);
  if (result)
    return objc_msgSend(result, "setOpacity:");
  return result;
}

void sub_1003CB2D8(char *a1)
{
  id v2;
  id v3;
  void *v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = *(void **)&a1[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer];
  if (v4)
  {
    if (v3 == (id)2)
      v5 = 1.0;
    else
      v5 = 0.0;
    v6 = objc_allocWithZone((Class)UIColor);
    v7 = v4;
    v8 = objc_msgSend(v6, "initWithWhite:alpha:", v5, 0.04);
    v9 = objc_msgSend(v8, "CGColor");

    objc_msgSend(v7, "setBackgroundColor:", v9);
  }
}

uint64_t sub_1003CB3E0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  BOOL v9;

  v5 = &v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text + 8];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  result = swift_bridgeObjectRetain(a2);
  if (a2)
  {
    if (v6)
    {
      v9 = v7 == a1 && v6 == a2;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v7, v6, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v6);
    }
  }
  else if (!v6)
  {
    return result;
  }
  objc_msgSend(v2, "setNeedsUpdateConfiguration");
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1003CB48C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB4B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CB4D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB500(uint64_t a1)
{
  uint64_t v1;

  return sub_1003CA89C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003CB514()
{
  return 8;
}

uint64_t sub_1003CB520(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003CB528(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1003CB53C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003CB55C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;

  v41 = a1;
  v7 = type metadata accessor for UIButton.Configuration.Size(0);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin(v7);
  v42 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v39 - v19;
  v22 = type metadata accessor for UIButton.Configuration(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a3;
  UIButton.configuration.getter(v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
    return sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_10064A080);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v20, v22);
  if (a4)
    v45 = a4;
  else
    v45 = v46;
  v40 = type metadata accessor for DOCLevelOfDetailButton.Metrics(0);
  v28 = *(void **)(v47 + *(int *)(v40 + 20));
  v29 = a4;
  swift_bridgeObjectRetain(a2);
  if (v28)
  {
    v30 = v28;
    v31 = objc_msgSend(v45, "traitCollection");
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)(v41, a2, v11);
    KeyPath = swift_getKeyPath(&unk_1004E6B00);
    __chkstk_darwin(KeyPath);
    *(&v39 - 2) = v33;
    v34 = swift_getKeyPath(&unk_1004E6B30);
    v48 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v30, v31);
    v35 = sub_1002793FC();
    AttributedString.subscript.setter(&v48, v34, v35);

    v36 = type metadata accessor for AttributedString(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v14, 0, 1, v36);
    UIButton.Configuration.attributedTitle.setter(v14);

  }
  else
  {
    UIButton.Configuration.title.setter(v41, a2);
  }
  v37 = v42;
  v38 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v47, v44);
  UIButton.Configuration.buttonSize.setter(v37);

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  if ((*(_BYTE *)(v38 + *(int *)(v40 + 24)) & 1) == 0)
    UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v45, "tintColor"));
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v25, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
  UIButton.configuration.setter(v17);

  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
}

char *sub_1003CB974(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString *v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t ObjCClassMetadata;
  NSString v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  objc_super v23;

  v3 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metadataView];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metadataView]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics];
  v5 = enum case for UIButton.Configuration.Size.medium(_:);
  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = type metadata accessor for DOCLevelOfDetailButton.Metrics(0);
  *(_QWORD *)&v4[*(int *)(v7 + 20)] = UIFontTextStyleFootnote;
  v4[*(int *)(v7 + 24)] = 0;
  v8 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakAssign(v3, a1);
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for DOCLevelOfDetailButton(0);
  v9 = UIFontTextStyleFootnote;
  v10 = objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = (void *)objc_opt_self(DOCAXIdentifier);
  v12 = (char *)v10;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v11, "itemInfoView"));
  v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "levelOfDetailButton");
  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v17 = v16;
    v14 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  objc_msgSend(v12, "setAccessibilityIdentifier:", v14, v15);

  sub_1003CBC58();
  KeyPath = swift_getKeyPath(&unk_1004E6AD8);
  v19 = swift_allocObject(&unk_1005E6F68, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_1003DB4D4, v19, &protocol witness table for NSObject);

  swift_release(KeyPath);
  swift_release(v19);

  v21 = *(void **)&v12[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext] = v20;

  return v12;
}

void sub_1003CBB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  BOOL v11;
  char v12[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = sub_1003D0F34();
    v8 = &v5[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
    v9 = *(id *)&v5[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
    v10 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8];
    *(_QWORD *)v8 = v6;
    *((_QWORD *)v8 + 1) = v7;
    if (v7)
    {
      if (v10)
      {
        v11 = v6 == v9 && v10 == v7;
        if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0) & 1) != 0)
          goto LABEL_12;
      }
    }
    else if (!v10)
    {

      return;
    }
    objc_msgSend(v5, "setNeedsUpdateConfiguration", v9);
    objc_msgSend(v5, "layoutBelowIfNeeded");
LABEL_12:

    swift_bridgeObjectRelease(v10);
  }
}

void sub_1003CBC58()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  double v25;
  double v26;
  uint64_t v27;
  __n128 v28;
  void *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration.Size(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metadataView]);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = sub_1003D0F34();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  v15 = *(id *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8];
  *(_QWORD *)v14 = v11;
  *((_QWORD *)v14 + 1) = v13;
  if (v13)
  {
    if (v16)
    {
      v17 = v11 == v15 && v13 == v16;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v16, 0) & 1) != 0)
        goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    objc_msgSend(v1, "setNeedsUpdateConfiguration", v15);
    objc_msgSend(v1, "layoutBelowIfNeeded");
LABEL_14:
    swift_bridgeObjectRelease(v16);
  }
  v18 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics];
  v19 = (void *)objc_opt_self(UIDevice);

  static UIButton.Configuration.borderless()(v20);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v18, v2);
  UIButton.Configuration.buttonSize.setter(v5);

  v22 = type metadata accessor for UIButton.Configuration(0, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  UIButton.configuration.setter(v8);
  v23 = swift_allocObject(&unk_1005E6F68, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16);
  aBlock[4] = sub_1003DB904;
  v31 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005E7250;
  v24 = _Block_copy(aBlock);
  objc_msgSend(v1, "setConfigurationUpdateHandler:", v24, swift_release(v31).n128_f64[0]);
  _Block_release(v24);
  LODWORD(v25) = 1144750080;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 0, v25);
  LODWORD(v26) = 1144750080;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 1, v26);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v27 = swift_allocObject(&unk_1005E6F68, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v29 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v28, 0, 0, 0, sub_1003DB90C, v27);
  objc_msgSend(v1, "setDoc_primaryAction:", v29);

}

void sub_1003CBFB4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (uint64_t *)(Strong + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle);
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8);
    if (v7)
    {
      v8 = *v6;
      v9 = v7;
    }
    else
    {
      v8 = 0;
      v9 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain(v7);
    v10 = v5;
    sub_1003CB55C(v8, v9, a1, v5);
    swift_bridgeObjectRelease(v9);

  }
}

void sub_1003CC074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metadataView, v5);

    if (v7)
    {
      objc_msgSend(v7, "setLevelOfDetail:", objc_msgSend(v7, "levelOfDetail") == 0);

    }
  }
}

double sub_1003CC174()
{
  uint64_t v0;
  double result;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metadataView);

  sub_1003DB8C8(v0 + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1003CC1C4()
{
  return sub_1001405E0(0, (uint64_t (*)(void))type metadata accessor for DOCLevelOfDetailButton);
}

uint64_t sub_1003CC230()
{
  return type metadata accessor for DOCLevelOfDetailButton(0);
}

uint64_t type metadata accessor for DOCLevelOfDetailButton(uint64_t a1)
{
  return sub_10006BDA4(a1, (uint64_t *)&unk_100652A00, (uint64_t)&nominal type descriptor for DOCLevelOfDetailButton);
}

uint64_t sub_1003CC24C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = &unk_1004E6920;
  result = type metadata accessor for DOCLevelOfDetailButton.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_1004E6938;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 128);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCLevelOfDetailButton.Metrics(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100652B98, (uint64_t)&nominal type descriptor for DOCLevelOfDetailButton.Metrics);
}

void sub_1003CC2E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  NSURL *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  int v34;
  NSURL *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  char *v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[5];
  _QWORD *v62;

  v57 = a5;
  v58 = a4;
  v60 = a3;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v55 - v19;
  v21 = a1;
  sub_1002320B8(a1, (uint64_t)&v55 - v19);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v55 = v11;
  v59 = v23;
  if (v25 == 1)
  {
    sub_10000CB4C((uint64_t)v20, &qword_100643470);
    v56 = 0;
  }
  else
  {
    v56 = URL.startAccessingSecurityScopedResource()();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
  }
  v26 = a6;
  v27 = v57;
  sub_1002320B8(v21, (uint64_t)v17);
  v28 = v24(v17, 1, v22);
  swift_unknownObjectRetain(a2);
  if (v28 == 1)
  {
    v30 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v29);
    v30 = v31;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v22);
  }
  v32 = (void *)objc_opt_self(DOCPDFMetadataProvider);
  v33 = objc_msgSend(v32, "pdfMetadataProviderWithNode:levelOfDetail:URL:", a2, v60, v30);

  swift_unknownObjectRelease(a2);
  sub_1002320B8(v21, (uint64_t)v14);
  v34 = v24(v14, 1, v22);
  swift_unknownObjectRetain(a2);
  if (v34 == 1)
  {
    v36 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v35);
    v36 = v37;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v22);
  }
  v38 = (void *)objc_opt_self(DOCImageMetadataProvider);
  v39 = v60;
  v40 = objc_msgSend(v38, "imageMetadataProviderWithNode:levelOfDetail:URL:", a2, v60, v36);

  swift_unknownObjectRelease(a2);
  v41 = sub_10034DB74(a2, v39, v21);
  v42 = (_QWORD *)swift_allocObject(&unk_1005E6E78, 64, 7);
  v42[2] = v27;
  v42[3] = v26;
  v43 = v58;
  v42[4] = v58;
  v42[5] = v33;
  v42[6] = v40;
  v42[7] = v41;
  aBlock[4] = sub_1003DB280;
  v62 = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E6E90;
  v44 = _Block_copy(aBlock);
  v45 = v21;
  v46 = v62;
  swift_retain_n(v41, 2);
  swift_bridgeObjectRetain_n(v43, 2);
  v47 = v33;
  v48 = v40;
  swift_retain();
  v49 = v47;
  v50 = v48;
  swift_release(v46);
  DOCRunInMainThread(v44);
  _Block_release(v44);
  if (v56)
  {
    v51 = (uint64_t)v55;
    sub_1002320B8(v45, (uint64_t)v55);
    if (v24((char *)v51, 1, v22) == 1)
    {
      v52 = swift_bridgeObjectRelease(v43);
      swift_release_n(v41, 2, v52);

      sub_10000CB4C(v51, &qword_100643470);
    }
    else
    {
      URL.stopAccessingSecurityScopedResource()();
      v54 = swift_bridgeObjectRelease(v43);
      swift_release_n(v41, 2, v54);

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v51, v22);
    }
  }
  else
  {
    v53 = swift_bridgeObjectRelease(v43);
    swift_release_n(v41, 2, v53);

  }
}

uint64_t sub_1003CC71C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t countAndFlagsBits;
  unint64_t v13;
  objc_class *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSBundle v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v27;
  const char *v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  unsigned int v32;
  objc_class *v33;
  unint64_t v34;
  objc_class *v35;
  objc_class *v36;
  objc_class *v37;
  objc_class *v38;
  objc_class *v39;
  objc_class *v40;
  unint64_t v41;
  objc_class *v42;
  objc_class *v43;
  objc_class *v44;
  objc_class *v45;
  BOOL v47;
  unint64_t v48;
  objc_class *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  objc_class *v53;
  objc_class *v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;

  countAndFlagsBits = 0;
  v13 = 0xE000000000000000;
  switch(a2)
  {
    case 0:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_95;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000034;
      v65 = 0x8000000100530C00;
      v16 = 1684957515;
      goto LABEL_22;
    case 1:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_92;
      v14 = (objc_class *)a1;
      v16 = 0xD000000000000010;
      v15 = 0xD000000000000035;
      v65 = 0x8000000100530BC0;
      v17 = 0x8000000100530BA0;
      v18 = 0x617A696C61636F4CLL;
      v19 = 0xEB00000000656C62;
      v20.super.isa = v14;
      v21 = 1702521171;
      v22 = 0xE400000000000000;
      goto LABEL_34;
    case 2:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_93;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000035;
      v65 = 0x8000000100530B60;
      v23 = 1919248471;
      goto LABEL_13;
    case 3:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (a1)
      {
        v14 = (objc_class *)a1;
        v15 = 0xD00000000000003ELL;
        v65 = 0x8000000100530B20;
        v16 = 0x64657461657243;
        goto LABEL_32;
      }
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    case 4:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_96;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000042;
      v65 = 0x8000000100530AD0;
      v16 = 0x6465696669646F4DLL;
      v17 = 0xE800000000000000;
      goto LABEL_33;
    case 5:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_97;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000041;
      v65 = 0x8000000100530A80;
      v16 = 0x65706F207473614CLL;
      v17 = 0xEB0000000064656ELL;
      goto LABEL_33;
    case 6:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_94;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000057;
      v65 = 0x8000000100530A20;
      v16 = 0x74616D726F46;
      v17 = 0xE600000000000000;
      goto LABEL_33;
    case 7:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_99;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000052;
      v65 = 0x80000001005309C0;
      v24 = 0x696361706143;
      goto LABEL_25;
    case 8:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_91;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000059;
      v65 = 0x8000000100530960;
      v16 = 0x6C62616C69617641;
      goto LABEL_8;
    case 9:
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (!a1)
        goto LABEL_98;
      v14 = (objc_class *)a1;
      v15 = 0xD000000000000054;
      v65 = 0x8000000100530900;
      v16 = 1684370261;
LABEL_22:
      v17 = 0xE400000000000000;
      goto LABEL_33;
    case 10:
      return countAndFlagsBits;
    default:
      v13 = a4;
      v4 = a3;
      countAndFlagsBits = a1;
      if (a1 == 0x726F68747541 && a2 == 0xE600000000000000
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x726F68747541, 0xE600000000000000, a1, a2, 0),
            (a1 & 1) != 0))
      {
        a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
        if (a1)
        {
          v14 = (objc_class *)a1;
          v15 = 0xD000000000000034;
          v25 = "Label shown in the Info View for the document author";
LABEL_31:
          v65 = (unint64_t)(v25 - 32) | 0x8000000000000000;
          v16 = 0x73726F68747541;
LABEL_32:
          v17 = 0xE700000000000000;
LABEL_33:
          v18 = 0x617A696C61636F4CLL;
          v19 = 0xEB00000000656C62;
          v20.super.isa = v14;
          v21 = 0;
          v22 = 0xE000000000000000;
LABEL_34:
          countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v16, *(Swift::String_optional *)&v18, v20, *(Swift::String *)&v21, *(Swift::String *)&v15)._countAndFlagsBits;

          return countAndFlagsBits;
        }
LABEL_100:
        __break(1u);
LABEL_101:
        if (countAndFlagsBits == 0x7265626D754E46 && a2 == 0xE700000000000000
          || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265626D754E46, 0xE700000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
        {
          a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
          if (a1)
          {
            v14 = (objc_class *)a1;
            v15 = 0xD000000000000041;
            v65 = 0x8000000100530550;
            v31 = 0x626D754E2046;
LABEL_106:
            v16 = v31 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
            v17 = 0xE800000000000000;
            goto LABEL_33;
          }
          __break(1u);
LABEL_167:
          if (countAndFlagsBits == 0x6C65646F4DLL && a2 == 0xE500000000000000
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C65646F4DLL, 0xE500000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
          {
            v38 = (objc_class *)(id)_DocumentManagerBundle(a1);
            if (v38)
            {
              v14 = v38;
              v15 = v6 + 14;
              v65 = 0x80000001005302F0;
              v16 = 0x6D20656369766544;
              v17 = 0xEC0000006C65646FLL;
              goto LABEL_33;
            }
            goto LABEL_228;
          }
          goto LABEL_173;
        }
        goto LABEL_108;
      }
      if (countAndFlagsBits == 0x7974697275636553 && a2 == 0xE800000000000000
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7974697275636553, 0xE800000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
        if (a1)
        {
          v14 = (objc_class *)a1;
          v15 = 0xD000000000000041;
          v65 = 0x8000000100530870;
          v24 = 0x697275636553;
LABEL_25:
          v16 = v24 & 0xFFFFFFFFFFFFLL | 0x7974000000000000;
          v17 = 0xE800000000000000;
          goto LABEL_33;
        }
        __break(1u);
LABEL_108:
        v6 = 0x657275736F707845;
        if (countAndFlagsBits == 0x657275736F707845 && a2 == 0xEC000000656D6954
          || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x657275736F707845, 0xEC000000656D6954, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
        {
          a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
          if (a1)
          {
            v14 = (objc_class *)a1;
            v15 = 0xD000000000000046;
            v65 = 0x8000000100530610;
            v16 = 0x657275736F707845;
            v32 = 1835627552;
            goto LABEL_113;
          }
          __break(1u);
LABEL_173:
          if (countAndFlagsBits == 0x65646F4D736E654CLL && a2 == 0xE90000000000006CLL
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65646F4D736E654CLL, 0xE90000000000006CLL, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
          {
            v39 = (objc_class *)(id)_DocumentManagerBundle(a1);
            if (v39)
            {
              v14 = v39;
              v15 = v6 - 2;
              v17 = v5 - 522;
              v65 = 0x80000001005302B0;
              v16 = 0x646F6D20736E654CLL;
              goto LABEL_33;
            }
            goto LABEL_229;
          }
          goto LABEL_179;
        }
LABEL_115:
        if (countAndFlagsBits == v6 && a2 == 0xEF6D6172676F7250
          || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x657275736F707845, 0xEF6D6172676F7250, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
        {
          a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
          if (!a1)
          {
            __break(1u);
LABEL_179:
            if (countAndFlagsBits == 0x6F7250726F6C6F43 && a2 == 0xEC000000656C6966
              || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F7250726F6C6F43, 0xEC000000656C6966, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
            {
              v40 = (objc_class *)(id)_DocumentManagerBundle(a1);
              if (v40)
              {
                v14 = v40;
                v15 = v6 + 10;
                v65 = 0x8000000100530260;
                v16 = 0x727020726F6C6F43;
                v32 = 1818846831;
                goto LABEL_113;
              }
              goto LABEL_230;
            }
            goto LABEL_185;
          }
          v14 = (objc_class *)a1;
          v16 = 0xD000000000000010;
          v15 = 0xD000000000000049;
          v65 = 0x80000001005305C0;
          v28 = "Exposure program";
LABEL_67:
          v17 = (unint64_t)(v28 - 32) | 0x8000000000000000;
          goto LABEL_33;
        }
        goto LABEL_121;
      }
      if (countAndFlagsBits == 0x7365676150 && a2 == 0xE500000000000000
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7365676150, 0xE500000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
        if (a1)
        {
          v14 = (objc_class *)a1;
          v15 = 0xD000000000000042;
          v65 = 0x8000000100530820;
          v16 = 0x7365676150;
          v17 = 0xE500000000000000;
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_115;
      }
      v7 = 0x656C746954;
      if (countAndFlagsBits == 0x656C746954 && a2 == 0xE500000000000000
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656C746954, 0xE500000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
        if (a1)
        {
          v14 = (objc_class *)a1;
          v15 = 0xD000000000000033;
          v27 = "Label shown in the Info View for the document title";
          goto LABEL_51;
        }
        __break(1u);
LABEL_121:
        v9 = 0xEC00000065646F4DLL;
        if (countAndFlagsBits == 0x676E69726574654DLL && a2 == 0xEC00000065646F4DLL
          || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676E69726574654DLL, 0xEC00000065646F4DLL, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
        {
          a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
          if (a1)
          {
            v14 = (objc_class *)a1;
            v15 = 0xD000000000000041;
            v65 = 0x8000000100530550;
            v16 = 0x676E69726574654DLL;
            v32 = 1685024032;
            goto LABEL_113;
          }
          __break(1u);
LABEL_185:
          v41 = v5 - 2316;
          if (countAndFlagsBits == 0x617053726F6C6F43 && a2 == v41
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x617053726F6C6F43, v41, countAndFlagsBits, a2, 0),
                (a1 & 1) != 0))
          {
            v42 = (objc_class *)(id)_DocumentManagerBundle(a1);
            if (v42)
            {
              v14 = v42;
              v15 = v6 + 8;
              v17 = v10 - 2305;
              v65 = 0x8000000100530210;
              v16 = 0x707320726F6C6F43;
              goto LABEL_33;
            }
            goto LABEL_231;
          }
          goto LABEL_191;
        }
        goto LABEL_127;
      }
      if (countAndFlagsBits != 0x6E6F6973726556 || a2 != 0xE700000000000000)
      {
        a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726556, 0xE700000000000000, countAndFlagsBits, a2, 0);
        if ((a1 & 1) == 0)
        {
          v5 = 0xEA00000000006E6FLL;
          if (countAndFlagsBits == 0x6974756C6F736552 && a2 == 0xEA00000000006E6FLL
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6974756C6F736552, 0xEA00000000006E6FLL, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
          {
            a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
            if (!a1)
            {
              __break(1u);
              goto LABEL_133;
            }
            v14 = (objc_class *)a1;
            v65 = 0x8000000100530760;
            v16 = 0x6974756C6F736552;
            v17 = 0xEA00000000006E6FLL;
          }
          else
          {
            if (countAndFlagsBits == 0x72656375646F7250 && a2 == 0xE800000000000000
              || ((v6 = 0x6572617774666F73,
                   v8 = 0xE800000000000000,
                   a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x72656375646F7250, 0xE800000000000000, countAndFlagsBits, a2, 0), countAndFlagsBits == 0x6572617774666F73)? (v29 = a2 == 0xE800000000000000): (v29 = 0), !v29 ? (v30 = 0) : (v30 = 1), (a1 & 1) != 0|| (v30 & 1) != 0|| (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6572617774666F73, 0xE800000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0)))
            {
              a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
              if (a1)
              {
                v14 = (objc_class *)a1;
                v16 = 0xD000000000000011;
                v15 = 0xD000000000000049;
                v65 = 0x8000000100530710;
                v28 = "Encoding software";
                goto LABEL_67;
              }
              __break(1u);
              goto LABEL_139;
            }
            v8 = 0x726F7461657243;
            if (countAndFlagsBits == 0x726F7461657243 && a2 == 0xE700000000000000
              || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x726F7461657243, 0xE700000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0)|| countAndFlagsBits == 0x54726F7461657243 && a2 == 0xEB000000006C6F6FLL|| (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x54726F7461657243, 0xEB000000006C6F6FLL, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
            {
              a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
              if (a1)
              {
                v14 = (objc_class *)a1;
                v15 = 0xD000000000000049;
                v65 = 0x80000001005306A0;
                v16 = 0x20746E65746E6F43;
                v17 = 0xEF726F7461657243;
                goto LABEL_33;
              }
              __break(1u);
LABEL_150:
              if (countAndFlagsBits == 0x6465526873616C46 && a2 == 0xEB00000000657945
                || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6465526873616C46, 0xEB00000000657945, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
              {
                v35 = (objc_class *)(id)_DocumentManagerBundle(a1);
                if (v35)
                {
                  v14 = v35;
                  v65 = 0x80000001005303D0;
                  v16 = 0x65796520646552;
                  v17 = 0xE700000000000000;
                  goto LABEL_62;
                }
                __break(1u);
                goto LABEL_226;
              }
              if (countAndFlagsBits == 0x6873616C46 && a2 == 0xE500000000000000
                || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6873616C46, 0xE500000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
              {
                v36 = (objc_class *)(id)_DocumentManagerBundle(a1);
                if (v36)
                {
                  v14 = v36;
                  v65 = 0x8000000100530390;
                  v16 = 0x6873616C46;
                  v17 = 0xE500000000000000;
                  goto LABEL_62;
                }
LABEL_226:
                __break(1u);
                goto LABEL_227;
              }
LABEL_161:
              v10 = 0xEB00000000656C62;
              v6 = 0xD000000000000038;
              if (countAndFlagsBits != 1701536077 || a2 != 0xE400000000000000)
              {
                a1 = _stringCompareWithSmolCheck(_:_:expecting:)(1701536077, 0xE400000000000000, countAndFlagsBits, a2, 0);
                if ((a1 & 1) == 0)
                  goto LABEL_167;
              }
              v37 = (objc_class *)(id)_DocumentManagerBundle(a1);
              if (v37)
              {
                v14 = v37;
                v15 = 0xD000000000000045;
                v17 = 0xEB00000000656B61;
                v65 = 0x8000000100530340;
                v16 = 0x6D20656369766544;
                goto LABEL_33;
              }
LABEL_227:
              __break(1u);
LABEL_228:
              __break(1u);
LABEL_229:
              __break(1u);
LABEL_230:
              __break(1u);
LABEL_231:
              __break(1u);
LABEL_232:
              __break(1u);
LABEL_233:
              __break(1u);
LABEL_234:
              __break(1u);
LABEL_235:
              __break(1u);
              goto LABEL_236;
            }
            if (countAndFlagsBits != 0x6F69736E656D6944 || a2 != 0xEA0000000000736ELL)
            {
              a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F69736E656D6944, 0xEA0000000000736ELL, countAndFlagsBits, a2, 0);
              if ((a1 & 1) == 0)
                goto LABEL_101;
            }
            a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
            if (!a1)
            {
              __break(1u);
              goto LABEL_161;
            }
            v14 = (objc_class *)a1;
            v17 = 0xEA0000000000736ELL;
            v65 = 0x8000000100530660;
            v16 = 0x6F69736E656D6944;
          }
LABEL_62:
          v18 = 0x617A696C61636F4CLL;
          v19 = 0xEB00000000656C62;
          v20.super.isa = v14;
          v21 = 0;
          v22 = 0xE000000000000000;
          v15 = 0xD000000000000038;
          goto LABEL_34;
        }
      }
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (a1)
      {
        v14 = (objc_class *)a1;
        v15 = 0xD00000000000003CLL;
        v65 = 0x80000001005307A0;
        v16 = 0x6E6F6973726556;
        goto LABEL_32;
      }
      __break(1u);
LABEL_127:
      if (countAndFlagsBits == 0x6572757472657041 && a2 == 0xED000065756C6156
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6572757472657041, 0xED000065756C6156, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
        if (a1)
        {
          v14 = (objc_class *)a1;
          v15 = 0xD000000000000047;
          v65 = 0x8000000100530500;
          v16 = 0x6572757472657041;
          v17 = 0xEE0065756C617620;
          goto LABEL_33;
        }
        __break(1u);
LABEL_191:
        if (countAndFlagsBits == 0x6E6F697461727544 && a2 == 0xE800000000000000
          || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461727544, 0xE800000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
        {
          v43 = (objc_class *)(id)_DocumentManagerBundle(a1);
          if (v43)
          {
            v14 = v43;
            v15 = v6 + 2;
            v65 = 0x80000001005301D0;
            v16 = 0x6E6F697461727544;
            v17 = 0xE800000000000000;
            goto LABEL_33;
          }
          goto LABEL_232;
        }
        goto LABEL_197;
      }
LABEL_133:
      if (countAndFlagsBits != 0x64656570534F5349 || a2 != 0xE800000000000000)
      {
        a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64656570534F5349, 0xE800000000000000, countAndFlagsBits, a2, 0);
        if ((a1 & 1) == 0)
        {
LABEL_139:
          if (countAndFlagsBits == 0x6C61426574696857 && a2 == 0xEC00000065636E61
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61426574696857, 0xEC00000065636E61, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
          {
            a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
            if (a1)
            {
              v14 = (objc_class *)a1;
              v15 = 0xD00000000000004CLL;
              v65 = 0x8000000100530460;
              v16 = 0x6162206574696857;
              v32 = 1668178284;
              goto LABEL_113;
            }
            __break(1u);
            goto LABEL_203;
          }
          if (countAndFlagsBits == 0x6E654C6C61636F46 && a2 == 0xEB00000000687467
            || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E654C6C61636F46, 0xEB00000000687467, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
          {
            v33 = (objc_class *)(id)_DocumentManagerBundle(a1);
            if (v33)
            {
              v14 = v33;
              v15 = 0xD00000000000004BLL;
              v65 = 0x8000000100530410;
              v16 = 0x656C206C61636F46;
              v17 = 0xEC0000006874676ELL;
              goto LABEL_33;
            }
            __break(1u);
            goto LABEL_208;
          }
          goto LABEL_150;
        }
      }
      a1 = (uint64_t)(id)_DocumentManagerBundle(a1);
      if (a1)
      {
        v14 = (objc_class *)a1;
        v15 = 0xD000000000000048;
        v17 = 0xE900000000000064;
        v65 = 0x80000001005304B0;
        v16 = 0x65657073204F5349;
        goto LABEL_33;
      }
      __break(1u);
LABEL_197:
      if (countAndFlagsBits == 0x736365646F43 && a2 == 0xE600000000000000
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736365646F43, 0xE600000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        v44 = (objc_class *)(id)_DocumentManagerBundle(a1);
        if (v44)
        {
          v14 = v44;
          v15 = v6 + 12;
          v65 = 0x8000000100530180;
          v16 = 0x736365646F43;
          v17 = 0xE600000000000000;
          goto LABEL_33;
        }
        goto LABEL_233;
      }
LABEL_203:
      v34 = v10 - 2029;
      if (countAndFlagsBits == 0x746974614C535047 && a2 == v34)
        goto LABEL_205;
LABEL_208:
      a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746974614C535047, v34, countAndFlagsBits, a2, 0);
      v47 = countAndFlagsBits == 0x656475746974616CLL && a2 == 0xE800000000000000;
      if ((a1 & 1) != 0
        || v47
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
LABEL_205:
        v45 = (objc_class *)(id)_DocumentManagerBundle(a1);
        if (v45)
        {
          v14 = v45;
          v16 = 0x656475746974614CLL;
          v15 = v6 + 6;
          v65 = 0x8000000100530140;
          v17 = 0xE800000000000000;
          goto LABEL_33;
        }
        goto LABEL_234;
      }
      v48 = v9 + 1575;
      if (countAndFlagsBits == 0x69676E6F4C535047 && a2 == v48
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x69676E6F4C535047, v48, countAndFlagsBits, a2, 0),
            (a1 & 1) != 0)
        || countAndFlagsBits == 0x64757469676E6F6CLL && a2 == 0xE900000000000065
        || (a1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, countAndFlagsBits, a2, 0), (a1 & 1) != 0))
      {
        v49 = (objc_class *)(id)_DocumentManagerBundle(a1);
        if (v49)
        {
          v14 = v49;
          v16 = 0x64757469676E6F4CLL;
          v15 = v6 + 7;
          v65 = 0x8000000100530100;
LABEL_8:
          v17 = 0xE900000000000065;
          goto LABEL_33;
        }
        goto LABEL_235;
      }
LABEL_236:
      v50 = v7 + 32;
      if (countAndFlagsBits == v7 + 32 && a2 == 0xE500000000000000
        || (v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, 0xE500000000000000, countAndFlagsBits, a2, 0),
            (v50 & 1) != 0))
      {
        v51 = (uint64_t)(id)_DocumentManagerBundle(v50);
        if (v51)
        {
          v14 = (objc_class *)v51;
          v15 = v6 - 1;
          v27 = "Label shown in the Info View for the Title of the media";
LABEL_51:
          v65 = (unint64_t)(v27 - 32) | 0x8000000000000000;
          v23 = 1819568468;
LABEL_13:
          v16 = v23 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
          v17 = 0xE500000000000000;
          goto LABEL_33;
        }
        __break(1u);
      }
      else
      {
        v51 = v8 + 32;
        if (countAndFlagsBits == v8 + 32 && a2 == 0xE700000000000000
          || (v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, 0xE700000000000000, countAndFlagsBits, a2, 0),
              (v51 & 1) != 0))
        {
          v51 = (uint64_t)(id)_DocumentManagerBundle(v51);
          if (v51)
          {
            v14 = (objc_class *)v51;
            v15 = v6 + 2;
            v65 = 0x8000000100530080;
            v31 = 0x736F706D6F43;
            goto LABEL_106;
          }
          __break(1u);
          goto LABEL_253;
        }
      }
      v52 = v5 + 1285;
      if (countAndFlagsBits != 0x6867697279706F63 || a2 != v52)
      {
        v51 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6867697279706F63, v52, countAndFlagsBits, a2, 0);
        if ((v51 & 1) == 0)
        {
LABEL_253:
          if (countAndFlagsBits != 1701869940 || a2 != 0xE400000000000000)
          {
            v51 = _stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, countAndFlagsBits, a2, 0);
            if ((v51 & 1) == 0)
              goto LABEL_259;
          }
          v51 = (uint64_t)(id)_DocumentManagerBundle(v51);
          if (!v51)
          {
            __break(1u);
            goto LABEL_265;
          }
          v14 = (objc_class *)v51;
          v15 = v6 + 7;
          v65 = 0x8000000100530000;
          v16 = 0x206C61636973754DLL;
          v32 = 1919837543;
LABEL_113:
          v17 = v32 | 0xED00006500000000;
          goto LABEL_33;
        }
      }
      v51 = (uint64_t)(id)_DocumentManagerBundle(v51);
      if (v51)
      {
        v14 = (objc_class *)v51;
        v16 = 0x6867697279706F43;
        v15 = v6 + 3;
        v17 = 0xE900000000000074;
        v65 = 0x8000000100530040;
        goto LABEL_33;
      }
      __break(1u);
LABEL_259:
      if (countAndFlagsBits == 0x747369747261 && a2 == 0xE600000000000000
        || (v51 = _stringCompareWithSmolCheck(_:_:expecting:)(0x747369747261, 0xE600000000000000, countAndFlagsBits, a2, 0), (v51 & 1) != 0))
      {
        v51 = (uint64_t)(id)_DocumentManagerBundle(v51);
        if (v51)
        {
          v14 = (objc_class *)v51;
          v15 = v6 + 1;
          v25 = "Label shown in the Info View for the Authors of the media";
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_271;
      }
LABEL_265:
      if (countAndFlagsBits == 0x6D614E6D75626C61 && a2 == 0xE900000000000065
        || (v51 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6D614E6D75626C61, 0xE900000000000065, countAndFlagsBits, a2, 0), (v51 & 1) != 0))
      {
        v51 = (uint64_t)(id)_DocumentManagerBundle(v51);
        if (v51)
        {
          v14 = (objc_class *)v51;
          v15 = v6 + 5;
          v65 = 0x800000010052FF80;
          v16 = 0x6D75626C41;
          v17 = 0xE500000000000000;
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_277;
      }
LABEL_271:
      if (countAndFlagsBits != 0x6168706C41736168 || a2 != 0xE800000000000000)
      {
        v51 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6168706C41736168, 0xE800000000000000, countAndFlagsBits, a2, 0);
        if ((v51 & 1) == 0)
        {
LABEL_277:
          if (countAndFlagsBits == 0x746964657243 && a2 == 0xE600000000000000
            || (v51 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746964657243, 0xE600000000000000, countAndFlagsBits, a2, 0), (v51 & 1) != 0))
          {
            v54 = (objc_class *)(id)_DocumentManagerBundle(v51);
            if (!v54)
            {
              __break(1u);
              JUMPOUT(0x1003CE244);
            }
            v14 = v54;
            v15 = v6 - 1;
            v65 = 0x800000010052FF00;
            v16 = 0x746964657243;
            v17 = 0xE600000000000000;
            goto LABEL_33;
          }
          goto LABEL_283;
        }
      }
      v53 = (objc_class *)(id)_DocumentManagerBundle(v51);
      if (v53)
      {
        v14 = v53;
        v15 = v6 + 6;
        v65 = 0x800000010052FF40;
        v16 = 0x6843206168706C41;
        v17 = 0xED00006C656E6E61;
        goto LABEL_33;
      }
      __break(1u);
LABEL_283:
      swift_bridgeObjectRetain(a2);
      v55 = swift_bridgeObjectRetain(v13);
      v56 = *(id *)DOCLog.UI.unsafeMutableAddressor(v55);
      v57 = static os_log_type_t.fault.getter();
      v58 = sub_10006922C((uint64_t *)&unk_100644560);
      v59 = swift_allocObject(v58, 112, 7);
      v60 = sub_1003F7F24(v59, 2);
      v62 = v61;
      v61[3] = (uint64_t)&type metadata for String;
      v63 = sub_10006A638();
      *v62 = countAndFlagsBits;
      v62[1] = a2;
      v62[8] = (uint64_t)&type metadata for String;
      v62[9] = v63;
      v62[4] = v63;
      v62[5] = v4;
      v62[6] = v13;
      v64 = DOCSplitBrowserViewController.didCommitPreview(of:)(v60);
      swift_bridgeObjectRetain(a2);
      os_log(_:dso:log:type:_:)("[DOCMetadataView] Encountered unexpected metadata key: %@ value: %@", 67, 2, &_mh_execute_header, v56, v57, v64);

      swift_bridgeObjectRelease(v64);
      return countAndFlagsBits;
  }
}

void sub_1003CE270(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5[2];

  v2 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100465714(v3);
  v4 = (char *)v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003D3EAC(v5);
  *a1 = v3;
}

void sub_1003CE2F0()
{
  qword_100672D80 = (uint64_t)&off_1005BFD40;
}

void sub_1003CE304()
{
  qword_100672D88 = (uint64_t)&off_1005BFEC0;
}

id sub_1003CE318(uint64_t a1, unint64_t a2)
{
  id result;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  unint64_t v10;

  if (a2 <= 9 && ((1 << a2) & 0x382) != 0)
  {
    result = (id)_DocumentManagerBundle(a1);
    if (result)
    {
      v3 = result;
      v4 = 0xD00000000000004DLL;
      v10 = 0x800000010052F5D0;
      v5 = 0x800000010052F5B0;
      v6 = 0xD000000000000010;
LABEL_5:
      v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v7.value._object = (void *)0xEB00000000656C62;
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v7, (NSBundle)v3, v8, *(Swift::String *)&v4)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  else
  {
    result = (id)_DocumentManagerBundle(a1);
    if (result)
    {
      v3 = result;
      v4 = 0xD000000000000059;
      v10 = 0x8000000100530E40;
      v6 = 0x74616C75636C6143;
      v5 = 0xAE00A680E2676E69;
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

void sub_1003CE44C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16;
  id v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  _QWORD v22[5];
  _QWORD *v23;

  v16 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v17 = objc_msgSend(a1, "itemID");
  v18 = (_QWORD *)swift_allocObject(&unk_1005E7170, 80, 7);
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = a6;
  v18[8] = a7;
  v18[9] = a8;
  v22[4] = sub_1003DB79C;
  v23 = v18;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_10013103C;
  v22[3] = &unk_1005E7188;
  v19 = _Block_copy(v22);
  v20 = v23;
  v21 = a1;
  swift_retain();
  sub_1003DB33C(a5, a6, a7, a8);
  objc_msgSend(v16, "fetchParentsForItemID:recursively:completionHandler:", v17, 1, v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);

}

double sub_1003CE5AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  double result;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void *v39;
  id v40;

  if (a2)
  {
    v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v13 = static os_log_type_t.error.getter(v12);
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 112, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v15 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v15 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v15 + 32) = a3;
    v16 = a3;
    v17 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v15 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v15 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v15 + 72) = v17;
    os_log(_:dso:log:type:_:)("Failed to fetch all parents for item: %@. Error: %@", 51, 2, &_mh_execute_header, v12, v13, v15);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else if (a1)
  {
    v24 = (void *)objc_opt_self(FPProviderDomain);
    v40 = 0;
    v25 = a3;
    v26 = objc_msgSend(v24, "providerDomainForItem:cachePolicy:error:", v25, 3, &v40);
    v27 = v40;
    v39 = v25;
    if (v26)
    {

      v28 = v26;
    }
    else
    {
      v34 = v27;
      v35 = _convertNSErrorToError(_:)(v27);

      swift_willThrow(v36);
      swift_errorRelease(v35);
      v28 = 0;
    }
    v37 = (_QWORD *)swift_allocObject(&unk_1005E71C0, 64, 7);
    v37[2] = a5;
    v37[3] = a6;
    v37[4] = a7;
    v37[5] = a8;
    v37[6] = a9;
    v37[7] = a10;
    swift_retain();
    sub_1003DB33C(a7, a8, a9, a10);
    FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)(a1, v28, a4, 0, 0, 1, sub_1003DB808, v37);

    *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  }
  else
  {
    v29 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = sub_10006922C((uint64_t *)&unk_100644560);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v32 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v32 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v32 + 32) = a3;
    v33 = a3;
    os_log(_:dso:log:type:_:)("Received nil for parents of %@.", 31, 2, &_mh_execute_header, v29, v30, v32);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v32).n128_u64[0];
  }
  return result;
}

void sub_1003CE94C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t Strong;
  id v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v41;
  BOOL v43;
  char v44;
  void *v45;
  _BYTE v48[24];
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  _BYTE v53[8];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;

  v14 = a5 + 16;
  if ((a4 & 0x100) != 0)
  {
    swift_beginAccess(a5 + 16, v53, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v14);
    if (!Strong)
      return;
    v32 = (id)Strong;
    swift_beginAccess(a10 + 16, v52, 0, 0);
    v33 = *(_QWORD *)(a10 + 24);
    v34 = a7;
    v35 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v33);
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v35, "initWithString:", v36, swift_bridgeObjectRelease(v33).n128_f64[0]);

    sub_1003D22D8(a6, v34, a8, a9, v37, 0, 0, 0);
    goto LABEL_32;
  }
  v18 = a4;
  swift_beginAccess(a11 + 16, v52, 1, 0);
  *(_QWORD *)(a11 + 32) = a1;
  *(_QWORD *)(a11 + 40) = a2;
  *(_QWORD *)(a11 + 48) = a3;
  *(_BYTE *)(a11 + 56) = v18;
  *(_BYTE *)(a11 + 57) = 0;
  swift_beginAccess(v14, v51, 0, 0);
  v19 = swift_unknownObjectWeakLoadStrong(v14);
  if (v19)
  {
    v20 = (void *)v19;
    swift_beginAccess(a11 + 16, v50, 0, 0);
    v21 = *(_QWORD *)(a11 + 24);
    v53[0] = *(_BYTE *)(a11 + 16);
    v54 = v21;
    v55 = a1;
    v56 = a2;
    v57 = a3;
    v58 = v18;
    v59 = 0;
    DOCMetadataFolderSizingViewModel.sizeText.getter(v22);
    v24 = v23;
    v25 = objc_allocWithZone((Class)NSAttributedString);
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v25, "initWithString:", v26, swift_bridgeObjectRelease(v24).n128_f64[0]);

    swift_beginAccess(a11 + 16, v49, 0, 0);
    if ((*(_BYTE *)(a11 + 57) & 1) != 0)
    {
      v28 = 1;
      v29 = a7;
      v30 = a8;
    }
    else
    {
      v29 = a7;
      v30 = a8;
      if ((*(_BYTE *)(a11 + 40) & 1) != 0)
      {
        v28 = 1;
      }
      else
      {
        v38 = *(_QWORD *)(a11 + 32);
        v39 = *(_QWORD *)(a11 + 48);
        v41 = v38 == -1 || v39 == -1;
        v43 = v38 < 0 && v39 >= 0;
        if (*(_BYTE *)(a11 + 16) != 1)
          v44 = v41;
        else
          v44 = v43;
        if (v41)
          v44 = v41;
        if ((*(_BYTE *)(a11 + 56) & 1) != 0)
          v28 = 1;
        else
          v28 = v44;
      }
    }
    sub_1003D22D8(a6, v29, v30, a9, v27, 0, 0, v28);

  }
  swift_beginAccess(v14, v48, 0, 0);
  v45 = (void *)swift_unknownObjectWeakLoadStrong(v14);
  if (v45)
  {
    v32 = v45;
    sub_1003D82C4((uint64_t)v32, (uint64_t)v32);
    v37 = v32;
LABEL_32:

  }
}

void sub_1003CEC28(uint64_t a1, char a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  _QWORD *v10;
  _BYTE v11[24];

  if ((a4 & 0x100) != 0 || (a2 & 1) != 0)
  {
    swift_beginAccess(a6 + 16, v11, 1, 0);
    *(_BYTE *)(a6 + 16) = 0;
    goto LABEL_6;
  }
  v10 = (_QWORD *)(a5 + 16);
  swift_beginAccess(a5 + 16, v11, 1, 0);
  if (!__OFADD__(*v10, a1))
  {
    *v10 += a1;
LABEL_6:
    dispatch_group_leave(a7);
    return;
  }
  __break(1u);
}

void sub_1003CECB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];

  v15 = a2 + 16;
  v16 = a4 + 16;
  swift_beginAccess(a1 + 16, v33, 0, 0);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v17 = (void *)objc_opt_self(NSByteCountFormatter);
    v18 = objc_msgSend(v17, "stringFromByteCount:countStyle:", *(_QWORD *)(a3 + 16), 0, swift_beginAccess(a3 + 16, v30, 0, 0).n128_f64[0]);
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    swift_beginAccess(v15, v29, 1, 0);
    v22 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a2 + 16) = v19;
    *(_QWORD *)(a2 + 24) = v21;
    swift_bridgeObjectRelease(v22);
  }
  swift_beginAccess(v16, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v16);
  if (Strong)
  {
    v24 = (void *)Strong;
    swift_beginAccess(v15, v31, 0, 0);
    v25 = *(_QWORD *)(a2 + 24);
    v26 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v25);
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v26, "initWithString:", v27, swift_bridgeObjectRelease(v25).n128_f64[0]);

    sub_1003D22D8(a5, a6, a7, a8, v28, 0, 0, 0);
  }
}

void sub_1003CEE6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  _BYTE v18[24];

  v15 = a6 + 16;
  swift_beginAccess(a6 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    sub_1003D22D8(a7, a8, a9, a10, a3, a4, a5, 0);

  }
}

void sub_1003CEF00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  void *v19;
  id v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[8];
  uint64_t v27;
  uint64_t v28;

  v12 = a2 + 16;
  sub_100070EDC(a1, (uint64_t)v26, &qword_100652BE8);
  if (v27)
  {
    v13 = v28;
    v14 = (void *)objc_opt_self(NSByteCountFormatter);
    if (v13 < 0)
    {
      __break(1u);
    }
    else
    {
      v15 = objc_msgSend(v14, "stringFromByteCount:countStyle:", v13, 0);
      static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v17 = v16;

      swift_beginAccess(v12, v25, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v12);
      if (Strong)
      {
        v19 = (void *)Strong;
        v20 = objc_allocWithZone((Class)NSAttributedString);
LABEL_7:
        v22 = String._bridgeToObjectiveC()();
        v23 = objc_msgSend(v20, "initWithString:", v22, swift_bridgeObjectRelease(v17).n128_f64[0]);

        sub_1003D22D8(a3, a4, a5, a6, v23, 0, 0, 0);
        return;
      }
      swift_bridgeObjectRelease(v17);
    }
  }
  else
  {
    swift_beginAccess(v12, v25, 0, 0);
    v21 = swift_unknownObjectWeakLoadStrong(v12);
    if (v21)
    {
      v19 = (void *)v21;
      swift_beginAccess(a7 + 16, &v24, 0, 0);
      v17 = *(_QWORD *)(a7 + 24);
      v20 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(v17);
      goto LABEL_7;
    }
  }
}

void sub_1003CF0AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Strong;
  void *v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[8];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;

  v12 = a2 + 16;
  sub_100070EDC(a1, (uint64_t)v52, &qword_100652BE8);
  if (v53)
  {
    v13 = v54;
    v14 = v55;
    v15 = (void *)objc_opt_self(NSByteCountFormatter);
    if (v13 < 0)
    {
      __break(1u);
    }
    else
    {
      v16 = v15;
      v49 = a3;
      v17 = objc_msgSend(v15, "stringFromByteCount:countStyle:", v13, 0);
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      if ((v14 & 0x8000000000000000) == 0)
      {
        v48 = a5;
        v21 = objc_msgSend(v16, "stringFromByteCount:countStyle:", v14, 0);
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v26 = (id)_DocumentManagerBundle(v25);
        if (v26)
        {
          v27 = v26;
          v56._countAndFlagsBits = 0xD000000000000059;
          v56._object = (void *)0x8000000100530D80;
          v28._object = (void *)0x8000000100530D60;
          v28._countAndFlagsBits = 0xD000000000000011;
          v29.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v29.value._object = (void *)0xEB00000000656C62;
          v30._countAndFlagsBits = 0;
          v30._object = (void *)0xE000000000000000;
          v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v56);

          v32 = sub_10006922C((uint64_t *)&unk_100644560);
          v33 = swift_allocObject(v32, 112, 7);
          *(_OWORD *)(v33 + 16) = xmmword_1004D4CE0;
          *(_QWORD *)(v33 + 56) = &type metadata for String;
          v34 = sub_10006A638();
          *(_QWORD *)(v33 + 32) = v18;
          *(_QWORD *)(v33 + 40) = v20;
          *(_QWORD *)(v33 + 96) = &type metadata for String;
          *(_QWORD *)(v33 + 104) = v34;
          *(_QWORD *)(v33 + 64) = v34;
          *(_QWORD *)(v33 + 72) = v22;
          *(_QWORD *)(v33 + 80) = v24;
          static String.localizedStringWithFormat(_:_:)(v31._countAndFlagsBits, v31._object, v33);
          v36 = v35;
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v31._object);
          swift_beginAccess(v12, v51, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v12);
          if (Strong)
          {
            v38 = (void *)Strong;
            v39 = objc_allocWithZone((Class)NSAttributedString);
            v40 = String._bridgeToObjectiveC()();
            v41 = objc_msgSend(v39, "initWithString:", v40, swift_bridgeObjectRelease(v36).n128_f64[0]);

            sub_1003D22D8(v49, a4, v48, a6, v41, 0, 0, 0);
          }
          else
          {
            swift_bridgeObjectRelease(v36);
          }
          return;
        }
LABEL_13:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_beginAccess(v12, v51, 0, 0);
  v42 = swift_unknownObjectWeakLoadStrong(v12);
  if (v42)
  {
    v43 = (void *)v42;
    swift_beginAccess(a7 + 16, v50, 0, 0);
    v44 = *(_QWORD *)(a7 + 24);
    v45 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(v44);
    v46 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v45, "initWithString:", v46, swift_bridgeObjectRelease(v44).n128_f64[0]);

    sub_1003D22D8(a3, a4, a5, a6, v47, 0, 0, 0);
  }
}

void sub_1003CF404(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  void *v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  NSString v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[8];
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  Swift::String v53;

  v12 = a2 + 16;
  sub_100070EDC(a1, (uint64_t)v49, &qword_100652BE8);
  if (v50)
  {
    v13 = v52 - v51;
    if (v52 < v51)
    {
      __break(1u);
    }
    else if ((v13 & 0x8000000000000000) == 0)
    {
      v45 = a3;
      v46 = a6;
      v14 = objc_msgSend(objc_allocWithZone((Class)NSByteCountFormatter), "init");
      objc_msgSend(v14, "setAllowedUnits:", 1);
      v15 = objc_msgSend(v14, "stringFromByteCount:", v13);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v19 = objc_msgSend((id)objc_opt_self(NSByteCountFormatter), "stringFromByteCount:countStyle:", v13, 0);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v24 = (id)_DocumentManagerBundle(v23);
      if (v24)
      {
        v25 = v24;
        v53._object = (void *)0x8000000100530DE0;
        v26._countAndFlagsBits = 0x6F204025280A4025;
        v26._object = (void *)0xEF296B736964206ELL;
        v27.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v27.value._object = (void *)0xEB00000000656C62;
        v28._countAndFlagsBits = 0;
        v28._object = (void *)0xE000000000000000;
        v53._countAndFlagsBits = 0xD000000000000054;
        v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v53);

        v30 = sub_10006922C((uint64_t *)&unk_100644560);
        v31 = swift_allocObject(v30, 112, 7);
        *(_OWORD *)(v31 + 16) = xmmword_1004D4CE0;
        *(_QWORD *)(v31 + 56) = &type metadata for String;
        v32 = sub_10006A638();
        *(_QWORD *)(v31 + 32) = v16;
        *(_QWORD *)(v31 + 40) = v18;
        *(_QWORD *)(v31 + 96) = &type metadata for String;
        *(_QWORD *)(v31 + 104) = v32;
        *(_QWORD *)(v31 + 64) = v32;
        *(_QWORD *)(v31 + 72) = v20;
        *(_QWORD *)(v31 + 80) = v22;
        static String.localizedStringWithFormat(_:_:)(v29._countAndFlagsBits, v29._object, v31);
        v34 = v33;
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v29._object);
        swift_beginAccess(v12, v48, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v12);
        if (Strong)
        {
          v36 = (void *)Strong;
          v37 = objc_allocWithZone((Class)NSAttributedString);
          v38 = String._bridgeToObjectiveC()();
          v39 = objc_msgSend(v37, "initWithString:", v38, swift_bridgeObjectRelease(v34).n128_f64[0]);

          sub_1003D22D8(v45, a4, a5, v46, v39, 0, 0, 0);
        }
        else
        {
          swift_bridgeObjectRelease(v34);
        }
        goto LABEL_10;
      }
LABEL_14:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_beginAccess(v12, v48, 0, 0);
  v40 = swift_unknownObjectWeakLoadStrong(v12);
  if (!v40)
    return;
  v41 = (void *)v40;
  swift_beginAccess(a7 + 16, v47, 0, 0);
  v42 = *(_QWORD *)(a7 + 24);
  v43 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v42);
  v44 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v43, "initWithString:", v44, swift_bridgeObjectRelease(v42).n128_f64[0]);

  sub_1003D22D8(a3, a4, a5, a6, v14, 0, 0, 0);
LABEL_10:

}

uint64_t sub_1003CF780(uint64_t *a1, uint64_t a2)
{
  return sub_1003D5114(*a1, a1[1], a1[2], a1[3], *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

_QWORD *sub_1003CF79C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

double sub_1003CF7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  char v7;
  double result;
  char *v9;

  v1 = sub_1003CFA58();
  v2 = v1;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail);
  v4 = *(_BYTE **)(v1 + 24);
  v5 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  v6 = v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = v3;
  if (v3 == v6)
  {
    *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  }
  else
  {
    objc_msgSend(v4, "setUserInteractionEnabled:");
    v9 = sub_1001D2E04();
    v7 = v9[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v9[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v4[v5];
    sub_10042BB1C(v7, (uint64_t)v9);
    swift_release(v2);

  }
  return result;
}

id sub_1003CF878()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint);
  }
  else
  {
    v4 = sub_1003CF920();
    v5 = objc_msgSend(v4, "widthAnchor");

    v6 = objc_msgSend(v5, "constraintEqualToConstant:", *(double *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth));
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1003CF920()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___label, (uint64_t (*)(uint64_t))sub_1003CF934);
}

id sub_1003CF934(uint64_t a1)
{
  id v2;
  id v3;
  double v4;
  double v5;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont));
  objc_msgSend(v2, "setTextAlignment:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v3);

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v4) = 1144750080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v4);
  LODWORD(v5) = 1144750080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 1, v5);
  return v2;
}

uint64_t sub_1003CFA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value);
  }
  else
  {
    v2 = sub_1003CFABC(v0);
    v3 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v3);
  }
  swift_retain();
  return v2;
}

uint64_t sub_1003CFABC(uint64_t a1)
{
  objc_class *v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  v2 = (objc_class *)type metadata accessor for DOCCopyableLabel();
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  objc_msgSend(v3, "setNumberOfLines:", 0);
  objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v3, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont));
  objc_msgSend(v3, "setTextAlignment:", 2);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "labelColor");
  v6 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  v7 = *(void **)&v3[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText];
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText] = v5;
  v8 = v5;

  if (v3[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] == 1)
  {
    v10 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter(v9);
    v11 = objc_msgSend(v4, "_doc_safeTintColor:", v10);

  }
  else
  {
    v11 = *(id *)&v3[v6];
  }
  v18.receiver = v3;
  v18.super_class = v2;
  objc_msgSendSuper2(&v18, "setTextColor:", v11);

  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v12) = 1132068864;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 0, v12);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 0, v13);
  v14 = sub_10006922C((uint64_t *)&unk_100652C00);
  v15 = swift_allocObject(v14, 32, 7);
  *(_QWORD *)(v15 + 16) = v3;
  *(_QWORD *)(v15 + 24) = v3;
  v16 = v3;
  return v15;
}

id sub_1003CFC94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v4, "widthAnchor");
    v6 = objc_msgSend(v5, "constraintEqualToConstant:", 24.0);

    objc_msgSend(v6, "setActive:", 1);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1003CFD84()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1003CFD98);
}

id sub_1003CFD98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;

  v2 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v3 = swift_allocObject(v2, 56, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004D9720;
  *(_QWORD *)(v3 + 32) = sub_1003CF920();
  *(_QWORD *)(v3 + 40) = sub_1003CFC94();
  v4 = sub_1003CFA58();
  v5 = *(id *)(v4 + 16);
  swift_release(v4);
  *(_QWORD *)(v3 + 48) = v5;
  specialized Array._endMutation()(v6);
  v7 = v3;
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v10, "setLayoutMargins:", *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 8), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 16), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 24));
  objc_msgSend(v10, "setAxis:", 0);
  objc_msgSend(v10, "setSpacing:", 0.0);
  objc_msgSend(v10, "setAlignment:", 2);
  return v10;
}

id sub_1003CFF18(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, double a5, double a6, double a7, double a8)
{
  char *v8;
  char *v9;
  uint64_t ObjectType;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t ObjCClassMetadata;
  void *ObjCClassFromMetadata;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  NSString v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  Class isa;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  objc_super v73;

  v9 = v8;
  ObjectType = swift_getObjectType(v9);
  v19 = &v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics];
  *(_OWORD *)v19 = xmmword_1004DE9D0;
  *((_QWORD *)v19 + 2) = 0x4020000000000000;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *((_QWORD *)v19 + 7) = 0;
  v20 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont;
  v21 = (void *)objc_opt_self(UIFont);
  v22 = v9;
  *(_QWORD *)&v9[v20] = objc_msgSend(v21, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden] = 1;
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail] = 0;
  v23 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink;
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink] = 0;
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] = 0;
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment] = 1;
  v24 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator;
  v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___label] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___stackView] = 0;
  v25 = (uint64_t *)&v22[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  *v25 = a1;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v22[v24] = 1;
  v22[v23] = a2 == 2;
  sub_1003DB33C(a1, a2, a3, a4);

  v73.receiver = v22;
  v73.super_class = (Class)type metadata accessor for DOCMetadataKeyValueRow();
  v26 = objc_msgSendSuper2(&v73, "initWithFrame:", a5, a6, a7, a8);
  v27 = (void *)objc_opt_self(DOCAXIdentifier);
  v28 = v26;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v27, "itemInfoView"));
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(ObjCClassMetadata);
  sub_1003CC71C(a1, a2, a3, a4);
  v32 = v31;
  sub_1003DB370(a1, a2, a3, a4);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(ObjCClassFromMetadata, "metadataRowWithLabel:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v37 = v36;
    v34 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  objc_msgSend(v28, "setAccessibilityIdentifier:", v34, v35);

  v38 = (void *)objc_opt_self(UIColor);
  v39 = v28;
  v40 = objc_msgSend(v38, "clearColor");
  objc_msgSend(v39, "setBackgroundColor:", v40);

  v41 = v39;
  v42 = sub_1003CFD84();
  objc_msgSend(v41, "addSubview:", v42);

  v43 = (void *)objc_opt_self(NSLayoutConstraint);
  v44 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v45 = swift_allocObject(v44, 72, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1004D9710;
  v46 = sub_1003CFD84();
  v47 = objc_msgSend(v46, "widthAnchor");

  v48 = objc_msgSend(v41, "widthAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:multiplier:", v48, 1.0);

  *(_QWORD *)(v45 + 32) = v49;
  v50 = sub_1003CFD84();
  v51 = objc_msgSend(v50, "topAnchor");

  v52 = objc_msgSend(v41, "topAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v45 + 40) = v53;
  v54 = sub_1003CFD84();
  v55 = objc_msgSend(v54, "bottomAnchor");

  v56 = objc_msgSend(v41, "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v45 + 48) = v57;
  v58 = sub_1003CFD84();
  v59 = objc_msgSend(v58, "leadingAnchor");

  v60 = objc_msgSend(v41, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v45 + 56) = v61;
  v62 = sub_1003CFD84();
  v63 = objc_msgSend(v62, "trailingAnchor");

  v64 = objc_msgSend(v41, "trailingAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

  *(_QWORD *)(v45 + 64) = v65;
  specialized Array._endMutation()(v66);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "activateConstraints:", isa, swift_bridgeObjectRelease(v45).n128_f64[0]);

  v68 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v69 = swift_allocObject(v68, 48, 7);
  *(_OWORD *)(v69 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v69 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v69 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v70 = v41;
  v71 = UIView.registerForTraitChanges<A>(_:handler:)(v69, sub_1003D50F0, 0, ObjectType);
  swift_unknownObjectRelease(v71);
  swift_bridgeObjectRelease(v69);

  return v70;
}

void sub_1003D0588(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  void *v9;
  id v10;
  CGColor *v11;
  double v12;
  CGFloat v13;
  id v14;
  CGColor *v15;
  CGContext *c;
  CGRect v17;
  CGRect v18;

  c = UIGraphicsGetCurrentContext();
  if (c)
  {
    v9 = (void *)objc_opt_self(UIColor);
    v10 = objc_msgSend(v9, "clearColor");
    v11 = (CGColor *)objc_msgSend(v10, "CGColor");

    CGContextSetFillColorWithColor(c, v11);
    v17.origin.x = a1;
    v17.origin.y = a2;
    v17.size.width = a3;
    v17.size.height = a4;
    CGContextFillRect(c, v17);
    if (*((_BYTE *)v4 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator) == 1)
    {
      objc_msgSend(v4, "contentScaleFactor");
      v13 = 1.0 / v12;
      v14 = objc_msgSend(v9, "separatorColor");
      v15 = (CGColor *)objc_msgSend(v14, "CGColor");

      CGContextSetFillColorWithColor(c, v15);
      v18.origin.x = 0.0;
      v18.origin.y = a4 + -1.0;
      v18.size.width = a3;
      v18.size.height = v13;
      CGContextFillRect(c, v18);
    }

  }
}

void sub_1003D07EC()
{
  char *v0;
  char *v1;
  id v2;
  BOOL v3;
  id v4;
  id v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10007B5C0(16);

  if (v3)
  {
    v4 = objc_msgSend(v1, "traitCollection");
    v5 = objc_msgSend(v4, "preferredContentSizeCategory");

    v6 = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
    v7 = sub_1003CFD84();
    objc_msgSend(v7, "setAxis:", v6 & 1);

    v8 = sub_1003CFD84();
    v9 = v8;
    if ((v6 & 1) != 0)
      v10 = 1;
    else
      v10 = 2;
    objc_msgSend(v8, "setAlignment:", v10);

    if ((v6 & 1) != 0)
    {
      v11 = sub_1003CF920();
      objc_msgSend(v11, "setTextAlignment:", 4);

      v12 = sub_1003CFA58();
      DOCViewDecorator<>.textAlignment.setter(4);
      swift_release(v12);
      v20 = sub_1003CF878();
      objc_msgSend(v20, "setActive:", 0);
    }
    else
    {
      v13 = 2
          * (objc_msgSend((id)objc_opt_self(UIView), "userInterfaceLayoutDirectionForSemanticContentAttribute:", 0) == 0);
      v14 = sub_1003CF920();
      v15 = v14;
      v16 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment;
      if (v1[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment])
        v17 = 4;
      else
        v17 = v13;
      objc_msgSend(v14, "setTextAlignment:", v17);

      v18 = sub_1003CFA58();
      if (v1[v16])
        v19 = v13;
      else
        v19 = 4;
      DOCViewDecorator<>.textAlignment.setter(v19);
      swift_release(v18);
      v20 = sub_1003CF878();
      objc_msgSend(v20, "setActive:", *(double *)&v1[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] > 0.0);
    }

  }
}

uint64_t sub_1003D0A10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value));
  return sub_1003DB370(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24));
}

id sub_1003D0A94(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCMetadataKeyValueRow);
}

uint64_t type metadata accessor for DOCMetadataKeyValueRow()
{
  return objc_opt_self(_TtC5Files22DOCMetadataKeyValueRow);
}

double sub_1003D0CCC(char a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators];
  v1[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators] = a1;
  if (v2 != (a1 & 1))
  {
    v3 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (!((unint64_t)v4 >> 62))
    {
      if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
        return result;
      goto LABEL_4;
    }
    if (v4 < 0)
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes]);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
    if (v11 > 0)
    {
LABEL_4:
      v5 = *(_QWORD *)&v1[v3];
      swift_bridgeObjectRetain(v5);
      v6 = objc_msgSend(v1, "levelOfDetail");
      v7 = swift_allocObject(&unk_1005E6DD8, 24, 7);
      swift_unknownObjectWeakInit(v7 + 16);
      swift_retain();
      sub_1003D58B4(v5, (uint64_t)v6, (uint64_t)sub_1003DB274, v7);
      v8 = swift_bridgeObjectRelease(v5);
      swift_release_n(v7, 2, v8);
    }
  }
  return result;
}

double sub_1003D0E2C(double result)
{
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(double *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth];
  *(double *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth] = result;
  if (v2 != result)
  {
    v3 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (!((unint64_t)v4 >> 62))
    {
      if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
        return result;
      goto LABEL_4;
    }
    if (v4 < 0)
      v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes]);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
    if (v10 > 0)
    {
LABEL_4:
      v5 = *(_QWORD *)&v1[v3];
      v6 = objc_msgSend(v1, "levelOfDetail", swift_bridgeObjectRetain(v5).n128_f64[0]);
      v7 = swift_allocObject(&unk_1005E6DD8, 24, 7);
      swift_unknownObjectWeakInit(v7 + 16);
      swift_retain();
      sub_1003D58B4(v5, (uint64_t)v6, (uint64_t)sub_1003DB274, v7);
      v8 = swift_bridgeObjectRelease(v5);
      swift_release_n(v7, 2, v8);
    }
  }
  return result;
}

id sub_1003D0F34()
{
  void *v0;
  id v1;
  id result;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  Swift::String_optional v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t countAndFlagsBits;
  unint64_t v10;

  v1 = objc_msgSend(v0, "levelOfDetail");
  result = (id)_DocumentManagerBundle(v1);
  v3 = result;
  if (v1)
  {
    if (result)
    {
      v4 = 0xE900000000000073;
      v10 = 0x8000000100530F60;
      v5 = 0x73654C20776F6853;
LABEL_6:
      v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v6.value._object = (void *)0xEB00000000656C62;
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      v8 = 0xD000000000000037;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, v6, (NSBundle)v3, v7, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  else if (result)
  {
    v10 = 0x8000000100530FA0;
    v5 = 0x726F4D20776F6853;
    v4 = 0xE900000000000065;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

double sub_1003D10C0(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  Class isa;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] != a1)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_configuration];
    if (v2)
    {
      v3 = (void *)objc_opt_self(NSUserDefaults);
      v4 = v2;
      v5 = objc_msgSend(v3, "standardUserDefaults");
      isa = Int._bridgeToObjectiveC()().super.super.isa;
      objc_msgSend(v5, "doc_setObject:forRoleKey:configuation:", isa, DOCUserDefaultsKeyMetadataLevelOfDetail, v4);

    }
    v8 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (!((unint64_t)v9 >> 62))
    {
      if (*(uint64_t *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
        return result;
      goto LABEL_6;
    }
    if (v9 < 0)
      v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    else
      v14 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes]);
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
    if (v15 >= 1)
    {
LABEL_6:
      v10 = *(_QWORD *)&v1[v8];
      v11 = objc_msgSend(v1, "levelOfDetail", swift_bridgeObjectRetain(v10).n128_f64[0]);
      v12 = swift_allocObject(&unk_1005E6DD8, 24, 7);
      swift_unknownObjectWeakInit(v12 + 16);
      swift_retain();
      sub_1003D58B4(v10, (uint64_t)v11, (uint64_t)sub_1003DB274, v12);
      v13 = swift_bridgeObjectRelease(v10);
      swift_release_n(v12, 2, v13);
    }
  }
  return result;
}

char *sub_1003D12DC(uint64_t a1, void *a2)
{
  _BYTE *v2;
  uint64_t ObjectType;
  char *v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  NSString v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  objc_super v23;

  ObjectType = swift_getObjectType(v2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] = 1;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth] = 0;
  v6 = &v2[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues] = 2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] = 0;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad] = 1;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_configuration] = a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys] = a1;
  v23.receiver = v2;
  v23.super_class = (Class)type metadata accessor for DOCMetadataView();
  v7 = a2;
  v8 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setAxis:", 1, v23.receiver, v23.super_class);
  if (a2)
  {
    v9 = (void *)objc_opt_self(NSUserDefaults);
    v10 = v7;
    v11 = objc_msgSend(v9, "standardUserDefaults");
    v12 = objc_msgSend(v11, "doc_roleSpecificKeyForKey:configuration:", DOCUserDefaultsKeyMetadataLevelOfDetail, v10);

    if (!v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v15 = v14;
      v12 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
    }
    v16 = objc_msgSend(v9, "standardUserDefaults", v13);
    v17 = objc_msgSend(v16, "integerForKey:", v12);

    *(_QWORD *)&v8[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] = v17;
  }
  v18 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v19 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v19 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v20 = v8;
  v21 = UIView.registerForTraitChanges<A>(_:handler:)(v19, sub_1003D5110, 0, ObjectType);
  swift_unknownObjectRelease(v21);
  swift_bridgeObjectRelease(v19);

  return v20;
}

void sub_1003D1570()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for DOCMetadataView();
  objc_msgSendSuper2(&v11, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");

  if (v1)
  {
    v2 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_1005E71E8, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v4 = swift_allocObject(&unk_1005E7210, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_1003DB260;
    *(_QWORD *)(v4 + 24) = v3;
    v9[4] = sub_10010DB64;
    v10 = v4;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10006655C;
    v9[3] = &unk_1005E7228;
    v5 = _Block_copy(v9);
    v6 = v10;
    v7 = v0;
    swift_retain();
    objc_msgSend(v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 95, 962, 40, 1);
    swift_release(v3);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_1003D1714()
{
  char *v0;
  char *v1;
  id v2;
  BOOL v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  id *v86;
  unsigned __int8 *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char v92[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = sub_10007B5C0(16);

  if (!v3)
    return;
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries], v92, 0, 0);
  v5 = *v4;
  v91 = _swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v14 = v5;
    else
      v14 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v6)
      goto LABEL_4;
LABEL_18:
    swift_bridgeObjectRelease(v5);
    v13 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v6)
    goto LABEL_18;
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_90;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    else
      v10 = *(id *)(v5 + 8 * i + 32);
    v11 = v10;
    if ((*((_BYTE *)v10 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden) & 1) != 0)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v8 = v91[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
      specialized ContiguousArray._endMutation()(v9);
    }
  }
  swift_bridgeObjectRelease(v5);
  v13 = (uint64_t)v91;
LABEL_19:
  v15 = (id *)DOCLog.UI.unsafeMutableAddressor(v12);
  v16 = *v15;
  static os_log_type_t.debug.getter(v16);
  v88 = sub_10006922C((uint64_t *)&unk_100644560);
  v17 = swift_allocObject(v88, 112, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1004D4CE0;
  v18 = objc_msgSend(v1, "arrangedSubviews");
  v19 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v35 = v20;
    else
      v35 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v21 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
  *(_QWORD *)(v17 + 56) = &type metadata for Int;
  *(_QWORD *)(v17 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 32) = v21;
  v23 = objc_msgSend(v1, "subviews", v22);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v19);

  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v36 = v24;
    else
      v36 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)(v17 + 96) = &type metadata for Int;
  *(_QWORD *)(v17 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 72) = v25;
  os_log(_:dso:log:type:_:)("[DOCMetadataView] 2 rows %d subviews %d", v77, v80);

  v26 = objc_msgSend(v1, "subviews", swift_bridgeObjectRelease(v17).n128_f64[0]);
  v89 = v19;
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v19);

  v28 = (unint64_t)v27 >> 62;
  v90 = v27;
  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v37 = v27;
    else
      v37 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v29 = _CocoaArrayWrapper.endIndex.getter(v37);
    v30 = v88;
    if (!v29)
      goto LABEL_43;
  }
  else
  {
    v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v27);
    v30 = v88;
    if (!v29)
      goto LABEL_43;
  }
  if (v29 < 1)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v31 = 0;
  v32 = v27 & 0xC000000000000001;
  do
  {
    if (v32)
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v90);
    else
      v33 = *(id *)(v90 + 8 * v31 + 32);
    v34 = v33;
    ++v31;
    objc_msgSend(v33, "removeFromSuperview");

  }
  while (v29 != v31);
LABEL_43:
  swift_bridgeObjectRelease(v90);
  v86 = v15;
  v38 = *v15;
  static os_log_type_t.debug.getter(v38);
  v39 = swift_allocObject(v30, 112, 7);
  *(_OWORD *)(v39 + 16) = xmmword_1004D4CE0;
  v87 = (unsigned __int8 *)v1;
  v40 = objc_msgSend(v1, "arrangedSubviews");
  v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v89);

  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v74 = v41;
    else
      v74 = v41 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v41);
    v42 = _CocoaArrayWrapper.endIndex.getter(v74);
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v41);
  *(_QWORD *)(v39 + 56) = &type metadata for Int;
  *(_QWORD *)(v39 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v39 + 32) = v42;
  if (v28)
  {
    if (v90 < 0)
      v44 = v90;
    else
      v44 = v90 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v90);
    v43 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v90);
  }
  else
  {
    v43 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v39 + 96) = &type metadata for Int;
  *(_QWORD *)(v39 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v39 + 72) = v43;
  os_log(_:dso:log:type:_:)("[DOCMetadataView] 2.1 rows %d subviews %d", v78, v81);

  swift_bridgeObjectRelease(v39);
  v45 = swift_allocObject(v30, 72, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1004D9670;
  v46 = v13 < 0 || (v13 & 0x4000000000000000) != 0;
  if (v46)
  {
    swift_bridgeObjectRetain(v13);
    v47 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_release(v13);
  }
  else
  {
    v47 = *(_QWORD *)(v13 + 16);
  }
  v48 = _swiftEmptyArrayStorage;
  v85 = v43;
  if (!v47)
    goto LABEL_66;
  v91 = _swiftEmptyArrayStorage;
  sub_100081774(0, v47 & ~(v47 >> 63), 0);
  if (v47 < 0)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v83 = v46;
  v84 = v45;
  v49 = 0;
  v48 = v91;
  v50 = v13 & 0xC000000000000001;
  v51 = v13;
  do
  {
    if (v50)
      v52 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v13);
    else
      v52 = (char *)*(id *)(v13 + 8 * v49 + 32);
    v53 = v52;
    v54 = sub_1003CC71C(*(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey], *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8], *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16], *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24]);
    v56 = v55;

    v91 = v48;
    v58 = v48[2];
    v57 = v48[3];
    if (v58 >= v57 >> 1)
    {
      sub_100081774(v57 > 1, v58 + 1, 1);
      v48 = v91;
    }
    ++v49;
    v48[2] = v58 + 1;
    v59 = &v48[2 * v58];
    v59[4] = v54;
    v59[5] = v56;
    v13 = v51;
  }
  while (v47 != v49);
  v30 = v88;
  v45 = v84;
  v46 = v83;
LABEL_66:
  *(_QWORD *)(v45 + 56) = sub_10006922C(&qword_10064F390);
  *(_QWORD *)(v45 + 64) = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v45 + 32) = v48;
  v60 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
  v61 = (void *)static OS_os_log.default.getter(v60);
  v62 = static os_log_type_t.default.getter(v61);
  os_log(_:dso:log:type:_:)("[DOCMetadataView] 2.1 installing %@", 35, 2, &_mh_execute_header, v61, v62, v45);
  swift_bridgeObjectRelease(v45);

  if (v46)
  {
    swift_retain();
    v64 = _CocoaArrayWrapper.endIndex.getter(v63);
    if (!v64)
      goto LABEL_76;
    goto LABEL_70;
  }
  v64 = *(_QWORD *)(v13 + 16);
  v65 = swift_retain();
  if (v64)
  {
LABEL_70:
    if (v64 >= 1)
    {
      v66 = 0;
      do
      {
        if ((v13 & 0xC000000000000001) != 0)
          v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v66, v13);
        else
          v67 = *(id *)(v13 + 8 * v66 + 32);
        v68 = v67;
        ++v66;
        v91 = v67;
        sub_1003D2018(&v91, v87, v13);

      }
      while (v64 != v66);
      goto LABEL_76;
    }
LABEL_92:
    __break(1u);
    return;
  }
LABEL_76:
  swift_release_n(v13, 2, v65);
  v69 = *v86;
  static os_log_type_t.debug.getter(v69);
  v70 = swift_allocObject(v30, 112, 7);
  *(_OWORD *)(v70 + 16) = xmmword_1004D4CE0;
  v71 = objc_msgSend(v87, "arrangedSubviews");
  v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v89);

  if ((unint64_t)v72 >> 62)
  {
    if (v72 < 0)
      v76 = v72;
    else
      v76 = v72 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v72);
    v73 = _CocoaArrayWrapper.endIndex.getter(v76);
    swift_bridgeObjectRelease(v72);
  }
  else
  {
    v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v72);
  *(_QWORD *)(v70 + 56) = &type metadata for Int;
  *(_QWORD *)(v70 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v70 + 32) = v73;
  swift_bridgeObjectRelease(v90);
  *(_QWORD *)(v70 + 96) = &type metadata for Int;
  *(_QWORD *)(v70 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v70 + 72) = v85;
  os_log(_:dso:log:type:_:)("[DOCMetadataView] 2.2 rows %d subviews %d", v79, v82);

  objc_msgSend(v87, "invalidateIntrinsicContentSize", swift_bridgeObjectRelease(v70).n128_f64[0]);
}

void sub_1003D2018(_QWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  _BYTE *v13;
  id v14;
  char v15;
  int v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  int v24;
  int v25;
  BOOL v26;
  double *v27;
  double *v28;
  double *v29;
  double *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  int v36;
  int v37;

  v5 = (_BYTE *)*a1;
  objc_msgSend(a2, "addArrangedSubview:", *a1);
  v6 = a2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators];
  v7 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator;
  v8 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = v6;
  if (v6 != v8)
    objc_msgSend(v5, "setNeedsDisplay");
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v9)
    {
LABEL_5:
      v10 = v9 - 1;
      if (__OFSUB__(v9, 1))
      {
        __break(1u);
      }
      else if ((a3 & 0xC000000000000001) == 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v11 = *(id *)(a3 + 8 * v10 + 32);
LABEL_10:
          v12 = v11;
          swift_bridgeObjectRelease(a3);
          type metadata accessor for DOCMetadataKeyValueRow();
          v13 = v5;
          v14 = v12;
          v15 = static NSObject.== infix(_:_:)(v14, v13);

          if ((v15 & 1) != 0)
          {
            v16 = v5[v7];
            v5[v7] = 0;
            if (v16 == 1)
              objc_msgSend(v13, "setNeedsDisplay");
          }
          goto LABEL_18;
        }
        __break(1u);
        return;
      }
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a3);
      goto LABEL_10;
    }
  }
  else
  {
    v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    if (v9)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(a3);
LABEL_18:
  v18 = *(double *)&a2[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth];
  v19 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth;
  v20 = *(double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth];
  *(double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] = v18;
  if (v18 != v20)
  {
    v21 = sub_1003CF878();
    objc_msgSend(v21, "setConstant:", *(double *)&v5[v19]);

    v22 = sub_1003CF878();
    objc_msgSend(v22, "setActive:", *(double *)&v5[v19] > 0.0);

  }
  v23 = OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment;
  v24 = a2[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment];
  v25 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight] = v24 ^ 1;
  if (v24 == v25)
  {
    v26 = (v24 & 1) == 0;
    if ((v24 & 1) != 0)
      v27 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics];
    else
      v27 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 32];
    if (v26)
      v28 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 40];
    else
      v28 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 8];
    if (v26)
      v29 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 48];
    else
      v29 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 16];
    if (v26)
      v30 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 56];
    else
      v30 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 24];
    v31 = *v30;
    v32 = *v29;
    v33 = *v28;
    v34 = *v27;
    v35 = sub_1003CFD84();
    objc_msgSend(v35, "setLayoutMargins:", v34, v33, v32, v31);

  }
  v36 = a2[v23];
  v37 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment] = v36;
  if (v36 != v37)
    sub_1003D07EC();
}

void sub_1003D22D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, id a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  Swift::String v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  char v38;
  NSString v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v57;
  _BYTE v58[24];

  v9 = v8;
  v17 = (uint64_t *)(v9 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries);
  swift_beginAccess(v9 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries, v58, 0, 0);
  v18 = *v17;
  swift_bridgeObjectRetain(v18);
  sub_1003DB33C(a1, a2, a3, a4);
  v19 = sub_1003D5250(v18, a1, a2, a3, a4);
  sub_1003DB370(a1, a2, a3, a4);
  swift_bridgeObjectRelease(v18);
  if (!v19)
    return;
  v55 = a7;
  if (a2 == 1)
  {
    if (!a5)
    {
      v29 = sub_1003CFA58();
      v30 = a6;
LABEL_12:
      v37 = objc_allocWithZone((Class)NSAttributedString);
      v38 = a8;
      v39 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v37, "initWithString:", v39);

      a8 = v38;
      a5 = 0;
      goto LABEL_13;
    }
    v52 = a8;
    v53 = v9;
    v20 = a5;
    v21 = sub_1003CE318(a1, 1uLL);
    v23 = v22;
    v54 = v20;
    v24 = objc_msgSend(v20, "string");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    if (v21 == (id)v25 && v23 == v27)
    {
      swift_bridgeObjectRelease_n(v23, 2);
      v9 = v53;
      a8 = v52;
    }
    else
    {
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v27);
      v9 = v53;
      a8 = v52;
      if ((v31 & 1) == 0)
      {

        v51 = v54;
        v29 = sub_1003CFA58();
        v36 = a5;
        v30 = a6;
        goto LABEL_13;
      }
    }
    sub_1003CE318(a1, 1uLL);
    v57 = v32;
    v33._countAndFlagsBits = 10;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    v34 = objc_allocWithZone((Class)NSAttributedString);
    v35 = String._bridgeToObjectiveC()();
    a5 = objc_msgSend(v34, "initWithString:", v35, swift_bridgeObjectRelease(v57).n128_f64[0]);

  }
  else
  {
    v28 = a5;
  }
  v30 = a6;
  v29 = sub_1003CFA58();
  v36 = a5;
  if (!a5)
    goto LABEL_12;
LABEL_13:
  v40 = a5;
  DOCViewDecorator<>.attributedText.setter(v36);
  swift_release(v29);
  v41 = sub_1003CFA58();
  v42 = (_QWORD *)(*(_QWORD *)(v41 + 24) + OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText);
  v43 = v42[1];
  *v42 = v30;
  v42[1] = v55;
  swift_bridgeObjectRetain(v55);
  swift_release(v41);
  swift_bridgeObjectRelease(v43);
  v44 = sub_1003CFA58();
  v45 = (void *)objc_opt_self(UIColor);
  v46 = &selRef_placeholderTextColor;
  if ((a8 & 1) == 0)
    v46 = &selRef_labelColor;
  DOCViewDecorator<>.textColor.setter(objc_msgSend(v45, *v46));
  swift_release(v44);
  if (*(_QWORD *)&v19[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8] == 2)
  {
    v47 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink;
    v19[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink] = 1;
    v48 = sub_1003CFA58();
    *(_BYTE *)(*(_QWORD *)(v48 + 24) + OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink) = v19[v47];
    sub_1001D2A14();
    swift_release(v48);
    v49 = sub_1003CFA58();
    v50 = *(_QWORD *)(v49 + 24) + OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate;
    *(_QWORD *)(v50 + 8) = &off_1005E6D40;
    swift_unknownObjectWeakAssign(v50, v9);

    swift_release(v49);
  }
  else
  {

  }
}

double sub_1003D26E8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  if (v0[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] == 1)
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
      else
        v3 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes]);
      v4 = _CocoaArrayWrapper.endIndex.getter(v3);
      swift_bridgeObjectRelease(v1);
      if (v4 == 1)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
    {
LABEL_4:
      if (qword_100641120 != -1)
        swift_once(&qword_100641120, sub_1003CE2F0);
      v2 = &qword_100672D80;
      goto LABEL_14;
    }
  }
  if (qword_100641128 != -1)
    swift_once(&qword_100641128, sub_1003CE304);
  v2 = &qword_100672D88;
LABEL_14:
  v5 = swift_bridgeObjectRetain(*v2);
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys] = v5;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  v8 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
  if (!((unint64_t)v9 >> 62))
  {
    if (*(uint64_t *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return result;
    goto LABEL_16;
  }
  if (v9 < 0)
    v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
  else
    v14 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes]);
  v15 = _CocoaArrayWrapper.endIndex.getter(v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  if (v15 >= 1)
  {
LABEL_16:
    v10 = *(_QWORD *)&v0[v8];
    swift_bridgeObjectRetain(v10);
    v11 = objc_msgSend(v0, "levelOfDetail");
    v12 = swift_allocObject(&unk_1005E6DD8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    swift_retain();
    sub_1003D58B4(v10, (uint64_t)v11, (uint64_t)sub_1003DB274, v12);
    v13 = swift_bridgeObjectRelease(v10);
    swift_release_n(v12, 2, v13);
  }
  return result;
}

void sub_1003D28C0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *Strong;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  unsigned __int8 *v37;
  int v38;
  int v39;
  unsigned __int8 *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  void *v57;
  NSObject *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  Class v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Class v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _QWORD *v93;
  _QWORD aBlock[5];
  uint64_t v95;
  char v96[24];
  char v97[24];
  char v98[24];
  uint64_t v99;
  char v100[8];
  char v101[8];

  v86 = a1;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v83 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v101, 0, 0);
  v90 = a5;
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v92 = Strong;
    v17 = (uint64_t *)&Strong[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries];
    swift_beginAccess(&Strong[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries], v100, 1, 0);
    v18 = *v17;
    v19 = (unint64_t)*v17 >> 62;
    v78 = v14;
    if (v19)
      goto LABEL_37;
    v91 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v99 = *(_QWORD *)&v92[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys];
      v20 = v99;
      v92[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues] = (a2 | a3 | a4) != 0;
      v21 = *(_QWORD *)(v20 + 16);
      v82 = v9;
      v81 = v10;
      v80 = v12;
      v79 = v13;
      if (!v21)
      {
LABEL_8:
        swift_bridgeObjectRetain(v20);
        goto LABEL_14;
      }
      v22 = 0;
      v23 = (uint64_t *)(v20 + 40);
      while (1)
      {
        v24 = *v23;
        v23 += 4;
        if (v24 == 10)
          break;
        if (v21 == ++v22)
          goto LABEL_8;
      }
      swift_bridgeObjectRetain(v20);
      v18 = (uint64_t)&v99;
      v25 = sub_1001742C8(v22);
      sub_1003DB370(v25, v26, v27, v28);
      sub_1003D7898((void *)a2, (void *)a3, (void *)a4);
      a4 = (unint64_t)v29;
      v13 = v29[2];
      if (!v13)
        break;
      a2 = (unint64_t)(v29 + 7);
      while (*(_QWORD *)(v99 + 16) >= v22)
      {
        v9 = *(_QWORD *)(a2 - 8);
        a3 = *(_QWORD *)a2;
        v12 = *(char **)(a2 - 24);
        v10 = *(_QWORD *)(a2 - 16);
        swift_bridgeObjectRetain(v10);
        swift_bridgeObjectRetain(a3);
        v18 = (uint64_t)&v99;
        sub_100459A70(v22, v22, (uint64_t)v12, v10, v9, a3);
        a2 += 32;
        if (!--v13)
          goto LABEL_13;
      }
      __break(1u);
LABEL_37:
      if (v18 < 0)
        v75 = v18;
      else
        v75 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v91 = _CocoaArrayWrapper.endIndex.getter(v75);
      swift_bridgeObjectRelease(v18);
    }
LABEL_13:
    swift_bridgeObjectRelease(a4);
LABEL_14:
    v88 = *v17;
    *v17 = (uint64_t)_swiftEmptyArrayStorage;
    v85 = v99;
    v30 = *(_QWORD *)(v99 + 16);
    if (v30)
    {
      v89 = OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators;
      swift_beginAccess(v90, v98, 0, 0);
      v87 = (Class)type metadata accessor for DOCMetadataKeyValueRow();
      v31 = (unint64_t *)(v85 + 56);
      do
      {
        v32 = *(v31 - 3);
        v33 = *(v31 - 2);
        v34 = *(v31 - 1);
        v35 = *v31;
        v36 = objc_allocWithZone(v87);
        sub_1003DB33C(v32, v33, v34, v35);
        sub_1003DB33C(v32, v33, v34, v35);
        v37 = (unsigned __int8 *)sub_1003CFF18(v32, v33, v34, v35, 0.0, 0.0, 0.0, 0.0);
        objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v38 = v92[v89];
        v39 = v37[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator];
        v37[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = v38;
        if (v38 != v39)
          objc_msgSend(v37, "setNeedsDisplay");
        swift_beginAccess(v17, aBlock, 33, 0);
        v40 = v37;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
        v42 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v41 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v42 >= v41 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
        v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
        specialized Array._endMutation()(v43);
        swift_endAccess(aBlock);
        if (v91 || (v44 = swift_unknownObjectWeakLoadStrong(v90)) == 0)
        {
          sub_1003DB370(v32, v33, v34, v35);
        }
        else
        {
          v45 = (void *)v44;
          sub_1003D22D8(v32, v33, v34, v35, 0, 0, 0, 0);
          sub_1003DB370(v32, v33, v34, v35);

        }
        v31 += 4;

        --v30;
      }
      while (v30);
    }
    swift_bridgeObjectRelease(v85);
    v87 = (Class)dispatch_group_create();
    v46 = *v17;
    if ((unint64_t)*v17 >> 62)
    {
      if (v46 < 0)
        v76 = *v17;
      else
        v76 = v46 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v17);
      v89 = _CocoaArrayWrapper.endIndex.getter(v76);
    }
    else
    {
      v89 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v46);
    }
    if (v89)
    {
      if (v89 < 1)
      {
        __break(1u);
        return;
      }
      v84 = v46 & 0xC000000000000001;
      swift_beginAccess(v90, v97, 0, 0);
      v47 = 0;
      v85 = v46;
      v48 = v87;
      v49 = v92;
      v50 = v88;
      do
      {
        if (v84)
          v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v46);
        else
          v51 = (char *)*(id *)(v46 + 8 * v47 + 32);
        v52 = v51;
        ++v47;
        dispatch_group_enter(v48);
        v53 = *(void **)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
        v91 = *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
        v54 = *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16];
        v55 = *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24];
        v56 = objc_msgSend(v49, "effectiveUserInterfaceLayoutDirection");
        v57 = (void *)swift_unknownObjectWeakLoadStrong(v90);
        swift_unknownObjectWeakInit(aBlock);

        swift_bridgeObjectRetain(v50);
        v58 = v48;
        v59 = v52;
        sub_1003D8350(v86, v49, (uint64_t)v56, v91, v53, v54, v55, v58, v50, v59, (uint64_t)aBlock);
        swift_bridgeObjectRelease(v50);

        swift_unknownObjectWeakDestroy(aBlock);
        v46 = v85;
      }
      while (v89 != v47);
    }
    swift_bridgeObjectRelease(v88);
    swift_bridgeObjectRelease(v46);
    v60 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v61 = (void *)static OS_dispatch_queue.main.getter(v60);
    v62 = swift_allocObject(&unk_1005E6DD8, 24, 7);
    v63 = v90;
    swift_beginAccess(v90, v96, 0, 0);
    v64 = (void *)swift_unknownObjectWeakLoadStrong(v63);
    swift_unknownObjectWeakInit(v62 + 16);

    aBlock[4] = sub_1003DB3A4;
    v95 = v62;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E6EB8;
    v65 = _Block_copy(aBlock);
    swift_retain();
    v66 = v83;
    static DispatchQoS.unspecified.getter(v67);
    v93 = _swiftEmptyArrayStorage;
    v68 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v69 = sub_10006922C((uint64_t *)&unk_100647540);
    v70 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v71 = v80;
    v72 = v82;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v93, v69, v70, v82, v68);
    v73 = v87;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v66, v71, v61, v65);
    _Block_release(v65);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v71, v72);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v79);
    v74 = v95;
    swift_release(v62);
    swift_release(v74);
  }
}

void sub_1003D3144(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, NSObject *a7, uint64_t a8, void *a9, uint64_t a10)
{
  char *v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  id v29;
  id v30;
  unint64_t v31;
  NSString v32;
  uint64_t Strong;
  void *v34;
  NSObject *v35;
  _BYTE v37[32];

  v16 = a9;
  v17 = sub_1003D54AC(a8, (uint64_t)v16);

  if (v17)
  {
    v35 = a7;
    v18 = a6;
    v19 = sub_1003CFA58();
    v20 = DOCViewDecorator<>.text.getter();
    v22 = v21;
    v23 = v19;
    a6 = v18;
    swift_release(v23);
    if (!v22)
      goto LABEL_8;
    swift_bridgeObjectRelease(v22);
    v24 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v24 = v20 & 0xFFFFFFFFFFFFLL;
    if (v24 && (v18 & 1) != 0)
    {
      v25 = sub_1003CFA58();
      a3 = (void *)DOCViewDecorator<>.attributedText.getter();
      swift_release(v25);
      v26 = sub_1003CFA58();

      v27 = (uint64_t *)(*(_QWORD *)(v26 + 24) + OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText);
      a5 = v27[1];
      a4 = *v27;
      swift_bridgeObjectRetain(a5);
      swift_release(v26);
    }
    else
    {
LABEL_8:

      swift_bridgeObjectRetain(a5);
      v28 = a3;
    }
    a7 = v35;
  }
  else
  {
    swift_bridgeObjectRetain(a5);
    v29 = a3;
  }
  v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden] = a3 == 0;
  v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail] = 1;
  sub_1003CF7BC();
  v30 = sub_1003CF920();
  if (a2)
    v31 = a2;
  else
    v31 = 0xE000000000000000;
  swift_bridgeObjectRetain(a2);
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setText:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  swift_beginAccess(a10, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a10);
  if (Strong)
  {
    v34 = (void *)Strong;
    sub_1003D22D8(*(_QWORD *)&v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey], *(_QWORD *)&v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8], *(_QWORD *)&v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16], *(_QWORD *)&v16[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24], a3, a4, a5, a6 & 1);

  }
  swift_bridgeObjectRelease(a5);

  dispatch_group_leave(a7);
}

void sub_1003D3384(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  _QWORD aBlock[5];
  uint64_t v15;
  char v16[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_1005E6EF0, 24, 7);
    *(_QWORD *)(v5 + 16) = v3;
    v6 = swift_allocObject(&unk_1005E6F18, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_1003DB260;
    *(_QWORD *)(v6 + 24) = v5;
    aBlock[4] = sub_10010DB64;
    v15 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10006655C;
    aBlock[3] = &unk_1005E6F30;
    v7 = _Block_copy(aBlock);
    v8 = v15;
    swift_retain();
    v9 = v3;
    objc_msgSend((id)v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 95, 962, 40, 1);
    swift_release(v5);
    swift_release(v6);
    if ((v4 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v10 = swift_unknownObjectWeakLoadStrong(&v9[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate]);
      if (v10)
      {
        v12 = v10;
        sub_10022B60C(v11);
        swift_unknownObjectRelease(v12);
      }
      v13 = v9;
      sub_1003DB3BC((uint64_t)v13, (uint64_t)v13);

    }
  }
}

void sub_1003D3530()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_nodes));
  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries));

}

id sub_1003D358C(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCMetadataView);
}

uint64_t type metadata accessor for DOCMetadataView()
{
  return objc_opt_self(_TtC5Files15DOCMetadataView);
}

unint64_t destroy for DOCMetadataKey(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  }
  return result;
}

uint64_t initializeWithCopy for DOCMetadataKey(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v4);
  }
  return a1;
}

_QWORD *assignWithCopy for DOCMetadataKey(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v9 = a2[1];
      a1[1] = v9;
      a1[2] = a2[2];
      v10 = a2[3];
      a1[3] = v10;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_7:
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for DOCMetadataKey(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
LABEL_5:
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCMetadataKey(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF4 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483637);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 10;
  if (v4 >= 0xC)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCMetadataKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF5)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 10;
  }
  return result;
}

_QWORD *sub_1003D3938(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCMetadataKey()
{
  return &type metadata for DOCMetadataKey;
}

uint64_t storeEnumTagSinglePayload for DOCMetadataLabelAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D39B8 + 4 * byte_1004E68D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D39EC + 4 * byte_1004E68D0[v4]))();
}

uint64_t sub_1003D39EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D39F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D39FCLL);
  return result;
}

uint64_t sub_1003D3A08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D3A10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D3A14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D3A1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCMetadataLabelAlignment()
{
  return &type metadata for DOCMetadataLabelAlignment;
}

ValueMetadata *type metadata accessor for DOCMetadataKeyValueRow.Metrics()
{
  return &type metadata for DOCMetadataKeyValueRow.Metrics;
}

_QWORD *sub_1003D3A48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UIButton.Configuration.Size(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v11 = v10;
  }
  return a1;
}

void sub_1003D3ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_1003D3B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v10 = v9;
  return a1;
}

uint64_t sub_1003D3B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1003D3BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1003D3C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1003D3CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D3CDC);
}

uint64_t sub_1003D3CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1003D3D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D3D70);
}

uint64_t sub_1003D3D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UIButton.Configuration.Size(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1003D3DE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UIButton.Configuration.Size(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1004E6920;
    v4[2] = &unk_1004E69E8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_1003D3E68()
{
  unint64_t result;

  result = qword_100652BD8;
  if (!qword_100652BD8)
  {
    result = swift_getWitnessTable(&unk_1004E6A78, &type metadata for DOCMetadataLabelAlignment);
    atomic_store(result, (unint64_t *)&qword_100652BD8);
  }
  return result;
}

void sub_1003D3EAC(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  Swift::Int v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  char *v142;
  uint64_t v143;
  char **v144;
  char *v145;
  Swift::Int v146;
  uint64_t v147;
  uint64_t v148;

  v3 = type metadata accessor for Date(0);
  v148 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v134 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v145 = (char *)&v130 - v6;
  __chkstk_darwin(v7);
  v142 = (char *)&v130 - v8;
  __chkstk_darwin(v9);
  v141 = (char *)&v130 - v10;
  v11 = (Swift::Int)a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_1003D4924(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v144 = a1;
  v131 = v12;
  v137 = v1;
  if (v11 < 2)
  {
    v17 = (char *)_swiftEmptyArrayStorage;
    v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    v130 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v19 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v19 >= 2)
      {
        v122 = *v144;
        do
        {
          v123 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v122)
            goto LABEL_148;
          v124 = *(_QWORD *)&v17[16 * v123 + 32];
          v125 = *(_QWORD *)&v17[16 * v19 + 24];
          v126 = v137;
          sub_1003D4B9C((unint64_t)&v122[*(_QWORD *)(v148 + 72) * v124], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * v125], v136);
          v137 = v126;
          if (v126)
            break;
          if (v125 < v124)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_10046564C((uint64_t)v17);
          if (v123 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v127 = &v17[16 * v123 + 32];
          *(_QWORD *)v127 = v124;
          *((_QWORD *)v127 + 1) = v125;
          v128 = *((_QWORD *)v17 + 2);
          if (v19 > v128)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v128 - v19));
          *((_QWORD *)v17 + 2) = v128 - 1;
          v19 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease(v17);
      v129 = v130;
      v130[2] = 0;
      swift_bridgeObjectRelease(v129);
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v148 + 80);
    v130 = (_QWORD *)v15;
    v136 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v135 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v137;
      goto LABEL_58;
    }
    v22 = *v144;
    v146 = v11;
    v23 = v148;
    v24 = *(_QWORD *)(v148 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 16);
    v26 = v141;
    v25(v141, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v142;
    v25(v142, v27, v3);
    v143 = sub_10005A360(&qword_100652BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    LODWORD(v140) = dispatch thunk of static Comparable.< infix(_:_:)(v26, v28, v3, v143);
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v135;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v138 = v31;
    v147 = v24;
    if (v20 + 2 >= v146)
    {
      v41 = v137;
      v40 = v146;
      v39 = v24;
      if ((v140 & 1) == 0)
        break;
    }
    else
    {
      v132 = v17;
      v139 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v141;
        v25(v141, &v33[v34], v3);
        v37 = v142;
        v25(v142, &v33[v139], v3);
        v38 = dispatch thunk of static Comparable.< infix(_:_:)(v36, v37, v3, v143);
        v29(v37, v3);
        v29(v36, v3);
        if (((v140 ^ v38) & 1) != 0)
        {
          v41 = v137;
          v17 = v132;
          v32 = v35;
          v20 = v135;
          v40 = v146;
          v39 = v147;
          if ((v140 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v147;
        v33 += v147;
      }
      while (v146 != v35 + 1);
      v40 = v146;
      v32 = v146;
      v41 = v137;
      v17 = v132;
      v20 = v135;
      if ((v140 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v132 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v144;
    v143 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v138)
          goto LABEL_147;
        v48 = v41;
        v49 = &v138[v46];
        v50 = &v138[v43];
        v140 = *(char **)(v148 + 32);
        ((void (*)(char *, char *, uint64_t))v140)(v134, &v138[v46], v3);
        if (v46 < v43 || v49 >= &v138[v44])
        {
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v3);
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront(v49);
        }
        ((void (*)(char *, char *, uint64_t))v140)(v50, v134, v3);
        v41 = v48;
        v32 = v143;
        v47 = v144;
        v39 = v147;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v132;
    v20 = v135;
    v40 = v146;
    if (v32 < v146)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    v137 = v41;
    v143 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_100464E4C(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v71 = *((_QWORD *)v17 + 2);
    v70 = *((_QWORD *)v17 + 3);
    v19 = v71 + 1;
    if (v71 >= v70 >> 1)
      v17 = sub_100464E4C((char *)(v70 > 1), v71 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v72 = v17 + 32;
    v73 = &v17[16 * v71 + 32];
    v74 = v143;
    *(_QWORD *)v73 = v20;
    *((_QWORD *)v73 + 1) = v74;
    if (v71)
    {
      while (1)
      {
        v75 = v19 - 1;
        if (v19 >= 4)
        {
          v80 = &v72[16 * v19];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_124;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_125;
          v87 = v19 - 2;
          v88 = &v72[16 * v19 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_127;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_130;
          if (v92 >= v83)
          {
            v110 = &v72[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_134;
            v103 = v78 < v113;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v104 = *((_QWORD *)v17 + 4);
            v105 = *((_QWORD *)v17 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_89;
          }
          v77 = *((_QWORD *)v17 + 4);
          v76 = *((_QWORD *)v17 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_126;
        v87 = v19 - 2;
        v93 = &v72[16 * v19 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_129;
        v99 = &v72[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_132;
        if (__OFADD__(v97, v102))
          goto LABEL_133;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_95:
          if (v103)
            v75 = v87;
          goto LABEL_97;
        }
LABEL_89:
        if ((v98 & 1) != 0)
          goto LABEL_128;
        v106 = &v72[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_131;
        if (v109 < v97)
          goto LABEL_14;
LABEL_97:
        v114 = v75 - 1;
        if (v75 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v144)
          goto LABEL_146;
        v115 = v17;
        v116 = &v72[16 * v114];
        v117 = *(_QWORD *)v116;
        v118 = &v72[16 * v75];
        v119 = *((_QWORD *)v118 + 1);
        v120 = v137;
        sub_1003D4B9C((unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v116], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v118], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * v119], v136);
        v137 = v120;
        if (v120)
        {
          v17 = v115;
          goto LABEL_118;
        }
        if (v119 < v117)
          goto LABEL_121;
        if (v75 > *((_QWORD *)v115 + 2))
          goto LABEL_122;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v72[16 * v114 + 8] = v119;
        v121 = *((_QWORD *)v115 + 2);
        if (v75 >= v121)
          goto LABEL_123;
        v17 = v115;
        v19 = v121 - 1;
        memmove(&v72[16 * v75], v118 + 16, 16 * (v121 - 1 - v75));
        *((_QWORD *)v115 + 2) = v121 - 1;
        if (v121 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (Swift::Int)v144[1];
    v18 = v143;
    if (v143 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v144;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v131)
    goto LABEL_58;
  if (__OFADD__(v20, v131))
    goto LABEL_143;
  if (v20 + v131 >= v40)
    v51 = v40;
  else
    v51 = v20 + v131;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v132 = v17;
      v133 = v51;
      v52 = *(_QWORD *)(v148 + 72);
      v53 = *(char **)(v148 + 16);
      v137 = v41;
      v138 = v53;
      v54 = v52 * (v32 - 1);
      v139 = v52;
      v147 = v32 * v52;
      do
      {
        v56 = 0;
        v143 = v32;
        v140 = (char *)v54;
        while (1)
        {
          v146 = v20;
          v57 = *v47;
          v58 = v141;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v138;
          ((void (*)(char *, char *, uint64_t))v138)(v141, &(*v47)[v147 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v142;
          v60(v142, v61, v3);
          v63 = sub_10005A360(&qword_100652BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          LOBYTE(v57) = dispatch thunk of static Comparable.< infix(_:_:)(v58, v62, v3, v63);
          v64 = *(void (**)(_QWORD, _QWORD))(v148 + 8);
          v64(v62, v3);
          v64(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v65 = *v59;
          if (!*v59)
            goto LABEL_145;
          v66 = &v65[v147 + v56];
          v54 = (uint64_t)v140;
          v67 = &v140[(_QWORD)v65 + v56];
          v68 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 32);
          v68(v145, v66, v3);
          swift_arrayInitWithTakeFrontToBack(v66, v67, 1, v3);
          v68(v67, v145, v3);
          v56 -= v139;
          v20 = v146 + 1;
          v55 = v143;
          v47 = v144;
          if (v143 == v146 + 1)
            goto LABEL_51;
        }
        v55 = v143;
        v47 = v59;
        v54 = (uint64_t)v140;
LABEL_51:
        v32 = v55 + 1;
        v54 += v139;
        v147 += v139;
        v20 = v135;
      }
      while (v32 != v133);
      v32 = v133;
      v41 = v137;
      v17 = v132;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003D4924(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v7 = type metadata accessor for Date(0);
  v38 = *(_QWORD **)(v7 - 8);
  __chkstk_darwin(v7);
  v37 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v34 = (char *)&v28 - v10;
  v12.n128_f64[0] = __chkstk_darwin(v11);
  v33 = (char *)&v28 - v13;
  v36 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = v38[9];
    v31 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v32 = a4;
    v40 = v14 * (v36 - 1);
    v35 = v14;
    v39 = v14 * v36;
LABEL_5:
    v15 = 0;
    v16 = v30;
    while (1)
    {
      v17 = *a4;
      v18 = v33;
      v19 = v31;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v31)(v33, v39 + v15 + *a4, v7, v12);
      v20 = v34;
      v19(v34, v40 + v15 + v17, v7);
      v21 = sub_10005A360(&qword_100652BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7, v21);
      v22 = (void (*)(char *, uint64_t))v38[1];
      v23 = v20;
      a4 = v32;
      v22(v23, v7);
      v22(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v29)
          return;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v39 + v15;
      v26 = (char *)(v24 + v40 + v15);
      v27 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v27(v37, v25, v7);
      swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v7);
      v27(v26, (uint64_t)v37, v7);
      v15 -= v35;
      if (v36 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1003D4B9C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD **)(v8 - 8);
  __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v50 = (char *)&v45 - v12;
  v52 = v9[9];
  if (!v52)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v15 = v13 / v52;
  if (v14 >= v13 / v52)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v52;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v15, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v29 = a4 + v17;
      v53 = a4 + v17;
      v55 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v31 = -v52;
        v46 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v47 = v9;
        v48 = a4;
        v49 = a1;
        do
        {
          v52 = a3 + v31;
          v32 = v50;
          v33 = v46;
          v46(v50, v29 + v31, v8);
          v34 = a2 + v31;
          v35 = v31;
          v36 = v51;
          v33(v51, v34, v8);
          v37 = sub_10005A360(&qword_100652BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          LOBYTE(v33) = dispatch thunk of static Comparable.< infix(_:_:)(v32, v36, v8, v37);
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v36, v8);
          v38(v32, v8);
          if ((v33 & 1) != 0)
          {
            v31 = v35;
            v39 = v52;
            if (a3 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v34, 1, v8);
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v52);
            }
            v55 += v31;
          }
          else
          {
            v42 = v53;
            v43 = v53 + v35;
            v53 += v35;
            v31 = v35;
            v39 = v52;
            if (a3 < v42 || v52 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v43, 1, v8);
              v34 = a2;
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v52);
              v34 = a2;
            }
          }
          v29 = v53;
          if (v53 <= v40)
            break;
          a2 = v34;
          a3 = v39;
        }
        while (v34 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v52;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v14, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v49 = a4 + v16;
    v53 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v50;
        v19(v50, a2, v8);
        v22 = v51;
        v19(v51, a4, v8);
        v23 = sub_10005A360(&qword_100652BF0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v24 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v8, v23);
        v25 = (void (*)(char *, uint64_t))v9[1];
        v25(v22, v8);
        v25(v21, v8);
        v26 = v55;
        if ((v24 & 1) != 0)
        {
          v27 = a2 + v52;
          if (v55 < a2 || v55 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 == a2)
              v26 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v55);
          }
        }
        else
        {
          v28 = v54 + v52;
          if (v55 < v54 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront(v55);
          }
          v54 = v28;
          v27 = a2;
        }
        v55 = v26 + v52;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_60:
    sub_10046547C(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1003D50F0()
{
  sub_1003D07EC();
}

uint64_t sub_1003D5114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  switch(a2)
  {
    case 0:
      return !a6;
    case 1:
      return a6 == 1;
    case 2:
      return a6 == 2;
    case 3:
      return a6 == 3;
    case 4:
      return a6 == 4;
    case 5:
      return a6 == 5;
    case 6:
      return a6 == 6;
    case 7:
      return a6 == 7;
    case 8:
      return a6 == 8;
    case 9:
      return a6 == 9;
    case 10:
      return a6 == 10;
    default:
      if (a6 < 0xB)
        return 0;
      if (a1 == a5 && a2 == a6
        || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
      {
        if (a3 == a7 && a4 == a8)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
      }
      return result;
  }
}

void *sub_1003D5250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  if ((unint64_t)a1 >> 62)
    goto LABEL_45;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v7)
  {
LABEL_49:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
  while (1)
  {
    v8 = 4;
LABEL_6:
    v9 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a1)
       : (char *)*(id *)(a1 + 8 * v8);
    v10 = v9;
    v11 = v8 - 3;
    if (!__OFADD__(v8 - 4, 1))
      break;
    __break(1u);
LABEL_45:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (!v7)
      goto LABEL_49;
  }
  v12 = &v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
  switch(v13)
  {
    case 0:
      if (a3)
        goto LABEL_5;
      goto LABEL_42;
    case 1:
      if (a3 == 1)
        goto LABEL_42;
      goto LABEL_5;
    case 2:
      if (a3 == 2)
        goto LABEL_42;
      goto LABEL_5;
    case 3:
      if (a3 == 3)
        goto LABEL_42;
      goto LABEL_5;
    case 4:
      if (a3 == 4)
        goto LABEL_42;
      goto LABEL_5;
    case 5:
      if (a3 == 5)
        goto LABEL_42;
      goto LABEL_5;
    case 6:
      if (a3 == 6)
        goto LABEL_42;
      goto LABEL_5;
    case 7:
      if (a3 == 7)
        goto LABEL_42;
      goto LABEL_5;
    case 8:
      if (a3 == 8)
        goto LABEL_42;
      goto LABEL_5;
    case 9:
      if (a3 == 9)
        goto LABEL_42;
      goto LABEL_5;
    case 10:
      if (a3 != 10)
        goto LABEL_5;
      goto LABEL_42;
    default:
      if (a3 < 0xB)
        goto LABEL_5;
      v14 = *((_QWORD *)v12 + 2);
      v15 = *((_QWORD *)v12 + 3);
      v16 = *(_QWORD *)v12 == a2 && v13 == a3;
      if (!v16
        && (v21 = *((_QWORD *)v12 + 3),
            v22 = *((_QWORD *)v12 + 2),
            v17 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v12, v13, a2, a3, 0),
            v15 = v21,
            v14 = v22,
            (v17 & 1) == 0)
        || (v14 == a4 ? (v18 = v15 == a5) : (v18 = 0),
            !v18 && (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a4, a5, 0) & 1) == 0))
      {
LABEL_5:

        ++v8;
        if (v11 == v7)
          goto LABEL_49;
        goto LABEL_6;
      }
LABEL_42:
      swift_bridgeObjectRelease(a1);
      return v10;
  }
}

void *sub_1003D54AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((unint64_t)a1 >> 62)
    goto LABEL_45;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v4)
  {
LABEL_49:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
  while (1)
  {
    v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8);
    v22 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey);
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16);
    v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24);
    v6 = 4;
LABEL_6:
    v7 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1)
       : (char *)*(id *)(a1 + 8 * v6);
    v8 = v7;
    a2 = v6 - 3;
    if (!__OFADD__(v6 - 4, 1))
      break;
    __break(1u);
LABEL_45:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v4)
      goto LABEL_49;
  }
  v9 = &v7[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
  switch(v10)
  {
    case 0:
      if (v5)
        goto LABEL_5;
      goto LABEL_42;
    case 1:
      if (v5 == 1)
        goto LABEL_42;
      goto LABEL_5;
    case 2:
      if (v5 == 2)
        goto LABEL_42;
      goto LABEL_5;
    case 3:
      if (v5 == 3)
        goto LABEL_42;
      goto LABEL_5;
    case 4:
      if (v5 == 4)
        goto LABEL_42;
      goto LABEL_5;
    case 5:
      if (v5 == 5)
        goto LABEL_42;
      goto LABEL_5;
    case 6:
      if (v5 == 6)
        goto LABEL_42;
      goto LABEL_5;
    case 7:
      if (v5 == 7)
        goto LABEL_42;
      goto LABEL_5;
    case 8:
      if (v5 == 8)
        goto LABEL_42;
      goto LABEL_5;
    case 9:
      if (v5 == 9)
        goto LABEL_42;
      goto LABEL_5;
    case 10:
      if (v5 != 10)
        goto LABEL_5;
      goto LABEL_42;
    default:
      if (v5 < 0xB)
        goto LABEL_5;
      v11 = *((_QWORD *)v9 + 2);
      v12 = *((_QWORD *)v9 + 3);
      v13 = *(_QWORD *)v9 == v22 && v10 == v5;
      if (!v13
        && (v18 = *((_QWORD *)v9 + 3),
            v19 = *((_QWORD *)v9 + 2),
            v14 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v9, v10, v22, v5, 0),
            v12 = v18,
            v11 = v19,
            (v14 & 1) == 0)
        || (v11 == v21 ? (v15 = v12 == v20) : (v15 = 0),
            !v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v21, v20, 0) & 1) == 0))
      {
LABEL_5:

        ++v6;
        if (a2 == v4)
          goto LABEL_49;
        goto LABEL_6;
      }
LABEL_42:
      swift_bridgeObjectRelease(a1);
      return v8;
  }
}

void sub_1003D5718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate, a2);
  if (!Strong)
    return;
  v4 = Strong;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files15DOCMetadataView_nodes);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v15 = v5;
    else
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    if (_CocoaArrayWrapper.endIndex.getter(v15))
      goto LABEL_4;
LABEL_18:
    swift_unknownObjectRelease(v4);
    swift_bridgeObjectRelease(v5);
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v6)
    goto LABEL_18;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(_QWORD *)(v5 + 32);
    swift_unknownObjectRetain(v7);
  }
  swift_bridgeObjectRelease(v5);
  v9 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting, v8);
  if (v9)
  {
    v11 = (void *)v9;
    ObjectType = swift_getObjectType(v7, v10);
    v13 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    if (v13)
    {
      v16 = (id)v13;
      objc_msgSend(v11, "didTapLocationOf:");
      swift_unknownObjectRelease(v4);
      swift_unknownObjectRelease(v7);
      swift_unknownObjectRelease(v11);

      return;
    }
    swift_unknownObjectRelease(v4);
    swift_unknownObjectRelease(v7);
    v14 = (uint64_t)v11;
  }
  else
  {
    swift_unknownObjectRelease(v4);
    v14 = v7;
  }
  swift_unknownObjectRelease(v14);
}

void sub_1003D58B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  char v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  char *v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  _QWORD *v45;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v40 - v19;
  if ((unint64_t)a1 >> 62)
  {
    v35 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v35 = a1;
    ObjectType = v35;
    swift_bridgeObjectRetain(a1);
    v36 = _CocoaArrayWrapper.endIndex.getter(ObjectType);
    v40 = v10;
    v37 = a2;
    v38 = v36;
    swift_bridgeObjectRelease(a1);
    v39 = v38 == 1;
    a2 = v37;
    v10 = v40;
    if (!v39)
      goto LABEL_9;
    swift_bridgeObjectRetain(a1);
    if (!_CocoaArrayWrapper.endIndex.getter(ObjectType))
    {
      swift_bridgeObjectRelease(a1);
      goto LABEL_9;
    }
  }
  else
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
    {
LABEL_9:
      v24 = (_QWORD *)swift_allocObject(&unk_1005E6E00, 64, 7);
      v24[2] = a3;
      v24[3] = a4;
      v24[4] = a1;
      v24[5] = 0;
      v24[6] = 0;
      v24[7] = 0;
      aBlock[4] = sub_1003DB280;
      v45 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005E6E18;
      v25 = _Block_copy(aBlock);
      v26 = v45;
      swift_bridgeObjectRetain_n(a1, 2);
      swift_retain();
      swift_release(v26);
      DOCRunInMainThread(v25);
      _Block_release(v25);
      swift_bridgeObjectRelease(a1);
      return;
    }
    swift_bridgeObjectRetain(a1);
  }
  v42 = a2;
  v43 = a3;
  v40 = v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v21 = *(void **)(a1 + 32);
    swift_unknownObjectRetain(v21);
  }
  swift_bridgeObjectRelease(a1);
  ObjectType = swift_getObjectType(v21);
  v22 = objc_msgSend(v21, "providerDomainID");
  v23 = DOCProviderDomainIDIsSharedServerDomainID(v22);

  if ((v23 & 1) != 0)
  {
    swift_unknownObjectRelease(v21);
    a3 = v43;
    goto LABEL_9;
  }
  v27 = (_QWORD *)swift_allocObject(&unk_1005E6E50, 56, 7);
  v28 = v42;
  v27[2] = v21;
  v27[3] = v28;
  v29 = v43;
  v27[4] = a1;
  v27[5] = v29;
  v27[6] = a4;
  swift_bridgeObjectRetain_n(a1, 2);
  swift_unknownObjectRetain_n(v21, 2);
  v30 = objc_msgSend(v21, "nodeURL", swift_retain_n(a4, 2).n128_f64[0]);
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_14;
  }
  v31 = v30;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

  v32 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v32(v13, v17, v14);
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v33(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_14:
    sub_10000CB4C((uint64_t)v13, &qword_100643470);
    DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)(0, sub_1003DB2B8, v27, ObjectType);
    goto LABEL_15;
  }
  v32(v20, v13, v14);
  v34 = (uint64_t)v40;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v40, v20, v14);
  v33((char *)v34, 0, 1, v14);
  sub_1003CC2E8(v34, v21, v42, a1, v43, a4);
  sub_10000CB4C(v34, &qword_100643470);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
LABEL_15:
  swift_release(a4);
  swift_bridgeObjectRelease(a1);
  swift_unknownObjectRelease_n(v21, 2);
  swift_release(v27);
}

uint64_t sub_1003D5D00(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst, _QWORD *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  __int128 v57;
  __int128 v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  __int128 v104;
  unint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t result;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t *v117;
  unint64_t v118;
  uint64_t *v119;
  uint64_t *v120;
  unint64_t v121;
  uint64_t *v122;
  uint64_t *v124;
  uint64_t *v126;
  uint64_t *v127;
  uint64_t *v128;
  uint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t *v138;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 5;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 5;
  v138 = __src;
  v137 = __dst;
  if (v9 >= v11 >> 5)
  {
    if (v10 < -31)
      goto LABEL_131;
    v59 = (uint64_t *)a3;
    if (__dst != a2 || &a2[4 * v12] <= __dst)
    {
      v60 = __dst;
      memmove(__dst, a2, 32 * v12);
      __dst = v60;
    }
    v61 = &__dst[4 * v12];
    v136 = v61;
    v138 = v5;
    if (v6 >= v5 || v10 < 32)
    {
LABEL_128:
      sub_1004651C8((void **)&v138, (const void **)&v137, &v136);
      return 1;
    }
    v62 = a5[2];
    v131 = v62;
    if (v62 <= 1)
      v62 = 1;
    v117 = v6;
    v118 = v62;
    v63 = v5;
    v127 = __dst;
    while (1)
    {
      v129 = v5;
      v120 = v59 - 4;
      v122 = v61;
      v66 = *(v61 - 4);
      v65 = *(v61 - 3);
      v64 = (char *)(v61 - 4);
      v67 = *((_QWORD *)v64 + 2);
      v68 = *((_QWORD *)v64 + 3);
      v69 = *(v63 - 4);
      v70 = *(v63 - 3);
      v63 -= 4;
      v71 = v63[3];
      v113 = v63[2];
      v115 = (uint64_t *)v64;
      if (!v131)
        goto LABEL_111;
      v109 = v63[3];
      v110 = *((_QWORD *)v64 + 3);
      v72 = a5[4];
      v73 = a5[5];
      v74 = v72 == v66 && v73 == v65;
      v124 = v59;
      if (v74 || (_stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v66, v65, 0) & 1) != 0)
      {
        v75 = 0;
        v76 = 0;
      }
      else
      {
        v83 = 0;
        v84 = a5 + 7;
        v85 = 1;
        while (1)
        {
          v75 = v85;
          v76 = v131 == v85;
          if (v131 == v85)
          {
            v75 = 0;
            goto LABEL_81;
          }
          ++v83;
          v86 = *(v84 - 1);
          v87 = *v84;
          if (v86 == v66 && v87 == v65)
            break;
          v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v66, v65, 0);
          v85 = v75 + 1;
          v84 += 2;
          if ((v89 & 1) != 0)
            goto LABEL_81;
        }
        v75 = v83;
      }
LABEL_81:
      v77 = a5[4];
      v78 = a5[5];
      v79 = v77 == v69 && v78 == v70;
      if (!v79 && (_stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, v69, v70, 0) & 1) == 0)
        break;
      v80 = 0;
LABEL_87:
      v81 = v80 >= v75 || v76;
      v82 = v127;
      v59 = v124;
      if ((v81 & 1) == 0)
      {
LABEL_112:
        v103 = v120;
        v61 = v122;
        if (v59 != v129 || v120 >= v129)
        {
          v104 = *((_OWORD *)v63 + 1);
          *(_OWORD *)v120 = *(_OWORD *)v63;
          *((_OWORD *)v120 + 1) = v104;
        }
        v138 = v63;
        goto LABEL_121;
      }
LABEL_116:
      v61 = v115;
      v136 = v115;
      v103 = v120;
      if (v59 >= v122 && v120 < v122)
      {
        v105 = (unint64_t)v117;
        v63 = v129;
        if (v59 != v122)
        {
          v106 = *((_OWORD *)v115 + 1);
          *(_OWORD *)v120 = *(_OWORD *)v115;
          *((_OWORD *)v120 + 1) = v106;
        }
        goto LABEL_122;
      }
      v107 = *((_OWORD *)v115 + 1);
      *(_OWORD *)v120 = *(_OWORD *)v115;
      *((_OWORD *)v120 + 1) = v107;
      v63 = v129;
LABEL_121:
      v105 = (unint64_t)v117;
LABEL_122:
      if ((unint64_t)v63 > v105)
      {
        v5 = v63;
        v59 = v103;
        if (v61 > v82)
          continue;
      }
      goto LABEL_128;
    }
    v90 = a5 + 7;
    v91 = 1;
    while (v131 != v91)
    {
      if (v118 == v91)
      {
        __break(1u);
LABEL_130:
        __break(1u);
        goto LABEL_131;
      }
      v92 = *(v90 - 1);
      v93 = *v90;
      if (v92 == v69 && v93 == v70)
      {
        v80 = v91;
        goto LABEL_87;
      }
      v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v93, v69, v70, 0);
      v80 = v91++;
      v90 += 2;
      if ((v95 & 1) != 0)
        goto LABEL_87;
    }
    v82 = v127;
    v59 = v124;
    v71 = v109;
    v68 = v110;
    if (!v76)
      goto LABEL_112;
LABEL_111:
    swift_bridgeObjectRetain(v68);
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v71);
    v111 = sub_1003CC71C(v66, v65, v67, v68);
    v97 = v96;
    swift_bridgeObjectRetain(v70);
    swift_bridgeObjectRetain(v71);
    v98 = sub_1003CC71C(v69, v70, v113, v71);
    v100 = v99;
    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v70);
    v134 = v111;
    v135 = v97;
    v132 = v98;
    v133 = v100;
    v101 = sub_10008B9BC();
    v102 = StringProtocol.localizedCompare<A>(_:)(&v132, &type metadata for String, &type metadata for String, v101, v101);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v70);
    swift_bridgeObjectRelease(v97);
    swift_bridgeObjectRelease(v100);
    v82 = v127;
    if (v102 == 1)
      goto LABEL_112;
    goto LABEL_116;
  }
  if (v7 >= -31)
  {
    if (__dst != __src || &__src[4 * v9] <= __dst)
    {
      v13 = __dst;
      memmove(__dst, __src, 32 * v9);
      __dst = v13;
    }
    v119 = &__dst[4 * v9];
    v136 = v119;
    if ((unint64_t)v5 < a3 && v7 >= 32)
    {
      v14 = a5[2];
      v130 = v14;
      if (v14 <= 1)
        v14 = 1;
      v121 = v14;
      while (1)
      {
        v16 = *v5;
        v15 = v5[1];
        v17 = v5[2];
        v18 = v5[3];
        v126 = __dst;
        v128 = v5;
        v19 = *__dst;
        v20 = __dst[1];
        v22 = __dst[2];
        v21 = __dst[3];
        if (!v130)
          goto LABEL_52;
        v23 = a5[4];
        v24 = a5[5];
        v25 = v23 == v16 && v24 == v15;
        v116 = v6;
        v112 = v17;
        v114 = __dst[2];
        if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v16, v15, 0) & 1) != 0)
        {
          v26 = 0;
          v27 = 0;
        }
        else
        {
          v34 = 0;
          v35 = a5 + 7;
          v36 = 1;
          while (1)
          {
            v26 = v36;
            v27 = v130 == v36;
            if (v130 == v36)
            {
              v26 = 0;
              goto LABEL_22;
            }
            ++v34;
            v37 = *(v35 - 1);
            v38 = *v35;
            if (v37 == v16 && v38 == v15)
              break;
            v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, v16, v15, 0);
            v36 = v26 + 1;
            v35 += 2;
            if ((v40 & 1) != 0)
              goto LABEL_22;
          }
          v26 = v34;
        }
LABEL_22:
        v28 = a5[4];
        v29 = a5[5];
        v30 = v28 == v19 && v29 == v20;
        if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v19, v20, 0) & 1) == 0)
          break;
        v31 = 0;
LABEL_28:
        v32 = v31 >= v26 || v27;
        __dst = v126;
        v6 = v116;
        v33 = a3;
        if ((v32 & 1) == 0)
        {
LABEL_53:
          v56 = v128 + 4;
          if (v6 < v128 || v6 >= v56 || v6 != v128)
          {
            v57 = *((_OWORD *)v128 + 1);
            *(_OWORD *)v6 = *(_OWORD *)v128;
            *((_OWORD *)v6 + 1) = v57;
          }
          goto LABEL_60;
        }
LABEL_57:
        if (v6 != __dst)
        {
          v58 = *((_OWORD *)__dst + 1);
          *(_OWORD *)v6 = *(_OWORD *)__dst;
          *((_OWORD *)v6 + 1) = v58;
        }
        __dst += 4;
        v137 = __dst;
        v56 = v128;
LABEL_60:
        v6 += 4;
        if (__dst < v119)
        {
          v5 = v56;
          if ((unint64_t)v56 < v33)
            continue;
        }
        v138 = v6;
        goto LABEL_128;
      }
      v41 = a5 + 7;
      v42 = 1;
      while (v130 != v42)
      {
        if (v121 == v42)
          goto LABEL_130;
        v43 = *(v41 - 1);
        v44 = *v41;
        if (v43 == v19 && v44 == v20)
        {
          v31 = v42;
          goto LABEL_28;
        }
        v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v19, v20, 0);
        v31 = v42++;
        v41 += 2;
        if ((v46 & 1) != 0)
          goto LABEL_28;
      }
      __dst = v126;
      v6 = v116;
      v33 = a3;
      v17 = v112;
      v22 = v114;
      if (!v27)
        goto LABEL_53;
LABEL_52:
      v47 = v17;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      v48 = sub_1003CC71C(v16, v15, v47, v18);
      v50 = v49;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      v51 = sub_1003CC71C(v19, v20, v22, v21);
      v53 = v52;
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      v134 = v48;
      v135 = v50;
      v132 = v51;
      v133 = v53;
      v54 = sub_10008B9BC();
      v55 = StringProtocol.localizedCompare<A>(_:)(&v132, &type metadata for String, &type metadata for String, v54, v54);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v50);
      v33 = a3;
      swift_bridgeObjectRelease(v53);
      __dst = v126;
      if (v55 == 1)
        goto LABEL_53;
      goto LABEL_57;
    }
    goto LABEL_128;
  }
LABEL_131:
  swift_bridgeObjectRelease(a5);
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1003D64A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[4];
  unint64_t v69;

  if (a3 != a2)
  {
    v5 = *a4;
    v69 = a5[2];
    v6 = v69;
    if (v69 <= 1)
      v6 = 1;
    v66 = v6;
    v57 = v5;
LABEL_7:
    v7 = (uint64_t *)(v5 + 32 * a3);
    v8 = *v7;
    v9 = v7[1];
    v63 = v7[2];
    v10 = v7[3];
    v56 = a3;
    v11 = a3;
    while (1)
    {
      v12 = v11 - 1;
      v13 = (uint64_t *)(v5 + 32 * (v11 - 1));
      v15 = *v13;
      v14 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v67 = v11;
      v65 = v10;
      if (!v69)
        goto LABEL_45;
      v18 = a5[4];
      v19 = a5[5];
      v20 = v18 == v8 && v19 == v9;
      v58 = v13[2];
      v61 = v11 - 1;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v8, v9, 0) & 1) != 0)
      {
        v21 = 0;
        v22 = 0;
      }
      else
      {
        v29 = 0;
        v30 = a5 + 7;
        v31 = 1;
        while (1)
        {
          v21 = v31;
          v22 = v69 == v31;
          if (v69 == v31)
          {
            v21 = 0;
            goto LABEL_15;
          }
          ++v29;
          v32 = *(v30 - 1);
          v33 = *v30;
          if (v32 == v8 && v33 == v9)
            break;
          v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v8, v9, 0);
          v31 = v21 + 1;
          v30 += 2;
          if ((v35 & 1) != 0)
            goto LABEL_15;
        }
        v21 = v29;
      }
LABEL_15:
      v23 = a5[4];
      v24 = a5[5];
      v25 = v23 == v15 && v24 == v14;
      if (!v25 && (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v15, v14, 0) & 1) == 0)
        break;
      v26 = 0;
LABEL_21:
      v27 = v26 >= v21 || v22;
      v5 = v57;
      v12 = v61;
      v28 = v67;
      if ((v27 & 1) != 0)
      {
LABEL_6:
        a3 = v56 + 1;
        if (v56 + 1 == a2)
          return;
        goto LABEL_7;
      }
LABEL_46:
      if (!v5)
      {
LABEL_52:
        __break(1u);
        return;
      }
      v52 = (uint64_t *)(v5 + 32 * v28);
      v8 = *v52;
      v9 = v52[1];
      v53 = v52[2];
      v10 = v52[3];
      v54 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v52 = *(_OWORD *)v13;
      *((_OWORD *)v52 + 1) = v54;
      *v13 = v8;
      v13[1] = v9;
      v63 = v53;
      v13[2] = v53;
      v13[3] = v10;
      v11 = v12;
      if (v12 == a1)
        goto LABEL_6;
    }
    v36 = a5 + 7;
    v37 = 1;
    while (v69 != v37)
    {
      if (v66 == v37)
      {
        __break(1u);
        goto LABEL_52;
      }
      v38 = *(v36 - 1);
      v39 = *v36;
      if (v38 == v15 && v39 == v14)
      {
        v26 = v37;
        goto LABEL_21;
      }
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, v15, v14, 0);
      v26 = v37++;
      v36 += 2;
      if ((v41 & 1) != 0)
        goto LABEL_21;
    }
    v5 = v57;
    v16 = v58;
    v12 = v61;
    v28 = v67;
    v10 = v65;
    if (!v22)
      goto LABEL_46;
LABEL_45:
    v42 = v10;
    v43 = v16;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    v59 = sub_1003CC71C(v8, v9, v63, v42);
    v45 = v44;
    v64 = v44;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    v46 = sub_1003CC71C(v15, v14, v43, v17);
    v48 = v47;
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    v68[2] = v59;
    v68[3] = v45;
    v68[0] = v46;
    v68[1] = v48;
    v49 = v48;
    v50 = sub_10008B9BC();
    v51 = StringProtocol.localizedCompare<A>(_:)(v68, &type metadata for String, &type metadata for String, v50, v50);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    v28 = v67;
    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v49);
    if (v51 != 1)
      goto LABEL_6;
    goto LABEL_46;
  }
}

void sub_1003D681C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Swift::Int v100;
  Swift::Int v101;
  _OWORD *v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  Swift::Int v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  Swift::Int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  char v126;
  Swift::Int v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  __int128 v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  Swift::Int *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  BOOL v169;
  unint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  BOOL v179;
  uint64_t v180;
  char v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  BOOL v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  unint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t *v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  char *v213;
  unint64_t v214;
  char *v215;
  _QWORD *v216;
  Swift::Int v217;
  Swift::Int v219;
  Swift::Int v220;
  uint64_t *__dst;
  Swift::Int v222;
  Swift::Int v223;
  Swift::Int v224;
  char *v225;
  uint64_t *v226;
  uint64_t v227;
  unint64_t v228;
  Swift::Int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  Swift::Int v244;
  Swift::Int v245;
  Swift::Int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;

  v3 = a2;
  v4 = a1[1];
  swift_bridgeObjectRetain_n(a2, 3);
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_268;
    if (v4)
    {
      swift_bridgeObjectRetain(v3);
      sub_1003D64A8(0, v4, 1, a1, (_QWORD *)v3);
      swift_bridgeObjectRelease_n(v3, 4);
    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 3);
    }
    return;
  }
  v217 = v5;
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_276;
  v235 = (_QWORD *)v3;
  v227 = v2;
  if (v4 < 2)
  {
    v10 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      v155 = _swiftEmptyArrayStorage[2];
      v215 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_231;
    }
    v216 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_10006922C(&qword_100644A20);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v216 = (_QWORD *)v9;
    __dst = (uint64_t *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v226 = (uint64_t *)(v3 + 56);
  v225 = (char *)_swiftEmptyArrayStorage;
  v220 = v4;
  v230 = *a1;
LABEL_14:
  v13 = v11;
  v14 = v11 + 1;
  v229 = v11;
  if (v11 + 1 >= v4)
    goto LABEL_115;
  v222 = v11 + 1;
  v15 = (uint64_t *)(v12 + 32 * v14);
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = v15[3];
  v20 = (uint64_t *)(v12 + 32 * v13);
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[3];
  v239 = v18;
  v242 = v20[2];
  v251 = *(_QWORD *)(v3 + 16);
  if (!v251)
    goto LABEL_56;
  v24 = *(_QWORD *)(v3 + 32);
  v25 = *(_QWORD *)(v3 + 40);
  v26 = v24 == v16 && v25 == v17;
  v236 = v23;
  if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v16, v17, 0) & 1) != 0)
  {
    v27 = 0;
    v28 = 0;
  }
  else
  {
    v35 = 0;
    v36 = v226;
    v37 = 1;
    while (1)
    {
      v27 = v37;
      v28 = v251 == v37;
      if (v251 == v37)
      {
        v27 = 0;
        goto LABEL_22;
      }
      ++v35;
      v38 = *(v36 - 1);
      v39 = *v36;
      if (v38 == v16 && v39 == v17)
        break;
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, v16, v17, 0);
      v37 = v27 + 1;
      v36 += 2;
      if ((v41 & 1) != 0)
        goto LABEL_22;
    }
    v27 = v35;
  }
LABEL_22:
  v29 = v235[4];
  v30 = v235[5];
  v31 = v29 == v21 && v30 == v22;
  if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v21, v22, 0) & 1) != 0)
  {
    v32 = 0;
    goto LABEL_28;
  }
  if (v251 <= 1)
    v3 = 1;
  else
    v3 = v251;
  v42 = v226;
  v43 = 1;
  while (v251 != v43)
  {
    if (v3 == v43)
      goto LABEL_266;
    v44 = *(v42 - 1);
    v45 = *v42;
    if (v44 == v21 && v45 == v22)
    {
      v32 = v43;
LABEL_28:
      if (v28)
      {
        v13 = v229;
        v33 = v229 + 2;
        v4 = v220;
        v34 = v222;
        if (v229 + 2 < v220)
        {
          v240 = 0;
          v3 = (uint64_t)v235;
          v12 = v230;
          goto LABEL_58;
        }
        v14 = v229 + 2;
        v3 = (uint64_t)v235;
        v12 = v230;
LABEL_115:
        if (v14 >= v4)
          goto LABEL_172;
        if (__OFSUB__(v14, v13))
          goto LABEL_267;
        if (v14 - v13 >= v217)
          goto LABEL_172;
        v108 = v13 + v217;
        if (__OFADD__(v13, v217))
          goto LABEL_269;
        if (v108 >= v4)
          v108 = v4;
        if (v108 < v13)
        {
LABEL_270:
          __break(1u);
          goto LABEL_271;
        }
        if (v14 == v108)
          goto LABEL_172;
        v251 = *(_QWORD *)(v3 + 16);
        v109 = v251;
        if (v251 <= 1)
          v109 = 1;
        v238 = v109;
        v219 = v108;
        while (2)
        {
          v110 = (uint64_t *)(v12 + 32 * v14);
          v111 = *v110;
          v112 = v110[1];
          v113 = v110[3];
          v234 = v110[2];
          v223 = v14;
          v114 = v14;
          while (2)
          {
            v244 = v114 - 1;
            v3 = v12 + 32 * (v114 - 1);
            v116 = *(_QWORD *)v3;
            v115 = *(_QWORD *)(v3 + 8);
            v231 = *(_QWORD *)(v3 + 16);
            v232 = *(_QWORD *)(v3 + 24);
            v246 = v114;
            if (!v251)
            {
LABEL_165:
              swift_bridgeObjectRetain(v113);
              swift_bridgeObjectRetain(v112);
              swift_bridgeObjectRetain(v115);
              swift_bridgeObjectRetain(v232);
              v141 = sub_1003CC71C(v111, v112, v234, v113);
              v143 = v142;
              swift_bridgeObjectRetain(v115);
              swift_bridgeObjectRetain(v232);
              v144 = sub_1003CC71C(v116, v115, v231, v232);
              v146 = v145;
              swift_bridgeObjectRelease(v232);
              swift_bridgeObjectRelease(v115);
              v249 = v141;
              v250 = v143;
              v247 = v144;
              v248 = v146;
              v147 = sub_10008B9BC();
              v148 = StringProtocol.localizedCompare<A>(_:)(&v247, &type metadata for String, &type metadata for String, v147, v147);
              swift_bridgeObjectRelease(v113);
              swift_bridgeObjectRelease(v112);
              swift_bridgeObjectRelease(v232);
              swift_bridgeObjectRelease(v115);
              v149 = v143;
              v13 = v229;
              v12 = v230;
              swift_bridgeObjectRelease(v149);
              swift_bridgeObjectRelease(v146);
              v127 = v246;
              if (v148 != 1)
                goto LABEL_126;
LABEL_166:
              if (!v12)
                goto LABEL_272;
              v150 = (uint64_t *)(v12 + 32 * v127);
              v111 = *v150;
              v112 = v150[1];
              v151 = v150[2];
              v113 = v150[3];
              v152 = *(_OWORD *)(v3 + 16);
              *(_OWORD *)v150 = *(_OWORD *)v3;
              *((_OWORD *)v150 + 1) = v152;
              *(_QWORD *)v3 = v111;
              *(_QWORD *)(v3 + 8) = v112;
              v234 = v151;
              *(_QWORD *)(v3 + 16) = v151;
              *(_QWORD *)(v3 + 24) = v113;
              v114 = v244;
              if (v244 == v13)
                goto LABEL_126;
              continue;
            }
            break;
          }
          v228 = v113;
          v117 = v235[4];
          v118 = v235[5];
          v119 = v117 == v111 && v118 == v112;
          if (v119 || (_stringCompareWithSmolCheck(_:_:expecting:)(v117, v118, v111, v112, 0) & 1) != 0)
          {
            v120 = 0;
            v121 = 0;
          }
          else
          {
            v128 = 0;
            v129 = v226;
            v130 = 1;
            while (1)
            {
              v120 = v130;
              v121 = v251 == v130;
              if (v251 == v130)
              {
                v120 = 0;
                goto LABEL_135;
              }
              ++v128;
              v131 = *(v129 - 1);
              v132 = *v129;
              if (v131 == v111 && v132 == v112)
                break;
              v134 = _stringCompareWithSmolCheck(_:_:expecting:)(v131, v132, v111, v112, 0);
              v130 = v120 + 1;
              v129 += 2;
              if ((v134 & 1) != 0)
                goto LABEL_135;
            }
            v120 = v128;
          }
LABEL_135:
          v122 = v235[4];
          v123 = v235[5];
          v124 = v122 == v116 && v123 == v115;
          if (v124 || (_stringCompareWithSmolCheck(_:_:expecting:)(v122, v123, v116, v115, 0) & 1) != 0)
          {
            v125 = 0;
            goto LABEL_141;
          }
          v135 = v226;
          v136 = 1;
          while (1)
          {
            if (v251 == v136)
            {
              v13 = v229;
              v12 = v230;
              v127 = v246;
              v113 = v228;
              if (!v121)
                goto LABEL_166;
              goto LABEL_165;
            }
            if (v238 == v136)
            {
              __break(1u);
LABEL_244:
              swift_bridgeObjectRelease(v225);
              swift_bridgeObjectRelease(v235);
              v216[2] = 0;
              swift_bridgeObjectRelease_n(v235, 3);
              swift_bridgeObjectRelease(v216);
              return;
            }
            v137 = *(v135 - 1);
            v138 = *v135;
            if (v137 == v116 && v138 == v115)
              break;
            v140 = _stringCompareWithSmolCheck(_:_:expecting:)(v137, v138, v116, v115, 0);
            v125 = v136++;
            v135 += 2;
            if ((v140 & 1) != 0)
              goto LABEL_141;
          }
          v125 = v136;
LABEL_141:
          v126 = v125 >= v120 || v121;
          v13 = v229;
          v12 = v230;
          v127 = v246;
          if ((v126 & 1) == 0)
            goto LABEL_166;
LABEL_126:
          v14 = v223 + 1;
          if (v223 + 1 != v219)
            continue;
          break;
        }
        v14 = v219;
LABEL_172:
        v3 = (uint64_t)v225;
        if (v14 < v13)
          goto LABEL_265;
        v224 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native(v225) & 1) == 0)
          v3 = (uint64_t)sub_100464E4C(0, *((_QWORD *)v225 + 2) + 1, 1, v225);
        v154 = *(_QWORD *)(v3 + 16);
        v153 = *(_QWORD *)(v3 + 24);
        v155 = v154 + 1;
        if (v154 >= v153 >> 1)
          v3 = (uint64_t)sub_100464E4C((char *)(v153 > 1), v154 + 1, 1, (char *)v3);
        *(_QWORD *)(v3 + 16) = v155;
        v156 = v3 + 32;
        v157 = (Swift::Int *)(v3 + 32 + 16 * v154);
        *v157 = v13;
        v157[1] = v224;
        v225 = (char *)v3;
        if (v154)
        {
          v251 = v3 + 32;
          while (1)
          {
            v158 = v155 - 1;
            if (v155 >= 4)
            {
              v163 = v156 + 16 * v155;
              v164 = *(_QWORD *)(v163 - 64);
              v165 = *(_QWORD *)(v163 - 56);
              v169 = __OFSUB__(v165, v164);
              v166 = v165 - v164;
              if (v169)
                goto LABEL_250;
              v168 = *(_QWORD *)(v163 - 48);
              v167 = *(_QWORD *)(v163 - 40);
              v169 = __OFSUB__(v167, v168);
              v161 = v167 - v168;
              v162 = v169;
              if (v169)
                goto LABEL_251;
              v170 = v155 - 2;
              v171 = (uint64_t *)(v156 + 16 * (v155 - 2));
              v173 = *v171;
              v172 = v171[1];
              v169 = __OFSUB__(v172, v173);
              v174 = v172 - v173;
              if (v169)
                goto LABEL_253;
              v169 = __OFADD__(v161, v174);
              v175 = v161 + v174;
              if (v169)
                goto LABEL_256;
              if (v175 >= v166)
              {
                v193 = (uint64_t *)(v156 + 16 * v158);
                v195 = *v193;
                v194 = v193[1];
                v169 = __OFSUB__(v194, v195);
                v196 = v194 - v195;
                if (v169)
                  goto LABEL_260;
                v186 = v161 < v196;
                goto LABEL_210;
              }
            }
            else
            {
              if (v155 != 3)
              {
                v187 = *(_QWORD *)(v3 + 32);
                v188 = *(_QWORD *)(v3 + 40);
                v169 = __OFSUB__(v188, v187);
                v180 = v188 - v187;
                v181 = v169;
                goto LABEL_204;
              }
              v160 = *(_QWORD *)(v3 + 32);
              v159 = *(_QWORD *)(v3 + 40);
              v169 = __OFSUB__(v159, v160);
              v161 = v159 - v160;
              v162 = v169;
            }
            if ((v162 & 1) != 0)
              goto LABEL_252;
            v170 = v155 - 2;
            v176 = (uint64_t *)(v156 + 16 * (v155 - 2));
            v178 = *v176;
            v177 = v176[1];
            v179 = __OFSUB__(v177, v178);
            v180 = v177 - v178;
            v181 = v179;
            if (v179)
              goto LABEL_255;
            v182 = (uint64_t *)(v156 + 16 * v158);
            v184 = *v182;
            v183 = v182[1];
            v169 = __OFSUB__(v183, v184);
            v185 = v183 - v184;
            if (v169)
              goto LABEL_258;
            if (__OFADD__(v180, v185))
              goto LABEL_259;
            if (v180 + v185 >= v161)
            {
              v186 = v161 < v185;
LABEL_210:
              if (v186)
                v158 = v170;
              goto LABEL_212;
            }
LABEL_204:
            if ((v181 & 1) != 0)
              goto LABEL_254;
            v189 = (uint64_t *)(v156 + 16 * v158);
            v191 = *v189;
            v190 = v189[1];
            v169 = __OFSUB__(v190, v191);
            v192 = v190 - v191;
            if (v169)
              goto LABEL_257;
            if (v192 < v180)
              goto LABEL_221;
LABEL_212:
            v197 = v158 - 1;
            if (v158 - 1 >= v155)
            {
              __break(1u);
LABEL_246:
              __break(1u);
LABEL_247:
              __break(1u);
LABEL_248:
              __break(1u);
LABEL_249:
              __break(1u);
LABEL_250:
              __break(1u);
LABEL_251:
              __break(1u);
LABEL_252:
              __break(1u);
LABEL_253:
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
LABEL_256:
              __break(1u);
LABEL_257:
              __break(1u);
LABEL_258:
              __break(1u);
LABEL_259:
              __break(1u);
LABEL_260:
              __break(1u);
LABEL_261:
              __break(1u);
LABEL_262:
              __break(1u);
LABEL_263:
              __break(1u);
LABEL_264:
              __break(1u);
LABEL_265:
              __break(1u);
LABEL_266:
              __break(1u);
LABEL_267:
              __break(1u);
LABEL_268:
              __break(1u);
LABEL_269:
              __break(1u);
              goto LABEL_270;
            }
            if (!v12)
              goto LABEL_273;
            v198 = v12;
            v199 = v156;
            v200 = (uint64_t *)(v156 + 16 * v197);
            v201 = *v200;
            v202 = v158;
            v203 = (_QWORD *)(v199 + 16 * v158);
            v204 = v203[1];
            v205 = (uint64_t *)(v198 + 32 * *v200);
            v206 = (uint64_t *)(v198 + 32 * *v203);
            v207 = v198 + 32 * v204;
            v3 = (uint64_t)v235;
            swift_bridgeObjectRetain(v235);
            sub_1003D5D00(v205, v206, v207, __dst, v235);
            if (v227)
              goto LABEL_244;
            swift_bridgeObjectRelease(v235);
            if (v204 < v201)
              goto LABEL_246;
            v3 = (uint64_t)v225;
            if (v202 > *((_QWORD *)v225 + 2))
              goto LABEL_247;
            *v200 = v201;
            v156 = v251;
            *(_QWORD *)(v251 + 16 * v197 + 8) = v204;
            v208 = *((_QWORD *)v225 + 2);
            if (v202 >= v208)
              goto LABEL_248;
            v227 = 0;
            v155 = v208 - 1;
            memmove(v203, v203 + 2, 16 * (v208 - 1 - v202));
            *((_QWORD *)v225 + 2) = v208 - 1;
            v12 = v230;
            if (v208 <= 2)
              goto LABEL_221;
          }
        }
        v155 = 1;
LABEL_221:
        v4 = v220;
        v11 = v224;
        v3 = (uint64_t)v235;
        if (v224 >= v220)
        {
          v10 = v216;
          v215 = v225;
LABEL_231:
          v225 = v215;
          v216 = v10;
          if (v155 >= 2)
          {
            v3 = *a1;
            do
            {
              v209 = v155 - 2;
              if (v155 < 2)
                goto LABEL_261;
              if (!v3)
                goto LABEL_275;
              v210 = *(_QWORD *)&v225[16 * v209 + 32];
              v211 = *(_QWORD *)&v225[16 * v155 + 24];
              v212 = (uint64_t *)(v3 + 32 * *(_QWORD *)&v225[16 * v155 + 16]);
              swift_bridgeObjectRetain(v235);
              sub_1003D5D00((uint64_t *)(v3 + 32 * v210), v212, v3 + 32 * v211, __dst, v235);
              if (v227)
                goto LABEL_244;
              swift_bridgeObjectRelease(v235);
              if (v211 < v210)
                goto LABEL_262;
              if ((swift_isUniquelyReferenced_nonNull_native(v225) & 1) == 0)
                v225 = sub_10046564C((uint64_t)v225);
              if (v209 >= *((_QWORD *)v225 + 2))
                goto LABEL_263;
              v213 = &v225[16 * v209 + 32];
              *(_QWORD *)v213 = v210;
              *((_QWORD *)v213 + 1) = v211;
              v214 = *((_QWORD *)v225 + 2);
              if (v155 > v214)
                goto LABEL_264;
              memmove(&v225[16 * v155 + 16], &v225[16 * v155 + 32], 16 * (v214 - v155));
              *((_QWORD *)v225 + 2) = v214 - 1;
              v155 = v214 - 1;
            }
            while (v214 > 2);
          }
          swift_bridgeObjectRelease(v225);
          v216[2] = 0;
          swift_bridgeObjectRelease_n(v235, 3);
          swift_bridgeObjectRelease(v216);
          return;
        }
        goto LABEL_14;
      }
      v240 = v32 < v27;
      v3 = (uint64_t)v235;
      v4 = v220;
      v12 = v230;
LABEL_57:
      v13 = v229;
      v34 = v222;
      v33 = v229 + 2;
      if (v229 + 2 >= v4)
        goto LABEL_106;
      goto LABEL_58;
    }
    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, v21, v22, 0);
    v32 = v43++;
    v42 += 2;
    if ((v47 & 1) != 0)
      goto LABEL_28;
  }
  if (v28)
  {
    v3 = (uint64_t)v235;
    v4 = v220;
    v12 = v230;
    v23 = v236;
LABEL_56:
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    v241 = sub_1003CC71C(v16, v17, v239, v19);
    v49 = v48;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    v50 = sub_1003CC71C(v21, v22, v242, v23);
    v52 = v51;
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v22);
    v249 = v241;
    v250 = v49;
    v247 = v50;
    v248 = v52;
    v53 = sub_10008B9BC();
    v54 = StringProtocol.localizedCompare<A>(_:)(&v247, &type metadata for String, &type metadata for String, v53, v53);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v52);
    v240 = v54 == 1;
    goto LABEL_57;
  }
  v13 = v229;
  v33 = v229 + 2;
  v4 = v220;
  v3 = (uint64_t)v235;
  if (v229 + 2 >= v220)
  {
    v12 = v230;
    if (v33 >= v229)
      goto LABEL_108;
    goto LABEL_271;
  }
  v240 = 1;
  v12 = v230;
  v34 = v222;
LABEL_58:
  v55 = v251;
  if (v251 <= 1)
    v55 = 1;
  v243 = v55;
  v56 = v33;
  while (2)
  {
    v245 = v56;
    v57 = (uint64_t *)(v12 + 32 * v56);
    v58 = *v57;
    v59 = v57[1];
    v61 = v57[2];
    v60 = v57[3];
    v62 = (uint64_t *)(v12 + 32 * v34);
    v63 = *v62;
    v64 = v62[1];
    v65 = v62[2];
    v66 = v62[3];
    if (!v251)
    {
LABEL_98:
      v89 = v60;
      swift_bridgeObjectRetain(v60);
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v64);
      swift_bridgeObjectRetain(v66);
      v90 = sub_1003CC71C(v58, v59, v61, v89);
      v92 = v91;
      swift_bridgeObjectRetain(v64);
      swift_bridgeObjectRetain(v66);
      v93 = sub_1003CC71C(v63, v64, v65, v66);
      v95 = v94;
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v64);
      v249 = v90;
      v250 = v92;
      v247 = v93;
      v248 = v95;
      v96 = sub_10008B9BC();
      v97 = StringProtocol.localizedCompare<A>(_:)(&v247, &type metadata for String, &type metadata for String, v96, v96);
      swift_bridgeObjectRelease(v89);
      swift_bridgeObjectRelease(v59);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v64);
      swift_bridgeObjectRelease(v92);
      swift_bridgeObjectRelease(v95);
      v76 = v97 == 1;
      v4 = v220;
      v13 = v229;
      v33 = v245;
      v3 = (uint64_t)v235;
LABEL_99:
      if (v240 == v76)
        goto LABEL_62;
      goto LABEL_106;
    }
    v237 = v60;
    v67 = *(_QWORD *)(v3 + 32);
    v68 = *(_QWORD *)(v3 + 40);
    v69 = v67 == v58 && v68 == v59;
    v233 = v62[2];
    if (v69 || (_stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, v58, v59, 0) & 1) != 0)
    {
      v70 = 0;
      v71 = 0;
    }
    else
    {
      v77 = 0;
      v78 = v226;
      v79 = 1;
      while (1)
      {
        v70 = v79;
        v71 = v251 == v79;
        if (v251 == v79)
        {
          v70 = 0;
          goto LABEL_70;
        }
        ++v77;
        v80 = *(v78 - 1);
        v81 = *v78;
        if (v80 == v58 && v81 == v59)
          break;
        v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v81, v58, v59, 0);
        v79 = v70 + 1;
        v78 += 2;
        if ((v83 & 1) != 0)
          goto LABEL_70;
      }
      v70 = v77;
    }
LABEL_70:
    v72 = v235[4];
    v73 = v235[5];
    v74 = v72 == v63 && v73 == v64;
    if (v74 || (_stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v63, v64, 0) & 1) != 0)
    {
      v75 = 0;
      goto LABEL_76;
    }
    v3 = (uint64_t)v226;
    v84 = 1;
    while (1)
    {
      if (v251 == v84)
      {
        if (!v71)
        {
          v3 = (uint64_t)v235;
          v4 = v220;
          v13 = v229;
          v12 = v230;
          v33 = v245;
          if ((v240 & 1) != 0)
            goto LABEL_62;
LABEL_114:
          v14 = v33;
          goto LABEL_115;
        }
        v12 = v230;
        v60 = v237;
        v65 = v233;
        goto LABEL_98;
      }
      if (v243 == v84)
        goto LABEL_249;
      v85 = *(_QWORD *)(v3 - 8);
      v86 = *(_QWORD *)v3;
      if (v85 == v63 && v86 == v64)
        break;
      v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v86, v63, v64, 0);
      v75 = v84++;
      v3 += 16;
      if ((v88 & 1) != 0)
        goto LABEL_76;
    }
    v75 = v84;
LABEL_76:
    if (!v71)
    {
      v76 = v75 < v70;
      v3 = (uint64_t)v235;
      v4 = v220;
      v13 = v229;
      v12 = v230;
      v33 = v245;
      goto LABEL_99;
    }
    v3 = (uint64_t)v235;
    v4 = v220;
    v13 = v229;
    v12 = v230;
    v33 = v245;
    if ((v240 & 1) != 0)
      goto LABEL_107;
LABEL_62:
    v56 = v33 + 1;
    v34 = v33;
    if (v33 + 1 < v4)
      continue;
    break;
  }
  ++v33;
LABEL_106:
  v14 = v33;
  if (!v240)
    goto LABEL_115;
LABEL_107:
  if (v33 >= v13)
  {
LABEL_108:
    if (v13 < v33)
    {
      v98 = 32 * v33;
      v99 = 32 * v13;
      v100 = v33;
      v101 = v13;
      while (1)
      {
        if (v101 != --v100)
        {
          if (!v12)
            goto LABEL_274;
          v102 = (_OWORD *)(v12 + v99);
          v103 = v12 + v98;
          v104 = *(_OWORD *)(v12 + v99);
          v105 = *(_QWORD *)(v12 + v99 + 16);
          v106 = *(_QWORD *)(v12 + v99 + 24);
          v107 = *(_OWORD *)(v12 + v98 - 16);
          *v102 = *(_OWORD *)(v12 + v98 - 32);
          v102[1] = v107;
          *(_OWORD *)(v103 - 32) = v104;
          *(_QWORD *)(v103 - 16) = v105;
          *(_QWORD *)(v103 - 8) = v106;
        }
        ++v101;
        v98 -= 32;
        v99 += 32;
        if (v101 >= v100)
          goto LABEL_114;
      }
    }
    goto LABEL_114;
  }
LABEL_271:
  __break(1u);
LABEL_272:
  swift_bridgeObjectRelease_n(v235, 3);
  __break(1u);
LABEL_273:
  swift_bridgeObjectRelease_n(v235, 3);
  __break(1u);
LABEL_274:
  swift_bridgeObjectRelease_n(v3, 3);
  __break(1u);
LABEL_275:
  swift_bridgeObjectRelease_n(v235, 3);
  __break(1u);
LABEL_276:
  swift_bridgeObjectRelease_n(v3, 4);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1003D77F4(_QWORD **a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n(a2, 2);
  if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
    v4 = sub_100452E94(v4);
  v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  swift_bridgeObjectRetain(a2);
  sub_1003D681C(v7, a2);
  swift_bridgeObjectRelease(a2);
  *a1 = v4;
  return swift_bridgeObjectRelease_n(a2, 2);
}

void sub_1003D7898(void *a1, void *a2, void *a3)
{
  void *v4;
  id v6;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  _QWORD *v62;

  v4 = a1;
  if (!a1)
  {
    if (a2)
    {
      v6 = a2;
      v4 = a2;
    }
    else
    {
      if (!a3)
        return;
      swift_retain();
      v4 = a3;
    }
  }
  v8 = a1;
  v9 = objc_msgSend(v4, "metadataValues");
  v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String, &type metadata for String, &protocol witness table for String);

  v57 = v4;
  v11 = objc_msgSend(v4, "displaySortOrder");
  v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for String);

  v12 = 0;
  v13 = _swiftEmptyArrayStorage;
  v62 = _swiftEmptyArrayStorage;
  v14 = 1 << *(_BYTE *)(v10 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v10 + 64);
  v59 = v10 + 64;
  v60 = (unint64_t)(v14 + 63) >> 6;
  if (!v16)
    goto LABEL_10;
LABEL_9:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v17 | (v12 << 6); ; i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    v22 = 16 * i;
    v23 = (uint64_t *)(*(_QWORD *)(v10 + 48) + v22);
    v24 = *v23;
    v25 = v23[1];
    v26 = (uint64_t *)(*(_QWORD *)(v10 + 56) + v22);
    v27 = *v26;
    v28 = v26[1];
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v28);
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_1001547B4(0, v13[2] + 1, 1, v13);
    v30 = v13[2];
    v29 = v13[3];
    if (v30 >= v29 >> 1)
      v13 = sub_1001547B4((_QWORD *)(v29 > 1), v30 + 1, 1, v13);
    v13[2] = v30 + 1;
    v31 = &v13[4 * v30];
    v31[4] = v24;
    v31[5] = v25;
    v31[6] = v27;
    v31[7] = v28;
    v62 = v13;
    if (v16)
      goto LABEL_9;
LABEL_10:
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if (v19 >= v60)
      goto LABEL_30;
    v20 = *(_QWORD *)(v59 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v60)
        goto LABEL_30;
      v20 = *(_QWORD *)(v59 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v60)
          goto LABEL_30;
        v20 = *(_QWORD *)(v59 + 8 * v12);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v16 = (v20 - 1) & v20;
  }
  v21 = v19 + 3;
  if (v21 < v60)
  {
    v20 = *(_QWORD *)(v59 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v12 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        if (v12 >= v60)
          goto LABEL_30;
        v20 = *(_QWORD *)(v59 + 8 * v12);
        ++v21;
        if (v20)
          goto LABEL_23;
      }
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      return;
    }
    v12 = v21;
    goto LABEL_23;
  }
LABEL_30:
  swift_release(v10);
  v32 = (_QWORD *)v58;
  v61 = v13[2];
  if (!v61)
    goto LABEL_56;
  v33 = *(_QWORD *)(v58 + 16);
  swift_bridgeObjectRetain_n(v13, 2);
  v34 = 0;
  while (2)
  {
    v41 = &v13[4 * v34 + 4];
    v43 = *v41;
    v42 = v41[1];
    v44 = v41[3];
    if (v33)
    {
      v45 = v32[2];
      if (!v45)
        goto LABEL_59;
      v46 = v32[4];
      v47 = v32[5];
      v48 = v46 == v43 && v47 == v42;
      if (!v48 && (_stringCompareWithSmolCheck(_:_:expecting:)(v46, v47, *v41, v41[1], 0) & 1) == 0)
      {
        if (v33 == 1)
          goto LABEL_32;
        if (v45 < 2)
          goto LABEL_62;
        v49 = v32[6];
        v50 = v32[7];
        if ((v49 != v43 || v50 != v42)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, v43, v42, 0) & 1) == 0)
        {
          v51 = v45 - 1;
          v52 = (uint64_t *)(v58 + 72);
          v53 = v33 - 2;
          while (v53)
          {
            if (!--v51)
              goto LABEL_61;
            v54 = *(v52 - 1);
            v55 = *v52;
            if (v54 != v43 || v55 != v42)
            {
              --v53;
              v52 += 2;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v43, v42, 0) & 1) == 0)
                continue;
            }
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
    }
    else
    {
LABEL_32:
      swift_bridgeObjectRetain_n(v42, 2);
      v35 = swift_bridgeObjectRetain(v44);
      v36 = *(id *)DOCLog.UI.unsafeMutableAddressor(v35);
      v37 = static os_log_type_t.fault.getter();
      v38 = sub_10006922C((uint64_t *)&unk_100644560);
      v39 = swift_allocObject(v38, 72, 7);
      *(_OWORD *)(v39 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = sub_10006A638();
      *(_QWORD *)(v39 + 32) = v43;
      *(_QWORD *)(v39 + 40) = v42;
      os_log(_:dso:log:type:_:)("Unknown metadata key (%@) will be sorted alphabetically at the end", 66, 2, &_mh_execute_header, v36, v37, v39);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v42);

      v40 = v39;
      v32 = (_QWORD *)v58;
      swift_bridgeObjectRelease(v40);
    }
LABEL_33:
    if (++v34 != v61)
      continue;
    break;
  }
  swift_bridgeObjectRelease_n(v13, 2);
LABEL_56:
  swift_bridgeObjectRetain(v32);
  sub_1003D77F4(&v62, (uint64_t)v32);
  swift_unknownObjectRelease(v57);
  swift_bridgeObjectRelease_n(v32, 2);
}

void sub_1003D7D60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  BOOL v20;
  void (*v21)(char *, uint64_t);
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v33)(char *, uint64_t, uint64_t, __n128);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  unint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  void *v41;
  Class isa;
  id v43;
  char *v44;
  char *v45;
  id v46;
  NSString v47;
  char *v48;
  Class v49;
  Class v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char v58[16];
  char *v59;
  uint64_t v60;

  v2 = sub_10006922C((uint64_t *)&unk_100643900);
  __chkstk_darwin(v2);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v57 = (char *)&v52 - v5;
  __chkstk_darwin(v6);
  v56 = (char *)&v52 - v7;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v52 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v55 = (char *)&v52 - v12;
  __chkstk_darwin(v13);
  v54 = (char *)&v52 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  v18 = (void *)objc_opt_self(NSDate);
  v19 = objc_msgSend(v18, "distantPast");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v59 = v17;
  v20 = sub_100173AAC((uint64_t (*)(char *))sub_1003DB870, (_BOOL8)v58, a1);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v17, v8);
  if (!v20)
  {
    v22 = objc_msgSend(v18, "distantFuture");
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

    __chkstk_darwin(v23);
    *(&v52 - 2) = v17;
    LOBYTE(v22) = sub_100173AAC((uint64_t (*)(char *))sub_1003DB954, (_BOOL8)(&v52 - 4), a1);
    v21(v17, v8);
    if ((v22 & 1) == 0)
    {
      v24 = v21;
      v25 = v8;
      if (*(_QWORD *)(a1 + 16) == 1)
      {
        v26 = (uint64_t)v56;
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v56, a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v26, 1, v8) != 1)
        {
          v40 = v54;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v54, v26, v8);
          v41 = (void *)objc_opt_self(DOCDateFormatter);
          isa = Date._bridgeToObjectiveC()().super.isa;
          v43 = objc_msgSend(v41, "longDateStringFromDate:", isa);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
          v44 = v40;
          goto LABEL_17;
        }
        sub_10000CB4C(v26, (uint64_t *)&unk_100643900);
      }
      v60 = a1;
      swift_bridgeObjectRetain(a1);
      sub_1003CE270(&v60);
      v27 = v60;
      v28 = *(_QWORD *)(v60 + 16);
      v29 = v57;
      if (v28)
      {
        v30 = v60 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
        v31 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        v31(v57, v30, v25);
        v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
        v32(v29, 0, 1, v25);
        v33 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v33)(v29, 1, v25) != 1)
        {
          v34 = v29;
          v35 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
          v35(v55, v34, v25);
          if (v28 > *(_QWORD *)(v27 + 16))
          {
            __break(1u);
            swift_release(v27);
            __break(1u);
            return;
          }
          v36 = v30 + *(_QWORD *)(v9 + 72) * (v28 - 1);
          v37 = v53;
          v31(v53, v36, v25);
          v32(v37, 0, 1, v25);
          v38 = swift_release(v27);
          if (v33(v37, 1, v25, v38) == 1)
          {
            v24(v55, v25);
            v39 = (uint64_t)v37;
LABEL_13:
            sub_10000CB4C(v39, (uint64_t *)&unk_100643900);
            return;
          }
          v45 = v52;
          v35(v52, v37, v25);
          v46 = objc_msgSend(objc_allocWithZone((Class)NSDateIntervalFormatter), "init");
          v47 = String._bridgeToObjectiveC()();
          objc_msgSend(v46, "setDateTemplate:", v47);

          v48 = v55;
          v49 = Date._bridgeToObjectiveC()().super.isa;
          v50 = Date._bridgeToObjectiveC()().super.isa;
          v51 = objc_msgSend(v46, "stringFromDate:toDate:", v49, v50);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
          v24(v45, v25);
          v44 = v48;
LABEL_17:
          v24(v44, v25);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v57, 1, 1, v8);
      }
      swift_release(v27);
      v39 = (uint64_t)v29;
      goto LABEL_13;
    }
  }
}

uint64_t sub_1003D82C4(uint64_t result, uint64_t a2)
{
  int v2;
  uint64_t v3;

  if (*(_BYTE *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad) == 1)
  {
    *(_BYTE *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) = 0;
  }
  else
  {
    v2 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing);
    *(_BYTE *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) = 0;
    if ((*(_BYTE *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) & 1) == 0 && v2)
    {
      result = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate, a2);
      if (result)
      {
        v3 = result;
        *(_BYTE *)(result + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) = 1;
        sub_10022304C();
        return swift_unknownObjectRelease(v3);
      }
    }
  }
  return result;
}

void sub_1003D8350(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, NSObject *a8, uint64_t a9, void *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t countAndFlagsBits;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t ObjectType;
  id v51;
  char *v52;
  uint64_t v53;
  void *v54;
  void *object;
  uint64_t v56;
  id v57;
  void *v58;
  Swift::String v59;
  Swift::String_optional v60;
  Swift::String v61;
  Swift::String v62;
  id v63;
  void *v64;
  unsigned int v65;
  id v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  void *v83;
  Swift::String v84;
  Swift::String_optional v85;
  Swift::String v86;
  void *v87;
  id v88;
  NSString v89;
  id v90;
  char v91;
  NSObject *v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  void *v106;
  id v107;
  void *v108;
  uint64_t v109;
  __n128 v110;
  void (*v111)(char *, char *, int64_t);
  char *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  void *v120;
  id v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  __n128 v125;
  void (*v126)(char *, uint64_t, int64_t);
  char *v127;
  unint64_t v128;
  unint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  NSString v141;
  double v142;
  id v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  NSString v157;
  double v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  void *v165;
  id v166;
  void *v167;
  uint64_t v168;
  __n128 v169;
  void (*v170)(char *, unint64_t, int64_t);
  char *v171;
  unint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  id v180;
  NSString v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  NSString v191;
  double v192;
  id v193;
  uint64_t v194;
  _QWORD *v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  id v200;
  NSString v201;
  double v202;
  unint64_t v203;
  uint64_t i;
  void *v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  void *v218;
  Swift::String v219;
  Swift::String_optional v220;
  Swift::String v221;
  id v222;
  NSString v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  NSString v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  BOOL v240;
  BOOL v242;
  char v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  unint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  Swift::String v251;
  Swift::String v252;
  Swift::String v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  _QWORD *v257;
  Swift::String v258;
  Swift::String v259;
  Swift::String v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  id v276;
  NSString v277;
  id v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  id v290;
  NSString v291;
  id v292;
  dispatch_group_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  id v303;
  void *v304;
  id v305;
  _QWORD *v306;
  uint64_t v307;
  int64_t v308;
  char *v309;
  void *v310;
  _QWORD *v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  char *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  void *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  void *v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  unint64_t v345;
  unint64_t v346;
  uint64_t v347;
  id v348;
  NSString v349;
  id v350;
  unint64_t v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  unint64_t v355;
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  id v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  char *v374;
  char *v375;
  char *v376;
  char *v377;
  uint64_t v378;
  void *v379;
  uint64_t v380;
  NSObject *v381;
  void *v382;
  _QWORD *v383;
  char *v384;
  char *v385;
  char *v386;
  char *v387;
  uint64_t v388;
  _QWORD *v389;
  char v390[16];
  uint64_t v391;
  Swift::String aBlock;
  uint64_t (*v393)(uint64_t);
  void *v394;
  void (*v395)();
  _QWORD *v396;
  Swift::String v397;
  Swift::String v398;
  Swift::String v399;

  v381 = a8;
  v373 = a7;
  v372 = a6;
  v382 = a5;
  v371 = a4;
  v360 = a3;
  v370 = a2;
  v388 = a1;
  v378 = a11;
  v379 = a10;
  v380 = a9;
  v11 = sub_10006922C((uint64_t *)&unk_100643900);
  __chkstk_darwin(v11);
  v377 = (char *)&v360 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (unint64_t)&v360 - v14;
  __chkstk_darwin(v16);
  v387 = (char *)&v360 - v17;
  __chkstk_darwin(v18);
  countAndFlagsBits = (uint64_t)&v360 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v360 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v360 - v25;
  v27 = type metadata accessor for Date(0);
  v28 = *(_QWORD **)(v27 - 8);
  __chkstk_darwin(v27);
  v386 = (char *)&v360 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v376 = (char *)&v360 - v31;
  __chkstk_darwin(v32);
  v385 = (char *)&v360 - v33;
  __chkstk_darwin(v34);
  v375 = (char *)&v360 - v35;
  __chkstk_darwin(v36);
  v384 = (char *)&v360 - v37;
  __chkstk_darwin(v38);
  v374 = (char *)&v360 - v39;
  v366 = type metadata accessor for DispatchWorkItemFlags(0);
  v365 = *(_QWORD *)(v366 - 8);
  __chkstk_darwin(v366);
  v364 = (char *)&v360 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v363 = type metadata accessor for DispatchQoS(0);
  v362 = *(_QWORD *)(v363 - 8);
  __chkstk_darwin(v363);
  v361 = (char *)&v360 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v369 = type metadata accessor for UTType(0);
  v368 = *(_QWORD *)(v369 - 8);
  __chkstk_darwin(v369);
  v367 = (char *)&v360 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = swift_allocObject(&unk_1005E6F90, 32, 7);
  v44 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue(v43);
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v47 = v46;

  *(_QWORD *)(v43 + 16) = v45;
  *(_QWORD *)(v43 + 24) = v47;
  v383 = (_QWORD *)v43;
  v48 = v382;
  switch((unint64_t)v382)
  {
    case 0uLL:
      v43 = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v27 = v388;
        else
          v27 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v28 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v27);
        swift_bridgeObjectRelease(v43);
        if (v28 == (_QWORD *)1)
        {
          v43 = v388;
          swift_bridgeObjectRetain(v388);
          if (_CocoaArrayWrapper.endIndex.getter(v27))
          {
LABEL_5:
            if ((v43 & 0xC000000000000001) == 0)
            {
              if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v49 = *(void **)(v43 + 32);
                swift_unknownObjectRetain(v49);
                goto LABEL_8;
              }
              __break(1u);
LABEL_316:
              __break(1u);
              goto LABEL_317;
            }
LABEL_308:
            v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v43);
LABEL_8:
            swift_bridgeObjectRelease(v43);
            ObjectType = swift_getObjectType(v49);
            v51 = objc_msgSend(v49, "contentType");
            v52 = v367;
            static UTType._unconditionallyBridgeFromObjectiveC(_:)(v51);

            v53 = UTType.capitalizedSentenceLocalizedDescription.getter();
            object = v54;
            (*(void (**)(char *, uint64_t))(v368 + 8))(v52, v369);
            aBlock._countAndFlagsBits = v53;
            aBlock._object = object;
            v56 = DOCNode.areDiskPropertiesSupported.getter(ObjectType);
            if ((v56 & 1) != 0)
            {
              v57 = (id)_DocumentManagerBundle(v56);
              if (!v57)
              {

                swift_bridgeObjectRelease(v380);
                __break(1u);
LABEL_327:

                swift_bridgeObjectRelease(v380);
                __break(1u);
                goto LABEL_328;
              }
              v58 = v57;
              v397._countAndFlagsBits = 0xD000000000000058;
              v397._object = (void *)0x800000010051B5C0;
              v59._countAndFlagsBits = 0x656D756C6F56;
              v59._object = (void *)0xE600000000000000;
              v60.value._countAndFlagsBits = 0x617A696C61636F4CLL;
              v60.value._object = (void *)0xEB00000000656C62;
              v61._countAndFlagsBits = 0;
              v61._object = (void *)0xE000000000000000;
              v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, v60, (NSBundle)v58, v61, v397);

              swift_bridgeObjectRelease(object);
              aBlock = v62;
              object = v62._object;
            }
            v63 = objc_msgSend(v49, "cachedDomain", v360);
            if (v63)
            {
              v64 = v63;
              v65 = objc_msgSend(v63, "isUsingFPFS");

              if (v65)
              {
                v66 = objc_msgSend(v49, "isRootItem");
                if ((_DWORD)v66)
                {
                  if (DOCIsInternalBuild(v66) && object)
                  {
                    v67._object = (void *)0x8000000100530CE0;
                    v67._countAndFlagsBits = 0xD000000000000010;
                    String.append(_:)(v67);
                    object = aBlock._object;
                  }
                }
              }
            }
            v68 = sub_1003CC71C(v371, 0, v372, v373);
            v69 = v68;
            v71 = v70;
            if (object)
            {
              v72 = object;
LABEL_155:
              v222 = objc_allocWithZone((Class)NSAttributedString);
              swift_bridgeObjectRetain(object);
              v223 = String._bridgeToObjectiveC()();
              v224 = objc_msgSend(v222, "initWithString:", v223, swift_bridgeObjectRelease(v72).n128_f64[0]);

              sub_1003D3144(v69, v71, v224, 0, 0, 0, v381, v380, v379, v378);
              swift_release(v383);
              swift_bridgeObjectRelease(object);
              swift_bridgeObjectRelease(v71);

              swift_unknownObjectRelease(v49);
              return;
            }
            v217 = (id)_DocumentManagerBundle(v68);
            if (v217)
            {
              v218 = v217;
              v399._countAndFlagsBits = 0xD000000000000012;
              v399._object = (void *)0x80000001005105C0;
              v219._countAndFlagsBits = 0x746E656D75636F44;
              v219._object = (void *)0xE800000000000000;
              v220.value._countAndFlagsBits = 0x617A696C61636F4CLL;
              v220.value._object = (void *)0xEB00000000656C62;
              v221._countAndFlagsBits = 0;
              v221._object = (void *)0xE000000000000000;
              v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v219, v220, (NSBundle)v218, v221, v399)._object;

              object = 0;
              goto LABEL_155;
            }
            goto LABEL_327;
          }
          swift_bridgeObjectRelease(v43);
        }
        aBlock._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
        v43 = v388;
        swift_bridgeObjectRetain(v388);
        countAndFlagsBits = _CocoaArrayWrapper.endIndex.getter(v27);
        if (countAndFlagsBits)
        {
LABEL_136:
          if (countAndFlagsBits >= 1)
          {
            for (i = 0; i != countAndFlagsBits; ++i)
            {
              if ((v43 & 0xC000000000000001) != 0)
              {
                v205 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v43);
              }
              else
              {
                v205 = *(void **)(v43 + 8 * i + 32);
                swift_unknownObjectRetain(v205);
              }
              v206 = objc_msgSend(v205, "isFolder", v360);
              if ((_DWORD)v206)
              {
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v206);
                v207 = *(_QWORD *)(aBlock._countAndFlagsBits + 16);
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v207);
                v208 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v207, v205);
                specialized ContiguousArray._endMutation()(v208);
              }
              else
              {
                swift_unknownObjectRelease(v205);
              }
            }
            swift_bridgeObjectRelease(v43);
            countAndFlagsBits = aBlock._countAndFlagsBits;
LABEL_189:
            if ((countAndFlagsBits & 0x8000000000000000) == 0 && (countAndFlagsBits & 0x4000000000000000) == 0)
            {
              v27 = *(_QWORD *)(countAndFlagsBits + 16);
              goto LABEL_192;
            }
LABEL_306:
            v359 = swift_bridgeObjectRetain(countAndFlagsBits);
            v27 = _CocoaArrayWrapper.endIndex.getter(v359);
            swift_release(countAndFlagsBits);
LABEL_192:
            swift_release(countAndFlagsBits);
            v250 = (uint64_t)v28 - v27;
            if (__OFSUB__(v28, v27))
            {
              __break(1u);
              goto LABEL_308;
            }
            v26 = (char *)0xD000000000000010;
            v43 = (uint64_t)&unk_1004D9000;
            v48 = &type metadata for Int;
            v44 = &protocol witness table for Int;
            if (v250 < 1)
            {
              v28 = _swiftEmptyArrayStorage;
              goto LABEL_197;
            }
            v251._countAndFlagsBits = 0xD00000000000004CLL;
            v251._object = (void *)0x8000000100530C90;
            v252._countAndFlagsBits = 0x75636F6420756C25;
            v252._object = (void *)0xED000073746E656DLL;
            v253 = DOCLocalizedDictionaryString(_:comment:)(v252, v251);
            v254 = sub_10006922C((uint64_t *)&unk_100644560);
            v255 = swift_allocObject(v254, 72, 7);
            *(_OWORD *)(v255 + 16) = xmmword_1004D9670;
            *(_QWORD *)(v255 + 56) = &type metadata for Int;
            *(_QWORD *)(v255 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v255 + 32) = v250;
            countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v253._countAndFlagsBits, v253._object, v255);
            v23 = v256;
            swift_bridgeObjectRelease(v253._object);
            swift_bridgeObjectRelease(v255);
            v28 = sub_100081A50(0, 1, 1, _swiftEmptyArrayStorage);
            v15 = v28[2];
            v203 = v28[3];
            v45 = v15 + 1;
            if (v15 < v203 >> 1)
            {
LABEL_195:
              v28[2] = v45;
              v257 = &v28[2 * v15];
              v257[4] = countAndFlagsBits;
              v257[5] = v23;
LABEL_197:
              if (v27 >= 1)
              {
                v258._countAndFlagsBits = (uint64_t)(v26 + 58);
                v258._object = (void *)0x8000000100530C40;
                v259._countAndFlagsBits = 0x646C6F6620756C25;
                v259._object = (void *)0xEB00000000737265;
                v260 = DOCLocalizedDictionaryString(_:comment:)(v259, v258);
                v261 = sub_10006922C((uint64_t *)&unk_100644560);
                v262 = swift_allocObject(v261, 72, 7);
                *(_OWORD *)(v262 + 16) = *(_OWORD *)(v43 + 1648);
                *(_QWORD *)(v262 + 56) = v48;
                *(_QWORD *)(v262 + 64) = v44;
                *(_QWORD *)(v262 + 32) = v27;
                v263 = static String.localizedStringWithFormat(_:_:)(v260._countAndFlagsBits, v260._object, v262);
                v265 = v264;
                swift_bridgeObjectRelease(v260._object);
                swift_bridgeObjectRelease(v262);
                if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
                  v28 = sub_100081A50(0, v28[2] + 1, 1, v28);
                v267 = v28[2];
                v266 = v28[3];
                if (v267 >= v266 >> 1)
                  v28 = sub_100081A50((_QWORD *)(v266 > 1), v267 + 1, 1, v28);
                v28[2] = v267 + 1;
                v268 = &v28[2 * v267];
                v268[4] = v263;
                v268[5] = v265;
              }
              v269 = sub_1003CC71C(v371, 0, v372, v373);
              v271 = v270;
              aBlock._countAndFlagsBits = (uint64_t)v28;
              v272 = sub_10006922C(&qword_10064F390);
              v273 = sub_100062698((unint64_t *)&qword_10064D530, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
              BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v272, v273);
              v275 = v274;
              swift_bridgeObjectRelease(v28);
              v276 = objc_allocWithZone((Class)NSAttributedString);
              v277 = String._bridgeToObjectiveC()();
              v278 = objc_msgSend(v276, "initWithString:", v277, swift_bridgeObjectRelease(v275).n128_f64[0]);

              sub_1003D3144(v269, v271, v278, 0, 0, 0, v381, v380, v379, v378);
              swift_release(v383);
              swift_bridgeObjectRelease(v271);

              return;
            }
LABEL_325:
            v28 = sub_100081A50((_QWORD *)(v203 > 1), v45, 1, v28);
            goto LABEL_195;
          }
LABEL_324:
          __break(1u);
          goto LABEL_325;
        }
      }
      else
      {
        v28 = *(_QWORD **)((v388 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v28 == (_QWORD *)1)
        {
          swift_bridgeObjectRetain(v388);
          goto LABEL_5;
        }
        aBlock._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
        countAndFlagsBits = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v388);
        if (countAndFlagsBits)
          goto LABEL_136;
      }
      swift_bridgeObjectRelease(v43);
      countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_189;
    case 1uLL:
      v45 = v388;
      v15 = (unint64_t)v388 >> 62;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v279 = v388;
        else
          v279 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v27 = _CocoaArrayWrapper.endIndex.getter(v279);
        swift_bridgeObjectRelease(v45);
        if (v27 == 1)
        {
          swift_bridgeObjectRetain(v45);
          if (!_CocoaArrayWrapper.endIndex.getter(v279))
          {
            swift_bridgeObjectRelease(v45);
            countAndFlagsBits = (uint64_t)v383;
            goto LABEL_214;
          }
          goto LABEL_22;
        }
LABEL_210:
        countAndFlagsBits = (uint64_t)v383;
        if (v27 > 1)
          goto LABEL_223;
        goto LABEL_211;
      }
      v27 = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v27 != 1)
        goto LABEL_210;
      swift_bridgeObjectRetain(v388);
LABEL_22:
      if ((v45 & 0xC000000000000001) != 0)
      {
        v73 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
      }
      else
      {
        if (!*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_316;
        v73 = *(void **)(v45 + 32);
        swift_unknownObjectRetain(v73);
      }
      swift_bridgeObjectRelease(v45);
      v74 = swift_getObjectType(v73);
      if (objc_msgSend(v73, "isFolder", v360))
      {
        v27 = (int64_t)v73;
        if ((DOCNode.isFolderSizingSupported.getter(v74) & 1) != 0)
        {
          v75 = objc_msgSend(v73, "deepItemCount");
          if (v75)
          {
            v76 = v75;
            v77 = objc_msgSend(v75, "integerValue");
            v78 = swift_allocObject(&unk_1005E7120, 64, 7);
            *(_BYTE *)(v78 + 16) = objc_msgSend(v73, "isCloudItem");
            *(_QWORD *)(v78 + 24) = v77;
            *(_QWORD *)(v78 + 32) = 0;
            *(_QWORD *)(v78 + 40) = 0;
            *(_QWORD *)(v78 + 48) = 0;
            *(_WORD *)(v78 + 56) = 256;
            v79 = sub_1003CC71C(v371, 1, v372, v373);
            v81 = v80;
            v82 = (id)_DocumentManagerBundle(v79);
            if (!v82)
            {
LABEL_328:

              swift_bridgeObjectRelease(v380);
              __break(1u);
              JUMPOUT(0x1003DB0D8);
            }
            v83 = v82;
            v398._countAndFlagsBits = 0xD00000000000004DLL;
            v398._object = (void *)0x800000010052F5D0;
            v84._object = (void *)0x800000010052F5B0;
            v84._countAndFlagsBits = 0xD000000000000010;
            v85.value._countAndFlagsBits = 0x617A696C61636F4CLL;
            v85.value._object = (void *)0xEB00000000656C62;
            v86._countAndFlagsBits = 0;
            v86._object = (void *)0xE000000000000000;
            v87 = NSLocalizedString(_:tableName:bundle:value:comment:)(v84, v85, (NSBundle)v83, v86, v398)._object;

            v88 = objc_allocWithZone((Class)NSAttributedString);
            v89 = String._bridgeToObjectiveC()();
            v90 = objc_msgSend(v88, "initWithString:", v89, swift_bridgeObjectRelease(v87).n128_f64[0]);

            if ((*(_BYTE *)(v78 + 57) & 1) != 0)
            {
              v91 = 1;
              v92 = v381;
              v93 = v380;
              v94 = v379;
              v95 = v378;
            }
            else
            {
              if ((*(_BYTE *)(v78 + 40) & 1) != 0)
              {
                v91 = 1;
              }
              else
              {
                v237 = *(_QWORD *)(v78 + 32);
                v238 = *(_QWORD *)(v78 + 48);
                v240 = v237 == -1 || v238 == -1;
                v242 = v237 < 0 && v238 >= 0;
                if (*(_BYTE *)(v78 + 16) != 1)
                  v243 = v240;
                else
                  v243 = v242;
                if (v240)
                  v243 = v240;
                if ((*(_BYTE *)(v78 + 56) & 1) != 0)
                  v91 = 1;
                else
                  v91 = v243;
              }
              v92 = v381;
              v93 = v380;
              v94 = v379;
              v95 = v378;
            }
            sub_1003D3144(v79, v81, v90, 0, 0, v91, v92, v93, v94, v95);
            swift_bridgeObjectRelease(v81);

            v244 = swift_allocObject(&unk_1005E6DD8, 24, 7);
            swift_unknownObjectWeakInit(v244 + 16);
            v245 = (_QWORD *)swift_allocObject(&unk_1005E7148, 72, 7);
            v246 = v371;
            v245[2] = v244;
            v245[3] = v246;
            v245[4] = 1;
            v247 = v373;
            v245[5] = v372;
            v245[6] = v247;
            v248 = v383;
            v245[7] = v383;
            v245[8] = v78;
            sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
            swift_retain();
            swift_retain();
            swift_retain();
            v388 = static OS_dispatch_queue.main.getter(v249);
            DOCNode.performFolderSizingIfSupported(handlerQueue:_:)(v388, sub_1003DB720, v245, v74);
            swift_release(v248);
            swift_unknownObjectRelease(v73);

            swift_release(v78);
            swift_release(v244);
            v195 = v245;
LABEL_129:
            swift_release(v195);
LABEL_132:

            return;
          }
        }
      }
      swift_unknownObjectRelease(v73);
      countAndFlagsBits = (uint64_t)v383;
LABEL_211:
      if (!v15)
      {
        v28 = *(_QWORD **)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v45);
        if (!v28)
          goto LABEL_213;
        goto LABEL_218;
      }
LABEL_214:
      if (v45 < 0)
        v280 = v45;
      else
        v280 = v45 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v45);
      v28 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v280);
      if (!v28)
      {
LABEL_213:
        swift_bridgeObjectRelease(v45);
LABEL_222:
        sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
        swift_release(countAndFlagsBits);
        return;
      }
LABEL_218:
      if ((v45 & 0xC000000000000001) != 0)
        goto LABEL_322;
      v203 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v203)
      {
        __break(1u);
        goto LABEL_324;
      }
      v281 = *(_QWORD *)(v45 + 32);
      swift_unknownObjectRetain(v281);
      while (2)
      {
        swift_bridgeObjectRelease(v45);
        v282 = swift_getObjectType(v281);
        v283 = DOCNode.areDiskPropertiesSupported.getter(v282);
        swift_unknownObjectRelease(v281);
        if ((v283 & 1) != 0)
          goto LABEL_222;
LABEL_223:
        v284 = v371;
        v285 = sub_1003CC71C(v371, 1, v372, v373);
        v287 = v286;
        sub_1003CE318(v284, 1uLL);
        v289 = v288;
        v290 = objc_allocWithZone((Class)NSAttributedString);
        v291 = String._bridgeToObjectiveC()();
        v292 = objc_msgSend(v290, "initWithString:", v291, swift_bridgeObjectRelease(v289).n128_f64[0]);

        sub_1003D3144(v285, v287, v292, 0, 0, 1, v381, v380, v379, v378);
        swift_bridgeObjectRelease(v287);

        v293 = dispatch_group_create();
        v294 = swift_allocObject(&unk_1005E7058, 24, 7);
        v386 = (char *)v294;
        *(_QWORD *)(v294 + 16) = 0;
        v45 = v294 + 16;
        v295 = swift_allocObject(&unk_1005E7080, 17, 7);
        v385 = (char *)v295;
        *(_BYTE *)(v295 + 16) = 1;
        countAndFlagsBits = v295 + 16;
        if (v15)
        {
          if (v388 < 0)
            v296 = v388;
          else
            v296 = v388 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v388, 2);
          v15 = _CocoaArrayWrapper.endIndex.getter(v296);
        }
        else
        {
          v15 = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v388, 2);
        }
        if (!v15)
        {
LABEL_246:
          swift_bridgeObjectRelease_n(v388, 2);
          v312 = v370;
          sub_1003D82C4((uint64_t)v312, (uint64_t)v312);

          v313 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
          v388 = static OS_dispatch_queue.main.getter(v313);
          v314 = swift_allocObject(&unk_1005E6DD8, 24, 7);
          swift_unknownObjectWeakInit(v314 + 16);
          v315 = (_QWORD *)swift_allocObject(&unk_1005E70A8, 80, 7);
          v316 = v386;
          v317 = v383;
          v315[2] = v385;
          v315[3] = v317;
          v315[4] = v316;
          v315[5] = v314;
          v318 = v371;
          v315[6] = v371;
          v315[7] = 1;
          v319 = v372;
          v320 = v373;
          v315[8] = v372;
          v315[9] = v320;
          v395 = sub_1003DB664;
          v396 = v315;
          aBlock._countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
          aBlock._object = (void *)1107296256;
          v393 = sub_10004A82C;
          v394 = &unk_1005E70C0;
          v321 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v322 = sub_1003DB33C(v318, 1uLL, v319, v320);
          v323 = v361;
          static DispatchQoS.unspecified.getter(v322);
          v389 = _swiftEmptyArrayStorage;
          v324 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v325 = sub_10006922C((uint64_t *)&unk_100647540);
          v326 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
          v327 = v364;
          v328 = v366;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v389, v325, v326, v366, v324);
          v329 = (void *)v388;
          OS_dispatch_group.notify(qos:flags:queue:execute:)(v323, v327, v388, v321);

          _Block_release(v321);
          (*(void (**)(char *, uint64_t))(v365 + 8))(v327, v328);
          (*(void (**)(char *, uint64_t))(v362 + 8))(v323, v363);
          v330 = v396;
          swift_release(v317);
          swift_release(v386);
          swift_release(v385);
          swift_release(v314);
          swift_release(v330);
          return;
        }
        v297 = v388 & 0xC000000000000001;
        swift_beginAccess(countAndFlagsBits, &v391, 1, 0);
        swift_beginAccess(v45, v390, 1, 0);
        v298 = 4;
        v384 = (char *)v15;
        v382 = (void *)v297;
        v299 = 0;
        if (v297)
        {
LABEL_231:
          v300 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v299, v388);
          v301 = v299 + 1;
          if (!__OFADD__(v299, 1))
            goto LABEL_235;
LABEL_247:
          __break(1u);
          goto LABEL_248;
        }
        while (1)
        {
          v300 = *(void **)(v388 + 8 * v298);
          swift_unknownObjectRetain(v300);
          v301 = v299 + 1;
          if (__OFADD__(v299, 1))
            goto LABEL_247;
LABEL_235:
          dispatch_group_enter(v293);
          v302 = swift_getObjectType(v300);
          if ((objc_msgSend(v300, "isFolder") & 1) != 0
            || (v303 = objc_msgSend(v300, "fileSize")) == 0)
          {
            if (objc_msgSend(v300, "isFolder", v360)
              && (DOCNode.isFolderSizingSupported.getter(v302) & 1) != 0)
            {
              v306 = (_QWORD *)swift_allocObject(&unk_1005E70F8, 40, 7);
              v307 = countAndFlagsBits;
              v308 = v45;
              v309 = v385;
              v306[2] = v386;
              v306[3] = v309;
              v306[4] = v293;
              v387 = (char *)sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
              v45 = v308;
              countAndFlagsBits = v307;
              swift_retain();
              swift_retain();
              v310 = (void *)static OS_dispatch_queue.main.getter(v293);
              DOCNode.performFolderSizingIfSupported(handlerQueue:_:)(v310, sub_1003DB6AC, v306, v302);
              swift_unknownObjectRelease(v300);
              v311 = v306;
              v297 = (unint64_t)v382;
              swift_release(v311);

              v15 = (unint64_t)v384;
            }
            else
            {
              *(_BYTE *)countAndFlagsBits = 0;
              dispatch_group_leave(v293);
              swift_unknownObjectRelease(v300);
            }
            goto LABEL_243;
          }
          v304 = v303;
          v305 = objc_msgSend(v303, "longLongValue");
          if (__OFADD__(*(_QWORD *)v45, v305))
            break;
          *(_QWORD *)v45 += v305;
          dispatch_group_leave(v293);
          swift_unknownObjectRelease(v300);

LABEL_243:
          if (v301 == v15)
            goto LABEL_246;
          v299 = ++v298 - 4;
          if (v297)
            goto LABEL_231;
        }
LABEL_248:
        __break(1u);
LABEL_249:
        if (countAndFlagsBits < 0)
          v331 = countAndFlagsBits;
        else
          v331 = countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(countAndFlagsBits);
        v332 = _CocoaArrayWrapper.endIndex.getter(v331);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v96 = v383;
        if (v332 != 1)
          goto LABEL_255;
        swift_bridgeObjectRetain(countAndFlagsBits);
        if (!_CocoaArrayWrapper.endIndex.getter(v331))
        {
          swift_bridgeObjectRelease(countAndFlagsBits);
LABEL_255:
          sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
LABEL_256:
          swift_release(v96);
          return;
        }
LABEL_34:
        if ((countAndFlagsBits & 0xC000000000000001) != 0)
        {
          v97 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
          goto LABEL_37;
        }
        if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          v281 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
          continue;
        }
        break;
      }
      v97 = *(_QWORD *)(countAndFlagsBits + 32);
      swift_unknownObjectRetain(v97);
LABEL_37:
      swift_bridgeObjectRelease(countAndFlagsBits);
      v98 = swift_getObjectType(v97);
      v99 = (void *)DOCNode.fpfs_syncFetchFPItem()(v98);
      if (v99)
      {
        v100 = v99;
        if (!objc_msgSend(v99, "isRootItem"))
        {
          v225 = v371;
          v226 = v372;
          v227 = v373;
          v228 = sub_1003CC71C(v371, 2, v372, v373);
          v230 = v229;
          sub_1003CE318(v225, 2uLL);
          v232 = v231;
          v233 = objc_allocWithZone((Class)NSAttributedString);
          v234 = String._bridgeToObjectiveC()();
          v235 = objc_msgSend(v233, "initWithString:", v234, swift_bridgeObjectRelease(v232).n128_f64[0]);

          sub_1003D3144(v228, v230, v235, 0, 0, 1, v381, v380, v379, v378);
          swift_bridgeObjectRelease(v230);

          v236 = swift_allocObject(&unk_1005E6DD8, 24, 7);
          swift_unknownObjectWeakInit(v236 + 16);
          v96 = (_QWORD *)swift_allocObject(&unk_1005E7030, 56, 7);
          v96[2] = v236;
          v96[3] = v225;
          v96[4] = 2;
          v96[5] = v226;
          v96[6] = v227;
          swift_retain();
          sub_1003CE44C(v100, v360, (uint64_t)sub_1003DB5C4, (uint64_t)v96, v225, 2uLL, v226, v227);
          swift_release(v383);
          swift_unknownObjectRelease(v97);

          swift_release(v236);
          goto LABEL_256;
        }

      }
      sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v96);
      swift_unknownObjectRelease(v97);
      return;
    case 2uLL:
      countAndFlagsBits = v388;
      if ((unint64_t)v388 >> 62)
        goto LABEL_249;
      v96 = v383;
      if (*(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
        goto LABEL_255;
      swift_bridgeObjectRetain(v388);
      goto LABEL_34;
    case 3uLL:
      v101 = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          countAndFlagsBits = v388;
        else
          countAndFlagsBits = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v388, 2);
        v102 = _CocoaArrayWrapper.endIndex.getter(countAndFlagsBits);
        if (v102)
          goto LABEL_43;
      }
      else
      {
        v102 = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v388, 2);
        if (v102)
        {
LABEL_43:
          if (v102 >= 1)
          {
            v103 = 0;
            v104 = v101 & 0xC000000000000001;
            v105 = (char *)_swiftEmptyArrayStorage;
            v387 = (char *)v102;
            do
            {
              if (v104)
              {
                v106 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v103, v101);
              }
              else
              {
                v106 = *(void **)(v101 + 8 * v103 + 32);
                swift_unknownObjectRetain(v106);
              }
              v107 = objc_msgSend(v106, "doc_creationDate", v360);
              if (v107)
              {
                v108 = v107;
                static Date._unconditionallyBridgeFromObjectiveC(_:)(v107);

                v109 = 0;
              }
              else
              {
                v109 = 1;
              }
              ((void (*)(char *, uint64_t, uint64_t, int64_t))v28[7])(v23, v109, 1, v27);
              sub_100070EDC((uint64_t)v23, (uint64_t)v26, (uint64_t *)&unk_100643900);
              v110 = swift_unknownObjectRelease(v106);
              if (((unsigned int (*)(char *, uint64_t, int64_t, __n128))v28[6])(v26, 1, v27, v110) == 1)
              {
                sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_100643900);
                v101 = v388;
              }
              else
              {
                v111 = (void (*)(char *, char *, int64_t))v28[4];
                v112 = v374;
                v111(v374, v26, v27);
                v111(v384, v112, v27);
                if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
                  v105 = (char *)sub_1001548C0(0, *((_QWORD *)v105 + 2) + 1, 1, (unint64_t)v105);
                v114 = *((_QWORD *)v105 + 2);
                v113 = *((_QWORD *)v105 + 3);
                if (v114 >= v113 >> 1)
                  v105 = (char *)sub_1001548C0(v113 > 1, v114 + 1, 1, (unint64_t)v105);
                *((_QWORD *)v105 + 2) = v114 + 1;
                v111(&v105[((*((unsigned __int8 *)v28 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v28 + 80))+ v28[9] * v114], v384, v27);
                v102 = (uint64_t)v387;
                v101 = v388;
              }
              ++v103;
            }
            while (v102 != v103);
            goto LABEL_263;
          }
          __break(1u);
          goto LABEL_304;
        }
      }
      v105 = (char *)_swiftEmptyArrayStorage;
LABEL_263:
      swift_bridgeObjectRelease_n(v101, 2);
      sub_1003D7D60((uint64_t)v105);
      v334 = v333;
      v336 = v335;
      swift_bridgeObjectRelease(v105);
      v213 = v383;
      if (v336)
      {
        v337 = v383[3];
        v383[2] = v334;
        v213[3] = v336;
        swift_bridgeObjectRelease(v337);
      }
      v215 = v371;
      v216 = 3;
LABEL_274:
      v344 = sub_1003CC71C(v215, v216, v372, v373);
      v346 = v345;
      v347 = v213[3];
      v348 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(v347);
      v349 = String._bridgeToObjectiveC()();
      v350 = objc_msgSend(v348, "initWithString:", v349, swift_bridgeObjectRelease(v347).n128_f64[0]);

      sub_1003D3144(v344, v346, v350, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v213);
      swift_bridgeObjectRelease(v346);

      return;
    case 4uLL:
      v115 = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v338 = v388;
        else
          v338 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v388, 2);
        v116 = _CocoaArrayWrapper.endIndex.getter(v338);
        if (v116)
          goto LABEL_61;
      }
      else
      {
        v116 = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v388, 2);
        if (v116)
        {
LABEL_61:
          if (v116 < 1)
          {
LABEL_304:
            __break(1u);
            goto LABEL_305;
          }
          v117 = 0;
          v118 = v115 & 0xC000000000000001;
          v119 = (char *)_swiftEmptyArrayStorage;
          do
          {
            if (v118)
            {
              v120 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v117, v115);
            }
            else
            {
              v120 = *(void **)(v115 + 8 * v117 + 32);
              swift_unknownObjectRetain(v120);
            }
            v121 = objc_msgSend(v120, "modificationDate", v360);
            v122 = (uint64_t)v387;
            if (v121)
            {
              v123 = v121;
              static Date._unconditionallyBridgeFromObjectiveC(_:)(v121);

              v124 = 0;
            }
            else
            {
              v124 = 1;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t, int64_t))v28[7])(v122, v124, 1, v27);
            sub_100070EDC(v122, countAndFlagsBits, (uint64_t *)&unk_100643900);
            v125 = swift_unknownObjectRelease(v120);
            if (((unsigned int (*)(uint64_t, uint64_t, int64_t, __n128))v28[6])(countAndFlagsBits, 1, v27, v125) == 1)
            {
              sub_10000CB4C(countAndFlagsBits, (uint64_t *)&unk_100643900);
            }
            else
            {
              v126 = (void (*)(char *, uint64_t, int64_t))v28[4];
              v127 = v375;
              v126(v375, countAndFlagsBits, v27);
              v126(v385, (uint64_t)v127, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v119) & 1) == 0)
                v119 = (char *)sub_1001548C0(0, *((_QWORD *)v119 + 2) + 1, 1, (unint64_t)v119);
              v129 = *((_QWORD *)v119 + 2);
              v128 = *((_QWORD *)v119 + 3);
              if (v129 >= v128 >> 1)
                v119 = (char *)sub_1001548C0(v128 > 1, v129 + 1, 1, (unint64_t)v119);
              *((_QWORD *)v119 + 2) = v129 + 1;
              v126(&v119[((*((unsigned __int8 *)v28 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v28 + 80))+ v28[9] * v129], (uint64_t)v385, v27);
            }
            v115 = v388;
            ++v117;
          }
          while (v116 != v117);
LABEL_271:
          swift_bridgeObjectRelease_n(v115, 2);
          sub_1003D7D60((uint64_t)v119);
          v340 = v339;
          v342 = v341;
          swift_bridgeObjectRelease(v119);
          v213 = v383;
          if (v342)
          {
            v343 = v383[3];
            v383[2] = v340;
            v213[3] = v342;
            swift_bridgeObjectRelease(v343);
          }
          v215 = v371;
          v216 = 4;
          goto LABEL_274;
        }
      }
      v119 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_271;
    case 5uLL:
      v43 = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          countAndFlagsBits = v388;
        else
          countAndFlagsBits = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v388, 2);
        v161 = _CocoaArrayWrapper.endIndex.getter(countAndFlagsBits);
      }
      else
      {
        v161 = *(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v388, 2);
      }
      v162 = (uint64_t)v377;
      if (v161)
      {
        if (v161 < 1)
        {
LABEL_305:
          __break(1u);
          goto LABEL_306;
        }
        v163 = 0;
        v387 = (char *)(v43 & 0xC000000000000001);
        v164 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v387)
          {
            v165 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v163, v43);
          }
          else
          {
            v165 = *(void **)(v43 + 8 * v163 + 32);
            swift_unknownObjectRetain(v165);
          }
          v166 = objc_msgSend(v165, "doc_lastUsedDate", v360);
          if (v166)
          {
            v167 = v166;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v166);

            v168 = 0;
          }
          else
          {
            v168 = 1;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, int64_t))v28[7])(v162, v168, 1, v27);
          sub_100070EDC(v162, v15, (uint64_t *)&unk_100643900);
          v169 = swift_unknownObjectRelease(v165);
          if (((unsigned int (*)(unint64_t, uint64_t, int64_t, __n128))v28[6])(v15, 1, v27, v169) == 1)
          {
            sub_10000CB4C(v15, (uint64_t *)&unk_100643900);
          }
          else
          {
            v170 = (void (*)(char *, unint64_t, int64_t))v28[4];
            v171 = v376;
            v170(v376, v15, v27);
            v170(v386, (unint64_t)v171, v27);
            if ((swift_isUniquelyReferenced_nonNull_native(v164) & 1) == 0)
              v164 = (char *)sub_1001548C0(0, *((_QWORD *)v164 + 2) + 1, 1, (unint64_t)v164);
            v173 = *((_QWORD *)v164 + 2);
            v172 = *((_QWORD *)v164 + 3);
            if (v173 >= v172 >> 1)
              v164 = (char *)sub_1001548C0(v172 > 1, v173 + 1, 1, (unint64_t)v164);
            *((_QWORD *)v164 + 2) = v173 + 1;
            v170(&v164[((*((unsigned __int8 *)v28 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v28 + 80))+ v28[9] * v173], (unint64_t)v386, v27);
            v162 = (uint64_t)v377;
          }
          ++v163;
        }
        while (v161 != v163);
      }
      else
      {
        v164 = (char *)_swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n(v43, 2);
      sub_1003D7D60((uint64_t)v164);
      v210 = v209;
      v212 = v211;
      swift_bridgeObjectRelease(v164);
      v213 = v383;
      if (v212)
      {
        v214 = v383[3];
        v383[2] = v210;
        v213[3] = v212;
        swift_bridgeObjectRelease(v214);
      }
      v215 = v371;
      v216 = 5;
      goto LABEL_274;
    case 6uLL:
      countAndFlagsBits = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v355 = v388;
        else
          v355 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v356 = _CocoaArrayWrapper.endIndex.getter(v355);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v174 = v383;
        if (v356 != 1)
          goto LABEL_152;
        swift_bridgeObjectRetain(countAndFlagsBits);
        if (!_CocoaArrayWrapper.endIndex.getter(v355))
        {
          swift_bridgeObjectRelease(countAndFlagsBits);
          goto LABEL_152;
        }
      }
      else
      {
        v174 = v383;
        if (*(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          goto LABEL_152;
        swift_bridgeObjectRetain(v388);
      }
      if ((countAndFlagsBits & 0xC000000000000001) != 0)
      {
        v175 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
      }
      else
      {
        if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_320;
        v175 = *(_QWORD *)(countAndFlagsBits + 32);
        swift_unknownObjectRetain(v175);
      }
      swift_bridgeObjectRelease(countAndFlagsBits);
      v176 = swift_getObjectType(v175);
      DOCNode.diskProperties.getter(&v391, v176);
      sub_100070EDC((uint64_t)&v391, (uint64_t)&aBlock, &qword_100652BE8);
      if (aBlock._object)
      {
        v177 = sub_1003CC71C(v371, 6, v372, v373);
        v179 = v178;
        v180 = objc_allocWithZone((Class)NSAttributedString);
        v181 = String._bridgeToObjectiveC()();
        sub_1001D0A08((uint64_t)&v391);
        v182 = objc_msgSend(v180, "initWithString:", v181, v360);

        sub_1003D3144(v177, v179, v182, 0, 0, 0, v381, v380, v379, v378);
        swift_release(v174);
        swift_unknownObjectRelease(v175);
        swift_bridgeObjectRelease(v179);

        return;
      }
      swift_unknownObjectRelease(v175);
LABEL_152:
      sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v174);
      return;
    case 7uLL:
      countAndFlagsBits = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v351 = v388;
        else
          v351 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v352 = _CocoaArrayWrapper.endIndex.getter(v351);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v130 = v383;
        if (v352 != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(countAndFlagsBits);
        if (!_CocoaArrayWrapper.endIndex.getter(v351))
          goto LABEL_302;
      }
      else
      {
        v130 = v383;
        if (*(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(v388);
      }
      if ((countAndFlagsBits & 0xC000000000000001) != 0)
      {
        v131 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
      }
      else
      {
        if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_318;
        v131 = *(_QWORD *)(countAndFlagsBits + 32);
        swift_unknownObjectRetain(v131);
      }
      swift_bridgeObjectRelease(countAndFlagsBits);
      v132 = swift_getObjectType(v131);
      if ((DOCNode.areDiskPropertiesSupported.getter(v132) & 1) != 0)
      {
        v133 = v371;
        v134 = v372;
        v135 = v373;
        v388 = sub_1003CC71C(v371, 7, v372, v373);
        v137 = v136;
        sub_1003CE318(v133, 7uLL);
        v139 = v138;
        v140 = objc_allocWithZone((Class)NSAttributedString);
        v141 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v142 = swift_bridgeObjectRelease(v139).n128_u64[0];
        v143 = objc_msgSend(v140, "initWithString:", v141, v142, v360);

        sub_1003D3144(v388, v137, v143, 0, 0, 1, v381, v380, v379, v378);
        swift_bridgeObjectRelease(v137);

        v144 = swift_allocObject(&unk_1005E6DD8, 24, 7);
        swift_unknownObjectWeakInit(v144 + 16);
        v145 = (_QWORD *)swift_allocObject(&unk_1005E7008, 64, 7);
        v145[2] = v144;
        v145[3] = v133;
        v145[4] = 7;
        v145[5] = v134;
        v145[6] = v135;
        v145[7] = v130;
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        swift_retain();
        swift_retain();
        v147 = static OS_dispatch_queue.main.getter(v146);
        v388 = v147;
        v148 = sub_1003DB568;
        goto LABEL_128;
      }
      goto LABEL_133;
    case 8uLL:
      countAndFlagsBits = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v357 = v388;
        else
          v357 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v358 = _CocoaArrayWrapper.endIndex.getter(v357);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v130 = v383;
        if (v358 != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(countAndFlagsBits);
        if (!_CocoaArrayWrapper.endIndex.getter(v357))
          goto LABEL_302;
      }
      else
      {
        v130 = v383;
        if (*(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(v388);
      }
      if ((countAndFlagsBits & 0xC000000000000001) != 0)
      {
        v131 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
      }
      else
      {
        if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_321;
        v131 = *(_QWORD *)(countAndFlagsBits + 32);
        swift_unknownObjectRetain(v131);
      }
      swift_bridgeObjectRelease(countAndFlagsBits);
      v132 = swift_getObjectType(v131);
      if ((DOCNode.areDiskPropertiesSupported.getter(v132) & 1) != 0)
      {
        v183 = v371;
        v184 = v372;
        v185 = v373;
        v388 = sub_1003CC71C(v371, 8, v372, v373);
        v187 = v186;
        sub_1003CE318(v183, 8uLL);
        v189 = v188;
        v190 = objc_allocWithZone((Class)NSAttributedString);
        v191 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v192 = swift_bridgeObjectRelease(v189).n128_u64[0];
        v193 = objc_msgSend(v190, "initWithString:", v191, v192, v360);

        sub_1003D3144(v388, v187, v193, 0, 0, 1, v381, v380, v379, v378);
        swift_bridgeObjectRelease(v187);

        v144 = swift_allocObject(&unk_1005E6DD8, 24, 7);
        swift_unknownObjectWeakInit(v144 + 16);
        v145 = (_QWORD *)swift_allocObject(&unk_1005E6FE0, 64, 7);
        v145[2] = v144;
        v145[3] = v183;
        v145[4] = 8;
        v145[5] = v184;
        v145[6] = v185;
        v145[7] = v130;
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        swift_retain();
        swift_retain();
        v147 = static OS_dispatch_queue.main.getter(v194);
        v388 = v147;
        v148 = sub_1003DB514;
        goto LABEL_128;
      }
      goto LABEL_133;
    case 9uLL:
      countAndFlagsBits = v388;
      if ((unint64_t)v388 >> 62)
      {
        if (v388 < 0)
          v353 = v388;
        else
          v353 = v388 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v388);
        v354 = _CocoaArrayWrapper.endIndex.getter(v353);
        swift_bridgeObjectRelease(countAndFlagsBits);
        v130 = v383;
        if (v354 != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(countAndFlagsBits);
        if (!_CocoaArrayWrapper.endIndex.getter(v353))
        {
LABEL_302:
          swift_bridgeObjectRelease(countAndFlagsBits);
          goto LABEL_134;
        }
      }
      else
      {
        v130 = v383;
        if (*(_QWORD *)((v388 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          goto LABEL_134;
        swift_bridgeObjectRetain(v388);
      }
      if ((countAndFlagsBits & 0xC000000000000001) != 0)
      {
        v131 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, countAndFlagsBits);
      }
      else
      {
        if (!*(_QWORD *)((countAndFlagsBits & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_319;
        v131 = *(_QWORD *)(countAndFlagsBits + 32);
        swift_unknownObjectRetain(v131);
      }
      swift_bridgeObjectRelease(countAndFlagsBits);
      v132 = swift_getObjectType(v131);
      if ((DOCNode.areDiskPropertiesSupported.getter(v132) & 1) != 0)
      {
        v149 = v371;
        v150 = v372;
        v151 = v373;
        v388 = sub_1003CC71C(v371, 9, v372, v373);
        v153 = v152;
        sub_1003CE318(v149, 9uLL);
        v155 = v154;
        v156 = objc_allocWithZone((Class)NSAttributedString);
        v157 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v158 = swift_bridgeObjectRelease(v155).n128_u64[0];
        v159 = objc_msgSend(v156, "initWithString:", v157, v158, v360);

        sub_1003D3144(v388, v153, v159, 0, 0, 1, v381, v380, v379, v378);
        swift_bridgeObjectRelease(v153);

        v144 = swift_allocObject(&unk_1005E6DD8, 24, 7);
        swift_unknownObjectWeakInit(v144 + 16);
        v145 = (_QWORD *)swift_allocObject(&unk_1005E6FB8, 64, 7);
        v145[2] = v144;
        v145[3] = v149;
        v145[4] = 9;
        v145[5] = v150;
        v145[6] = v151;
        v145[7] = v130;
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        swift_retain();
        swift_retain();
        v147 = static OS_dispatch_queue.main.getter(v160);
        v388 = v147;
        v148 = sub_1003DB504;
LABEL_128:
        DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)(v147, v148, v145, v132);
        swift_release(v130);
        swift_unknownObjectRelease(v131);
        swift_release(v144);
        v195 = v145;
        goto LABEL_129;
      }
LABEL_133:
      swift_unknownObjectRelease(v131);
LABEL_134:
      sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v130);
      return;
    case 0xAuLL:
      sub_1003D3144(0, 0, 0, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v383);
      return;
    default:
      v196 = v373;
      swift_bridgeObjectRetain(v373);
      v197 = sub_1003CC71C(v371, (uint64_t)v48, v372, v196);
      v199 = v198;
      v200 = objc_allocWithZone((Class)NSAttributedString);
      v201 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v202 = swift_bridgeObjectRelease(v196).n128_u64[0];
      v388 = (uint64_t)objc_msgSend(v200, "initWithString:", v201, v202, v360);

      sub_1003D3144(v197, v199, (void *)v388, 0, 0, 0, v381, v380, v379, v378);
      swift_release(v383);
      swift_bridgeObjectRelease(v199);
      goto LABEL_132;
  }
}

void sub_1003DB104(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1005E6D60, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_1005E6D88, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1003DB260;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_10006657C;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10006655C;
  v8[3] = &unk_1005E6DA0;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = a1;
  swift_retain();
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 95, 962, 40, 1);
  swift_release(v3);
  swift_release(v4);
  if ((v2 & 1) != 0)
    __break(1u);
}

uint64_t sub_1003DB23C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DB264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003DB274(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;

  sub_1003D28C0(a1, a2, a3, a4, v4);
}

uint64_t sub_1003DB284()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1003DB2B8(uint64_t a1)
{
  uint64_t v1;

  sub_1003CC2E8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1003DB2CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003DB310()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1003DB33C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 >= 0xB)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_1003DB370(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 >= 0xB)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_1003DB3A4()
{
  uint64_t v0;

  sub_1003D3384(v0);
}

uint64_t sub_1003DB3AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DB3BC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad;
  if ((*(_BYTE *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad) & 1) != 0)
    v3 = 0;
  else
    v3 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) ^ 1;
  *(_BYTE *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad) = 0;
  if ((*(_BYTE *)(result + v2) & 1) == 0
    && ((v3 | *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing)) & 1) == 0)
  {
    result = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate, a2);
    if (result)
    {
      v4 = result;
      *(_BYTE *)(result + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) = 1;
      sub_10022304C();
      return swift_unknownObjectRelease(v4);
    }
  }
  return result;
}

const char *sub_1003DB460()
{
  return "levelOfDetail";
}

id sub_1003DB46C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "levelOfDetail");
  *a2 = result;
  return result;
}

id sub_1003DB49C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setLevelOfDetail:", *a1);
}

uint64_t sub_1003DB4B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003DB4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003CBB94(a1, a2, v2);
}

uint64_t sub_1003DB4DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DB504(uint64_t a1)
{
  return sub_1003DB574(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003CF404);
}

uint64_t sub_1003DB514(uint64_t a1)
{
  return sub_1003DB574(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003CF0AC);
}

uint64_t sub_1003DB524()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release(v0[2]);
  v1 = v0[4];
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[6]);
  }
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003DB568(uint64_t a1)
{
  return sub_1003DB574(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003CEF00);
}

uint64_t sub_1003DB574(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1003DB588()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release(v0[2]);
  v1 = v0[4];
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[6]);
  }
  return swift_deallocObject(v0, 56, 7);
}

void sub_1003DB5C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1003CEE6C(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48));
}

uint64_t sub_1003DB5F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DB600()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003DB610()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  v1 = v0[7];
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[9]);
  }
  return swift_deallocObject(v0, 80, 7);
}

void sub_1003DB664()
{
  uint64_t v0;

  sub_1003CECB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1003DB678()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1003DB6AC(uint64_t a1, char a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1003CEC28(a1, a2, a3, a4 & 0x1FF, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(NSObject **)(v4 + 32));
}

uint64_t sub_1003DB6C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003DB6D4()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release(v0[2]);
  v1 = v0[4];
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[6]);
  }
  swift_release(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1003DB720(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1003CE94C(a1, a2, a3, a4 & 0x1FF, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64));
}

uint64_t sub_1003DB758()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 40));
  v1 = *(_QWORD *)(v0 + 56);
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  }
  return swift_deallocObject(v0, 80, 7);
}

double sub_1003DB79C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003CE5AC(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1003DB7CC()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release(v0[3]);
  v1 = v0[5];
  if (v1 >= 0xB)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[7]);
  }
  return swift_deallocObject(v0, 64, 7);
}

double sub_1003DB808()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = (void (*)(uint64_t))v0[2];
  v2 = sub_1003CC71C(v0[4], v0[5], v0[6], v0[7]);
  v4 = v3;
  v1(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_1003DB870(uint64_t a1)
{
  uint64_t v1;

  return sub_1001B17A4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

id sub_1003DB88C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_1003D1714();
  return objc_msgSend(v1, "layoutBelowIfNeeded");
}

uint64_t sub_1003DB8B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DB8C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DOCLevelOfDetailButton.Metrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003DB904(void *a1)
{
  uint64_t v1;

  sub_1003CBFB4(a1, v1);
}

void sub_1003DB90C(uint64_t a1)
{
  uint64_t v1;

  sub_1003CC074(a1, v1);
}

uint64_t sub_1003DB920()
{
  return 8;
}

uint64_t sub_1003DB92C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003DB934(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1003DB948(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003DB954(uint64_t a1)
{
  return sub_1003DB870(a1) & 1;
}

void sub_1003DB9B0()
{
  void **v0;
  void *v1;
  Class isa;
  id v3;

  v1 = *v0;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setObject:forKey:", isa, v3);

}

uint64_t sub_1003DBA24()
{
  void **v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "stringArrayForKey:", v2);

  if (!v3)
    return 0;
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

  return v4;
}

uint64_t sub_1003DBA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v5;
  NSString v6;
  id v7;
  uint64_t v8;

  v5 = *v3;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "doc_roleSpecificKeyForKey:configuration:", v6, a3);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  return v8;
}

void sub_1003DBB08(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  char v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = sub_1003DC2B0(1);
  swift_bridgeObjectRetain(v4);
  v5 = sub_1003DC2B0(0);
  swift_bridgeObjectRetain(v5);
  if (objc_msgSend(a1, "isAvailableSystemWide"))
  {
    v6 = objc_msgSend(a1, "identifier", swift_bridgeObjectRelease(v4).n128_f64[0]);
    v7 = sub_1000DFACC((uint64_t)v6, (uint64_t)v5);
    swift_bridgeObjectRelease(v5);

    if ((v7 & 1) != 0)
      goto LABEL_13;
    v8 = objc_msgSend(a1, "identifier");
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      v5 = sub_1001541D0(0, v5[2] + 1, 1, v5);
    v10 = v5[2];
    v9 = v5[3];
    v11 = v10 + 1;
    if (v10 >= v9 >> 1)
    {
      v12 = sub_1001541D0((_QWORD *)(v9 > 1), v10 + 1, 1, v5);
      v5 = v12;
    }
    else
    {
      v12 = v5;
    }
  }
  else
  {
    v13 = objc_msgSend(a1, "identifier", swift_bridgeObjectRelease(v5).n128_f64[0]);
    v14 = sub_1000DFACC((uint64_t)v13, (uint64_t)v4);
    swift_bridgeObjectRelease(v4);

    if ((v14 & 1) != 0)
      goto LABEL_13;
    v8 = objc_msgSend(a1, "identifier");
    if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
      v4 = sub_1001541D0(0, v4[2] + 1, 1, v4);
    v10 = v4[2];
    v15 = v4[3];
    v11 = v10 + 1;
    if (v10 >= v15 >> 1)
    {
      v12 = sub_1001541D0((_QWORD *)(v15 > 1), v10 + 1, 1, v4);
      v4 = v12;
    }
    else
    {
      v12 = v4;
    }
  }
  v12[2] = v11;
  v12[v10 + 4] = v8;
LABEL_13:
  sub_1003DBE60();
  v17 = v16;
  sub_1000271D4((uint64_t)(v2 + 4), (uint64_t)v30, &qword_100648C78);
  v18 = v31;
  if (!v31)
  {
    sub_10000CB4C((uint64_t)v30, &qword_100648C78);
LABEL_19:
    sub_1003DC0C8(1, (uint64_t)v4);
    goto LABEL_20;
  }
  v19 = v32;
  sub_10007E7A0(v30, v31);
  v21 = v2[2];
  v20 = (_QWORD *)v2[3];
  v22 = (*(uint64_t (**)(uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 24))(v21, v20, v2[9], v18, v19);
  v24 = v23;
  sub_100068588(v30);
  if (v22 == v21 && v24 == v20)
  {
    swift_bridgeObjectRelease(v4);
    v4 = v20;
    goto LABEL_20;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v21, v20, 0);
  swift_bridgeObjectRelease(v24);
  if ((v25 & 1) == 0)
    goto LABEL_19;
LABEL_20:
  swift_bridgeObjectRelease(v4);
  sub_1003DC0C8(0, (uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  sub_1003DBE60();
  v27 = v26;
  v28 = sub_1003DC690(v26, v17);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v17);
  if ((v28 & 1) == 0)
  {
    v29 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
    objc_msgSend(v29, "postNotificationName:object:", v2[11], 0);

  }
}

void sub_1003DBE60()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _BYTE v14[56];

  v0 = sub_1003DC2B0(1);
  v1 = (void *)sub_1000D016C((uint64_t)v0);
  swift_bridgeObjectRelease(v0);
  v2 = sub_1003DC2B0(0);
  v3 = sub_1000D016C((uint64_t)v2);
  swift_bridgeObjectRelease(v2);
  v4 = sub_10006922C(&qword_10064FE20);
  inited = swift_initStackObject(v4, v14);
  *(_OWORD *)(inited + 16) = xmmword_1004D9880;
  *(_QWORD *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  v6 = (void *)DOCDocumentSourceIdentifierLocal;
  v7 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  *(_QWORD *)(inited + 40) = DOCDocumentSourceIdentifierLocal;
  *(_QWORD *)(inited + 48) = v7;
  v8 = v6;
  v9 = v7;
  sub_1003F98AC(inited);
  v11 = v10;
  swift_setDeallocating(inited);
  type metadata accessor for DOCDocumentSourceIdentifier(0);
  swift_arrayDestroy(inited + 32, 3, v12);
  sub_1003DBF60(v3, v1);
  sub_1003DBF60(v11, v13);
}

void sub_1003DBF60(uint64_t a1, void *a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14[2];

  v3 = 0;
  v14[1] = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1000C8C8C(v14, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10));

  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1003DC0C8(char a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t result;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  if ((a1 & 1) != 0)
  {
    sub_1000271D4((uint64_t)(v2 + 4), (uint64_t)v21, &qword_100648C78);
    v7 = v22;
    if (!v22)
    {
      result = sub_10000CB4C((uint64_t)v21, &qword_100648C78);
      __break(1u);
      return result;
    }
    v8 = v23;
    sub_10007E7A0(v21, v22);
    v6 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 24))(v2[2], v2[3], v2[9], v7, v8);
    v5 = v9;
    sub_100068588(v21);
  }
  else
  {
    v6 = v2[2];
    v5 = v3[3];
    swift_bridgeObjectRetain(v5);
  }
  sub_1000271D4((uint64_t)(v3 + 4), (uint64_t)v21, &qword_100648C78);
  v10 = v22;
  if (v22)
  {
    v11 = v23;
    sub_10007E7A0(v21, v22);
    v12 = *(_QWORD *)(a2 + 16);
    if (v12)
    {
      sub_100081774(0, v12, 0);
      v13 = (_QWORD *)(a2 + 32);
      do
      {
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v13);
        v16 = v15;
        v18 = _swiftEmptyArrayStorage[2];
        v17 = _swiftEmptyArrayStorage[3];
        if (v18 >= v17 >> 1)
          sub_100081774(v17 > 1, v18 + 1, 1);
        _swiftEmptyArrayStorage[2] = v18 + 1;
        v19 = &_swiftEmptyArrayStorage[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
        ++v13;
        --v12;
      }
      while (v12);
    }
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(_swiftEmptyArrayStorage, v6, v5, v10, v11);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v5);
    return sub_100068588(v21);
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    return sub_10000CB4C((uint64_t)v21, &qword_100648C78);
  }
}

_QWORD *sub_1003DC2B0(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  NSString v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *result;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  if ((a1 & 1) == 0)
  {
    v3 = v1[2];
    v4 = v2[3];
    swift_bridgeObjectRetain(v4);
    goto LABEL_5;
  }
  sub_1000271D4((uint64_t)(v1 + 4), (uint64_t)v19, &qword_100648C78);
  v5 = v20;
  if (v20)
  {
    v6 = v21;
    sub_10007E7A0(v19, v20);
    v3 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 24))(v1[2], v1[3], v1[9], v5, v6);
    v4 = v7;
    sub_100068588(v19);
LABEL_5:
    sub_1000271D4((uint64_t)(v2 + 4), (uint64_t)v19, &qword_100648C78);
    v8 = v20;
    if (v20)
    {
      v9 = v21;
      sub_10007E7A0(v19, v20);
      v10 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v4, v8, v9);
      swift_bridgeObjectRelease(v4);
      sub_100068588(v19);
      if (v10)
      {
        v11 = v10[2];
        if (v11)
          goto LABEL_8;
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v4);
      sub_10000CB4C((uint64_t)v19, &qword_100648C78);
    }
    swift_bridgeObjectRelease(0);
    v10 = _swiftEmptyArrayStorage;
    v11 = _swiftEmptyArrayStorage[2];
    if (v11)
    {
LABEL_8:
      v19[0] = _swiftEmptyArrayStorage;
      sub_100155080(0, v11, 0);
      v12 = v19[0];
      v13 = v10 + 5;
      do
      {
        v14 = *v13;
        swift_bridgeObjectRetain(*v13);
        v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        v19[0] = v12;
        v17 = *(_QWORD *)(v12 + 16);
        v16 = *(_QWORD *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_100155080(v16 > 1, v17 + 1, 1);
          v12 = v19[0];
        }
        v13 += 2;
        *(_QWORD *)(v12 + 16) = v17 + 1;
        *(_QWORD *)(v12 + 8 * v17 + 32) = v15;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease(v10);
      return (_QWORD *)v12;
    }
LABEL_15:
    swift_bridgeObjectRelease(v10);
    return _swiftEmptyArrayStorage;
  }
  result = (_QWORD *)sub_10000CB4C((uint64_t)v19, &qword_100648C78);
  __break(1u);
  return result;
}

uint64_t sub_1003DC4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    swift_beginAccess(result + 80, &v12, 0, 0);
    v5 = *(_QWORD *)(v4 + 80);
    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v11 = *(_QWORD *)(v4 + 80);
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v4 + 80), 2);
      result = _CocoaArrayWrapper.endIndex.getter(v11);
      v6 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n(*(_QWORD *)(v4 + 80), 2);
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return result;
        }
        v7 = 0;
        do
        {
          if ((v5 & 0xC000000000000001) != 0)
          {
            v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
          }
          else
          {
            v8 = *(_QWORD *)(v5 + 8 * v7 + 32);
            swift_retain(v8);
          }
          ++v7;
          v10 = *(void (**)(uint64_t))(v8 + 16);
          v9 = *(_QWORD *)(v8 + 24);
          swift_retain(v9);
          v10(v4);
          swift_release(v8);
          swift_release(v9);
        }
        while (v6 != v7);
      }
    }
    swift_bridgeObjectRelease_n(v5, 2);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1003DC608()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_10000CB4C(v0 + 32, &qword_100648C78);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  sub_10000CB4C(v0 + 96, &qword_100642730);
  return swift_deallocClassInstance(v0, 128, 7);
}

uint64_t sub_1003DC664()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DC688(uint64_t a1)
{
  uint64_t v1;

  return sub_1003DC4C4(a1, v1);
}

uint64_t sub_1003DC690(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  _QWORD v43[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v39 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v40 = (unint64_t)(v4 + 63) >> 6;
  v42 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v41 = v3;
      v8 = v7 | (v3 << 6);
      goto LABEL_27;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v9 >= v40)
      return 1;
    v10 = *(_QWORD *)(v39 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v40)
        return 1;
      v10 = *(_QWORD *)(v39 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v40)
          return 1;
        v10 = *(_QWORD *)(v39 + 8 * v11);
        if (!v10)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v40)
            return 1;
          v10 = *(_QWORD *)(v39 + 8 * v11);
          if (!v10)
            break;
        }
      }
    }
LABEL_26:
    v6 = (v10 - 1) & v10;
    v41 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_27:
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 48) + 8 * v8);
    v15 = *(_QWORD *)(a2 + 40);
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;
    Hasher.init(_seed:)(v43, v15);
    v19 = v14;
    String.hash(into:)(v43, v16, v18);
    v20 = Hasher._finalize()();
    swift_bridgeObjectRelease(v18);
    v21 = -1 << *(_BYTE *)(a2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v42 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_42;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v22));
    v25 = v24;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    if (v23 == v26 && v25 == v27)
    {
LABEL_7:
      swift_bridgeObjectRelease_n(v25, 2);
    }
    else
    {
      v29 = v27;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v26, v27, 0);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v29);
      if ((v30 & 1) == 0)
      {
        v31 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v31;
          if (((*(_QWORD *)(v42 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v22));
          v25 = v33;
          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          if (v32 == v34 && v25 == v35)
            goto LABEL_7;
          v37 = v35;
          v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v25, v34, v35, 0);
          swift_bridgeObjectRelease(v25);
          swift_bridgeObjectRelease(v37);
          if ((v38 & 1) != 0)
            goto LABEL_8;
        }
LABEL_42:

        return 0;
      }
    }
LABEL_8:

    result = v13;
    v3 = v41;
  }
  v12 = v3 + 5;
  if (v3 + 5 >= v40)
    return 1;
  v10 = *(_QWORD *)(v39 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v40)
      return 1;
    v10 = *(_QWORD *)(v39 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_26;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1003DC9BC@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = objc_msgSend(v1, "goToFileProviderCandidateSource");
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v9, v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_10007EBDC((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = type metadata accessor for DOCFileProviderSourcesCandidateSource();
    result = swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v5, 6);
    if ((result & 1) != 0)
    {
      v7 = v8;
      a1[3] = v5;
      a1[4] = &off_1005EC020;
      *a1 = v7;
      return result;
    }
  }
  else
  {
    sub_10007EB54((uint64_t)v10);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x8000000100531160, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, 31, 0);
  __break(1u);
  return result;
}

void sub_1003DCAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  v2 = a2;
  v6 = sub_10001CCD0(0);
  if ((v7 & 1) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    if (v3 < 0)
      v19 = v3;
    else
      v19 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v3, 2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (v8)
      goto LABEL_5;
LABEL_23:
    swift_bridgeObjectRelease(v3);
    v18 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
  v4 = _swiftEmptyArrayStorage;
  v32[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
    goto LABEL_19;
  v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v3, 2);
  if (!v8)
    goto LABEL_23;
LABEL_5:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v10 = *(id *)(v3 + 8 * i + 32);
    v11 = v10;
    v12 = type metadata accessor for DOCFileProviderSource();
    v13 = swift_dynamicCastClass(v11, v12);
    if (v13)
    {
      v14 = v13;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v16 = *(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized Array._endMutation()(v17);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v3);
  v18 = v32[0];
LABEL_24:
  swift_bridgeObjectRelease(v3);
  v32[0] = v4;
  if (!((unint64_t)v18 >> 62))
  {
    v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_26;
LABEL_40:
    swift_bridgeObjectRelease(v18);
    v27 = _swiftEmptyArrayStorage;
LABEL_41:
    v29 = swift_allocObject(&unk_1005E73C8, 32, 7);
    *(_QWORD *)(v29 + 16) = v2;
    *(_QWORD *)(v29 + 24) = v27;
    v32[4] = sub_1003DDC00;
    v33 = v29;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 1107296256;
    v32[2] = sub_10004A82C;
    v32[3] = &unk_1005E73E0;
    v30 = _Block_copy(v32);
    v31 = v33;
    swift_retain();
    swift_release(v31);
    DOCRunInMainThread(v30);
    _Block_release(v30);
    return;
  }
  if (v18 < 0)
    v28 = v18;
  else
    v28 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v18);
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v18);
  if (!v20)
    goto LABEL_40;
LABEL_26:
  if (v20 >= 1)
  {
    for (j = 0; j != v20; ++j)
    {
      if ((v18 & 0xC000000000000001) != 0)
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v18);
      else
        v24 = *(id *)(v18 + 8 * j + 32);
      v25 = v24;
      v26 = (unint64_t)objc_msgSend(v24, "status", v32[0]);
      if ((v26 | 2) == 2)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v22 = *(_QWORD *)(v32[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
        v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v25);
        specialized ContiguousArray._endMutation()(v23);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease(v18);
    v27 = (_QWORD *)v32[0];
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
}

void sub_1003DCDEC(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  Class isa;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "setCurrentGoToFileProviderSource:", 0);
    type metadata accessor for DOCFileProviderSource();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setGoToFileProviderSources:", isa);

    sub_1003DCE94();
    objc_msgSend(v3, "setSourceOrderObserver:", 0);

  }
}

void sub_1003DCE94()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  char *v7;
  void *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  _BYTE *v41;
  id v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t i;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[5];
  _QWORD v57[5];
  char v58[24];

  v1 = objc_msgSend(v0, "goToFileProviderSources");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for DOCFileProviderSource();
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

    v5 = objc_msgSend(v0, "traitCollection");
    v6 = objc_msgSend(v5, "horizontalSizeClass");

    if (v6 != (id)2
      || (v7 = (char *)objc_msgSend(v0, "effectiveBrowserViewController")) == 0)
    {
      swift_bridgeObjectRelease(v4);
      return;
    }
    v8 = v7;
    v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v58, 0, 0);
    v10 = *v9;
    if (!v10
      || (v11 = type metadata accessor for DOCItemCollectionViewController(0),
          (v12 = swift_dynamicCastClass(v10, v11)) == 0))
    {
      swift_bridgeObjectRelease(v4);

      return;
    }
    v13 = v12;
    v14 = v10;

    v15 = (_QWORD *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
    v16 = *(void **)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
    if (!v16)
    {

      swift_bridgeObjectRelease(v4);
      return;
    }
    v17 = v16;
    v18 = objc_msgSend(v0, "configuration");
    v19 = type metadata accessor for DOCFileProviderSourcesCandidateSource();
    v20 = swift_allocObject(v19, 33, 7);
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v4;
    *(_BYTE *)(v20 + 32) = 0;
    objc_msgSend(v0, "setGoToFileProviderCandidateSource:", v20, swift_bridgeObjectRetain(v4).n128_f64[0]);
    v21 = objc_msgSend(v0, "configuration", swift_release(v20).n128_f64[0]);
    v22 = swift_allocObject(v19, 33, 7);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v4;
    *(_BYTE *)(v22 + 32) = 1;
    objc_msgSend(v0, "setGoToHiddenFileProviderCandidateSource:", v22);
    objc_msgSend(v0, "setCurrentGoToFileProviderSource:", *v15, swift_release(v22).n128_f64[0]);
    v56[3] = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    v56[4] = &off_1005EBFF8;
    v56[0] = v17;
    v23 = v17;
    sub_1003DD4B0((uint64_t)v56, v57);
    sub_100068588(v56);
    v24 = objc_msgSend(v0, "configuration");
    v25 = objc_msgSend((id)objc_opt_self(DOCFavoritesManager), "sharedManager");
    v26 = type metadata accessor for DOCFavoritesCandidateSource();
    v27 = swift_allocObject(v26, 32, 7);
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v25;
    v28 = objc_msgSend(v0, "view");
    if (!v28)
      goto LABEL_26;
    v29 = v28;
    v55 = v14;
    v30 = objc_msgSend(v28, "effectiveUserInterfaceLayoutDirection");

    v31 = type metadata accessor for DOCRecentLocationsCandidateSource();
    v32 = (_QWORD *)swift_allocObject(v31, 48, 7);
    v33 = v0;
    v34 = sub_1003F2FD8((uint64_t)_swiftEmptyArrayStorage);
    v32[2] = v30;
    v32[3] = v34;
    v32[5] = &off_1005E73A8;
    swift_unknownObjectUnownedInit(v32 + 4, v33);

    v35 = sub_10006922C(&qword_100652E98);
    v36 = swift_allocObject(v35, 192, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1004D9B50;
    *(_QWORD *)(v36 + 56) = v31;
    *(_QWORD *)(v36 + 64) = &off_1005EC030;
    *(_QWORD *)(v36 + 32) = v32;
    swift_retain();
    sub_1003DC9BC((_QWORD *)(v36 + 72));
    sub_100092328((uint64_t)v57, v36 + 112);
    *(_QWORD *)(v36 + 176) = v26;
    *(_QWORD *)(v36 + 184) = &off_1005EC010;
    *(_QWORD *)(v36 + 152) = v27;
    v37 = type metadata accessor for DOCCompositionalCandidateSource();
    v38 = swift_allocObject(v37, 32, 7);
    v39 = (void *)objc_opt_self(NSMapTable);
    v40 = objc_msgSend(v39, "mapTableWithKeyOptions:valueOptions:", 0, 0, swift_retain().n128_f64[0]);
    *(_QWORD *)(v38 + 16) = v36;
    *(_QWORD *)(v38 + 24) = v40;
    v41 = objc_allocWithZone((Class)type metadata accessor for DOCGoToViewController(0));
    v42 = v23;
    swift_retain();
    v53 = v42;
    v43 = (char *)sub_1003DDC08((uint64_t)v42, v38, v41);
    v44 = &v43[OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate];
    *((_QWORD *)v44 + 1) = &off_1005E7378;
    swift_unknownObjectWeakAssign(v44, v33);
    objc_msgSend(v43, "setModalPresentationStyle:", 4);
    objc_msgSend(v43, "setTransitioningDelegate:", v33);
    v45 = objc_msgSend((id)objc_opt_self(DOCKeyCommandController), "dismissingKeyCommandsWithAction:", "performDismiss:");
    v46 = sub_10004F2F0(0, &qword_1006445C0, UIKeyCommand_ptr);
    v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

    v54 = v27;
    if ((unint64_t)v47 >> 62)
    {
      if (v47 < 0)
        v52 = v47;
      else
        v52 = v47 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v47);
      v48 = _CocoaArrayWrapper.endIndex.getter(v52);
      if (v48)
        goto LABEL_10;
    }
    else
    {
      v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v47);
      if (v48)
      {
LABEL_10:
        if (v48 >= 1)
        {
          for (i = 0; i != v48; ++i)
          {
            if ((v47 & 0xC000000000000001) != 0)
              v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v47);
            else
              v50 = *(id *)(v47 + 8 * i + 32);
            v51 = v50;
            objc_msgSend(v43, "addKeyCommand:", v50, v53, v54);

          }
          goto LABEL_23;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        return;
      }
    }
LABEL_23:
    swift_bridgeObjectRelease_n(v47, 2);
    objc_msgSend(v33, "presentViewController:animated:completion:", v43, 1, 0);

    swift_release(v32);
    swift_release(v54);
    swift_release(v38);

    sub_100068588(v57);
  }
}

void sub_1003DD4B0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  int v14;
  id v15;
  objc_class *v16;
  id v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  uint64_t v25;

  v3 = v2;
  v6 = objc_msgSend(v3, "currentGoToFileProviderSource");
  if (!v6)
  {
    v19 = 0xD000000000000032;
    v22 = 145;
    v20 = 0x80000001005311A0;
LABEL_10:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v19, v20, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, v22, 0);
    goto LABEL_11;
  }
  v7 = v6;
  sub_100092328(a1, (uint64_t)&v24);
  v8 = sub_10006922C(&qword_100655680);
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  if (!swift_dynamicCast(&v23, &v24, v8, v9, 6))
  {
    v22 = 148;
    v20 = 0x80000001005311E0;
    v19 = 0xD00000000000001BLL;
    goto LABEL_10;
  }
  v10 = v23;
  v11 = v7;
  v12 = objc_msgSend(v3, "configuration");
  v13 = objc_msgSend(v3, "configuration");
  v3 = objc_msgSend(v13, "browserViewContext");

  if (!v3)
  {
    v14 = 2;
LABEL_7:
    v15 = v10;
    sub_100051C68(v11, v12, v14, v10, 2, 0, 0, 0, (uint64_t)&v24, 0);
    v16 = (objc_class *)type metadata accessor for DOCItemCollectionCandidateSource(0);
    v17 = objc_allocWithZone(v16);
    v18 = sub_10043A734(&v24);
    a2[3] = v16;
    a2[4] = &off_1005EC078;
    sub_100029224((uint64_t)&v24);

    *a2 = v18;
    return;
  }
  if (v3 == (id)1)
  {
    v14 = 3;
    goto LABEL_7;
  }
  while (v3 == (id)2)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010051A420, "Files/DOCItemCollectionConfiguration.swift", 42, 2, 54, 0);
LABEL_11:
    __break(1u);
  }
  type metadata accessor for DOCBrowserViewContext(0);
  v25 = v21;
  *(_QWORD *)&v24 = v3;
  doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(&v24);
  __break(1u);
}

void sub_1003DD74C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  _BYTE v16[40];

  v3 = v2;
  sub_100092328(a2, (uint64_t)v16);
  v5 = sub_10006922C(&qword_100655680);
  v6 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v7 = swift_dynamicCast(&v15, v16, v5, v6, 6);
  if ((_DWORD)v7)
  {
    v8 = v15;
    v9 = *(id *)DOCLog.UI.unsafeMutableAddressor(v7);
    v10 = static os_log_type_t.debug.getter(v9);
    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = sub_1003DE348();
    *(_QWORD *)(v12 + 32) = v8;
    v13 = v8;
    os_log(_:dso:log:type:_:)("Go To: did pick location: %@", 28, 2, &_mh_execute_header, v9, v10, v12);

    objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0, swift_bridgeObjectRelease(v12).n128_f64[0]);
    type metadata accessor for DOCRecentLocationsCandidateSource();
    v14 = objc_msgSend(v3, "hierarchyController", sub_100435A48(v13));
    sub_1001D4F4C(v13, v13, 0, 1, 0, 0, 0);

  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001005311E0, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, 216, 0);
    __break(1u);
  }
}

void sub_1003DD930(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  sub_1003DD4B0(a1, a2);
}

uint64_t sub_1003DD938(uint64_t a1, _QWORD *a2)
{
  return sub_1003DE3A0(a2);
}

void sub_1003DD940(uint64_t a1, uint64_t a2)
{
  sub_1003DDFDC(a2);
}

id sub_1003DD94C()
{
  id *v0;
  id result;
  _BYTE v2[24];

  v0 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
  swift_beginAccess(v0, v2, 0, 0);
  result = *v0;
  if (*v0)
    return objc_msgSend(result, "removeObjectForKey:", DOCUserDefaultsKeyMostRecentGoToLocations);
  return result;
}

id DOCFullDocumentManagerViewController.animationController(forPresented:presenting:source:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for DOCModalBlurViewControllerTransition());
  return sub_1003C4F48(0);
}

id DOCFullDocumentManagerViewController.animationController(forDismissed:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for DOCModalBlurViewControllerTransition());
  return sub_1003C4F48(1);
}

uint64_t sub_1003DDAF4(uint64_t a1, void *a2)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v4 = objc_msgSend(v2, "goToFileProviderSources");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for DOCFileProviderSource();
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    v8 = a2;
    LOBYTE(v5) = sub_1003DDE5C(v7, (uint64_t)v8);
    swift_bridgeObjectRelease(v7);

    return v5 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002CLL, 0x8000000100531230, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, 250, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003DDBD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003DDC00()
{
  uint64_t v0;

  sub_1003DCDEC(*(_QWORD *)(v0 + 16));
}

id sub_1003DDC08(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v17;
  objc_super v19;
  _BYTE v20[24];
  _BYTE v21[40];
  _QWORD v22[5];
  _QWORD v23[5];

  v23[3] = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v23[4] = &off_1005EBFF8;
  v23[0] = a1;
  v22[3] = type metadata accessor for DOCCompositionalCandidateSource();
  v22[4] = &off_1005D4FD8;
  v22[0] = a2;
  v6 = &a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_suggestionsTableViewWidthConstraint] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView] = 0;
  a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialSuggestionsToken] = 1;
  v7 = &a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource];
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_scrollViewDidScrollObservation] = 0;
  v8 = (uint64_t)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation];
  *(_QWORD *)(v8 + 32) = 0;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  v9 = a3;
  UUID.init()(v9);
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___inputField] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___goButton] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___separatorView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___noResultsView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___suggestionsTableViewController] = 0;
  v10 = &v9[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics];
  __asm
  {
    FMOV            V0.2D, #16.0
    FMOV            V1.2D, #12.0
  }
  *(_OWORD *)v10 = _Q0;
  *((_OWORD *)v10 + 1) = _Q1;
  *((_QWORD *)v10 + 4) = 0;
  v10[40] = 1;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  v10[80] = 1;
  *((_QWORD *)v10 + 12) = 0;
  *((_QWORD *)v10 + 13) = 0;
  *((_QWORD *)v10 + 11) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___closeBox] = 1;
  sub_100092328((uint64_t)v23, (uint64_t)v21);
  swift_beginAccess(v8, v20, 33, 0);
  sub_1003DDE14((uint64_t)v21, v8);
  swift_endAccess(v20);
  sub_100092328((uint64_t)v22, (uint64_t)&v9[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialCandidateSource]);

  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for DOCGoToViewController(0);
  v17 = objc_msgSendSuper2(&v19, "init");
  sub_100068588(v22);
  sub_100068588(v23);
  return v17;
}

uint64_t sub_1003DDE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100649598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DDE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
      if (v9 == v12 && v11 == v13)
      {

        swift_bridgeObjectRelease_n(v11, 2);
        v16 = 1;
        goto LABEL_22;
      }
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);

      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) == 0)
      {
        ++v4;
        if (v7 != v3)
          continue;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v16 = 0;
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return v16 & 1;
}

void sub_1003DDFDC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  void *v27;
  id v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  _BYTE v33[40];

  sub_100092328(a1, (uint64_t)v33);
  v2 = sub_10006922C(&qword_100655680);
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v4 = swift_dynamicCast(&v32, v33, v2, v3, 6);
  if ((_DWORD)v4)
  {
    v5 = v32;
    v6 = *(id *)DOCLog.UI.unsafeMutableAddressor(v4);
    v7 = static os_log_type_t.debug.getter(v6);
    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 72, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v9 + 56) = v3;
    *(_QWORD *)(v9 + 64) = sub_1003DE348();
    *(_QWORD *)(v9 + 32) = v5;
    v10 = v5;
    os_log(_:dso:log:type:_:)("Go To: did append location: %@", 30, 2, &_mh_execute_header, v6, v7, v9);

    v11 = objc_msgSend(v1, "currentGoToFileProviderSource", swift_bridgeObjectRelease(v9).n128_f64[0]);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v1, "goToFileProviderSources");
      if (v13)
      {
        v14 = v13;
        v15 = type metadata accessor for DOCFileProviderSource();
        v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

        v17 = objc_msgSend(v10, "sourceIdentifier");
        v18 = objc_msgSend(v12, "identifier");
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        v24 = v22;
        if (v19 == v23 && v21 == v22)
        {

          swift_bridgeObjectRelease_n(v21, 2);
LABEL_8:
          swift_bridgeObjectRelease(v16);
LABEL_11:

          return;
        }
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);

        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          goto LABEL_8;
        v26 = v10;
        v27 = sub_10031634C(v16, v26);
        swift_bridgeObjectRelease(v16);

        if (v27)
        {
          v28 = v27;
          objc_msgSend(v1, "setCurrentGoToFileProviderSource:", v28);

          goto LABEL_11;
        }
        v29 = 0xD00000000000002BLL;
        v31 = 207;
        v30 = "Unable to find source for source identifier";
      }
      else
      {
        v29 = 0xD00000000000002CLL;
        v31 = 197;
        v30 = "goToFileProviderSources should be set by now";
      }
    }
    else
    {
      v29 = 0xD000000000000032;
      v31 = 194;
      v30 = "currentGoToFileProviderSource should be set by now";
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v29, (unint64_t)(v30 - 32) | 0x8000000000000000, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, v31, 0);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001005311E0, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, 188, 0);
  }
  __break(1u);
}

unint64_t sub_1003DE348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100647578;
  if (!qword_100647578)
  {
    v1 = sub_10004F2F0(255, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100647578);
  }
  return result;
}

uint64_t sub_1003DE3A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  id v15;
  id v16[2];
  _QWORD v17[5];

  v2 = a1[3];
  v3 = a1[4];
  sub_10007E7A0(a1, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 24))(v17, v2, v3);
  v4 = sub_10006922C(&qword_100655680);
  v5 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  if (swift_dynamicCast(v16, v17, v4, v5, 6))
  {
    v6 = v16[0];
    v7 = objc_msgSend(v16[0], "fileProviderItem");
    if (v7)
    {
      v8 = v7;
      if (qword_100641188 != -1)
        swift_once(&qword_100641188, sub_1004674AC);
      v9 = sub_1004685D0(v8);

    }
    else
    {
      sub_100092328((uint64_t)a1, (uint64_t)v17);
      v11 = sub_10006922C((uint64_t *)&unk_100644420);
      if (!swift_dynamicCast(v16, v17, v11, &type metadata for DOCFileProviderSourceGoToCandidate, 6))
      {

        return 0;
      }
      v8 = v16[0];
      v12 = *(void **)((char *)v16[0] + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v12)
      {
        v13 = v16[0];
        if ((objc_msgSend(v12, "isiCloudDriveProvider") & 1) != 0)
        {
          v14 = String._bridgeToObjectiveC()();
          v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

          if (v9)
          {

            return (uint64_t)v9;
          }
        }
      }
      else
      {
        v15 = v16[0];
      }
      v9 = objc_msgSend(v8, "iconPreferingSymbolImages");

    }
    return (uint64_t)v9;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001005311E0, "Files/DOCFullDocumentManagerViewController+GoToLocation.swift", 61, 2, 172, 0);
  __break(1u);
  return result;
}

void sub_1003DE5E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  os_log_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  os_log_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v5)
  {
    v6 = Logger.UI.unsafeMutableAddressor(v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
    v7 = v0;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      v25 = swift_slowAlloc(32, -1);
      v27 = v25;
      *(_DWORD *)v10 = 136315394;
      v23 = v8;
      v26 = sub_1000544FC(0xD00000000000002ALL, 0x80000001005314E0, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      *(_WORD *)(v10 + 12) = 2112;
      v26 = (uint64_t)v7;
      v11 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      v12 = v24;
      *v24 = v7;

      v13 = v23;
      _os_log_impl((void *)&_mh_execute_header, v23, v9, "[PROTECTED APPS] %s: self: %@", (uint8_t *)v10, 0x16u);
      v14 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v12, 1, v14);
      swift_slowDealloc(v12, -1, -1);
      v15 = v25;
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v16 = (void *)objc_opt_self(NSNotificationCenter);
    v17 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v17, "addObserver:selector:name:object:", v7, "appProtectionStatusChangedWithNotification:", DOCAppProtectionStatusDidChangeNotification, 0);

    v18 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v18, "addObserver:selector:name:object:", v7, "setProtectedStateToLockedForDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);

    v19 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v19, "addObserver:selector:name:object:", v7, "setProtectedStateToLockedForDidEnterBackground", NSExtensionHostDidEnterBackgroundNotification, 0);

    v20 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v20, "addObserver:selector:name:object:", v7, "updateProtectedStateForDidEnterForeground", UIApplicationWillEnterForegroundNotification, 0);

    v21 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v21, "addObserver:selector:name:object:", v7, "updateProtectedStateForDidEnterForeground", NSExtensionHostWillEnterForegroundNotification, 0);

  }
}

void sub_1003DE994()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  _BYTE *v11;
  NSObject *v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  _BOOL4 v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  char v34;
  _BYTE *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v45 - v7;
  v9 = Logger.UI.unsafeMutableAddressor(v6);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v10(v8, v9, v1);
  v11 = v0;
  v12 = Logger.logObject.getter(v11);
  LODWORD(v50) = static os_log_type_t.debug.getter();
  v13 = os_log_type_enabled(v12, (os_log_type_t)v50);
  v51 = v5;
  v52 = v1;
  if (v13)
  {
    v47 = v2;
    v48 = v10;
    v49 = v9;
    v14 = swift_slowAlloc(44, -1);
    v45 = (_QWORD *)swift_slowAlloc(8, -1);
    v46 = swift_slowAlloc(64, -1);
    v54 = v46;
    *(_DWORD *)v14 = 136316162;
    v53 = sub_1000544FC(0xD000000000000032, 0x8000000100531460, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    *(_WORD *)(v14 + 12) = 1024;
    v15 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    LODWORD(v53) = v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);
    *(_WORD *)(v14 + 18) = 1024;
    if (objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    {
      v16 = v12;
      v17 = v11[v15] == 1
         && (v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
      v9 = v49;
    }
    else
    {
      v17 = 0;
      v9 = v49;
      v16 = v12;
    }
    LODWORD(v53) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);
    *(_WORD *)(v14 + 24) = 2080;
    v19 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v19)
    {

      __break(1u);
      return;
    }
    v20 = v19 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v20 + 16) & 1) != 0)
      v21 = *(_QWORD *)(*(_QWORD *)v20 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v21 = *(_QWORD *)(v20 + 8);
    v53 = swift_unknownObjectRetain(v21);
    v22 = sub_10006922C(&qword_100652EB0);
    v23 = String.init<A>(describing:)(&v53, v22);
    v25 = v24;
    v53 = sub_1000544FC(v23, v24, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);

    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v14 + 34) = 2112;
    v53 = (uint64_t)v11;
    v26 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    v27 = v45;
    *v45 = v11;

    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v50, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v14, 0x2Cu);
    v28 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v27, 1, v28);
    swift_slowDealloc(v27, -1, -1);
    v29 = v46;
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v18 = *(void (**)(char *, uint64_t))(v47 + 8);
    v1 = v52;
    v18(v8, v52);
    v5 = v51;
    v10 = v48;
  }
  else
  {

    v18 = *(void (**)(char *, uint64_t))(v2 + 8);
    v18(v8, v1);
  }
  v50 = v18;
  v30 = (void *)objc_opt_self(DOCFeature);
  if (objc_msgSend(v30, "protectedAppsEnabled")
    && v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
    && (v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0)
  {
    v31 = 0xD00000000000001BLL;
    v32 = 0x80000001005314A0;
    v33 = v11;
    v34 = 1;
  }
  else
  {
    v31 = 0xD00000000000001FLL;
    v32 = 0x80000001005314C0;
    v33 = v11;
    v34 = 0;
  }
  sub_1003DFB0C(v33, v34, v31, v32);
  v10(v5, v9, v1);
  v35 = v11;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc(24, -1);
    v39 = swift_slowAlloc(32, -1);
    v54 = v39;
    *(_DWORD *)v38 = 136315650;
    v53 = sub_1000544FC(0xD000000000000032, 0x8000000100531460, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    *(_WORD *)(v38 + 12) = 1024;
    v40 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    LODWORD(v53) = v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);
    *(_WORD *)(v38 + 18) = 1024;
    v41 = objc_msgSend(v30, "protectedAppsEnabled")
       && v35[v40] == 1
       && (v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
    v43 = v51;
    v42 = v52;
    v44 = v50;
    LODWORD(v53) = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 4);

    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d reloading contents of item collection", (uint8_t *)v38, 0x18u);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    v44(v43, v42);
  }
  else
  {

    v50(v5, v1);
  }
  sub_1001B113C();
}

void sub_1003DF014()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  os_log_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  os_log_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v5)
  {
    v6 = Logger.UI.unsafeMutableAddressor(v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
    v7 = v0;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      v25 = swift_slowAlloc(32, -1);
      v27 = v25;
      *(_DWORD *)v10 = 136315394;
      v23 = v8;
      v26 = sub_1000544FC(0xD000000000000029, 0x8000000100531430, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      *(_WORD *)(v10 + 12) = 2112;
      v26 = (uint64_t)v7;
      v11 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      v12 = v24;
      *v24 = v7;

      v13 = v23;
      _os_log_impl((void *)&_mh_execute_header, v23, v9, "[PROTECTED APPS] %s: self: %@", (uint8_t *)v10, 0x16u);
      v14 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v12, 1, v14);
      swift_slowDealloc(v12, -1, -1);
      v15 = v25;
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v16 = (void *)objc_opt_self(NSNotificationCenter);
    v17 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v17, "removeObserver:name:object:", v7, DOCAppProtectionStatusDidChangeNotification, 0);

    v18 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v18, "removeObserver:name:object:", v7, UIApplicationDidEnterBackgroundNotification, 0);

    v19 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v19, "removeObserver:name:object:", v7, UIApplicationWillEnterForegroundNotification, 0);

    v20 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v20, "removeObserver:name:object:", v7, NSExtensionHostDidEnterBackgroundNotification, 0);

    v21 = objc_msgSend(v16, "defaultCenter");
    objc_msgSend(v21, "removeObserver:name:object:", v7, NSExtensionHostWillEnterForegroundNotification, 0);

  }
}

void sub_1003DF398(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE *v10;
  NSObject *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  _QWORD *v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  os_log_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  LODWORD(v2) = a1;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self(DOCFeature);
  v8 = objc_msgSend(v7, "protectedAppsEnabled");
  if ((_DWORD)v8)
  {
    v9 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
    v10 = v1;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, (os_log_type_t)v12))
    {
      v29 = v12;
      v31 = v11;
      v32 = v2;
      v13 = swift_slowAlloc(44, -1);
      v28 = (_QWORD *)swift_slowAlloc(8, -1);
      v30 = swift_slowAlloc(64, -1);
      v34 = v30;
      *(_DWORD *)v13 = 136316162;
      v33 = sub_1000544FC(0xD000000000000038, 0x80000001005313F0, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      *(_WORD *)(v13 + 12) = 1024;
      v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
      LODWORD(v33) = v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 4);
      *(_WORD *)(v13 + 18) = 1024;
      v15 = objc_msgSend(v7, "protectedAppsEnabled")
         && v10[v14] == 1
         && (v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
      LODWORD(v33) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, (char *)&v33 + 4);
      *(_WORD *)(v13 + 24) = 2080;
      v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (!v16)
      {

        __break(1u);
        return;
      }
      v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v17 + 16) & 1) != 0)
        v18 = *(_QWORD *)(*(_QWORD *)v17 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      else
        v18 = *(_QWORD *)(v17 + 8);
      v33 = swift_unknownObjectRetain(v18);
      v19 = sub_10006922C(&qword_100652EB0);
      v20 = String.init<A>(describing:)(&v33, v19);
      v22 = v21;
      v33 = sub_1000544FC(v20, v21, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);

      swift_bridgeObjectRelease(v22);
      *(_WORD *)(v13 + 34) = 2112;
      v33 = (uint64_t)v10;
      v23 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      v24 = v28;
      *v28 = v10;

      v25 = v31;
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v29, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v13, 0x2Cu);
      v26 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v24, 1, v26);
      swift_slowDealloc(v24, -1, -1);
      v2 = v30;
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v2, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      LOBYTE(v2) = v32;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] = v2 & 1;
    v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
    sub_1003DE994();
  }
}

id sub_1003DF7A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  os_log_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  os_log_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock[5];
  uint64_t v28;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)result)
  {
    sub_1003DE994();
    v7 = Logger.UI.unsafeMutableAddressor(v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
    v8 = v0;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(22, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      v25 = swift_slowAlloc(32, -1);
      aBlock[0] = v25;
      *(_DWORD *)v11 = 136315394;
      v26 = sub_1000544FC(0xD000000000000021, 0x8000000100531300, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, aBlock);
      *(_WORD *)(v11 + 12) = 2112;
      v23 = v9;
      v26 = (uint64_t)v8;
      v12 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, aBlock);
      v13 = v24;
      *v24 = v8;

      v14 = v23;
      _os_log_impl((void *)&_mh_execute_header, v23, v10, "[PROTECTED APPS] %s authenticateLocationWithNoUI viewController: %@", (uint8_t *)v11, 0x16u);
      v15 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v13, 1, v15);
      swift_slowDealloc(v13, -1, -1);
      v16 = v25;
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    result = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
    v17 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v17)
    {
      v18 = result;
      v19 = v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v19 + 16) & 1) != 0)
        v20 = *(_QWORD *)(*(_QWORD *)v19 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      else
        v20 = *(_QWORD *)(v19 + 8);
      swift_unknownObjectRetain(v20);
      v21 = swift_allocObject(&unk_1005E7428, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      aBlock[4] = (uint64_t)sub_1003E1370;
      v28 = v21;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1003DFE08;
      aBlock[3] = (uint64_t)&unk_1005E7440;
      v22 = _Block_copy(aBlock);
      swift_release(v28);
      objc_msgSend(v18, "authenticateLocationWithNoUI:completion:", v20, v22);
      _Block_release(v22);

      return (id)swift_unknownObjectRelease(v20);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1003DFB0C(char *a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char **v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char **v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v13 = *(id *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v13)
    v13 = objc_msgSend(v13, "setHidden:", a2 & 1);
  v14 = Logger.UI.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
  v15 = a1;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc(32, -1);
    v36 = v9;
    v20 = v19;
    v32 = (char **)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(64, -1);
    v38 = v35;
    *(_DWORD *)v20 = 136315650;
    v37 = (id)sub_1000544FC(a3, a4, &v38);
    v33 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v20 + 12) = 2112;
    v34 = v8;
    v37 = v15;
    v21 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    v22 = v32;
    *v32 = v15;

    *(_WORD *)(v20 + 22) = 2080;
    v37 = *(id *)&a1[v12];
    v23 = v37;
    v24 = sub_10006922C(&qword_100652EB8);
    v25 = String.init<A>(describing:)(&v37, v24);
    v27 = v26;
    v37 = (id)sub_1000544FC(v25, v26, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);

    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v33, "[PROTECTED APPS] %s: self: %@ collectionViewIfLoaded: %s", (uint8_t *)v20, 0x20u);
    v28 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v22, 1, v28);
    swift_slowDealloc(v22, -1, -1);
    v29 = v35;
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return objc_msgSend(v15, "docSetNeedsUpdateContentUnavailableConfiguration");
}

void sub_1003DFE08(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

id sub_1003DFE68()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned __int8 v14;
  uint64_t v15;
  _BYTE *v16;
  NSObject *v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _BYTE *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if (!(_DWORD)result)
    return result;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v7)
  {
    __break(1u);
    return result;
  }
  v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
  v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  v10 = *(_BYTE *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
  v36 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v11);
LABEL_6:
    v13 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
    v14 = objc_msgSend(v13, "nodeRequiresAuthentication_Sync:", v11);

    swift_unknownObjectRelease(v11);
    goto LABEL_7;
  }
  v11 = v9[1];
  v12 = swift_unknownObjectRetain(v11);
  if (v11)
    goto LABEL_6;
  v14 = 0;
LABEL_7:
  v1[v8] = v14;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  v15 = Logger.UI.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
  v16 = v1;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter(v17);
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    v32 = v18;
    v31 = v17;
    v35 = v2;
    v19 = swift_slowAlloc(44, -1);
    v33 = (_QWORD *)swift_slowAlloc(8, -1);
    v34 = swift_slowAlloc(64, -1);
    v38 = v34;
    *(_DWORD *)v19 = 136316162;
    v37 = sub_1000544FC(0xD000000000000016, 0x8000000100531360, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v19 + 12) = 1024;
    LODWORD(v37) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4);
    *(_WORD *)(v19 + 18) = 1024;
    LODWORD(v37) = v1[v8];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4);
    *(_WORD *)(v19 + 24) = 2080;
    v20 = (_QWORD *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
      v21 = *(_QWORD *)(*v20 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v21 = v20[1];
    v22 = v31;
    v37 = swift_unknownObjectRetain(v21);
    v23 = sub_10006922C(&qword_100652EB0);
    v24 = String.init<A>(describing:)(&v37, v23);
    v26 = v25;
    v37 = sub_1000544FC(v24, v25, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);

    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v19 + 34) = 2112;
    v37 = (uint64_t)v16;
    v27 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    v28 = v33;
    *v33 = v16;

    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v32, "[PROTECTED APPS] %s: changed from: %{BOOL}d to locationIsProtected: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v19, 0x2Cu);
    v29 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v28, 1, v29);
    swift_slowDealloc(v28, -1, -1);
    v30 = v34;
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v35);
  }
  else
  {

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1003E0294()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE *v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  _QWORD *v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(DOCFeature);
  v6 = objc_msgSend(v5, "protectedAppsEnabled");
  if ((_DWORD)v6)
  {
    v7 = Logger.UI.unsafeMutableAddressor(v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
    v8 = v0;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter(v9);
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      v28 = v10;
      v30 = v9;
      v11 = swift_slowAlloc(44, -1);
      v27 = (_QWORD *)swift_slowAlloc(8, -1);
      v29 = swift_slowAlloc(64, -1);
      v32 = v29;
      *(_DWORD *)v11 = 136316162;
      v31 = sub_1000544FC(0xD000000000000030, 0x80000001005313B0, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      *(_WORD *)(v11 + 12) = 1024;
      v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
      LODWORD(v31) = v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
      *(_QWORD *)&v13 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 4).n128_u64[0];
      *(_WORD *)(v11 + 18) = 1024;
      v14 = objc_msgSend(v5, "protectedAppsEnabled", v13)
         && v8[v12] == 1
         && (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
      LODWORD(v31) = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 4);
      *(_WORD *)(v11 + 24) = 2080;
      v15 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (!v15)
      {

        __break(1u);
        return;
      }
      v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if ((*(_BYTE *)(v16 + 16) & 1) != 0)
        v17 = *(_QWORD *)(*(_QWORD *)v16 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      else
        v17 = *(_QWORD *)(v16 + 8);
      v31 = swift_unknownObjectRetain(v17);
      v18 = sub_10006922C(&qword_100652EB0);
      v19 = String.init<A>(describing:)(&v31, v18);
      v21 = v20;
      v31 = sub_1000544FC(v19, v20, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);

      swift_bridgeObjectRelease(v21);
      *(_WORD *)(v11 + 34) = 2112;
      v31 = (uint64_t)v8;
      v22 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
      v23 = v27;
      *v27 = v8;

      v24 = v30;
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v28, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v11, 0x2Cu);
      v25 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v23, 1, v25);
      swift_slowDealloc(v23, -1, -1);
      v26 = v29;
      swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v11, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
    sub_1003DE994();
  }
}

void sub_1003E06B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  NSObject *v8;
  int v9;
  _UNKNOWN **v10;
  char **v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = Logger.UI.unsafeMutableAddressor(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter(v8);
  v10 = &_ss11_MergeErrorON_ptr;
  v11 = &selRef_viewOptionsRoot;
  if (os_log_type_enabled(v8, (os_log_type_t)v9))
  {
    v35 = v9;
    v12 = swift_slowAlloc(44, -1);
    v34 = (_QWORD *)swift_slowAlloc(8, -1);
    v36 = swift_slowAlloc(64, -1);
    aBlock[0] = v36;
    *(_DWORD *)v12 = 136316162;
    v37 = sub_1000544FC(0xD00000000000002BLL, 0x8000000100531380, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    *(_WORD *)(v12 + 12) = 1024;
    v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    LODWORD(v37) = v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4);
    *(_WORD *)(v12 + 18) = 1024;
    v14 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled")
       && v7[v13] == 1
       && (v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
    LODWORD(v37) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, (char *)&v37 + 4);
    *(_WORD *)(v12 + 24) = 2080;
    v15 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v15)
    {

      __break(1u);
      goto LABEL_23;
    }
    v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v16 + 16) & 1) != 0)
      v17 = *(_QWORD *)(*(_QWORD *)v16 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v17 = *(_QWORD *)(v16 + 8);
    v37 = swift_unknownObjectRetain(v17);
    v18 = sub_10006922C(&qword_100652EB0);
    v19 = String.init<A>(describing:)(&v37, v18);
    v21 = v20;
    v37 = sub_1000544FC(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);

    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v12 + 34) = 2112;
    v37 = (uint64_t)v7;
    v22 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    v23 = v34;
    *v34 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, (os_log_type_t)v35, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v12, 0x2Cu);
    v24 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v23, 1, v24);
    swift_slowDealloc(v23, -1, -1);
    v25 = v36;
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v11 = &selRef_viewOptionsRoot;
    v10 = &_ss11_MergeErrorON_ptr;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1003DFE68();
  v26 = (void *)objc_opt_self(v10[472]);
  if (!objc_msgSend(v26, v11[350])
    || !objc_msgSend(v26, v11[350])
    || v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] != 1
    || (v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) != 0)
  {
    return;
  }
  v27 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v27)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v28 = v27 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v28 + 16) & 1) != 0)
  {
    v29 = *(_QWORD *)(*(_QWORD *)v28 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v29);
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 8);
    swift_unknownObjectRetain(v29);
    if (!v29)
      return;
  }
  v30 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager");
  v31 = swift_allocObject(&unk_1005E7428, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16);
  aBlock[4] = (uint64_t)sub_1003E13E8;
  v39 = v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1003DFE08;
  aBlock[3] = (uint64_t)&unk_1005E7468;
  v32 = _Block_copy(aBlock);
  v33 = v39;
  swift_unknownObjectRetain(v29);
  objc_msgSend(v30, "authenticateLocationWithNoUI:completion:", v29, v32, swift_release(v33).n128_f64[0]);
  _Block_release(v32);

  swift_unknownObjectRelease_n(v29, 2);
}

void sub_1003E0BF0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  _BYTE v44[24];
  uint64_t Strong;
  _BYTE v46[16];
  uint64_t v47[3];

  v42 = a5;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = Logger.UI.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
  swift_errorRetain(a2);
  swift_retain();
  swift_errorRetain(a2);
  swift_retain();
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  v18 = v17;
  v19 = os_log_type_enabled(v16, v17);
  v43 = a1;
  if (v19)
  {
    v20 = swift_slowAlloc(38, -1);
    HIDWORD(v39) = v18;
    v21 = v20;
    v40 = swift_slowAlloc(96, -1);
    v47[0] = v40;
    *(_DWORD *)v21 = 136315906;
    v41 = v9;
    Strong = sub_1000544FC(a4, v42, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v46);
    *(_WORD *)(v21 + 12) = 1024;
    LODWORD(Strong) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, (char *)&Strong + 4);
    *(_WORD *)(v21 + 18) = 2080;
    Strong = a2;
    swift_errorRetain(a2);
    v22 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v23 = String.init<A>(describing:)(&Strong, v22);
    v25 = v24;
    Strong = sub_1000544FC(v23, v24, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v46);
    swift_bridgeObjectRelease(v25);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    *(_WORD *)(v21 + 28) = 2080;
    swift_beginAccess(a3 + 16, v44, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a3 + 16, v26);
    v27 = sub_10006922C(&qword_100652EA0);
    v28 = String.init<A>(describing:)(&Strong, v27);
    v30 = v29;
    Strong = sub_1000544FC(v28, v29, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&Strong, v46);
    swift_release_n(a3, 2, v31);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v16, BYTE4(v39), "[PROTECTED APPS] %s authenticateLocationWithNoUI success: %{BOOL}d error: %s viewController: %s", (uint8_t *)v21, 0x26u);
    v32 = v40;
    swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v41);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    swift_release_n(a3, 2, v33);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  swift_beginAccess(a3 + 16, v47, 0, 0);
  v35 = (_BYTE *)swift_unknownObjectWeakLoadStrong(a3 + 16, v34);
  if (v35)
  {
    v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = v43 & 1;

  }
  swift_beginAccess(a3 + 16, &Strong, 0, 0);
  v37 = swift_unknownObjectWeakLoadStrong(a3 + 16, v36);
  if (v37)
  {
    v38 = (void *)v37;
    sub_1003DE994();

  }
}

void sub_1003E0F94(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  id v23;
  _QWORD *v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = type metadata accessor for Notification(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.UI.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v13 = v1;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(32, -1);
    v33 = v8;
    v17 = v16;
    v30 = (_QWORD *)swift_slowAlloc(8, -1);
    v32 = swift_slowAlloc(64, -1);
    v35 = v32;
    *(_DWORD *)v17 = 136315650;
    v29 = v14;
    v34 = sub_1000544FC(0xD000000000000029, 0x8000000100531330, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v17 + 12) = 2080;
    v31 = v7;
    v18 = sub_1003E13A0();
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v3, v18);
    v21 = v20;
    v34 = sub_1000544FC(v19, v20, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v22);
    *(_WORD *)(v17 + 22) = 2112;
    v34 = (uint64_t)v13;
    v23 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    v24 = v30;
    *v30 = v13;

    v25 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, v15, "[PROTECTED APPS] %s: notification: %s self: %@", (uint8_t *)v17, 0x20u);
    v26 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v24, 1, v26);
    swift_slowDealloc(v24, -1, -1);
    v27 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_1003DFE68();
  sub_1003DE994();
}

uint64_t sub_1003E134C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003E1370(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E0BF0(a1, a2, v2, 0xD000000000000021, 0x8000000100531300);
}

unint64_t sub_1003E13A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100652EA8;
  if (!qword_100652EA8)
  {
    v1 = type metadata accessor for Notification(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Notification, v1);
    atomic_store(result, (unint64_t *)&qword_100652EA8);
  }
  return result;
}

void sub_1003E13E8(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E0BF0(a1, a2, v2, 0xD00000000000002BLL, 0x8000000100531380);
}

uint64_t sub_1003E1420(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __n128 v47;
  void (*v48)(char *, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  os_log_type_t v91;
  uint8_t *v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  __n128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[24];
  uint64_t v109;
  _QWORD v110[3];

  v5 = type metadata accessor for IndexPath(0);
  v101 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v99 = (char *)&v99 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v99 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v99 - v14;
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v103 = v16;
  v104 = v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v100 = (char *)&v99 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v99 - v23;
  v106 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v102 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v27, v108, 0, 0);
  sub_1000271D4(v27, (uint64_t)&v109, &qword_100642730);
  if (v110[2])
  {
    v28 = sub_10006922C((uint64_t *)&unk_1006455F0);
    if ((swift_dynamicCast(&v107, &v109, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v29 = (id)v107;
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v109, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v29 = (id)qword_100657778;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v31 = v26;
  v32 = IndexPath.section.getter(v30);
  v105 = v31;
  v33 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v106);
  v34 = v33;
  if ((v32 & 0x8000000000000000) != 0 || v32 >= *(_QWORD *)(v33 + 16))
  {
    swift_bridgeObjectRelease(v33);
    if ((a2 & 1) != 0)
    {
      v38 = IndexPath.section.getter(v37);
      v39 = IndexPath.init(row:section:)(0, v38);
      v40 = IndexPath.section.getter(v39);
      v41 = v105;
      v42 = v106;
      v43 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v106);
      v44 = v43;
      if ((v40 & 0x8000000000000000) != 0 || v40 >= *(_QWORD *)(v43 + 16))
      {
        v71 = swift_bridgeObjectRelease(v43);
        v72 = v101;
        v100 = *(char **)(v101 + 8);
        v73 = ((uint64_t (*)(char *, uint64_t, __n128))v100)(v13, v5, v71);
        v74 = Logger.UI.unsafeMutableAddressor(v73);
        v75 = v103;
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v20, v74, v103);
        v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 16))(v8, a1, v5);
        v77 = Logger.logObject.getter(v76);
        v78 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v79 = 134349056;
          v80 = IndexPath.section.getter(v79);
          ((void (*)(char *, uint64_t))v100)(v8, v5);
          v109 = v80;
          v75 = v103;
          v42 = v106;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "Couldn't find section: section %{public}ld is not valid", v79, 0xCu);
          v81 = v79;
          v41 = v105;
          swift_slowDealloc(v81, -1, -1);
        }
        else
        {
          ((void (*)(char *, uint64_t))v100)(v8, v5);
        }

        (*(void (**)(char *, uint64_t))(v104 + 8))(v20, v75);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v41, v42);
        return 0;
      }
      v45 = v43 + 16 * v40;
      v35 = *(_QWORD *)(v45 + 32);
      v46 = *(_QWORD *)(v45 + 40);
      swift_unknownObjectRetain(v35);
      v47 = swift_bridgeObjectRelease(v44);
      v48 = *(void (**)(char *, uint64_t, __n128))(v101 + 8);
      v49 = v5;
      v48(v13, v5, v47);
      v109 = v35;
      v110[0] = v46;
      v50 = NSDiffableDataSourceSnapshot.indexOfSection(_:)(&v109, v42);
      if ((v51 & 1) != 0)
      {
        v53 = 0;
      }
      else
      {
        v50 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)(&v109, v42);
        if (v50 > 0)
          v52 = *(unsigned __int8 *)(v35 + 73);
        else
          v52 = 0;
        v53 = v50 - v52;
      }
      v83 = v103;
      v84 = IndexPath.row.getter(v50);
      if (v53 < v84)
      {
        (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v42);
        return v35;
      }
      v85 = Logger.UI.unsafeMutableAddressor(v84);
      v86 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v100, v85, v83);
      v87 = v99;
      v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 16))(v99, a1, v49);
      v89 = Logger.logObject.getter(v88);
      v90 = v83;
      v91 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v89, v91))
      {

        swift_unknownObjectRelease(v35);
        ((void (*)(char *, uint64_t))v48)(v87, v49);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v86, v90);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v42);
        return 0;
      }
      v92 = (uint8_t *)swift_slowAlloc(12, -1);
      v101 = swift_slowAlloc(32, -1);
      v109 = v101;
      *(_DWORD *)v92 = 136446210;
      v93 = sub_1000E9B60();
      v94 = dispatch thunk of CustomStringConvertible.description.getter(v49, v93);
      v96 = v95;
      v107 = sub_1000544FC(v94, v95, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108);
      v97 = swift_bridgeObjectRelease(v96);
      v48(v87, v49, v97);
      _os_log_impl((void *)&_mh_execute_header, v89, v91, "Couldn't find section: indexPath %{public}s) isn't valid for insertion", v92, 0xCu);
      v98 = v101;
      swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v92, -1, -1);

      swift_unknownObjectRelease(v35);
      v68 = *(void (**)(char *, uint64_t))(v104 + 8);
      v69 = v100;
    }
    else
    {
      v54 = Logger.UI.unsafeMutableAddressor(v37);
      v55 = v103;
      v56 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v24, v54, v103);
      v57 = v101;
      v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 16))(v15, a1, v5);
      v59 = Logger.logObject.getter(v58);
      v60 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v59, v60))
      {

        (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v5);
        v68 = *(void (**)(char *, uint64_t))(v56 + 8);
        v69 = v24;
        v70 = v55;
        goto LABEL_25;
      }
      v61 = (uint8_t *)swift_slowAlloc(12, -1);
      v62 = swift_slowAlloc(32, -1);
      v109 = v62;
      *(_DWORD *)v61 = 136446210;
      v63 = sub_1000E9B60();
      v64 = dispatch thunk of CustomStringConvertible.description.getter(v5, v63);
      v66 = v65;
      v107 = sub_1000544FC(v64, v65, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108);
      v67 = swift_bridgeObjectRelease(v66);
      (*(void (**)(char *, uint64_t, __n128))(v101 + 8))(v15, v5, v67);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Could not find section: indexPath %{public}s is not valid", v61, 0xCu);
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      v68 = *(void (**)(char *, uint64_t))(v104 + 8);
      v69 = v24;
    }
    v70 = v103;
LABEL_25:
    v68(v69, v70);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v106);
    return 0;
  }
  v35 = *(_QWORD *)(v33 + 16 * v32 + 32);
  swift_unknownObjectRetain(v35);
  v36 = swift_bridgeObjectRelease(v34);
  (*(void (**)(char *, uint64_t, __n128))(v102 + 8))(v105, v106, v36);
  return v35;
}

BOOL sub_1003E1C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 v15;
  _BYTE v18[24];
  _QWORD v19[6];
  __int128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  __int128 v25;

  v3 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v7, v18, 0, 0);
  sub_1000271D4(v7, (uint64_t)&v20, &qword_100642730);
  if (v22)
  {
    v8 = sub_10006922C((uint64_t *)&unk_1006455F0);
    v9 = swift_dynamicCast(v19, &v20, (char *)&type metadata for Any + 8, v8, 6);
    if ((v9 & 1) != 0)
    {
      v10 = (void *)v19[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v20, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v9 = (uint64_t)(id)qword_100657778;
  v10 = (void *)v9;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v9);

  sub_1003E57D8(a1, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1003E6CC0((uint64_t)v19, (uint64_t)&v20);
  if (!(_QWORD)v20)
    return 0;
  v25 = v20;
  v11 = v21;
  v12 = v22;
  v13 = v23;
  v14 = v24;
  v15 = v24 == 255;
  sub_1002A8A58(&v25);
  sub_1000B1664(v11, v12, v13, v14);
  return v15;
}

uint64_t sub_1003E1E24(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  _QWORD v52[5];
  char v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  __int128 v58;

  v48 = a2;
  v46 = type metadata accessor for IndexPath(0);
  v43 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v44 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, v51, 0, 0);
  sub_1000271D4(v12, (uint64_t)&v54, &qword_100642730);
  v47 = v5;
  v45 = v6;
  if (v56)
  {
    v13 = sub_10006922C((uint64_t *)&unk_1006455F0);
    if ((swift_dynamicCast(v52, &v54, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
    {
      v14 = (id)v52[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_10000CB4C((uint64_t)&v54, &qword_100642730);
  }
  if (qword_1006411E8 != -1)
    swift_once(&qword_1006411E8, sub_1000A3F70);
  v14 = (id)qword_100657778;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v15 = a1;
  sub_1003E57D8(a1, (uint64_t)v52);
  v16 = v52[0];
  v17 = (void *)v52[2];
  v18 = v52[3];
  v19 = v52[4];
  v20 = v53;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = sub_1003E6CC0((uint64_t)v52, (uint64_t)&v54);
  if (!(_QWORD)v54
    || (v58 = v54,
        v22 = v55,
        v23 = v57,
        swift_unknownObjectRetain(v16),
        sub_1000B1650(v17, v18, v19, v20),
        v21 = (uint64_t)sub_1002A8A58(&v58),
        v23 == 255))
  {
    if ((v48 & 1) != 0)
    {
      v24 = Logger.Sidebar.unsafeMutableAddressor(v21);
      v25 = v45;
      v26 = v44;
      v27 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v24, v47);
      v28 = v43;
      v29 = v42;
      v30 = v46;
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v15, v46);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc(22, -1);
        v35 = swift_slowAlloc(64, -1);
        v50 = v35;
        *(_DWORD *)v34 = 136315394;
        v49 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100531550, &v50);
        v36 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
        *(_WORD *)(v34 + 12) = 2080;
        v37 = IndexPath.description.getter(v36);
        v39 = v38;
        v49 = sub_1000544FC(v37, v38, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
        v40 = swift_bridgeObjectRelease(v39);
        (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v29, v46, v40);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s: Could not find sidebar item at index path: %s.", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

        sub_1003E6D08((uint64_t)v52);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v47);
      }
      else
      {
        sub_1003E6D08((uint64_t)v52);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
      }
    }
    else
    {
      sub_1003E6D08((uint64_t)v52);
    }
    return 0;
  }
  else
  {
    sub_1003E6D08((uint64_t)v52);
  }
  return v22;
}

id sub_1003E22D4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id result;
  void *v12;
  uint64_t v13;
  void *v14;
  Class isa;
  id v16;
  uint64_t v17;
  objc_super v18;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v5, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v10 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v18.receiver = v1;
    v18.super_class = v10;
    result = objc_msgSendSuper2(&v18, "collectionView");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v12 = result;
    v13 = type metadata accessor for DOCSidebarCollectionView();
    v14 = (void *)swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(v14, "cellForItemAtIndexPath:", isa);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v16)
    {
      v17 = type metadata accessor for DOCSidebarItemCell(0);
      result = (id)swift_dynamicCastClass(v16, v17);
      if (result)
        return result;

    }
  }
  return 0;
}

uint64_t sub_1003E2494(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  char *v6;
  void *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  int v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  int v38;
  _OWORD *v39;
  int v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t result;
  objc_class *v67;
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v85;
  void *v86;
  void *v87;
  char *v88;
  Class isa;
  void *v90;
  uint64_t v91;
  Swift::String v92;
  unint64_t v93;
  double v94;
  void *v95;
  void *v96;
  char *v97;
  Class v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  objc_super v123;
  objc_super v124;
  objc_super v125;
  objc_super v126;
  _OWORD *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 v132;
  _BYTE v133[40];
  _OWORD *v134;
  unint64_t v135;
  ValueMetadata *v136;
  _UNKNOWN **v137;
  char v138[24];
  __int128 v139;
  _BYTE v140[25];

  LODWORD(v7) = a6;
  v103 = a5;
  v109 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v104 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v13);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v107 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v6;
  v19 = (uint64_t)&v6[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  swift_beginAccess(v19, v138, 0, 0);
  sub_1000271D4(v19, (uint64_t)&v139, &qword_100642730);
  v115 = a3;
  v117 = a1;
  v116 = a4;
  if (!*(_QWORD *)&v140[8])
  {
    sub_1000E4F7C(a1, a2, a3, a4);
    sub_10000CB4C((uint64_t)&v139, &qword_100642730);
    goto LABEL_5;
  }
  sub_1000E4F7C(a1, a2, a3, a4);
  v20 = sub_10006922C((uint64_t *)&unk_1006455F0);
  if ((swift_dynamicCast(&v127, &v139, (char *)&type metadata for Any + 8, v20, 6) & 1) == 0)
  {
LABEL_5:
    if (qword_1006411E8 != -1)
      swift_once(&qword_1006411E8, sub_1000A3F70);
    v21 = (id)qword_100657778;
    goto LABEL_8;
  }
  v21 = v127;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v22 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v109);
  v23 = v22;
  v24 = *(_QWORD *)(v22 + 16);
  v114 = a2;
  v105 = v17;
  if (!v24)
  {
LABEL_21:
    v60 = swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t, __n128))(v104 + 8))(v108, v109, v60);
    sub_1000E4FD0(v117, a2, v115, v116);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_24;
  }
  v100 = v15;
  v101 = v16;
  v102 = (int)v7;
  swift_bridgeObjectRetain(v22);
  v99 = v23;
  v25 = (unsigned __int8 *)(v23 + 72);
  v7 = v117;
  while (1)
  {
    v27 = (void *)*((_QWORD *)v25 - 3);
    v26 = *((_QWORD *)v25 - 2);
    v28 = *((_QWORD *)v25 - 1);
    v29 = *v25;
    v122 = *(_OWORD *)(v25 - 40);
    v139 = v122;
    *(_QWORD *)v140 = v27;
    *(_QWORD *)&v140[8] = v26;
    *(_QWORD *)&v140[16] = v28;
    v140[24] = v29;
    v136 = &_s11OutlineItemVN;
    v137 = &off_1005F0720;
    v30 = (_OWORD *)swift_allocObject(&unk_1005E74A0, 57, 7);
    v134 = v30;
    v31 = *(_OWORD *)v140;
    v30[1] = v139;
    v30[2] = v31;
    *(_OWORD *)((char *)v30 + 41) = *(_OWORD *)&v140[9];
    sub_100092328((uint64_t)&v134, (uint64_t)v133);
    v32 = v122;
    swift_unknownObjectRetain(v122);
    sub_1000B1650(v27, v26, v28, v29);
    swift_unknownObjectRetain(v32);
    sub_1000B1650(v27, v26, v28, v29);
    v33 = sub_10006922C(&qword_100652EC8);
    if (swift_dynamicCast(&v127, v133, v33, &_s11OutlineItemVN, 6))
      break;
    sub_100068588(&v134);
    swift_unknownObjectRelease(v32);
    sub_1000B1664(v27, v26, v28, v29);
LABEL_11:
    v25 += 48;
    if (!--v24)
    {
      v23 = v99;
      swift_bridgeObjectRelease(v99);
      LOBYTE(v7) = v102;
      v15 = v100;
      v16 = v101;
      v17 = v105;
      a2 = v114;
      goto LABEL_21;
    }
  }
  v118 = v27;
  v119 = v26;
  v120 = v28;
  v121 = v32;
  LODWORD(v122) = v29;
  v34 = v127;
  v36 = (void *)v129;
  v35 = v130;
  v37 = v131;
  v38 = v132;
  sub_100068588(&v134);
  v39 = v34;
  v40 = v38;
  swift_unknownObjectRelease(v39);
  if (v38 == 255)
  {
    v59 = v121;
LABEL_19:
    swift_unknownObjectRelease(v59);
    sub_1000B1664(v118, v119, v120, v122);
    goto LABEL_11;
  }
  v41 = v7;
  v43 = v114;
  v42 = v115;
  v44 = v116;
  sub_1000E4F7C(v41, v114, v115, v116);
  sub_1000B1650(v36, v35, v37, v40);
  v110 = v36;
  v111 = v35;
  v112 = v37;
  v113 = v40;
  sub_100200624((uint64_t)v36, v35, v37, v40);
  v46 = v45;
  v47 = v44;
  v49 = v48;
  sub_100200624((uint64_t)v117, v43, v42, v47);
  v52 = v51;
  if (v46 != v50 || v49 != v51)
  {
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v49, v50, v51, 0);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v52);
    v7 = v117;
    sub_1000E4FD0(v117, v114, v115, v116);
    v55 = v110;
    v54 = v111;
    v56 = v112;
    v57 = v113;
    sub_1000B1664(v110, v111, v112, v113);
    sub_1000B1664(v55, v54, v56, v57);
    v58 = v121;
    if ((v53 & 1) != 0)
      goto LABEL_23;
    v59 = v121;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease_n(v49, 2);
  v7 = v117;
  sub_1000E4FD0(v117, v114, v115, v116);
  v62 = v110;
  v61 = v111;
  v63 = v112;
  v64 = v113;
  sub_1000B1664(v110, v111, v112, v113);
  sub_1000B1664(v62, v61, v63, v64);
  v58 = v121;
LABEL_23:
  swift_bridgeObjectRelease_n(v99, 2);
  v15 = v100;
  v65 = v108;
  sub_1003E521C(&v139, (uint64_t)v100);
  sub_1000E4FD0(v7, v114, v115, v116);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v109);
  swift_unknownObjectRelease(v58);
  sub_1000B1664(v118, v119, v120, v122);
  LOBYTE(v7) = v102;
  v16 = v101;
  v17 = v105;
LABEL_24:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_100642710);
    return 2;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v107, v15, v16);
  v67 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v126.receiver = v106;
  v126.super_class = v67;
  result = (uint64_t)objc_msgSendSuper2(&v126, "collectionView");
  if (!result)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v68 = (void *)result;
  v69 = type metadata accessor for DOCSidebarCollectionView();
  v70 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v68, v69, 0, 0, 0), "indexPathsForSelectedItems");

  if (v70)
  {
    v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v16);

  }
  else
  {
    v71 = 0;
  }
  v72 = sub_10006922C(&qword_100644BD0);
  v73 = *(unsigned __int8 *)(v17 + 80);
  v74 = (v73 + 32) & ~v73;
  v75 = swift_allocObject(v72, v74 + *(_QWORD *)(v17 + 72), v73 | 7);
  *(_OWORD *)(v75 + 16) = xmmword_1004D9670;
  v76 = v17;
  v77 = v75 + v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v75 + v74, v107, v16);
  if (v71)
  {
    v78 = swift_bridgeObjectRetain(v71);
    v79 = sub_10023DD70(v78, v75);
    swift_setDeallocating(v75);
    swift_arrayDestroy(v77, *(_QWORD *)(v75 + 16), v16);
    swift_deallocClassInstance(v75, 32, 7);
    swift_bridgeObjectRelease_n(v71, 2);
  }
  else
  {
    swift_setDeallocating(v75);
    swift_arrayDestroy(v77, 1, v16);
    swift_deallocClassInstance(v75, 32, 7);
    v79 = 0;
  }
  v125.receiver = v106;
  v125.super_class = v67;
  result = (uint64_t)objc_msgSendSuper2(&v125, "collectionView", v99);
  if (!result)
    goto LABEL_40;
  v80 = (void *)result;
  v81 = objc_msgSend((id)swift_dynamicCastClassUnconditional(result, v69, 0, 0, 0), "indexPathsForVisibleItems");

  v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v81, v16);
  __chkstk_darwin(v83);
  *(&v99 - 2) = (uint64_t)v107;
  LODWORD(v80) = sub_100062898((uint64_t (*)(char *))sub_1003E6E2C, (_BOOL8)(&v99 - 4), v82);
  *(_QWORD *)&v84 = swift_bridgeObjectRelease(v82).n128_u64[0];
  v85 = v103 & ~(_DWORD)v80 & 1;
  if ((v79 & 1) != 0)
  {
    v123.receiver = v106;
    v123.super_class = v67;
    result = (uint64_t)objc_msgSendSuper2(&v123, "collectionView", v84);
    if (result)
    {
      v86 = (void *)result;
      v87 = (void *)swift_dynamicCastClassUnconditional(result, v69, 0, 0, 0);
      v88 = v107;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v87, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, v85, v7 & 1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v88, v16);
      return 1;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  else
  {
    v90 = v106;
    v91 = *(_QWORD *)&v106[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer];
    v127 = 0;
    v128 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(29);
    v134 = v127;
    v135 = v128;
    v92._object = (void *)0x8000000100531590;
    v92._countAndFlagsBits = 0xD00000000000001BLL;
    String.append(_:)(v92);
    v127 = v117;
    v128 = v114;
    v129 = v115;
    LOBYTE(v130) = v116;
    _print_unlocked<A, B>(_:_:)(&v127, &v134, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v93 = v135;
    sub_1003E66C0((uint64_t)v134, v135);
    swift_release(v91);
    *(_QWORD *)&v94 = swift_bridgeObjectRelease(v93).n128_u64[0];
    v124.receiver = v90;
    v124.super_class = v67;
    result = (uint64_t)objc_msgSendSuper2(&v124, "collectionView", v94);
    if (!result)
      goto LABEL_42;
    v95 = (void *)result;
    v96 = (void *)swift_dynamicCastClassUnconditional(result, v69, 0, 0, 0);
    v97 = v107;
    v98 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v96, "selectItemAtIndexPath:animated:scrollPosition:", v98, v7 & 1, v85);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v97, v16);
    return 0;
  }
  return result;
}

void sub_1003E2EB0(int a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char *v37;
  id v38;
  uint64_t v39;
  void *v40;
  char *v41;
  void *v42;
  Class isa;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  uint64_t v51;
  int v52;
  objc_class *v53;
  void **aBlock;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  void *v57;
  void *v58;
  uint64_t v59;
  objc_super v60;
  objc_super v61;
  objc_super v62;

  v3 = v2;
  v52 = a1;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v62.receiver = v3;
  v62.super_class = v12;
  v53 = v12;
  v13 = objc_msgSendSuper2(&v62, "collectionView");
  if (!v13)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  v14 = v13;
  v51 = type metadata accessor for DOCSidebarCollectionView();
  v15 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v14, v51, 0, 0, 0), "indexPathsForSelectedItems");

  if (v15)
  {
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v5);

    v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer];
    swift_retain();
    sub_1003E66C0(0xD000000000000036, 0x80000001005315B0);
    swift_release(v17);
    if (a2)
    {
      v60.receiver = v3;
      v60.super_class = v53;
      swift_unknownObjectRetain(a2);
      v18 = objc_msgSendSuper2(&v60, "collectionView");
      if (v18)
      {
        v19 = v18;
        v20 = swift_dynamicCastClassUnconditional(v18, v51, 0, 0, 0);
        v21 = swift_allocObject(&unk_1005E74C8, 33, 7);
        *(_QWORD *)(v21 + 16) = v16;
        *(_QWORD *)(v21 + 24) = v20;
        v22 = v52 & 1;
        *(_BYTE *)(v21 + 32) = v52 & 1;
        v58 = sub_1003E6DE4;
        v59 = v21;
        aBlock = _NSConcreteStackBlock;
        v55 = 1107296256;
        v56 = sub_100018CC0;
        v57 = &unk_1005E74E0;
        v23 = _Block_copy(&aBlock);
        v24 = v59;
        swift_bridgeObjectRetain(v16);
        v25 = v19;
        swift_release(v24);
        v26 = swift_allocObject(&unk_1005E7518, 33, 7);
        *(_QWORD *)(v26 + 16) = v16;
        *(_QWORD *)(v26 + 24) = v20;
        *(_BYTE *)(v26 + 32) = v22;
        v58 = sub_1003E6E20;
        v59 = v26;
        aBlock = _NSConcreteStackBlock;
        v55 = 1107296256;
        v56 = sub_100018CC0;
        v57 = &unk_1005E7530;
        v27 = _Block_copy(&aBlock);
        v28 = v59;
        v29 = v25;
        objc_msgSend(a2, "animateAlongsideTransition:completion:", v23, v27, swift_release(v28).n128_f64[0]);
        _Block_release(v27);
        _Block_release(v23);
        swift_unknownObjectRelease(a2);

        return;
      }
      goto LABEL_19;
    }
    v30 = v16;
    v31 = *(_QWORD *)(v16 + 16);
    if (v31)
    {
      v32 = v30 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v49 = *(_QWORD *)(v6 + 72);
      v50 = v33;
      v47 = v30;
      swift_bridgeObjectRetain(v30);
      v34 = v5;
      while (1)
      {
        v50(v11, v32, v34);
        v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v35(v11, 0, 1, v34);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v34) == 1)
        {
          v46 = v47;
          goto LABEL_15;
        }
        v48 = v35;
        v36 = v11;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v34);
        v37 = v3;
        v61.receiver = v3;
        v61.super_class = v53;
        v38 = objc_msgSendSuper2(&v61, "collectionView");
        if (!v38)
          break;
        v39 = v6;
        v40 = v38;
        v41 = v8;
        v42 = (void *)swift_dynamicCastClassUnconditional(v38, v51, 0, 0, 0);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v42, "deselectItemAtIndexPath:animated:", isa, v52 & 1);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v34);
        v32 += v49;
        --v31;
        v3 = v37;
        v8 = v41;
        v6 = v39;
        v11 = v36;
        if (!v31)
        {
          v44 = v47;
          v48(v36, 1, 1, v34);
          goto LABEL_13;
        }
      }
      __break(1u);
      goto LABEL_18;
    }
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v44 = swift_bridgeObjectRetain(v30);
    v45(v11, 1, 1, v5);
LABEL_13:
    v46 = v44;
LABEL_15:
    swift_bridgeObjectRelease_n(v46, 2);
  }
}

id sub_1003E3330(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  int v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  void *v65;
  __n128 v66;
  char v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  id result;
  uint64_t v79;
  Swift::String v80;
  unint64_t v81;
  objc_class *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  Class isa;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  void *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  __int128 v111;
  objc_super v112;
  uint64_t v113;
  unint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  char v119[8];
  _OWORD *v120;
  unint64_t v121;
  ValueMetadata *v122;
  _UNKNOWN **v123;
  char v124[8];
  __int128 v125;
  _BYTE v126[25];

  v92 = a5;
  v97 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v93 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v96 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v11);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v95 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5;
  v18 = (uint64_t)&v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource], v124, 0, 0);
  sub_1000271D4(v18, (uint64_t)&v125, &qword_100642730);
  v107 = a4;
  v94 = v13;
  v19 = a1;
  v20 = a1;
  v21 = a3;
  if (!*(_QWORD *)&v126[8])
  {
    sub_1000E4F7C(v20, a2, a3, a4);
    sub_10000CB4C((uint64_t)&v125, &qword_100642730);
    goto LABEL_5;
  }
  sub_1000E4F7C(v20, a2, a3, a4);
  v22 = sub_10006922C((uint64_t *)&unk_1006455F0);
  v23 = swift_dynamicCast(&v113, &v125, (char *)&type metadata for Any + 8, v22, 6);
  if ((v23 & 1) == 0)
  {
LABEL_5:
    if (qword_1006411E8 != -1)
      swift_once(&qword_1006411E8, sub_1000A3F70);
    v23 = (uint64_t)(id)qword_100657778;
    v24 = (void *)v23;
    goto LABEL_8;
  }
  v24 = (void *)v113;
LABEL_8:
  v25 = v95;
  v26 = v19;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v23);

  v27 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v97);
  v28 = v27;
  v29 = *(_QWORD *)(v27 + 16);
  if (!v29)
  {
LABEL_21:
    v66 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v96, v97, v66);
    v67 = v107;
    sub_1000E4FD0(v26, a2, v21, v107);
    v68 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v94, 1, 1, v14);
    goto LABEL_24;
  }
  v105 = v26;
  v106 = v21;
  v89 = v17;
  v90 = v15;
  v91 = v14;
  swift_bridgeObjectRetain(v27);
  v88 = v28;
  v30 = (unsigned __int8 *)(v28 + 72);
  v98 = a2;
  while (1)
  {
    v32 = (void *)*((_QWORD *)v30 - 3);
    v31 = *((_QWORD *)v30 - 2);
    v33 = *((_QWORD *)v30 - 1);
    v34 = *v30;
    v111 = *(_OWORD *)(v30 - 40);
    v125 = v111;
    *(_QWORD *)v126 = v32;
    *(_QWORD *)&v126[8] = v31;
    *(_QWORD *)&v126[16] = v33;
    v126[24] = v34;
    v122 = &_s11OutlineItemVN;
    v123 = &off_1005F0720;
    v35 = (_OWORD *)swift_allocObject(&unk_1005E74A0, 57, 7);
    v120 = v35;
    v36 = *(_OWORD *)v126;
    v35[1] = v125;
    v35[2] = v36;
    *(_OWORD *)((char *)v35 + 41) = *(_OWORD *)&v126[9];
    sub_100092328((uint64_t)&v120, (uint64_t)v119);
    v37 = v111;
    swift_unknownObjectRetain(v111);
    sub_1000B1650(v32, v31, v33, v34);
    swift_unknownObjectRetain(v37);
    sub_1000B1650(v32, v31, v33, v34);
    v38 = sub_10006922C(&qword_100652EC8);
    if (swift_dynamicCast(&v113, v119, v38, &_s11OutlineItemVN, 6))
      break;
    sub_100068588(&v120);
    swift_unknownObjectRelease(v37);
    sub_1000B1664(v32, v31, v33, v34);
LABEL_11:
    v30 += 48;
    if (!--v29)
    {
      v28 = v88;
      swift_bridgeObjectRelease(v88);
      v14 = v91;
      v15 = v90;
      v25 = v95;
      v17 = v89;
      v21 = v106;
      v26 = v105;
      goto LABEL_21;
    }
  }
  v108 = v29;
  v109 = v32;
  *(_QWORD *)&v111 = v31;
  v110 = v37;
  v39 = v113;
  v40 = v115;
  v41 = v116;
  v42 = v117;
  v43 = v118;
  sub_100068588(&v120);
  v44 = v39;
  v45 = v43;
  swift_unknownObjectRelease(v44);
  if (v43 == 255)
  {
    swift_unknownObjectRelease(v110);
    sub_1000B1664(v109, v111, v33, v34);
LABEL_19:
    v29 = v108;
    goto LABEL_11;
  }
  v103 = v33;
  v104 = v34;
  v46 = (uint64_t)v105;
  v47 = a2;
  v48 = a2;
  v49 = v106;
  v50 = v107;
  sub_1000E4F7C(v105, v47, v106, v107);
  sub_1000B1650(v40, v41, v42, v45);
  v99 = v40;
  v100 = v41;
  v101 = v42;
  v102 = v45;
  sub_100200624((uint64_t)v40, v41, v42, v45);
  v52 = v51;
  v54 = v53;
  sub_100200624(v46, v48, v49, v50);
  v57 = v56;
  if (v52 != v55 || v54 != v56)
  {
    v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v55, v56, 0);
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v57);
    a2 = v98;
    sub_1000E4FD0(v105, v98, v106, v107);
    v59 = v99;
    v60 = v100;
    v61 = v101;
    v62 = v102;
    sub_1000B1664(v99, v100, v101, v102);
    sub_1000B1664(v59, v60, v61, v62);
    v63 = v104;
    v64 = v110;
    v65 = v109;
    if ((v58 & 1) != 0)
      goto LABEL_23;
    swift_unknownObjectRelease(v110);
    sub_1000B1664(v65, v111, v103, v63);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease_n(v54, 2);
  a2 = v98;
  sub_1000E4FD0(v105, v98, v106, v107);
  v69 = v99;
  v70 = v100;
  v71 = v101;
  v72 = v102;
  sub_1000B1664(v99, v100, v101, v102);
  sub_1000B1664(v69, v70, v71, v72);
  v63 = v104;
  v64 = v110;
  v65 = v109;
LABEL_23:
  swift_bridgeObjectRelease_n(v88, 2);
  v73 = v64;
  v68 = (uint64_t)v94;
  v74 = v96;
  sub_1003E521C(&v125, (uint64_t)v94);
  v26 = v105;
  v75 = a2;
  v76 = a2;
  v21 = v106;
  v77 = v107;
  sub_1000E4FD0(v105, v76, v106, v107);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v97);
  swift_unknownObjectRelease(v73);
  v67 = v77;
  a2 = v75;
  sub_1000B1664(v65, v111, v103, v63);
  v14 = v91;
  v15 = v90;
  v25 = v95;
  v17 = v89;
LABEL_24:
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v68, 1, v14) == 1)
    return (id)sub_10000CB4C(v68, (uint64_t *)&unk_100642710);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v25, v68, v14);
  v79 = *(_QWORD *)&v17[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer];
  v113 = 0;
  v114 = 0xE000000000000000;
  swift_retain();
  _StringGuts.grow(_:)(31);
  v120 = (_OWORD *)v113;
  v121 = v114;
  v80._object = (void *)0x8000000100531570;
  v80._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v80);
  v113 = (uint64_t)v26;
  v114 = a2;
  v115 = (void *)v21;
  LOBYTE(v116) = v67;
  _print_unlocked<A, B>(_:_:)(&v113, &v120, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v81 = v121;
  sub_1003E66C0((uint64_t)v120, v121);
  swift_release(v79);
  swift_bridgeObjectRelease(v81);
  v82 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v112.receiver = v17;
  v112.super_class = v82;
  result = objc_msgSendSuper2(&v112, "collectionView");
  if (result)
  {
    v83 = result;
    v84 = type metadata accessor for DOCSidebarCollectionView();
    v85 = (void *)swift_dynamicCastClassUnconditional(v83, v84, 0, 0, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v85, "deselectItemAtIndexPath:animated:", isa, v92 & 1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v25, v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003E3CDC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t *v20;
  uint64_t *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  int v45;
  _OWORD *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  __n128 v73;
  void *v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  void *v81;
  char *v82;
  void *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  Swift::String v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  __n128 v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  id v101;
  void *v102;
  void *v103;
  char *v104;
  Class isa;
  _QWORD *v106;
  char *v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  int v133;
  void *v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  objc_super v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  char v148[8];
  uint64_t v149;
  unint64_t v150;
  ValueMetadata *v151;
  _UNKNOWN **v152;
  char v153[8];
  objc_super v154;
  __int128 v155;
  _BYTE v156[25];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v122 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v127 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v123 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v121 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v154.receiver = v0;
  v154.super_class = v11;
  v112 = v11;
  v12 = objc_msgSendSuper2(&v154, "collectionView");
  if (!v12)
    goto LABEL_42;
  v13 = v12;
  v111 = type metadata accessor for DOCSidebarCollectionView();
  v14 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v13, v111, 0, 0, 0), "indexPathsForSelectedItems");

  if (!v14)
    return;
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v9);

  v16 = v0;
  v17 = sub_1003E6434(v15, (uint64_t)v16);
  swift_bridgeObjectRelease(v15);

  v120 = v17[2];
  if (!v120)
  {
    swift_bridgeObjectRelease(v17);
    return;
  }
  v119 = v16;
  v18 = (uint64_t)&v16[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  v110 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  swift_bridgeObjectRetain(v17);
  v118 = v18;
  v19 = swift_beginAccess(v18, v153, 0, 0);
  v20 = v17 + 5;
  v21 = v17 + 6;
  v106 = v17;
  v22 = (unsigned __int8 *)(v17 + 7);
  v23 = 1;
  v109 = (void *)0x8000000100531570;
  v19.n128_u64[0] = 136315138;
  v108 = v19;
  v107 = (char *)&type metadata for Any + 8;
  v117 = v17 + 4;
  v24 = (void **)(v17 + 4);
  v116 = v8;
  v125 = v9;
  v25 = v123;
  v115 = v1;
  v114 = v2;
  v113 = v4;
  while (2)
  {
    v26 = v8;
    v27 = v4;
    v28 = v2;
    v29 = v1;
    v126 = v23;
    v30 = *v24;
    v31 = *v20;
    v32 = *v21;
    v33 = *v22;
    sub_1000271D4(v118, (uint64_t)&v142, &qword_100642730);
    v135 = v33;
    v136 = v32;
    v139 = v31;
    v134 = v30;
    if (!v145)
    {
      sub_1000E4F7C(v30, v31, v32, v33);
      sub_1000E4F7C(v30, v31, v32, v33);
      sub_10000CB4C((uint64_t)&v142, &qword_100642730);
      goto LABEL_9;
    }
    sub_1000E4F7C(v30, v31, v32, v33);
    sub_1000E4F7C(v30, v31, v32, v33);
    v34 = sub_10006922C((uint64_t *)&unk_1006455F0);
    if ((swift_dynamicCast(&v149, &v142, (char *)&type metadata for Any + 8, v34, 6) & 1) == 0)
    {
LABEL_9:
      v1 = v29;
      v2 = v28;
      if (qword_1006411E8 != -1)
        swift_once(&qword_1006411E8, sub_1000A3F70);
      v35 = (id)qword_100657778;
      goto LABEL_12;
    }
    v35 = (id)v149;
    v1 = v29;
    v2 = v28;
LABEL_12:
    v4 = v27;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    v36 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter(v128);
    v37 = v36;
    v38 = *(_QWORD *)(v36 + 16);
    v39 = v139;
    v8 = v26;
    v40 = v125;
    if (!v38)
    {
LABEL_24:
      v73 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v122 + 8))(v127, v128, v73);
      v74 = v134;
      v75 = v135;
      sub_1000E4FD0(v134, v39, v136, v135);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v8, 1, 1, v40);
      goto LABEL_27;
    }
    swift_bridgeObjectRetain(v36);
    v124 = v37;
    v41 = (unsigned __int8 *)(v37 + 72);
    while (1)
    {
      v43 = (void *)*((_QWORD *)v41 - 3);
      v42 = *((_QWORD *)v41 - 2);
      v44 = *((_QWORD *)v41 - 1);
      v45 = *v41;
      v140 = *(_OWORD *)(v41 - 40);
      v155 = v140;
      *(_QWORD *)v156 = v43;
      *(_QWORD *)&v156[8] = v42;
      *(_QWORD *)&v156[16] = v44;
      v156[24] = v45;
      v151 = &_s11OutlineItemVN;
      v152 = &off_1005F0720;
      v46 = (_OWORD *)swift_allocObject(&unk_1005E74A0, 57, 7);
      v149 = (uint64_t)v46;
      v47 = *(_OWORD *)v156;
      v46[1] = v155;
      v46[2] = v47;
      *(_OWORD *)((char *)v46 + 41) = *(_OWORD *)&v156[9];
      sub_100092328((uint64_t)&v149, (uint64_t)v148);
      v48 = v140;
      swift_unknownObjectRetain(v140);
      sub_1000B1650(v43, v42, v44, v45);
      swift_unknownObjectRetain(v48);
      sub_1000B1650(v43, v42, v44, v45);
      v49 = sub_10006922C(&qword_100652EC8);
      if (!swift_dynamicCast(&v142, v148, v49, &_s11OutlineItemVN, 6))
      {
        sub_100068588(&v149);
        swift_unknownObjectRelease(v48);
        sub_1000B1664(v43, v42, v44, v45);
        goto LABEL_15;
      }
      v137 = v42;
      v138 = v44;
      *(_QWORD *)&v140 = v48;
      v50 = v142;
      v51 = (void *)v144;
      v52 = v145;
      v53 = v146;
      v54 = v147;
      sub_100068588(&v149);
      swift_unknownObjectRelease(v50);
      if (v54 == 255)
      {
        swift_unknownObjectRelease(v140);
        sub_1000B1664(v43, v137, v138, v45);
        goto LABEL_15;
      }
      v55 = v54;
      v133 = v45;
      v56 = (uint64_t)v134;
      v57 = v136;
      v58 = v135;
      v59 = v55;
      sub_1000E4F7C(v134, v139, v136, v135);
      sub_1000B1650(v51, v52, v53, v59);
      v129 = v51;
      v130 = v52;
      v131 = v53;
      v132 = v59;
      sub_100200624((uint64_t)v51, v52, v53, v59);
      v61 = v60;
      v63 = v62;
      sub_100200624(v56, v139, v57, v58);
      v66 = v65;
      if (v61 == v64 && v63 == v65)
        break;
      v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v64, v65, 0);
      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v66);
      sub_1000E4FD0(v134, v139, v136, v135);
      v68 = v129;
      v69 = v130;
      v70 = v131;
      v71 = v132;
      sub_1000B1664(v129, v130, v131, v132);
      sub_1000B1664(v68, v69, v70, v71);
      v72 = v133;
      if ((v67 & 1) != 0)
        goto LABEL_26;
      swift_unknownObjectRelease(v140);
      sub_1000B1664(v43, v137, v138, v72);
LABEL_15:
      v41 += 48;
      if (!--v38)
      {
        v37 = v124;
        swift_bridgeObjectRelease(v124);
        v1 = v115;
        v2 = v114;
        v4 = v113;
        v8 = v116;
        v40 = v125;
        v25 = v123;
        v39 = v139;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease_n(v63, 2);
    sub_1000E4FD0(v134, v139, v136, v135);
    v76 = v129;
    v77 = v130;
    v78 = v131;
    v79 = v132;
    sub_1000B1664(v129, v130, v131, v132);
    sub_1000B1664(v76, v77, v78, v79);
    v72 = v133;
LABEL_26:
    swift_bridgeObjectRelease_n(v124, 2);
    v8 = v116;
    v80 = v127;
    sub_1003E521C(&v155, (uint64_t)v116);
    v81 = v134;
    v39 = v139;
    v75 = v135;
    sub_1000E4FD0(v134, v139, v136, v135);
    v82 = v80;
    v74 = v81;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v82, v128);
    swift_unknownObjectRelease(v140);
    sub_1000B1664(v43, v137, v138, v72);
    v1 = v115;
    v2 = v114;
    v4 = v113;
    v40 = v125;
    v25 = v123;
LABEL_27:
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v40) == 1)
    {
      sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
      v83 = v74;
      v84 = v39;
      goto LABEL_34;
    }
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v121, v8, v40);
    v85 = v39;
    v86 = *(_QWORD *)&v119[v110];
    v142 = 0;
    v143 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(31);
    v149 = v142;
    v150 = v143;
    v87._countAndFlagsBits = 0xD00000000000001DLL;
    v87._object = v109;
    String.append(_:)(v87);
    v142 = (uint64_t)v74;
    v143 = v85;
    v144 = v136;
    LOBYTE(v145) = v75;
    v88 = _print_unlocked<A, B>(_:_:)(&v142, &v149, &type metadata for DOCSidebarItem, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v90 = v149;
    v89 = v150;
    v91 = Logger.UI.unsafeMutableAddressor(v88);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v91, v1);
    v92 = swift_bridgeObjectRetain_n(v89, 2);
    v93 = Logger.logObject.getter(v92);
    v95 = static os_log_type_t.info.getter(v94);
    if (os_log_type_enabled(v93, v95))
    {
      v96 = swift_slowAlloc(12, -1);
      v97 = swift_slowAlloc(32, -1);
      v142 = v97;
      *(_DWORD *)v96 = v108.n128_u32[0];
      swift_bridgeObjectRetain(v89);
      *(_QWORD *)(v96 + 4) = sub_1000544FC(v90, v89, &v142);
      swift_bridgeObjectRelease_n(v89, 3);
      _os_log_impl((void *)&_mh_execute_header, v93, v95, "[Pacer] %s", (uint8_t *)v96, 0xCu);
      swift_arrayDestroy(v97, 1, v107);
      v98 = v97;
      v40 = v125;
      swift_slowDealloc(v98, -1, -1);
      v99 = v96;
      v8 = v116;
      swift_slowDealloc(v99, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v89, 2);
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_release(v86);
    *(_QWORD *)&v100 = swift_bridgeObjectRelease(v89).n128_u64[0];
    v141.receiver = v119;
    v141.super_class = v112;
    v101 = objc_msgSendSuper2(&v141, "collectionView", v100, v106);
    v75 = v135;
    if (!v101)
      goto LABEL_41;
    v102 = v101;
    v103 = (void *)swift_dynamicCastClassUnconditional(v101, v111, 0, 0, 0);
    v104 = v121;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v103, "deselectItemAtIndexPath:animated:", isa, 1);

    v25 = v123;
    (*(void (**)(char *, uint64_t))(v123 + 8))(v104, v40);
    v83 = v134;
    v84 = v139;
LABEL_34:
    sub_1000E4FD0(v83, v84, v136, v75);
    if (v126 == v120)
    {
      swift_bridgeObjectRelease_n(v106, 2);
      return;
    }
    v24 = (void **)&v117[4 * v126];
    v20 = (uint64_t *)(v24 + 1);
    v21 = (uint64_t *)(v24 + 2);
    v22 = (unsigned __int8 *)(v24 + 3);
    v23 = v126 + 1;
    if (!__OFADD__(v126, 1))
      continue;
    break;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

id sub_1003E4A2C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  objc_class *v26;
  id result;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  double v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  objc_super v54;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  if (!a1)
    return 0;
  v48 = (char *)&v48 - v16;
  v49 = v4;
  v50 = v7;
  v51 = v5;
  v17 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (v18 && (v19 = *(void **)(v18 + 24)) != 0)
  {
    type metadata accessor for DOCSidebarItemCell(0);
    v20 = a1;
    v21 = v19;
    v22 = static NSObject.== infix(_:_:)(v20, v21);

    if ((v22 & 1) != 0)
    {

      v23 = *(_QWORD *)&v2[v17];
      if (v23)
      {
        v24 = *(void **)(v23 + 32);
        sub_1000B1650(v24, *(_QWORD *)(v23 + 40), *(_QWORD *)(v23 + 48), *(_BYTE *)(v23 + 56));
        return v24;
      }
      return 0;
    }
  }
  else
  {
    v25 = a1;
  }
  v26 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v54.receiver = v2;
  v54.super_class = v26;
  result = objc_msgSendSuper2(&v54, "collectionView");
  if (result)
  {
    v28 = result;
    v29 = type metadata accessor for DOCSidebarCollectionView();
    v30 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v28, v29, 0, 0, 0), "indexPathForCell:", a1);

    v31 = v49;
    if (v30)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v32 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v32(v10, v15, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v33 = (uint64_t)v48;
        v32(v48, v10, v11);
        v24 = (void *)sub_1003E1E24(v33, 1);

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v33, v11);
        return v24;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    v34 = sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
    v35 = Logger.Sidebar.unsafeMutableAddressor(v34);
    v37 = v50;
    v36 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v35, v31);
    v38 = a1;
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      v48 = (char *)swift_slowAlloc(64, -1);
      v53 = v48;
      *(_DWORD *)v41 = 136315394;
      v52 = sub_1000544FC(0xD000000000000011, 0x8000000100531530, (uint64_t *)&v53);
      *(_QWORD *)&v42 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53).n128_u64[0];
      *(_WORD *)(v41 + 12) = 2080;
      v43 = objc_msgSend(v38, "description", v42);
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v45;

      v52 = sub_1000544FC(v44, v46, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);

      swift_bridgeObjectRelease(v46);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s: Could not find sidebar item (can determine index path) for cell: %s.", (uint8_t *)v41, 0x16u);
      v47 = v48;
      swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v31);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v31);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1003E4EF0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  int v34;
  id v35;
  uint64_t v36;
  id v37;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v35 = a1;
    v8 = sub_1003E4A2C(a1);
    if ((_BYTE)v11 == 0xFF)
    {
      v17 = Logger.Sidebar.unsafeMutableAddressor(v8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
      v18 = v35;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter(v19);
      v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        v22 = swift_slowAlloc(22, -1);
        v34 = v21;
        v23 = v22;
        v35 = (id)swift_slowAlloc(64, -1);
        v37 = v35;
        *(_DWORD *)v23 = 136315394;
        v36 = sub_1000544FC(0x7461507865646E69, 0xEF293A726F662868, (uint64_t *)&v37);
        v33 = v19;
        *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37).n128_u64[0];
        *(_WORD *)(v23 + 12) = 2080;
        v25 = objc_msgSend(v18, "description", v24, v23 + 14);
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        v36 = sub_1000544FC(v26, v28, (uint64_t *)&v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);

        swift_bridgeObjectRelease(v28);
        v29 = v33;
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v34, "%s: Could not find sidebar index path for cell: %s.", (uint8_t *)v23, 0x16u);
        v30 = v35;
        swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v23, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v31 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a2, 1, 1, v31);
    }
    else
    {
      v12 = v8;
      v13 = v9;
      v14 = v10;
      v15 = v11;
      sub_1000A3814(v8, v9, v10, v11, a2);
      sub_1000B1664(v12, v13, v14, v15);

    }
  }
  else
  {
    v16 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1003E521C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  BOOL v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  ValueMetadata *v29;
  _UNKNOWN **v30;
  char v31;
  _QWORD v32[2];
  __int128 v33;
  _OWORD v34[2];

  v3 = a1[1];
  v33 = *a1;
  v34[0] = v3;
  *(_OWORD *)((char *)v34 + 9) = *(__int128 *)((char *)a1 + 25);
  v29 = &_s14OutlineSectionVN;
  v30 = &off_1005F0710;
  v27 = v33;
  swift_unknownObjectRetain(v33);
  v4 = sub_10006922C((uint64_t *)&unk_100652ED0);
  swift_dynamicCast(v32, &v27, v4, &_s14OutlineSectionVN, 7);
  v5 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v6 = NSDiffableDataSourceSnapshot.indexOfSection(_:)(v32, v5);
  if ((v7 & 1) != 0)
    goto LABEL_10;
  v8 = v6;
  v9 = NSDiffableDataSourceSnapshot.indexOfItem(_:)(&v33, v5);
  if ((v10 & 1) != 0)
    goto LABEL_10;
  v11 = v9;
  v12 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v32, v5);
  v13 = v12;
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease(v12);
    goto LABEL_10;
  }
  v25 = v11;
  v15 = *(void **)(v12 + 48);
  v14 = *(_QWORD *)(v12 + 56);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = *(_BYTE *)(v12 + 72);
  v26 = *(_OWORD *)(v12 + 32);
  v18 = *(_QWORD *)(v12 + 32);
  swift_unknownObjectRetain(v18);
  sub_1000B1650(v15, v14, v16, v17);
  swift_bridgeObjectRelease(v13);
  v27 = v26;
  v28 = v15;
  v29 = (ValueMetadata *)v14;
  v30 = (_UNKNOWN **)v16;
  v31 = v17;
  v19 = NSDiffableDataSourceSnapshot.indexOfItem(_:)(&v27, v5);
  if ((v20 & 1) != 0)
  {
LABEL_8:
    swift_unknownObjectRelease(v18);
    sub_1000B1664(v15, v14, v16, v17);
LABEL_10:
    v24 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a2, 1, 1, v24);
    return swift_unknownObjectRelease(v32[0]);
  }
  v21 = __OFSUB__(v25, v19);
  result = v25 - v19;
  if (!v21)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      IndexPath.init(row:section:)(result, v8);
      swift_unknownObjectRelease(v18);
      sub_1000B1664(v15, v14, v16, v17);
      v23 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
      return swift_unknownObjectRelease(v32[0]);
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_1003E5428(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  id result;
  void *v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  objc_super v40;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v36 - v14;
  if (!a1)
    return 0;
  v36 = v3;
  v37 = v4;
  v16 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v40.receiver = v1;
  v40.super_class = v16;
  v17 = a1;
  result = objc_msgSendSuper2(&v40, "collectionView");
  if (result)
  {
    v19 = result;
    v20 = type metadata accessor for DOCSidebarCollectionView();
    v21 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v19, v20, 0, 0, 0), "indexPathForCell:", v17);

    if (v21)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v21);

      v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v22(v8, v13, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      v24 = v37;
      if (v23 != 1)
      {
        v22(v15, v8, v9);
        v25 = sub_1003E1420((uint64_t)v15, 0);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        return (id)v25;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      v24 = v37;
    }
    v26 = sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    v27 = Logger.UI.unsafeMutableAddressor(v26);
    v28 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v38, v27, v36);
    v29 = v17;
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v32 = 138412290;
      v39 = v29;
      v29 = v29;
      v24 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *v33 = a1;

      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Couldn't find section: unable to determine indexPath for %@", v32, 0xCu);
      v34 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v33, 1, v34);
      v35 = v33;
      v28 = v36;
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {

      v30 = v29;
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v38, v28);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1003E57D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = IndexPath.section.getter(a1);
  v4 = sub_10006922C((uint64_t *)&unk_1006455E0);
  v5 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v4);
  v6 = v5;
  if ((v3 & 0x8000000000000000) != 0 || v3 >= *(_QWORD *)(v5 + 16))
    goto LABEL_8;
  v16 = *(_OWORD *)(v5 + 16 * v3 + 32);
  v7 = v16;
  swift_unknownObjectRetain(v16);
  swift_bridgeObjectRelease(v6);
  v18 = v16;
  v8 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v18, v4);
  v9 = IndexPath.item.getter(v8);
  if ((v9 & 0x8000000000000000) != 0 || v9 >= *(_QWORD *)(v8 + 16))
  {
    swift_unknownObjectRelease(v16);
    v5 = v8;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0uLL;
    goto LABEL_9;
  }
  v10 = v8 + 48 * v9;
  v17 = *(_OWORD *)(v10 + 32);
  v11 = *(void **)(v10 + 48);
  v12 = *(_QWORD *)(v10 + 56);
  v13 = *(_QWORD *)(v10 + 64);
  v14 = *(_BYTE *)(v10 + 72);
  swift_unknownObjectRetain(*(_QWORD *)(v10 + 32));
  sub_1000B1650(v11, v12, v13, v14);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease(v8);
  v15 = v17;
LABEL_9:
  *(_OWORD *)a2 = v15;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  *(_BYTE *)(a2 + 40) = v14;
}

double sub_1003E5934(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v24 = a3;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  v22 = a2;
  if (v13)
  {
    v14 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v23 = *(_QWORD *)(v7 + 72);
    v15 = a2;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain(v15);
    v17 = a4 & 1;
    while (1)
    {
      v16(v12, v14, v6);
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v18(v12, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v24, "deselectItemAtIndexPath:animated:", isa, v17);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v14 += v23;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain(a2);
LABEL_7:
    v18(v12, 1, 1, v6);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  return result;
}

double sub_1003E5AEC(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  id v26;
  double result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  Class v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v38 - v17;
  if (objc_msgSend(a1, "isCancelled", v16))
  {
    v19 = *(_QWORD *)(a2 + 16);
    v39 = a2;
    if (v19)
    {
      v41 = a3;
      v20 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v21 = *(_QWORD *)(v9 + 72);
      v22 = a2;
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain(v22);
      while (1)
      {
        v23(v18, v20, v8);
        v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v24(v18, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v41, "selectItemAtIndexPath:animated:scrollPosition:", isa, 0, 0);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v20 += v21;
        if (!--v19)
          goto LABEL_15;
      }
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain(a2);
LABEL_15:
      v24(v18, 1, 1, v8);
    }
LABEL_18:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v39).n128_u64[0];
    return result;
  }
  v26 = objc_msgSend(a3, "indexPathsForSelectedItems");
  if (v26)
  {
    v28 = v26;
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v8);

    swift_bridgeObjectRetain(a2);
    v30 = swift_bridgeObjectRetain(v29);
    LOBYTE(v28) = sub_10023DD70(v30, a2);
    swift_bridgeObjectRelease_n(v29, 2);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
    if ((v28 & 1) != 0)
    {
      v31 = *(_QWORD *)(a2 + 16);
      v39 = a2;
      if (v31)
      {
        v32 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
        v40 = *(_QWORD *)(v9 + 72);
        v41 = a3;
        v33 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        swift_bridgeObjectRetain(a2);
        v34 = a4 & 1;
        while (1)
        {
          v33(v14, v32, v8);
          v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v35(v14, 0, 1, v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
          v36 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v41, "deselectItemAtIndexPath:animated:", v36, v34);

          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          v32 += v40;
          if (!--v31)
            goto LABEL_17;
        }
      }
      else
      {
        v37 = a2;
        v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        swift_bridgeObjectRetain(v37);
LABEL_17:
        v35(v14, 1, 1, v8);
      }
      goto LABEL_18;
    }
  }
  return result;
}

void sub_1003E5E30(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  v3 = objc_msgSendSuper2(&v6, "collectionView");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for DOCSidebarCollectionView();
    objc_msgSend((id)swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0), "setEditing:", a2 & 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCSidebarViewController.indexPathForPreferredFocusedView(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];

  v50 = a1;
  v51 = a2;
  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v47 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v48 = (char *)&v45 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v45 - v23;
  v25 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath, v52, 0, 0);
  sub_1000271D4(v25, (uint64_t)v13, (uint64_t *)&unk_100642710);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v26(v13, 1, v14) == 1)
  {
    sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100642710);
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v24, v13, v14);
    v27 = sub_1003E1420((uint64_t)v24, 0);
    if (v27)
    {
      v28 = v27;
      if ((*(_BYTE *)(v27 + 48) & 1) != 0)
      {
        sub_10031A1E8((uint64_t)v24, 0xD000000000000017, 0x800000010051BB50, (uint64_t)v10);
        v29 = swift_unknownObjectRelease(v28);
        (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v24, v14, v29);
        if (v26(v10, 1, v14) != 1)
        {
          v43 = (void (*)(uint64_t, char *, uint64_t))v46;
          v46(v21, v10, v14);
          v39 = v51;
          v43(v51, v21, v14);
          goto LABEL_17;
        }
        sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_100642710);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
        swift_unknownObjectRelease(v28);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    }
  }
  v30 = sub_10004DB48();
  if ((_BYTE)v33 != 0xFF)
  {
    v34 = v30;
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_1000A3814(v30, v31, v32, v33, (uint64_t)v7);
    if (v26(v7, 1, v14) == 1)
    {
      sub_1000B1664(v34, v35, v36, v37);
LABEL_14:
      v39 = v51;
      sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
      v38 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v39, v38, 1, v14);
    }
    v40 = (uint64_t)v48;
    v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v46(v48, v7, v14);
    v7 = v49;
    sub_10031A1E8(v40, 0xD000000000000015, 0x8000000100531510, (uint64_t)v49);
    sub_1000B1664(v34, v35, v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v40, v14);
    if (v26(v7, 1, v14) == 1)
      goto LABEL_14;
    v42 = (void (*)(uint64_t, char *, uint64_t))v46;
    v41 = v47;
    v46(v47, v7, v14);
    v39 = v51;
    v42(v51, v41, v14);
LABEL_17:
    v38 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v39, v38, 1, v14);
  }
  v38 = 1;
  v39 = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v39, v38, 1, v14);
}

_QWORD *sub_1003E6434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a2;
  v36 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v34 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v30[1] = v2;
    v31 = v11;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v30[0] = a1;
    swift_bridgeObjectRetain(a1);
    v12 = _swiftEmptyArrayStorage;
    v13 = v36;
    v32 = v8;
    do
    {
      v33(v8, v10, v13);
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v14(v8, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v13) == 1)
      {
        a1 = v30[0];
        goto LABEL_15;
      }
      v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v16 = v4;
      v17 = (uint64_t)v34;
      v15(v34, v8, v13);
      v39 = sub_1003E1E24(v17, 1);
      v37 = v19;
      v38 = v18;
      v21 = v20;
      v22 = v13;
      v23 = ~v20;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v22);
      if (v23)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
          v12 = sub_100153AE8(0, v12[2] + 1, 1, v12);
        v4 = v16;
        v25 = v12[2];
        v24 = v12[3];
        if (v25 >= v24 >> 1)
          v12 = sub_100153AE8((_QWORD *)(v24 > 1), v25 + 1, 1, v12);
        v12[2] = v25 + 1;
        v26 = &v12[4 * v25];
        v27 = v38;
        v26[4] = v39;
        v26[5] = v27;
        v26[6] = v37;
        *((_BYTE *)v26 + 56) = v21;
      }
      else
      {
        v4 = v16;
      }
      v8 = v32;
      v10 += v31;
      --v9;
      v13 = v36;
    }
    while (v9);
    a1 = v30[0];
    v14(v32, 1, 1, v36);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain(a1);
    v12 = _swiftEmptyArrayStorage;
    v28(v8, 1, 1, v36);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return v12;
}

uint64_t sub_1003E66C0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  __n128 v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.UI.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.info.getter(v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v19 = a1;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(32, -1);
    v21 = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain(a2);
    v20 = sub_1000544FC(v19, a2, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "[Pacer] %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_16didUpdateFocusIn4withySo012UICollectionC0C_So0kchG7ContextCSo27UIFocusAnimationCoordinatorCtF_0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  int v26;
  id v27;
  void *v28;
  void (*v29)(char *, char *, uint64_t);
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  char v37;
  char v38;
  BOOL v39;
  _BYTE *v40;
  void *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  id v47;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v43 - v19;
  v21 = type metadata accessor for DOCSidebarCollectionView();
  v22 = (void *)swift_dynamicCastClass(a1, v21);
  if (v22)
  {
    v44 = v8;
    v46 = v2;
    v47 = v22;
    v45 = a1;
    v23 = objc_msgSend(a2, "previouslyFocusedIndexPath");
    if (v23)
    {
      v24 = v23;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v23);

      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v20, v11, v5);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v25(v20, 0, 1, v5);
      v26 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5) != 1)
      {
LABEL_7:
        sub_10000CB4C((uint64_t)v20, (uint64_t *)&unk_100642710);
        v27 = objc_msgSend(a2, "nextFocusedIndexPath");
        if (v27)
        {
          v28 = v27;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v27);

          v29 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v29(v17, v11, v5);
          v25(v17, 0, 1, v5);
          v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
          if (v30(v17, 1, v5) != 1)
          {
            sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_100642710);
            if (v26)
            {
              v31 = objc_msgSend(a2, "nextFocusedIndexPath");
              if (v31)
              {
                v32 = v31;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v31);

                v29(v14, v11, v5);
                v25(v14, 0, 1, v5);
                if (v30(v14, 1, v5) != 1)
                {
                  v29(v44, v14, v5);
                  v33 = objc_msgSend(v47, "indexPathsForSelectedItems");
                  v34 = v46;
                  if (v33)
                  {
                    v35 = v33;
                    v36 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v5);

                  }
                  else
                  {
                    v36 = _swiftEmptyArrayStorage;
                  }
                  v41 = v45;
                  __chkstk_darwin(v33);
                  v42 = v44;
                  *(&v43 - 2) = (uint64_t)v44;
                  v39 = sub_100062898((uint64_t (*)(char *))sub_1003E6E2C, (_BOOL8)(&v43 - 4), (uint64_t)v36);
                  (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v5);
                  swift_bridgeObjectRelease(v36);
                  v38 = 0;
                  v37 = 1;
                  v40 = v47;
                  goto LABEL_20;
                }
              }
              else
              {
                v25(v14, 1, 1, v5);
              }
              sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100642710);
            }
            v38 = 0;
            v37 = 1;
LABEL_19:
            v39 = 1;
            v34 = v46;
            v40 = v47;
            v41 = v45;
LABEL_20:
            *(_BYTE *)(v34 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus) = v37;
            v40[OBJC_IVAR____TtC5Files24DOCSidebarCollectionView_requireCanBecomeFocusedTrue] = v38;
            objc_msgSend(v40, "setSelectionFollowsFocus:", (sub_100237858() != 2) & v39);

            return;
          }
        }
        else
        {
          v25(v17, 1, 1, v5);
        }
        sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_100642710);
        v37 = 0;
        v38 = 1;
        goto LABEL_19;
      }
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v25(v20, 1, 1, v5);
    }
    v26 = 1;
    goto LABEL_7;
  }
}

uint64_t sub_1003E6CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100652EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E6D08(uint64_t a1)
{
  sub_1003E6D3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

void sub_1003E6D3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1)
  {
    swift_unknownObjectRelease(a1);
    sub_1000B1664(a3, a4, a5, a6);
  }
}

uint64_t sub_1003E6D88()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255)
    sub_1000E4FD0(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1);
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1003E6DC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001B1774(a1, *(_QWORD *)(v1 + 16)) & 1;
}

double sub_1003E6DE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003E5934(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1003E6DF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 33, 7);
}

double sub_1003E6E20(void *a1)
{
  uint64_t v1;

  return sub_1003E5AEC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1003E6E2C(uint64_t a1)
{
  return sub_1003E6DC4(a1) & 1;
}

id sub_1003E6E4C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionEmptyDataSource()), "init");
  qword_100652EE0 = (uint64_t)result;
  return result;
}

id sub_1003E6F68()
{
  return sub_1001405E0(0, type metadata accessor for DOCItemCollectionEmptyDataSource);
}

uint64_t type metadata accessor for DOCItemCollectionEmptyDataSource()
{
  return objc_opt_self(_TtC5FilesP33_664BDA1BFD913E39306EB619EE43EF3832DOCItemCollectionEmptyDataSource);
}

uint64_t sub_1003E6F9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews, v4, 1, 0);
  v2 = *v1;
  *v1 = (uint64_t)_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_1003E6FF0(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD v18[5];
  unint64_t v19;

  v3 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v4 = static os_log_type_t.debug.getter();
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v6 + 56) = type metadata accessor for DOCItemCollectionView();
  *(_QWORD *)(v6 + 64) = sub_1000AE110();
  *(_QWORD *)(v6 + 32) = a1;
  v7 = a1;
  os_log(_:dso:log:type:_:)("Mark collectionView as reusable %@", 34, 2, &_mh_execute_header, v3, v4, v6);

  swift_bridgeObjectRelease(v6);
  v8 = objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_1005E7568, 24, 7);
  *(_QWORD *)(v9 + 16) = v7;
  v10 = swift_allocObject(&unk_1005E7590, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1003E7464;
  *(_QWORD *)(v10 + 24) = v9;
  v18[4] = sub_10006657C;
  v19 = v10;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10006655C;
  v18[3] = &unk_1005E75A8;
  v11 = _Block_copy(v18);
  v12 = v19;
  v13 = v7;
  swift_retain();
  swift_release(v12);
  objc_msgSend((id)v8, "performWithoutAnimation:", v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 105, 86, 40, 1);
  swift_release(v10);
  if ((v8 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v15 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess(v15, v18, 33, 0);
  v13 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v10 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v14 >> 1)
LABEL_5:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v10 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v13);
  specialized Array._endMutation()(v16);
  swift_endAccess(v18);
  return swift_release(v9);
}

id sub_1003E7238(char *a1)
{
  char *v2;
  char *v3;
  id v4;

  if (qword_100641130 != -1)
    swift_once(&qword_100641130, sub_1003E6E4C);
  objc_msgSend(a1, "setDataSource:", qword_100652EE0);
  objc_msgSend(a1, "setPrefetchDataSource:", 0);
  objc_msgSend(a1, "setHidden:", 0);
  objc_msgSend(a1, "reloadData");
  objc_msgSend(a1, "setDelegate:", 0);
  v2 = &a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakAssign(v2, 0);
  v3 = &a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakAssign(v3, 0);
  objc_msgSend(a1, "setEditing:", 0);
  v4 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  objc_msgSend(a1, "setCollectionViewLayout:animated:", v4, 0);

  objc_msgSend(a1, "_clearSafeAreaInsets");
  objc_msgSend(a1, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(a1, "setContentOffset:", 0.0, 0.0);
  return objc_msgSend(a1, "setContentSize:", 0.0, 0.0);
}

id sub_1003E73EC(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCItemCollectionViewPool);
}

uint64_t sub_1003E7440()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003E7464()
{
  uint64_t v0;

  return sub_1003E7238(*(char **)(v0 + 16));
}

uint64_t sub_1003E746C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003E747C(void *a1, uint64_t a2, char *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  objc_class *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v6 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews, v34, 0, 0);
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    if (v7 < 0)
      v16 = *v6;
    else
      v16 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v6);
    v17 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v7);
    if (v17)
    {
LABEL_3:
      swift_beginAccess(v6, v33, 33, 0);
      v8 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        if (v8 < 0)
          v28 = *v6;
        else
          v28 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v6);
        v29 = _CocoaArrayWrapper.endIndex.getter(v28);
        swift_bridgeObjectRelease(v8);
        if (v29)
        {
LABEL_5:
          v8 = *v6;
          if (!((unint64_t)*v6 >> 62))
          {
            v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v9)
              goto LABEL_7;
            goto LABEL_28;
          }
LABEL_24:
          if (v8 < 0)
            v30 = v8;
          else
            v30 = v8 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v8);
          v9 = _CocoaArrayWrapper.endIndex.getter(v30);
          swift_bridgeObjectRelease(v8);
          if (v9)
          {
LABEL_7:
            if ((v8 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_31;
              }
              v10 = (id *)*(id *)(v8 + 32);
LABEL_10:
              v8 = (uint64_t)v10;
              v9 = *v6;
              if (!((unint64_t)*v6 >> 62))
              {
                if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_12:
                  sub_10045C0BC(0, 1);
                  swift_endAccess(v33);
                  objc_msgSend((id)v8, "setCollectionViewLayout:animated:", a1, 0);
                  sub_10000EB08((void *)v8, a3);
                  v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(v11);
                  v13 = static os_log_type_t.debug.getter();
                  v14 = sub_10006922C((uint64_t *)&unk_100644560);
                  v15 = swift_allocObject(v14, 72, 7);
                  *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
                  *(_QWORD *)(v15 + 56) = type metadata accessor for DOCItemCollectionView();
                  *(_QWORD *)(v15 + 64) = sub_1000AE110();
                  *(_QWORD *)(v15 + 32) = v8;
                  (id)v8;
                  os_log(_:dso:log:type:_:)("Reusing collectionView %@", 25, 2, &_mh_execute_header, v12, v13, v15);

                  swift_bridgeObjectRelease(v15);
                  return;
                }
                goto LABEL_35;
              }
LABEL_31:
              if (v9 < 0)
                v31 = v9;
              else
                v31 = v9 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v9);
              v32 = _CocoaArrayWrapper.endIndex.getter(v31);
              swift_bridgeObjectRelease(v9);
              if (v32)
                goto LABEL_12;
LABEL_35:
              __break(1u);
              return;
            }
LABEL_29:
            v10 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
            goto LABEL_10;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
      }
      else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      __break(1u);
      goto LABEL_24;
    }
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v18 = *(void **)(a2 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_configuration);
  v19 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  v20 = objc_allocWithZone(v19);
  v21 = sub_1003EF448(v18, a1);
  sub_10000EB08(v21, a3);
  v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v22);
  v24 = static os_log_type_t.debug.getter();
  v25 = sub_10006922C((uint64_t *)&unk_100644560);
  v26 = swift_allocObject(v25, 72, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v26 + 56) = v19;
  *(_QWORD *)(v26 + 64) = sub_1000AE110();
  *(_QWORD *)(v26 + 32) = v21;
  v27 = v21;
  os_log(_:dso:log:type:_:)("No collection view to reuse. Creating a new one %@", 50, 2, &_mh_execute_header, v23, v24, v26);

  objc_msgSend(v27, "_setShouldResetInitialLayoutOnDataSourceChange:", 1, swift_bridgeObjectRelease(v26).n128_f64[0]);
}

void sub_1003E77F8()
{
  uint64_t v0;

}

id sub_1003E7834()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  objc_super v7;
  _QWORD aBlock[5];
  uint64_t v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_rootItemCollection];
  v2 = swift_allocObject(&unk_1005E7A40, 24, 7);
  *(_QWORD *)(v2 + 16) = v1;
  aBlock[4] = sub_1003EA7E8;
  v9 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E7A58;
  v3 = _Block_copy(aBlock);
  v4 = v9;
  v5 = v1;
  swift_release(v4);
  DOCRunInMainThread(v3);
  _Block_release(v3);

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCLegacyWebDAVProviderSource();
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1003E7A30()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v5[5];
  uint64_t v6;

  v1 = swift_allocObject(&unk_1005E79A0, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v5[4] = sub_1003EA808;
  v6 = v1;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10004A82C;
  v5[3] = &unk_1005E79B8;
  v2 = _Block_copy(v5);
  v3 = v6;
  v4 = v0;
  swift_release(v3);
  DOCRunInMainThread(v2);
  _Block_release(v2);
}

id sub_1003E7AD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  uint64_t v14;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.UI.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "WebDAV refresh the eject state", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v12 = *(void **)(a1 + OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_rootItemCollection);
  objc_msgSend(v12, "doc_stopObserving");
  return objc_msgSend(v12, "doc_startObserving");
}

void sub_1003E7C04(void *a1, uint64_t a2, char *a3, void (*a4)(_QWORD, uint64_t, __n128), uint64_t a5, char a6)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  uint64_t v38;

  if (a2)
  {
    v10 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = sub_10006922C((uint64_t *)&unk_100644560);
    v13 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1004D4CE0;
    v14 = objc_msgSend(a3, "identifier");
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    *(_QWORD *)(v13 + 56) = &type metadata for String;
    *(_QWORD *)(v13 + 64) = sub_10006A638();
    *(_QWORD *)(v13 + 32) = v15;
    *(_QWORD *)(v13 + 40) = v17;
    v18 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v13 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v13 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v13 + 72) = v18;
    os_log(_:dso:log:type:_:)("Error when trying to get the root item for the provider %@ error %@", 67, 2, &_mh_execute_header, v10, v11, v13);

    v19 = swift_bridgeObjectRelease(v13);
    v20 = a2;
LABEL_3:
    a4(0, v20, v19);
    return;
  }
  if (!a1)
  {
    v29 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = sub_10006922C((uint64_t *)&unk_100644560);
    v32 = swift_allocObject(v31, 72, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
    v33 = objc_msgSend(a3, "identifier");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    *(_QWORD *)(v32 + 56) = &type metadata for String;
    *(_QWORD *)(v32 + 64) = sub_10006A638();
    *(_QWORD *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = v36;
    os_log(_:dso:log:type:_:)("Error when trying to get the root item for the provider %@", 58, 2, &_mh_execute_header, v29, v30, v32);

    v19 = swift_bridgeObjectRelease(v32);
    v20 = 0;
    goto LABEL_3;
  }
  v23 = *(void **)&a3[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
  v24 = swift_allocObject(&unk_1005E7658, 49, 7);
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = a4;
  *(_QWORD *)(v24 + 32) = a5;
  *(_QWORD *)(v24 + 40) = a3;
  *(_BYTE *)(v24 + 48) = a6 & 1;
  v37[4] = sub_1003E9E10;
  v38 = v24;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 1107296256;
  v37[2] = sub_100175118;
  v37[3] = &unk_1005E7670;
  v25 = _Block_copy(v37);
  v26 = v38;
  v27 = a1;
  swift_retain();
  v28 = a3;
  objc_msgSend(v23, "fetchURLForItem:completionHandler:", v27, v25, swift_release(v26).n128_f64[0]);
  _Block_release(v25);

}

uint64_t sub_1003E7EF8(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD, uint64_t, __n128), uint64_t a5, char *a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _BOOL8 v39;
  BOOL v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  double v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  NSURL *v68;
  void (*v69)(char *, char *, uint64_t);
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(_QWORD, uint64_t, __n128);
  _QWORD aBlock[5];
  uint64_t v75;

  v72 = a5;
  v73 = a4;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v64 - v21;
  if (a2)
  {
    v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
    v24 = static os_log_type_t.error.getter(v23);
    v25 = sub_10006922C((uint64_t *)&unk_100644560);
    v26 = swift_allocObject(v25, 112, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v26 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v26 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v26 + 32) = a3;
    v27 = a3;
    v28 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v26 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v26 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v26 + 72) = v28;
    os_log(_:dso:log:type:_:)("Error when trying to get fetch the url for item %@ error %@", 59, 2, &_mh_execute_header, v23, v24, v26);

    v29 = swift_bridgeObjectRelease(v26);
    v30 = a2;
    return v73(0, v30, v29);
  }
  v70 = a7;
  v71 = a6;
  v31 = v20;
  sub_1002320B8(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v31) == 1)
  {
    v32 = sub_100157D6C((uint64_t)v14);
    v33 = *(id *)DOCLog.UI.unsafeMutableAddressor(v32);
    v34 = static os_log_type_t.error.getter(v33);
    v35 = sub_10006922C((uint64_t *)&unk_100644560);
    v36 = swift_allocObject(v35, 72, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v36 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v36 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v36 + 32) = a3;
    v37 = a3;
    os_log(_:dso:log:type:_:)("Error when trying to get fetch the url for item %@", 50, 2, &_mh_execute_header, v33, v34, v36);

    v29 = swift_bridgeObjectRelease(v36);
    v30 = 0;
    return v73(0, v30, v29);
  }
  v69 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v66 = v31;
  v69(v22, v14, v31);
  v39 = URL.startAccessingSecurityScopedResource()();
  v40 = v39;
  v41 = *(id *)DOCLog.UI.unsafeMutableAddressor(v39);
  LODWORD(v68) = static os_log_type_t.debug.getter(v41);
  v42 = sub_10006922C((uint64_t *)&unk_100644560);
  v43 = swift_allocObject(v42, 112, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1004D4CE0;
  URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
  v45 = v44;
  *(_QWORD *)(v43 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v43 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v43 + 32) = v45;
  *(_QWORD *)(v43 + 96) = &type metadata for Bool;
  *(_QWORD *)(v43 + 104) = &protocol witness table for Bool;
  LOBYTE(v45) = v40;
  *(_BYTE *)(v43 + 72) = v40;
  os_log(_:dso:log:type:_:)("Start accessing the url %@ accessing %d", 39, 2, &_mh_execute_header, v41, v68, v43);

  swift_bridgeObjectRelease(v43);
  v46 = v71;
  v68 = *(NSURL **)&v71[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_fileManager];
  URL._bridgeToObjectiveC()(v68);
  v67 = v47;
  v48 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v49 = v16;
  v65 = v16;
  v50 = v66;
  v48(v18, v22, v66);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = v52 + v17;
  v54 = ((v53 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_1005E76A8, v54 + 9, v51 | 7);
  v56 = (v53 & 0xFFFFFFFFFFFFFFF8) + v55;
  v69((char *)(v55 + v52), v18, v50);
  *(_BYTE *)(v55 + v53) = v45;
  v57 = v72;
  *(_QWORD *)(v56 + 8) = v73;
  *(_QWORD *)(v56 + 16) = v57;
  v58 = v55 + v54;
  *(_QWORD *)v58 = v46;
  *(_BYTE *)(v58 + 8) = v70 & 1;
  aBlock[4] = sub_1003E9EAC;
  v75 = v55;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003E9388;
  aBlock[3] = &unk_1005E76C0;
  v59 = _Block_copy(aBlock);
  v60 = v75;
  swift_retain();
  v61 = v46;
  *(_QWORD *)&v62 = swift_release(v60).n128_u64[0];
  v63 = v67;
  -[NSURL getFileProviderServicesForItemAtURL:completionHandler:](v68, "getFileProviderServicesForItemAtURL:completionHandler:", v67, v59, v62);
  _Block_release(v59);

  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v22, v50);
}

void sub_1003E8430(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD, uint64_t, __n128), uint64_t a6, void *a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  void (*v57)(_QWORD, uint64_t, __n128);
  _QWORD aBlock[5];
  uint64_t v59;

  v56 = a6;
  v57 = a5;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v18 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
    v24 = v23;
    *(_QWORD *)(v22 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v22 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v22 + 32) = v24;
    v25 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v22 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 72) = v25;
    os_log(_:dso:log:type:_:)("Error when trying to get the services for the url %@ error %@", 61, 2, &_mh_execute_header, v19, v20, v22);

    v26 = swift_bridgeObjectRelease(v22);
    if ((a4 & 1) != 0)
      URL.stopAccessingSecurityScopedResource()();
    v27 = a2;
  }
  else
  {
    v55 = a4;
    if (a1)
    {
      v28 = sub_1003E9F6C(a1);
      if (v29)
      {
        v30 = v29;
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
        v54 = v28;
        v31((char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v14);
        v32 = *(unsigned __int8 *)(v15 + 80);
        v33 = (v32 + 33) & ~v32;
        v34 = (v16 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
        v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
        v36 = swift_allocObject(&unk_1005E76F8, v35 + 9, v32 | 7);
        *(_BYTE *)(v36 + 16) = v54 & 1;
        *(_QWORD *)(v36 + 24) = v30;
        *(_BYTE *)(v36 + 32) = v55 & 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v36 + v33, v18, v14);
        v37 = (_QWORD *)(v36 + v34);
        v38 = v56;
        *v37 = v57;
        v37[1] = v38;
        v39 = v36 + v35;
        *(_QWORD *)v39 = a7;
        *(_BYTE *)(v39 + 8) = a8 & 1;
        aBlock[4] = sub_1003EA0E8;
        v59 = v36;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100083540;
        aBlock[3] = &unk_1005E7710;
        v40 = _Block_copy(aBlock);
        v41 = v59;
        v42 = v30;
        swift_retain();
        v43 = a7;
        objc_msgSend(v42, "getFileProviderConnectionWithCompletionHandler:", v40, swift_release(v41).n128_f64[0]);
        _Block_release(v40);

        return;
      }
      v44 = *(id *)DOCLog.UI.unsafeMutableAddressor(v28);
      v50 = static os_log_type_t.error.getter(v44);
      v51 = sub_10006922C((uint64_t *)&unk_100644560);
      v47 = swift_allocObject(v51, 72, 7);
      *(_OWORD *)(v47 + 16) = xmmword_1004D9670;
      URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
      v53 = v52;
      *(_QWORD *)(v47 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v47 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v47 + 32) = v53;
      os_log(_:dso:log:type:_:)("Error when trying to get the webDAV disconnection service for the url %@", 72, 2, &_mh_execute_header, v44, v50, v47);
    }
    else
    {
      v44 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
      v45 = static os_log_type_t.error.getter(v44);
      v46 = sub_10006922C((uint64_t *)&unk_100644560);
      v47 = swift_allocObject(v46, 72, 7);
      *(_OWORD *)(v47 + 16) = xmmword_1004D9670;
      URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
      v49 = v48;
      *(_QWORD *)(v47 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v47 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v47 + 32) = v49;
      os_log(_:dso:log:type:_:)("Error when trying to the services for the url %@", 48, 2, &_mh_execute_header, v44, v45, v47);
    }

    v26 = swift_bridgeObjectRelease(v47);
    if ((v55 & 1) != 0)
      URL.stopAccessingSecurityScopedResource()();
    v27 = 0;
  }
  v57(0, v27, v26);
}

uint64_t sub_1003E88A0(void *a1, uint64_t a2, char a3, void *a4, char a5, uint64_t a6, uint64_t (*a7)(_QWORD, uint64_t, __n128), uint64_t a8, void *a9, char a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __objc2_prot **v30;
  __objc2_prot *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  double v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  void *v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t);
  void *v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  void (*v75)(uint64_t, char *, uint64_t);
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void **aBlock;
  uint64_t v82;
  void (*v83)(uint64_t, void *);
  void *v84;
  uint64_t (*v85)(uint64_t);
  uint64_t v86;
  _QWORD v87[5];

  v78 = a6;
  v79 = a8;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v20 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(v19);
    v22 = static os_log_type_t.error.getter(v21);
    v23 = sub_10006922C((uint64_t *)&unk_100644560);
    v24 = swift_allocObject(v23, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v24 + 56) = sub_10004F2F0(0, &qword_100653008, NSFileProviderService_ptr);
    *(_QWORD *)(v24 + 64) = sub_100083450(&qword_100653018, &qword_100653008, NSFileProviderService_ptr);
    *(_QWORD *)(v24 + 32) = a4;
    v25 = a4;
    v26 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v24 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v24 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v24 + 72) = v26;
    os_log(_:dso:log:type:_:)("Error when trying to get the fileProviderConnection for the service %@ error %@", 79, 2, &_mh_execute_header, v21, v22, v24);

    v27 = swift_bridgeObjectRelease(v24);
    if ((a5 & 1) != 0)
      URL.stopAccessingSecurityScopedResource()();
    v28 = a2;
    return a7(0, v28, v27);
  }
  if (!a1)
  {
    v56 = *(id *)DOCLog.UI.unsafeMutableAddressor(v19);
    v57 = static os_log_type_t.error.getter(v56);
    v58 = sub_10006922C((uint64_t *)&unk_100644560);
    v59 = swift_allocObject(v58, 72, 7);
    *(_OWORD *)(v59 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v59 + 56) = sub_10004F2F0(0, &qword_100653008, NSFileProviderService_ptr);
    *(_QWORD *)(v59 + 64) = sub_100083450(&qword_100653018, &qword_100653008, NSFileProviderService_ptr);
    *(_QWORD *)(v59 + 32) = a4;
    v60 = a4;
    os_log(_:dso:log:type:_:)("Error when trying to get the fileProviderConnection for the service %@", 70, 2, &_mh_execute_header, v56, v57, v59);

    v27 = swift_bridgeObjectRelease(v59);
    if ((a5 & 1) != 0)
      URL.stopAccessingSecurityScopedResource()();
    v28 = 0;
    return a7(0, v28, v27);
  }
  v77 = a9;
  v30 = &protocolRef__TtP5Files36DOC_com_apple_iwork_disconnecting_v2_;
  v71 = a3 & 1;
  if ((a3 & 1) == 0)
    v30 = &protocolRef__TtP5Files33DOC_com_apple_iwork_disconnecting_;
  v31 = *v30;
  v32 = (void *)objc_opt_self(NSXPCInterface);
  v33 = a1;
  v34 = objc_msgSend(v32, "interfaceWithProtocol:", v31);
  objc_msgSend(v33, "setRemoteObjectInterface:", v34);

  v74 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v74((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v78, v16);
  v35 = *(unsigned __int8 *)(v17 + 80);
  v36 = (v35 + 25) & ~v35;
  v37 = (v18 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = v37 + 16;
  v73 = v35 | 7;
  v38 = swift_allocObject(&unk_1005E7748, v37 + 16, v35 | 7);
  v39 = v77;
  *(_QWORD *)(v38 + 16) = v77;
  v40 = a5 & 1;
  *(_BYTE *)(v38 + 24) = v40;
  v75 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v75(v38 + v36, v20, v16);
  v70 = v37;
  v41 = (_QWORD *)(v38 + v37);
  v42 = v79;
  *v41 = a7;
  v41[1] = v42;
  v85 = sub_1003EA184;
  v86 = v38;
  aBlock = _NSConcreteStackBlock;
  v82 = 1107296256;
  v83 = sub_1000602CC;
  v84 = &unk_1005E7760;
  v43 = _Block_copy(&aBlock);
  v44 = v86;
  v76 = v39;
  swift_retain();
  v45 = objc_msgSend(v33, "remoteObjectProxyWithErrorHandler:", v43, swift_release(v44).n128_f64[0]);
  _Block_release(v43);
  _bridgeAnyObjectToAny(_:)(v87, v45);
  *(_QWORD *)&v46 = swift_unknownObjectRelease(v45).n128_u64[0];
  v77 = v33;
  objc_msgSend(v33, "resume", v46);
  if (v71)
  {
    sub_100069BD8((uint64_t)v87, (uint64_t)&aBlock);
    v61 = sub_10006922C(&qword_100653020);
    swift_dynamicCast(&v80, &aBlock, (char *)&type metadata for Any + 8, v61, 7);
    v62 = v80;
    v74(v20, v78, v16);
    v63 = swift_allocObject(&unk_1005E7798, v72, v73);
    v64 = v75;
    v65 = v76;
    *(_QWORD *)(v63 + 16) = v76;
    *(_BYTE *)(v63 + 24) = v40;
    v64(v63 + v36, v20, v16);
    v66 = (_QWORD *)(v63 + v70);
    *v66 = a7;
    v66[1] = v42;
    v85 = sub_1003EA1E4;
    v86 = v63;
    aBlock = _NSConcreteStackBlock;
    v82 = 1107296256;
    v83 = sub_10015936C;
    v84 = &unk_1005E77B0;
    v67 = _Block_copy(&aBlock);
    v68 = v86;
    v69 = v65;
    swift_retain();
    objc_msgSend(v62, "disconnect:withCompletion:", a10 & 1, v67, swift_release(v68).n128_f64[0]);

    _Block_release(v67);
    swift_unknownObjectRelease(v62);
  }
  else
  {
    sub_100069BD8((uint64_t)v87, (uint64_t)&aBlock);
    v47 = sub_10006922C(&qword_100653028);
    swift_dynamicCast(&v80, &aBlock, (char *)&type metadata for Any + 8, v47, 7);
    v48 = v80;
    v74(v20, v78, v16);
    v49 = swift_allocObject(&unk_1005E77E8, v72, v73);
    v50 = v75;
    v51 = v76;
    *(_QWORD *)(v49 + 16) = v76;
    *(_BYTE *)(v49 + 24) = v40;
    v50(v49 + v36, v20, v16);
    v52 = (_QWORD *)(v49 + v70);
    *v52 = a7;
    v52[1] = v42;
    v85 = sub_1003EA334;
    v86 = v49;
    aBlock = _NSConcreteStackBlock;
    v82 = 1107296256;
    v83 = sub_10015936C;
    v84 = &unk_1005E7800;
    v53 = _Block_copy(&aBlock);
    v54 = v86;
    v55 = v51;
    swift_retain();
    objc_msgSend(v48, "disconnectWithCompletion:", v53, swift_release(v54).n128_f64[0]);
    _Block_release(v53);
    swift_unknownObjectRelease(v48);

  }
  return sub_100068588(v87);
}

uint64_t sub_1003E8F34(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, __n128))
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;

  v9 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v10 = static os_log_type_t.error.getter(v9);
  v11 = sub_10006922C((uint64_t *)&unk_100644560);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D4CE0;
  v13 = objc_msgSend(a2, "identifier");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_10006A638();
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  v17 = _convertErrorToNSError(_:)(a1);
  *(_QWORD *)(v12 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v12 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v12 + 72) = v17;
  os_log(_:dso:log:type:_:)("Error when communicating with the provider %@,when trying to eject it", 69, 2, &_mh_execute_header, v9, v10, v12);

  v18 = swift_bridgeObjectRelease(v12);
  if ((a3 & 1) != 0)
    URL.stopAccessingSecurityScopedResource()();
  return a5(0, a1, v18);
}

uint64_t sub_1003E90AC(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  unsigned int v37;
  _QWORD aBlock[5];
  uint64_t v41;

  if (a1)
  {
    v13 = swift_errorRetain(a1);
    v14 = *(id *)DOCLog.UI.unsafeMutableAddressor(v13);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = sub_10006922C((uint64_t *)&unk_100644560);
    v17 = swift_allocObject(v16, 112, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1004D4CE0;
    v18 = objc_msgSend(a2, "identifier");
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = sub_10006A638();
    *(_QWORD *)(v17 + 32) = v19;
    *(_QWORD *)(v17 + 40) = v21;
    v22 = _convertErrorToNSError(_:)(a1);
    *(_QWORD *)(v17 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v17 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v17 + 72) = v22;
    os_log(_:dso:log:type:_:)("Error when trying to eject the provider %@ error %@", 51, 2, &_mh_execute_header, v14, v15, v17);

    swift_bridgeObjectRelease(v17);
    swift_errorRelease(a1);
  }
  else
  {
    v24 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v37 = static os_log_type_t.debug.getter(v24);
    v25 = sub_10006922C((uint64_t *)&unk_100644560);
    v26 = swift_allocObject(v25, 72, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
    v27 = objc_msgSend(a2, "identifier");
    v28 = a5;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

    *(_QWORD *)(v26 + 56) = &type metadata for String;
    *(_QWORD *)(v26 + 64) = sub_10006A638();
    *(_QWORD *)(v26 + 32) = v29;
    *(_QWORD *)(v26 + 40) = v31;
    a5 = v28;
    os_log(_:dso:log:type:_:)("WebDAV provider %@ successfully disconnected", 44, 2, &_mh_execute_header, v24, v37, v26);

    swift_bridgeObjectRelease(v26);
    v32 = swift_allocObject(a7, 24, 7);
    *(_QWORD *)(v32 + 16) = a2;
    aBlock[4] = a8;
    v41 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = a9;
    v33 = _Block_copy(aBlock);
    v34 = v41;
    v35 = a2;
    swift_release(v34);
    DOCRunInMainThread(v33);
    _Block_release(v33);
  }
  if ((a3 & 1) != 0)
    URL.stopAccessingSecurityScopedResource()();
  return a5(a10 & 1, a1);
}

double sub_1003E9388(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    type metadata accessor for NSFileProviderServiceName(0);
    v8 = v7;
    v9 = sub_10004F2F0(0, &qword_100653008, NSFileProviderService_ptr);
    v10 = sub_1003E9F24();
    v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v8, v9, v10);
  }
  swift_retain();
  v11 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DOCLegacyWebDAVProviderSource()
{
  return objc_opt_self(_TtC5Files29DOCLegacyWebDAVProviderSource);
}

void sub_1003E9584(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;

  v3 = objc_msgSend(v1, "identifier");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = (_QWORD *)swift_allocObject(&unk_1005E75E0, 48, 7);
  v7[2] = a1;
  v7[3] = v4;
  v7[4] = v6;
  v7[5] = v1;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v8)
  {
    v9 = v7;
    v10 = *(void **)&v1[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
    v11 = swift_allocObject(&unk_1005E7608, 41, 7);
    *(_QWORD *)(v11 + 16) = v1;
    *(_QWORD *)(v11 + 24) = sub_1003E9B30;
    *(_QWORD *)(v11 + 32) = v9;
    *(_BYTE *)(v11 + 40) = 0;
    v16[4] = sub_1003E9B40;
    v17 = v11;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100083540;
    v16[3] = &unk_1005E7620;
    v12 = _Block_copy(v16);
    v13 = v17;
    v14 = v1;
    v15 = a1;
    swift_retain();
    objc_msgSend(v10, "doc_fetchRootItemForProviderDomain:completionHandler:", v8, v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);
    swift_release(v9);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003E96E4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint8_t *v30;
  void *v31;
  id v32;
  void *v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  void *object;
  NSString v38;
  void *v39;
  id v40;
  _QWORD *v41;
  void *v42;
  _QWORD *v43;
  id v44;
  __n128 v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  void *v56;
  _QWORD aBlock[5];
  _QWORD *v58;
  Swift::String v59;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v55 - v18;
  if (a2)
  {
    v20 = swift_errorRetain(a2);
    v21 = Logger.UI.unsafeMutableAddressor(v20);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
    if ((a1 & 1) != 0)
    {
      v23 = v22(v19, v21, v12);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.debug.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        v56 = a6;
        v27 = a4;
        v28 = a3;
        v29 = v26;
        *(_WORD *)v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Presenting an alert to the user to be able to force the eject", v26, 2u);
        v30 = v29;
        a3 = v28;
        a4 = v27;
        a6 = v56;
        swift_slowDealloc(v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
      v31 = (void *)_convertErrorToNSError(_:)(a2);
      v32 = (id)_DocumentManagerBundle(v31);
      if (v32)
      {
        v33 = v32;
        v59._object = (void *)0x8000000100531BB0;
        v34._countAndFlagsBits = 0x74754F206E676953;
        v34._object = (void *)0xE90000000000003FLL;
        v35.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v35.value._object = (void *)0xEB00000000656C62;
        v36._countAndFlagsBits = 0;
        v36._object = (void *)0xE000000000000000;
        v59._countAndFlagsBits = 0xD00000000000006ALL;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v59)._object;

        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v39 = (void *)_convertErrorToNSError(_:)(a2);
        v40 = objc_msgSend(v39, "localizedRecoverySuggestion");

        v41 = (_QWORD *)swift_allocObject(&unk_1005E78D8, 40, 7);
        v41[2] = a4;
        v41[3] = a5;
        v41[4] = a6;
        aBlock[4] = sub_1003EA3AC;
        v58 = v41;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004A82C;
        aBlock[3] = &unk_1005E78F0;
        v42 = _Block_copy(aBlock);
        v43 = v58;
        swift_bridgeObjectRetain(a5);
        v44 = a6;
        v45 = swift_release(v43);
        DOCPresentAlertForErrorWithForceHandler(v31, v38, v40, 1, 2, a3, v42, 0, v45);
        swift_errorRelease(a2);
        _Block_release(v42);

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v51 = v22(v15, v21, v12);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.debug.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "We cannot force eject", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }
      swift_errorRelease(a2);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  else
  {
    v46 = *(id *)DOCLog.UI.unsafeMutableAddressor(v17);
    v47 = static os_log_type_t.debug.getter(v46);
    v48 = sub_10006922C((uint64_t *)&unk_100644560);
    v49 = swift_allocObject(v48, 72, 7);
    *(_OWORD *)(v49 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = sub_10006A638();
    *(_QWORD *)(v49 + 32) = a4;
    *(_QWORD *)(v49 + 40) = a5;
    *(_QWORD *)&v50 = swift_bridgeObjectRetain(a5).n128_u64[0];
    os_log(_:dso:log:type:_:)("Source %@ successfully ejected", 30, 2, &_mh_execute_header, v46, v47, v49, v50);

    swift_bridgeObjectRelease(v49);
  }
}

uint64_t sub_1003E9B20()
{
  return sub_10001EC68((void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

void sub_1003E9B30(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E96E4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_1003E9B40(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003E7C04(a1, a2, *(char **)(v2 + 16), *(void (**)(_QWORD, uint64_t, __n128))(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

void sub_1003E9B50(uint64_t a1, uint64_t a2, char *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[5];
  uint64_t v20;

  v6 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v7 = static os_log_type_t.debug.getter(v6);
  v8 = sub_10006922C((uint64_t *)&unk_100644560);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_10006A638();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)&v10 = swift_bridgeObjectRetain(a2).n128_u64[0];
  os_log(_:dso:log:type:_:)("Trying to eject source %@ again. But this time with the force flag.", 67, 2, &_mh_execute_header, v6, v7, v9, v10);

  swift_bridgeObjectRelease(v9);
  v11 = swift_allocObject(&unk_1005E7928, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = *(_QWORD *)&a3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v12)
  {
    v13 = v11;
    v14 = *(void **)&a3[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
    v15 = swift_allocObject(&unk_1005E7950, 41, 7);
    *(_QWORD *)(v15 + 16) = a3;
    *(_QWORD *)(v15 + 24) = sub_1003EA3DC;
    *(_QWORD *)(v15 + 32) = v13;
    *(_BYTE *)(v15 + 40) = 1;
    v19[4] = sub_1003EA7E4;
    v20 = v15;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100083540;
    v19[3] = &unk_1005E7968;
    v16 = _Block_copy(v19);
    v17 = v20;
    swift_bridgeObjectRetain(a2);
    v18 = a3;
    swift_retain();
    objc_msgSend(v14, "doc_fetchRootItemForProviderDomain:completionHandler:", v12, v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);
    swift_release(v13);
  }
  else
  {
    __break(1u);
  }
}

double sub_1003E9D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double result;

  v7 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v8 = static os_log_type_t.debug.getter(v7);
  v9 = sub_10006922C((uint64_t *)&unk_100644560);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = sub_10006A638();
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)&v11 = swift_bridgeObjectRetain(a4).n128_u64[0];
  if (a2)
    os_log(_:dso:log:type:_:)("error trying to force eject the source %@", 41, 2, &_mh_execute_header, v7, v8, v10, v11);
  else
    os_log(_:dso:log:type:_:)("Source %@ successfully ejected", 30, 2, &_mh_execute_header, v7, v8, v10, v11);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_1003E9E00()
{
  return sub_10001EC68((void (*)(_QWORD))&_swift_release, 49);
}

uint64_t sub_1003E9E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003E7EF8(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(_QWORD, uint64_t, __n128))(v2 + 24), *(_QWORD *)(v2 + 32), *(char **)(v2 + 40), *(unsigned __int8 *)(v2 + 48));
}

uint64_t sub_1003E9E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  v8 = ((v5 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v7 + 16));

  return swift_deallocObject(v0, v8 + 9, v6);
}

void sub_1003E9EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  sub_1003E8430(a1, a2, v2 + v6, *(unsigned __int8 *)(v2 + v7), *(void (**)(_QWORD, uint64_t, __n128))((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 16), *(void **)(v2 + (((v7 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + (((v7 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_1003E9F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100653010;
  if (!qword_100653010)
  {
    type metadata accessor for NSFileProviderServiceName(255);
    result = swift_getWitnessTable(&unk_1004D921C, v1);
    atomic_store(result, (unint64_t *)&qword_100653010);
  }
  return result;
}

uint64_t sub_1003E9F6C(uint64_t a1)
{
  NSString v2;
  void *v3;
  uint64_t v4;
  char v5;
  NSString v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;

  v2 = String._bridgeToObjectiveC()();
  v3 = v2;
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_100079D38(v2), (v5 & 1) != 0))
  {
    *(id *)(*(_QWORD *)(a1 + 56) + 8 * v4);

    return 1;
  }
  else
  {

    v7 = String._bridgeToObjectiveC()();
    v8 = v7;
    if (*(_QWORD *)(a1 + 16) && (v9 = sub_100079D38(v7), (v10 & 1) != 0))
    {
      v11 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v9);

      return 0;
    }
    else
    {

      return 0;
    }
  }
}

uint64_t sub_1003EA044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 33) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v7 + 9, v5);
}

uint64_t sub_1003EA0E8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003E88A0(a1, a2, *(_BYTE *)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32), v2 + v6, *(uint64_t (**)(_QWORD, uint64_t, __n128))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(void **)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1003EA184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1003E8F34(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + v4, *(uint64_t (**)(_QWORD, uint64_t, __n128))(v1+ ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003EA1E4(uint64_t a1)
{
  return sub_1003EA204(a1, (uint64_t)&unk_1005E7888, (uint64_t)sub_1003EA808, (uint64_t)&unk_1005E78A0, 1);
}

uint64_t sub_1003EA204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v11 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1003E90AC(a1, *(void **)(v5 + 16), *(_BYTE *)(v5 + 24), v5 + v12, *(uint64_t (**)(_QWORD, _QWORD))v13, *(_QWORD *)(v13 + 8), a2, a3, a4, a5);
}

uint64_t sub_1003EA2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1003EA334(uint64_t a1)
{
  return sub_1003EA204(a1, (uint64_t)&unk_1005E7838, (uint64_t)sub_1003EA378, (uint64_t)&unk_1005E7850, 0);
}

uint64_t sub_1003EA354()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003EA378()
{
  uint64_t v0;

  return sub_1003E7AD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003EA380()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1003EA3AC()
{
  uint64_t v0;

  sub_1003E9B50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1003EA3B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1003EA3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003E9D20(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1003EA3E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

id sub_1003EA414(const char *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id result;
  uint64_t v15;

  v3 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.UI.unsafeMutableAddressor(v6);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a1, v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  result = objc_msgSend(v3, "isEjectable");
  if ((result & 1) == 0)
    return objc_msgSend(v3, "setIsEjectable:", 1);
  return result;
}

id sub_1003EA540(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;

  v3 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v4 = static os_log_type_t.debug.getter(v3);
  v5 = sub_10006922C((uint64_t *)&unk_100644560);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004D9670;
  v7 = _convertErrorToNSError(_:)(a1);
  *(_QWORD *)(v6 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v6 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v6 + 32) = v7;
  os_log(_:dso:log:type:_:)("WebDAV collection did encounter error %@. Setting is ejectable to false", 71, 2, &_mh_execute_header, v3, v4, v6);

  result = objc_msgSend(v1, "isEjectable", swift_bridgeObjectRelease(v6).n128_f64[0]);
  if ((_DWORD)result)
    return objc_msgSend(v1, "setIsEjectable:", 0);
  return result;
}

id sub_1003EA670()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "doc_stopObserving");
}

ValueMetadata *type metadata accessor for DOCLegacyWebDAVProviderSource.WebDAVService()
{
  return &type metadata for DOCLegacyWebDAVProviderSource.WebDAVService;
}

uint64_t storeEnumTagSinglePayload for DOCLegacyWebDAVProviderSource.WebDAVService.Version(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003EA6DC + 4 * byte_1004E6D05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003EA710 + 4 * asc_1004E6D00[v4]))();
}

uint64_t sub_1003EA710(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003EA718(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003EA720);
  return result;
}

uint64_t sub_1003EA72C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003EA734);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003EA738(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003EA740(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCLegacyWebDAVProviderSource.WebDAVService.Version()
{
  return &type metadata for DOCLegacyWebDAVProviderSource.WebDAVService.Version;
}

unint64_t sub_1003EA760()
{
  unint64_t result;

  result = qword_100653030;
  if (!qword_100653030)
  {
    result = swift_getWitnessTable(&unk_1004E6D98, &type metadata for DOCLegacyWebDAVProviderSource.WebDAVService.Version);
    atomic_store(result, (unint64_t *)&qword_100653030);
  }
  return result;
}

id sub_1003EA824()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v1);

  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setNumberOfLines:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v0, "setFont:", v2);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v0;
}

id sub_1003EA91C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton);
  }
  else
  {
    v4 = sub_1003EA97C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1003EA97C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id result;
  void *v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  double v27;
  id v28;
  uint64_t KeyPath;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  Swift::String v45;

  v41 = a1;
  v1 = type metadata accessor for UIButton.Configuration.Size(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration(0, v11);
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v41 - v17;
  v19 = static UIButton.Configuration.plain()(v16);
  result = (id)_DocumentManagerBundle(v19);
  if (result)
  {
    v21 = result;
    v45._object = (void *)0x8000000100531DB0;
    v22._countAndFlagsBits = 0x736E6F6974704FLL;
    v22._object = (void *)0xE700000000000000;
    v23.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v23.value._object = (void *)0xEB00000000656C62;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v45._countAndFlagsBits = 0xD000000000000024;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v45);

    v26 = (void *)objc_opt_self(UIFont);
    result = objc_msgSend(v26, "_preferredFontForTextStyle:weight:", UIFontTextStyleSubheadline, UIFontWeightSemibold, v41);
    if (result)
    {
      v28 = result;
      AttributeContainer.init()(v27);
      AttributedString.init(_:attributes:)(v25._countAndFlagsBits, v25._object, v7);
      KeyPath = swift_getKeyPath(&unk_1004E6DF0);
      __chkstk_darwin(KeyPath);
      v30 = swift_getKeyPath(&unk_1004E6E20);
      v44 = v28;
      v31 = sub_1002793FC();
      AttributedString.subscript.setter(&v44, v30, v31);
      v32 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v10, 0, 1, v32);
      UIButton.Configuration.attributedTitle.setter(v10);
      (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for UIButton.Configuration.Size.mini(_:), v1);
      UIButton.Configuration.buttonSize.setter(v4);

      UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
      sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
      v34 = v42;
      v33 = v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v14, v18, v43);
      v35 = (void *)UIButton.init(configuration:primaryAction:)(v14, 0);
      sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
      v36 = swift_allocObject(&unk_1005E7C40, 24, 7);
      swift_unknownObjectWeakInit(v36 + 16);
      v37 = swift_allocObject(&unk_1005E7C68, 32, 7);
      *(_QWORD *)(v37 + 16) = v36;
      *(_QWORD *)(v37 + 24) = v35;
      v38 = v35;
      v40 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v39, 0, 0, 0, sub_1003EBAC4, v37);
      objc_msgSend(v38, "setDoc_primaryAction:", v40);

      objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v33);
      return v38;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1003EADB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void (*v7)(uint64_t, __n128);
  uint64_t v8;
  __n128 v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void (**)(uint64_t, __n128))(Strong
                                                + OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler);
    if (v7)
    {
      v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler + 8);
      v9 = swift_retain();
      v7(a3, v9);
      sub_100087534((uint64_t)v7, v8);
    }

  }
}

id sub_1003EAE44()
{
  return sub_1003EAE5C(&OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator);
}

id sub_1003EAE50()
{
  return sub_1003EAE5C(&OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator);
}

id sub_1003EAE5C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)DOCSeparatorView), "init");
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

char *sub_1003EAEDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  Class v86;
  double v87;
  id v88;
  double v89;
  id v90;
  double v91;
  id v93;
  objc_super v94;

  v1 = &v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  v3 = objc_allocWithZone((Class)UIView);
  v4 = v0;
  v5 = objc_msgSend(v3, "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v5;
  v6 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  *(_QWORD *)&v4[v6] = sub_1003EA824();
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics] = 0x4026000000000000;

  v94.receiver = v4;
  v94.super_class = (Class)type metadata accessor for DOCShareBannerView();
  v7 = (char *)objc_msgSendSuper2(&v94, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView];
  v10 = v7;
  objc_msgSend(v10, "addSubview:", v9);
  v93 = (id)objc_opt_self(NSLayoutConstraint);
  v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004DAC10;
  v13 = objc_msgSend(*(id *)&v7[v8], "leadingAnchor");
  v14 = objc_msgSend(v10, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v17 = objc_msgSend(v10, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v20 = objc_msgSend(v10, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v23 = objc_msgSend(v10, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v93, "activateConstraints:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v27 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  objc_msgSend(*(id *)&v7[v8], "addSubview:", *(_QWORD *)&v10[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView]);
  v28 = *(id *)&v7[v8];
  v29 = sub_1003EA91C();
  objc_msgSend(v28, "addSubview:", v29);

  v30 = *(id *)&v7[v8];
  v31 = sub_1003EAE44();
  objc_msgSend(v30, "addSubview:", v31);

  v32 = *(id *)&v7[v8];
  v33 = sub_1003EAE50();
  objc_msgSend(v32, "addSubview:", v33);

  v34 = swift_allocObject(v11, 136, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004E6DC0;
  v35 = objc_msgSend(*(id *)&v10[v27], "topAnchor");
  v36 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v37 = OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics;
  v38 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v36, *(double *)&v10[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics]);

  *(_QWORD *)(v34 + 32) = v38;
  v39 = objc_msgSend(*(id *)&v10[v27], "bottomAnchor");
  v40 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, -*(double *)&v10[v37]);

  *(_QWORD *)(v34 + 40) = v41;
  v42 = sub_1003EA91C();
  v43 = objc_msgSend(v42, "topAnchor");

  v44 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v34 + 48) = v45;
  v46 = sub_1003EA91C();
  v47 = objc_msgSend(v46, "bottomAnchor");

  v48 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v34 + 56) = v49;
  v50 = objc_msgSend(*(id *)&v10[v27], "leadingAnchor");
  v51 = objc_msgSend(*(id *)&v7[v8], "leadingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v34 + 64) = v52;
  v53 = objc_msgSend(*(id *)&v10[v27], "trailingAnchor");
  v54 = sub_1003EA91C();
  v55 = objc_msgSend(v54, "leadingAnchor");

  v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);
  *(_QWORD *)(v34 + 72) = v56;
  v57 = sub_1003EA91C();
  v58 = objc_msgSend(v57, "trailingAnchor");

  v59 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v34 + 80) = v60;
  v61 = sub_1003EAE44();
  v62 = objc_msgSend(v61, "topAnchor");

  v63 = objc_msgSend(*(id *)&v7[v8], "topAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v34 + 88) = v64;
  v65 = sub_1003EAE44();
  v66 = objc_msgSend(v65, "leadingAnchor");

  v67 = objc_msgSend(*(id *)&v7[v8], "leadingAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v34 + 96) = v68;
  v69 = sub_1003EAE44();
  v70 = objc_msgSend(v69, "trailingAnchor");

  v71 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v34 + 104) = v72;
  v73 = sub_1003EAE50();
  v74 = objc_msgSend(v73, "bottomAnchor");

  v75 = objc_msgSend(*(id *)&v7[v8], "bottomAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  *(_QWORD *)(v34 + 112) = v76;
  v77 = sub_1003EAE50();
  v78 = objc_msgSend(v77, "leadingAnchor");

  v79 = objc_msgSend(*(id *)&v7[v8], "leadingAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

  *(_QWORD *)(v34 + 120) = v80;
  v81 = sub_1003EAE50();
  v82 = objc_msgSend(v81, "trailingAnchor");

  v83 = objc_msgSend(*(id *)&v7[v8], "trailingAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  *(_QWORD *)(v34 + 128) = v84;
  specialized Array._endMutation()(v85);
  v86 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v93, "activateConstraints:", v86, swift_bridgeObjectRelease(v34).n128_f64[0]);

  LODWORD(v87) = 1132068864;
  objc_msgSend(*(id *)&v10[v27], "setContentHuggingPriority:forAxis:", 0, v87);
  v88 = sub_1003EA91C();
  LODWORD(v89) = 1148846080;
  objc_msgSend(v88, "setContentHuggingPriority:forAxis:", 0, v89);

  v90 = sub_1003EA91C();
  LODWORD(v91) = 1148846080;
  objc_msgSend(v90, "setContentCompressionResistancePriority:forAxis:", 0, v91);

  return v10;
}

id sub_1003EB95C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCShareBannerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCShareBannerView()
{
  return objc_opt_self(_TtC5Files18DOCShareBannerView);
}

ValueMetadata *type metadata accessor for DOCShareBannerView.Metrics()
{
  return &type metadata for DOCShareBannerView.Metrics;
}

uint64_t sub_1003EBA40()
{
  return 8;
}

uint64_t sub_1003EBA4C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003EBA54(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1003EBA68(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003EBA74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EBA98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003EBAC4(uint64_t a1)
{
  uint64_t v1;

  sub_1003EADB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1003EBACC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v3;
  v4 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  *(_QWORD *)&v0[v4] = sub_1003EA824();
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics] = 0x4026000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCShareBannerView.swift", 30, 2, 122, 0);
  __break(1u);
}

uint64_t sub_1003EBBBC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  char v28;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _BYTE v35[40];

  v2 = v1;
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v35[-v10 - 8];
  v12 = objc_msgSend(v2, "currentPreviewItem", v9);
  if (!v12)
    goto LABEL_16;
  v13 = v12;
  v14 = objc_opt_self(QLItem);
  v15 = swift_dynamicCastObjCClass(v13, v14);
  if (v15)
  {
    v16 = (void *)v15;
    swift_unknownObjectRetain(v13);
    v17 = objc_msgSend(v16, "fpItem");
    if (v17)
    {
      v18 = v17;
      v19 = objc_opt_self(QLItem);
      v20 = swift_dynamicCastObjCClass(v13, v19);
      if (v20)
      {
        v21 = (void *)v20;
        swift_unknownObjectRetain(v13);
        v22 = objc_msgSend(v21, "fpItem");
        if (v22)
        {
          v23 = v22;
          if ((objc_msgSend(v22, "isWritable") & 1) != 0)
          {
            v24 = objc_msgSend(v23, "contentType");
            static UTType._unconditionallyBridgeFromObjectiveC(_:)(v24);

            static UTType.movie.getter(v25);
            LOBYTE(v24) = UTType.conforms(to:)(v7);

            v26 = swift_unknownObjectRelease(v13);
            v27 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
            v27(v7, v4, v26);
            ((void (*)(char *, uint64_t))v27)(v11, v4);
            if ((v24 & 1) != 0)
              goto LABEL_15;
            goto LABEL_14;
          }
          swift_unknownObjectRelease(v13);

        }
        else
        {
          swift_unknownObjectRelease(v13);
        }
      }
      if (QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions != 1)
      {
LABEL_15:
        swift_unknownObjectRelease_n(v13, 2);

        goto LABEL_16;
      }
LABEL_14:
      if ((objc_msgSend(v2, "isEditing") & 1) == 0)
      {
        v30 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v30, v35);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v18;
        v34 = inited;
        specialized Array._endMutation()(inited);
        v32 = v34;
        v33 = v18;
        v28 = sub_1003598CC(a1, v32);
        swift_bridgeObjectRelease(v32);
        swift_unknownObjectRelease_n(v13, 2);

        return v28 & 1;
      }
      goto LABEL_15;
    }
    swift_unknownObjectRelease_n(v13, 2);
  }
  else
  {
    swift_unknownObjectRelease(v13);
  }
LABEL_16:
  v28 = 0;
  return v28 & 1;
}

double sub_1003EBE58(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, _QWORD *);
  uint64_t v35;
  uint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(_BYTE *, id);
  _BYTE *v49;
  id v50;
  uint64_t v51;
  double result;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  _BYTE v72[4];
  int v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;

  v3 = v2;
  v6 = (_QWORD *)type metadata accessor for Logger(0);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v72[-v11];
  __chkstk_darwin(v13);
  v15 = &v72[-v14];
  v16 = sub_1003EBBBC(FPActionRename);
  if ((v16 & 1) == 0)
    goto LABEL_14;
  v16 = (uint64_t)objc_msgSend(v2, "currentPreviewItem");
  if (!v16)
    goto LABEL_14;
  v17 = v16;
  v18 = objc_opt_self(QLItem);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  if (!v19 || (v76 = objc_msgSend(v19, "fpItem")) == 0)
  {
    swift_unknownObjectRelease(v17);
LABEL_14:
    v36 = Logger.Rename.unsafeMutableAddressor(v16);
    (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v7 + 16))(v9, v36, v6);
    swift_bridgeObjectRetain_n(a2, 2);
    v37 = v2;
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v75 = v7;
      v76 = v6;
      v40 = a1;
      v41 = swift_slowAlloc(32, -1);
      v74 = swift_slowAlloc(96, -1);
      v78 = v74;
      *(_DWORD *)v41 = 136315650;
      v77 = sub_1000544FC(0xD000000000000025, 0x8000000100531E20, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      *(_WORD *)(v41 + 12) = 2080;
      swift_bridgeObjectRetain(a2);
      v77 = sub_1000544FC(v40, a2, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v41 + 22) = 2080;
      v42 = objc_msgSend(v37, "currentPreviewItem");
      if (v42)
      {
        v43 = v42;
        v44 = objc_msgSend(v42, "description");
        swift_unknownObjectRelease(v43);
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v47 = v46;

      }
      else
      {
        v47 = 0xE300000000000000;
        v45 = 7104878;
      }
      v77 = sub_1000544FC(v45, v47, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);

      swift_bridgeObjectRelease(v47);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s: could not get currently previewed FPItem to rename to %s. currentPreviewItem == %s ", (uint8_t *)v41, 0x20u);
      v51 = v74;
      swift_arrayDestroy(v74, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      v50 = v76;
      v48 = *(void (**)(_BYTE *, id))(v75 + 8);
      v49 = v9;
      goto LABEL_21;
    }

    swift_bridgeObjectRelease_n(a2, 2);
    v48 = *(void (**)(_BYTE *, id))(v7 + 8);
    v49 = v9;
LABEL_18:
    v50 = v6;
LABEL_21:
    v48(v49, v50);
    return result;
  }
  v75 = a1;
  v20 = String.count.getter(a1, a2);
  if (v20 < 1)
    goto LABEL_24;
  v21 = objc_msgSend(v76, "displayName");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  if (v22 == v75 && v24 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_24;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v75, a2, 0);
  swift_bridgeObjectRelease(v24);
  if ((v26 & 1) != 0)
  {
LABEL_24:
    v53 = Logger.Rename.unsafeMutableAddressor(v20);
    (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v7 + 16))(v12, v53, v6);
    v54 = swift_bridgeObjectRetain_n(a2, 2);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc(22, -1);
      v74 = swift_slowAlloc(64, -1);
      v78 = v74;
      *(_DWORD *)v57 = 136315394;
      v77 = sub_1000544FC(0xD000000000000025, 0x8000000100531E20, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      *(_WORD *)(v57 + 12) = 2080;
      swift_bridgeObjectRetain(a2);
      v77 = sub_1000544FC(v75, a2, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "%s: suggested name %s was either empty or equal to current display name.", (uint8_t *)v57, 0x16u);
      v58 = v74;
      swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    swift_unknownObjectRelease(v17);
    v48 = *(void (**)(_BYTE *, id))(v7 + 8);
    v49 = v12;
    goto LABEL_18;
  }
  v27 = Logger.Rename.unsafeMutableAddressor(v20);
  (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v7 + 16))(v15, v27, v6);
  v28 = swift_bridgeObjectRetain_n(a2, 2);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter(v29);
  v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    v32 = swift_slowAlloc(22, -1);
    v74 = swift_slowAlloc(64, -1);
    v78 = v74;
    *(_DWORD *)v32 = 136315394;
    v73 = v31;
    v77 = sub_1000544FC(0xD000000000000025, 0x8000000100531E20, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
    *(_WORD *)(v32 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v77 = sub_1000544FC(v75, a2, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v73, "%s: will change name to %s", (uint8_t *)v32, 0x16u);
    v33 = v74;
    swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);

    v34 = *(void (**)(_BYTE *, _QWORD *))(v7 + 8);
    v35 = v75;
    v34(v15, v6);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(_BYTE *, _QWORD *))(v7 + 8))(v15, v6);
    v35 = v75;
  }
  v59 = type metadata accessor for RenameControllerDelegate();
  v60 = swift_allocObject(v59, 33, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  v61 = swift_unknownObjectWeakInit(v60 + 24);
  *(_BYTE *)(v60 + 32) = 0;
  swift_unknownObjectWeakAssign(v61, v3);
  v62 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionGridCell());
  v64 = sub_100497280(0, v63, 0.0, 0.0, 0.0, 0.0);
  v65 = type metadata accessor for DOCInlineRenameController();
  v66 = swift_allocObject(v65, 160, 7);
  swift_retain();
  v67 = v76;
  v68 = sub_1003EEC40(v60, (uint64_t)v64, (uint64_t)v67, v66);
  swift_release(v60);

  v69 = swift_allocObject(&unk_1005E7CA0, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16);
  v70 = (_QWORD *)swift_allocObject(&unk_1005E7CC8, 64, 7);
  v70[2] = v35;
  v70[3] = a2;
  v70[4] = v69;
  v70[5] = v67;
  v70[6] = v60;
  v70[7] = v68;
  swift_bridgeObjectRetain(a2);
  swift_retain();
  v71 = v67;
  swift_retain();
  sub_10038F4F4(v71, v35, a2, 0, (void (*)(uint64_t, _QWORD, uint64_t))DOCSplitBrowserViewController.didCommitPreview(of:), 0, (void **)sub_1003EF260, (uint64_t)v70);
  swift_unknownObjectRelease(v17);

  swift_release(v60);
  swift_release(v68);
  *(_QWORD *)&result = swift_release(v70).n128_u64[0];
  return result;
}

void sub_1003EC720(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  _QWORD *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t Strong;
  void *v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  _QWORD *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  _QWORD v67[3];
  char v68[8];
  void **aBlock;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  void (*v73)();
  _QWORD *v74;
  _BYTE v75[24];
  uint64_t v76;
  _BYTE v77[24];

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - v18;
  v20 = a5 + 16;
  if (a1 && !a2)
  {
    v66 = v20;
    v30 = a1;
    v31 = Logger.Rename.unsafeMutableAddressor(v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v19, v31, v12);
    v32 = swift_bridgeObjectRetain_n(a4, 2);
    v33 = Logger.logObject.getter(v32);
    v34 = v13;
    v35 = static os_log_type_t.debug.getter(v33);
    if (os_log_type_enabled(v33, v35))
    {
      v36 = swift_slowAlloc(22, -1);
      v65 = v30;
      v37 = v36;
      v38 = (void **)swift_slowAlloc(64, -1);
      v63 = v34;
      v39 = v38;
      aBlock = v38;
      *(_DWORD *)v37 = 136315394;
      v64 = v12;
      v76 = sub_1000544FC(0xD000000000000025, 0x8000000100531E20, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain(a4);
      v76 = sub_1000544FC(a3, a4, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl((void *)&_mh_execute_header, v33, v35, "%s: did commit rename with success: suggestedName = %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      v40 = v37;
      v30 = v65;
      swift_slowDealloc(v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v64);
    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v12);
    }
    v50 = v66;
    swift_beginAccess(v66, &v76, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v50);
    if (Strong)
    {
      v52 = (void *)Strong;
      v53 = swift_allocObject(&unk_1005E7CA0, 24, 7);
      swift_beginAccess(v50, v75, 0, 0);
      v54 = (void *)swift_unknownObjectWeakLoadStrong(v50);
      swift_unknownObjectWeakInit(v53 + 16);

      v55 = (_QWORD *)swift_allocObject(&unk_1005E7D40, 40, 7);
      v55[2] = v53;
      v55[3] = v30;
      v55[4] = a6;
      v56 = swift_allocObject(&unk_1005E7CA0, 24, 7);
      swift_unknownObjectWeakInit(v56 + 16);
      v57 = (_QWORD *)swift_allocObject(&unk_1005E7D68, 40, 7);
      v57[2] = v56;
      v57[3] = sub_1003EF2BC;
      v57[4] = v55;
      v73 = sub_1003EF40C;
      v74 = v57;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10004A82C;
      v72 = &unk_1005E7D80;
      v58 = _Block_copy(&aBlock);
      v59 = v74;
      v60 = v30;
      swift_retain();
      v61 = a6;
      swift_retain();
      swift_release(v59);
      DOCRunInMainThread(v58);
      _Block_release(v58);

      swift_release(v53);
      swift_release(v55);
    }

  }
  else
  {
    v65 = (id)a3;
    v21 = Logger.Rename.unsafeMutableAddressor(v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v21, v12);
    swift_bridgeObjectRetain(a4);
    swift_errorRetain(a2);
    swift_bridgeObjectRetain(a4);
    v22 = swift_errorRetain(a2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v63 = v13;
      v64 = v12;
      v66 = v20;
      v25 = swift_slowAlloc(32, -1);
      v26 = (void **)swift_slowAlloc(96, -1);
      aBlock = v26;
      *(_DWORD *)v25 = 136315650;
      v76 = sub_1000544FC(0xD000000000000025, 0x8000000100531E20, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain(a4);
      v76 = sub_1000544FC((uint64_t)v65, a4, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v25 + 22) = 2080;
      if (a2)
      {
        swift_getErrorValue(a2, v68, v67);
        v27 = Error.localizedDescription.getter(v67[1], v67[2]);
        v29 = v28;
      }
      else
      {
        v29 = 0xE800000000000000;
        v27 = 0x726F727265206F4ELL;
      }
      v76 = sub_1000544FC(v27, v29, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: failed to change name to %s with error: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy(v26, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v64);
      v20 = v66;
    }
    else
    {
      swift_bridgeObjectRelease_n(a4, 2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    swift_beginAccess(v20, &v76, 0, 0);
    v41 = swift_unknownObjectWeakLoadStrong(v20);
    if (v41)
    {
      v42 = (void *)v41;
      v43 = swift_allocObject(&unk_1005E7CA0, 24, 7);
      swift_beginAccess(v20, v75, 0, 0);
      v44 = (void *)swift_unknownObjectWeakLoadStrong(v20);
      swift_unknownObjectWeakInit(v43 + 16);

      v45 = swift_allocObject(&unk_1005E7CA0, 24, 7);
      swift_unknownObjectWeakInit(v45 + 16);
      v46 = (_QWORD *)swift_allocObject(&unk_1005E7CF0, 40, 7);
      v46[2] = v45;
      v46[3] = sub_1003EF270;
      v46[4] = v43;
      v73 = sub_1003EF27C;
      v74 = v46;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_10004A82C;
      v72 = &unk_1005E7D08;
      v47 = _Block_copy(&aBlock);
      v48 = v74;
      swift_retain_n(v43, 2);
      swift_release(v48);
      DOCRunInMainThread(v47);
      _Block_release(v47);

      swift_release_n(v43, 2, v49);
    }
  }
}

void sub_1003ECE7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "reloadData");

  }
}

double sub_1003ECED4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  char *Strong;
  double result;
  void *v8;
  char *v9;
  int v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD *v15;
  id v16;
  char v17;
  _QWORD *v18;
  char v19[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = &Strong[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
    v10 = Strong[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16];
    if (v10 == 255)
    {

    }
    else
    {
      v11 = *(_QWORD **)v9;
      v12 = (void *)*((_QWORD *)v9 + 1);
      if ((v10 & 1) != 0)
      {
        sub_100323BA0(*(_QWORD *)v9, *((void **)v9 + 1), 1);

        v18 = v11;
      }
      else
      {
        v13 = a2;
        v14 = a3;
        sub_1003EF2CC(v11, v12, v10);
        v15 = sub_1003EE9E4((unint64_t)v11, v13, v14);

        sub_100323BCC((uint64_t)v11, v12, v10);
        v16 = (id)sub_1001743BC((uint64_t)v13, (uint64_t)v15);
        if ((v17 & 1) != 0)
          v16 = objc_msgSend(v8, "currentPreviewItemIndex");
        DOCPreviewController.set(_:defaultIndex:)((uint64_t)v15, 0, 0, (unint64_t)v16, 0);

        v18 = v15;
      }
      *(_QWORD *)&result = swift_bridgeObjectRelease(v18).n128_u64[0];
    }
  }
  return result;
}

void sub_1003ED018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  _QWORD aBlock[5];
  _QWORD *v18;
  char v19[24];
  char v20[24];
  char v21[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "view");

    if (!v8)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v8, "setUserInteractionEnabled:", 0);

  }
  swift_beginAccess(v5, v20, 0, 0);
  v9 = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "_definiteTransitionCoordinator");

    v12 = swift_allocObject(&unk_1005E7CA0, 24, 7);
    swift_beginAccess(v5, v19, 0, 0);
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v5);
    swift_unknownObjectWeakInit(v12 + 16);

    v14 = (_QWORD *)swift_allocObject(&unk_1005E7DB8, 40, 7);
    v14[2] = a2;
    v14[3] = a3;
    v14[4] = v12;
    aBlock[4] = sub_1003EF310;
    v18 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100018CC0;
    aBlock[3] = &unk_1005E7DD0;
    v15 = _Block_copy(aBlock);
    v16 = v18;
    swift_retain();
    objc_msgSend(v11, "animateAlongsideTransition:completion:", 0, v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);
    swift_unknownObjectRelease(v11);
  }
}

void sub_1003ED1DC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  _BYTE v9[24];

  v4 = a4 + 16;
  a2();
  swift_beginAccess(v4, v9, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "view");

    if (v8)
    {
      objc_msgSend(v8, "setUserInteractionEnabled:", 1);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003ED268(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;

  if (!a1)
    goto LABEL_13;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v8)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (a1 >= 0)
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v10 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v10))
  {
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    v22 = 0;
    goto LABEL_14;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    v9 = *(id *)(a1 + 32);
LABEL_7:
    v22 = v9;
    swift_bridgeObjectRelease(a1);
LABEL_14:
    v11 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v12 = sub_10006922C(&qword_100646C60);
    v13 = type metadata accessor for DOCOperationItem(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(_QWORD *)(v14 + 72);
    v16 = *(unsigned __int8 *)(v14 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(v12, v17 + v15, v16 | 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v18 + v17) = a3;
    swift_storeEnumTagMultiPayload(v18 + v17, v13, 1);
    v19 = swift_allocObject(&unk_1005E7CA0, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = swift_allocObject(&unk_1005E7E08, 32, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = a3;
    v21 = a3;
    swift_retain();
    sub_100477E1C(2, v18, (uint64_t)v22, 1, 2, 0, a4, (uint64_t)sub_1003EF320, v20);

    swift_bridgeObjectRelease(v18);
    swift_release(v19);
    swift_release(v20);

    return;
  }
  __break(1u);
}

void sub_1003ED454(uint64_t a1, uint64_t a2, char *a3)
{
  char *v3;
  uint64_t (*v4)(uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t Strong;
  char *v19;
  _BYTE *v20;
  objc_class *v21;
  id v22;
  char *v23;
  uint64_t (**v24)(uint64_t);
  char *v25;
  id v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  id *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  uint64_t v43[3];

  v8 = (_QWORD *)type metadata accessor for Logger(0);
  v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v31 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v31 = a1;
      swift_bridgeObjectRetain(a1);
      v14 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v14)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v15)
          {
            __break(1u);
            goto LABEL_25;
          }
          v16 = *(id *)(a1 + 32);
        }
        v17 = v16;
        swift_bridgeObjectRelease(a1);
        swift_beginAccess(a2 + 16, v43, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
        if (!Strong)
        {

          return;
        }
        v8 = (_QWORD *)Strong;
        v14 = swift_allocObject(&unk_1005E7E30, 32, 7);
        *(_QWORD *)(v14 + 16) = a2;
        *(_QWORD *)(v14 + 24) = a3;
        swift_retain_n(a2, 2);
        v19 = a3;
        a1 = v17;
        sub_1003ED930();
        if ((objc_msgSend((id)a1, "isCopying") & 1) == 0)
        {
          v30 = (id *)(id)a1;
          sub_1003EE4DC(v30, a2, (uint64_t)v19);
          swift_release(v14);

          goto LABEL_13;
        }
        v39 = v19;
        v20 = objc_allocWithZone((Class)type metadata accessor for DOCNodeObserver());
        v38 = (id *)(id)a1;
        v3 = sub_1003EEE7C(v38, 0, v20);
        v9 = swift_allocObject(&unk_1005E7CA0, 24, 7);
        swift_unknownObjectWeakInit(v9 + 16);
        v4 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_1005E7E58, 40, 7);
        *((_QWORD *)v4 + 2) = v9;
        *((_QWORD *)v4 + 3) = sub_1003EF32C;
        *((_QWORD *)v4 + 4) = v14;
        v21 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
        v22 = objc_allocWithZone(v21);
        swift_retain();
        swift_retain();
        swift_retain();
        v23 = (char *)v22;
        UUID.init()(v23);
        v24 = (uint64_t (**)(uint64_t))&v23[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
        *v24 = sub_1003EF36C;
        v24[1] = v4;
        v25 = &v23[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
        *(_QWORD *)v25 = 0;
        *((_QWORD *)v25 + 1) = 0;
        swift_retain();

        v42.receiver = v23;
        v42.super_class = v21;
        v26 = objc_msgSendSuper2(&v42, "init");
        swift_release(v4);
        v27 = &v3[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
        swift_beginAccess(&v3[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers], &v40, 33, 0);
        v13 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        a3 = *(char **)((*(_QWORD *)v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v15 = *(_QWORD *)((*(_QWORD *)v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)a3 < v15 >> 1)
        {
LABEL_10:
          v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a3, v13);
          specialized Array._endMutation()(v28);
          swift_endAccess(&v40);
          swift_release(v9);
          swift_release(v4);
          v29 = *(void **)((char *)v8 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber);
          *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber) = v13;

          sub_1000B0BAC();
          v30 = *(id **)((char *)v8 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver);
          *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver) = v3;
          swift_release(v14);

          v19 = v39;
LABEL_13:

          swift_release(a2);
          return;
        }
LABEL_25:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, a3 + 1, 1);
        goto LABEL_10;
      }
    }
    else
    {
      v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v14)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease(a1);
  }
  v32 = Logger.UI.unsafeMutableAddressor(v10);
  v33 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v9 + 16))(v12, v32, v8);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.error.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v43[0] = v37;
    *(_DWORD *)v36 = 136315138;
    v40 = sub_1000544FC(0xD000000000000016, 0x8000000100531E50, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s Duplication from Quick Look failed", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
  }

  (*(void (**)(char *, _QWORD *))(v9 + 8))(v12, v8);
}

void sub_1003ED930()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  void *v10;
  char *v11;
  _BYTE v12[32];
  char v13[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver);
  if (v1)
  {
    v11 = v1;
    sub_1001626AC();
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber);
    if (v2)
    {
      v3 = &v11[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
      swift_beginAccess(&v11[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers], v13, 0, 0);
      v4 = *(_QWORD *)v3;
      v5 = v2;
      swift_bridgeObjectRetain(v4);
      v7 = sub_100453090(v6, (uint64_t)v5);
      v9 = v8;
      swift_bridgeObjectRelease(v4);
      if ((v9 & 1) != 0)
      {

      }
      else
      {
        swift_beginAccess(v3, v12, 33, 0);
        v10 = (void *)sub_100088620(v7);
        swift_endAccess(v12);

      }
    }
    else
    {

    }
  }
}

uint64_t sub_1003EDA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *Strong;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;
  char v32[24];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 + 16;
  v15 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  v17 = swift_allocObject(&unk_1005E7CA0, 24, 7);
  swift_beginAccess(v14, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
  swift_unknownObjectWeakInit(v17 + 16);

  v19 = (_QWORD *)swift_allocObject(&unk_1005E7E80, 48, 7);
  v19[2] = a1;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = v17;
  aBlock[4] = sub_1003EF3AC;
  v31 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E7E98;
  v20 = _Block_copy(aBlock);
  v21 = v31;
  swift_unknownObjectRetain(a1);
  swift_retain();
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_10008BAAC();
  v24 = sub_10006922C((uint64_t *)&unk_100647540);
  v25 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v8, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v28);
}

void sub_1003EDCB0(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  if ((objc_msgSend(a1, "isCopying") & 1) == 0)
  {
    v7 = a4 + 16;
    a2(a1);
    swift_beginAccess(v7, v10, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v9 = (void *)Strong;
      sub_1003ED930();

    }
  }
}

void _s5Files20DOCPreviewControllerC4moveyyypSgF_0()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id *v8;
  double v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  char *v23;
  objc_super v24;
  id v25;
  char v26[24];
  _QWORD v27[4];

  v1 = v0;
  v2 = objc_msgSend(v0, "currentPreviewItem");
  if (v2)
  {
    v3 = v2;
    v4 = objc_opt_self(QLItem);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5 && (v6 = objc_msgSend(v5, "fpItem")) != 0)
    {
      v7 = v6;
      v8 = (id *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
      *(_QWORD *)&v9 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration], v26, 0, 0).n128_u64[0];
      if (*v8
        && (v10 = objc_msgSend(*v8, "copy", v9),
            _bridgeAnyObjectToAny(_:)(v27, v10),
            swift_unknownObjectRelease(v10),
            v11 = sub_10004F2F0(0, (unint64_t *)&qword_100649C20, DOCConfiguration_ptr),
            swift_dynamicCast(&v25, v27, (char *)&type metadata for Any + 8, v11, 6)))
      {
        v12 = v25;
      }
      else
      {
        v12 = objc_msgSend(objc_allocWithZone((Class)DOCConfiguration), "init");
      }
      objc_msgSend(v12, "setInteractionMode:", 3);
      objc_msgSend(v12, "setForPickingDocuments:", 0);
      objc_msgSend(v12, "setForMovingDocuments:", 1);
      objc_msgSend(v12, "setInProcess:", 1);
      v13 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v14 = swift_allocObject(v13, 40, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v14 + 32) = v7;
      v27[0] = v14;
      specialized Array._endMutation()(v14);
      v15 = v27[0];
      v16 = (objc_class *)type metadata accessor for DOCPickerContext();
      v17 = (char *)objc_allocWithZone(v16);
      *(_QWORD *)&v17[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
      *(_QWORD *)&v17[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
      *(_QWORD *)&v17[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = v15;
      v24.receiver = v17;
      v24.super_class = v16;
      v18 = v12;
      v19 = v7;
      v20 = objc_msgSendSuper2(&v24, "init");
      v21 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentPickerViewController());
      v22 = (char *)DOCDocumentPickerViewController.init(configuration:context:)(v18, v20);
      v23 = &v22[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate];
      swift_beginAccess(&v22[OBJC_IVAR____TtC5Files31DOCDocumentPickerViewController_pickerDelegate], v27, 1, 0);
      swift_unknownObjectWeakAssign(v23, v1);
      objc_msgSend(v1, "presentViewController:animated:completion:", v22, 1, 0, v24.receiver, v24.super_class);
      swift_unknownObjectRelease(v3);

    }
    else
    {
      swift_unknownObjectRelease(v3);
    }
  }
}

double DOCPreviewController.documentPicker(_:didConfirmDocumentsAt:)(uint64_t a1, uint64_t a2)
{
  return sub_1003EF044(a2);
}

void sub_1003EE014(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (a1)
    {
      v7 = swift_allocObject(&unk_1005E7ED0, 32, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_QWORD *)(v7 + 24) = a1;
      aBlock[4] = sub_1003EF3EC;
      v13 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005E7EE8;
      v8 = _Block_copy(aBlock);
      v9 = v13;
      v10 = a1;
      v11 = v6;
      swift_release(v9);
      DOCRunInMainThread(v8);
      _Block_release(v8);

      v6 = v10;
    }

  }
}

uint64_t sub_1003EE104(void *a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v37 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v16 + 32) = a2;
  aBlock[0] = v16;
  specialized Array._endMutation()(v16);
  v17 = aBlock[0];
  v18 = a2;
  DOCPreviewController.set(_:defaultIndex:)(v17, 0, 0, 0, 0);
  swift_bridgeObjectRelease(v17);
  v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v19);
  static DispatchTime.now()(v20);
  + infix(_:_:)(v11, 0.25);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22 = v11;
  v23 = v36;
  v21(v22, v36);
  v24 = swift_allocObject(&unk_1005E7F20, 32, 7);
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = v18;
  aBlock[4] = sub_1003EF3F4;
  v42 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E7F38;
  v25 = _Block_copy(aBlock);
  v26 = v42;
  v27 = v18;
  v28 = a1;
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = _swiftEmptyArrayStorage;
  v30 = sub_10008BAAC();
  v31 = sub_10006922C((uint64_t *)&unk_100647540);
  v32 = sub_1000791AC();
  v33 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v37, v30);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v8, v5, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v33);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v23);
}

uint64_t sub_1003EE3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v4 = a1 + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(result, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, a2, ObjectType, v9);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_1003EE4DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "fpfs_fpItem", v8);
  if (v11)
  {
    v12 = v11;
    swift_beginAccess(a2 + 16, v26, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v14 = (void *)Strong;
      sub_10046E3E0(v12, a3);

    }
  }
  else
  {
    v15 = Logger.UI.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v15, v6);
    v16 = a1;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v20 = swift_slowAlloc(64, -1);
      v26[0] = v20;
      *(_DWORD *)v19 = 136315394;
      v27 = sub_1000544FC(0xD000000000000016, 0x8000000100531E50, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
      *(_WORD *)(v19 + 12) = 2080;
      v27 = (uint64_t)v16;
      v21 = v16;
      v22 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v23 = String.init<A>(describing:)(&v27, v22);
      v25 = v24;
      v27 = sub_1000544FC(v23, v24, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);

      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s Could not get FPItem from actionable duplicate node %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_1003EE75C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "fpfs_fpItem", v8);
  if (v11)
  {
    v12 = v11;
    swift_beginAccess(a2 + 16, v25, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v14 = (void *)Strong;
      sub_10046E3E0(v12, a3);

    }
  }
  else
  {
    v15 = Logger.UI.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v15, v6);
    v16 = swift_unknownObjectRetain_n(a1, 2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v20 = swift_slowAlloc(64, -1);
      v25[0] = v20;
      *(_DWORD *)v19 = 136315394;
      v26 = sub_1000544FC(0xD000000000000016, 0x8000000100531E50, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      *(_WORD *)(v19 + 12) = 2080;
      v26 = (uint64_t)a1;
      swift_unknownObjectRetain(a1);
      v21 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v22 = String.init<A>(describing:)(&v26, v21);
      v24 = v23;
      v26 = sub_1000544FC(v22, v23, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s Could not get FPItem from actionable duplicate node %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

_QWORD *sub_1003EE9E4(unint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v26;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    v5 = v3 & 0xC000000000000001;
    v6 = 4;
    v7 = &selRef_viewOptionsRoot;
    v26 = v3;
    while (1)
    {
      v8 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      if (objc_msgSend(v8, v7[449]))
      {
        v11 = v4;
        sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
        v12 = objc_msgSend(v9, "itemID");
        v13 = objc_msgSend(a2, "itemID");
        v14 = static NSObject.== infix(_:_:)(v12, v13);

        if ((v14 & 1) != 0
          || (v15 = objc_msgSend(v9, "itemID"),
              v16 = objc_msgSend(a3, "itemID"),
              v17 = static NSObject.== infix(_:_:)(v15, v16),
              v15,
              v16,
              (v17 & 1) != 0))
        {
          v19 = a2;

          v9 = v19;
        }
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        v4 = v11;
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v9);
        specialized Array._endMutation()(v22);
        v3 = v26;
        v7 = &selRef_viewOptionsRoot;
      }
      else
      {

      }
      ++v6;
      if (v10 == v4)
        goto LABEL_23;
    }
    __break(1u);
LABEL_19:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
LABEL_23:
  swift_bridgeObjectRelease(v3);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003EEC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  void *Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;

  v8 = a4 + 16;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16);
  *(_QWORD *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  v9 = swift_unknownObjectWeakInit(a4 + 72);
  *(_QWORD *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(_BYTE *)(a4 + 136) = 1;
  *(_QWORD *)(a4 + 144) = 0;
  *(_QWORD *)(a4 + 152) = 0;
  *(_QWORD *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign(v9, a2);
  *(_QWORD *)(a4 + 24) = &off_1005F1018;
  swift_unknownObjectWeakAssign(v8, a1);
  v10 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain(a3);
  v11 = objc_msgSend(v10, "initWithTarget:action:", a4, "didTapOverlay");
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 72);
  swift_unknownObjectWeakAssign(&v12[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell], Strong);

  objc_msgSend(v12, "addGestureRecognizer:", v11);
  v14 = *(void **)(a4 + 32);
  *(_QWORD *)(a4 + 32) = v12;

  v15 = sub_10038C784();
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  v16 = static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
  v17 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, void (*)(uint64_t), _QWORD))(*(_QWORD *)v15 + 144))(v16, &v21, v17, sub_10038C844, 0);
  v19 = v18;
  swift_release(v15);

  swift_bridgeObjectRelease(v19);
  sub_10000CB4C((uint64_t)&v21, &qword_100642730);
  return a4;
}

char *sub_1003EEE7C(void *a1, void *a2, _BYTE *a3)
{
  objc_class *ObjectType;
  void *v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType(a3);
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files15DOCNodeObserver_node] = a1;
  a3[OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving] = 0;
  v7 = (void *)objc_opt_self(FPItemManager);
  v8 = a2;
  v9 = a1;
  v10 = a3;
  v11 = objc_msgSend(v7, "defaultManager");
  v12 = objc_opt_self(FPItem);
  v13 = objc_msgSend(v11, "collectionForFolderItem:", swift_dynamicCastObjCClassUnconditional(v9, v12, 0, 0, 0));

  objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
  v14 = v9;
  v15 = v13;
  sub_10004644C(v15, v9);
  v17 = v16;

  *(_QWORD *)&v10[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection] = v17;
  v22.receiver = v10;
  v22.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v22, "init");
  v19 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection]
      + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate;
  *(_QWORD *)(v19 + 8) = &off_1005ED600;
  swift_unknownObjectWeakAssign(v19, v18);
  v20 = v18;
  sub_1000B0BAC();

  return v20;
}

double sub_1003EF044(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = __chkstk_darwin(v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    (*(void (**)(char *, unint64_t, uint64_t, double))(v6 + 16))(v4, a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, result);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10000CB4C((uint64_t)v4, &qword_100643470);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      v10 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
      v11 = swift_allocObject(&unk_1005E7CA0, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)(v9, sub_1003EF3B8, v11);

      v12 = swift_release(v11);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v12);
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1003EF1F8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EF21C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1003EF260(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003EC720(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_1003EF270()
{
  uint64_t v0;

  sub_1003ECE7C(v0);
}

void sub_1003EF27C()
{
  uint64_t *v0;

  sub_1003ED018(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003EF288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

double sub_1003EF2BC()
{
  uint64_t v0;

  return sub_1003ECED4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

id sub_1003EF2CC(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100323BA0((uint64_t)result, a2, a3 & 1);
  return result;
}

uint64_t sub_1003EF2E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1003EF310(uint64_t a1)
{
  uint64_t v1;

  sub_1003ED1DC(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1003EF320(uint64_t a1)
{
  uint64_t v1;

  sub_1003ED454(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_1003EF32C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_getObjectType(a1);
  sub_1003EE75C(a1, v4, v3);
}

uint64_t sub_1003EF36C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003EDA64(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003EF378()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003EF3AC()
{
  uint64_t v0;

  sub_1003EDCB0(*(void **)(v0 + 16), *(void (**)(void *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003EF3B8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003EE014(a1, a2, v2);
}

uint64_t sub_1003EF3C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003EF3EC()
{
  uint64_t v0;

  return sub_1003EE104(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003EF3F4()
{
  uint64_t v0;

  return sub_1003EE3E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id DOCItemCollectionView.configuration.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_configuration);
}

id sub_1003EF448(void *a1, void *a2)
{
  char *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  objc_super v20;

  v5 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView__dragInteraction] = 0;
  v6 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  v7 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  v8 = type metadata accessor for DOCFocusableCollectionViewState(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v10 = v9 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v9 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v11);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(_QWORD *)&v2[v7] = v9;
  v13 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  v14 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer;
  v15 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v16 = v2;
  *(_QWORD *)&v2[v14] = objc_msgSend(v15, "init");
  swift_unknownObjectWeakInit(&v16[OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController]);
  v16[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] = 0;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Files21DOCItemCollectionView_configuration] = a1;
  v17 = a1;

  v20.receiver = v16;
  v20.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  v18 = objc_msgSendSuper2(&v20, "initWithFrame:collectionViewLayout:", a2, 0.0, 0.0, 0.0, 0.0);
  sub_1000AE158();

  return v18;
}

Swift::Void __swiftcall DOCItemCollectionView.layoutSubviews()()
{
  char *v0;
  void *Strong;
  uint64_t isEscapingClosureAtFileLocation;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  _QWORD v10[5];
  uint64_t v11;
  objc_super v12;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController]);
  if (Strong)
  {
    isEscapingClosureAtFileLocation = (uint64_t)Strong;
    if (objc_msgSend(Strong, "doc_isAppearing"))
    {
      v3 = (void *)objc_opt_self(UIView);
      v4 = swift_allocObject(&unk_1005E7F70, 24, 7);
      *(_QWORD *)(v4 + 16) = v0;
      v5 = swift_allocObject(&unk_1005E7F98, 32, 7);
      *(_QWORD *)(v5 + 16) = sub_1003EF7C4;
      *(_QWORD *)(v5 + 24) = v4;
      v10[4] = sub_10006657C;
      v11 = v5;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_10006655C;
      v10[3] = &unk_1005E7FB0;
      v6 = _Block_copy(v10);
      v7 = v11;
      v8 = v0;
      swift_retain();
      objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);

      _Block_release(v6);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 101, 78, 44, 1);
      swift_release(v4);
      swift_release(v5);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return;
      __break(1u);
    }

  }
  v9 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  v12.receiver = v0;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, "layoutSubviews");
}

uint64_t sub_1003EF7A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003EF7C4()
{
  uint64_t v0;
  objc_super v2;

  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  return objc_msgSendSuper2(&v2, "layoutSubviews");
}

uint64_t sub_1003EF800()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

Swift::Void __swiftcall DOCItemCollectionView.safeAreaInsetsDidChange()()
{
  char *v0;
  uint64_t Strong;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  objc_msgSendSuper2(&v3, "safeAreaInsetsDidChange");
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController]);
  if (Strong)
  {
    v2 = (void *)Strong;
    sub_10009C498();

  }
}

Swift::Bool __swiftcall DOCItemCollectionView._hasContentForBarInteractions()()
{
  _BYTE *v0;
  unsigned __int8 v1;
  objc_super v3;

  if (objc_msgSend(v0, "enclosedInUIPDocumentLanding"))
  {
    v1 = v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] ^ 1;
  }
  else
  {
    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for DOCItemCollectionView();
    v1 = objc_msgSendSuper2(&v3, "_hasContentForBarInteractions");
  }
  return v1 & 1;
}

uint64_t DOCItemCollectionView.indexPathForItem(at:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  objc_class *v29;
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  Class isa;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  objc_class *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;
  objc_super v48;

  v4 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v15 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v45 - v22;
  v25.n128_f64[0] = __chkstk_darwin(v24);
  v27 = (char *)&v45 - v26;
  if (DOCDeviceIsPad(v25))
  {
    v46 = a1;
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v28(v27, 1, 1, v8);
    v29 = (objc_class *)type metadata accessor for DOCItemCollectionView();
    v47.receiver = v4;
    v47.super_class = v29;
    v30 = objc_msgSendSuper2(&v47, "indexPathForItemAtPoint:", a2, a3);
    if (v30)
    {
      v31 = v30;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v32(v23, v11, v8);
      v28(v23, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v8) != 1)
      {
        sub_1000E9F38((uint64_t)v27);
        v32(v14, v23, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v27, v14, v8);
        v28(v27, 0, 1, v8);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v34 = objc_msgSend(v4, "cellForItemAtIndexPath:", isa);

        if (v34)
        {
          v35 = type metadata accessor for DOCItemCollectionCell();
          v36 = swift_dynamicCastClass(v34, v35);
          if (v36)
          {
            v37 = (_QWORD *)v36;
            v38 = objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v36, a2, a3);
            LOBYTE(v37) = (*(uint64_t (**)(id))((swift_isaMask & *v37) + 0x2F0))(v38);

            sub_1000E9F38((uint64_t)v27);
            if ((v37 & 1) != 0)
            {
              v32(v20, v14, v8);
              v39 = 0;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
              v39 = 1;
            }
            v28(v20, v39, 1, v8);
            sub_10016CC70((uint64_t)v20, (uint64_t)v27);
            a1 = v46;
            return sub_10016CC70((uint64_t)v27, a1);
          }

        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        a1 = v46;
        return sub_10016CC70((uint64_t)v27, a1);
      }
    }
    else
    {
      v28(v23, 1, 1, v8);
    }
    sub_1000E9F38((uint64_t)v23);
    a1 = v46;
    return sub_10016CC70((uint64_t)v27, a1);
  }
  v40 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  v48.receiver = v4;
  v48.super_class = v40;
  v41 = objc_msgSendSuper2(&v48, "indexPathForItemAtPoint:", a2, a3);
  if (v41)
  {
    v42 = v41;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v41);

    v43 = 0;
  }
  else
  {
    v43 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, v43, 1, v8);
  v27 = v17;
  return sub_10016CC70((uint64_t)v27, a1);
}

id DOCItemCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);

  return v7;
}

void DOCItemCollectionView.init(frame:collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCItemCollectionView", 27, "init(frame:collectionViewLayout:)", 33, 0);
  __break(1u);
}

id DOCItemCollectionView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003EFF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate, a2);
}

uint64_t sub_1003EFFC8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState));
}

id sub_1003EFFD8()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_configuration);
}

Swift::Bool __swiftcall DOCItemCollectionView.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t ObjectType;
  char v13;
  objc_super v15;

  v2 = v1;
  sub_10007C3E0();
  if ((static NSObject.== infix(_:_:)(a1.super.isa, *(_QWORD *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer]) & 1) != 0)
  {
    v4 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate]);
    if (Strong)
    {
      v6 = Strong;
      v7 = *((_QWORD *)v4 + 1);
      -[objc_class locationInView:](a1.super.isa, "locationInView:", v2);
      v9 = v8;
      v11 = v10;
      ObjectType = swift_getObjectType(v6);
      if (((*(uint64_t (**)(char *, uint64_t, uint64_t, double, double))(v7 + 16))(v2, ObjectType, v7, v9, v11) & 1) != 0)
      {
        v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 24))(v2, ObjectType, v7);
        swift_unknownObjectRelease(v6);
        LOBYTE(Strong) = v13 & 1;
      }
      else
      {
        swift_unknownObjectRelease(v6);
        LOBYTE(Strong) = 0;
      }
    }
  }
  else
  {
    v15.receiver = v1;
    v15.super_class = (Class)type metadata accessor for DOCItemCollectionView();
    LOBYTE(Strong) = objc_msgSendSuper2(&v15, "gestureRecognizerShouldBegin:", a1.super.isa);
  }
  return Strong;
}

void sub_1003F01E8()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v9;
  uint64_t v10;

  v1 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView__dragInteraction] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  v4 = type metadata accessor for DOCFocusableCollectionViewState(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v7);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(_QWORD *)&v0[v3] = v5;
  v9 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  v10 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_itemCollectionViewController]);
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCItemCollectionView.swift", 33, 2, 59, 0);
  __break(1u);
}

_UNKNOWN **static DOCDisplayMode.allCases.getter()
{
  return &off_1005BF4B0;
}

unint64_t DOCDisplayMode.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t sub_1003F0390(uint64_t a1)
{
  NSString v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  if (!a1 || a1 == 2 || a1 == 1)
  {
    v1 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

    return (uint64_t)v2;
  }
  else
  {
    v4 = a1;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, &v4, &type metadata for DOCDisplayMode, &type metadata for Int);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003F047C(objc_class *a1)
{
  objc_class *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  NSBundle v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t countAndFlagsBits;
  uint64_t result;
  unint64_t v12;
  objc_class *v13;

  if (!a1)
  {
    a1 = (objc_class *)(id)_DocumentManagerBundle(0);
    if (!a1)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v1 = a1;
    v12 = 0x8000000100524410;
    v3 = 0x736E6F6349;
    v4 = 0xE500000000000000;
    v5 = 0x617A696C61636F4CLL;
    v6 = 0xEB00000000656C62;
    v7.super.isa = v1;
    v8 = 0;
    v9 = 0xE000000000000000;
LABEL_10:
    v2 = 0xD000000000000026;
    goto LABEL_11;
  }
  if (a1 == (objc_class *)2)
  {
    a1 = (objc_class *)(id)_DocumentManagerBundle(2);
    if (a1)
    {
      v1 = a1;
      v2 = 0xD000000000000028;
      v12 = 0x8000000100524460;
      v3 = 0x736E6D756C6F43;
      v4 = 0xE700000000000000;
      v5 = 0x617A696C61636F4CLL;
      v6 = 0xEB00000000656C62;
      v7.super.isa = v1;
      v8 = 0;
      v9 = 0xE000000000000000;
LABEL_11:
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)&v2)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (a1 == (objc_class *)1)
  {
    a1 = (objc_class *)(id)_DocumentManagerBundle(1);
    if (!a1)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v1 = a1;
    v12 = 0x8000000100524490;
    v3 = 1953720652;
    v4 = 0xE400000000000000;
    v5 = 0x617A696C61636F4CLL;
    v6 = 0xEB00000000656C62;
    v7.super.isa = v1;
    v8 = 1953720652;
    v9 = 0xE400000000000000;
    goto LABEL_10;
  }
LABEL_15:
  v13 = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, &v13, &type metadata for DOCDisplayMode, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t DOCDisplayMode.debugDescription.getter(objc_class *a1)
{
  Swift::String v2;
  void *object;
  Swift::String v4;

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = sub_1003F047C(a1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0x6C70736944434F44;
}

unint64_t sub_1003F06D8()
{
  unint64_t result;

  result = qword_100653110;
  if (!qword_100653110)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCDisplayMode, &type metadata for DOCDisplayMode);
    atomic_store(result, (unint64_t *)&qword_100653110);
  }
  return result;
}

unint64_t sub_1003F0720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100653118;
  if (!qword_100653118)
  {
    v1 = sub_10007E830(&qword_100653120);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100653118);
  }
  return result;
}

void sub_1003F076C(_QWORD *a1@<X8>)
{
  *a1 = &off_1005C0C98;
}

uint64_t sub_1003F077C()
{
  objc_class **v0;
  objc_class *v1;
  Swift::String v2;
  void *object;
  Swift::String v4;

  v1 = *v0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2._countAndFlagsBits = sub_1003F047C(v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0x6C70736944434F44;
}

unint64_t sub_1003F0810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064DAF0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(v1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v3;
  }
  swift_retain();
  v18 = v1;
  v5 = (uint64_t *)(v1 + 72);
  while (1)
  {
    v6 = *(v5 - 5);
    v7 = *(v5 - 4);
    v8 = *(v5 - 3);
    v9 = *(v5 - 2);
    v11 = *(v5 - 1);
    v10 = *v5;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    swift_retain();
    swift_bridgeObjectRetain(v10);
    result = sub_100144398(v6, v7);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v3[6] + 40 * result);
    *v14 = v6;
    v14[1] = v7;
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v11;
    *(_QWORD *)(v3[7] + 8 * result) = v10;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v5 += 6;
    v3[2] = v17;
    if (!--v4)
    {
      swift_release(v3);
      v1 = v18;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F0958(uint64_t a1)
{
  return sub_1003F3114(a1, &qword_100648440);
}

unint64_t sub_1003F0964(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  _QWORD __dst[49];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_10006922C(&qword_10064DA00);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_11:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  memcpy(__dst, (const void *)(a1 + 32), sizeof(__dst));
  v5 = *(_OWORD *)(a1 + 176);
  v50 = *(_OWORD *)(a1 + 160);
  v51 = v5;
  v52 = *(_QWORD *)(a1 + 192);
  v6 = *(_OWORD *)(a1 + 112);
  v46 = *(_OWORD *)(a1 + 96);
  v47 = v6;
  v7 = *(_OWORD *)(a1 + 144);
  v48 = *(_OWORD *)(a1 + 128);
  v49 = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v42 = *(_OWORD *)(a1 + 32);
  v43 = v8;
  v9 = *(_OWORD *)(a1 + 80);
  v44 = *(_OWORD *)(a1 + 64);
  v45 = v9;
  sub_1003FD174((uint64_t)__dst);
  result = sub_1001407E0((uint64_t)&v42);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release(v3);
    goto LABEL_11;
  }
  v12 = 424;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = v3[6] + 168 * result;
    v14 = v51;
    *(_OWORD *)(v13 + 128) = v50;
    *(_OWORD *)(v13 + 144) = v14;
    *(_QWORD *)(v13 + 160) = v52;
    v15 = v47;
    *(_OWORD *)(v13 + 64) = v46;
    *(_OWORD *)(v13 + 80) = v15;
    v16 = v49;
    *(_OWORD *)(v13 + 96) = v48;
    *(_OWORD *)(v13 + 112) = v16;
    v17 = v43;
    *(_OWORD *)v13 = v42;
    *(_OWORD *)(v13 + 16) = v17;
    v18 = v45;
    *(_OWORD *)(v13 + 32) = v44;
    *(_OWORD *)(v13 + 48) = v18;
    v19 = (_OWORD *)(v3[7] + 224 * result);
    v20 = *(_OWORD *)&__dst[23];
    *v19 = *(_OWORD *)&__dst[21];
    v19[1] = v20;
    v21 = *(_OWORD *)&__dst[31];
    v23 = *(_OWORD *)&__dst[25];
    v22 = *(_OWORD *)&__dst[27];
    v19[4] = *(_OWORD *)&__dst[29];
    v19[5] = v21;
    v19[2] = v23;
    v19[3] = v22;
    v24 = *(_OWORD *)&__dst[39];
    v26 = *(_OWORD *)&__dst[33];
    v25 = *(_OWORD *)&__dst[35];
    v19[8] = *(_OWORD *)&__dst[37];
    v19[9] = v24;
    v19[6] = v26;
    v19[7] = v25;
    v27 = *(_OWORD *)&__dst[41];
    v28 = *(_OWORD *)&__dst[43];
    v29 = *(_OWORD *)&__dst[47];
    v19[12] = *(_OWORD *)&__dst[45];
    v19[13] = v29;
    v19[10] = v27;
    v19[11] = v28;
    v30 = v3[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      break;
    v3[2] = v32;
    if (!--v4)
      goto LABEL_9;
    v33 = v12 + 392;
    v34 = (__int128 *)(a1 + v12);
    memcpy(__dst, (const void *)(a1 + v12), sizeof(__dst));
    v35 = v34[9];
    v50 = v34[8];
    v51 = v35;
    v52 = *((_QWORD *)v34 + 20);
    v36 = v34[5];
    v46 = v34[4];
    v47 = v36;
    v37 = v34[7];
    v48 = v34[6];
    v49 = v37;
    v38 = v34[1];
    v42 = *v34;
    v43 = v38;
    v39 = v34[3];
    v44 = v34[2];
    v45 = v39;
    sub_1003FD174((uint64_t)__dst);
    result = sub_1001407E0((uint64_t)&v42);
    v12 = v33;
    if ((v40 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003F0B88(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_100653290);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 72);
  while (1)
  {
    v6 = *(_OWORD *)(v5 - 3);
    v15 = *(_OWORD *)(v5 - 5);
    v16 = v6;
    v17 = (void *)*(v5 - 1);
    v18 = v17;
    v7 = *v5;
    v19 = (id)v6;
    v20 = (id)*((_QWORD *)&v15 + 1);
    sub_10007C3B8(&v20);
    sub_10007C3B8(&v19);
    sub_10007C3B8(&v18);
    result = sub_100140788((uint64_t)&v15);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v3[6] + 40 * result;
    v11 = v16;
    *(_OWORD *)v10 = v15;
    *(_OWORD *)(v10 + 16) = v11;
    *(_QWORD *)(v10 + 32) = v17;
    *(_QWORD *)(v3[7] + 8 * result) = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 6;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F0CD4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_10006922C(&qword_10064DAE8);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_11:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = *(_OWORD *)(a1 + 144);
  v6 = *(_OWORD *)(a1 + 176);
  v45 = *(_OWORD *)(a1 + 160);
  v46 = v6;
  v7 = *(_OWORD *)(a1 + 80);
  v8 = *(_OWORD *)(a1 + 112);
  v41 = *(_OWORD *)(a1 + 96);
  v42 = v8;
  v9 = *(_OWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 112);
  v43 = *(_OWORD *)(a1 + 128);
  v44 = v9;
  v11 = *(_OWORD *)(a1 + 48);
  v37 = *(_OWORD *)(a1 + 32);
  v38 = v11;
  v12 = *(_OWORD *)(a1 + 80);
  v39 = *(_OWORD *)(a1 + 64);
  v40 = v12;
  v54 = v43;
  v55 = v5;
  v13 = *(_OWORD *)(a1 + 176);
  v56 = v45;
  v57 = v13;
  v50 = v39;
  v51 = v7;
  v52 = v41;
  v53 = v10;
  v47 = *(_QWORD *)(a1 + 192);
  v48 = v37;
  v49 = v11;
  sub_100145718((uint64_t)&v37);
  result = sub_10014088C((uint64_t)&v48);
  if ((v15 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release(v3);
    goto LABEL_11;
  }
  v16 = 200;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = (_OWORD *)(v3[6] + 160 * result);
    v18 = v55;
    v17[6] = v54;
    v17[7] = v18;
    v19 = v57;
    v17[8] = v56;
    v17[9] = v19;
    v20 = v51;
    v17[2] = v50;
    v17[3] = v20;
    v21 = v53;
    v17[4] = v52;
    v17[5] = v21;
    v22 = v49;
    *v17 = v48;
    v17[1] = v22;
    *(_QWORD *)(v3[7] + 8 * result) = v47;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      break;
    v3[2] = v25;
    if (!--v4)
      goto LABEL_9;
    v26 = *(_OWORD *)(a1 + v16 + 112);
    v27 = *(_OWORD *)(a1 + v16 + 144);
    v45 = *(_OWORD *)(a1 + v16 + 128);
    v46 = v27;
    v28 = *(_OWORD *)(a1 + v16 + 48);
    v29 = *(_OWORD *)(a1 + v16 + 80);
    v41 = *(_OWORD *)(a1 + v16 + 64);
    v42 = v29;
    v30 = *(_OWORD *)(a1 + v16 + 112);
    v31 = *(_OWORD *)(a1 + v16 + 80);
    v43 = *(_OWORD *)(a1 + v16 + 96);
    v44 = v30;
    v32 = *(_OWORD *)(a1 + v16 + 16);
    v37 = *(_OWORD *)(a1 + v16);
    v38 = v32;
    v33 = *(_OWORD *)(a1 + v16 + 48);
    v39 = *(_OWORD *)(a1 + v16 + 32);
    v40 = v33;
    v54 = v43;
    v55 = v26;
    v34 = *(_OWORD *)(a1 + v16 + 144);
    v56 = v45;
    v57 = v34;
    v50 = v39;
    v51 = v28;
    v52 = v41;
    v53 = v31;
    v35 = v16 + 168;
    v47 = *(_QWORD *)(a1 + v16 + 160);
    v48 = v37;
    v49 = v32;
    sub_100145718((uint64_t)&v37);
    result = sub_10014088C((uint64_t)&v48);
    v16 = v35;
    if ((v36 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003F0ED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_100653230);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v9 = *(v6 - 1);
    v10 = *v6;
    swift_bridgeObjectRetain(v8);
    sub_1000D1378(v9, v10);
    result = sub_10007EF08(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (uint64_t *)(v4[7] + 16 * result);
    *v14 = v9;
    v14[1] = v10;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F0FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_100653248);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    sub_1000D1378(v7, v8);
    swift_bridgeObjectRetain(v9);
    result = sub_1001409B0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_100653240);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    sub_1000D1378(v7, v8);
    swift_bridgeObjectRetain(v9);
    result = sub_1001409B0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F123C(uint64_t a1)
{
  return sub_1003F159C(a1, (uint64_t *)&unk_10064DAA0, (void (*)(uint64_t, uint64_t))sub_1000D1378, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_1001409B0);
}

unint64_t sub_1003F1258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_10064DA90);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v20 = v1;
  v6 = (_OWORD *)(v1 + 80);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 6);
    v8 = *((_QWORD *)v6 - 5);
    v9 = *((_BYTE *)v6 - 32);
    v10 = *((_QWORD *)v6 - 3);
    v11 = *((_QWORD *)v6 - 2);
    v12 = *((_QWORD *)v6 - 1);
    v21 = *v6;
    sub_100292218(v7, v8, v9);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v21);
    swift_retain(*((_QWORD *)&v21 + 1));
    result = sub_1001409C4(v7, v8, v9);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = v4[6] + 24 * result;
    *(_QWORD *)v15 = v7;
    *(_QWORD *)(v15 + 8) = v8;
    *(_BYTE *)(v15 + 16) = v9;
    v16 = v4[7] + 40 * result;
    *(_QWORD *)v16 = v10;
    *(_QWORD *)(v16 + 8) = v11;
    *(_QWORD *)(v16 + 16) = v12;
    *(_OWORD *)(v16 + 24) = v21;
    v17 = v4[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v4[2] = v19;
    v6 += 4;
    if (!--v5)
    {
      swift_release(v4);
      v1 = v20;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F13D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v2 = sub_10006922C(&qword_100653218);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v26 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v26);
    return (unint64_t)v8;
  }
  sub_10006922C((uint64_t *)&unk_100653220);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v27 = a1;
  v28 = v10;
  v11 = v7 + 64;
  v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000271D4(v12, (uint64_t)v5, &qword_100653218);
    v14 = *(_QWORD *)v5;
    v15 = *((_QWORD *)v5 + 1);
    v16 = v5[16];
    result = sub_1001409C4(*(_QWORD *)v5, v15, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = v8[6] + 24 * result;
    *(_QWORD *)v20 = v14;
    *(_QWORD *)(v20 + 8) = v15;
    *(_BYTE *)(v20 + 16) = v16;
    v21 = v8[7];
    v22 = type metadata accessor for Date(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v28, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v8[2] = v25;
    v12 += v13;
    if (!--v9)
    {
      swift_release(v8);
      v26 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F1580(uint64_t a1)
{
  return sub_1003F159C(a1, (uint64_t *)&unk_10064DA70, (void (*)(uint64_t, uint64_t))sub_100292204, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_100140B68);
}

unint64_t sub_1003F159C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t result;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;

  v4 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(a2);
  v7 = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(v4 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease(v4);
    return (unint64_t)v8;
  }
  swift_retain(v7);
  v24 = v4;
  v10 = (_OWORD *)(v4 + 72);
  while (1)
  {
    v11 = *((_QWORD *)v10 - 5);
    v12 = *((_QWORD *)v10 - 4);
    v13 = *((_QWORD *)v10 - 3);
    v14 = *((_QWORD *)v10 - 2);
    v15 = *((_QWORD *)v10 - 1);
    v26 = *v10;
    a3(v11, v12);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v26);
    v16 = swift_retain(*((_QWORD *)&v26 + 1));
    result = a4(v11, v12, v16);
    if ((v18 & 1) != 0)
      break;
    *(_QWORD *)((char *)v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v19 = (_QWORD *)(v8[6] + 16 * result);
    *v19 = v11;
    v19[1] = v12;
    v20 = v8[7] + 40 * result;
    *(_QWORD *)v20 = v13;
    *(_QWORD *)(v20 + 8) = v14;
    *(_QWORD *)(v20 + 16) = v15;
    *(_OWORD *)(v20 + 24) = v26;
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v10 = (_OWORD *)((char *)v10 + 56);
    if (!--v9)
    {
      swift_release(v8);
      v4 = v24;
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_1006531E0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    sub_100292204(v7, v8);
    swift_unknownObjectRetain(v9);
    result = sub_100140B68(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1824(uint64_t a1)
{
  return sub_1003F2B7C(a1, &qword_10064D9B0, (uint64_t (*)(id))sub_100079D38);
}

unint64_t sub_1003F1838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064DB20);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000271D4(v7, (uint64_t)v16, &qword_1006533E8);
    result = sub_100067654((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100079B28(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1978(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_1006531B0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    result = sub_10007EF08(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = (_QWORD *)(v3[7] + 16 * result);
    *v13 = v9;
    v13[1] = v8;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5 += 4;
    v3[2] = v16;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1A98(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_1006532C0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v8 = *(v5 - 1);
    v9 = *v5;
    swift_bridgeObjectRetain(v7);
    sub_10012F5E0(v8, v9);
    result = sub_10007EF08(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = (uint64_t *)(v3[7] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5 += 4;
    v3[2] = v16;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1BBC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_1006533C0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    result = sub_100079D38(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v5 += 2;
    v3[2] = v13;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1CB8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064DAD0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_bridgeObjectRetain(v6);
    result = sub_100079D38(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1DC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  id v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064DB88);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_BYTE *)(a1 + 64);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 3);
    v7 = *((_QWORD *)v5 - 2);
    v8 = (void *)*((_QWORD *)v5 - 1);
    v9 = *v5;
    v10 = *((id *)v5 - 4);
    v11 = v8;
    result = sub_100140C98((uint64_t)v10);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v10;
    v14 = v3[7] + 32 * result;
    *(_QWORD *)v14 = v6;
    *(_QWORD *)(v14 + 8) = v7;
    *(_QWORD *)(v14 + 16) = v11;
    *(_BYTE *)(v14 + 24) = v9;
    v15 = v3[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v3[2] = v17;
    v5 += 40;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F1EEC(uint64_t a1)
{
  return sub_1003F3234(a1, &qword_10064DAD8);
}

unint64_t sub_1003F1EF8(uint64_t a1)
{
  return sub_1003F2B7C(a1, (uint64_t *)&unk_100653150, (uint64_t (*)(id))sub_100140DE8);
}

unint64_t sub_1003F1F0C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_100653370);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    v9 = v8;
    result = sub_10007EF08(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F2024(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064DB80);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_QWORD *)(a1 + 64);
  while (1)
  {
    v6 = (void *)*(v5 - 4);
    v7 = *(v5 - 3);
    v8 = *(v5 - 2);
    v9 = *((_BYTE *)v5 - 8);
    v10 = *v5;
    sub_1000E4F7C(v6, v7, v8, v9);
    swift_bridgeObjectRetain(v10);
    result = sub_100140CE4((uint64_t)v6, v7, v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = v3[6] + 32 * result;
    *(_QWORD *)v13 = v6;
    *(_QWORD *)(v13 + 8) = v7;
    *(_QWORD *)(v13 + 16) = v8;
    *(_BYTE *)(v13 + 24) = v9;
    *(_QWORD *)(v3[7] + 8 * result) = v10;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v3[2] = v16;
    v5 += 5;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F2170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10006922C(&qword_100653188);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10006922C(&qword_100653190);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v13, (uint64_t)v5, &qword_100653188);
    result = sub_10007EF98((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = (_OWORD *)(v8[7] + 32 * v17);
    v21 = *((_OWORD *)v10 + 1);
    *v20 = *(_OWORD *)v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F230C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_100653260);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    result = sub_100079D38(v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F2414(uint64_t a1)
{
  return sub_1003F2B7C(a1, (uint64_t *)&unk_10064DB50, (uint64_t (*)(id))sub_100140C4C);
}

unint64_t sub_1003F2428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_10006922C((uint64_t *)&unk_100653360);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  sub_10006922C((uint64_t *)&unk_10064DB40);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v13, (uint64_t)v5, (uint64_t *)&unk_100653360);
    v15 = *v5;
    result = sub_100140E34(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F25C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_10006922C((uint64_t *)&unk_100653350);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_10006922C(&qword_10064DB38);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v13, (uint64_t)v5, (uint64_t *)&unk_100653350);
    result = sub_100140624((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F2754(uint64_t a1)
{
  return sub_10008AE7C(a1, &qword_10064DB30, &qword_100653348);
}

unint64_t sub_1003F2768(uint64_t a1)
{
  return sub_10008AE7C(a1, &qword_10064DA50, (uint64_t *)&unk_1006531D0);
}

unint64_t sub_1003F277C(uint64_t a1)
{
  return sub_1003F2B7C(a1, (uint64_t *)&unk_10064DA28, (uint64_t (*)(id))sub_100140E80);
}

unint64_t sub_1003F2790(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_100653310);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    result = sub_10007EF08(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F28A0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_100653308);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain(v7);
    result = sub_10007EF08(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F29B0(uint64_t a1)
{
  return sub_1003F2E40(a1, &qword_100653320, (uint64_t *)&unk_100653328, (uint64_t (*)(_QWORD))sub_100140ECC);
}

unint64_t sub_1003F29CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_10006922C((uint64_t *)&unk_100644AC0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }
  sub_10006922C((uint64_t *)&unk_10064D9F0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v13, (uint64_t)v5, (uint64_t *)&unk_100644AC0);
    result = sub_100140624((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for URL(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = (_QWORD *)(v8[7] + 16 * v17);
    v21 = *((_QWORD *)v10 + 1);
    *v20 = *(_QWORD *)v10;
    v20[1] = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_12;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v25 = v27;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F2B68(uint64_t a1)
{
  return sub_1003F2B7C(a1, &qword_10064DB28, (uint64_t (*)(id))sub_100079D38);
}

unint64_t sub_1003F2B7C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  id v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(a2);
  v6 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v4);
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v6;
  }
  swift_retain();
  v8 = (void **)(a1 + 40);
  while (1)
  {
    v9 = *v8;
    v10 = *(v8 - 1);
    v11 = v9;
    result = a3(v10);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = 8 * result;
    *(_QWORD *)(v6[6] + v14) = v10;
    *(_QWORD *)(v6[7] + v14) = v11;
    v15 = v6[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6[2] = v17;
    v8 += 2;
    if (!--v7)
    {
      swift_release(v6);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F2C8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_10006922C(&qword_1006500B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (unsigned __int8 *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v24 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v24);
    return (unint64_t)v8;
  }
  sub_10006922C(&qword_100653300);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v13, (uint64_t)v5, &qword_1006500B8);
    v15 = *v5;
    result = sub_100140F60(*v5);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v15;
    v19 = v8[7];
    v20 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_12;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v24 = v26;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F2E24(uint64_t a1)
{
  return sub_1003F2E40(a1, &qword_100650A48, (uint64_t *)&unk_1006532E0, (uint64_t (*)(_QWORD))sub_100141014);
}

unint64_t sub_1003F2E40(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);

  v31 = a4;
  v7 = sub_10006922C(a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v29 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v29);
    return (unint64_t)v13;
  }
  sub_10006922C(a3);
  v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    goto LABEL_9;
  v15 = &v10[*(int *)(v7 + 48)];
  v16 = v12 + 64;
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v30 = a1;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000271D4(v18, (uint64_t)v10, a2);
    v20 = *v10;
    result = v31(*v10);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v13[6] + result) = v20;
    v24 = v13[7];
    v25 = type metadata accessor for DisplayRepresentation(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v15, v25);
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_12;
    v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      v29 = v30;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1003F2FD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_10064D990);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000271D4(v7, (uint64_t)&v14, &qword_100653168);
    v8 = v14;
    result = sub_1001410A0(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = sub_1000E85C4(&v15, v4[7] + 40 * result);
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F3108(uint64_t a1)
{
  return sub_1003F3114(a1, (uint64_t *)&unk_1006532B0);
}

unint64_t sub_1003F3114(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    result = sub_10007EF08(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F3228(uint64_t a1)
{
  return sub_1003F3234(a1, &qword_10064DAF8);
}

unint64_t sub_1003F3234(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(a2);
  v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  v5 = (_QWORD *)v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }
  swift_retain(v4);
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_unknownObjectRetain(v10);
    result = sub_10007EF08(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F3348(uint64_t a1)
{
  return sub_1003F2B7C(a1, &qword_1006532C8, (uint64_t (*)(id))sub_1001410E4);
}

unint64_t sub_1003F335C(uint64_t a1)
{
  return sub_100079A00(a1, &qword_1006533A0, &qword_1006533A8, sub_100079D38);
}

unint64_t sub_1003F3378(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C(&qword_10064CA98);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 1);
    v7 = *v5;
    v8 = (id)*(v5 - 2);
    swift_bridgeObjectRetain(v7);
    result = sub_100140E34((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v8;
    v11 = (_QWORD *)(v3[7] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F348C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10006922C((uint64_t *)&unk_1006531C0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_errorRetain(v6);
    result = sub_100140E80((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(void *a1, int a2, int a3, int a4)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, id);
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  void (*v28)(_BYTE *, id);
  _BYTE *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  void **v34;
  void *v35;
  void **v36;
  unsigned int v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void **v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t inited;
  void ***v62;
  void **v63;
  Swift::Int v64;
  Class isa;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  Class v71;
  void **v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  NSString v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  _BYTE v119[12];
  int v120;
  __int128 v121;
  uint64_t v122;
  id *v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  id v129;
  _BYTE *v130;
  id v131;
  uint64_t v132;
  _BYTE *v133;
  void **aBlock;
  uint64_t v135;
  id (*v136)(uint64_t, void *);
  void *v137;
  uint64_t (*v138)();
  uint64_t v139;
  char v140[84];
  char v141[8];

  v128 = a4;
  v120 = a3;
  LODWORD(v121) = a2;
  v132 = type metadata accessor for DOCDragPasteboardType(0);
  __chkstk_darwin(v132);
  v133 = &v119[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v119[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v123 = (id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v131 = *v123;
  LODWORD(v130) = static os_log_type_t.debug.getter();
  v127 = sub_10006922C((uint64_t *)&unk_100644560);
  v12 = swift_allocObject(v127, 192, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004D9B50;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  v13 = sub_10006A638();
  *(_QWORD *)(v12 + 64) = v13;
  v125 = (unint64_t)"ing %@ with type %@";
  *(_QWORD *)(v12 + 32) = 0xD00000000000004FLL;
  *(_QWORD *)(v12 + 40) = 0x8000000100532020;
  v124 = sub_10004F2F0(0, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  *(_QWORD *)(v12 + 96) = v124;
  v122 = sub_100083450((unint64_t *)&unk_100653128, (unint64_t *)&unk_100643CD0, NSItemProvider_ptr);
  *(_QWORD *)(v12 + 104) = v122;
  *(_QWORD *)(v12 + 72) = v4;
  v129 = v4;
  v14 = objc_msgSend(a1, "displayName");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(v12 + 136) = &type metadata for String;
  *(_QWORD *)(v12 + 144) = v13;
  *(_QWORD *)(v12 + 112) = v15;
  *(_QWORD *)(v12 + 120) = v17;
  v18 = objc_msgSend(a1, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v18);

  v20 = UTType.identifier.getter(v19);
  v22 = v21;
  v23 = *(void (**)(_BYTE *, id))(v8 + 8);
  v23(v11, (id)v7);
  *(_QWORD *)(v12 + 176) = &type metadata for String;
  *(_QWORD *)(v12 + 184) = v13;
  v126 = v13;
  *(_QWORD *)(v12 + 152) = v20;
  *(_QWORD *)(v12 + 160) = v22;
  v24 = v131;
  os_log(_:dso:log:type:_:)("%@: %@, registering %@ with type %@", 35, 2, &_mh_execute_header, v131, v130, v12);

  swift_bridgeObjectRelease(v12);
  v25 = objc_msgSend(a1, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v26 = UTType.isFolderUTI.getter();
  v130 = v11;
  v131 = (id)v7;
  v27 = v7;
  v28 = v23;
  v23(v11, (id)v27);
  if ((v26 & 1) != 0)
  {
    v29 = v133;
    v30 = v129;
    if (v121 == 2)
    {
      v31 = (void *)objc_opt_self(FPProviderDomain);
      aBlock = 0;
      v32 = a1;
      v33 = objc_msgSend(v31, "providerDomainForItem:cachePolicy:error:", v32, 3, &aBlock);
      v34 = aBlock;
      if (v33)
      {
        v35 = v33;
        v36 = aBlock;

        v37 = objc_msgSend(v35, "supportsPickingFolders");
      }
      else
      {
        v38 = aBlock;
        v39 = _convertNSErrorToError(_:)(v34);

        swift_willThrow();
        swift_errorRelease(v39);
        v37 = 0;
      }
    }
    else
    {
      v37 = v121 & 1;
    }
  }
  else
  {
    v37 = 0;
    v29 = v133;
    v30 = v129;
  }
  objc_msgSend(v30, "setPreferredPresentationStyle:", 2);
  *v29 = v26 & 1;
  v40 = swift_storeEnumTagMultiPayload(v29, v132, 0);
  DOCDragPasteboardType.typeIdentifier.getter(v40);
  v42 = v41;
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v44 = swift_allocObject(&unk_1005E8120, 24, 7);
  *(_QWORD *)(v44 + 16) = a1;
  v45 = swift_allocObject(&unk_1005E8148, 32, 7);
  *(_QWORD *)(v45 + 16) = sub_1003F7F58;
  *(_QWORD *)(v45 + 24) = v44;
  v138 = sub_10010DF60;
  v139 = v45;
  aBlock = _NSConcreteStackBlock;
  v135 = 1107296256;
  v136 = sub_1003F53D4;
  v137 = &unk_1005E8160;
  v46 = _Block_copy(&aBlock);
  v47 = v139;
  v48 = a1;
  swift_release(v47);
  objc_msgSend(v30, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:", v43, 1, v46);
  _Block_release(v46);

  v49 = objc_msgSend(v48, "displayName");
  if (!v49)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v51 = v50;
    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v51);
  }
  objc_msgSend(v30, "setSuggestedName:", v49);

  if ((v26 & 1) == 0)
    goto LABEL_15;
  LODWORD(v132) = v37;
  v52 = (void *)objc_opt_self(NSKeyedArchiver);
  aBlock = 0;
  v53 = objc_msgSend(v52, "archivedDataWithRootObject:requiringSecureCoding:error:", v48, 1, &aBlock);
  v54 = aBlock;
  if (v53)
  {
    v129 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    v57 = objc_allocWithZone((Class)NSUserActivity);
    v58 = String._bridgeToObjectiveC()();
    v59 = objc_msgSend(v57, "initWithActivityType:", v58);

    v60 = sub_10006922C(&qword_100643CC0);
    inited = swift_initStackObject(v60, v141);
    v121 = xmmword_1004D9670;
    *(_OWORD *)(inited + 16) = xmmword_1004D9670;
    v62 = (void ***)DOCUserActivityFPItemKey.unsafeMutableAddressor();
    v63 = v62[1];
    *(_QWORD *)(inited + 32) = *v62;
    *(_QWORD *)(inited + 40) = v63;
    swift_bridgeObjectRetain(v63);
    v64 = sub_1003F98B8(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v64);
    objc_msgSend(v59, "setRequiredUserInfoKeys:", isa);

    v66 = sub_10006922C((uint64_t *)&unk_100651EC0);
    v67 = swift_initStackObject(v66, v140);
    *(_OWORD *)(v67 + 16) = v121;
    v68 = (uint64_t)v62[1];
    aBlock = *v62;
    v135 = v68;
    swift_bridgeObjectRetain(v68);
    AnyHashable.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v67 + 96) = &type metadata for Data;
    v69 = (uint64_t)v129;
    *(_QWORD *)(v67 + 72) = v129;
    *(_QWORD *)(v67 + 80) = v56;
    sub_10012F5E0(v69, v56);
    v70 = sub_1003F1838(v67);
    v71 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v70);
    objc_msgSend(v59, "addUserInfoEntriesFromDictionary:", v71);

    objc_msgSend(v59, "setEligibleForSearch:", 0);
    objc_msgSend(v59, "setEligibleForHandoff:", 0);
    objc_msgSend(v59, "setEligibleForPrediction:", 0);
    objc_msgSend(v59, "setEligibleForPublicIndexing:", 0);
    objc_msgSend(v30, "sbui_setRequiredApplicationBundleIdentifier:", DOCDocumentsAppBundleIdentifier);
    objc_msgSend(v30, "registerObject:visibility:", v59, 0);

    v29 = v133;
    sub_1000D4C00(v69, v56);
  }
  else
  {
    v72 = v54;
    v73 = _convertNSErrorToError(_:)(v54);

    swift_willThrow();
    v74 = *v123;
    v75 = static os_log_type_t.debug.getter();
    v76 = swift_allocObject(v127, 112, 7);
    *(_OWORD *)(v76 + 16) = xmmword_1004D4CE0;
    v77 = v126;
    *(_QWORD *)(v76 + 56) = &type metadata for String;
    *(_QWORD *)(v76 + 64) = v77;
    v78 = v125 | 0x8000000000000000;
    *(_QWORD *)(v76 + 32) = 0xD00000000000004FLL;
    *(_QWORD *)(v76 + 40) = v78;
    v79 = v122;
    *(_QWORD *)(v76 + 96) = v124;
    *(_QWORD *)(v76 + 104) = v79;
    *(_QWORD *)(v76 + 72) = v30;
    v80 = v30;
    os_log(_:dso:log:type:_:)("%@: %@, failed to regsiter NSUserActivity for folder", 52, 2, &_mh_execute_header, v74, v75, v76);

    swift_bridgeObjectRelease(v76);
    swift_errorRelease(v73);
  }
  if ((v132 & 1) == 0)
  {
    if ((v120 & 1) == 0)
    {
      v102 = *v123;
      v103 = static os_log_type_t.debug.getter();
      v104 = swift_allocObject(v127, 112, 7);
      *(_OWORD *)(v104 + 16) = xmmword_1004D4CE0;
      v105 = v126;
      *(_QWORD *)(v104 + 56) = &type metadata for String;
      *(_QWORD *)(v104 + 64) = v105;
      v106 = v125 | 0x8000000000000000;
      *(_QWORD *)(v104 + 32) = 0xD00000000000004FLL;
      *(_QWORD *)(v104 + 40) = v106;
      v107 = v122;
      *(_QWORD *)(v104 + 96) = v124;
      *(_QWORD *)(v104 + 104) = v107;
      *(_QWORD *)(v104 + 72) = v30;
      v108 = v30;
      os_log(_:dso:log:type:_:)("%@: %@, registerFileProviderItem", 32, 2, &_mh_execute_header, v102, v103, v104);

      swift_bridgeObjectRelease(v104);
      v109 = objc_msgSend(v48, "contentType");
      v110 = v130;
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v109);

      UTType.identifier.getter(v111);
      v113 = v112;
      v28(v110, v131);
      v96 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v113);
      v114 = swift_allocObject(&unk_1005E8210, 24, 7);
      *(_QWORD *)(v114 + 16) = v48;
      v115 = swift_allocObject(&unk_1005E8238, 32, 7);
      *(_QWORD *)(v115 + 16) = sub_1003F7F68;
      *(_QWORD *)(v115 + 24) = v114;
      v138 = sub_10010DF60;
      v139 = v115;
      aBlock = _NSConcreteStackBlock;
      v135 = 1107296256;
      v136 = sub_1003F562C;
      v137 = &unk_1005E8250;
      v99 = _Block_copy(&aBlock);
      v116 = v139;
      v117 = v48;
      swift_release(v116);
      objc_msgSend(v108, "registerFileProviderItemForTypeIdentifier:visibility:loadHandler:", v96, 0, v99);
      goto LABEL_22;
    }
  }
  else
  {
LABEL_15:
    static LaunchUtils.bundleIdentifierOfDefaultApp(for:)(v48);
    if (v81)
    {
      v82 = v81;
      v83 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v82);
    }
    else
    {
      v83 = 0;
    }
    objc_msgSend(v30, "sbui_setPreferredApplicationBundleIdentifier:", v83);

    if ((v128 & 1) == 0)
    {
      v84 = *v123;
      v85 = static os_log_type_t.debug.getter();
      v86 = swift_allocObject(v127, 112, 7);
      *(_OWORD *)(v86 + 16) = xmmword_1004D4CE0;
      v87 = v126;
      *(_QWORD *)(v86 + 56) = &type metadata for String;
      *(_QWORD *)(v86 + 64) = v87;
      v88 = v125 | 0x8000000000000000;
      *(_QWORD *)(v86 + 32) = 0xD00000000000004FLL;
      *(_QWORD *)(v86 + 40) = v88;
      v89 = v122;
      *(_QWORD *)(v86 + 96) = v124;
      *(_QWORD *)(v86 + 104) = v89;
      *(_QWORD *)(v86 + 72) = v30;
      v90 = v30;
      os_log(_:dso:log:type:_:)("%@: %@, registerFileRepresentation", 34, 2, &_mh_execute_header, v84, v85, v86);

      swift_bridgeObjectRelease(v86);
      v91 = objc_msgSend(v48, "contentType");
      v92 = v130;
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v91);

      UTType.identifier.getter(v93);
      v95 = v94;
      v28(v92, v131);
      v96 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v95);
      v97 = swift_allocObject(&unk_1005E8198, 24, 7);
      *(_QWORD *)(v97 + 16) = v48;
      v98 = swift_allocObject(&unk_1005E81C0, 32, 7);
      *(_QWORD *)(v98 + 16) = sub_1003F7F60;
      *(_QWORD *)(v98 + 24) = v97;
      v138 = sub_100066584;
      v139 = v98;
      aBlock = _NSConcreteStackBlock;
      v135 = 1107296256;
      v136 = sub_1003F6078;
      v137 = &unk_1005E81D8;
      v99 = _Block_copy(&aBlock);
      v100 = v139;
      v101 = v48;
      swift_release(v100);
      objc_msgSend(v90, "registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:", v96, 1, 0, v99);
LABEL_22:
      _Block_release(v99);

    }
  }
  return sub_1000E2A78((uint64_t)v29);
}

void *sub_1003F4328()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  void *v44;

  v1 = type metadata accessor for DOCDragPasteboardType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6.n128_f64[0] = __chkstk_darwin(v5);
  v8 = (char *)&v38 - v7;
  v9 = *(_QWORD *)DOCAcceptableDragPasteboardTypes.unsafeMutableAddressor(v6);
  v10 = _swiftEmptyArrayStorage;
  v43[0] = (uint64_t)_swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain(v9);
  if (v11)
  {
    v40 = v0;
    v12 = 0;
    v13 = _swiftEmptyArrayStorage;
    v41 = v11;
    v42 = v2;
    while ((unint64_t)v12 < *(_QWORD *)(v9 + 16))
    {
      v10 = (_QWORD *)((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v14 = *(_QWORD *)(v2 + 72);
      v15 = sub_1000E2A34((uint64_t)v10 + v9 + v14 * v12, (uint64_t)v8);
      if ((DOCDragPasteboardType.isFPItemFileOrLocation.getter(v15) & 1) != 0)
      {
        sub_1000E2A78((uint64_t)v8);
      }
      else
      {
        sub_1001D0788((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          sub_100154FFC(0, v13[2] + 1, 1);
        v13 = (_QWORD *)v43[0];
        v17 = *(_QWORD *)(v43[0] + 16);
        v16 = *(_QWORD *)(v43[0] + 24);
        if (v17 >= v16 >> 1)
        {
          sub_100154FFC(v16 > 1, v17 + 1, 1);
          v13 = (_QWORD *)v43[0];
        }
        v13[2] = v17 + 1;
        sub_1001D0788((uint64_t)v4, (uint64_t)v10 + (_QWORD)v13 + v17 * v14, (uint64_t (*)(_QWORD))&type metadata accessor for DOCDragPasteboardType);
        v11 = v41;
        v2 = v42;
      }
      if (v11 == ++v12)
      {
        v10 = (_QWORD *)v43[0];
        v0 = v40;
        goto LABEL_13;
      }
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
LABEL_13:
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v9).n128_u64[0];
    v44 = &_swiftEmptySetSingleton;
    v19 = objc_msgSend(v0, "items", v18);
    v20 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    if (!((unint64_t)v12 >> 62))
    {
      v21 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v21)
        goto LABEL_42;
      goto LABEL_15;
    }
  }
  if (v12 < 0)
    v36 = v12;
  else
    v36 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v21 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v12);
  if (v21)
  {
LABEL_15:
    v22 = 0;
    v23 = v12 & 0xC000000000000001;
    v41 = v12 + 32;
    v42 = v12 & 0xFFFFFFFFFFFFFF8;
    v39 = v21;
    v40 = (void *)v12;
    v38 = v12 & 0xC000000000000001;
    while (1)
    {
      if (v23)
      {
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v12);
      }
      else
      {
        if (v22 >= *(_QWORD *)(v42 + 16))
          goto LABEL_37;
        v25 = *(id *)(v41 + 8 * v22);
      }
      v26 = v25;
      if (__OFADD__(v22++, 1))
        goto LABEL_36;
      v28 = objc_msgSend(v25, "itemProvider");
      v29 = objc_msgSend(v28, "registeredTypeIdentifiers");

      v30 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for String);
      v31 = v30[2];
      if (!v31)
        break;
      v33 = v30[4];
      v32 = v30[5];
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v32);
      if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v10))
      {
LABEL_17:
        swift_bridgeObjectRelease_n(v30, 2);
        sub_10007AB00(v43, v33, v32);

        v24 = v43[1];
LABEL_18:
        swift_bridgeObjectRelease(v24);
        if (v22 == v21)
          goto LABEL_42;
      }
      else
      {
        swift_bridgeObjectRelease(v32);
        if (v31 != 1)
        {
          v12 = (uint64_t)(v30 + 7);
          v34 = 1;
          while (1)
          {
            v35 = v34 + 1;
            if (__OFADD__(v34, 1))
              break;
            v33 = *(_QWORD *)(v12 - 8);
            v32 = *(_QWORD *)v12;
            swift_bridgeObjectRetain(*(_QWORD *)v12);
            if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v10))
            {
              v21 = v39;
              v12 = (uint64_t)v40;
              v23 = v38;
              goto LABEL_17;
            }
            swift_bridgeObjectRelease(v32);
            ++v34;
            v12 += 16;
            if (v35 == v31)
              goto LABEL_31;
          }
          __break(1u);
          goto LABEL_35;
        }
LABEL_31:
        swift_bridgeObjectRelease_n(v30, 2);

        v21 = v39;
        v12 = (uint64_t)v40;
        v23 = v38;
        if (v22 == v39)
          goto LABEL_42;
      }
    }

    v24 = (uint64_t)v30;
    goto LABEL_18;
  }
LABEL_42:
  swift_release(v10);
  swift_bridgeObjectRelease(v12);
  return v44;
}

uint64_t sub_1003F4740()
{
  uint64_t v0;
  id v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v9;
  id v10;

  v1 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, "eligibleActionsForDroppingUTIs:underItem:", isa, v0);

  type metadata accessor for FPAction(0);
  v5 = v4;
  v6 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v3, v5, v6);

  v8 = FPActionReparent;
  LOBYTE(v1) = sub_100028BE0((uint64_t)v8, v7);

  if ((v1 & 1) != 0)
  {
    v9 = 1;
  }
  else
  {
    v10 = FPActionCopy;
    v9 = sub_100028BE0((uint64_t)v10, v7);

  }
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

double sub_1003F4868(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void **v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  double result;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;

  v39 = a2;
  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter(v7);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v6);
  v9 = v8;
  v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v11 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
  v12 = static os_log_type_t.debug.getter();
  v13 = sub_10006922C((uint64_t *)&unk_100644560);
  v14 = swift_allocObject(v13, 152, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_QWORD *)(v14 + 64) = sub_10006A638();
  *(_QWORD *)(v14 + 32) = 0xD000000000000044;
  *(_QWORD *)(v14 + 40) = 0x80000001005321A0;
  v38 = v9;
  v15 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v14 + 96) = &type metadata for Int;
  *(_QWORD *)(v14 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 72) = v15;
  v16 = objc_msgSend(a1, "items");
  v17 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v35 = v18;
    else
      v35 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v18).n128_u64[0];
  *(_QWORD *)(v14 + 136) = &type metadata for Int;
  *(_QWORD *)(v14 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 112) = v19;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v11,
    v12,
    v14,
    v20);

  v21 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v14).n128_f64[0]);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v17);

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v36 = v22;
    else
      v36 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = v38;
  swift_bridgeObjectRelease(v22);
  if (v15 == v23)
  {
    v25 = _swiftEmptyArrayStorage;
    if (v15)
    {
      v40 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v15);
      v26 = (void **)(v24 + 40);
      do
      {
        v27 = *v26;
        v26 += 2;
        v28 = v27;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v29 = v40[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
        v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
        specialized ContiguousArray._endMutation()(v30);
        --v15;
      }
      while (v15);
      v25 = v40;
    }
    v31 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    sub_10047B204((uint64_t)v25, v39, 0, 0);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v25);

  }
  else
  {
    v33 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v24).n128_f64[0]);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v17);

    sub_1003FA390(v34, v39, (uint64_t)sub_1003F68F8, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003F4BFC()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v4;
  _QWORD v5[4];

  v1 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission");
  v2 = (unint64_t)objc_msgSend(v1, "dataOwnerStateForNode:", v0);

  if (v2 < 3)
    return qword_1004E7030[v2];
  type metadata accessor for DOCDataOwnerState(0);
  v5[3] = v4;
  v5[0] = v2;
  doc_warnUnrecognizedEnumValueEncountered(_:)(v5);
  sub_100068588(v5);
  return 0;
}

double sub_1003F4C9C(void *a1, void *a2, void (*a3)(_QWORD *, __n128), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void (*v48)(_QWORD *, __n128);
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  _QWORD *v54;

  v47 = a2;
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject(&unk_1005E8350, 32, 7);
  v48 = a3;
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v50 = v11;
  v51 = a4;
  v12 = swift_retain_n(a4, 2);
  static UTType.item.getter(v12);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v10);
  v14 = v13;
  v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v52 = v7;
  v16 = v15(v10, v7);
  v17 = *(id *)DOCLog.UI.unsafeMutableAddressor(v16);
  v49 = static os_log_type_t.debug.getter(v17);
  v18 = sub_10006922C((uint64_t *)&unk_100644560);
  v19 = swift_allocObject(v18, 152, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_10006A638();
  *(_QWORD *)(v19 + 32) = 0xD000000000000044;
  *(_QWORD *)(v19 + 40) = 0x80000001005321A0;
  v20 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v19 + 96) = &type metadata for Int;
  *(_QWORD *)(v19 + 104) = &protocol witness table for Int;
  *(_QWORD *)&v53 = v20;
  *(_QWORD *)(v19 + 72) = v20;
  v21 = objc_msgSend(a1, "items");
  v22 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v45 = v23;
    else
      v45 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
  *(_QWORD *)(v19 + 136) = &type metadata for Int;
  *(_QWORD *)(v19 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v19 + 112) = v24;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v17,
    v49,
    v19,
    v25);

  v26 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v19).n128_f64[0]);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v22);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v46 = v27;
    else
      v46 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v29 = swift_bridgeObjectRelease(v27);
  if ((_QWORD)v53 == v28)
  {
    v30 = _swiftEmptyArrayStorage;
    v54 = _swiftEmptyArrayStorage;
    v31 = *(_QWORD *)(v14 + 16);
    if (v31)
    {
      swift_bridgeObjectRetain(v14);
      for (i = 0; i != v31; ++i)
      {
        v53 = *(_OWORD *)(v14 + 16 * i + 32);
        v33 = (id)v53;
        v34 = *((id *)&v53 + 1);
        v35 = objc_msgSend(v34, "contentType", v47);
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v35);

        LOBYTE(v35) = UTType.isFolderUTI.getter(v36);
        v15(v10, v52);
        if ((v35 & 1) != 0)
        {
          v37 = v54;
          if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
          {
            sub_100155130(0, v37[2] + 1, 1);
            v37 = v54;
          }
          v39 = v37[2];
          v38 = v37[3];
          if (v39 >= v38 >> 1)
          {
            sub_100155130(v38 > 1, v39 + 1, 1);
            v37 = v54;
          }
          v37[2] = v39 + 1;
          *(_OWORD *)&v37[2 * v39 + 4] = v53;
        }
        else
        {

        }
      }
      v29 = swift_bridgeObjectRelease(v14);
      v30 = v54;
    }
    v44 = v51;
    v48(v30, v29);
    swift_release(v44);
    swift_release(v50);
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  }
  else
  {
    v40 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v14).n128_f64[0]);
    v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v22);

    v42 = v50;
    sub_1003FA390(v41, v47, (uint64_t)sub_1003FD478, v50);
    swift_release(v51);
    swift_release(v42);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v41).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003F5120(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter(v6);
  swift_getObjectType(a1);
  v7 = (uint64_t)sub_1003F8940(a1, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((unint64_t)v7 >> 62)
    goto LABEL_12;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v9 = 4;
    while (1)
    {
      v10 = (v7 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v7)
          : *(id *)(v7 + 8 * v9);
      v11 = v10;
      v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v13 = objc_msgSend(v10, "providerDomainID");
      v14 = DOCProviderDomainIDIsSharedServerDomainID(v13);

      if ((v14 & 1) == 0)
      {
        ++v9;
        if (v12 != v8)
          continue;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_12:
    if (v7 < 0)
      v15 = v7;
    else
      v15 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
  }
  v14 = 0;
LABEL_17:
  swift_bridgeObjectRelease_n(v7, 2);
  return v14;
}

uint64_t sub_1003F529C(void (*a1)(uint64_t, unint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  id v12;

  v12 = 0;
  v4 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", a3, 1, &v12);
  v5 = v12;
  if (v4)
  {
    v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

    sub_10012F5E0(v6, v8);
    a1(v6, v8, 0);
    sub_1000D4C00(v6, v8);
    sub_1000D4C00(v6, v8);
  }
  else
  {
    v9 = v5;
    v10 = _convertNSErrorToError(_:)(v5);

    swift_willThrow();
    swift_errorRetain(v10);
    a1(0, 0xF000000000000000, v10);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  return 0;
}

id sub_1003F53D4(uint64_t a1, void *a2)
{
  return sub_1003F608C(a1, a2, (uint64_t)&unk_1005E88F0, (uint64_t)sub_1003FD8C0);
}

void sub_1003F53E8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  isa = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = _convertErrorToNSError(_:)(a3);
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);

}

uint64_t sub_1003F5468(void (*a1)(void *, _QWORD), uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  void (*v26)(void *, _QWORD);

  v25 = a2;
  v26 = a1;
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(id *)DOCLog.UI.unsafeMutableAddressor(v6);
  v24 = static os_log_type_t.debug.getter();
  v10 = sub_10006922C((uint64_t *)&unk_100644560);
  v11 = swift_allocObject(v10, 152, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v12 = sub_10006A638();
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 32) = 0xD00000000000004FLL;
  *(_QWORD *)(v11 + 40) = 0x8000000100532020;
  v13 = objc_msgSend(a3, "displayName");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(v11 + 96) = &type metadata for String;
  *(_QWORD *)(v11 + 104) = v12;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = v16;
  v17 = objc_msgSend(a3, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = UTType.identifier.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *(_QWORD *)(v11 + 136) = &type metadata for String;
  *(_QWORD *)(v11 + 144) = v12;
  *(_QWORD *)(v11 + 112) = v19;
  *(_QWORD *)(v11 + 120) = v21;
  os_log(_:dso:log:type:_:)("%@: providing %@ with type %@", 29, 2, &_mh_execute_header, v9, v24, v11);

  swift_bridgeObjectRelease(v11);
  v26(a3, 0);
  return 0;
}

id sub_1003F562C(uint64_t a1, void *a2)
{
  return sub_1003F608C(a1, a2, (uint64_t)&unk_1005E8800, (uint64_t)sub_1001F8D08);
}

uint64_t sub_1003F5640(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  id v28;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  v32 = a1;
  v33 = a2;
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(id *)DOCLog.UI.unsafeMutableAddressor(v6);
  v31 = static os_log_type_t.debug.getter();
  v10 = sub_10006922C((uint64_t *)&unk_100644560);
  v11 = swift_allocObject(v10, 152, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v12 = sub_10006A638();
  *(_QWORD *)(v11 + 64) = v12;
  *(_QWORD *)(v11 + 32) = 0xD00000000000004FLL;
  *(_QWORD *)(v11 + 40) = 0x8000000100532020;
  v13 = objc_msgSend(a3, "displayName");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *(_QWORD *)(v11 + 96) = &type metadata for String;
  *(_QWORD *)(v11 + 104) = v12;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = v16;
  v17 = objc_msgSend(a3, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v19 = UTType.identifier.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *(_QWORD *)(v11 + 136) = &type metadata for String;
  *(_QWORD *)(v11 + 144) = v12;
  *(_QWORD *)(v11 + 112) = v19;
  *(_QWORD *)(v11 + 120) = v21;
  os_log(_:dso:log:type:_:)("%@: providing %@ with type %@", 29, 2, &_mh_execute_header, v9, v31, v11);

  swift_bridgeObjectRelease(v11);
  v22 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v23 = (_QWORD *)swift_allocObject(&unk_1005E8850, 40, 7);
  v24 = v32;
  v25 = v33;
  v23[2] = a3;
  v23[3] = v24;
  v23[4] = v25;
  aBlock[4] = sub_1003FD810;
  v35 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005E8868;
  v26 = _Block_copy(aBlock);
  v27 = v35;
  v28 = a3;
  swift_retain();
  swift_release(v27);
  objc_msgSend(v22, "fetchURLForItem:completionHandler:", v28, v26);
  _Block_release(v26);

  return 0;
}

uint64_t sub_1003F58BC(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD), void *a3, void (*a4)(_QWORD, _QWORD, _QWORD), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  void (*v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(_QWORD, _QWORD, _QWORD);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD, _QWORD, _QWORD);
  uint64_t v95;
  __int128 aBlock;
  uint64_t (*v97)(uint64_t);
  void *v98;
  uint64_t v99;
  uint64_t v100;

  v93 = a5;
  v94 = a4;
  v84 = a2;
  v7 = type metadata accessor for UTType(0);
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  __chkstk_darwin(v10);
  v89 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v87 = *(_QWORD *)(v12 - 8);
  v88 = v12;
  __chkstk_darwin(v12);
  v86 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for DispatchTime(0);
  v83 = *(_QWORD *)(v92 - 8);
  v14 = __chkstk_darwin(v92);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v85 = (char *)&v79 - v17;
  v18 = sub_10006922C(&qword_100643470);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v79 - v22;
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64);
  v26 = __chkstk_darwin(v24);
  v80 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v79 - v27;
  v29 = a1;
  v31 = v30;
  sub_1000271D4(v29, (uint64_t)v23, &qword_100643470);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v23, 1, v24);
  v95 = v31;
  if (v32 == 1)
  {
    v92 = v24;
    v33 = sub_10000CB4C((uint64_t)v23, &qword_100643470);
    v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v33);
    LODWORD(v91) = static os_log_type_t.error.getter(v34);
    v35 = sub_10006922C((uint64_t *)&unk_100644560);
    v36 = a3;
    v37 = swift_allocObject(v35, 192, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1004D9B50;
    *(_QWORD *)(v37 + 56) = &type metadata for String;
    v38 = sub_10006A638();
    *(_QWORD *)(v37 + 64) = v38;
    *(_QWORD *)(v37 + 32) = 0xD00000000000004FLL;
    *(_QWORD *)(v37 + 40) = 0x8000000100532020;
    v39 = objc_msgSend(v36, "displayName");
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    *(_QWORD *)(v37 + 96) = &type metadata for String;
    *(_QWORD *)(v37 + 104) = v38;
    *(_QWORD *)(v37 + 72) = v40;
    *(_QWORD *)(v37 + 80) = v42;
    v43 = objc_msgSend(v36, "contentType");
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v43);

    v45 = UTType.identifier.getter(v44);
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v9, v82);
    *(_QWORD *)(v37 + 136) = &type metadata for String;
    *(_QWORD *)(v37 + 144) = v38;
    *(_QWORD *)(v37 + 112) = v45;
    *(_QWORD *)(v37 + 120) = v47;
    v48 = v84;
    if (v84)
    {
      v49 = _convertErrorToNSError(_:)(v84);
      v98 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v99 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&aBlock = v49;
      sub_1000E85C4(&aBlock, v37 + 152);
    }
    else
    {
      *(_QWORD *)(v37 + 176) = &type metadata for String;
      *(_QWORD *)(v37 + 184) = v38;
      *(_QWORD *)(v37 + 152) = 0xD000000000000013;
      *(_QWORD *)(v37 + 160) = 0x8000000100516BA0;
    }
    v78 = v94;
    v77 = v95;
    os_log(_:dso:log:type:_:)("%@: failed to provide %@ with type %@ error: %@", 47, 2, &_mh_execute_header, v34, v91, v37);

    swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v21, 1, 1, v92);
    v78(v21, 0, v48);
    return sub_10000CB4C((uint64_t)v21, &qword_100643470);
  }
  else
  {
    v84 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v31 + 32);
    v50 = v84(v28, v23, v24);
    v51 = *(id *)DOCLog.UI.unsafeMutableAddressor(v50);
    LODWORD(v82) = static os_log_type_t.debug.getter();
    v52 = sub_10006922C((uint64_t *)&unk_100644560);
    v53 = swift_allocObject(v52, 112, 7);
    *(_OWORD *)(v53 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v53 + 56) = &type metadata for String;
    *(_QWORD *)(v53 + 64) = sub_10006A638();
    *(_QWORD *)(v53 + 32) = 0xD00000000000004FLL;
    *(_QWORD *)(v53 + 40) = 0x8000000100532020;
    URL._bridgeToObjectiveC()((NSURL *)0x8000000100532020);
    v55 = v54;
    v56 = v24;
    *(_QWORD *)(v53 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v53 + 104) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v53 + 72) = v55;
    os_log(_:dso:log:type:_:)("%@: successfully provided %@", 28, 2, &_mh_execute_header, v51, v82, v53);

    swift_bridgeObjectRelease(v53);
    LODWORD(v82) = URL.startAccessingSecurityScopedResource()();
    v57 = v95;
    v58 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    v58(v21, v28, v56);
    v59 = v56;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v21, 0, 1, v56);
    v94(v21, 1, 0);
    sub_10000CB4C((uint64_t)v21, &qword_100643470);
    v60 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v61 = (void *)static OS_dispatch_queue.main.getter(v60);
    static DispatchTime.now()(v61);
    v62 = v85;
    + infix(_:_:)(v16, 5.0);
    v94 = *(void (**)(_QWORD, _QWORD, _QWORD))(v83 + 8);
    ((void (*)(char *, uint64_t))v94)(v16, v92);
    v63 = v80;
    v58(v80, v28, v56);
    v64 = *(unsigned __int8 *)(v57 + 80);
    v65 = (v64 + 17) & ~v64;
    v66 = swift_allocObject(&unk_1005E88A0, v65 + v25, v64 | 7);
    *(_BYTE *)(v66 + 16) = v82 & 1;
    v84(v66 + v65, v63, v56);
    v99 = (uint64_t)sub_1003FD87C;
    v100 = v66;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v97 = sub_10004A82C;
    v98 = &unk_1005E88B8;
    v67 = _Block_copy(&aBlock);
    v68 = swift_release(v100);
    v69 = v86;
    static DispatchQoS.unspecified.getter(v68);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v70 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v71 = sub_10006922C((uint64_t *)&unk_100647540);
    v72 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v73 = v89;
    v74 = v71;
    v75 = v91;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v74, v72, v91, v70);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v62, v69, v73, v67);
    _Block_release(v67);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v73, v75);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v69, v88);
    ((void (*)(char *, uint64_t))v94)(v62, v92);
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v28, v59);
  }
}

id sub_1003F6078(uint64_t a1, void *a2)
{
  return sub_1003F608C(a1, a2, (uint64_t)&unk_1005E8828, (uint64_t)sub_1003FD7DC);
}

id sub_1003F608C(uint64_t a1, void *aBlock, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  void *v10;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v10 = (void *)v7(a4, v9);
  swift_release(v6);
  swift_release(v9);
  return v10;
}

void sub_1003F6114(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSURL *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v10, &qword_100643470);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a3)
    v16 = (void *)_convertErrorToNSError(_:)(a3);
  else
    v16 = 0;
  (*(void (**)(uint64_t, void *, _QWORD, void *))(a4 + 16))(a4, v14, a2 & 1, v16);

}

double sub_1003F6224(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  id v11;
  id v12;
  Class isa;
  Class v14;
  id v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  double result;
  uint64_t v26;
  void **v27;
  unint64_t v28;
  void (*v29)(uint64_t, void *);
  void *v30;
  uint64_t (*v31)(uint64_t);
  _QWORD *v32;

  v3 = v2;
  v6 = (id)FPTagFromDOCTag(v3);
  v7 = swift_bridgeObjectRetain(a1);
  v8 = (uint64_t)sub_1003F9E4C(v7, v6);
  swift_bridgeObjectRelease(a1);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v26 = v8;
    else
      v26 = v8 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v26) >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    v9 = v6;
    v10 = sub_1003FA184(v8, v9);

    v11 = objc_msgSend((id)objc_opt_self(DOCUndoManager), "shared");
    v12 = objc_allocWithZone((Class)DOCSetTagsOperation);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v8);
    sub_10006922C(&qword_100644AF8);
    v14 = Array._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend(v12, "initWithItems:tagsLists:isUndoable:shouldClearUndoStack:undoManager:", isa, v14, 1, 0, v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v16 = (_QWORD *)swift_allocObject(&unk_1005E8418, 40, 7);
    v16[2] = a1;
    v16[3] = v3;
    v16[4] = a2;
    v31 = sub_1003FD4DC;
    v32 = v16;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_10015936C;
    v30 = &unk_1005E8430;
    v17 = _Block_copy(&v27);
    v18 = v32;
    swift_bridgeObjectRetain(a1);
    v19 = v15;
    v20 = v3;
    v21 = a2;
    swift_release(v18);
    objc_msgSend(v19, "setActionCompletionBlock:", v17);
    _Block_release(v17);

    v22 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    objc_msgSend(v22, "scheduleAction:", v19);

    v27 = (void **)0xD00000000000002ELL;
    v28 = 0x8000000100532300;
    v29 = 0;
    v30 = 0;
    LOBYTE(v31) = 1;
    v24 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v23);
    DOCAnalyticsManager.sendItemTaggedEvent(_:)(&v27);

    return result;
  }

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1003F6508(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;

  if (result)
  {
    v7 = result;
    v8 = static os_log_type_t.error.getter(result);
    v9 = sub_10006922C((uint64_t *)&unk_100644560);
    v10 = swift_allocObject(v9, 152, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v10 + 56) = sub_10006922C(&qword_100644580);
    *(_QWORD *)(v10 + 64) = sub_100062698((unint64_t *)&qword_10064C908, &qword_100644580, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(v10 + 32) = a2;
    *(_QWORD *)(v10 + 96) = sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
    *(_QWORD *)(v10 + 104) = sub_100083450((unint64_t *)&unk_1006533D0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
    *(_QWORD *)(v10 + 72) = a3;
    swift_bridgeObjectRetain(a2);
    v11 = a3;
    v12 = _convertErrorToNSError(_:)(v7);
    *(_QWORD *)(v10 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v10 + 144) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v10 + 112) = v12;
    v13 = sub_10004F2F0(0, (unint64_t *)&qword_100646CD0, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.default.getter(v13);
    os_log(_:dso:log:type:_:)("Error settings the tag for items %@ tags %@. Error: %@", 54, 2, &_mh_execute_header, v14, v8, v10);
    swift_bridgeObjectRelease(v10);

    v15 = swift_allocObject(&unk_1005E8468, 32, 7);
    *(_QWORD *)(v15 + 16) = v7;
    *(_QWORD *)(v15 + 24) = a4;
    v19[4] = sub_10034730C;
    v20 = v15;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_10004A82C;
    v19[3] = &unk_1005E8480;
    v16 = _Block_copy(v19);
    v17 = v20;
    swift_errorRetain(v7);
    swift_errorRetain(v7);
    v18 = a4;
    swift_release(v17);
    DOCRunInMainThread(v16);
    _Block_release(v16);
    return swift_errorRelease(v7);
  }
  return result;
}

double sub_1003F673C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, __n128), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t i;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  double result;
  uint64_t v23;
  void (*v24)(_QWORD, __n128);
  __int128 v25;
  _QWORD *v26;

  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9.n128_f64[0] = __chkstk_darwin(v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _swiftEmptyArrayStorage;
  v26 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v23 = a4;
    v24 = a3;
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v13; ++i)
    {
      v25 = *(_OWORD *)(a1 + 16 * i + 32);
      v15 = (id)v25;
      v16 = *((id *)&v25 + 1);
      v17 = objc_msgSend(v16, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v17);

      LOBYTE(v17) = UTType.isFolderUTI.getter(v18);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if ((v17 & 1) != 0)
      {
        v19 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
        {
          sub_100155130(0, v19[2] + 1, 1);
          v19 = v26;
        }
        v21 = v19[2];
        v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          sub_100155130(v20 > 1, v21 + 1, 1);
          v19 = v26;
        }
        v19[2] = v21 + 1;
        *(_OWORD *)&v19[2 * v21 + 4] = v25;
      }
      else
      {

      }
    }
    v9 = swift_bridgeObjectRelease(a1);
    v12 = v26;
    a3 = v24;
  }
  a3(v12, v9);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_1003F68F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void **v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = (void **)(a1 + 40);
    do
    {
      v6 = *v5;
      v5 += 2;
      v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      --v3;
    }
    while (v3);
  }
  v10 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_10047B204((uint64_t)_swiftEmptyArrayStorage, a2, 0, 0);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

}

uint64_t sub_1003F69EC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  uint64_t v5;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v7 = (void **)(a1 + 40);
    do
    {
      v8 = *v7;
      v7 += 2;
      v9 = v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v10 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
      specialized ContiguousArray._endMutation()(v11);
      --v5;
    }
    while (v5);
  }
  a3(_swiftEmptyArrayStorage, a2);
  return swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

void sub_1003F6AB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  _QWORD v12[5];
  _QWORD *v13;

  v8 = (_QWORD *)swift_allocObject(&unk_1005E8300, 48, 7);
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v12[4] = sub_1003FCDF4;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10004A82C;
  v12[3] = &unk_1005E8318;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v11 = a4;
  swift_release(v10);
  DOCRunInMainThread(v9);
  _Block_release(v9);
}

double sub_1003F6B88(uint64_t a1, void (*a2)(_QWORD *, uint64_t), uint64_t a3, uint64_t a4)
{
  int64_t v6;
  id *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  double result;
  __int128 v14;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_100155130(0, v6, 0);
    v8 = (id *)(a1 + 32);
    do
    {
      v14 = *(_OWORD *)v8;
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      v11 = *v8;
      v12 = *((id *)&v14 + 1);
      if (v10 >= v9 >> 1)
        sub_100155130(v9 > 1, v10 + 1, 1);
      _swiftEmptyArrayStorage[2] = v10 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v10 + 4] = v14;
      v8 += 2;
      --v6;
    }
    while (v6);
  }
  a2(_swiftEmptyArrayStorage, a4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  return result;
}

void sub_1003F6C8C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  _OWORD *v40;
  id v41;
  void *v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  Swift::String v57;
  Swift::String_optional v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String *v61;
  Class v62;
  void *v63;
  void *v64;
  _QWORD *v65;
  objc_class *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  char *v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  Class isa;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  dispatch_semaphore_t v96;
  dispatch_group_t v97;
  void *v98;
  void *v99;
  _QWORD *v100;
  char *v101;
  id v102;
  char *v103;
  NSObject *v104;
  NSObject *v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  NSURL *v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  void *v118;
  void *v119;
  _QWORD *v120;
  id v121;
  __int128 v122;
  uint64_t v123;
  dispatch_semaphore_t v124;
  uint64_t v125;
  Class v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  dispatch_group_t v133;
  void *v134;
  char v135[24];
  __int128 aBlock;
  void *v137;
  void *v138;
  uint64_t v139;
  _QWORD *p_countAndFlagsBits;
  Swift::String v141;
  Swift::String v142;

  v133 = a4;
  v134 = a5;
  v15 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v15);
  v17 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64);
  __chkstk_darwin(v18);
  v132 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v122 - v21;
  v24 = v23;
  sub_1000271D4(a1, (uint64_t)v17, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v18) != 1)
  {
    v32 = v24;
    v33 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v131 = v22;
    v129 = v33;
    v33(v22, v17, v18);
    v34 = swift_allocObject(&unk_1005E8648, 32, 7);
    v35 = objc_msgSend(a6, "itemProvider");
    v36 = sub_1003432C8(a7, a8);
    v38 = v37;

    *(_QWORD *)(v34 + 16) = v36;
    v128 = v34 + 16;
    *(_QWORD *)(v34 + 24) = v38;
    swift_bridgeObjectRetain(v38);
    v39._countAndFlagsBits = 46;
    v39._object = (void *)0xE100000000000000;
    LOBYTE(v35) = String.hasPrefix(_:)(v39);
    swift_bridgeObjectRelease(v38);
    v40 = (_OWORD *)&unk_1004D9000;
    if ((v35 & 1) != 0)
    {
      v126 = (Class)dispatch_semaphore_create(0);
      v41 = (id)_DocumentManagerBundle(v126);
      if (v41)
      {
        v42 = v41;
        v141._countAndFlagsBits = 0xD00000000000001FLL;
        v141._object = (void *)0x8000000100532410;
        v43._object = (void *)0x80000001005294C0;
        v43._countAndFlagsBits = 0x1000000000000032;
        v44.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v44.value._object = (void *)0xEB00000000656C62;
        v45._countAndFlagsBits = 0;
        v45._object = (void *)0xE000000000000000;
        v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v141);

        v47 = sub_10006922C((uint64_t *)&unk_100644560);
        v48 = swift_allocObject(v47, 72, 7);
        *(_OWORD *)(v48 + 16) = xmmword_1004D9670;
        v49 = *(_QWORD *)(v34 + 16);
        v50 = *(_QWORD *)(v34 + 24);
        *(_QWORD *)(v48 + 56) = &type metadata for String;
        *(_QWORD *)(v48 + 64) = sub_10006A638();
        *(_QWORD *)(v48 + 32) = v49;
        *(_QWORD *)(v48 + 40) = v50;
        swift_bridgeObjectRetain(v50);
        v51 = static String.localizedStringWithFormat(_:_:)(v46._countAndFlagsBits, v46._object, v48);
        v53 = v52;
        swift_bridgeObjectRelease(v46._object);
        swift_bridgeObjectRelease(v48);
        v55 = (id)_DocumentManagerBundle(v54);
        if (v55)
        {
          v56 = v55;
          v142._countAndFlagsBits = 0xD000000000000021;
          v57._countAndFlagsBits = 0xD000000000000026;
          v142._object = (void *)0x8000000100532430;
          v57._object = (void *)0x8000000100529530;
          v58.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v58.value._object = (void *)0xEB00000000656C62;
          v59._countAndFlagsBits = 0;
          v59._object = (void *)0xE000000000000000;
          v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v142);

          v61 = (Swift::String *)swift_allocObject(&unk_1005E86C0, 72, 7);
          v61[1]._countAndFlagsBits = v51;
          v61[1]._object = v53;
          v61[2] = v60;
          v62 = v126;
          v61[3]._countAndFlagsBits = v34;
          v61[3]._object = v62;
          v63 = v134;
          v61[4]._countAndFlagsBits = (uint64_t)v134;
          v139 = (uint64_t)sub_1003FD784;
          p_countAndFlagsBits = &v61->_countAndFlagsBits;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v137 = sub_10004A82C;
          v138 = &unk_1005E86D8;
          v64 = _Block_copy(&aBlock);
          v65 = p_countAndFlagsBits;
          swift_retain();
          v66 = v62;
          v67 = v63;
          swift_release(v65);
          DOCRunInMainThread(v64);
          _Block_release(v64);
          OS_dispatch_semaphore.wait()();

          v40 = &unk_1004D9000;
          goto LABEL_8;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_8:
    v130 = v34;
    v125 = a10;
    v124 = dispatch_semaphore_create(0);
    v68 = sub_10006922C((uint64_t *)&unk_100644550);
    v69 = *(_QWORD *)(v32 + 72);
    v70 = *(unsigned __int8 *)(v32 + 80);
    v127 = v32;
    v71 = (v70 + 32) & ~v70;
    v123 = v70 | 7;
    v72 = swift_allocObject(v68, v71 + v69, v70 | 7);
    v122 = v40[103];
    *(_OWORD *)(v72 + 16) = v122;
    v73 = *(void (**)(void))(v32 + 16);
    v74 = v131;
    ((void (*)(uint64_t, char *, uint64_t))v73)(v72 + v71, v131, v18);
    v75 = (void *)objc_opt_self(DOCUndoManager);
    v76 = a9;
    v77 = objc_msgSend(v75, "shared");
    v126 = (Class)type metadata accessor for DOCCopyOperation();
    v78 = objc_allocWithZone(v126);
    v79 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)(v72, v76, v77);
    v80 = sub_10006922C(&qword_100644AB8);
    v81 = sub_10006922C((uint64_t *)&unk_100644AC0);
    v82 = *(_QWORD *)(v81 - 8);
    v83 = *(_QWORD *)(v82 + 72);
    v84 = *(unsigned __int8 *)(v82 + 80);
    v85 = (v84 + 32) & ~v84;
    v86 = swift_allocObject(v80, v85 + v83, v84 | 7);
    *(_OWORD *)(v86 + 16) = v122;
    v87 = (_QWORD *)(v86 + v85 + *(int *)(v81 + 48));
    v73();
    swift_beginAccess(v128, v135, 0, 0);
    v88 = *(_QWORD *)(v130 + 24);
    *v87 = *(_QWORD *)(v130 + 16);
    v87[1] = v88;
    v89 = v79;
    swift_bridgeObjectRetain(v88);
    v90 = sub_1003F29CC(v86);
    sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v89, "setTargetFilenamesByURL:", isa, swift_bridgeObjectRelease(v90).n128_f64[0]);

    objc_msgSend(v89, "setLastUsageUpdatePolicy:", 2);
    objc_msgSend(v89, "setShouldBounceOnCollision:", 1);
    v92 = v132;
    ((void (*)(char *, char *, uint64_t))v73)(v132, v74, v18);
    v93 = (v70 + 48) & ~v70;
    v94 = (v19 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
    v95 = (char *)swift_allocObject(&unk_1005E8670, v94 + 8, v123);
    v96 = v124;
    v97 = v133;
    v98 = v134;
    *((_QWORD *)v95 + 2) = v124;
    *((_QWORD *)v95 + 3) = v97;
    *((_QWORD *)v95 + 4) = v98;
    *((_QWORD *)v95 + 5) = v89;
    v129(&v95[v93], v92, v18);
    *(_QWORD *)&v95[v94] = v125;
    v139 = (uint64_t)sub_1003FD6E8;
    p_countAndFlagsBits = v95;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v137 = sub_10015936C;
    v138 = &unk_1005E8688;
    v99 = _Block_copy(&aBlock);
    v100 = p_countAndFlagsBits;
    v101 = v89;
    v102 = v98;
    v103 = v101;
    v104 = v96;
    v105 = v97;
    swift_retain();
    swift_release(v100);
    objc_msgSend(v103, "setActionCompletionBlock:", v99);
    _Block_release(v99);

    v107 = *(id *)DOCLog.UI.unsafeMutableAddressor(v106);
    v108 = static os_log_type_t.debug.getter();
    v109 = sub_10006922C((uint64_t *)&unk_100644560);
    v110 = swift_allocObject(v109, 152, 7);
    *(_OWORD *)(v110 + 16) = xmmword_1004D9880;
    *(_QWORD *)(v110 + 56) = &type metadata for String;
    *(_QWORD *)(v110 + 64) = sub_10006A638();
    *(_QWORD *)(v110 + 32) = 0xD00000000000003CLL;
    *(_QWORD *)(v110 + 40) = 0x8000000100532390;
    *(_QWORD *)(v110 + 96) = v126;
    *(_QWORD *)(v110 + 104) = sub_10005A360(&qword_10064F718, (uint64_t (*)(uint64_t))type metadata accessor for DOCCopyOperation, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v110 + 72) = v103;
    v111 = v103;
    v112 = v131;
    URL._bridgeToObjectiveC()(v113);
    v115 = v114;
    *(_QWORD *)(v110 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v110 + 144) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
    *(_QWORD *)(v110 + 112) = v115;
    os_log(_:dso:log:type:_:)("%@: adding copy operation %@", 28, 2, &_mh_execute_header, v107, v108, v110);

    swift_bridgeObjectRelease(v110);
    v116 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    objc_msgSend(v116, "scheduleAction:", v111);

    OS_dispatch_semaphore.wait()();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v112, v18);
    swift_release(v130);
    return;
  }
  v25 = sub_10000CB4C((uint64_t)v17, &qword_100643470);
  v26 = *(id *)DOCLog.UI.unsafeMutableAddressor(v25);
  v27 = static os_log_type_t.error.getter(v26);
  v28 = sub_10006922C((uint64_t *)&unk_100644560);
  v29 = swift_allocObject(v28, 112, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  v30 = sub_10006A638();
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 32) = 0xD00000000000003CLL;
  *(_QWORD *)(v29 + 40) = 0x8000000100532390;
  if (a3)
  {
    v31 = _convertErrorToNSError(_:)(a3);
    v138 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    v139 = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)&aBlock = v31;
    sub_1000E85C4(&aBlock, v29 + 72);
  }
  else
  {
    *(_QWORD *)(v29 + 96) = &type metadata for String;
    *(_QWORD *)(v29 + 104) = v30;
    *(_QWORD *)(v29 + 72) = 0xD000000000000013;
    *(_QWORD *)(v29 + 80) = 0x8000000100516BA0;
  }
  os_log(_:dso:log:type:_:)("%@: Unable to get URL: %@", 25, 2, &_mh_execute_header, v26, v27, v29);

  swift_bridgeObjectRelease(v29);
  if (a3)
  {
    v117 = swift_allocObject(&unk_1005E85F8, 32, 7);
    v118 = v134;
    *(_QWORD *)(v117 + 16) = a3;
    *(_QWORD *)(v117 + 24) = v118;
    v139 = (uint64_t)sub_10034730C;
    p_countAndFlagsBits = (_QWORD *)v117;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v137 = sub_10004A82C;
    v138 = &unk_1005E8610;
    v119 = _Block_copy(&aBlock);
    v120 = p_countAndFlagsBits;
    swift_errorRetain(a3);
    v121 = v118;
    swift_errorRetain(a3);
    swift_release(v120);
    DOCRunInMainThread(v119);
    _Block_release(v119);
    swift_errorRelease(a3);
  }
  dispatch_group_leave(v133);
}

void sub_1003F7708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  void *object;
  uint64_t v21;
  id v22;
  NSString v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  void *v32;
  uint64_t v33;
  id v34;
  NSString v35;
  void *v36;
  id v37;
  void **aBlock;
  uint64_t v40;
  void (*v41)(uint64_t, void *);
  void *v42;
  void *v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v13 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  v15 = (id)_DocumentManagerBundle(v14);
  if (v15)
  {
    v16 = v15;
    v45._object = (void *)0xE400000000000000;
    v17._countAndFlagsBits = 2003789907;
    v17._object = (void *)0xE400000000000000;
    v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v18.value._object = (void *)0xEB00000000656C62;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v45._countAndFlagsBits = 2003789907;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v45)._object;

    v21 = swift_allocObject(&unk_1005E8710, 32, 7);
    *(_QWORD *)(v21 + 16) = a5;
    *(_QWORD *)(v21 + 24) = a6;
    swift_retain();
    v22 = a6;
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v43 = sub_1003FD7A4;
    v44 = v21;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_1000602CC;
    v42 = &unk_1005E8728;
    v24 = _Block_copy(&aBlock);
    swift_release(v44);
    v25 = (void *)objc_opt_self(UIAlertAction);
    v26 = objc_msgSend(v25, "actionWithTitle:style:handler:", v23, 0, v24);
    _Block_release(v24);

    v27 = (id)_DocumentManagerBundle(objc_msgSend(v13, "addAction:", v26));
    if (v27)
    {
      v28 = v27;
      v46._object = (void *)0xE400000000000000;
      v29._countAndFlagsBits = 1701079368;
      v29._object = (void *)0xE400000000000000;
      v30.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v30.value._object = (void *)0xEB00000000656C62;
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      v46._countAndFlagsBits = 1701079368;
      v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v46)._object;

      v33 = swift_allocObject(&unk_1005E8760, 24, 7);
      *(_QWORD *)(v33 + 16) = v22;
      v34 = v22;
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v32);
      v43 = sub_1003471B8;
      v44 = v33;
      aBlock = _NSConcreteStackBlock;
      v40 = 1107296256;
      v41 = sub_1000602CC;
      v42 = &unk_1005E8778;
      v36 = _Block_copy(&aBlock);
      swift_release(v44);
      v37 = objc_msgSend(v25, "actionWithTitle:style:handler:", v35, 1, v36);
      _Block_release(v36);

      objc_msgSend(v13, "addAction:", v37);
      objc_msgSend(a7, "presentViewController:animated:completion:", v13, 1, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Int sub_1003F7A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::Bool v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  while (1)
  {
    v4 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain(v4);
    v5._countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    v6 = String.hasPrefix(_:)(v5);
    swift_bridgeObjectRelease(v4);
    if (!v6)
      break;
    swift_beginAccess(v3, v10, 33, 0);
    String.remove(at:)(15);
    v8 = v7;
    swift_endAccess(v10);
    swift_bridgeObjectRelease(v8);
  }
  return OS_dispatch_semaphore.signal()();
}

void sub_1003F7B34(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  id v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)aBlock - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v18 = (void *)_convertErrorToNSError(_:)(a1);
    v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = sub_10006922C((uint64_t *)&unk_100644560);
    v22 = swift_allocObject(v21, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v22 + 56) = &type metadata for String;
    *(_QWORD *)(v22 + 64) = sub_10006A638();
    *(_QWORD *)(v22 + 32) = 0xD00000000000003CLL;
    *(_QWORD *)(v22 + 40) = 0x8000000100532390;
    *(_QWORD *)(v22 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v22 + 72) = v18;
    v23 = v18;
    os_log(_:dso:log:type:_:)("%@: Copy Operation failed: %@", 29, 2, &_mh_execute_header, v19, v20, v22);

    swift_bridgeObjectRelease(v22);
    v24 = swift_allocObject(&unk_1005E87B0, 32, 7);
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = a4;
    aBlock[4] = sub_10034730C;
    v43 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E87C8;
    v25 = _Block_copy(aBlock);
    v26 = v43;
    v27 = v23;
    v28 = a4;
    swift_release(v26);
    DOCRunInMainThread(v25);
    _Block_release(v25);

  }
  else
  {
    v29 = objc_msgSend(a5, "transferResults", v15);
    if (v29)
    {
      v30 = v29;
      v31 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for AnyHashable, v31, &protocol witness table for AnyHashable);

      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a6, v13);
      v33 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      AnyHashable.init<A>(_:)(v17, v13, v33);
      if (*(_QWORD *)(v32 + 16) && (v34 = sub_100067654((uint64_t)aBlock), (v35 & 1) != 0))
      {
        v36 = (_QWORD *)(a7 + 16);
        v37 = *(id *)(*(_QWORD *)(v32 + 56) + 8 * v34);
        swift_bridgeObjectRelease(v32);
        sub_100067748((uint64_t)aBlock);
        swift_beginAccess(v36, aBlock, 33, 0);
        v38 = v37;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
        v40 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v39 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v40 >= v39 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
        v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
        specialized Array._endMutation()(v41);
        swift_endAccess(aBlock);

      }
      else
      {
        swift_bridgeObjectRelease(v32);
        sub_100067748((uint64_t)aBlock);
      }
    }
  }
  OS_dispatch_semaphore.signal()();
  dispatch_group_leave(a3);
}

uint64_t sub_1003F7EC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  if (result)
  {
    v4 = (void (*)(uint64_t))result;
    swift_beginAccess(a3 + 16, v7, 0, 0);
    v5 = *(_QWORD *)(a3 + 16);
    v6 = swift_bridgeObjectRetain(v5);
    v4(v6);
    return swift_bridgeObjectRelease(v5);
  }
  return result;
}

uint64_t sub_1003F7F24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1003F7F34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F7F58(void (*a1)(uint64_t, unint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1003F529C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1003F7F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003F5640(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1003F7F68(void (*a1)(void *, _QWORD), uint64_t a2)
{
  uint64_t v2;

  return sub_1003F5468(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1003F7F70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F7F94(uint64_t a1, char **a2)
{
  if ((sub_1003F7FE8(a1, a2) & 1) != 0)
    return 1;
  else
    return sub_1003F8494(a1, a2);
}

uint64_t sub_1003F7FE8(uint64_t a1, char **a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char **v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t i;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __objc2_prot *v51;

  v50 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v50 - 8);
  v5 = __chkstk_darwin(v50);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)a1, "items", v5);
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v10);
  for (i = a1; v11; i = a1)
  {
    v43 = v4;
    v44 = a2;
    v4 = 0;
    v48 = v10;
    v49 = v10 & 0xC000000000000001;
    a1 = (uint64_t)&selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    a2 = &selRef_setAccessibilityValue_;
    v45 = 0x80000001005322D0;
    v46 = v10 + 32;
    while (1)
    {
      v12 = v49 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v10) : *(id *)(v46 + 8 * v4);
      v13 = v12;
      if (__OFADD__(v4++, 1))
        break;
      v15 = objc_msgSend(v12, *(SEL *)(a1 + 3896));
      v16 = objc_msgSend(v15, a2[391]);

      v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String);
      v18 = v17[2];
      if (v18)
      {
        v10 = v11;
        v19 = v17[4];
        v20 = v17[5];
        if (v19 == 0xD000000000000029 && v20 == v45
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000029, 0x80000001005322D0, 0) & 1) != 0)
        {
LABEL_28:

          swift_bridgeObjectRelease(v17);
          v26 = 1;
          a1 = i;
          v10 = v48;
          v4 = v43;
          goto LABEL_36;
        }
        if (v18 == 1)
        {

          swift_bridgeObjectRelease(v17);
        }
        else
        {
          v21 = v17[6];
          v22 = v17[7];
          if (v21 == 0xD000000000000029 && v22 == 0x80000001005322D0
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD000000000000029, 0x80000001005322D0, 0) & 1) != 0)
          {
            goto LABEL_28;
          }
          if (v18 != 2)
          {
            a2 = (char **)(v17 + 9);
            a1 = 2;
            while (1)
            {
              v23 = a1 + 1;
              if (__OFADD__(a1, 1))
                break;
              v24 = (uint64_t)*(a2 - 1);
              v25 = *a2;
              if (v24 == 0xD000000000000029 && v25 == (char *)0x80000001005322D0
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, 0xD000000000000029, 0x80000001005322D0, 0) & 1) != 0)
              {
                goto LABEL_28;
              }
              a2 += 2;
              ++a1;
              if (v23 == v18)
                goto LABEL_25;
            }
            __break(1u);
            break;
          }
LABEL_25:

          swift_bridgeObjectRelease(v17);
          v11 = v10;
        }
        v10 = v48;
        a1 = 0x100621000;
        a2 = &selRef_setAccessibilityValue_;
        if (v4 == v11)
        {
LABEL_27:
          v26 = 0;
          a1 = i;
          v4 = v43;
          goto LABEL_36;
        }
      }
      else
      {

        swift_bridgeObjectRelease(v17);
        if (v4 == v11)
          goto LABEL_27;
      }
    }
    __break(1u);
LABEL_31:
    if (v10 < 0)
      v27 = v10;
    else
      v27 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v27);
  }
  v26 = 0;
LABEL_36:
  swift_bridgeObjectRelease_n(v10, 2);
  v51 = &OBJC_PROTOCOL___UIDropSession;
  v28 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v51);
  if (v28)
  {
    v29 = (void *)v28;
    LODWORD(v49) = v26;
    v30 = swift_unknownObjectRetain(a1);
    static UTType.item.getter(v30);
    swift_getObjectType(v29);
    v31 = (uint64_t)sub_1003F8940(v29, (uint64_t)v7);
    v32 = *(void (**)(char *, uint64_t))(v4 + 8);
    v32(v7, v50);
    if ((unint64_t)v31 >> 62)
      goto LABEL_53;
    v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v31);
    for (; v33; v33 = _CocoaArrayWrapper.endIndex.getter(v41))
    {
      v34 = 4;
      while (1)
      {
        v35 = (v31 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34 - 4, v31)
            : *(id *)(v31 + 8 * v34);
        v36 = v35;
        v37 = v34 - 3;
        if (__OFADD__(v34 - 4, 1))
          break;
        v38 = objc_msgSend(v35, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v38);

        LOBYTE(v38) = UTType.isFolderUTI.getter(v39);
        v32(v7, v50);

        if ((v38 & 1) != 0)
        {
          swift_unknownObjectRelease(i);
          swift_bridgeObjectRelease_n(v31, 2);
          return 1;
        }
        ++v34;
        if (v37 == v33)
          goto LABEL_46;
      }
      __break(1u);
LABEL_53:
      if (v31 < 0)
        v41 = v31;
      else
        v41 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
    }
LABEL_46:
    swift_unknownObjectRelease(i);
    swift_bridgeObjectRelease_n(v31, 2);
    return (_DWORD)v49 != 0;
  }
  return (v26 & 1) != 0;
}

uint64_t sub_1003F8494(uint64_t a1, char **a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char **v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t i;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __objc2_prot *v51;

  v50 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v50 - 8);
  v5 = __chkstk_darwin(v50);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)a1, "items", v5);
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v10);
  for (i = a1; v11; i = a1)
  {
    v43 = v4;
    v44 = a2;
    v4 = 0;
    v48 = v10;
    v49 = v10 & 0xC000000000000001;
    a1 = (uint64_t)&selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    a2 = &selRef_setAccessibilityValue_;
    v45 = 0x8000000100532460;
    v46 = v10 + 32;
    while (1)
    {
      v12 = v49 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v10) : *(id *)(v46 + 8 * v4);
      v13 = v12;
      if (__OFADD__(v4++, 1))
        break;
      v15 = objc_msgSend(v12, *(SEL *)(a1 + 3896));
      v16 = objc_msgSend(v15, a2[391]);

      v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String);
      v18 = v17[2];
      if (v18)
      {
        v10 = v11;
        v19 = v17[4];
        v20 = v17[5];
        if (v19 == 0xD000000000000025 && v20 == v45
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, 0xD000000000000025, 0x8000000100532460, 0) & 1) != 0)
        {
LABEL_28:

          swift_bridgeObjectRelease(v17);
          v26 = 1;
          a1 = i;
          v10 = v48;
          v4 = v43;
          goto LABEL_36;
        }
        if (v18 == 1)
        {

          swift_bridgeObjectRelease(v17);
        }
        else
        {
          v21 = v17[6];
          v22 = v17[7];
          if (v21 == 0xD000000000000025 && v22 == 0x8000000100532460
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD000000000000025, 0x8000000100532460, 0) & 1) != 0)
          {
            goto LABEL_28;
          }
          if (v18 != 2)
          {
            a2 = (char **)(v17 + 9);
            a1 = 2;
            while (1)
            {
              v23 = a1 + 1;
              if (__OFADD__(a1, 1))
                break;
              v24 = (uint64_t)*(a2 - 1);
              v25 = *a2;
              if (v24 == 0xD000000000000025 && v25 == (char *)0x8000000100532460
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, 0xD000000000000025, 0x8000000100532460, 0) & 1) != 0)
              {
                goto LABEL_28;
              }
              a2 += 2;
              ++a1;
              if (v23 == v18)
                goto LABEL_25;
            }
            __break(1u);
            break;
          }
LABEL_25:

          swift_bridgeObjectRelease(v17);
          v11 = v10;
        }
        v10 = v48;
        a1 = 0x100621000;
        a2 = &selRef_setAccessibilityValue_;
        if (v4 == v11)
        {
LABEL_27:
          v26 = 0;
          a1 = i;
          v4 = v43;
          goto LABEL_36;
        }
      }
      else
      {

        swift_bridgeObjectRelease(v17);
        if (v4 == v11)
          goto LABEL_27;
      }
    }
    __break(1u);
LABEL_31:
    if (v10 < 0)
      v27 = v10;
    else
      v27 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v27);
  }
  v26 = 0;
LABEL_36:
  swift_bridgeObjectRelease_n(v10, 2);
  v51 = &OBJC_PROTOCOL___UIDropSession;
  v28 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v51);
  if (v28)
  {
    v29 = (void *)v28;
    LODWORD(v49) = v26;
    v30 = swift_unknownObjectRetain(a1);
    static UTType.item.getter(v30);
    swift_getObjectType(v29);
    v31 = (uint64_t)sub_1003F8940(v29, (uint64_t)v7);
    v32 = *(void (**)(char *, uint64_t))(v4 + 8);
    v32(v7, v50);
    if ((unint64_t)v31 >> 62)
      goto LABEL_53;
    v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v31);
    for (; v33; v33 = _CocoaArrayWrapper.endIndex.getter(v41))
    {
      v34 = 4;
      while (1)
      {
        v35 = (v31 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34 - 4, v31)
            : *(id *)(v31 + 8 * v34);
        v36 = v35;
        v37 = v34 - 3;
        if (__OFADD__(v34 - 4, 1))
          break;
        v38 = objc_msgSend(v35, "contentType");
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v38);

        LOBYTE(v38) = UTType.isFolderUTI.getter(v39);
        v32(v7, v50);

        if ((v38 & 1) == 0)
        {
          swift_unknownObjectRelease(i);
          swift_bridgeObjectRelease_n(v31, 2);
          return 1;
        }
        ++v34;
        if (v37 == v33)
          goto LABEL_46;
      }
      __break(1u);
LABEL_53:
      if (v31 < 0)
        v41 = v31;
      else
        v41 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
    }
LABEL_46:
    swift_unknownObjectRelease(i);
    swift_bridgeObjectRelease_n(v31, 2);
    return (_DWORD)v49 != 0;
  }
  return (v26 & 1) != 0;
}

_QWORD *sub_1003F8940(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  sub_1003F8A0C(a1, a2);
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v5 = 40;
    do
    {
      v6 = *(id *)(v3 + v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1003F8A0C(void *a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char **v18;
  unint64_t *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t *v26;
  id v27;
  id v28;
  char *v29;
  unint64_t v30;
  char **v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  id v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _OWORD v50[2];
  _BYTE v51[24];
  uint64_t v52;

  v48 = a2;
  v3 = type metadata accessor for UTType(0);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  v4 = __chkstk_darwin(v3);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, "localDragSession", v4);
  *(_QWORD *)&v7 = swift_unknownObjectRelease(v6).n128_u64[0];
  if (!v6)
    return;
  v8 = objc_msgSend(a1, "items", v7);
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v38 = v10;
    else
      v38 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v10);
  v12 = sub_10015396C(0, v11 & ~(v11 >> 63), 0, _swiftEmptyArrayStorage);
  v13 = objc_msgSend(a1, "items");
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v9);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v39 = v14;
    else
      v39 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v14);
    if (v15)
      goto LABEL_6;
LABEL_35:
    swift_bridgeObjectRelease(v14);
    return;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
    goto LABEL_35;
LABEL_6:
  if (v15 >= 1)
  {
    v44 = v12;
    v16 = 0;
    v17 = v14 & 0xC000000000000001;
    v18 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    v19 = (unint64_t *)&qword_1006419B0;
    v20 = (char *)&type metadata for Any + 8;
    v41 = v14;
    v42 = v15;
    v43 = (char *)&type metadata for Any + 8;
    do
    {
      if (v17)
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
      else
        v21 = *(id *)(v14 + 8 * v16 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, v18[500]);
      if (v23)
      {
        v24 = v23;
        _bridgeAnyObjectToAny(_:)(v50, v23);
        swift_unknownObjectRelease(v24);
      }
      else
      {
        memset(v50, 0, sizeof(v50));
      }
      sub_10007EBDC((uint64_t)v50, (uint64_t)v51);
      if (v52)
      {
        v25 = sub_10004F2F0(0, v19, FPItem_ptr);
        if ((swift_dynamicCast(&v49, v51, v20, v25, 6) & 1) != 0)
        {
          v26 = v19;
          v27 = v49;
          v28 = objc_msgSend(v49, "contentType");
          v29 = v45;
          static UTType._unconditionallyBridgeFromObjectiveC(_:)(v28);

          LOBYTE(v28) = UTType.conforms(to:)(v48);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v47);
          if ((v28 & 1) != 0)
          {
            v30 = v17;
            v31 = v18;
            v33 = v44[2];
            v32 = v44[3];
            v34 = v44;
            v35 = v22;
            v36 = v27;
            if (v33 >= v32 >> 1)
              v34 = sub_10015396C((_QWORD *)(v32 > 1), v33 + 1, 1, v34);
            v19 = v26;
            v44 = v34;
            v34[2] = v33 + 1;
            v37 = &v34[2 * v33];
            v37[4] = v35;
            v37[5] = v36;

            v18 = v31;
            v17 = v30;
            v14 = v41;
            v15 = v42;
          }
          else
          {

            v19 = v26;
          }
          v20 = v43;
        }
        else
        {

        }
      }
      else
      {

        sub_10000CB4C((uint64_t)v51, &qword_100642730);
      }
      ++v16;
    }
    while (v15 != v16);
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1003F8DE0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char **v6;
  id v7;
  void *v8;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = objc_msgSend(a1, "items");
  v2 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_31;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v24))
  {
    v5 = 0;
    v28 = v3 & 0xC000000000000001;
    v26 = v3 + 32;
    v6 = &selRef_setAccessibilityValue_;
    v27 = v3;
    while (1)
    {
      v7 = v28 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3) : *(id *)(v26 + 8 * v5);
      v8 = v7;
      if (__OFADD__(v5++, 1))
        break;
      v10 = objc_msgSend(v7, "itemProvider");
      v11 = objc_msgSend(v10, v6[391]);

      v12 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for String);
      v13 = v12[2];
      if (v13)
      {
        v3 = v4;
        v14 = v12[4];
        v15 = v12[5];
        if (v14 == 0xD000000000000029 && v15 == 0x80000001005322A0
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0xD000000000000029, 0x80000001005322A0, 0) & 1) != 0)
        {
LABEL_28:

          swift_bridgeObjectRelease(v12);
          v23 = 1;
          v3 = v27;
          goto LABEL_36;
        }
        if (v13 == 1)
        {

          swift_bridgeObjectRelease(v12);
        }
        else
        {
          v16 = v12[6];
          v17 = v12[7];
          if (v16 == 0xD000000000000029 && v17 == 0x80000001005322A0
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, 0xD000000000000029, 0x80000001005322A0, 0) & 1) != 0)
          {
            goto LABEL_28;
          }
          if (v13 != 2)
          {
            v18 = v12 + 9;
            v19 = 2;
            while (1)
            {
              v20 = v19 + 1;
              if (__OFADD__(v19, 1))
                break;
              v21 = *(v18 - 1);
              v22 = *v18;
              if (v21 == 0xD000000000000029 && v22 == 0x80000001005322A0
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, 0xD000000000000029, 0x80000001005322A0, 0) & 1) != 0)
              {
                goto LABEL_28;
              }
              v18 += 2;
              ++v19;
              if (v20 == v13)
                goto LABEL_26;
            }
            __break(1u);
            break;
          }
LABEL_26:

          swift_bridgeObjectRelease(v12);
          v4 = v3;
        }
        v3 = v27;
        v6 = &selRef_setAccessibilityValue_;
      }
      else
      {

        swift_bridgeObjectRelease(v12);
      }
      if (v5 == v4)
        goto LABEL_35;
    }
    __break(1u);
LABEL_31:
    if (v3 < 0)
      v24 = v3;
    else
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
LABEL_35:
  v23 = 0;
LABEL_36:
  swift_bridgeObjectRelease_n(v3, 2);
  return v23;
}

uint64_t sub_1003F90BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v20[2];

  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = &OBJC_PROTOCOL___UIDropSession;
  v6 = swift_dynamicCastObjCProtocolConditional(a1, 1);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = swift_unknownObjectRetain(a1);
    static UTType.item.getter(v8);
    swift_getObjectType(v7);
    v9 = (uint64_t)sub_1003F8940(v7, (uint64_t)v5);
    v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    if ((unint64_t)v9 >> 62)
      goto LABEL_14;
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    for (v20[0] = a1; v11; v20[0] = a1)
    {
      v12 = 4;
      while (1)
      {
        v13 = (v9 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v9)
            : *(id *)(v9 + 8 * v12);
        a1 = v13;
        v14 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
          break;
        v15 = objc_msgSend(v13, "contentType", v20[0]);
        static UTType._unconditionallyBridgeFromObjectiveC(_:)(v15);

        v17 = UTType.isFolderUTI.getter(v16);
        v10(v5, v2);

        if ((v17 & 1) == 0)
        {
          ++v12;
          if (v14 != v11)
            continue;
        }
        goto LABEL_19;
      }
      __break(1u);
LABEL_14:
      if (v9 < 0)
        v18 = v9;
      else
        v18 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v11 = _CocoaArrayWrapper.endIndex.getter(v18);
    }
    v17 = 0;
LABEL_19:
    swift_unknownObjectRelease(v20[0]);
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

unint64_t sub_1003F9298(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C((uint64_t *)&unk_1006532A0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_BYTE *)i - 8);
      v11 = *i;
      result = sub_10003057C(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1003F9374(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  __int128 v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C((uint64_t *)&unk_10064DA80);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_OWORD *)(a1 + 80); ; i += 4)
    {
      v5 = *((_QWORD *)i - 6);
      v6 = *((_QWORD *)i - 5);
      v7 = *((_BYTE *)i - 32);
      v9 = *((_QWORD *)i - 3);
      v8 = *((_QWORD *)i - 2);
      v10 = *((_QWORD *)i - 1);
      v18 = *i;
      result = sub_100140AAC(v5, v6, v7);
      if ((v12 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v13 = v3[6] + 24 * result;
      *(_QWORD *)v13 = v5;
      *(_QWORD *)(v13 + 8) = v6;
      *(_BYTE *)(v13 + 16) = v7;
      v14 = v3[7] + 40 * result;
      *(_QWORD *)v14 = v9;
      *(_QWORD *)(v14 + 8) = v8;
      *(_QWORD *)(v14 + 16) = v10;
      *(_OWORD *)(v14 + 24) = v18;
      v15 = v3[2];
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        goto LABEL_10;
      v3[2] = v17;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v18);
      swift_retain(*((_QWORD *)&v18 + 1));
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1003F94B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  char v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C((uint64_t *)&unk_1006531F0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 3);
      v6 = *(i - 2);
      v7 = *((_BYTE *)i - 8);
      v8 = *i;
      result = sub_100140AAC(v5, v6, v7);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v11 = v3[6] + 24 * result;
      *(_QWORD *)v11 = v5;
      *(_QWORD *)(v11 + 8) = v6;
      *(_BYTE *)(v11 + 16) = v7;
      *(_QWORD *)(v3[7] + 8 * result) = v8;
      v12 = v3[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v3[2] = v14;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1003F95A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10006922C((uint64_t *)&unk_1006532D0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_10001CCD0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v5);
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain(v5);
    result = sub_10001CCD0(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003F96A4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10006922C((uint64_t *)&unk_100653170);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_100140784(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain(v6);
    result = sub_100140784(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003F97B0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_10006922C(&qword_100653258);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = a1[4];
  v4 = a1[5];
  result = sub_100140784(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain(v4);
    result = sub_100140784(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1003F98AC(uint64_t a1)
{
  sub_1003FCE0C(a1, &qword_100653180);
}

Swift::Int sub_1003F98B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C(&qword_1006533F0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_1003F9A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10006922C(&qword_100653200);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_10005A360(&qword_100653208, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_10005A360(&qword_100653210, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

_QWORD *sub_1003F9CC0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = v2 & 0xC000000000000001;
      v6 = v2 & 0xFFFFFFFFFFFFFF8;
      v7 = (unint64_t *)&qword_1006419B0;
      v21 = v2 & 0xFFFFFFFFFFFFFF8;
      while (v5)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_9:
        v16 = v15;
        v17 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        sub_10004F2F0(0, v7, FPItem_ptr);
        v18 = static NSObject.== infix(_:_:)(v16, a2);
        if ((v18 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v8 = v5;
          v9 = v3;
          v10 = v2;
          v11 = v7;
          v12 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = v12;
          v7 = v11;
          v2 = v10;
          v3 = v9;
          v5 = v8;
          v6 = v21;
          v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
          specialized ContiguousArray._endMutation()(v14);
        }
        ++v4;
        if (v17 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)(v6 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v2 < 0)
        v20 = v2;
      else
        v20 = v2 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v15 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1003F9E4C(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_41;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v35))
  {
    v4 = 0;
    v39 = v2 & 0xFFFFFFFFFFFFFF8;
    v40 = v2 & 0xC000000000000001;
    v37 = v2;
    v38 = v2 + 32;
    v36 = i;
    while (1)
    {
      if (v40)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v39 + 16))
          goto LABEL_39;
        v9 = *(id *)(v38 + 8 * v4);
      }
      v6 = v9;
      if (__OFADD__(v4++, 1))
        break;
      v5 = objc_msgSend(v9, "tags");
      if (v5)
      {
        v11 = v5;
        v12 = sub_10004F2F0(0, (unint64_t *)&unk_100646CB0, FPTag_ptr);
        v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

        v41 = v6;
        v42 = v4;
        if ((unint64_t)v13 >> 62)
        {
          if (v13 < 0)
            v32 = v13;
          else
            v32 = v13 & 0xFFFFFFFFFFFFFF8;
          v33 = a2;
          swift_bridgeObjectRetain(v13);
          v2 = _CocoaArrayWrapper.endIndex.getter(v32);
          if (v2)
          {
LABEL_14:
            v43 = v13;
            v44 = v13 & 0xC000000000000001;
            v15 = 4;
            do
            {
              v16 = v15 - 4;
              if (v44)
              {
                v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v13);
                v18 = v15 - 3;
                if (__OFADD__(v16, 1))
                  goto LABEL_38;
              }
              else
              {
                v17 = *(id *)(v13 + 8 * v15);
                v18 = v15 - 3;
                if (__OFADD__(v16, 1))
                {
LABEL_38:
                  __break(1u);
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }
              }
              v19 = v2;
              v20 = v17;
              v21 = objc_msgSend(v17, "label");
              v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
              v24 = v23;

              v25 = objc_msgSend(a2, "label");
              v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
              v28 = v27;

              v29 = v22 == v26 && v24 == v28;
              if (v29)
              {

                v31 = v43;
                swift_bridgeObjectRelease(v43);

                swift_bridgeObjectRelease(v24);
LABEL_30:
                swift_bridgeObjectRelease(v24);

                swift_bridgeObjectRelease(v31);
                i = v36;
                v2 = v37;
                v4 = v42;
                goto LABEL_6;
              }
              v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v28, 0);

              swift_bridgeObjectRelease(v24);
              swift_bridgeObjectRelease(v28);
              if ((v30 & 1) != 0)
              {

                v31 = v43;
                v24 = v43;
                goto LABEL_30;
              }
              ++v15;
              v2 = v19;
              v29 = v18 == v19;
              v13 = v43;
            }
            while (!v29);
          }
        }
        else
        {
          v2 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
          v14 = a2;
          swift_bridgeObjectRetain(v13);
          if (v2)
            goto LABEL_14;
        }

        v5 = (id)swift_bridgeObjectRelease_n(v13, 2);
        i = v36;
        v2 = v37;
        v6 = v41;
        v4 = v42;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
LABEL_6:
      if (v4 == i)
        return _swiftEmptyArrayStorage;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    if (v2 < 0)
      v35 = v2;
    else
      v35 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1003FA184(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v20;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1001552E4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, "tags");
      if (v8)
      {
        v9 = v8;
        v10 = sub_10004F2F0(0, (unint64_t *)&unk_100646CB0, FPTag_ptr);
        v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      }
      else
      {
        v11 = _swiftEmptyArrayStorage;
      }
      v20 = (unint64_t)v11;
      v12 = a2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v13 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v14 >= v13 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
      v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized Array._endMutation()(v15);

      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_1001552E4(v16 > 1, v17 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      _swiftEmptyArrayStorage[v17 + 4] = v20;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003FA390(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v8)
    goto LABEL_11;
  result = specialized ContiguousArray.reserveCapacity(_:)(v8);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v20 = a3;
    v10 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      v13 = objc_msgSend(v11, "itemProvider", v20);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized ContiguousArray._endMutation()(v16);
    }
    while (v8 != v10);
    a3 = v20;
LABEL_11:
    v17 = (_QWORD *)swift_allocObject(&unk_1005E82D8, 40, 7);
    v17[2] = a3;
    v17[3] = a4;
    v17[4] = a2;
    swift_retain();
    v18 = a2;
    sub_100340C70((int64_t)_swiftEmptyArrayStorage, a1, a2, 1, (uint64_t)sub_1003FCDB4, (uint64_t)v17);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return swift_release(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003FA52C(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void **v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  unsigned int v44;
  uint64_t v45;
  _QWORD *v46;

  v43 = a2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005E83C8, 24, 7);
  *(_QWORD *)(v10 + 16) = a4;
  v11 = swift_allocObject(&unk_1005E83F0, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1003FD488;
  *(_QWORD *)(v11 + 24) = v10;
  v42 = v11;
  swift_retain_n(v10, 2);
  v41 = a4;
  static UTType.item.getter(v41);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v9);
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
  v44 = static os_log_type_t.debug.getter(v15);
  v16 = sub_10006922C((uint64_t *)&unk_100644560);
  v17 = swift_allocObject(v16, 152, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  *(_QWORD *)(v17 + 64) = sub_10006A638();
  *(_QWORD *)(v17 + 32) = 0xD000000000000044;
  *(_QWORD *)(v17 + 40) = 0x80000001005321A0;
  v45 = v13;
  v18 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v17 + 96) = &type metadata for Int;
  *(_QWORD *)(v17 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 72) = v18;
  v19 = objc_msgSend(a1, "items");
  v20 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v39 = v21;
    else
      v39 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
  *(_QWORD *)(v17 + 136) = &type metadata for Int;
  *(_QWORD *)(v17 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v17 + 112) = v22;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v15,
    v44,
    v17,
    v23);

  v24 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v17).n128_f64[0]);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v20);

  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v40 = v25;
    else
      v40 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v27 = v45;
  swift_bridgeObjectRelease(v25);
  if (v18 == v26)
  {
    v28 = _swiftEmptyArrayStorage;
    if (v18)
    {
      v46 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v18);
      v29 = (void **)(v27 + 40);
      v31 = v42;
      v30 = v43;
      do
      {
        v32 = *v29;
        v29 += 2;
        v33 = v32;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v33);
        v34 = v46[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v34);
        v35 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v33);
        specialized ContiguousArray._endMutation()(v35);
        --v18;
      }
      while (v18);
      v28 = v46;
    }
    else
    {
      v31 = v42;
      v30 = v43;
    }
    sub_1003F6224((uint64_t)v28, v30);
    swift_release(v10);
    swift_release(v31);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v36 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v27).n128_f64[0]);
    v28 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v20);

    v37 = v42;
    sub_1003FA390((uint64_t)v28, v43, (uint64_t)sub_1003FD978, v42);
    swift_release(v10);
    swift_release(v37);
  }
  swift_bridgeObjectRelease(v28);
  return swift_release(v10);
}

uint64_t sub_1003FA918(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v43 = a2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005E84B8, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1003FD4F4;
  *(_QWORD *)(v10 + 24) = a4;
  v46 = v10;
  v44 = a4;
  v11 = swift_retain_n(a4, 3);
  static UTType.item.getter(v11);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v9);
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  v17 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v17, 152, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_10006A638();
  *(_QWORD *)(v18 + 32) = 0xD000000000000044;
  *(_QWORD *)(v18 + 40) = 0x80000001005321A0;
  v45 = v13;
  v19 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v18 + 96) = &type metadata for Int;
  *(_QWORD *)(v18 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 72) = v19;
  v20 = objc_msgSend(a1, "items");
  v21 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v40 = v22;
    else
      v40 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v22).n128_u64[0];
  *(_QWORD *)(v18 + 136) = &type metadata for Int;
  *(_QWORD *)(v18 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 112) = v23;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v15,
    v16,
    v18,
    v24);

  v25 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v18).n128_f64[0]);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v21);

  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v41 = v26;
    else
      v41 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v27 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v26);
  if (v19 == v27)
  {
    v28 = _swiftEmptyArrayStorage;
    v29 = v45;
    if (v19)
    {
      v47 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v19);
      v30 = (void **)(v29 + 40);
      v32 = (uint64_t)v43;
      v31 = v44;
      do
      {
        v33 = *v30;
        v30 += 2;
        v34 = v33;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v35 = v47[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
        v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v34);
        specialized ContiguousArray._endMutation()(v36);
        --v19;
      }
      while (v19);
      v28 = v47;
    }
    else
    {
      v32 = (uint64_t)v43;
      v31 = v44;
    }
    sub_1000DDF3C((uint64_t)v28, v32, v31);
    swift_release(v31);
    swift_release(v46);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v37 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v45).n128_f64[0]);
    v28 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v21);

    v38 = v46;
    sub_1003FA390((uint64_t)v28, v43, (uint64_t)sub_1003FD978, v46);
    v31 = v44;
    swift_release(v44);
    swift_release(v38);
  }
  swift_bridgeObjectRelease(v28);
  return swift_release(v31);
}

void sub_1003FACEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, __n128), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t i;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  void (*v31)(_QWORD, __n128);
  id v32;
  id v33;
  uint64_t v34;
  char v35;
  id v36;
  char v37;
  id v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __int128 v49;
  uint64_t v50;
  id *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD, __n128);
  _QWORD *v58;

  v56 = a3;
  v57 = a5;
  v53 = a2;
  v54 = a4;
  v8 = type metadata accessor for DOCOperationItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (void **)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (unint64_t *)((char *)&v47 - v13);
  v51 = (id *)DOCLog.UI.unsafeMutableAddressor(v15);
  v16 = *v51;
  v17 = static os_log_type_t.debug.getter();
  v50 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v50, 72, 7);
  v49 = xmmword_1004D9670;
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  v19 = sub_10006A638();
  *(_QWORD *)(v18 + 64) = v19;
  v47 = (unint64_t)" had %d items";
  v48 = v19;
  *(_QWORD *)(v18 + 32) = 0xD000000000000044;
  *(_QWORD *)(v18 + 40) = 0x8000000100532230;
  os_log(_:dso:log:type:_:)("%@", 2, 2, &_mh_execute_header, v16, v17, v18);

  swift_bridgeObjectRelease(v18);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v46 = a1;
    else
      v46 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v20 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = _swiftEmptyArrayStorage;
  v55 = a6;
  if (!v20)
    goto LABEL_15;
  v52 = a1;
  v58 = _swiftEmptyArrayStorage;
  sub_100155054(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v21 = v58;
    v22 = v52;
    if ((v52 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v20; ++i)
      {
        *v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
        swift_storeEnumTagMultiPayload(v14, v8, 1);
        v58 = v21;
        v25 = v21[2];
        v24 = v21[3];
        if (v25 >= v24 >> 1)
        {
          sub_100155054(v24 > 1, v25 + 1, 1);
          v22 = v52;
          v21 = v58;
        }
        v21[2] = v25 + 1;
        sub_1001D0788((uint64_t)v14, (uint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v25, type metadata accessor for DOCOperationItem);
      }
    }
    else
    {
      v26 = (void **)(v52 + 32);
      do
      {
        v27 = *v26;
        *v11 = *v26;
        swift_storeEnumTagMultiPayload(v11, v8, 1);
        v58 = v21;
        v29 = v21[2];
        v28 = v21[3];
        v30 = v27;
        if (v29 >= v28 >> 1)
        {
          sub_100155054(v28 > 1, v29 + 1, 1);
          v21 = v58;
        }
        v21[2] = v29 + 1;
        sub_1001D0788((uint64_t)v11, (uint64_t)v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v29, type metadata accessor for DOCOperationItem);
        ++v26;
        --v20;
      }
      while (v20);
    }
LABEL_15:
    v31 = v57;
    v32 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v33 = FPActionUntrash;
    v34 = v56;
    v35 = sub_100028BE0((uint64_t)v33, v56);

    if ((v35 & 1) != 0)
    {
      sub_100477E1C(4, (uint64_t)v21, v53, 0, 0, 1, v54, (uint64_t)v31, v55);
    }
    else
    {
      v36 = FPActionReparent;
      v37 = sub_100028BE0((uint64_t)v36, v34);

      if ((v37 & 1) != 0)
      {
        sub_100477E1C(0, (uint64_t)v21, v53, 0, 0, 1, v54, (uint64_t)v31, v55);
      }
      else
      {
        v38 = FPActionCopy;
        v39 = sub_100028BE0((uint64_t)v38, v34);

        if ((v39 & 1) == 0)
        {
          swift_bridgeObjectRelease(v21);
          v40 = *v51;
          v41 = static os_log_type_t.debug.getter();
          v42 = swift_allocObject(v50, 72, 7);
          *(_OWORD *)(v42 + 16) = v49;
          v43 = v48;
          *(_QWORD *)(v42 + 56) = &type metadata for String;
          *(_QWORD *)(v42 + 64) = v43;
          v44 = v47 | 0x8000000000000000;
          *(_QWORD *)(v42 + 32) = 0xD000000000000044;
          *(_QWORD *)(v42 + 40) = v44;
          os_log(_:dso:log:type:_:)("%@: No eligible actions", 23, 2, &_mh_execute_header, v40, v41, v42);

          v45 = swift_bridgeObjectRelease(v42);
          if (v31)
            v31(0, v45);
          goto LABEL_22;
        }
        sub_100477E1C(1, (uint64_t)v21, v53, 0, 0, 1, v54, (uint64_t)v31, v55);
      }
    }
    swift_bridgeObjectRelease(v21);
LABEL_22:

    return;
  }
  __break(1u);
}

uint64_t sub_1003FB198(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  _QWORD *v34;
  void **v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  NSString v46;
  Class isa;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  Class v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  _QWORD *v73;

  v71 = a2;
  v8 = type metadata accessor for Date(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v66 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UTType(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject(&unk_1005E84E0, 32, 7);
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  v15 = swift_allocObject(&unk_1005E8508, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_1003FD528;
  *(_QWORD *)(v15 + 24) = v14;
  v70 = v15;
  v72 = v14;
  swift_retain_n(v14, 2);
  v64 = a4;
  v65 = a5;
  static UTType.item.getter(v65);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v13);
  v17 = v16;
  v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v19 = *(id *)DOCLog.UI.unsafeMutableAddressor(v18);
  v20 = static os_log_type_t.debug.getter(v19);
  v21 = sub_10006922C((uint64_t *)&unk_100644560);
  v22 = swift_allocObject(v21, 152, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10006A638();
  *(_QWORD *)(v22 + 32) = 0xD000000000000044;
  *(_QWORD *)(v22 + 40) = 0x80000001005321A0;
  v69 = v17;
  v23 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v22 + 96) = &type metadata for Int;
  *(_QWORD *)(v22 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v22 + 72) = v23;
  v24 = objc_msgSend(a1, "items");
  v25 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v62 = v26;
    else
      v62 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v27 = _CocoaArrayWrapper.endIndex.getter(v62);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v28 = swift_bridgeObjectRelease(v26).n128_u64[0];
  *(_QWORD *)(v22 + 136) = &type metadata for Int;
  *(_QWORD *)(v22 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v22 + 112) = v27;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v19,
    v20,
    v22,
    v28);

  v29 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v22).n128_f64[0]);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v25);

  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v63 = v30;
    else
      v63 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v32 = v69;
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v30).n128_u64[0];
  if (v23 == v31)
  {
    v34 = _swiftEmptyArrayStorage;
    if (v23)
    {
      v73 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v23);
      v35 = (void **)(v32 + 40);
      do
      {
        v36 = *v35;
        v35 += 2;
        v37 = v36;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
        v38 = v73[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
        v39 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v37);
        specialized ContiguousArray._endMutation()(v39);
        --v23;
      }
      while (v23);
      v34 = v73;
    }
    v40 = objc_msgSend(*(id *)&v64[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "hostIdentifier", v33);
    static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v42 = v41;

    v43 = v65;
    v44 = v66;
    Date.init()(v43);
    v45 = objc_allocWithZone((Class)DOCHotFolderEvent);
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v48 = objc_msgSend(v45, "initWithAppBundleIdentifier:folderItem:type:lastUsedDate:frecency:", v46, v43, 1, isa, 1.0);

    v49 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v44, v68);
    v50 = *(id *)DOCSmartFolderManager.sharedManager.unsafeMutableAddressor(v49);
    DOCSmartFolderManager.register(event:)(v48);

    v51 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v52 = Array._bridgeToObjectiveC()().super.isa;
    v53 = objc_msgSend(v51, "eligibleActionsForDroppingItems:underItem:", v52, v43);

    type metadata accessor for FPAction(0);
    v55 = v54;
    v56 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
    v57 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v53, v55, v56);

    sub_1003FACEC((uint64_t)v34, (uint64_t)v43, v57, (uint64_t)v71, 0, 0);
    v58 = v72;
    swift_release(v72);
    swift_release(v70);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v34);

  }
  else
  {
    v59 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v32).n128_f64[0]);
    v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v25);

    v60 = v70;
    sub_1003FA390(v57, v71, (uint64_t)sub_1003FD978, v70);
    v58 = v72;
    swift_release(v72);
    swift_release(v60);
  }
  swift_bridgeObjectRelease(v57);
  return swift_release(v58);
}

void sub_1003FB784(uint64_t a1, void *a2, void *a3, id a4, uint64_t a5)
{
  _QWORD *v8;
  void (**v9)(char *, _QWORD *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *__ptr32 *i;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  NSObject *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void (**v41)(char *, _QWORD *);
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  dispatch_group_t v63;
  _QWORD *v64;
  id v65;
  uint64_t v66;
  void (**v67)(char *, _QWORD *);
  _QWORD *v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  unint64_t v78;
  void *v79;
  void *v80;
  dispatch_group_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  void **aBlock;
  uint64_t v86;
  void *v87;
  void *v88;
  void *v89;
  _QWORD *v90;

  v79 = a2;
  v80 = a3;
  v8 = (_QWORD *)type metadata accessor for DispatchWorkItemFlags(0);
  v9 = (void (**)(char *, _QWORD *))*(v8 - 1);
  __chkstk_darwin(v8);
  v73 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for DispatchQoS(0);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v70 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = swift_allocObject(&unk_1005E8530, 24, 7);
  *(_QWORD *)(v82 + 16) = _swiftEmptyArrayStorage;
  v81 = dispatch_group_create();
  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (i = &off_1004D4000; v12; i = &off_1004D4000)
  {
    v65 = a4;
    v66 = a5;
    v67 = v9;
    v68 = v8;
    v78 = a1 & 0xC000000000000001;
    v14 = 4;
    v77 = xmmword_1004D4CE0;
    v69 = (unint64_t)"%@: No UTIs that are acceptable";
    v74 = 0x8000000100532390;
    v15 = *((_QWORD *)i + 409);
    v75 = v12;
    v76 = a1;
    v16 = v81;
    while (1)
    {
      v17 = v78
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, a1)
          : *(id *)(a1 + 8 * v14);
      v8 = v17;
      a5 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v18 = objc_msgSend(v17, "itemProvider");
      v19 = sub_100341FD8((uint64_t)v18);
      v21 = v20;

      if (!v21)
      {
        v42 = objc_msgSend(v8, "itemProvider", swift_bridgeObjectRelease(v76).n128_f64[0]);
        v43 = objc_msgSend(v42, "registeredTypeIdentifiers");

        v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);
        v46 = *(id *)DOCLog.UI.unsafeMutableAddressor(v45);
        v47 = static os_log_type_t.debug.getter();
        v48 = sub_10006922C((uint64_t *)&unk_100644560);
        v49 = swift_allocObject(v48, 112, 7);
        *(_OWORD *)(v49 + 16) = v77;
        *(_QWORD *)(v49 + 56) = &type metadata for String;
        *(_QWORD *)(v49 + 64) = sub_10006A638();
        v50 = v69 | 0x8000000000000000;
        *(_QWORD *)(v49 + 32) = 0xD00000000000003CLL;
        *(_QWORD *)(v49 + 40) = v50;
        *(_QWORD *)(v49 + 96) = sub_10006922C(&qword_10064F390);
        *(_QWORD *)(v49 + 104) = sub_100062698((unint64_t *)&qword_100647550, &qword_10064F390, (uint64_t)&protocol conformance descriptor for [A]);
        *(_QWORD *)(v49 + 72) = v44;
        os_log(_:dso:log:type:_:)("%@: No UTIs that are acceptable", 31, 2, &_mh_execute_header, v46, v47, v49);
        swift_release(v82);

        swift_bridgeObjectRelease(v49);
        return;
      }
      v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v22);
      v24 = static os_log_type_t.debug.getter();
      v25 = sub_10006922C((uint64_t *)&unk_100644560);
      v26 = swift_allocObject(v25, 112, 7);
      v83 = v14 - 3;
      v27 = (_QWORD *)v26;
      *(_OWORD *)(v26 + 16) = v77;
      *(_QWORD *)(v26 + 56) = &type metadata for String;
      v28 = sub_10006A638();
      v27[4] = 0xD00000000000003CLL;
      v27[5] = v74;
      v27[12] = &type metadata for String;
      v27[13] = v28;
      v27[8] = v28;
      v27[9] = v19;
      v27[10] = v21;
      swift_bridgeObjectRetain(v21);
      os_log(_:dso:log:type:_:)("%@: Requesting UTI %@", 21, 2, &_mh_execute_header, v23, v24, v27);

      swift_bridgeObjectRelease(v27);
      dispatch_group_enter(v16);
      a4 = objc_msgSend(v8, "itemProvider");
      v9 = (void (**)(char *, _QWORD *))String._bridgeToObjectiveC()();
      v29 = (_QWORD *)swift_allocObject(&unk_1005E8558, 72, 7);
      v30 = v80;
      v29[2] = v16;
      v29[3] = v30;
      v29[4] = v8;
      v29[5] = v19;
      v31 = v8;
      v32 = v79;
      v29[6] = v21;
      v29[7] = v32;
      v29[8] = v82;
      v89 = sub_1003FD5A0;
      v90 = v29;
      aBlock = _NSConcreteStackBlock;
      v86 = v15;
      v87 = sub_100343140;
      v88 = &unk_1005E8570;
      v33 = _Block_copy(&aBlock);
      v34 = v90;
      v35 = v16;
      v36 = v30;
      v37 = v31;
      v38 = v32;
      swift_retain();
      swift_release(v34);
      v39 = objc_msgSend(a4, "loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:", v9, v33);
      _Block_release(v33);

      v40 = v75;
      ++v14;
      a1 = v76;
      if (v83 == v40)
      {
        swift_bridgeObjectRelease(v76);
        v8 = v68;
        v41 = v67;
        a5 = v66;
        a4 = v65;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v51 = a1;
    else
      v51 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v51);
  }
  swift_bridgeObjectRelease(a1);
  v41 = v9;
LABEL_18:
  v52 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v53 = (void *)static OS_dispatch_queue.main.getter(v52);
  v54 = (_QWORD *)swift_allocObject(&unk_1005E85A8, 40, 7);
  v54[2] = a4;
  v54[3] = a5;
  v55 = v82;
  v54[4] = v82;
  v89 = sub_1003FD604;
  v90 = v54;
  aBlock = _NSConcreteStackBlock;
  v86 = 1107296256;
  v87 = sub_10004A82C;
  v88 = &unk_1005E85C0;
  v56 = _Block_copy(&aBlock);
  swift_retain();
  v57 = sub_10008BA00((uint64_t)a4, a5);
  v58 = v70;
  static DispatchQoS.unspecified.getter(v57);
  v84 = _swiftEmptyArrayStorage;
  v59 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v60 = sub_10006922C((uint64_t *)&unk_100647540);
  v61 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v62 = v73;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v84, v60, v61, v8, v59);
  v63 = v81;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v58, v62, v53, v56);
  _Block_release(v56);

  v41[1](v62, v8);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v72);
  v64 = v90;
  swift_release(v55);
  swift_release(v64);
}

double sub_1003FBE68(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void **v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  Class isa;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double result;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v54 = a2;
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005E8378, 24, 7);
  *(_QWORD *)(v10 + 16) = a4;
  v11 = swift_allocObject(&unk_1005E83A0, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1003FD480;
  *(_QWORD *)(v11 + 24) = v10;
  v56 = v11;
  v57 = v10;
  swift_retain_n(v10, 2);
  v53 = a4;
  static UTType.item.getter(v53);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v9);
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  v17 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v17, 152, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v18 + 56) = &type metadata for String;
  *(_QWORD *)(v18 + 64) = sub_10006A638();
  *(_QWORD *)(v18 + 32) = 0xD000000000000044;
  *(_QWORD *)(v18 + 40) = 0x80000001005321A0;
  v55 = v13;
  v19 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v18 + 96) = &type metadata for Int;
  *(_QWORD *)(v18 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 72) = v19;
  v20 = objc_msgSend(a1, "items");
  v21 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v48 = v22;
    else
      v48 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v24 = swift_bridgeObjectRelease(v22).n128_u64[0];
  *(_QWORD *)(v18 + 136) = &type metadata for Int;
  *(_QWORD *)(v18 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 112) = v23;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v15,
    v16,
    v18,
    v24);

  v25 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v18).n128_f64[0]);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v21);

  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v49 = v26;
    else
      v49 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v27 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v29 = v56;
  v28 = v57;
  v30 = v55;
  swift_bridgeObjectRelease(v26);
  if (v19 != v27)
  {
    v47 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v30).n128_f64[0]);
    v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v21);

    sub_1003FA390(v39, v54, (uint64_t)sub_1003FD978, v29);
    swift_release(v28);
    swift_release(v29);
    goto LABEL_27;
  }
  v31 = _swiftEmptyArrayStorage;
  if (v19)
  {
    v58 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v19);
    v32 = (void **)(v30 + 40);
    do
    {
      v33 = *v32;
      v32 += 2;
      v34 = v33;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      v35 = v58[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
      v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v34);
      specialized ContiguousArray._endMutation()(v36);
      --v19;
    }
    while (v19);
    v31 = v58;
  }
  v37 = v53;
  v38 = swift_bridgeObjectRetain(v31);
  v39 = (uint64_t)sub_1003F9CC0(v38, (uint64_t)v37);
  swift_bridgeObjectRelease(v31);

  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v50 = v39;
    else
      v50 = v39 & 0xFFFFFFFFFFFFFF8;
    if (_CocoaArrayWrapper.endIndex.getter(v50) >= 1)
      goto LABEL_12;
LABEL_26:
    swift_release(v28);
    swift_release(v29);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v31);
    goto LABEL_27;
  }
  if (*(uint64_t *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_26;
LABEL_12:
  v40 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v40, "eligibleActionsForDroppingItems:underItem:", isa, v37);

  type metadata accessor for FPAction(0);
  v44 = v43;
  v45 = sub_10005A360((unint64_t *)&qword_1006418B0, (uint64_t (*)(uint64_t))type metadata accessor for FPAction, (uint64_t)&unk_1004D69D0);
  v46 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v42, v44, v45);

  sub_1003FACEC(v39, (uint64_t)v37, v46, (uint64_t)v54, 0, 0);
  swift_release(v28);
  swift_release(v29);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v39);
  v39 = v46;
LABEL_27:
  swift_bridgeObjectRelease(v39);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

uint64_t sub_1003FC3A8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(_QWORD, __n128), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, __n128);
  uint64_t v55;
  void *v56;
  unsigned int v57;
  uint64_t v58;
  _QWORD *v59;

  v56 = a2;
  v12 = type metadata accessor for UTType(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject(&unk_1005E8288, 48, 7);
  v16[2] = a4;
  v16[3] = a5;
  v53 = a5;
  v54 = a6;
  v16[4] = a6;
  v16[5] = a7;
  v17 = swift_allocObject(&unk_1005E82B0, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_1003FCD74;
  *(_QWORD *)(v17 + 24) = v16;
  v55 = v17;
  swift_retain_n(v16, 2);
  v18 = a4;
  v51 = a7;
  v52 = (uint64_t)v18;
  swift_retain();
  static UTType.item.getter(v19);
  swift_getObjectType(a1);
  sub_1003F8A0C(a1, (uint64_t)v15);
  v21 = v20;
  v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v23 = *(id *)DOCLog.UI.unsafeMutableAddressor(v22);
  v57 = static os_log_type_t.debug.getter();
  v24 = sub_10006922C((uint64_t *)&unk_100644560);
  v25 = swift_allocObject(v24, 152, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v25 + 56) = &type metadata for String;
  *(_QWORD *)(v25 + 64) = sub_10006A638();
  *(_QWORD *)(v25 + 32) = 0xD000000000000044;
  *(_QWORD *)(v25 + 40) = 0x80000001005321A0;
  v58 = v21;
  v26 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v25 + 96) = &type metadata for Int;
  *(_QWORD *)(v25 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v25 + 72) = v26;
  v27 = objc_msgSend(a1, "items");
  v28 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v48 = v29;
    else
      v48 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v30 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0];
  *(_QWORD *)(v25 + 136) = &type metadata for Int;
  *(_QWORD *)(v25 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v25 + 112) = v30;
  os_log(_:dso:log:type:_:)("%@: got %d FPItems; drop session had %d items",
    45,
    2,
    &_mh_execute_header,
    v23,
    v57,
    v25,
    v31);

  v32 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v25).n128_f64[0]);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v28);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v49 = v33;
    else
      v49 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v34 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v35 = v58;
  swift_bridgeObjectRelease(v33);
  if (v26 == v34)
  {
    v36 = _swiftEmptyArrayStorage;
    if (v26)
    {
      v59 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v26);
      v37 = (void **)(v35 + 40);
      v39 = v55;
      v38 = (uint64_t)v56;
      v40 = v51;
      do
      {
        v41 = *v37;
        v37 += 2;
        v42 = v41;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
        v43 = v59[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
        v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v42);
        specialized ContiguousArray._endMutation()(v44);
        --v26;
      }
      while (v26);
      v36 = v59;
    }
    else
    {
      v39 = v55;
      v38 = (uint64_t)v56;
      v40 = v51;
    }
    sub_1002ABF30((uint64_t)v36, v38, v52, v53, v54, v40);
    swift_release(v16);
    swift_release(v39);
    swift_bridgeObjectRelease(v35);
  }
  else
  {
    v45 = objc_msgSend(a1, "items", swift_bridgeObjectRelease(v35).n128_f64[0]);
    v36 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v28);

    v46 = v55;
    sub_1003FA390((uint64_t)v36, v56, (uint64_t)sub_1003FCD80, v55);
    swift_release(v16);
    swift_release(v46);
  }
  swift_bridgeObjectRelease(v36);
  return swift_release(v16);
}

void sub_1003FC7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C(&qword_1006419A0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v37 = v1;
    v38 = a1 + 32;
    do
    {
      v6 = *(void **)(v38 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v39, v7);
      v11 = v6;
      String.hash(into:)(v39, v8, v10);
      v12 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10);
      v13 = -1 << *(_BYTE *)(v3 + 32);
      v14 = v12 & ~v13;
      v15 = v14 >> 6;
      v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
      v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
        v20 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v18 == v21 && v20 == v22)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v20, 2);
LABEL_4:

          goto LABEL_5;
        }
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          goto LABEL_4;
        v26 = ~v13;
        while (1)
        {
          v14 = (v14 + 1) & v26;
          v15 = v14 >> 6;
          v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
          v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0)
            break;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
          v20 = v28;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v27 == v29 && v20 == v30)
            goto LABEL_3;
          v32 = v30;
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v20, v29, v30, 0);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v32);
          if ((v33 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v15) = v17 | v16;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14) = v11;
      v34 = *(_QWORD *)(v3 + 16);
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v3 + 16) = v36;
LABEL_5:
      ++v4;
    }
    while (v4 != v37);
  }
}

void sub_1003FC9EC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_10006922C(&qword_100653160);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v12);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_1003FCD48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1003FCD74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002ABF30(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(_QWORD, __n128))(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1003FCD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003F69EC(a1, a2, *(void (**)(_QWORD *, uint64_t))(v2 + 16));
}

uint64_t sub_1003FCD88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1003FCDB4(uint64_t a1)
{
  uint64_t v1;

  sub_1003F6AB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1003FCDC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_1003FCDF4()
{
  uint64_t v0;

  return sub_1003F6B88(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1003FCE00(uint64_t a1)
{
  sub_1003FCE0C(a1, &qword_100653278);
}

void sub_1003FCE0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10006922C(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v38 = v2;
    v39 = a1 + 32;
    do
    {
      v7 = *(void **)(v39 + 8 * v5);
      v8 = *(_QWORD *)(v4 + 40);
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;
      Hasher.init(_seed:)(v40, v8);
      v12 = v7;
      String.hash(into:)(v40, v9, v11);
      v13 = Hasher._finalize()();
      swift_bridgeObjectRelease(v11);
      v14 = -1 << *(_BYTE *)(v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)(v6 + 8 * (v15 >> 6));
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15));
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        if (v19 == v22 && v21 == v23)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v21, 2);
LABEL_4:

          goto LABEL_5;
        }
        v25 = v23;
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v25);
        if ((v26 & 1) != 0)
          goto LABEL_4;
        v27 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v27;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)(v6 + 8 * (v15 >> 6));
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15));
          v21 = v29;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          if (v28 == v30 && v21 == v31)
            goto LABEL_3;
          v33 = v31;
          v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v21, v30, v31, 0);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v33);
          if ((v34 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v6 + 8 * v16) = v18 | v17;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v12;
      v35 = *(_QWORD *)(v4 + 16);
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v4 + 16) = v37;
LABEL_5:
      ++v5;
    }
    while (v5 != v38);
  }
}

Swift::Int sub_1003FD034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10006922C((uint64_t *)&unk_100653280);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1003FD174(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 168);
  v4 = *(void **)(a1 + 184);
  v5 = *(id *)a1;
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return a1;
}

void sub_1003FD1BC(void *a1)
{
  sub_1003FD1E4(a1, &qword_100643AC0, DOCDocumentSource_ptr);
}

void sub_1003FD1D0(void *a1)
{
  sub_1003FD1E4(a1, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
}

void sub_1003FD1E4(void *a1, unint64_t *a2, _QWORD *a3)
{
  id v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char **v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  unint64_t *v24;
  _QWORD *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _OWORD v33[2];
  _BYTE v34[24];
  uint64_t v35;
  unint64_t v36;

  v6 = objc_msgSend(a1, "localDragSession");
  *(_QWORD *)&v7 = swift_unknownObjectRelease(v6).n128_u64[0];
  if (!v6)
    return;
  v36 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = objc_msgSend(a1, "items", v7);
  v9 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if (!((unint64_t)v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_4;
LABEL_25:
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (v10 < 0)
    v30 = v10;
  else
    v30 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v11 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v10);
  if (!v11)
    goto LABEL_25;
LABEL_4:
  if (v11 < 1)
  {
    __break(1u);
  }
  else
  {
    v12 = 0;
    v13 = v10 & 0xC000000000000001;
    v14 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    v15 = (char *)&type metadata for Any + 8;
    v31 = v11;
    do
    {
      if (v13)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
      else
        v16 = *(id *)(v10 + 8 * v12 + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, v14[500]);
      if (v18)
      {
        v19 = v18;
        _bridgeAnyObjectToAny(_:)(v33, v18);
        swift_unknownObjectRelease(v19);
      }
      else
      {
        memset(v33, 0, sizeof(v33));
      }
      sub_10007EBDC((uint64_t)v33, (uint64_t)v34);
      if (v35)
      {
        v20 = sub_10004F2F0(0, a2, a3);
        if ((swift_dynamicCast(&v32, v34, v15, v20, 6) & 1) != 0)
        {
          v21 = v13;
          v22 = v10;
          v23 = v14;
          v24 = a2;
          v25 = a3;
          v26 = v32;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
          v28 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v27 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v28 >= v27 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
          v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
          specialized Array._endMutation()(v29);

          a3 = v25;
          a2 = v24;
          v14 = v23;
          v10 = v22;
          v13 = v21;
          v15 = (char *)&type metadata for Any + 8;
          v11 = v31;
        }
        else
        {

        }
      }
      else
      {

        sub_10000CB4C((uint64_t)v34, &qword_100642730);
      }
      ++v12;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease(v10);
  }
}

double sub_1003FD478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003F673C(a1, a2, *(void (**)(_QWORD, __n128))(v2 + 16), *(_QWORD *)(v2 + 24));
}

double sub_1003FD480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10016A1BC(a1, a2, *(void **)(v2 + 16));
}

double sub_1003FD488(uint64_t a1, void *a2)
{
  return sub_1003F6224(a1, a2);
}

uint64_t sub_1003FD4A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003FD4DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F6508(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1003FD4E8()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_1003FD4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000DDF3C(a1, a2, v2);
}

uint64_t sub_1003FD4FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1003FD528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000DE3E4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1003FD530()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FD554()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1003FD5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003F6C8C(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void **)(v3 + 56), *(_QWORD *)(v3 + 64));
}

uint64_t sub_1003FD5D0()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003FD604()
{
  uint64_t *v0;

  return sub_1003F7EC0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003FD610()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1003FD61C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003FD640()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release(*(id *)((char *)v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1003FD6E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1003F7B34(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1003FD740()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 72, 7);
}

void sub_1003FD784()
{
  uint64_t v0;

  sub_1003F7708(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1003FD798()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

Swift::Int sub_1003FD7A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003F7A78(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003FD7AC()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1003FD7B8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003FD7DC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003F6114(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1003FD7E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003FD810(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return sub_1003F58BC(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1003FD81C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 17) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003FD87C()
{
  uint64_t v0;

  type metadata accessor for URL(0);
  if (*(_BYTE *)(v0 + 16) == 1)
    URL.stopAccessingSecurityScopedResource()();
}

void sub_1003FD8C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1003F53E8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

ValueMetadata *_s13DOCFPDragInfoVMa()
{
  return &_s13DOCFPDragInfoVN;
}

void sub_1003FDA04()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView])
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)DOCDownloadProgressView), "init");
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v2, "setActiveStrokeColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor]);
    objc_msgSend(v2, "setInactiveStrokeColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor]);
    objc_msgSend(v2, "setObservedProgress:", *(_QWORD *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress]);
    objc_msgSend(v2, "setCanShowStopButton:", v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton]);
    objc_msgSend(v0, "addSubview:", v2);
    v3 = (id)DOCConstraintsToResizeWithSuperview(v2, *(double *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics], *(double *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics], *(double *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics], *(double *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics]);
    v4 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    Array<A>.doc_setActive(_:)(1, v5, v4);
    swift_bridgeObjectRelease(v5);
    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v2;

  }
}

id sub_1003FDB7C(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  _BYTE *v5;
  NSString *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  objc_super v13;

  v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton] = 0;
  v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] = UIFontTextStyleBody;
  v3 = OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  v6 = UIFontTextStyleBody;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "secondaryLabelColor");
  v7 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor;
  v8 = (void *)objc_opt_self(DOCDownloadProgressView);
  *(_QWORD *)&v5[v7] = objc_msgSend(v8, "defaultProgressColor");
  v9 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor;
  *(_QWORD *)&v5[v9] = objc_msgSend(v8, "defaultTrackColor");
  v10 = &v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics];
  *v10 = 0;
  v10[1] = 2;
  v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress] = 0;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for DOCItemStatusView();
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

id sub_1003FDD10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemStatusView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for DOCItemStatusView.Metrics()
{
  return &type metadata for DOCItemStatusView.Metrics;
}

uint64_t sub_1003FDDD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void *sub_1003FDDFC()
{
  uint64_t v0;
  uint64_t inited;
  void *result;
  uint64_t v3;

  v0 = sub_10006922C((uint64_t *)&unk_100653610);
  inited = swift_initStackObject(v0, &v3);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = 7893604;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = &off_1005C0CD0;
  *(_QWORD *)(inited + 56) = 0x72616365646973;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = &off_1005C0DA0;
  result = (void *)sub_1003F3108(inited);
  off_100653480 = result;
  return result;
}

uint64_t sub_1003FDE7C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  os_log_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  _QWORD *p_isa;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  os_log_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  os_log_t v88;
  os_log_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  os_unfair_lock_s *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  void *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  void *v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t *v122;
  id v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  NSObject *v127;
  os_log_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t result;
  uint64_t v153;
  _QWORD *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  __int128 v161;
  unint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  os_log_t v165;
  os_log_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  os_log_t v180;
  unint64_t v181;
  uint64_t v182;

  v159 = a5;
  v158 = a4;
  v157 = a3;
  v7 = type metadata accessor for Logger(0);
  v172 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v155 = (char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v167 = (char *)&v153 - v10;
  v11 = swift_allocObject(&unk_1005E8AA0, 24, 7);
  v156 = v11;
  *(_QWORD *)(v11 + 16) = _swiftEmptyArrayStorage;
  v154 = (_QWORD *)(v11 + 16);
  v177 = a2;
  v171 = a1;
  v173 = v7;
  if (!a1)
    goto LABEL_26;
  v12 = &a1[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((a1[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
  {
    v13 = a1;
    goto LABEL_5;
  }
  v14 = *(void **)v12;
  v15 = *((_QWORD *)v12 + 1);
  v16 = a1;
  sub_1000B0EFC(v14, v15, 0);

  a2 = v177;
  swift_unknownObjectRelease(v15);
  if (!v15)
  {

LABEL_26:
    v176 = (_QWORD *)sub_1003F3228((uint64_t)_swiftEmptyArrayStorage);
LABEL_36:
    v182 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)a2 >> 62)
      goto LABEL_93;
    v48 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (!v48)
    {
LABEL_97:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v176);
      v148 = v182;
      v149 = (_QWORD *)swift_allocObject(&unk_1005E8AC8, 48, 7);
      v150 = v156;
      v149[2] = v157;
      v149[3] = v150;
      v151 = v159;
      v149[4] = v158;
      v149[5] = v151;
      swift_retain(v150);
      swift_retain(v151);
      sub_100400068(v148, (uint64_t)sub_10040005C, (uint64_t)v149);
      swift_release(v150);
      swift_bridgeObjectRelease(v148);
      return swift_release(v149);
    }
LABEL_38:
    v50 = 0;
    v163 = 0;
    v51 = a2 & 0xC000000000000001;
    v168 = a2 + 32;
    v169 = a2 & 0xFFFFFFFFFFFFFF8;
    v162 = &v179;
    *(_QWORD *)&v49 = 136315394;
    v161 = v49;
    v160 = (char *)&type metadata for Any + 8;
    while (1)
    {
      if (v51)
      {
        v52 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, a2);
        v45 = __OFADD__(v50++, 1);
        if (v45)
          goto LABEL_91;
      }
      else
      {
        if (v50 >= *(_QWORD *)(v169 + 16))
          goto LABEL_92;
        v52 = *(void **)(v168 + 8 * v50);
        swift_unknownObjectRetain(v52);
        v45 = __OFADD__(v50++, 1);
        if (v45)
        {
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          if (a2 < 0)
            v147 = a2;
          else
            v147 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a2);
          v48 = _CocoaArrayWrapper.endIndex.getter(v147);
          if (!v48)
            goto LABEL_97;
          goto LABEL_38;
        }
      }
      v53 = sub_1003FFC7C(v52);
      if (v54)
      {
        v55 = v53;
        v56 = v54;
        v174 = v50;
        v175 = (unint64_t)v52;
        swift_bridgeObjectRetain(a2);
        v57 = 4;
        do
        {
          v58 = v57 - 4;
          if (v51)
          {
            a2 = specialized _ArrayBuffer._getElementSlowPath(_:)(v57 - 4, a2);
            v59 = v57 - 3;
            if (__OFADD__(v58, 1))
              goto LABEL_90;
          }
          else
          {
            a2 = *(_QWORD *)(a2 + 8 * v57);
            swift_unknownObjectRetain(a2);
            v59 = v57 - 3;
            if (__OFADD__(v58, 1))
            {
LABEL_90:
              __break(1u);
              goto LABEL_91;
            }
          }
          v60 = objc_msgSend((id)a2, "filename");
          v61 = (os_log_t)static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
          v63 = v62;

          v180 = v61;
          v181 = v63;
          v178 = v55;
          v179 = v56;
          v64 = sub_10008B9BC();
          v65 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v178, &type metadata for String, &type metadata for String, v64, v64);
          swift_bridgeObjectRelease(v63);
          swift_unknownObjectRelease(a2);
          if (!v65)
          {
            a2 = v177;
            v71 = swift_bridgeObjectRelease(v177);
            v72 = Logger.UI.unsafeMutableAddressor(v71);
            v74 = v172;
            v73 = v173;
            v75 = v167;
            (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v167, v72, v173);
            v76 = (void *)v175;
            swift_unknownObjectRetain_n(v175, 2);
            v77 = swift_bridgeObjectRetain(v56);
            v78 = Logger.logObject.getter(v77);
            v79 = static os_log_type_t.debug.getter();
            LODWORD(v170) = v79;
            if (os_log_type_enabled(v78, v79))
            {
              v80 = swift_slowAlloc(22, -1);
              v165 = v78;
              v81 = v80;
              v166 = (os_log_t)swift_slowAlloc(64, -1);
              v180 = v166;
              *(_DWORD *)v81 = v161;
              v164 = v81 + 4;
              v82 = objc_msgSend(v76, "filename");
              v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
              v85 = v84;

              v86 = v83;
              a2 = v177;
              v178 = sub_1000544FC(v86, v85, (uint64_t *)&v180);
              v87 = v162;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v162);
              swift_unknownObjectRelease_n(v76, 2);
              swift_bridgeObjectRelease(v85);
              *(_WORD *)(v81 + 12) = 2080;
              swift_bridgeObjectRetain(v56);
              v178 = sub_1000544FC(v55, v56, (uint64_t *)&v180);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v87);
              swift_bridgeObjectRelease_n(v56, 3);
              v88 = v165;
              _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v170, "Found related file in source array (%s => %s", (uint8_t *)v81, 0x16u);
              v89 = v166;
              swift_arrayDestroy(v166, 2, v160);
              swift_slowDealloc(v89, -1, -1);
              swift_slowDealloc(v81, -1, -1);
              swift_unknownObjectRelease(v76);

              (*(void (**)(char *, uint64_t))(v172 + 8))(v75, v173);
            }
            else
            {

              swift_bridgeObjectRelease_n(v56, 2);
              swift_unknownObjectRelease_n(v76, 3);
              (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
            }
            v50 = v174;
            goto LABEL_40;
          }
          ++v57;
          a2 = v177;
        }
        while (v59 != v48);
        swift_bridgeObjectRelease(v177);
        v66 = v173;
        if (v171)
        {
          v67 = &v171[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
          if ((v171[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
          {
            v68 = *(char **)v67;
            v69 = *((_QWORD *)v67 + 1);
            v70 = v171;
            goto LABEL_66;
          }
          v91 = *(char **)v67;
          v90 = *((_QWORD *)v67 + 1);
          v92 = v171;
          sub_1000B0EFC(v91, v90, 0);

          v70 = (char *)swift_unknownObjectRelease(v90);
          if (v90)
          {
            v68 = *(char **)v67;
            if ((v67[16] & 1) != 0)
            {
              v69 = *((_QWORD *)v67 + 1);
LABEL_66:
              v170 = &v153;
              v93 = *(os_unfair_lock_s **)&v68[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
              __chkstk_darwin(v70);
              *(&v153 - 2) = (uint64_t)v68;
              sub_1000B0EFC(v68, v69, 1);
              swift_retain(v93);
              os_unfair_lock_lock(v93 + 4);
              v94 = v163;
              sub_10006A67C((_QWORD *(*)(uint64_t *__return_ptr))sub_100003990, &v180);
              v163 = v94;
              os_unfair_lock_unlock(v93 + 4);
              v95 = (uint64_t)v180;
              swift_release(v93);
              sub_100008A60(v68, v69, 1);
              v66 = v173;
            }
            else
            {
              v135 = v68;
              v136 = objc_msgSend(v135, "items");
              v137 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
              v95 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v136, v137);

              if ((unint64_t)v95 >> 62)
              {
                if (v95 < 0)
                  v144 = v95;
                else
                  v144 = v95 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v95);
                v145 = sub_10006922C((uint64_t *)&unk_1006424B0);
                v146 = _bridgeCocoaArray<A>(_:)(v144, v145);

                swift_bridgeObjectRelease_n(v95, 2);
                v95 = v146;
              }
              else
              {
                v138 = swift_bridgeObjectRetain(v95);
                dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v138);

                swift_bridgeObjectRelease(v95);
              }
            }
            v96 = sub_10006922C((uint64_t *)&unk_1006424B0);
            v97 = v175;
            v98 = Array<A>.contains(node:)(v175, v95, v96);
            swift_bridgeObjectRelease(v95);
            if ((v98 & 1) != 0)
            {
              v180 = (os_log_t)v55;
              v181 = v56;
              v99 = StringProtocol.localizedLowercase.getter(&type metadata for String, v64);
              v101 = v100;
              swift_bridgeObjectRelease(v56);
              v102 = v176;
              if (v176[2] && (v103 = sub_10007EF08(v99, v101), (v104 & 1) != 0))
              {
                v105 = *(void **)(v102[7] + 8 * v103);
                swift_unknownObjectRetain(v105);
                v106 = swift_bridgeObjectRelease(v101);
                v107 = Logger.UI.unsafeMutableAddressor(v106);
                v108 = v172;
                v109 = v155;
                (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v155, v107, v66);
                v110 = (void *)v175;
                swift_unknownObjectRetain_n(v175, 2);
                v111 = swift_unknownObjectRetain_n(v105, 2);
                v112 = Logger.logObject.getter(v111);
                v113 = static os_log_type_t.debug.getter();
                v114 = v113;
                v170 = v112;
                if (os_log_type_enabled(v112, v113))
                {
                  v115 = swift_slowAlloc(22, -1);
                  LODWORD(v166) = v114;
                  v116 = v115;
                  v165 = (os_log_t)swift_slowAlloc(64, -1);
                  v180 = v165;
                  *(_DWORD *)v116 = v161;
                  v164 = v116 + 4;
                  v117 = objc_msgSend(v110, "filename");
                  v118 = v105;
                  v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
                  v121 = v120;

                  v178 = sub_1000544FC(v119, v121, (uint64_t *)&v180);
                  v122 = v162;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v162);
                  swift_unknownObjectRelease_n(v110, 2);
                  swift_bridgeObjectRelease(v121);
                  *(_WORD *)(v116 + 12) = 2080;
                  v123 = objc_msgSend(v118, "filename");
                  v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
                  v126 = v125;

                  v105 = v118;
                  v178 = sub_1000544FC(v124, v126, (uint64_t *)&v180);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v122);
                  swift_unknownObjectRelease_n(v118, 2);
                  swift_bridgeObjectRelease(v126);
                  v127 = v170;
                  _os_log_impl((void *)&_mh_execute_header, v170, (os_log_type_t)v166, "Found related file in current node collection (%s => %s", (uint8_t *)v116, 0x16u);
                  v128 = v165;
                  swift_arrayDestroy(v165, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v128, -1, -1);
                  swift_slowDealloc(v116, -1, -1);

                  (*(void (**)(char *, uint64_t))(v172 + 8))(v155, v66);
                }
                else
                {

                  swift_unknownObjectRelease_n(v105, 2);
                  swift_unknownObjectRelease_n(v110, 2);
                  (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v66);
                }
                v139 = swift_unknownObjectRetain(v105);
                v140 = v154;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v139);
                v142 = *(_QWORD *)((*v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v141 = *(_QWORD *)((*v140 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v142 >= v141 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v141 > 1, v142 + 1, 1);
                v143 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v105);
                specialized Array._endMutation()(v143);

                swift_unknownObjectRelease(v105);
                v129 = v175;
LABEL_84:
                swift_unknownObjectRelease(v129);
              }
              else
              {

                swift_unknownObjectRelease(v175);
                swift_bridgeObjectRelease(v101);
              }
              a2 = v177;
              v50 = v174;
              goto LABEL_40;
            }

            swift_bridgeObjectRelease(v56);
            v129 = v97;
            goto LABEL_84;
          }

          a2 = v177;
        }
        swift_bridgeObjectRelease(v56);
        v130 = v175;
        v131 = swift_unknownObjectRetain(v175);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v131);
        v133 = *(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v132 = *(_QWORD *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v133 >= v132 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v133 + 1, 1);
        v134 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v133, v130);
        specialized Array._endMutation()(v134);
        swift_unknownObjectRelease(v130);
        v50 = v174;
      }
      else
      {
        swift_unknownObjectRelease(v52);
      }
LABEL_40:
      if (v50 == v48)
        goto LABEL_97;
    }
  }
LABEL_5:
  v17 = sub_10004FD50();
  isUniquelyReferenced_nonNull_native = v17;
  if (v17 >> 62)
    goto LABEL_30;
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v17);
  if (!v19)
  {
LABEL_34:
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
    v176 = &_swiftEmptyDictionarySingleton;
LABEL_35:
    swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);

    goto LABEL_36;
  }
LABEL_7:
  v175 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v176 = &_swiftEmptyDictionarySingleton;
  a2 = 4;
  v174 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    v21 = a2 - 4;
    if (v175)
    {
      v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(a2 - 4, isUniquelyReferenced_nonNull_native);
      v23 = a2 - 3;
      if (__OFADD__(v21, 1))
        goto LABEL_27;
    }
    else
    {
      v22 = (void *)swift_unknownObjectRetain(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * a2));
      v23 = a2 - 3;
      if (__OFADD__(v21, 1))
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        if (isUniquelyReferenced_nonNull_native < 0)
          v47 = isUniquelyReferenced_nonNull_native;
        else
          v47 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2);
        v19 = _CocoaArrayWrapper.endIndex.getter(v47);
        swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
        if (!v19)
          goto LABEL_34;
        goto LABEL_7;
      }
    }
    v24 = v22;
    v25 = objc_msgSend(v22, "filename");
    v26 = (os_log_t)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v180 = v26;
    v181 = v28;
    v29 = sub_10008B9BC();
    v30 = StringProtocol.localizedLowercase.getter(&type metadata for String, v29);
    v32 = v31;
    swift_bridgeObjectRelease(v28);
    v33 = (uint64_t)v176;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v176);
    v180 = (os_log_t)v33;
    v35 = sub_10007EF08(v30, v32);
    v36 = *(_QWORD *)(v33 + 16);
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      goto LABEL_28;
    v39 = v34;
    if (*(_QWORD *)(v33 + 24) >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1002EA534();
      goto LABEL_21;
    }
    sub_1002E2E54(v38, isUniquelyReferenced_nonNull_native);
    v40 = sub_10007EF08(v30, v32);
    if ((v39 & 1) != (v41 & 1))
      break;
    v35 = v40;
LABEL_21:
    p_isa = &v180->isa;
    v176 = &v180->isa;
    if ((v39 & 1) != 0)
    {
      isa = v180[7].isa;
      swift_unknownObjectRelease(*((_QWORD *)isa + v35));
      *((_QWORD *)isa + v35) = v24;
    }
    else
    {
      v180[(v35 >> 6) + 8].isa = (Class)((uint64_t)v180[(v35 >> 6) + 8].isa | (1 << v35));
      v43 = (uint64_t *)(p_isa[6] + 16 * v35);
      *v43 = v30;
      v43[1] = v32;
      *(_QWORD *)(p_isa[7] + 8 * v35) = v24;
      v44 = p_isa[2];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (v45)
        goto LABEL_29;
      p_isa[2] = v46;
      swift_bridgeObjectRetain(v32);
    }
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(0x8000000000000000);
    ++a2;
    isUniquelyReferenced_nonNull_native = v174;
    if (v23 == v19)
    {
      swift_bridgeObjectRelease(v174);
      a2 = v177;
      goto LABEL_35;
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_1003FECA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *__ptr32 *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  dispatch_group_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  dispatch_group_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  dispatch_group_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void **aBlock;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  void *v68;
  void *v69;
  _QWORD *v70;

  v55 = a2;
  v56 = a3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  __chkstk_darwin(v8);
  v61 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  __chkstk_darwin(v10);
  v58 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = dispatch_group_create();
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v13 = &off_1004D4000;
    if (v12)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a1);
LABEL_15:
    v35 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v36 = (void *)static OS_dispatch_queue.main.getter(v35);
    v37 = (_QWORD *)swift_allocObject(&unk_1005E8C08, 40, 7);
    v37[2] = a4;
    v37[3] = a5;
    v38 = v56;
    v37[4] = v56;
    v69 = sub_100360C78;
    v70 = v37;
    aBlock = _NSConcreteStackBlock;
    v66 = *((_QWORD *)v13 + 409);
    v67 = sub_10004A82C;
    v68 = &unk_1005E8C20;
    v39 = _Block_copy(&aBlock);
    swift_retain(a5);
    swift_retain(v38);
    v40 = v58;
    static DispatchQoS.unspecified.getter(v41);
    v64 = _swiftEmptyArrayStorage;
    v42 = sub_10008BAAC();
    v43 = sub_10006922C((uint64_t *)&unk_100647540);
    v44 = sub_1000791AC();
    v45 = v61;
    v46 = v63;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v43, v44, v63, v42);
    v47 = v57;
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v40, v45, v36, v39);

    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v60);
    return swift_release(v70);
  }
  if (a1 < 0)
    v34 = a1;
  else
    v34 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v34);
  v13 = &off_1004D4000;
  if (!v12)
    goto LABEL_14;
LABEL_3:
  result = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v54 = result;
  if (v12 >= 1)
  {
    v49 = a4;
    v50 = a5;
    v15 = 0;
    v51 = a1 & 0xC000000000000001;
    v52 = v12;
    v53 = a1;
    v16 = v58;
    v17 = v61;
    v18 = v63;
    do
    {
      if (v51)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 8 * v15 + 32);
        swift_retain(v19);
      }
      ++v15;
      v20 = v57;
      dispatch_group_enter(v57);
      v21 = (_QWORD *)swift_allocObject(&unk_1005E8BB8, 48, 7);
      v21[2] = v20;
      v21[3] = v19;
      v21[4] = v55;
      v22 = v56;
      v21[5] = v56;
      v23 = *(_QWORD *)(v19 + 24);
      v24 = *(_QWORD *)(v19 + 32);
      *(_QWORD *)(v19 + 24) = sub_1004004FC;
      *(_QWORD *)(v19 + 32) = v21;
      swift_retain(v22);
      swift_retain(v21);
      v25 = v20;
      swift_retain(v19);
      v26 = sub_100087534(v23, v24);
      v27 = (void *)static OS_dispatch_queue.main.getter(v26);
      v69 = sub_100400508;
      v70 = (_QWORD *)v19;
      aBlock = _NSConcreteStackBlock;
      v66 = 1107296256;
      v67 = sub_10004A82C;
      v68 = &unk_1005E8BD0;
      v28 = _Block_copy(&aBlock);
      v29 = v70;
      swift_retain(v19);
      v30 = swift_release(v29);
      static DispatchQoS.unspecified.getter(v30);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v31 = sub_10008BAAC();
      v32 = sub_10006922C((uint64_t *)&unk_100647540);
      v33 = sub_1000791AC();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v18, v31);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v17, v28);
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v18);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v60);
      swift_release(v19);
      swift_release(v21);
      a1 = v53;
    }
    while (v52 != v15);
    swift_bridgeObjectRelease(v53);
    a5 = v50;
    a4 = v49;
    v13 = &off_1004D4000;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1003FF13C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  dispatch_group_t v56;
  char *v57;
  __int128 v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;
  char v79[32];

  v56 = a2;
  v75 = a1;
  v7 = type metadata accessor for Logger(0);
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  __chkstk_darwin(v7);
  v63 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 40, v79, 0, 0);
  v9 = *(_QWORD *)(a3 + 40);
  if ((unint64_t)v9 >> 62)
    goto LABEL_37;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(a3 + 40));
  while (v10)
  {
    v12 = 0;
    v62 = (_QWORD *)(a5 + 16);
    v72 = v9 & 0xC000000000000001;
    v66 = v9 + 32;
    v67 = v9 & 0xFFFFFFFFFFFFFF8;
    v13 = v75 & 0xFFFFFFFFFFFFFF8;
    v70 = v75 & 0xFFFFFFFFFFFFFF8;
    if (v75 < 0)
      v13 = v75;
    v55 = v13;
    v74 = v75 & 0xC000000000000001;
    v59 = &v78;
    v71 = (unint64_t)v75 >> 62;
    *(_QWORD *)&v11 = 136315394;
    v58 = v11;
    v57 = (char *)&type metadata for Any + 8;
    v68 = v10;
    v69 = v9;
    while (v72)
    {
      v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
      v15 = __OFADD__(v12++, 1);
      if (v15)
        goto LABEL_35;
LABEL_14:
      v16 = sub_1003FFC7C(v14);
      if (v17)
      {
        v18 = v16;
        v19 = v17;
        v73 = v14;
        if (v71)
        {
          swift_bridgeObjectRetain(v75);
          v20 = _CocoaArrayWrapper.endIndex.getter(v55);
          if (v20)
          {
LABEL_17:
            a5 = 4;
            while (1)
            {
              v21 = a5 - 4;
              if (v74)
              {
                v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(a5 - 4, v75);
                v9 = a5 - 3;
                if (__OFADD__(v21, 1))
                  goto LABEL_34;
              }
              else
              {
                v22 = *(void **)(v75 + 8 * a5);
                swift_unknownObjectRetain(v22);
                v9 = a5 - 3;
                if (__OFADD__(v21, 1))
                {
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
              }
              v23 = objc_msgSend(v22, "filename");
              v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
              v26 = v25;

              v76[0] = v24;
              v76[1] = v26;
              v77 = v18;
              v78 = v19;
              v27 = sub_10008B9BC();
              v28 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v77, &type metadata for String, &type metadata for String, v27, v27);
              swift_bridgeObjectRelease(v26);
              if (!v28)
                break;
              swift_unknownObjectRelease(v22);
              ++a5;
              if (v9 == v20)
                goto LABEL_6;
            }
            swift_bridgeObjectRelease(v19);
            v29 = swift_bridgeObjectRelease(v75);
            v30 = Logger.UI.unsafeMutableAddressor(v29);
            v31 = v63;
            v32 = v64;
            v33 = v65;
            (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v30, v65);
            v14 = v73;
            swift_unknownObjectRetain_n(v73, 2);
            v34 = swift_unknownObjectRetain_n(v22, 2);
            v35 = Logger.logObject.getter(v34);
            v36 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v35, v36))
            {
              v37 = swift_slowAlloc(22, -1);
              v61 = swift_slowAlloc(64, -1);
              v76[0] = v61;
              *(_DWORD *)v37 = v58;
              v60 = v37 + 4;
              v38 = objc_msgSend(v14, "filename");
              v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
              v41 = v40;

              v77 = sub_1000544FC(v39, v41, v76);
              v42 = v59;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v59);
              swift_unknownObjectRelease_n(v73, 2);
              swift_bridgeObjectRelease(v41);
              *(_WORD *)(v37 + 12) = 2080;
              v60 = v37 + 14;
              v43 = objc_msgSend(v22, "filename");
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
              v46 = v45;

              v14 = v73;
              v77 = sub_1000544FC(v44, v46, v76);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v42);
              swift_unknownObjectRelease_n(v22, 2);
              swift_bridgeObjectRelease(v46);
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Found related file in parent node (%s => %s", (uint8_t *)v37, 0x16u);
              v47 = v61;
              swift_arrayDestroy(v61, 2, v57);
              swift_slowDealloc(v47, -1, -1);
              swift_slowDealloc(v37, -1, -1);

              (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v65);
            }
            else
            {

              swift_unknownObjectRelease_n(v22, 2);
              swift_unknownObjectRelease_n(v14, 2);
              (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
            }
            v10 = v68;
            v9 = v69;
            v48 = v62;
            swift_beginAccess(v62, v76, 33, 0);
            v49 = swift_unknownObjectRetain(v22);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
            v51 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v50 = *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v51 >= v50 >> 1)
            {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
              v48 = v62;
            }
            a5 = (uint64_t)v48;
            v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v22);
            specialized Array._endMutation()(v52);
            swift_endAccess(v76);
            swift_unknownObjectRelease(v22);
            goto LABEL_7;
          }
        }
        else
        {
          v20 = *(_QWORD *)(v70 + 16);
          swift_bridgeObjectRetain(v75);
          if (v20)
            goto LABEL_17;
        }
LABEL_6:
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v75);
        v10 = v68;
        v9 = v69;
        v14 = v73;
      }
LABEL_7:
      swift_unknownObjectRelease(v14);
      if (v12 == v10)
        goto LABEL_41;
    }
    if (v12 >= *(_QWORD *)(v67 + 16))
      goto LABEL_36;
    v14 = *(void **)(v66 + 8 * v12);
    swift_unknownObjectRetain(v14);
    v15 = __OFADD__(v12++, 1);
    if (!v15)
      goto LABEL_14;
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v9 < 0)
      v53 = v9;
    else
      v53 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v53);
  }
LABEL_41:
  swift_bridgeObjectRelease(v9);
  dispatch_group_leave(v56);
}

void sub_1003FF72C(uint64_t a1, uint64_t a2, dispatch_group_t group, void *a4, uint64_t a5)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  _QWORD v38[5];

  if (a2)
  {
    v8 = *(id *)DOCLog.UI.unsafeMutableAddressor();
    v9 = static os_log_type_t.error.getter();
    v10 = sub_10006922C((uint64_t *)&unk_100644560);
    v11 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D4CE0;
    v12 = objc_msgSend(a4, "description");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    *(_QWORD *)(v11 + 56) = &type metadata for String;
    *(_QWORD *)(v11 + 64) = sub_10006A638();
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v15;
    v16 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v11 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v11 + 104) = sub_100151F4C();
    *(_QWORD *)(v11 + 72) = v16;
    os_log(_:dso:log:type:_:)("Error fetching the parent of node %@: %@", 40, 2, &_mh_execute_header, v8, v9, v11);

    swift_bridgeObjectRelease(v11);
    dispatch_group_leave(group);
  }
  else
  {
    if (a1)
    {
      v18 = (_QWORD *)(a5 + 16);
      ObjectType = swift_getObjectType(a1, 0);
      swift_unknownObjectRetain(a1);
      DOCNode.identifierKey.getter(v38, ObjectType);
      swift_beginAccess(v18, v37, 32, 0);
      v20 = *v18;
      if (*(_QWORD *)(*v18 + 16) && (v21 = sub_100067654((uint64_t)v38), (v22 & 1) != 0))
      {
        v23 = *(_QWORD **)(*(_QWORD *)(v20 + 56) + 8 * v21);
        swift_endAccess(v37);
        swift_retain(v23);
        sub_100067748((uint64_t)v38);
      }
      else
      {
        swift_endAccess(v37);
        sub_100067748((uint64_t)v38);
        v24 = type metadata accessor for DOCRelatedNodeObserver();
        v23 = (_QWORD *)swift_allocObject(v24, 48, 7);
        v23[3] = 0;
        v23[4] = 0;
        v23[5] = _swiftEmptyArrayStorage;
        v25 = type metadata accessor for DOCNodeCollection();
        v26 = (void *)swift_unknownObjectRetain(a1);
        v37[0] = 1;
        v27 = sub_100163EB8(v26, 0, 0, 0x100000000uLL, v25, ObjectType);
        v23[2] = v27;
        v28 = v27 + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate;
        *(_QWORD *)(v28 + 8) = &off_1005E8A58;
        swift_unknownObjectWeakAssign(v28, v23);
      }
      swift_beginAccess(v23 + 5, v38, 33, 0);
      v29 = swift_unknownObjectRetain(a4);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v30 = *(_QWORD *)((v23[5] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((v23[5] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v31 >> 1)
      {
        v35 = *(_QWORD *)((v23[5] & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v30 + 1, 1);
        v30 = v35;
      }
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, a4);
      specialized Array._endMutation()(v32);
      swift_endAccess(v38);
      DOCNode.identifierKey.getter(v38, ObjectType);
      swift_beginAccess(v18, v37, 33, 0);
      swift_retain(v23);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
      v36 = *v18;
      *v18 = 0x8000000000000000;
      sub_10035828C((uint64_t)v23, (uint64_t)v38, isUniquelyReferenced_nonNull_native);
      v34 = *v18;
      *v18 = v36;
      swift_bridgeObjectRelease(v34);
      sub_100067748((uint64_t)v38);
      swift_endAccess(v37);
      swift_release(v23);
      swift_unknownObjectRelease(a1);
    }
    dispatch_group_leave(group);
  }
}

uint64_t sub_1003FFA98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1003FFB00(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v9[24];

  swift_beginAccess(a3 + 16, v9, 0, 0);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = swift_bridgeObjectRetain(v5);
  v7 = sub_100290028(v6);
  swift_bridgeObjectRelease(v5);
  a1(v7);
  return swift_release(v7);
}

uint64_t type metadata accessor for DOCRelatedNodeMatcher()
{
  return objc_opt_self(_TtC5Files21DOCRelatedNodeMatcher);
}

uint64_t sub_1003FFB94()
{
  uint64_t v0;

  sub_100087534(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for DOCRelatedNodeObserver()
{
  return objc_opt_self(_TtC5FilesP33_C22E074EAD0C971985E655EFF762774C22DOCRelatedNodeObserver);
}

double sub_1003FFBE8()
{
  uint64_t v0;
  double result;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  sub_1001626AC();
  v2 = *(void (**)(void))(v0 + 24);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 32);
    swift_retain();
    v4 = sub_10004FD50();
    v2();
    sub_100087534((uint64_t)v2, v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003FFC58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FFC7C(void *a1)
{
  uint64_t result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  void *v23;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v31;
  NSString v32;
  id v33;
  uint64_t v34;
  id v35;
  char *v36;
  int64_t v37;
  _QWORD *v38;

  result = (uint64_t)objc_msgSend(a1, "filename");
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, "pathExtension");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v5 = v4;

    v6 = String.lowercased()();
    swift_bridgeObjectRelease(v5);
    result = String.count.getter(v6._countAndFlagsBits, v6._object);
    if (result < 1)
    {

      swift_bridgeObjectRelease(v6._object);
    }
    else
    {
      v35 = v2;
      if (qword_100641138 != -1)
LABEL_55:
        result = swift_once(&qword_100641138, sub_1003FDDFC);
      v7 = 0;
      v38 = off_100653480;
      v8 = 1 << *((_BYTE *)off_100653480 + 32);
      v9 = -1;
      if (v8 < 64)
        v9 = ~(-1 << v8);
      v10 = v9 & *((_QWORD *)off_100653480 + 8);
      v36 = (char *)off_100653480 + 64;
      v37 = (unint64_t)(v8 + 63) >> 6;
      while (1)
      {
        do
        {
LABEL_7:
          if (v10)
          {
            v11 = __clz(__rbit64(v10));
            v10 &= v10 - 1;
            v12 = v11 | (v7 << 6);
          }
          else
          {
            v13 = v7 + 1;
            if (__OFADD__(v7, 1))
              goto LABEL_54;
            if (v13 >= v37)
            {
LABEL_50:
              swift_bridgeObjectRelease(v6._object);

              return 0;
            }
            v14 = *(_QWORD *)&v36[8 * v13];
            ++v7;
            if (!v14)
            {
              v7 = v13 + 1;
              if (v13 + 1 >= v37)
                goto LABEL_50;
              v14 = *(_QWORD *)&v36[8 * v7];
              if (!v14)
              {
                v7 = v13 + 2;
                if (v13 + 2 >= v37)
                  goto LABEL_50;
                v14 = *(_QWORD *)&v36[8 * v7];
                if (!v14)
                {
                  v15 = v13 + 3;
                  if (v15 >= v37)
                    goto LABEL_50;
                  v14 = *(_QWORD *)&v36[8 * v15];
                  if (!v14)
                  {
                    while (1)
                    {
                      v7 = v15 + 1;
                      if (__OFADD__(v15, 1))
                        break;
                      if (v7 >= v37)
                        goto LABEL_50;
                      v14 = *(_QWORD *)&v36[8 * v7];
                      ++v15;
                      if (v14)
                        goto LABEL_22;
                    }
                    __break(1u);
                    goto LABEL_57;
                  }
                  v7 = v15;
                }
              }
            }
LABEL_22:
            v10 = (v14 - 1) & v14;
            v12 = __clz(__rbit64(v14)) + (v7 << 6);
          }
          v16 = *(_QWORD **)(v38[7] + 8 * v12);
          v17 = v16[2];
        }
        while (!v17);
        v18 = *(_QWORD *)(v38[6] + 16 * v12 + 8);
        v19 = v16[4];
        v20 = (void *)v16[5];
        if (v19 == v6._countAndFlagsBits && v20 == v6._object)
          break;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v6._countAndFlagsBits, v6._object, 0);
        if ((result & 1) != 0)
          break;
        if (v17 != 1)
        {
          v22 = v16[6];
          v23 = (void *)v16[7];
          if (v22 == v6._countAndFlagsBits && v23 == v6._object)
            break;
          result = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v6._countAndFlagsBits, v6._object, 0);
          if ((result & 1) != 0)
            break;
          if (v17 != 2)
          {
            v25 = (void **)(v16 + 9);
            v26 = 2;
            while (1)
            {
              v27 = v26 + 1;
              if (__OFADD__(v26, 1))
                break;
              v28 = (uint64_t)*(v25 - 1);
              v29 = *v25;
              if (v28 == v6._countAndFlagsBits && v29 == v6._object)
                goto LABEL_45;
              result = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v6._countAndFlagsBits, v6._object, 0);
              if ((result & 1) != 0)
                goto LABEL_45;
              v25 += 2;
              ++v26;
              if (v27 == v17)
                goto LABEL_7;
            }
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
        }
      }
LABEL_45:
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRelease(v6._object);
      result = (uint64_t)objc_msgSend(v35, "stringByDeletingPathExtension");
      if (!result)
        goto LABEL_58;
      v31 = (void *)result;
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      v33 = objc_msgSend(v31, "stringByAppendingPathExtension:", v32);

      if (v33)
      {
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        swift_release(v38);

        return v34;
      }
      swift_release(v38);

    }
    return 0;
  }
  else
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  return result;
}

uint64_t sub_100400030()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10040005C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003FECA0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100400068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  dispatch_group_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  NSObject *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void **aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  _QWORD *v54;

  v43 = a2;
  v44 = a3;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v46 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v45 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = dispatch_group_create();
  v13 = swift_allocObject(&unk_1005E8AF0, 24, 7);
  *(_QWORD *)(v13 + 16) = &_swiftEmptyDictionarySingleton;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v35);
    v14 = result;
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
  }
  v47 = v8;
  if (!v14)
  {
    swift_bridgeObjectRelease(a1);
LABEL_12:
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v23 = v40;
    v22 = v41;
    v24 = v42;
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for DispatchQoS.QoSClass.default(_:), v42);
    v25 = (void *)static OS_dispatch_queue.global(qos:)(v23);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
    v26 = (_QWORD *)swift_allocObject(&unk_1005E8B68, 40, 7);
    v27 = v44;
    v26[2] = v43;
    v26[3] = v27;
    v26[4] = v13;
    v53 = sub_1004004BC;
    v54 = v26;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_10004A82C;
    v52 = &unk_1005E8B80;
    v28 = _Block_copy(&aBlock);
    swift_retain(v13);
    swift_retain(v27);
    v29 = v45;
    static DispatchQoS.unspecified.getter(v30);
    v48 = _swiftEmptyArrayStorage;
    v31 = sub_10008BAAC();
    v32 = sub_10006922C((uint64_t *)&unk_100647540);
    v33 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v32, v33, v4, v31);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v29, v7, v25, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v47);
    v34 = v54;
    swift_release(v13);
    return swift_release(v34);
  }
  if (v14 >= 1)
  {
    v37 = v7;
    v38 = v5;
    v39 = v4;
    v16 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
      }
      else
      {
        v17 = *(void **)(a1 + 8 * v16 + 32);
        swift_unknownObjectRetain(v17);
      }
      ++v16;
      dispatch_group_enter(v12);
      v18 = (_QWORD *)swift_allocObject(&unk_1005E8B18, 40, 7);
      v18[2] = v12;
      v18[3] = v17;
      v18[4] = v13;
      v53 = sub_1004004AC;
      v54 = v18;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_1003FFA98;
      v52 = &unk_1005E8B30;
      v19 = _Block_copy(&aBlock);
      v20 = v54;
      v21 = v12;
      swift_unknownObjectRetain(v17);
      swift_retain(v13);
      swift_release(v20);
      objc_msgSend(v17, "fetchParent:", v19);
      _Block_release(v19);
      swift_unknownObjectRelease(v17);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease(a1);
    v5 = v38;
    v4 = v39;
    v7 = v37;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100400478()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004004AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003FF72C(a1, a2, *(dispatch_group_t *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1004004BC()
{
  uint64_t v0;

  return sub_1003FFB00(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1004004C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1004004FC(uint64_t a1)
{
  uint64_t v1;

  sub_1003FF13C(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_100400508()
{
  sub_10000F6EC();
}

id sub_100400540@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "fractionCompleted");
  *a2 = v4;
  return result;
}

uint64_t sub_100400570(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_100400598(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  v8 = v7;
  swift_release(v3);

  if (v6)
  {
    v10[4] = v6;
    v11 = v8;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10004A82C;
    v10[3] = &unk_1005E9158;
    v6 = _Block_copy(v10);
    swift_release(v11);
  }
  return v6;
}

BOOL DOCProgressState.isEnded.getter(char a1)
{
  return (a1 & 0xFE) != 2;
}

uint64_t DOCProgressState.isCancelled.getter(unsigned __int8 a1)
{
  return ((a1 & 0xFE) != 2) & a1;
}

uint64_t static DOCOperationProgress._new(withOperation:progressProvider:observing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  __int128 v22[2];

  v7 = *(_QWORD *)(v3 + 296);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DOCOperationProgress.OperationWithProvider(0, v7, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v21 - v15;
  type metadata accessor for DOCOperationProgress(0, v7, v17, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100092328(a2, (uint64_t)v22);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v10, v7);
  sub_1000E85C4(v22, (uint64_t)&v16[*(int *)(v13 + 28)]);
  swift_bridgeObjectRetain(a3);
  v19 = sub_10040416C((uint64_t)v16, a3);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v19;
}

uint64_t type metadata accessor for DOCOperationProgress.OperationWithProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCOperationProgress.OperationWithProvider);
}

uint64_t type metadata accessor for DOCOperationProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCOperationProgress);
}

uint64_t DOCGenericOperationProgress.__allocating_init(operation:observing:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[5];
  _QWORD v11[4];

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = a1[3];
  v6 = sub_10007E7A0(a1, v5);
  v11[3] = v5;
  v7 = sub_10006CBAC(v11);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v7, v6, v5);
  sub_100092328((uint64_t)a1, (uint64_t)v10);
  v8 = sub_100400FE8((uint64_t)v11, v10, a2);
  sub_100068588(a1);
  return v8;
}

uint64_t DOCFileOperationProgress.__allocating_init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for DOCFileOperation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - v9;
  v11 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  sub_100294F04(a1, (uint64_t)v10);
  sub_100294F04(a1, (uint64_t)v7);
  v12 = sub_1004038F0((uint64_t)v10, (uint64_t)v7, a2, v11);
  sub_100172A28(a1);
  return v12;
}

uint64_t DOCProgressValue.description.getter(uint64_t a1, char a2)
{
  Swift::String v2;
  _QWORD v4[2];

  if ((a2 & 1) != 0)
    return 0x6D72657465646E69;
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  Double.write<A>(to:)(v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)&a1);
  v2._countAndFlagsBits = 0x6C706D6F63202520;
  v2._object = (void *)0xEC00000064657465;
  String.append(_:)(v2);
  return v4[0];
}

void DOCProgressValue.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  Swift::UInt64 v4;

  if ((a3 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v4 = a2;
    else
      v4 = 0;
    Hasher._combine(_:)(v4);
  }
}

uint64_t static DOCProgressValue.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  char v4;

  if (((a2 | a4) & 1) != 0)
    v4 = a2 & a4;
  else
    v4 = *(double *)&a1 == *(double *)&a3;
  return v4 & 1;
}

Swift::Int DOCProgressValue.hashValue.getter(Swift::UInt64 a1, char a2)
{
  Swift::UInt64 v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  if ((a2 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v4 = a1;
    else
      v4 = 0;
    Hasher._combine(_:)(v4);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100400AAC()
{
  uint64_t v0;

  return DOCProgressValue.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_100400AB8()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v1 = *(_QWORD *)v0;
    Hasher._combine(_:)(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v2 = v1;
    else
      v2 = 0;
    Hasher._combine(_:)(v2);
  }
}

Swift::Int sub_100400B04(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v2;
  char v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  Hasher.init(_seed:)(v6, a1);
  if ((v3 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v4 = v2;
    else
      v4 = 0;
    Hasher._combine(_:)(v4);
  }
  return Hasher._finalize()();
}

uint64_t sub_100400B6C(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_100400B9C()
{
  uint64_t v0;
  double v2;
  Swift::String v3;
  _QWORD v4[2];

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x6D72657465646E69;
  v2 = *(double *)v0;
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  Double.write<A>(to:)(v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v2);
  v3._countAndFlagsBits = 0x6C706D6F63202520;
  v3._object = (void *)0xEC00000064657465;
  String.append(_:)(v3);
  return v4[0];
}

void DOCProgressState.hash(into:)(uint64_t a1, char a2)
{
  Swift::UInt v2;
  Swift::UInt8 v3;

  if (a2 == 2)
  {
    v2 = 0;
    goto LABEL_5;
  }
  if (a2 == 3)
  {
    v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    return;
  }
  v3 = a2 & 1;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v3);
}

BOOL static DOCProgressState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 2)
    return a2 == 2;
  if (a1 == 3)
    return a2 == 3;
  if ((a2 & 0xFE) == 2)
    return 0;
  return (((a1 & 1) == 0) ^ a2) & 1;
}

Swift::Int DOCProgressState.hashValue.getter(char a1)
{
  Swift::UInt v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  if (a1 == 2)
  {
    v2 = 0;
  }
  else
  {
    if (a1 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(a1 & 1);
      return Hasher._finalize()();
    }
    v2 = 1;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_100400D70()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1 == 2)
  {
    v2 = 0;
  }
  else
  {
    if (v1 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v1 & 1);
      return Hasher._finalize()();
    }
    v2 = 1;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100400DF0()
{
  unsigned __int8 *v0;
  int v1;
  Swift::UInt v2;
  Swift::UInt8 v3;

  v1 = *v0;
  if (v1 == 2)
  {
    v2 = 0;
    goto LABEL_5;
  }
  if (v1 == 3)
  {
    v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    return;
  }
  v3 = v1 & 1;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_100400E4C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2 == 2)
  {
    v3 = 0;
  }
  else
  {
    if (v2 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v2 & 1);
      return Hasher._finalize()();
    }
    v3 = 1;
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_100400EC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t DOCFileOperationProgress.init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v5 = type metadata accessor for DOCFileOperation(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  sub_100294F04(a1, (uint64_t)&v13 - v9);
  sub_100294F04(a1, (uint64_t)v7);
  v11 = sub_1004038F0((uint64_t)v10, (uint64_t)v7, a2, v2);
  sub_100172A28(a1);
  return v11;
}

uint64_t sub_100400FE8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v4 = v3;
  v38 = (_QWORD *)a1;
  v39 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(v4 + direct field offset for DOCOperationProgress.updateHandler);
  *v10 = 0;
  v10[1] = 0;
  v11 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 328);
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = *(_QWORD *)(*(_QWORD *)v4 + 336);
  *(_BYTE *)(v4 + v12) = 2;
  v13 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 344));
  swift_retain();
  v15 = UUID.init()(v14);
  v16 = UUID.uuidString.getter(v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = sub_100087794(6, v16, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease(v18);
  *v13 = v19;
  v13[1] = v21;
  v13[2] = v23;
  v13[3] = v25;
  v26 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 368);
  *(_BYTE *)v26 = 0;
  *(_QWORD *)(v26 + 8) = 0;
  *(_QWORD *)(v26 + 16) = 0xE000000000000000;
  v27 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 376);
  *(_BYTE *)v27 = 0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_QWORD *)(v27 + 16) = 0xE000000000000000;
  v28 = (_OWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 384));
  *v28 = 0u;
  v28[1] = 0u;
  *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 392)) = 0;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 400)) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 408)) = _swiftEmptyArrayStorage;
  v29 = v38;
  sub_100069BD8((uint64_t)v38, v4 + *(_QWORD *)(*(_QWORD *)v4 + 312));
  v30 = a2[3];
  v31 = a2[4];
  sub_10007E7A0(a2, v30);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v31 + 8))(v40, v30, v31);
  v32 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 320);
  v33 = v40[1];
  *(_OWORD *)v32 = v40[0];
  *(_OWORD *)(v32 + 16) = v33;
  *(_QWORD *)(v32 + 32) = v41;
  sub_100092328((uint64_t)a2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 352));
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 360)) = v39;
  *(_BYTE *)(v4 + v12) = 2;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  swift_release(v4);
  *(_WORD *)(v4 + 24) = 256;
  *(_QWORD *)(v4 + 32) = 0;
  v34 = v4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v35 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(_QWORD *)(v4 + 16) = 0x3FE0000000000000;
  sub_10025EDC4(0);
  sub_100068588(v29);
  sub_100068588(a2);
  return v4;
}

void sub_10040127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100402C80(a1, a2, a3, (uint64_t)"Files.DOCFileOperationProgress", 30);
}

uint64_t _s5Files27DOCGenericOperationProgressCfd_0()
{
  uint64_t v0;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  sub_100087534(*(_QWORD *)(v0 + direct field offset for DOCOperationProgress.updateHandler), *(_QWORD *)(v0 + direct field offset for DOCOperationProgress.updateHandler + 8));
  sub_100068588((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 312)));
  sub_100067748(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 344) + 24));
  sub_100068588((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 360)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 368) + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 376) + 16));
  sub_10000CB4C(v0 + *(_QWORD *)(*(_QWORD *)v0 + 384), &qword_100642730);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 400)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 408)));
  return v0;
}

uint64_t _s5Files24DOCFileOperationProgressCfd_0()
{
  uint64_t v0;

  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  sub_100087534(*(_QWORD *)(v0 + direct field offset for DOCOperationProgress.updateHandler), *(_QWORD *)(v0 + direct field offset for DOCOperationProgress.updateHandler + 8));
  sub_100172A28(v0 + *(_QWORD *)(*(_QWORD *)v0 + 312));
  sub_100067748(v0 + *(_QWORD *)(*(_QWORD *)v0 + 320));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 344) + 24));
  sub_100068588((_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 360)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 368) + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 376) + 16));
  sub_10000CB4C(v0 + *(_QWORD *)(*(_QWORD *)v0 + 384), &qword_100642730);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 400)));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 408)));
  return v0;
}

uint64_t *DOCOperationProgress.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_10000CB4C((uint64_t)v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_100649688);
  sub_100087534(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler), *(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler + 8));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 312));
  sub_100067748((uint64_t)v0 + *(_QWORD *)(*v0 + 320));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 344) + 24));
  sub_100068588((uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 352)));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 360)));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 368) + 16));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 376) + 16));
  sub_10000CB4C((uint64_t)v0 + *(_QWORD *)(*v0 + 384), &qword_100642730);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 400)));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 408)));
  return v0;
}

uint64_t DOCFileOperationProgress.__deallocating_deinit()
{
  return sub_100402CB8(_s5Files24DOCFileOperationProgressCfd_0);
}

uint64_t DOCOperationProgress.updateHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess(v0 + direct field offset for DOCOperationProgress.updateHandler, v4, 0, 0);
  v2 = *v1;
  sub_10008BA00(*v1, v1[1]);
  return v2;
}

uint64_t DOCOperationProgress.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100087534(v6, v7);
}

uint64_t (*DOCOperationProgress.updateHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + direct field offset for DOCOperationProgress.updateHandler, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t DOCOperationProgress.localizedOperationDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100404218();
  swift_bridgeObjectRetain(v1);
  return v0;
}

objc_class *DOCOperationProgress.localizedProgressDescription.getter()
{
  objc_class *v0;
  uint64_t v1;

  v0 = sub_1004042A8();
  swift_bridgeObjectRetain(v1);
  return v0;
}

uint64_t sub_100401704()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352));
  v2 = v1[3];
  v3 = v1[4];
  v4 = sub_10007E7A0(v1, v2);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, double))(v5 + 16))((char *)&v11 - v7, v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t DOCOperationProgress.description.getter()
{
  return DOCOperationProgress.description(includingProgressDetails:)(1)._countAndFlagsBits;
}

Swift::String __swiftcall DOCOperationProgress.description(includingProgressDetails:)(Swift::Bool includingProgressDetails)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  uint64_t v40;
  Swift::String v41;
  void *object;
  Swift::String v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  void *v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  Swift::String result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  v14 = (void *)sub_100401704();
  v15 = objc_msgSend(v14, "fileURL");

  if (v15)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v16 = 0;
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v16, 1, v4);
  sub_100070EDC((uint64_t)v10, (uint64_t)v13, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_10000CB4C((uint64_t)v13, &qword_100643470);
    v17 = (void *)0xE500000000000000;
    v18 = 0x273F3F3F27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    v19 = sub_10000CB4C((uint64_t)v13, &qword_100643470);
    v18 = URL.lastPathComponent.getter(v19);
    v17 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v21 = sub_10006777C((uint64_t)v2 + *(_QWORD *)(*v2 + 320), (uint64_t)&v65);
  v22 = AnyHashable.description.getter(v21);
  v24 = v23;
  sub_100067748((uint64_t)&v65);
  v25 = sub_100087794(6, v22, v24);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease(v24);
  v63 = v29;
  v64 = v18;
  if (includingProgressDetails)
  {
    v65 = 32;
    v66 = 0xE100000000000000;
    v32 = (void *)sub_100401704();
    v33 = objc_msgSend(v32, "description");

    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v37._countAndFlagsBits = v34;
    v37._object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(v36);
    v38._countAndFlagsBits = 59;
    v38._object = (void *)0xE100000000000000;
    String.append(_:)(v38);
    v40 = v65;
    v39 = (void *)v66;
  }
  else
  {
    v40 = 0;
    v39 = (void *)0xE000000000000000;
  }
  v65 = 0;
  v66 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease(v66);
  v65 = 60;
  v66 = 0xE100000000000000;
  v41._countAndFlagsBits = _typeName(_:qualified:)(*v2, 0);
  object = v41._object;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(object);
  v43._countAndFlagsBits = 0x496775626564203ALL;
  v43._object = (void *)0xEC000000203D2044;
  String.append(_:)(v43);
  v44 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 344));
  v45 = *v44;
  v46 = v44[1];
  v47 = v44[2];
  v48 = v44[3];
  swift_bridgeObjectRetain(v48);
  v49._countAndFlagsBits = static String._fromSubstring(_:)(v45, v46, v47, v48);
  v50 = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v50);
  v51._countAndFlagsBits = 0x203D204449706F20;
  v51._object = (void *)0xE800000000000000;
  String.append(_:)(v51);
  v52._countAndFlagsBits = static String._fromSubstring(_:)(v25, v27, v63, v31);
  v53 = v52._object;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v53);
  v54._countAndFlagsBits = 0x3D20656C6966203BLL;
  v54._object = (void *)0xEA00000000002720;
  String.append(_:)(v54);
  v55._countAndFlagsBits = v64;
  v55._object = v17;
  String.append(_:)(v55);
  swift_bridgeObjectRelease(v17);
  v56._countAndFlagsBits = 15143;
  v56._object = (void *)0xE200000000000000;
  String.append(_:)(v56);
  v57._countAndFlagsBits = v40;
  v57._object = v39;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v39);
  v58._countAndFlagsBits = 62;
  v58._object = (void *)0xE100000000000000;
  String.append(_:)(v58);
  v59 = v65;
  v60 = (void *)v66;
  result._object = v60;
  result._countAndFlagsBits = v59;
  return result;
}

uint64_t sub_100401B98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess(v0 + direct field offset for DOCOperationProgress.updateHandler, v5, 1, 0);
  v2 = *v1;
  v3 = v1[1];
  *v1 = 0;
  v1[1] = 0;
  return sub_100087534(v2, v3);
}

uint64_t sub_100401BE4()
{
  uint64_t v0;
  void *v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  double v11;
  double v12;
  double v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v17;
  _BYTE v18[24];

  v1 = (void *)sub_100401704();
  v2 = sub_100403E38(v1);
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 392)))
    v3 = 1;
  else
    v3 = v2;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 336);
  v5 = *(unsigned __int8 *)(v0 + v4);
  if (v3 == 2)
  {
    if (v5 == 2)
      goto LABEL_9;
    goto LABEL_11;
  }
  if (v3 == 3)
  {
    if (v5 != 3)
      goto LABEL_11;
LABEL_9:
    v6 = 0;
    goto LABEL_13;
  }
  if ((v5 & 0xFE) == 2)
  {
LABEL_11:
    v6 = 1;
    goto LABEL_13;
  }
  v6 = v3 ^ v5;
LABEL_13:
  v7 = (void *)sub_100401704();
  v8 = objc_msgSend(v7, "isIndeterminate");
  if ((v8 & 1) != 0)
  {

    v9 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 328);
    v10 = *(unsigned __int8 *)(v9 + 8) ^ 1;
    v11 = 0.0;
  }
  else
  {
    objc_msgSend(v7, "fractionCompleted");
    v13 = v12;

    v11 = fmin(v13, 1.0);
    if (v11 < 0.0)
      v11 = 0.0;
    v9 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 328);
    v10 = (*(_BYTE *)(v9 + 8) & 1) != 0 || v11 != *(double *)v9;
  }
  *(_BYTE *)(v0 + v4) = v3;
  *(double *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v8;
  v14 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 368));
  swift_beginAccess(v14, v18, 1, 0);
  *v14 = 0;
  v15 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 376));
  swift_beginAccess(v15, &v17, 1, 0);
  *v15 = 0;
  return (v6 | v10) & 1;
}

uint64_t sub_100401D78()
{
  uint64_t v0;
  void *v1;
  uint64_t result;

  v1 = (void *)sub_100401704();
  LODWORD(result) = sub_100403E38(v1);
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 392)))
    return 1;
  else
    return result;
}

void sub_100401DA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, __n128);
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v1 = v0 + direct field offset for DOCOperationProgress.updateHandler;
  swift_beginAccess(v0 + direct field offset for DOCOperationProgress.updateHandler, v5, 0, 0);
  v2 = *(void (**)(uint64_t, __n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain();
    v2(v0, v4);
    sub_100087534((uint64_t)v2, v3);
  }
}

uint64_t sub_100401E18()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 392));
}

void sub_100401E28(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 392)) = a1;
  sub_100402EC0();
}

void sub_100401E38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  NSURL *v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  id v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[24];
  _BYTE v105[32];
  id aBlock[5];
  uint64_t v107;

  v1 = (uint64_t)v0;
  v2 = *v0;
  v3 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v3);
  v98 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  v100 = v6;
  __chkstk_darwin(v5);
  v97 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 296);
  v11 = type metadata accessor for DOCOperationProgress(255, v8, v9, v10);
  type metadata accessor for DOCWeakUncheckedSendable(0, v11, v12, v13);
  v17 = sub_100324720(v1, v14, v15, v16);
  v18 = swift_allocObject(&unk_1005E8FB0, 24, 7);
  v103 = v17;
  swift_weakInit(v18 + 16, v17);
  v19 = swift_allocObject(&unk_1005E8FD8, 32, 7);
  *(_QWORD *)(v19 + 16) = v8;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = swift_allocObject(&unk_1005E9000, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_100405380;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = swift_allocObject(&unk_1005E9028, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_100405380;
  *(_QWORD *)(v21 + 24) = v19;
  v22 = *(_QWORD *)(*(_QWORD *)v1 + 360);
  aBlock[0] = *(id *)(v1 + v22);
  v105[0] = 1;
  v25 = type metadata accessor for DOCOperationProgress.ObservedEvent(255, v8, v23, v24);
  v26 = type metadata accessor for Array(0, v25);
  v102 = v19;
  swift_retain_n(v19, 2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v26);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for DOCOperationProgress<A>.ObservedEvent, v25);
  v29 = Sequence<>.contains(_:)(v105, v26, WitnessTable, v28);
  aBlock[0] = *(id *)(v1 + v22);
  v105[0] = 0;
  v30 = Sequence<>.contains(_:)(v105, v26, WitnessTable, v28);
  v101 = v29;
  if ((v29 & 1) != 0)
  {
    aBlock[0] = (id)sub_100401704();
    KeyPath = swift_getKeyPath(&unk_1004E7520);
    v32 = swift_allocObject(&unk_1005E9118, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_100405388;
    *(_QWORD *)(v32 + 24) = v20;
    swift_retain();
    v33 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 3, sub_100405558, v32, &protocol witness table for NSObject);
    swift_release(KeyPath);
    swift_release(v32);

    v34 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 408));
    swift_beginAccess(v34, aBlock, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v33);
    specialized Array._endMutation()(v38);
    swift_endAccess(aBlock);
    aBlock[0] = (id)sub_100401704();
    v39 = swift_getKeyPath(&unk_1004E7568);
    v40 = swift_allocObject(&unk_1005E9140, 32, 7);
    *(_QWORD *)(v40 + 16) = sub_100405390;
    *(_QWORD *)(v40 + 24) = v21;
    swift_retain();
    v41 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v39, 3, sub_1004055AC, v40, &protocol witness table for NSObject);
    swift_release(v39);
    swift_release(v40);

    v43 = *(void **)DOCLog.UI.unsafeMutableAddressor(v42);
    v44 = sub_10006922C((uint64_t *)&unk_100644560);
    v45 = swift_allocObject(v44, 112, 7);
    *(_OWORD *)(v45 + 16) = xmmword_1004D4CE0;
    v46 = v43;
    v47 = sub_100401704();
    *(_QWORD *)(v45 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100646BB0, NSProgress_ptr);
    *(_QWORD *)(v45 + 64) = sub_1000E8324();
    *(_QWORD *)(v45 + 32) = v47;
    *(_QWORD *)(v45 + 96) = type metadata accessor for NSKeyValueObservation(0);
    *(_QWORD *)(v45 + 104) = sub_10005A360(&qword_100643190, (uint64_t (*)(uint64_t))&type metadata accessor for NSKeyValueObservation, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v45 + 72) = v41;
    v48 = v41;
    v49 = static os_log_type_t.default.getter(v48);
    os_log(_:dso:log:type:_:)("Progress: [Operation Progress] ADD fractionCompleted observer for: %{public}@, observation: {public}%@", 102, 2, &_mh_execute_header, v46, v49, v45);

    swift_bridgeObjectRelease(v45);
    swift_beginAccess(v34, aBlock, 33, 0);
    v50 = v48;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
    v52 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v52 >= v51 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
    specialized Array._endMutation()(v53);
    swift_endAccess(aBlock);

  }
  if ((v30 & 1) == 0)
  {
    v83 = v21;
LABEL_21:
    swift_release(v83);
    swift_release(v20);
    swift_release(v102);
    swift_release(v103);
    return;
  }
  v96 = v21;
  aBlock[0] = (id)sub_100401704();
  v54 = swift_getKeyPath(&unk_1004E7488);
  v55 = swift_allocObject(&unk_1005E9050, 32, 7);
  *(_QWORD *)(v55 + 16) = sub_100405388;
  *(_QWORD *)(v55 + 24) = v20;
  swift_retain();
  v56 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v54, 3, sub_1004053F8, v55, &protocol witness table for NSObject);
  swift_release(v54);
  swift_release(v55);

  v57 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 400));
  swift_beginAccess(v57, aBlock, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
  v60 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v59 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v60 >= v59 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
  v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v56);
  specialized Array._endMutation()(v61);
  swift_endAccess(aBlock);
  aBlock[0] = (id)sub_100401704();
  v62 = swift_getKeyPath(&unk_1004E74B8);
  v63 = swift_allocObject(&unk_1005E9078, 32, 7);
  *(_QWORD *)(v63 + 16) = sub_100405388;
  *(_QWORD *)(v63 + 24) = v20;
  swift_retain();
  v64 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v62, 3, sub_100405454, v63, &protocol witness table for NSObject);
  swift_release(v62);
  swift_release(v63);

  swift_beginAccess(v57, aBlock, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v64);
  specialized Array._endMutation()(v68);
  swift_endAccess(aBlock);
  if ((v101 & 1) == 0)
  {
    aBlock[0] = (id)sub_100401704();
    v69 = swift_getKeyPath(&unk_1004E74E8);
    v70 = swift_allocObject(&unk_1005E90A0, 32, 7);
    *(_QWORD *)(v70 + 16) = sub_100405388;
    *(_QWORD *)(v70 + 24) = v20;
    swift_retain();
    v71 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v69, 3, sub_1004054A8, v70, &protocol witness table for NSObject);
    swift_release(v69);
    swift_release(v70);

    swift_beginAccess(v57, aBlock, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
    v74 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v73 = *(_QWORD *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v74 >= v73 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
    v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v71);
    specialized Array._endMutation()(v75);
    swift_endAccess(aBlock);
  }
  v76 = (void *)sub_100401704();
  if ((sub_100403E38(v76) & 0xFE) != 2)
  {
    v83 = v96;
    goto LABEL_21;
  }
  v77 = (void *)sub_100401704();
  v78 = v98;
  NSProgress.publishedFileURL.getter(v98);

  v80 = v99;
  v79 = v100;
  v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48))(v78, 1, v99);
  v82 = v96;
  if (v81 == 1)
  {
    swift_release(v96);
    swift_release(v20);
    swift_release(v102);
    swift_release(v103);
    sub_10000CB4C((uint64_t)v78, &qword_100643470);
  }
  else
  {
    v84 = v97;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v97, v78, v80);
    v85 = (void *)objc_opt_self(NSProgress);
    URL._bridgeToObjectiveC()(v86);
    v88 = v87;
    v89 = swift_allocObject(&unk_1005E90C8, 32, 7);
    v90 = v103;
    *(_QWORD *)(v89 + 16) = sub_1004054C4;
    *(_QWORD *)(v89 + 24) = v90;
    aBlock[4] = sub_1004054F4;
    v107 = v89;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100400598;
    aBlock[3] = &unk_1005E90E0;
    v91 = _Block_copy(aBlock);
    v92 = v107;
    swift_retain();
    v93 = objc_msgSend(v85, "addSubscriberForFileURL:withPublishingHandler:", v88, v91, swift_release(v92).n128_f64[0]);
    _Block_release(v91);

    _bridgeAnyObjectToAny(_:)(aBlock, v93);
    swift_release(v90);
    swift_release(v102);
    swift_release(v20);
    swift_release(v82);
    v94 = swift_unknownObjectRelease(v93);
    (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v84, v80, v94);
    sub_100070EDC((uint64_t)aBlock, (uint64_t)v105, &qword_100642730);
    v95 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 384);
    swift_beginAccess(v95, v104, 33, 0);
    sub_10007EB94((uint64_t)v105, v95);
    swift_endAccess(v104);
  }
}

uint64_t sub_10040283C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[32];

  v1 = v0;
  v2 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 400));
  swift_beginAccess(v2, v40, 1, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v9 = *v2;
    else
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*v2, 2);
    result = _CocoaArrayWrapper.endIndex.getter(v9);
    v4 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*v2, 2);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v7 = *(id *)(v3 + 8 * i + 32);
    v8 = v7;
    ((void (*)(void))dispatch thunk of NSKeyValueObservation.invalidate())();

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  v10 = *v2;
  *v2 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
  v11 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 408));
  swift_beginAccess(v11, v39, 1, 0);
  v31 = v11;
  v32 = v1;
  v12 = *v11;
  if ((unint64_t)*v11 >> 62)
  {
    if (v12 < 0)
      v24 = *v11;
    else
      v24 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v12, 2);
    result = _CocoaArrayWrapper.endIndex.getter(v24);
    v13 = result;
    if (result)
    {
LABEL_15:
      if (v13 >= 1)
      {
        v14 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0)
            v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
          else
            v15 = *(id *)(v12 + 8 * v14 + 32);
          v16 = v15;
          ++v14;
          v17 = *(void **)DOCLog.UI.unsafeMutableAddressor(v15);
          v18 = sub_10006922C((uint64_t *)&unk_100644560);
          v19 = swift_allocObject(v18, 72, 7);
          *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
          *(_QWORD *)(v19 + 56) = type metadata accessor for NSKeyValueObservation(0);
          *(_QWORD *)(v19 + 64) = sub_10005A360(&qword_100643190, (uint64_t (*)(uint64_t))&type metadata accessor for NSKeyValueObservation, (uint64_t)&protocol conformance descriptor for NSObject);
          *(_QWORD *)(v19 + 32) = v16;
          v20 = v17;
          v21 = v16;
          v22 = static os_log_type_t.default.getter(v21);
          os_log(_:dso:log:type:_:)("Progress: [Operation Progress] REMOVE observation: %{public}@", 61, 2, &_mh_execute_header, v20, v22, v19);

          v23 = swift_bridgeObjectRelease(v19);
          dispatch thunk of NSKeyValueObservation.invalidate()(v23);

        }
        while (v13 != v14);
        goto LABEL_25;
      }
LABEL_30:
      __break(1u);
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*v11, 2);
    if (v13)
      goto LABEL_15;
  }
LABEL_25:
  swift_bridgeObjectRelease_n(v12, 2);
  v25 = *v31;
  *v31 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v25);
  v26 = v32 + *(_QWORD *)(*(_QWORD *)v32 + 384);
  swift_beginAccess(v26, v34, 0, 0);
  sub_1000685A8(v26, (uint64_t)&v35);
  if (!*((_QWORD *)&v36 + 1))
    return sub_10000CB4C((uint64_t)&v35, &qword_100642730);
  sub_100079B28(&v35, &v37);
  v27 = (void *)objc_opt_self(NSProgress);
  v28 = v38;
  v29 = sub_10007E7A0(&v37, v38);
  v30 = _bridgeAnythingToObjectiveC<A>(_:)(v29, v28);
  objc_msgSend(v27, "removeSubscriber:", v30);
  swift_unknownObjectRelease(v30);
  v35 = 0u;
  v36 = 0u;
  swift_beginAccess(v26, v33, 33, 0);
  sub_10007EB94((uint64_t)&v35, v26);
  swift_endAccess(v33);
  return sub_100068588(&v37);
}

uint64_t DOCGenericOperationProgress.init(operation:observing:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[5];
  _QWORD v10[4];

  v4 = a1[3];
  v5 = sub_10007E7A0(a1, v4);
  v10[3] = v4;
  v6 = sub_10006CBAC(v10);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v5, v4);
  sub_100092328((uint64_t)a1, (uint64_t)v9);
  v7 = sub_100400FE8((uint64_t)v10, v9, a2);
  sub_100068588(a1);
  return v7;
}

void sub_100402C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100402C80(a1, a2, a3, (uint64_t)"Files.DOCGenericOperationProgress", 33);
}

void sub_100402C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, "init(_:progressProvider:observing:)", 35, 0);
  __break(1u);
}

uint64_t DOCGenericOperationProgress.__deallocating_deinit()
{
  return sub_100402CB8(_s5Files27DOCGenericOperationProgressCfd_0);
}

uint64_t sub_100402CB8(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

BOOL sub_100402CD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100402CE4()
{
  char *v0;

  return DOCBrowserHistoryShiftDirection.hashValue.getter(*v0);
}

void sub_100402CEC(uint64_t a1)
{
  char *v1;

  DOCBrowserHistoryShiftDirection.hash(into:)(a1, *v1);
}

Swift::Int sub_100402CF4(uint64_t a1)
{
  char *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  DOCBrowserHistoryShiftDirection.hash(into:)((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

_QWORD *sub_100402D30(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v4 = v3;
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v8 = sub_100403ED0(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 296) - 8) + 8))(a1);
  return v8;
}

void sub_100402DA4(uint64_t *a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)sub_100401704();
  v3 = objc_msgSend(v2, "localizedDescription");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_100402E14(objc_class **a1@<X8>)
{
  void *v2;
  double v3;
  id v4;
  id v5;
  objc_class *v6;
  objc_class *v7;
  objc_class *v8;
  objc_class *v9;

  v2 = (void *)sub_100401704();
  objc_msgSend(v2, "fractionCompleted");
  if (v3 <= 0.0)
  {
    v5 = objc_msgSend(v2, "fileOperationKind");
    v6 = sub_10046E0DC((uint64_t)v5);
    goto LABEL_5;
  }
  v4 = objc_msgSend(v2, "localizedAdditionalDescription");
  if (v4)
  {
    v5 = v4;
    v6 = (objc_class *)static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
LABEL_5:
    v8 = v6;
    v9 = v7;

    *a1 = v8;
    a1[1] = v9;
    return;
  }
  __break(1u);
}

void sub_100402EC0()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(uint64_t *)(v0 + 32) <= 0)
  {
    v1 = v0;
    v8 = 0;
    v9 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v2._object = (void *)0x800000010051CD00;
    v2._countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v2);
    v12 = v0;
    v3 = type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)(&v12, &v8, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_bridgeObjectRelease(v9);
    v12 = v1;
    swift_retain();
    v4 = sub_10006922C((uint64_t *)&unk_100649060);
    swift_dynamicCast(&v8, &v12, v3, v4, 7);
    v5 = v10;
    v6 = v11;
    sub_10007E7A0(&v8, v10);
    v7 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    sub_100068588(&v8);
    if (v7)
      sub_10025F05C(v7 == 2);
  }
}

void sub_100402FE0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  _QWORD v18[5];
  _QWORD *v19;

  v14 = (_QWORD *)swift_allocObject(&unk_1005E91E0, 72, 7);
  v14[2] = a7;
  v14[3] = a6;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a4;
  v14[7] = a5;
  v14[8] = a3;
  v18[4] = sub_10040564C;
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10004A82C;
  v18[3] = &unk_1005E91F8;
  v15 = _Block_copy(v18);
  v16 = v19;
  swift_retain();
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a5);
  v17 = a3;
  swift_release(v16);
  DOCRunInMainThread(v15);
  _Block_release(v15);
}

double sub_1004030D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  Swift::String v26;
  Swift::String v27;
  Swift::Bool v28;
  _BYTE v29[24];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v14 = Strong;
    v15 = swift_weakLoadStrong(Strong + 16);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
    if (v15)
    {
      _StringGuts.grow(_:)(37);
      v16._countAndFlagsBits = 0x73626F206469645BLL;
      v16._object = (void *)0xEE00205D65767265;
      String.append(_:)(v16);
      v17._countAndFlagsBits = a2;
      v17._object = a3;
      String.append(_:)(v17);
      v18._countAndFlagsBits = 543584032;
      v18._object = (void *)0xE400000000000000;
      String.append(_:)(v18);
      v19 = (uint64_t *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 344));
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      swift_bridgeObjectRetain(v23);
      v24._countAndFlagsBits = static String._fromSubstring(_:)(v20, v21, v22, v23);
      object = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(object);
      v26._countAndFlagsBits = 0x6465676E61686320;
      v26._object = (void *)0xED0000203A6F7420;
      String.append(_:)(v26);
      v27._countAndFlagsBits = a4;
      v27._object = a5;
      String.append(_:)(v27);
      swift_bridgeObjectRelease(0xE000000000000000);
      v28 = (sub_100403E38(a6) & 0xFE) != 2;
      DOCAbstractPacedPropertyUpdater.setNeedsUpdateProperties(notifyImmediately:)(v28);
      *(_QWORD *)&result = swift_release(v15).n128_u64[0];
    }
  }
  return result;
}

double sub_100403278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v9;
  int v10;
  double result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v9 = sub_10006922C(&qword_100654050);
  NSKeyValueObservedChange.oldValue.getter((uint64_t *)((char *)&v16 + 2));
  v10 = BYTE2(v16);
  NSKeyValueObservedChange.newValue.getter((uint64_t *)((char *)&v16 + 1), v9);
  if (v10 == 2)
  {
    if (BYTE1(v16) == 2)
      return result;
  }
  else if (BYTE1(v16) != 2 && ((((v16 & 0x100) == 0) ^ v10) & 1) != 0)
  {
    return result;
  }
  NSKeyValueObservedChange.newValue.getter(&v16, v9);
  v12 = 1702195828;
  if ((v16 & 1) == 0)
    v12 = 0x65736C6166;
  v13 = 0xE400000000000000;
  if ((v16 & 1) == 0)
    v13 = 0xE500000000000000;
  if (v16 == 2)
    v14 = 0x2A6C696E2ALL;
  else
    v14 = v12;
  if (v16 == 2)
    v15 = 0xE500000000000000;
  else
    v15 = v13;
  a5(a1, a2, a3, v14, v15);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

void sub_100403390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v9;
  double v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  char v16;
  double v17;
  char v18;

  v9 = sub_10006922C(&qword_100654048);
  NSKeyValueObservedChange.oldValue.getter(&v17);
  v10 = v17;
  v11 = v18;
  NSKeyValueObservedChange.newValue.getter(&v15, v9);
  if ((v11 & 1) != 0)
  {
    if ((v16 & 1) != 0)
      return;
  }
  else if ((v16 & 1) == 0 && v10 == v15)
  {
    return;
  }
  NSKeyValueObservedChange.newValue.getter(&v17, v9);
  if ((v18 & 1) != 0)
  {
    v12 = 0xE500000000000000;
    v13 = 0x2A6C696E2ALL;
  }
  else
  {
    v13 = Double.description.getter(v17);
    v12 = v14;
  }
  a5(a1, a2, a3, v13, v12);
  swift_bridgeObjectRelease(v12);
}

uint64_t sub_10040348C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v2 = *a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1005E8FB0, 24, 7);
  swift_weakInit(v13 + 16, a1);
  v14 = swift_allocObject(&unk_1005E9190, 32, 7);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(*(_QWORD *)(v2 + 80) + 296);
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_100405608;
  v22 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E91A8;
  v15 = _Block_copy(aBlock);
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10006922C((uint64_t *)&unk_100647540);
  v19 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

double sub_1004036A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_weakLoadStrong(Strong + 16);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
    if (v5)
    {
      *(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 392)) = 1;
      sub_100402EC0();
      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

double sub_100403720()
{
  uint64_t *v0;
  uint64_t v1;
  double result;

  v1 = *v0;
  sub_100087534(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler), *(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler + 8));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 312));
  sub_100067748((uint64_t)v0 + *(_QWORD *)(*v0 + 320));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 344) + 24));
  sub_100068588((uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 352)));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 360)));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 368) + 16));
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 376) + 16));
  sub_10000CB4C((uint64_t)v0 + *(_QWORD *)(*v0 + 384), &qword_100642730);
  swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 400)));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 408))).n128_u64[0];
  return result;
}

uint64_t DOCOperationProgress.__deallocating_deinit()
{
  uint64_t v0;

  DOCOperationProgress.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100403830()
{
  return sub_100401B98();
}

uint64_t sub_100403850()
{
  return sub_100401BE4();
}

void sub_100403870()
{
  sub_100401DA4();
}

void sub_100403890()
{
  sub_100401E38();
}

uint64_t sub_1004038B0()
{
  return sub_10040283C();
}

uint64_t sub_1004038D0()
{
  return DOCOperationProgress.description.getter();
}

uint64_t sub_1004038F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v35 = a1;
  v36 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = type metadata accessor for DOCFileOperation(0);
  v37[4] = &protocol witness table for DOCFileOperation;
  v10 = sub_10006CBAC(v37);
  sub_1000E828C(a2, (uint64_t)v10);
  v11 = (_QWORD *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *v11 = 0;
  v11[1] = 0;
  v12 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 328);
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = *(_QWORD *)(*(_QWORD *)a4 + 336);
  *(_BYTE *)(a4 + v13) = 2;
  v14 = (uint64_t *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 344));
  swift_retain(a4);
  v16 = UUID.init()(v15);
  v17 = UUID.uuidString.getter(v16);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = sub_100087794(6, v17, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease(v19);
  *v14 = v20;
  v14[1] = v22;
  v14[2] = v24;
  v14[3] = v26;
  v27 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 368);
  *(_BYTE *)v27 = 0;
  *(_QWORD *)(v27 + 8) = 0;
  *(_QWORD *)(v27 + 16) = 0xE000000000000000;
  v28 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 376);
  *(_BYTE *)v28 = 0;
  *(_QWORD *)(v28 + 8) = 0;
  *(_QWORD *)(v28 + 16) = 0xE000000000000000;
  v29 = (_OWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 384));
  *v29 = 0u;
  v29[1] = 0u;
  *(_BYTE *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 392)) = 0;
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 408)) = _swiftEmptyArrayStorage;
  v30 = v35;
  sub_100294F04(v35, a4 + *(_QWORD *)(*(_QWORD *)a4 + 312));
  sub_10006777C((uint64_t)v10, a4 + *(_QWORD *)(*(_QWORD *)a4 + 320));
  sub_100092328((uint64_t)v37, a4 + *(_QWORD *)(*(_QWORD *)a4 + 352));
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 360)) = v36;
  *(_BYTE *)(a4 + v13) = 2;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  swift_release(a4);
  *(_WORD *)(a4 + 24) = 256;
  *(_QWORD *)(a4 + 32) = 0;
  v31 = a4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v32 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  *(_QWORD *)(a4 + 16) = 0x3FE0000000000000;
  sub_10025EDC4(0);
  sub_100172A28(v30);
  sub_100068588(v37);
  return a4;
}

uint64_t sub_100403B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  _QWORD v44[5];

  v40 = a1;
  v41 = a3;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[3] = a5;
  v44[4] = a6;
  v38 = sub_10006CBAC(v44);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v38, a2, a5);
  v14 = (_QWORD *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *v14 = 0;
  v14[1] = 0;
  v15 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 328);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v39 = *(_QWORD *)(*(_QWORD *)a4 + 336);
  *(_BYTE *)(a4 + v39) = 2;
  v16 = (uint64_t *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 344));
  swift_retain();
  v18 = UUID.init()(v17);
  v19 = UUID.uuidString.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v22 = sub_100087794(6, v19, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease(v21);
  *v16 = v22;
  v16[1] = v24;
  v16[2] = v26;
  v16[3] = v28;
  v29 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 368);
  *(_BYTE *)v29 = 0;
  *(_QWORD *)(v29 + 8) = 0;
  *(_QWORD *)(v29 + 16) = 0xE000000000000000;
  v30 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 376);
  *(_BYTE *)v30 = 0;
  *(_QWORD *)(v30 + 8) = 0;
  *(_QWORD *)(v30 + 16) = 0xE000000000000000;
  v31 = (_OWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 384));
  *v31 = 0u;
  v31[1] = 0u;
  *(_BYTE *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 392)) = 0;
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 408)) = _swiftEmptyArrayStorage;
  v32 = v40;
  sub_100294F04(v40, a4 + *(_QWORD *)(*(_QWORD *)a4 + 312));
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a6 + 8))(v42, a5, a6);
  v33 = a4 + *(_QWORD *)(*(_QWORD *)a4 + 320);
  v34 = v42[1];
  *(_OWORD *)v33 = v42[0];
  *(_OWORD *)(v33 + 16) = v34;
  *(_QWORD *)(v33 + 32) = v43;
  sub_100092328((uint64_t)v44, a4 + *(_QWORD *)(*(_QWORD *)a4 + 352));
  *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 360)) = v41;
  *(_BYTE *)(a4 + v39) = 2;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  swift_release(a4);
  *(_WORD *)(a4 + 24) = 256;
  *(_QWORD *)(a4 + 32) = 0;
  v35 = a4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v36 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(_QWORD *)(a4 + 16) = 0x3FE0000000000000;
  sub_10025EDC4(0);
  sub_100172A28(v32);
  sub_100068588(v44);
  return a4;
}

uint64_t sub_100403E38(void *a1)
{
  double v3;
  unsigned int v4;

  if (objc_msgSend(a1, "isCancelled"))
  {

    return 1;
  }
  else if (objc_msgSend(a1, "isFinished") || (objc_msgSend(a1, "fractionCompleted"), v3 >= 1.0))
  {

    return 0;
  }
  else
  {
    v4 = objc_msgSend(a1, "isPaused");

    if (v4)
      return 3;
    else
      return 2;
  }
}

_QWORD *sub_100403ED0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  v4 = v3;
  v37 = a1;
  v38 = a3;
  v36 = *v3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)((char *)v4 + direct field offset for DOCOperationProgress.updateHandler);
  *v10 = 0;
  v10[1] = 0;
  v11 = (char *)v4 + *(_QWORD *)(*v4 + 328);
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = *(_QWORD *)(*v4 + 336);
  *((_BYTE *)v4 + v12) = 2;
  v13 = (_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 344));
  swift_retain();
  v15 = UUID.init()(v14);
  v16 = UUID.uuidString.getter(v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = sub_100087794(6, v16, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease(v18);
  *v13 = v19;
  v13[1] = v21;
  v13[2] = v23;
  v13[3] = v25;
  v26 = (char *)v4 + *(_QWORD *)(*v4 + 368);
  *v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0xE000000000000000;
  v27 = (char *)v4 + *(_QWORD *)(*v4 + 376);
  *v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  *((_QWORD *)v27 + 2) = 0xE000000000000000;
  v28 = (_OWORD *)((char *)v4 + *(_QWORD *)(*v4 + 384));
  *v28 = 0u;
  v28[1] = 0u;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 392)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 400)) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 408)) = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v36 + 296) - 8) + 16))((char *)v4 + *(_QWORD *)(*v4 + 312), v37);
  v29 = a2[3];
  v30 = a2[4];
  sub_10007E7A0(a2, v29);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v39, v29, v30);
  v31 = (char *)v4 + *(_QWORD *)(*v4 + 320);
  v32 = v39[1];
  *(_OWORD *)v31 = v39[0];
  *((_OWORD *)v31 + 1) = v32;
  *((_QWORD *)v31 + 4) = v40;
  sub_100092328((uint64_t)a2, (uint64_t)v4 + *(_QWORD *)(*v4 + 352));
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 360)) = v38;
  *((_BYTE *)v4 + v12) = 2;
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  swift_release(v4);
  *((_WORD *)v4 + 12) = 256;
  v4[4] = 0;
  v33 = (char *)v4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  v34 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v4[2] = 0x3FE0000000000000;
  sub_10025EDC4(0);
  sub_100068588(a2);
  return v4;
}

uint64_t sub_10040416C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[40];

  v5 = *(_QWORD *)(v2 + 296);
  v6 = __chkstk_darwin(a1);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v9 + 16))(v8, a1, v5, v6);
  v12 = type metadata accessor for DOCOperationProgress.OperationWithProvider(0, v5, v10, v11);
  sub_100092328(a1 + *(int *)(v12 + 28), (uint64_t)v15);
  return (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 640))(v8, v15, a2);
}

uint64_t sub_100404218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];
  _BYTE v6[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_beginAccess(v1, v6, 33, 0);
  if (*(_BYTE *)v1 == 1)
  {
    v2 = *(_QWORD *)(v1 + 8);
  }
  else
  {
    sub_100402DA4(v5);
    v2 = v5[0];
    v3 = v5[1];
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v3;
    *(_BYTE *)v1 = 1;
  }
  swift_endAccess(v6);
  return v2;
}

objc_class *sub_1004042A8()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  objc_class *v5[2];
  _BYTE v6[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 376);
  swift_beginAccess(v1, v6, 33, 0);
  if (*(_BYTE *)v1 == 1)
  {
    v2 = *(objc_class **)(v1 + 8);
  }
  else
  {
    sub_100402E14(v5);
    v2 = v5[0];
    v3 = v5[1];
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v3;
    *(_BYTE *)v1 = 1;
  }
  swift_endAccess(v6);
  return v2;
}

unint64_t sub_10040433C()
{
  unint64_t result;

  result = qword_100653620;
  if (!qword_100653620)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCProgressValue, &type metadata for DOCProgressValue);
    atomic_store(result, (unint64_t *)&qword_100653620);
  }
  return result;
}

unint64_t sub_100404384()
{
  unint64_t result;

  result = qword_100653628;
  if (!qword_100653628)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCProgressState, &type metadata for DOCProgressState);
    atomic_store(result, (unint64_t *)&qword_100653628);
  }
  return result;
}

uint64_t sub_1004043C8(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for DOCOperationProgress<A>.ObservedEvent, a1);
}

uint64_t getEnumTagSinglePayload for DOCProgressValue(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCProgressValue(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_100404428(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100404444(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressValue()
{
  return &type metadata for DOCProgressValue;
}

uint64_t getEnumTagSinglePayload for DOCProgressState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1004044C4 + 4 * byte_1004E70D0[v4]))();
}

uint64_t storeEnumTagSinglePayload for DOCProgressState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100404570 + 4 * byte_1004E70DA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004045A4 + 4 * byte_1004E70D5[v5]))();
}

uint64_t sub_1004045A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004045AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004045B4);
  return result;
}

uint64_t sub_1004045C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004045C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004045CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004045D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressState()
{
  return &type metadata for DOCProgressState;
}

uint64_t type metadata accessor for DOCFileOperationProgress(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100653658, (uint64_t)&nominal type descriptor for DOCFileOperationProgress);
}

uint64_t type metadata accessor for DOCGenericOperationProgress(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100653A18, (uint64_t)&nominal type descriptor for DOCGenericOperationProgress);
}

uint64_t sub_10040461C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 872);
}

uint64_t sub_100404650(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = &unk_1004E7348;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 296));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1004E7360;
    v4[3] = &unk_1004E7378;
    v4[4] = &unk_1004E7390;
    v4[5] = &unk_1004E73A8;
    v4[6] = &unk_1004E7360;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_1004E73C0;
    v4[9] = &unk_1004E73C0;
    v4[10] = &unk_1004E73D8;
    v4[11] = &unk_1004E73F0;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    return swift_initClassMetadata2(a1, 0, 14, v4, a1 + 304);
  }
  return result;
}

uint64_t sub_100404724(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100404770 + 4 * byte_1004E70E4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004047A4 + 4 * byte_1004E70DF[v4]))();
}

uint64_t sub_1004047A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004047AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004047B4);
  return result;
}

uint64_t sub_1004047C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004047C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004047CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004047D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for DOCTrace()
{
  return objc_opt_self(_TtC5Files8DOCTrace);
}

uint64_t sub_100404800(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_1004E73F0;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_100404878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_100404914(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_BYTE *sub_100404934(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_100404984(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_1004049D4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_100404A24(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100404A74(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 1) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)&a1[v9];
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9])
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFE)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v7 + 1] & ~v7);
      v15 = *a1;
      v16 = v15 >= 2;
      v17 = (v15 + 2147483646) & 0x7FFFFFFF;
      if (v16)
        return (v17 + 1);
      else
        return 0;
    }
  }
  v11 = a1[v9];
  if (!a1[v9])
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100404B48 + 4 * byte_1004E70E9[(v9 - 1)]))();
}

void sub_100404BC0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_100000004;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for CachedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CachedValue);
}

uint64_t sub_100404DBC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1004E7360;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_100404E30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_100404EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return sub_100068588((_QWORD *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100404F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_100404FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  sub_10025C2AC((_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_100404FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_100405060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  sub_100068588((_QWORD *)v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1004050CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100405148 + 4 * byte_1004E70F7[v10]))();
  }
}

void sub_1004051CC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1004052C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100405344);
}

void sub_1004052C8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1004052D0);
  JUMPOUT(0x100405344);
}

void sub_100405314()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100405344);
}

void sub_10040531C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100405344);
}

uint64_t sub_100405324(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x100405330);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x100405344);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_10040535C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100405380(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_100402FE0(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 16));
}

double sub_100405388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100403278(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

void sub_100405390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100403390(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

const char *sub_100405398()
{
  return "isCancelled";
}

id sub_1004053A4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isCancelled");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004053D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004053F8(_QWORD *a1, uint64_t a2)
{
  return sub_1004055C8(a1, a2, 0x6C65636E61437369, 0xEB0000000064656CLL);
}

const char *sub_100405418()
{
  return "isPaused";
}

id sub_100405424@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isPaused");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100405454(_QWORD *a1, uint64_t a2)
{
  return sub_1004055C8(a1, a2, 0x6465737561507369, 0xE800000000000000);
}

const char *sub_10040546C()
{
  return "isFinished";
}

id sub_100405478@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isFinished");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004054A8(_QWORD *a1, uint64_t a2)
{
  return sub_1004055C8(a1, a2, 0x6873696E69467369, 0xEA00000000006465);
}

uint64_t (*sub_1004054C4())()
{
  swift_retain();
  return sub_100405600;
}

uint64_t sub_1004054F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

const char *sub_10040551C()
{
  return "isIndeterminate";
}

id sub_100405528@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isIndeterminate");
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100405558(_QWORD *a1, uint64_t a2)
{
  return sub_1004055C8(a1, a2, 0x657465646E497369, 0xEF6574616E696D72);
}

id sub_10040557C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "fractionCompleted");
  *a2 = v4;
  return result;
}

uint64_t sub_1004055AC(_QWORD *a1, uint64_t a2)
{
  return sub_1004055C8(a1, a2, 0xD000000000000011, 0x80000001004E7530);
}

uint64_t sub_1004055C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v4 + 16))(a3, a4, *a1, a2);
}

uint64_t sub_100405600()
{
  uint64_t *v0;

  return sub_10040348C(v0);
}

double sub_100405608()
{
  uint64_t v0;

  return sub_1004036A4(*(_QWORD *)(v0 + 24));
}

uint64_t sub_100405610()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

double sub_10040564C()
{
  uint64_t v0;

  return sub_1004030D4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_10040568C()
{
  return sub_10009F908(sub_1003754F8, &qword_100649058);
}

uint64_t sub_1004056A0()
{
  return sub_10009F908(sub_1003754F8, &qword_1006541C0);
}

void sub_1004056B4()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _BYTE v38[24];
  _BYTE v39[24];
  uint64_t v40[3];

  v2 = v0;
  v3 = sub_10009F908(sub_1003754F8, &qword_1006541C0);
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  if (v5 < 1)
  {
    v16 = 0;
    goto LABEL_25;
  }
  v6 = sub_10009F908(sub_1003754F8, &qword_1006541C0);
  v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (v8)
      goto LABEL_6;
LABEL_22:
    swift_bridgeObjectRelease(v7);
    v11 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    goto LABEL_22;
LABEL_6:
  v40[0] = (uint64_t)_swiftEmptyArrayStorage;
  v9 = (uint64_t)v40;
  sub_100154EC0(0, v8 & ~(v8 >> 63), 0);
  if (v8 < 0)
  {
    __break(1u);
LABEL_73:
    if (v9 < 0)
      v35 = v9;
    else
      v35 = v9 & 0xFFFFFFFFFFFFFF8;
    v29 = _CocoaArrayWrapper.endIndex.getter(v35);
LABEL_50:
    v16 = v37;
    v18 = v36;
    swift_bridgeObjectRelease(v9);
    v28 = 0;
    v1 = v1 / (double)v29;
    goto LABEL_62;
  }
  v10 = 0;
  v11 = (_QWORD *)v40[0];
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
      v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
    else
      swift_retain();
    v13 = *(_BYTE *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 336));
    swift_release(v12);
    v40[0] = (uint64_t)v11;
    v15 = v11[2];
    v14 = v11[3];
    if (v15 >= v14 >> 1)
    {
      sub_100154EC0(v14 > 1, v15 + 1, 1);
      v11 = (_QWORD *)v40[0];
    }
    ++v10;
    v11[2] = v15 + 1;
    *((_BYTE *)v11 + v15 + 32) = v13;
  }
  while (v8 != v10);
  swift_bridgeObjectRelease(v7);
LABEL_23:
  v40[0] = (uint64_t)v11;
  swift_bridgeObjectRetain(v11);
  sub_100405CE0(v40);
  swift_bridgeObjectRelease(v11);
  if (*(_QWORD *)(v40[0] + 16))
  {
    v16 = *(unsigned __int8 *)(v40[0] + 32);
    swift_release(v40[0]);
LABEL_25:
    v17 = sub_10009F908(sub_1003754F8, &qword_1006541C0);
    if ((unint64_t)v17 >> 62)
    {
LABEL_53:
      if (v17 < 0)
        v30 = v17;
      else
        v30 = v17 & 0xFFFFFFFFFFFFFF8;
      v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v17);
    v1 = 0.0;
    if (v18 < 1)
    {
      v28 = 0;
      goto LABEL_62;
    }
    v19 = sub_10009F908(sub_1003754F8, &qword_1006541C0);
    v17 = v19;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v31 = v19;
      else
        v31 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (v20)
        goto LABEL_30;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v19);
      if (v20)
      {
LABEL_30:
        v36 = v18;
        v37 = v16;
        v21 = 0;
        v22 = 0;
LABEL_31:
        v23 = v21;
        do
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v17);
            v21 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_52;
          }
          else
          {
            swift_retain();
            v21 = v23 + 1;
            if (__OFADD__(v23, 1))
            {
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
          }
          v25 = v24 + *(_QWORD *)(*(_QWORD *)v24 + 328);
          v26 = *(double *)v25;
          v27 = *(_BYTE *)(v25 + 8);
          v16 = *(unsigned __int8 *)(v24 + *(_QWORD *)(*(_QWORD *)v24 + 336));
          swift_release(v24);
          if ((v16 & 0xFE) == 2)
          {
            if ((v27 & 1) == 0)
            {
              v1 = v1 + v26;
              goto LABEL_44;
            }
            v1 = v1 + 0.0;
          }
          else if ((v16 & 1) == 0)
          {
            v1 = v1 + 1.0;
LABEL_44:
            v22 = 1;
            if (v21 != v20)
              goto LABEL_31;
            swift_bridgeObjectRelease_n(v17, 2);
            goto LABEL_48;
          }
          ++v23;
        }
        while (v21 != v20);
        swift_bridgeObjectRelease_n(v17, 2);
        if ((v22 & 1) == 0)
        {
          v28 = 1;
          v1 = 0.0;
          v16 = v37;
          v18 = v36;
          goto LABEL_62;
        }
LABEL_48:
        v9 = sub_10009F908(sub_1003754F8, &qword_1006541C0);
        if ((unint64_t)v9 >> 62)
          goto LABEL_73;
        v29 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease_n(v17, 2);
    v28 = 1;
LABEL_62:
    v32 = (_BYTE *)(v2 + direct field offset for DOCOperationCombinedProgress.state);
    swift_beginAccess(v2 + direct field offset for DOCOperationCombinedProgress.state, v40, 1, 0);
    v33 = *v32;
    if (v33 == 2)
    {
      if (v16 != 2)
        goto LABEL_71;
    }
    else if (v33 == 3)
    {
      if (v16 != 3)
      {
LABEL_71:
        *v32 = v16;
        v34 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
        swift_beginAccess(v34, v39, 1, 0);
        *(double *)v34 = v1;
        *(_BYTE *)(v34 + 8) = v28;
        *(_BYTE *)(v34 + 9) = v18 < 1;
        return;
      }
    }
    else if (v33 == 4 || (v16 & 0xFE) == 2 || (v16 & 1) == ((v33 & 1) == 0))
    {
      goto LABEL_71;
    }
    swift_beginAccess(v2 + direct field offset for DOCOperationCombinedProgress.progressValue, v38, 0, 0);
    goto LABEL_71;
  }
  swift_release(v40[0]);
  __break(1u);
  swift_release(v40[0]);
  __break(1u);
}

uint64_t sub_100405BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_10009F908(sub_1003754F8, &qword_100649058);
  v1 = v0;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v0);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v1, 2);
    return sub_10009F3B8();
  }
  if (v0 < 0)
    v6 = v0;
  else
    v6 = v0 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v0);
  result = _CocoaArrayWrapper.endIndex.getter(v6);
  v2 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * i + 32);
        swift_retain();
      }
      sub_100405D48();
      swift_release(v5);
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

Swift::Int sub_100405CE0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100465688(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_100406E5C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100405D48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  int v24;
  double v25;
  double v26;
  double v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE v31[24];
  _BYTE v32[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 352));
  v3 = v2[3];
  v4 = v2[4];
  v5 = sub_10007E7A0(v2, v3);
  v6 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v5);
  v8 = &v31[-v7];
  (*(void (**)(_BYTE *))(v6 + 16))(&v31[-v7]);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v3);
  v10 = sub_100403E38(v9);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 392)))
    v11 = 1;
  else
    v11 = v10;
  v12 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  v13 = *(unsigned __int8 *)(v1 + v12);
  if (v11 == 2)
  {
    if (v13 == 2)
      goto LABEL_9;
    goto LABEL_11;
  }
  if (v11 == 3)
  {
    if (v13 != 3)
      goto LABEL_11;
LABEL_9:
    v14 = 0;
    goto LABEL_13;
  }
  if ((v13 & 0xFE) == 2)
  {
LABEL_11:
    v14 = 1;
    goto LABEL_13;
  }
  v14 = v11 ^ v13;
LABEL_13:
  v15 = v2[3];
  v16 = v2[4];
  v17 = sub_10007E7A0(v2, v15);
  v18 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v17);
  v20 = &v31[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v18 + 16))(v20);
  v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v15);
  v22 = objc_msgSend(v21, "isIndeterminate");
  if ((v22 & 1) != 0)
  {

    v23 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 328);
    v24 = *(unsigned __int8 *)(v23 + 8) ^ 1;
    v25 = 0.0;
  }
  else
  {
    objc_msgSend(v21, "fractionCompleted");
    v27 = v26;

    v25 = fmin(v27, 1.0);
    if (v25 < 0.0)
      v25 = 0.0;
    v23 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 328);
    v24 = (*(_BYTE *)(v23 + 8) & 1) != 0 || v25 != *(double *)v23;
  }
  *(_BYTE *)(v1 + v12) = v11;
  *(double *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v22;
  v28 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 368));
  swift_beginAccess(v28, v32, 1, 0);
  *v28 = 0;
  v29 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 376));
  swift_beginAccess(v29, v31, 1, 0);
  *v29 = 0;
  return (v14 | v24) & 1;
}

id sub_100405FE4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id result;
  void *v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  NSString v19;
  id v20;
  uint64_t v21;
  __n128 v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  unint64_t v29;
  Swift::String v30;

  v4 = a3 + 16;
  v5 = _swiftEmptyArrayStorage;
  v29 = (unint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess(a3 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v6);
  if (!Strong)
    goto LABEL_9;
  v8 = (void *)Strong;
  v9 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView);
  v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup);
  swift_retain();
  sub_100405BF8();
  swift_release(v10);
  v11 = sub_10008FD24();
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress + 8) & 1) != 0
    || *(double *)(v9 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress) >= 1.0)
  {

    v5 = _swiftEmptyArrayStorage;
LABEL_9:
    a1(v5);
    return (id)swift_bridgeObjectRelease(v5);
  }
  result = (id)_DocumentManagerBundle(v11);
  if (result)
  {
    v13 = result;
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v30._countAndFlagsBits = 0xD000000000000040;
    v30._object = (void *)0x8000000100527740;
    v14._object = (void *)0x8000000100527720;
    v14._countAndFlagsBits = 0xD00000000000001CLL;
    v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v15.value._object = (void *)0xEB00000000656C62;
    v16._countAndFlagsBits = 0x73736572676F7250;
    v16._object = (void *)0xE800000000000000;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v30);

    v18 = (void *)objc_opt_self(UIImage);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v18, "__systemImageNamedSwift:", v19);

    v21 = swift_allocObject(&unk_1005E9428, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16, v8);
    v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v17._countAndFlagsBits, v17._object, 0, 0, v20, 0, 0, 0, v22, 0, 0, 0, sub_100407924, v21);

    v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
    v26 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v25 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v26 >= v25 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
    v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v24);
    specialized Array._endMutation()(v27);

    v5 = (_QWORD *)v29;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1004062A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_10008D38C(0);

  }
}

void sub_100406348(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_msgSend(a1, "doc_presentingViewController");
  if (v2
    && (v3 = v2,
        v4 = objc_msgSend(v2, "presentedViewController"),
        v3,
        v4)
    || (v5 = objc_msgSend(a1, "window"),
        v4 = objc_msgSend(v5, "rootViewController"),
        v5,
        v4))
  {
    v6 = v4;
    v7 = v6;
    sub_100406480(v6);

  }
}

void sub_100406480(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id Strong;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(char *, uint64_t);
  id v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v11 = (char *)&v39 - v10;
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView]
      + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress;
  if ((*(_BYTE *)(v12 + 8) & 1) != 0 || *(double *)v12 >= 1.0)
    return;
  Strong = a1;
  if (a1
    || (Strong = (id)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_viewControllerForPresentationFallback], v9)) != 0)
  {
    v14 = a1;
LABEL_6:
    v15 = Strong;
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource];
    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource + 8];
    v18 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration];
    v19 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration + 1];
    v20 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration + 2];
    objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionViewer());
    if (v20)
      v21 = 0x10000;
    else
      v21 = 0;
    if (v19)
      v22 = 256;
    else
      v22 = 0;
    v23 = v22 | v18 | v21;
    v24 = swift_unknownObjectRetain(v16);
    v25 = sub_10027EB04(v24, v17, v23, (uint64_t)&off_1005C0DD0);
    sub_10027F040(v15, v2, 0, 15);

    return;
  }
  v26 = Logger.ProgressUI.unsafeMutableAddressor(0);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v28 = v27(v11, v26, v4);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "ERROR: No presentingVC for progress UI, falling back to any window's root", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v11, v4);
  v33 = objc_msgSend((id)objc_opt_self(DOCUISession), "anyWindowPreferingKeyWindow");
  if (v33)
  {
    v34 = v33;
    Strong = objc_msgSend(v33, "rootViewController");

    if (Strong)
      goto LABEL_6;
  }
  v35 = v27(v8, v26, v4);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "ERROR: No presentingVC for progress UI, falling to present UI", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

  v32(v8, v4);
}

void sub_100406784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView)
                   + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup);
    swift_retain();
    sub_100405BF8();
    swift_release(v6);
    sub_10008FD24();
    sub_100406480(0);

  }
}

id sub_100406840()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCProgressCollectionIndicatorButtonItem.ProgressItemContainerView);
}

BOOL sub_10040688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static UUID.== infix(_:_:)(a1, a2) & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
      && *(double *)(a1 + *(int *)(a3 + 24)) == *(double *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_10040691C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource));
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_viewControllerForPresentationFallback);

  return sub_10000CB4C(v0 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange, &qword_1006541A8);
}

id sub_100406994()
{
  return sub_1000D8CEC(type metadata accessor for DOCProgressCollectionIndicatorButtonItem);
}

uint64_t sub_100406A24()
{
  return type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0);
}

ValueMetadata *type metadata accessor for DOCProgressCollectionIndicatorButtonItem.Metrics()
{
  return &type metadata for DOCProgressCollectionIndicatorButtonItem.Metrics;
}

_QWORD *sub_100406A3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_100406ACC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100406B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100406B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100406BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100406C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100406C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_100406D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_100406D9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                                      - 8)
                          + 80);
  return sub_10008CF84(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100406DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocObject(v0, v5 + 8, v4);
}

Swift::Int sub_100406E5C(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  _BOOL4 v20;
  BOOL v21;
  int v22;
  Swift::Int v23;
  Swift::Int v24;
  char v25;
  Swift::Int v26;
  _BYTE *v27;
  int v28;
  uint64_t v29;
  Swift::Int v30;
  _BYTE *v31;
  int v32;
  unint64_t v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t *v93;
  _QWORD *v94;
  Swift::Int v95;
  Swift::Int v96;
  uint64_t v97;
  unsigned __int8 *__dst;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_100407560(0, v3, 1, a1);
      return result;
    }
    goto LABEL_180;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_188;
  v95 = result;
  v93 = a1;
  if (v3 < 2)
  {
    v8 = (char *)_swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    v94 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      v11 = _swiftEmptyArrayStorage[2];
LABEL_147:
      v86 = v8;
      if (v11 < 2)
        goto LABEL_144;
      v87 = *v93;
      while (1)
      {
        v88 = v11 - 2;
        if (v11 < 2)
          break;
        if (!v87)
          goto LABEL_187;
        v85 = v86;
        v89 = *(_QWORD *)&v86[16 * v88 + 32];
        v90 = *(_QWORD *)&v86[16 * v11 + 24];
        sub_100407604((unsigned __int8 *)(v87 + v89), (unsigned __int8 *)(v87 + *(_QWORD *)&v86[16 * v11 + 16]), v87 + v90, __dst);
        if (v1)
          goto LABEL_143;
        if (v90 < v89)
          goto LABEL_176;
        if ((swift_isUniquelyReferenced_nonNull_native(v85) & 1) == 0)
          v85 = sub_10046564C((uint64_t)v85);
        if (v88 >= *((_QWORD *)v85 + 2))
          goto LABEL_177;
        v91 = &v85[16 * v88 + 32];
        *(_QWORD *)v91 = v89;
        *((_QWORD *)v91 + 1) = v90;
        v92 = *((_QWORD *)v85 + 2);
        if (v11 > v92)
          goto LABEL_178;
        memmove(&v85[16 * v11 + 16], &v85[16 * v11 + 32], 16 * (v92 - v11));
        v86 = v85;
        *((_QWORD *)v85 + 2) = v92 - 1;
        v11 = v92 - 1;
        if (v92 <= 2)
          goto LABEL_144;
      }
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
      goto LABEL_181;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for DOCProgressState);
    *(_QWORD *)(v7 + 16) = v6;
    v94 = (_QWORD *)v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v8 = (char *)_swiftEmptyArrayStorage;
  v96 = v3;
  v97 = *a1;
  while (1)
  {
    v12 = v9++;
    if (v9 >= v3)
      goto LABEL_65;
    v13 = *(unsigned __int8 *)(v10 + v9);
    v14 = *(unsigned __int8 *)(v10 + v12);
    if ((v13 & 1) != 0)
      v15 = 3;
    else
      v15 = 4;
    if (v13 == 3)
      v15 = 2;
    if (v13 == 2)
      v15 = 1;
    if ((v14 & 1) != 0)
      v16 = 3;
    else
      v16 = 4;
    if (v14 == 3)
      v16 = 2;
    if (v14 == 2)
      v17 = 1;
    else
      v17 = v16;
    v9 = v12 + 2;
    if (v12 + 2 < v3)
    {
      while (1)
      {
        v18 = *(unsigned __int8 *)(v10 + v9);
        if ((v18 & 1) != 0)
          v19 = 3;
        else
          v19 = 4;
        if (v18 == 3)
          v19 = 2;
        if (v18 == 2)
          v19 = 1;
        if (v13 == 2)
        {
          if (v15 < v17)
            goto LABEL_56;
        }
        else
        {
          if (v13 == 3)
          {
            v20 = v15 < v17;
            v21 = v19 > 1;
            goto LABEL_49;
          }
          if ((v13 & 1) != 0)
          {
            v20 = v15 < v17;
            v21 = v19 > 2;
LABEL_49:
            v22 = v21;
            if (((v20 ^ v22) & 1) == 0)
              break;
            goto LABEL_34;
          }
          if (v15 < v17 == v19 > 3)
            break;
        }
LABEL_34:
        ++v9;
        v13 = v18;
        if (v3 == v9)
        {
          v9 = v3;
          if (v15 >= v17)
            goto LABEL_65;
LABEL_56:
          if (v9 >= v12)
          {
            if (v12 < v9)
            {
              v23 = v9 - 1;
              v24 = v12;
              while (1)
              {
                if (v24 != v23)
                {
                  if (!v10)
                    goto LABEL_186;
                  v25 = *(_BYTE *)(v10 + v24);
                  *(_BYTE *)(v10 + v24) = *(_BYTE *)(v10 + v23);
                  *(_BYTE *)(v10 + v23) = v25;
                }
                v21 = ++v24 < v23--;
                if (!v21)
                  goto LABEL_65;
              }
            }
            goto LABEL_65;
          }
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
          __break(1u);
          return result;
        }
      }
    }
    if (v15 < v17)
      goto LABEL_56;
LABEL_65:
    if (v9 >= v3)
      goto LABEL_95;
    if (__OFSUB__(v9, v12))
      goto LABEL_179;
    if (v9 - v12 >= v95)
      goto LABEL_95;
    v26 = v12 + v95;
    if (__OFADD__(v12, v95))
      goto LABEL_182;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v12)
      goto LABEL_183;
    if (v9 == v26)
      goto LABEL_95;
    v27 = (_BYTE *)(v10 + v9);
    while (2)
    {
      v28 = *(unsigned __int8 *)(v10 + v9);
      v29 = (v28 & 1) != 0 ? 3 : 4;
      v30 = v12;
      v31 = v27;
      do
      {
        v32 = *(v31 - 1);
        if (v28 == 3)
          v33 = 2;
        else
          v33 = v29;
        if (v28 == 2)
          v33 = 1;
        if (v32 == 3)
        {
          v34 = v33 >= 2;
        }
        else
        {
          if (v32 == 2)
            break;
          v34 = v33 >= 3;
          if ((v32 & 1) == 0)
          {
            if (v33 > 3)
              break;
            goto LABEL_91;
          }
        }
        if (v34)
          break;
LABEL_91:
        if (!v10)
          goto LABEL_184;
        *v31 = v32;
        *--v31 = v28;
        ++v30;
      }
      while (v9 != v30);
      ++v9;
      ++v27;
      if (v9 != v26)
        continue;
      break;
    }
    v9 = v26;
LABEL_95:
    if (v9 < v12)
    {
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_100464E4C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v36 = *((_QWORD *)v8 + 2);
    v35 = *((_QWORD *)v8 + 3);
    v11 = v36 + 1;
    v10 = v97;
    if (v36 >= v35 >> 1)
    {
      v84 = sub_100464E4C((char *)(v35 > 1), v36 + 1, 1, v8);
      v10 = v97;
      v8 = v84;
    }
    *((_QWORD *)v8 + 2) = v11;
    v37 = v8 + 32;
    v38 = &v8[16 * v36 + 32];
    *(_QWORD *)v38 = v12;
    *((_QWORD *)v38 + 1) = v9;
    if (v36)
      break;
    v11 = 1;
LABEL_14:
    v3 = v96;
    if (v9 >= v96)
      goto LABEL_147;
  }
  while (1)
  {
    v39 = v11 - 1;
    if (v11 >= 4)
    {
      v44 = &v37[16 * v11];
      v45 = *((_QWORD *)v44 - 8);
      v46 = *((_QWORD *)v44 - 7);
      v50 = __OFSUB__(v46, v45);
      v47 = v46 - v45;
      if (v50)
        goto LABEL_163;
      v49 = *((_QWORD *)v44 - 6);
      v48 = *((_QWORD *)v44 - 5);
      v50 = __OFSUB__(v48, v49);
      v42 = v48 - v49;
      v43 = v50;
      if (v50)
        goto LABEL_164;
      v51 = v11 - 2;
      v52 = &v37[16 * v11 - 32];
      v54 = *(_QWORD *)v52;
      v53 = *((_QWORD *)v52 + 1);
      v50 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      if (v50)
        goto LABEL_166;
      v50 = __OFADD__(v42, v55);
      v56 = v42 + v55;
      if (v50)
        goto LABEL_169;
      if (v56 >= v47)
      {
        v74 = &v37[16 * v39];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v50 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v50)
          goto LABEL_173;
        v67 = v42 < v77;
        goto LABEL_132;
      }
    }
    else
    {
      if (v11 != 3)
      {
        v68 = *((_QWORD *)v8 + 4);
        v69 = *((_QWORD *)v8 + 5);
        v50 = __OFSUB__(v69, v68);
        v61 = v69 - v68;
        v62 = v50;
        goto LABEL_126;
      }
      v41 = *((_QWORD *)v8 + 4);
      v40 = *((_QWORD *)v8 + 5);
      v50 = __OFSUB__(v40, v41);
      v42 = v40 - v41;
      v43 = v50;
    }
    if ((v43 & 1) != 0)
      goto LABEL_165;
    v51 = v11 - 2;
    v57 = &v37[16 * v11 - 32];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v60 = __OFSUB__(v58, v59);
    v61 = v58 - v59;
    v62 = v60;
    if (v60)
      goto LABEL_168;
    v63 = &v37[16 * v39];
    v65 = *(_QWORD *)v63;
    v64 = *((_QWORD *)v63 + 1);
    v50 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v50)
      goto LABEL_171;
    if (__OFADD__(v61, v66))
      goto LABEL_172;
    if (v61 + v66 >= v42)
    {
      v67 = v42 < v66;
LABEL_132:
      if (v67)
        v39 = v51;
      goto LABEL_134;
    }
LABEL_126:
    if ((v62 & 1) != 0)
      goto LABEL_167;
    v70 = &v37[16 * v39];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v50 = __OFSUB__(v71, v72);
    v73 = v71 - v72;
    if (v50)
      goto LABEL_170;
    if (v73 < v61)
      goto LABEL_14;
LABEL_134:
    v78 = v39 - 1;
    if (v39 - 1 >= v11)
    {
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
      goto LABEL_174;
    }
    if (!v10)
      goto LABEL_185;
    v79 = &v37[16 * v78];
    v80 = *(_QWORD *)v79;
    v81 = &v37[16 * v39];
    v82 = *((_QWORD *)v81 + 1);
    sub_100407604((unsigned __int8 *)(v10 + *(_QWORD *)v79), (unsigned __int8 *)(v10 + *(_QWORD *)v81), v10 + v82, __dst);
    if (v1)
      break;
    if (v82 < v80)
      goto LABEL_160;
    if (v39 > *((_QWORD *)v8 + 2))
      goto LABEL_161;
    *(_QWORD *)v79 = v80;
    *(_QWORD *)&v37[16 * v78 + 8] = v82;
    v83 = *((_QWORD *)v8 + 2);
    if (v39 >= v83)
      goto LABEL_162;
    v11 = v83 - 1;
    memmove(&v37[16 * v39], v81 + 16, 16 * (v83 - 1 - v39));
    *((_QWORD *)v8 + 2) = v83 - 1;
    v10 = v97;
    if (v83 <= 2)
      goto LABEL_14;
  }
  v85 = v8;
LABEL_143:
  v86 = v85;
LABEL_144:
  swift_bridgeObjectRelease(v86);
  v94[2] = 0;
  return swift_bridgeObjectRelease(v94);
}

uint64_t sub_100407560(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  unint64_t v11;
  BOOL v12;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = (_BYTE *)(*a4 + a3);
LABEL_5:
    v6 = *(unsigned __int8 *)(v4 + a3);
    if ((v6 & 1) != 0)
      v7 = 3;
    else
      v7 = 4;
    v8 = result;
    v9 = v5;
    while (1)
    {
      v10 = *(v9 - 1);
      if (v6 == 3)
        v11 = 2;
      else
        v11 = v7;
      if (v6 == 2)
        v11 = 1;
      if (v10 == 3)
      {
        v12 = v11 >= 2;
      }
      else
      {
        if (v10 == 2)
          goto LABEL_4;
        v12 = v11 >= 3;
        if ((v10 & 1) == 0)
        {
          if (v11 > 3)
            goto LABEL_4;
          goto LABEL_21;
        }
      }
      if (v12)
        goto LABEL_4;
LABEL_21:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      *v9 = v10;
      *--v9 = v6;
      if (a3 == ++v8)
      {
LABEL_4:
        ++a3;
        ++v5;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_100407604(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  int v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;

  v26 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v25 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) != 0)
      goto LABEL_66;
    if (__dst != a2 || a3 <= (unint64_t)__dst)
      memmove(__dst, a2, a3 - (_QWORD)a2);
    v15 = &v4[v9];
    v24 = &v4[v9];
    v26 = v6;
    if (v7 >= v6 || (unsigned __int8 *)a3 == v6)
    {
LABEL_65:
      sub_100464F5C((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
    v16 = (unsigned __int8 *)(a3 - 1);
    while (1)
    {
      v17 = v16 + 1;
      v18 = *(v15 - 1);
      v19 = v6 - 1;
      v20 = *(v6 - 1);
      if ((v18 & 1) != 0)
        v21 = 3;
      else
        v21 = 4;
      if (v18 == 3)
        v21 = 2;
      if (v18 == 2)
        v22 = 1;
      else
        v22 = v21;
      if (v20 != 2)
      {
        if (v20 == 3)
        {
          if (v22 < 2)
            goto LABEL_53;
        }
        else if ((v20 & 1) != 0)
        {
          if (v22 < 3)
          {
LABEL_53:
            if (v17 != v6 || v16 >= v6)
              *v16 = v20;
            v26 = --v6;
            if (v19 <= v7)
              goto LABEL_65;
            goto LABEL_41;
          }
        }
        else if (v22 <= 3)
        {
          goto LABEL_53;
        }
      }
      v24 = v15 - 1;
      if (v17 < v15 || v16 >= v15 || v17 != v15)
        *v16 = *(v15 - 1);
      --v15;
      if (v6 <= v7)
        goto LABEL_65;
LABEL_41:
      --v16;
      if (v15 <= v4)
        goto LABEL_65;
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v24 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        v11 = *v6;
        v12 = *v4;
        if ((v11 & 1) != 0)
          v13 = 3;
        else
          v13 = 4;
        if (v11 == 3)
          v13 = 2;
        if (v11 == 2)
          v13 = 1;
        if (v12 == 2)
          break;
        if (v12 == 3)
        {
          if (v13 >= 2)
            break;
        }
        else if ((v12 & 1) != 0)
        {
          if (v13 >= 3)
            break;
        }
        else if (v13 > 3)
        {
          break;
        }
        v14 = v6 + 1;
        if (v7 < v6 || v7 >= v14 || v7 != v6)
          *v7 = v11;
LABEL_29:
        ++v7;
        if (v4 < v10)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v26 = v7;
        goto LABEL_65;
      }
      if (v7 != v4)
        *v7 = v12;
      v25 = ++v4;
      v14 = v6;
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_66:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004078CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004078F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100407900()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100407924(uint64_t a1)
{
  uint64_t v1;

  sub_100406784(a1, v1);
}

uint64_t sub_10040792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  uint64_t v7;
  id v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  uint64_t result;

  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v15 = objc_msgSend(v13, "initWithString:", v14);

  v16 = (void *)objc_opt_self(UIImage);
  v17 = v15;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v19 = objc_msgSend(v16, "_systemImageNamed:withConfiguration:", v18, 0);

  if (v19)
  {

    if ((a7 & 1) == 0)
    {
      v20 = objc_msgSend(v19, "imageWithBaselineOffsetFromBottom:", *(double *)&a6);

      v19 = v20;
    }
    v21 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v19);
    v22 = sub_100407BC0();
    v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(v22), "attributedStringWithAttachment:", v21);
    v24 = objc_allocWithZone((Class)NSAttributedString);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "initWithString:", v25);

    objc_msgSend(v17, "insertAttributedString:atIndex:", v26, 0);
    objc_msgSend(v17, "insertAttributedString:atIndex:", v23, 0);
    v27 = a5;
    objc_msgSend(v17, "addAttribute:value:range:", NSFontAttributeName, v27, 0, objc_msgSend(v17, "length"));

    return (uint64_t)v17;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100532BA0, "Files/NSAttributedString+DOCExtensions.swift", 44, 2, 17, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100407BC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100643F10;
  if (!qword_100643F10)
  {
    v1 = objc_opt_self(NSMutableAttributedString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100643F10);
  }
  return result;
}

void sub_100407BFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  id v10;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor) = a1;
  v10 = a1;
  if (!v3)
  {
    if (!v5)
    {
LABEL_8:
      v6 = v5;
      goto LABEL_9;
    }
    v3 = 0;
LABEL_7:
    v9 = v3;
    sub_100241528(v3);
    goto LABEL_8;
  }
  if (!v5)
    goto LABEL_7;
  sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  v6 = v5;
  v7 = v10;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
  {
    v3 = *(void **)(v2 + v4);
    goto LABEL_7;
  }
LABEL_9:

}

void sub_100407CD4(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v2 = v1;
  v3 = objc_msgSend(a1, "window");
  if (v3)
  {
    v4 = v3;
    v16 = (char *)objc_msgSend(v3, "rootViewController");

    v5 = v16;
    if (v16)
    {
      if ((*(_BYTE *)(*(_QWORD *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView]
                     + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress
                     + 8) & 1) == 0)
      {
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressSource];
        v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressSource + 8];
        v8 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration];
        v9 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration + 1];
        v10 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration + 2];
        objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionViewer());
        if (v10)
          v11 = 0x10000;
        else
          v11 = 0;
        if (v9)
          v12 = 256;
        else
          v12 = 0;
        v13 = v12 | v8 | v11;
        v14 = swift_unknownObjectRetain(v6);
        v15 = sub_10027EB04(v14, v7, v13, (uint64_t)_swiftEmptyArrayStorage);
        sub_10027F040(v16, 0, v2, *(_QWORD *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_popoverArrowDirection]);

        v5 = v15;
      }

    }
  }
}

void sub_100407E88()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  id v20;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004DAC10;
  v6 = objc_msgSend(v2, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v2, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v20 = v1;
  sub_10008F988((uint64_t)v1);

}

void sub_100408148()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressSource));

}

id sub_100408184()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorPresenterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCProgressCollectionIndicatorPresenterView()
{
  return objc_opt_self(_TtC5Files43DOCProgressCollectionIndicatorPresenterView);
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionCellStackMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionCellStackMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCellStackMetrics()
{
  return &type metadata for DOCItemCollectionCellStackMetrics;
}

BOOL sub_100408280(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t sub_1004082C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v36 = a1;
  v1 = sub_10006922C(&qword_100654268);
  v38 = *(void (**)(char *, uint64_t))(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100654270);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1003222F0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for NavigateHistoryIntent, v11);
  v12._countAndFlagsBits = 0x20756F79206E6143;
  v12._object = (void *)0xEB00000000206F67;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_1004E7830);
  v35 = sub_100388BE4();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v35);
  v15 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v8, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0x20656874206E6920;
  v16._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v34(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  v18._countAndFlagsBits = 1886413088;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v20 = (void (*)(char *, uint64_t))*((_QWORD *)v38 + 1);
  v37 = v19;
  v38 = v20;
  v20(v3, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for NavigateHistoryIntent, v11);
  v21._countAndFlagsBits = 0x657461676976614ELL;
  v21._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E7830);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v35);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v8, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 544106784;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v34(v7, v17, v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33(v7, v4);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v38(v3, v39);
  v28 = sub_10006922C(&qword_100654278);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v27;
  v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v29);
  swift_bridgeObjectRelease(v29);
  return v30;
}

uint64_t sub_100408660(uint64_t a1)
{
  return sub_100408A3C(a1, (uint64_t)&unk_1004E7830, (uint64_t (*)(__n128))sub_1003222F0, (uint64_t)sub_10040867C);
}

uint64_t sub_100408680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v36 = a1;
  v1 = sub_10006922C(&qword_100654268);
  v38 = *(void (**)(char *, uint64_t))(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100654270);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1003222F0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for NavigateHistoryIntent, v11);
  v12._object = (void *)0x8000000100532DF0;
  v12._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_1004E7830);
  v35 = sub_100388BE4();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v35);
  v15 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v8, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 544106784;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v34(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  v18._countAndFlagsBits = 63;
  v18._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v20 = (void (*)(char *, uint64_t))*((_QWORD *)v38 + 1);
  v37 = v19;
  v38 = v20;
  v20(v3, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 2, &type metadata for NavigateHistoryIntent, v11);
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v21._object = (void *)0x8000000100532E10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E7830);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v35);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v8, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x6E6F207369687420;
  v25._object = (void *)0xED0000206E692065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v34(v7, v17, v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33(v7, v4);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v38(v3, v39);
  v28 = sub_10006922C(&qword_100654278);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v27;
  v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v29);
  swift_bridgeObjectRelease(v29);
  return v30;
}

uint64_t sub_100408A20(uint64_t a1)
{
  return sub_100408A3C(a1, (uint64_t)&unk_1004E7830, (uint64_t (*)(__n128))sub_1003222F0, (uint64_t)sub_100408B5C);
}

uint64_t sub_100408A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v7 = type metadata accessor for _AssistantIntent.Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v12 = sub_100388BE4();
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  v14 = swift_release(KeyPath);
  v15 = a3(v14);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, a4, 0, v15);
  v16 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = sub_10006922C(&qword_10064E170);
  v18 = swift_allocObject(v17, 40, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v18 + 32) = v16;
  v19 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v18);
  return v19;
}

uint64_t sub_100408B5C()
{
  return sub_1004098C8(0x65726F666562, 0xE600000000000000, 0x7265746661, 0xE500000000000000);
}

uint64_t sub_100408B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v36 = a1;
  v1 = sub_10006922C(&qword_100654268);
  v38 = *(void (**)(char *, uint64_t))(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100654270);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1003222F0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for NavigateHistoryIntent, v11);
  v12._object = (void *)0x8000000100532DB0;
  v12._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_1004E7830);
  v35 = sub_100388BE4();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v35);
  v15 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v8, v15);
  swift_release(v14);
  v16._countAndFlagsBits = 0x207265646C6F6620;
  v16._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v34(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v20 = (void (*)(char *, uint64_t))*((_QWORD *)v38 + 1);
  v37 = v19;
  v38 = v20;
  v20(v3, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for NavigateHistoryIntent, v11);
  v21._countAndFlagsBits = 0x6874206F74206F47;
  v21._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E7830);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v35);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v8, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x207265646C6F6620;
  v25._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v34(v7, v17, v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33(v7, v4);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateHistoryIntent, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateHistoryIntent, v11);
  v38(v3, v39);
  v28 = sub_10006922C(&qword_100654278);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v27;
  v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v29);
  swift_bridgeObjectRelease(v29);
  return v30;
}

uint64_t sub_100408F28(uint64_t a1)
{
  return sub_100408A3C(a1, (uint64_t)&unk_1004E7830, (uint64_t (*)(__n128))sub_1003222F0, (uint64_t)sub_100408F44);
}

uint64_t sub_100408F44()
{
  return sub_1004098C8(0x73756F6976657270, 0xE800000000000000, 1954047342, 0xE400000000000000);
}

uint64_t sub_100408F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;

  v36 = a1;
  v1 = sub_10006922C(&qword_100654250);
  v38 = *(void (**)(char *, uint64_t))(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100654258);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10038A0EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 2, &type metadata for NavigateQuickLookIntent, v11);
  v12._countAndFlagsBits = 0x657461676976614ELL;
  v12._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_1004E7808);
  v35 = sub_100388BE4();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v35);
  v15 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v8, v15);
  swift_release(v14);
  v16._object = (void *)0x8000000100532DD0;
  v16._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v34(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateQuickLookIntent, v11);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateQuickLookIntent, v11);
  v20 = (void (*)(char *, uint64_t))*((_QWORD *)v38 + 1);
  v37 = v19;
  v38 = v20;
  v20(v3, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for NavigateQuickLookIntent, v11);
  v21._countAndFlagsBits = 0x657461676976614ELL;
  v21._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E7808);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v35);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v8, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 544106784;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v34(v7, v17, v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  v33(v7, v4);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for NavigateQuickLookIntent, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for NavigateQuickLookIntent, v11);
  v38(v3, v39);
  v28 = sub_10006922C(&qword_100654260);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v29 + 32) = v37;
  *(_QWORD *)(v29 + 40) = v27;
  v30 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v29);
  swift_bridgeObjectRelease(v29);
  return v30;
}

uint64_t sub_1004092FC(uint64_t a1)
{
  return sub_100408A3C(a1, (uint64_t)&unk_1004E7808, (uint64_t (*)(__n128))sub_10038A0EC, (uint64_t)sub_10040867C);
}

uint64_t sub_100409318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x647261776B636162, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64726177726F66, 0xE700000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1801675106, 0xE400000000000000);
  v3 = sub_10006922C(&qword_10064E140);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1004093C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::String v14;
  uint64_t KeyPath;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  unsigned int v48;
  void (*v49)(char *);
  unint64_t v50;

  v41 = a1;
  v1 = sub_10006922C(&qword_100654250);
  v2 = *(_QWORD *)(v1 - 8);
  v45 = v1;
  v46 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  __chkstk_darwin(v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100654258);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10038A0EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for NavigateQuickLookIntent, v13);
  v14._object = (void *)0x8000000100532DB0;
  v14._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  KeyPath = swift_getKeyPath(&unk_1004E7808);
  v50 = sub_100388BE4();
  v16 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v50);
  v17 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v10, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0x7765697665727020;
  v18._object = (void *)0xEC000000206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v48 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v49 = *(void (**)(char *))(v6 + 104);
  v44 = v7;
  v49(v9);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v10);
  v47 = *(void (**)(char *, uint64_t))(v6 + 8);
  v47(v9, v7);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for NavigateQuickLookIntent, v13);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for NavigateQuickLookIntent, v13);
  v20 = v45;
  v46 = *(_QWORD *)(v46 + 8);
  ((void (*)(char *, uint64_t))v46)(v4, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for NavigateQuickLookIntent, v13);
  v21._countAndFlagsBits = 0x206F74206F47;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E7808);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v50);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v10, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x7765697665727020;
  v25._object = (void *)0xEC000000206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = v44;
  ((void (*)(char *, _QWORD, uint64_t))v49)(v9, v48, v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v10);
  v47(v9, v26);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for NavigateQuickLookIntent, v13);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for NavigateQuickLookIntent, v13);
  ((void (*)(char *, uint64_t))v46)(v4, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for NavigateQuickLookIntent, v13);
  v28._countAndFlagsBits = 0x20656D20776F6853;
  v28._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_1004E7808);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v50);
  v31 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v10, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0x6E69206D65746920;
  v32._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = v44;
  ((void (*)(char *, _QWORD, uint64_t))v49)(v9, v48, v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v10);
  v47(v9, v33);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for NavigateQuickLookIntent, v13);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for NavigateQuickLookIntent, v13);
  ((void (*)(char *, uint64_t))v46)(v4, v45);
  v36 = sub_10006922C(&qword_100654260);
  v37 = swift_allocObject(v36, 56, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1004D9880;
  v38 = v42;
  *(_QWORD *)(v37 + 32) = v43;
  *(_QWORD *)(v37 + 40) = v38;
  *(_QWORD *)(v37 + 48) = v35;
  v39 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v37);
  swift_bridgeObjectRelease(v37);
  return v39;
}

uint64_t sub_1004098AC(uint64_t a1)
{
  return sub_100408A3C(a1, (uint64_t)&unk_1004E7808, (uint64_t (*)(__n128))sub_10038A0EC, (uint64_t)sub_100408F44);
}

uint64_t sub_1004098C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a3, a4);
  v8 = sub_10006922C(&qword_10064E140);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_100409948(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  void (*v37)(char *, uint64_t);
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *);
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a1;
  v53 = sub_10006922C(&qword_100654238);
  v57 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v3 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100654240);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001FCCB8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, &type metadata for OpenFileIntent, v9);
  v10._countAndFlagsBits = 0x20796D206E65704FLL;
  v10._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_1004E77E0);
  v58 = sub_10005A360((unint64_t *)&qword_100643928, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DB0C8);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v58);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v6, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0x6E6920656C696620;
  v14._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  LODWORD(v56) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v55 = *(void (**)(char *))(v3 + 104);
  v15 = v52;
  v55(v5);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v54 = *(void (**)(char *, uint64_t))(v3 + 8);
  v54(v5, v15);
  v16._countAndFlagsBits = 1886413088;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for OpenFileIntent, v9);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenFileIntent, v9);
  v57 = *(_QWORD *)(v57 + 8);
  v17 = v53;
  ((void (*)(char *, uint64_t))v57)(v2, v53);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 2, &type metadata for OpenFileIntent, v9);
  v18._countAndFlagsBits = 0xD000000000000011;
  v18._object = (void *)0x8000000100532D50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_1004E77E0);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v58);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v6, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0xD000000000000014;
  v22._object = (void *)0x8000000100532D70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v23 = v52;
  ((void (*)(char *, _QWORD, uint64_t))v55)(v5, v56, v52);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v54(v5, v23);
  v24._countAndFlagsBits = 1886413088;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for OpenFileIntent, v9);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenFileIntent, v9);
  ((void (*)(char *, uint64_t))v57)(v2, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for OpenFileIntent, v9);
  v25._countAndFlagsBits = 0x206E65704FLL;
  v25._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = swift_getKeyPath(&unk_1004E77E0);
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v58);
  v28 = swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v6, v28);
  swift_release(v27);
  v29._countAndFlagsBits = 544106784;
  v29._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  ((void (*)(char *, _QWORD, uint64_t))v55)(v5, v56, v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v54(v5, v23);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for OpenFileIntent, v9);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenFileIntent, v9);
  ((void (*)(char *, uint64_t))v57)(v2, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for OpenFileIntent, v9);
  v31._countAndFlagsBits = 0x206E65704FLL;
  v31._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v32 = swift_getKeyPath(&unk_1004E77E0);
  v33 = v58;
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v32, v58);
  v35 = swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v6, v35);
  swift_release(v34);
  v36._object = (void *)0x8000000100532D90;
  v36._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for OpenFileIntent, v9);
  v55 = (void (*)(char *))static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenFileIntent, v9);
  v37 = (void (*)(char *, uint64_t))v57;
  ((void (*)(char *, uint64_t))v57)(v2, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for OpenFileIntent, v9);
  v38._countAndFlagsBits = 0x206E65704FLL;
  v38._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v39 = swift_getKeyPath(&unk_1004E77E0);
  v40 = _AssistantIntent.IntentProjection.subscript.getter(v39, v33);
  v41 = swift_release(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v40, v6, v41);
  swift_release(v40);
  v42._countAndFlagsBits = 0x6D65746920;
  v42._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for OpenFileIntent, v9);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenFileIntent, v9);
  v37(v2, v53);
  v44 = sub_10006922C(&qword_100654248);
  v45 = swift_allocObject(v44, 72, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1004DB530;
  v46 = v50;
  *(_QWORD *)(v45 + 32) = v51;
  *(_QWORD *)(v45 + 40) = v46;
  v47 = v55;
  *(_QWORD *)(v45 + 48) = v56;
  *(_QWORD *)(v45 + 56) = v47;
  *(_QWORD *)(v45 + 64) = v43;
  v48 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v45);
  swift_bridgeObjectRelease(v45);
  return v48;
}

uint64_t sub_100409FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004E77E0);
  v5 = sub_10005A360((unint64_t *)&qword_100643928, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DB0C8);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_1001FCCB8();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10040A104, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10006922C(&qword_10064E170);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10040A104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x696465207473616CLL, 0xEF46445020646574);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000016, 0x8000000100532CF0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x78742E7365746F6ELL, 0xE900000000000074);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x68736E6565726353, 0xEA0000000000746FLL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64656C7469746E55, 0xEC00000067706A2ELL);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x8000000100532D10);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x8000000100532D30);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E697465654DLL, 0xED00007365746F6ELL);
  v8 = sub_10006922C(&qword_10064E140);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004DB580;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_10040A29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  char *v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  Swift::String v28;
  char *v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  char *v40;
  char *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  Swift::String v50;
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);

  v67 = a1;
  v1 = sub_10006922C(&qword_100654220);
  v71 = *(_QWORD *)(v1 - 8);
  v72 = v1;
  __chkstk_darwin(v1);
  v70 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v3 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100654228);
  __chkstk_darwin(v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1003221D0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 2, &type metadata for SearchFileAssistantIntent, v9);
  v10._countAndFlagsBits = 0x6620686372616553;
  v10._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_1004E77B8);
  v12 = sub_10005A360(&qword_100654218, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v69 = v12;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  v14 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v6, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 544106784;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v68 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v17 = v73;
  v74(v5, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v73);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v66 = *(void (**)(char *, uint64_t))(v3 + 8);
  v66(v5, v17);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v70;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for SearchFileAssistantIntent, v9);
  v62 = v9;
  v65 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v19, &type metadata for SearchFileAssistantIntent, v9);
  v20 = v72;
  v71 = *(_QWORD *)(v71 + 8);
  ((void (*)(char *, uint64_t))v71)(v19, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for SearchFileAssistantIntent, v9);
  v21._countAndFlagsBits = 0x6620686372616553;
  v21._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1004E77B8);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v12);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v6, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0x20656874206E6920;
  v25._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v26 = v73;
  v74(v5, v16, v73);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v27 = v66;
  v66(v5, v26);
  v28._countAndFlagsBits = 1886413088;
  v28._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = v70;
  v30 = v62;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for SearchFileAssistantIntent, v62);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v29, &type metadata for SearchFileAssistantIntent, v30);
  v31 = (void (*)(char *, uint64_t))v71;
  ((void (*)(char *, uint64_t))v71)(v29, v20);
  v32 = v30;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for SearchFileAssistantIntent, v30);
  v33._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v33._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(&unk_1004E77B8);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v69);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v6, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 544106784;
  v37._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = v73;
  v74(v5, v68, v73);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v27(v5, v38);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = v70;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for SearchFileAssistantIntent, v32);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v40, &type metadata for SearchFileAssistantIntent, v32);
  v41 = v40;
  v31(v40, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for SearchFileAssistantIntent, v32);
  v42._countAndFlagsBits = 0x207972657551;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath(&unk_1004E77B8);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v69);
  v45 = swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v6, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0x20796D206E6920;
  v46._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = v68;
  v48 = v73;
  v74(v5, v68, v73);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v49 = v66;
  v66(v5, v48);
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for SearchFileAssistantIntent, v32);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v41, &type metadata for SearchFileAssistantIntent, v32);
  v51 = v72;
  ((void (*)(char *, uint64_t))v71)(v41, v72);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for SearchFileAssistantIntent, v32);
  v52._countAndFlagsBits = 0x6920686372616553;
  v52._object = (void *)0xEA0000000000206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v74(v5, v47, v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v5, v6);
  v49(v5, v48);
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for SearchFileAssistantIntent, v32);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v41, &type metadata for SearchFileAssistantIntent, v32);
  ((void (*)(char *, uint64_t))v71)(v41, v51);
  v55 = sub_10006922C(&qword_100654230);
  v56 = swift_allocObject(v55, 72, 7);
  *(_OWORD *)(v56 + 16) = xmmword_1004DB530;
  v57 = v64;
  *(_QWORD *)(v56 + 32) = v65;
  *(_QWORD *)(v56 + 40) = v57;
  v58 = v69;
  *(_QWORD *)(v56 + 48) = v63;
  *(_QWORD *)(v56 + 56) = v58;
  *(_QWORD *)(v56 + 64) = v54;
  v59 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)(v56);
  swift_bridgeObjectRelease(v56);
  return v59;
}

uint64_t sub_10040A978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_10040AA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004E77B8);
  v5 = sub_10005A360(&qword_100654218, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_1003221D0();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10040AB70, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10006922C(&qword_10064E170);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10040AB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x722078617420796DLL, 0xED000074726F7065);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001FLL, 0x8000000100532CA0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000024, 0x8000000100532CC0);
  v3 = sub_10006922C(&qword_10064E140);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004D9880;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10040AC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x8000000100532C80);
  v1 = sub_10006922C(&qword_10064E140);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v2 + 32) = v0;
  v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t sub_10040ACBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1003221D0();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for SearchFileAssistantIntent, sub_10040AC40, 0, &type metadata for SearchFileAssistantIntent, v4);
  v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10006922C(&qword_10064E138);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

ValueMetadata *type metadata accessor for FilesOnlyAssistantIntentsProvider()
{
  return &type metadata for FilesOnlyAssistantIntentsProvider;
}

uint64_t sub_10040ADAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v46 = *(_QWORD *)(v0 - 8);
  v47 = v0;
  __chkstk_darwin(v0);
  v44 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - v5;
  v7 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100647F10);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for _AssistantIntent(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100388F84();
  v18 = sub_1003222F0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_1004082C8, 0, sub_100408660, 0, &type metadata for NavigateHistoryIntent, v18);
  v45 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19(v17, v14);
  v48 = sub_100388F84();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_100408680, 0, sub_100408A20, 0, &type metadata for NavigateHistoryIntent, v18);
  v43 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  v48 = sub_100388F84();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_100408B80, 0, sub_100408F28, 0, &type metadata for NavigateHistoryIntent, v18);
  v41 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  v48 = sub_100389D04();
  v20 = sub_10038A0EC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_100408F68, 0, sub_1004092FC, 0, &type metadata for NavigateQuickLookIntent, v20);
  v40 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  v48 = sub_100389D04();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_1004093C8, 0, sub_1004098AC, 0, &type metadata for NavigateQuickLookIntent, v20);
  v39 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  sub_10006922C((uint64_t *)&unk_1006438D0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v13, 1, 1, v21);
  v22 = type metadata accessor for DOCFileEntity(0);
  v23 = v9;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  v24 = type metadata accessor for IntentDialog(0);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v6, 1, 1, v24);
  v26 = v42;
  v25(v42, 1, 1, v24);
  v27 = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v44, enum case for InputConnectionBehavior.default(_:), v47);
  v28 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  v48 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v13, v23, v6, v26, v27, v28);
  v29 = sub_1001FCCB8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_100409948, 0, sub_100409FDC, 0, &type metadata for OpenFileIntent, v29);
  v30 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  v48 = sub_10048CE0C();
  v31 = sub_1003221D0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v48, sub_10040A29C, 0, sub_10040AA48, 0, &type metadata for SearchFileAssistantIntent, v31);
  v32 = static _AssistantIntent.Builder.buildExpression(_:)(v17);
  v19(v17, v14);
  v33 = sub_10006922C(&qword_10064E168);
  v34 = swift_allocObject(v33, 88, 7);
  *(_OWORD *)(v34 + 16) = xmmword_1004DB540;
  v35 = v43;
  *(_QWORD *)(v34 + 32) = v45;
  *(_QWORD *)(v34 + 40) = v35;
  v36 = v40;
  *(_QWORD *)(v34 + 48) = v41;
  *(_QWORD *)(v34 + 56) = v36;
  *(_QWORD *)(v34 + 64) = v39;
  *(_QWORD *)(v34 + 72) = v30;
  *(_QWORD *)(v34 + 80) = v32;
  v37 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v34);
  return v37;
}

_QWORD *sub_10040B2C4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_10040B2F8@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10040B334(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

Swift::Double *defaultSuspendVisualChangesTimeout.unsafeMutableAddressor()
{
  return &defaultSuspendVisualChangesTimeout;
}

uint64_t sub_10040B378()
{
  return 0;
}

double sub_10040B384(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  Swift::String v7;
  void *object;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  uint64_t v18[2];

  strcpy((char *)v18, "Coordinator-");
  BYTE5(v18[1]) = 0;
  HIWORD(v18[1]) = -5120;
  v7._countAndFlagsBits = (*(uint64_t (**)(void))(v3 + 96))();
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v10 = v18[0];
  v9 = v18[1];
  v12 = *(NSObject **)DOCLog.UI.unsafeMutableAddressor(v11);
  if (os_log_type_enabled(v12, a1))
  {
    swift_bridgeObjectRetain_n(a3, 2);
    v13 = v12;
    swift_bridgeObjectRetain(v18[1]);
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v18[0] = v15;
    *(_DWORD *)v14 = 136315394;
    swift_bridgeObjectRetain(v9);
    v17 = sub_1000544FC(v10, v9, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v17 = sub_1000544FC(a2, a3, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, a1, "[%s] %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v18[1]).n128_u64[0];
  }
  return result;
}

uint64_t DOCHierarchyController.ChangeCoordinator.deinit()
{
  uint64_t v0;

  return v0;
}

Swift::Void __swiftcall DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(Swift::Double timeout)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v25 - v14;
  sub_10040C40C(0, 0xD00000000000001DLL, (void *)0x8000000100532E30);
  v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  static DispatchTime.now()(v17);
  + infix(_:_:)(v13, timeout);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  aBlock[4] = sub_10040C584;
  v30 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9538;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  swift_retain();
  v21 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_10008BAAC();
  v23 = sub_10006922C((uint64_t *)&unk_100647540);
  v24 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v3, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  v18(v15, v9);
}

uint64_t sub_10040B830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(a1 + 32, v5, 0, 0);
  v2 = *(_QWORD *)(a1 + 32);
  swift_retain();
  v3 = swift_bridgeObjectRetain(v2);
  sub_10040E9B8(v3, a1);
  swift_bridgeObjectRelease(v2);
  return swift_release(a1);
}

Swift::Void __swiftcall DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(_:)(Swift::String_optional a1)
{
  unint64_t countAndFlagsBits;
  void *object;

  if (a1.value._object)
    countAndFlagsBits = a1.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0xD000000000000023;
  if (a1.value._object)
    object = a1.value._object;
  else
    object = (void *)0x8000000100532E50;
  swift_bridgeObjectRetain(a1.value._object);
  sub_10040C58C(0, countAndFlagsBits, object);
  swift_bridgeObjectRelease(object);
}

void DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(afterUpdatingBrowsedLocationTo:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  char *v5;
  id v6;
  __n128 v7;
  os_log_type_t v8;
  id v9;
  NSURL *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  v1 = v0;
  v3 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v4 = objc_msgSend(v2, "hierarchyController");
  v5 = (char *)objc_msgSend(v2, "dataSource");
  v6 = *(id *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v8 = static os_log_type_t.info.getter(v7);
  sub_10040B384(v8, 0xD000000000000026, 0x8000000100532E80);
  sub_10040C40C(1, 0xD000000000000018, (void *)0x8000000100532EB0);
  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  URL._bridgeToObjectiveC()(v10);
  v12 = v11;
  v13 = (_QWORD *)swift_allocObject(&unk_1005E9570, 48, 7);
  v13[2] = v3;
  v13[3] = v1;
  v13[4] = v4;
  v13[5] = v6;
  v19[4] = sub_10040C73C;
  v20 = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100083540;
  v19[3] = &unk_1005E9588;
  v14 = _Block_copy(v19);
  v15 = v20;
  v16 = v6;
  v17 = v3;
  swift_retain();
  v18 = v4;
  objc_msgSend(v9, "fetchItemForURL:completionHandler:", v12, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

}

uint64_t sub_10040BACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD aBlock[5];
  uint64_t v20;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  aBlock[4] = sub_10040F39C;
  v20 = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9980;
  v12 = _Block_copy(aBlock);
  v13 = v20;
  swift_retain();
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = sub_10008BAAC();
  v16 = sub_10006922C((uint64_t *)&unk_100647540);
  v17 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v2, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10040BC90(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  _QWORD *v36;

  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v31 = static OS_dispatch_queue.main.getter(v17);
  v18 = (_QWORD *)swift_allocObject(&unk_1005E9878, 56, 7);
  v18[2] = a1;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a5;
  v18[6] = a6;
  aBlock[4] = sub_10040F33C;
  v36 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9890;
  v19 = _Block_copy(aBlock);
  v20 = v36;
  v21 = a1;
  v22 = a3;
  swift_retain();
  v23 = a5;
  v24 = a6;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_10008BAAC();
  v27 = sub_10006922C((uint64_t *)&unk_100647540);
  v28 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v11, v26);
  v29 = (void *)v31;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v33);
}

double sub_10040BE9C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  char v23;
  __n128 v24;
  os_log_type_t v25;
  double result;
  os_log_type_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t inited;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD aBlock[5];
  uint64_t v69;
  char v70[56];

  v66 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C(&qword_10064A600);
  v17.n128_f64[0] = __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_4;
  v61 = a5;
  v62 = v12;
  v63 = v10;
  v20 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v21 = a1;
  v22 = (void *)DOCNode.representedLocation.getter(v20);
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v23 = static NSObject.== infix(_:_:)(a2, v22);

  if ((v23 & 1) != 0)
  {

LABEL_4:
    v25 = static os_log_type_t.info.getter(v17);
    sub_10040B384(v25, 0xD00000000000002CLL, 0x8000000100533380);
    sub_10040BACC(a3);
    return result;
  }
  v60 = v9;
  v27 = static os_log_type_t.info.getter(v24);
  sub_10040B384(v27, 0xD000000000000027, 0x80000001005333B0);
  v28 = dispatch_group_create();
  dispatch_group_enter(v28);
  v29 = (uint64_t)sub_1001D5A88();
  v30 = v29;
  if ((unint64_t)v29 >> 62)
  {
    if (v29 >= 0)
      v29 &= 0xFFFFFFFFFFFFFF8uLL;
    v31 = _CocoaArrayWrapper.endIndex.getter(v29);
  }
  else
  {
    v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v32 = v21;
  v33 = v15;
  swift_bridgeObjectRelease(v30);
  if (v31 <= 1)
  {
    v34 = (void *)DOCNode.representedLocation.getter(v20);
    v35 = v32;
    v36 = swift_allocObject(&unk_1005E98C8, 24, 7);
    *(_QWORD *)(v36 + 16) = v28;
    v38 = v28;
    sub_1001D4F4C(v34, v34, 0, 1, 0, sub_10028ACA4, v36);
  }
  else
  {
    v58 = v15;
    sub_1001F3814(1);
    v34 = (void *)DOCNode.representedLocation.getter(v20);
    v35 = v32;
    v36 = swift_allocObject(&unk_1005E9968, 24, 7);
    *(_QWORD *)(v36 + 16) = v28;
    v37 = v28;
    v33 = v58;
    sub_1001E024C(v34, 0, 0, 0, 0, (uint64_t)sub_1000A8854, v36);
  }
  v59 = v35;

  swift_release(v36);
  dispatch_group_enter(v28);
  v39 = sub_10006922C(&qword_100654838);
  inited = swift_initStackObject(v39, v70);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = a2;
  v41 = a2;
  *(_QWORD *)(inited + 40) = DOCNode.representedLocation.getter(v20);
  v42 = sub_1003F3348(inited);
  v43 = swift_allocObject(&unk_1005E98F0, 24, 7);
  *(_QWORD *)(v43 + 16) = v28;
  v44 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v19, 1, 1, v44);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v45 = v28;
  v46 = (void *)static OS_dispatch_queue.main.getter(v45);
  v47 = swift_allocObject(&unk_1005E9918, 32, 7);
  *(_QWORD *)(v47 + 16) = sub_10028ACA4;
  *(_QWORD *)(v47 + 24) = v43;
  swift_retain();
  sub_10004693C((uint64_t)v19, v42, v46, (id *)sub_1000A0EE8, v47);

  swift_release(v47);
  sub_10000CB4C((uint64_t)v19, &qword_10064A600);
  swift_bridgeObjectRelease(v42);
  swift_release(v43);
  v49 = (void *)static OS_dispatch_queue.main.getter(v48);
  aBlock[4] = sub_10040F394;
  v69 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9930;
  v50 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter(v51);
  v67 = _swiftEmptyArrayStorage;
  v52 = sub_10008BAAC();
  v53 = sub_10006922C((uint64_t *)&unk_100647540);
  v54 = sub_1000791AC();
  v55 = v62;
  v56 = v60;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v67, v53, v54, v60, v52);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v33, v55, v49, v50);
  _Block_release(v50);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v65);
  *(_QWORD *)&result = swift_release(v69).n128_u64[0];
  return result;
}

void sub_10040C40C(char a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _BYTE v19[24];

  v6 = a1 & 1;
  v7 = v3 + 32;
  swift_beginAccess(v3 + 32, v19, 0, 0);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  if ((sub_1004778AC(v6, v8) & 1) == 0)
  {
    v10 = static os_log_type_t.info.getter();
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v11._countAndFlagsBits = 0x6F69747265737361;
    v11._object = (void *)0xEE00203D2B20736ELL;
    String.append(_:)(v11);
    v18 = v6;
    _print_unlocked<A, B>(_:_:)(&v18, &v16, &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12._countAndFlagsBits = 23328;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = a2;
    v13._object = a3;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15 = v17;
    sub_10040B384(v10, v16, v17);
    swift_bridgeObjectRelease(v15);
    swift_beginAccess(v7, &v16, 33, 0);
    sub_1000C8EB4(&v18, v6);
    swift_endAccess(&v16);
  }
  if (!v9)
  {
    if (*(_QWORD *)(*(_QWORD *)v7 + 16))
      sub_10040C748();
  }
}

uint64_t sub_10040C584()
{
  uint64_t v0;

  return sub_10040B830(v0);
}

void sub_10040C58C(char a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _BYTE v19[24];

  v6 = a1 & 1;
  v7 = v3 + 32;
  swift_beginAccess(v3 + 32, v19, 0, 0);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  if ((sub_1004778AC(v6, v8) & 1) != 0)
  {
    v10 = static os_log_type_t.info.getter();
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v11._countAndFlagsBits = 0x6F69747265737361;
    v11._object = (void *)0xEE00203D2D20736ELL;
    String.append(_:)(v11);
    v18 = v6;
    _print_unlocked<A, B>(_:_:)(&v18, &v16, &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12._countAndFlagsBits = 23328;
    v12._object = (void *)0xE200000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = a2;
    v13._object = a3;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 93;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15 = v17;
    sub_10040B384(v10, v16, v17);
    swift_bridgeObjectRelease(v15);
    swift_beginAccess(v7, &v16, 33, 0);
    sub_100444CBC(v6);
    swift_endAccess(&v16);
  }
  if (v9)
  {
    if (!*(_QWORD *)(*(_QWORD *)v7 + 16))
      sub_10040C900();
  }
}

uint64_t sub_10040C700()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10040C73C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10040BC90(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

void sub_10040C748()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  char *v3;
  os_log_type_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  _BYTE *v15;

  v1 = v0;
  v2 = (void *)v0[3];
  v3 = (char *)objc_msgSend(v2, "dataSource");
  v15 = *(id *)&v3[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v15[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 1;
  if (((*(uint64_t (**)(void))(*v1 + 144))() & 1) == 0)
    goto LABEL_8;
  v4 = static os_log_type_t.info.getter();
  v5 = objc_msgSend(v2, "view", sub_10040B384(v4, 0x746F687370616E73, 0xEC000000676E6974));
  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "snapshotViewAfterScreenUpdates:", 0);

  if (!v7)
  {
LABEL_8:

    return;
  }
  v8 = objc_msgSend(v2, "view");
  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "addSubview:", v7);

  v10 = objc_msgSend(v7, "window");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setUserInteractionEnabled:", 0);

  }
  v12 = objc_msgSend(v7, "window");

  v13 = (void *)v1[5];
  v14 = (void *)v1[6];
  v1[5] = v7;
  v1[6] = v12;
  sub_100146170(v13, v14);
}

void sub_10040C900()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  os_log_type_t v7;
  id v8;
  void *v9;
  void *v10;
  _BYTE *v11;

  v1 = v0;
  v2 = (char *)objc_msgSend(*(id *)(v0 + 24), "dataSource");
  v11 = *(id *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v11[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
  v3 = *(void **)(v1 + 40);
  if (v3)
  {
    v4 = *(void **)(v1 + 48);
    v5 = v4;
    v6 = v3;
    v7 = static os_log_type_t.info.getter();
    objc_msgSend(v6, "removeFromSuperview", sub_10040B384(v7, 0xD000000000000012, 0x8000000100533360));
    if (v4)
    {
      v8 = v5;
      objc_msgSend(v8, "setUserInteractionEnabled:", 1);

      v6 = v8;
    }

    v9 = *(void **)(v1 + 40);
    v10 = *(void **)(v1 + 48);
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 48) = 0;
    sub_100146170(v9, v10);
  }
  else
  {

  }
}

void sub_10040CA28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100146170(*(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t DOCHierarchyController.BrowsedLocationRenameCoordinator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100146170(*(void **)(v0 + 40), *(void **)(v0 + 48));
  return v0;
}

uint64_t DOCHierarchyController.BrowsedLocationRenameCoordinator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100146170(*(void **)(v0 + 40), *(void **)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t sub_10040CAB4()
{
  return 0x6E6F697461636F4CLL;
}

BOOL sub_10040CAD8()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(*(id *)(v0 + 16), "sourceIdentifier");
  if ((DOCDocumentSourceIdentifier.isICloud.getter() & 1) != 0)
  {

    v2 = 1;
  }
  else
  {
    v3 = DOCDocumentSourceIdentifierLocal;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v9 = v8;
    if (v4 == v7 && v6 == v8)
      v2 = 1;
    else
      v2 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);

    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v9);
  }
  return (v2 & 1) == 0;
}

void sub_10040CB9C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  unint64_t v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;

  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - v9;
  __chkstk_darwin(v11);
  v43 = (char *)&v38 - v12;
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v40 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v41 = (char *)&v38 - v17;
  v19.n128_f64[0] = __chkstk_darwin(v18);
  v39 = (char *)&v38 - v20;
  v21 = static os_log_type_t.info.getter(v19);
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease(v45);
  v44 = 0xD000000000000023;
  v45 = 0x80000001005332D0;
  v42 = a1;
  if (a2)
    v22 = a1;
  else
    v22 = 7104878;
  if (a2)
    v23 = a2;
  else
    v23 = (void *)0xE300000000000000;
  swift_bridgeObjectRetain(a2);
  v24._countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v23);
  v25 = v45;
  sub_10040B384(v21, v44, v45);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
  if (!a2)
  {
    sub_10040C58C(0, 0xD000000000000022, (void *)0x8000000100533300);
    return;
  }
  v27 = objc_msgSend(*(id *)(v2 + 16), "fileProviderItem", v26);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "fileURL");

    if (v29)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v30(v7, 0, 1, v13);
    }
    else
    {
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v30(v7, 1, 1, v13);
    }
    v31 = (uint64_t)v43;
    sub_1000B34E4((uint64_t)v7, (uint64_t)v10);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (v32((uint64_t)v10, 1, v13))
    {
      sub_10000CB4C((uint64_t)v10, &qword_100643470);
      v30((char *)v31, 1, 1, v13);
    }
    else
    {
      v33 = v40;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v40, v10, v13);
      v34 = sub_10000CB4C((uint64_t)v10, &qword_100643470);
      v35 = v41;
      URL.deletingLastPathComponent()(v34);
      v36 = *(void (**)(char *, uint64_t))(v14 + 8);
      v36(v33, v13);
      URL.appendingPathComponent(_:)(v42, a2);
      v36(v35, v13);
      v30((char *)v31, 0, 1, v13);
      if (v32(v31, 1, v13) != 1)
      {
        v37 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v39, v31, v13);
        DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(afterUpdatingBrowsedLocationTo:)();
        v36(v37, v13);
        return;
      }
    }
  }
  else
  {
    v31 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v43, 1, 1, v13);
  }
  sub_10000CB4C(v31, &qword_100643470);
  sub_10040C58C(0, 0xD000000000000024, (void *)0x8000000100533330);
}

uint64_t sub_10040CF80()
{
  return 0x6E6F697461636F4CLL;
}

uint64_t sub_10040CFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    v3 = sub_10006922C(&qword_100654830);
    swift_allocObject(v3, 32, 7);
    v4 = swift_retain();
    v1 = NSNotification.SubscriptionsController.init(observee:)(v4);
    v5 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v1;
}

uint64_t sub_10040D020(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  __n128 v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD aBlock[3];
  void *v62;
  uint64_t (*v63)();
  _QWORD *v64;

  v4 = v3;
  v54 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  __chkstk_darwin(v7);
  v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(*(id *)(v3 + 24), "hierarchyController");
  v16 = sub_1001D5A88();

  v17 = _s30BrowsedLocationMoveCoordinatorC17CoordinationStateCMa();
  v18 = swift_allocObject(v17, 32, 7);
  *(_QWORD *)(v18 + 16) = 0;
  v19 = dispatch_group_create();
  *(_QWORD *)(v18 + 24) = v19;
  DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
  v21 = static os_log_type_t.info.getter(v20);
  sub_10040B384(v21, 0xD000000000000028, 0x8000000100533180);
  dispatch_group_enter(v19);
  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject(&unk_1005E96D0, 64, 7);
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v18;
  v23[5] = a3;
  v23[6] = v16;
  v23[7] = v4;
  swift_retain();
  v24 = a3;
  swift_retain();
  v25 = sub_100174E78((uint64_t)v14, (uint64_t)&unk_100654820, (uint64_t)v23);
  swift_release(v25);
  v27 = static os_log_type_t.info.getter(v26);
  sub_10040B384(v27, 0xD000000000000022, 0x80000001005331B0);
  dispatch_group_enter(*(dispatch_group_t *)(v18 + 24));
  v28 = sub_10040CFA0();
  if (qword_100640D98 != -1)
    swift_once(&qword_100640D98, sub_10015C1E8);
  v29 = qword_1006726A8;
  v62 = (void *)type metadata accessor for DOCMoveOperation();
  aBlock[0] = a1;
  v30 = swift_allocObject(&unk_1005E96F8, 32, 7);
  *(_QWORD *)(v30 + 16) = v4;
  *(_QWORD *)(v30 + 24) = v18;
  v31 = (void *)objc_opt_self(NSOperationQueue);
  swift_retain();
  swift_retain();
  v32 = a1;
  v33 = objc_msgSend(v31, "mainQueue");
  (*(void (**)(uint64_t, _QWORD *, id, void (*)(uint64_t, uint64_t), uint64_t))(*(_QWORD *)v28 + 152))(v29, aBlock, v33, sub_10040E89C, v30);
  v35 = v34;
  swift_release(v30);

  swift_release(v28);
  swift_bridgeObjectRelease(v35);
  sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
  v36 = swift_allocObject(&unk_1005E9720, 32, 7);
  *(_QWORD *)(v36 + 16) = v4;
  *(_QWORD *)(v36 + 24) = v4;
  v37 = *(void **)(v18 + 24);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  swift_retain_n(v4, 2);
  v38 = v37;
  v39 = (void *)static OS_dispatch_queue.main.getter(v38);
  v40 = (_QWORD *)swift_allocObject(&unk_1005E9748, 72, 7);
  v40[2] = v4;
  v40[3] = v32;
  v41 = v54;
  v40[4] = v54;
  v40[5] = sub_10040E8A8;
  v40[6] = v36;
  v40[7] = v18;
  v40[8] = v24;
  v63 = sub_10040E8FC;
  v64 = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  v62 = &unk_1005E9760;
  v42 = _Block_copy(aBlock);
  swift_retain();
  v43 = v24;
  swift_retain();
  v44 = v32;
  v45 = v41;
  swift_retain();
  static DispatchQoS.unspecified.getter(v46);
  v60 = _swiftEmptyArrayStorage;
  v47 = sub_10008BAAC();
  v48 = sub_10006922C((uint64_t *)&unk_100647540);
  v49 = sub_1000791AC();
  v50 = v57;
  v51 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v48, v49, v59, v47);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v11, v50, v39, v42);
  _Block_release(v42);
  swift_release(v18);
  swift_release(v36);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v56);
  return swift_release(v64);
}

uint64_t sub_10040D4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch(sub_10040D50C, 0, 0);
}

uint64_t sub_10040D50C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = objc_msgSend(*(id *)(v0 + 128), "fileProviderItem");
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v2 = v1;
  v3 = objc_msgSend(v1, "itemID");
  *(_QWORD *)(v0 + 144) = v3;

  if (!v3)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v4 = v0 + 16;
  v5 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  *(_QWORD *)(v0 + 152) = v5;
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10040D634;
  v6 = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v7 = (_QWORD *)(v0 + 80);
  v7[1] = 0x40000000;
  v7[2] = sub_10040D890;
  v7[3] = &unk_1005E9850;
  v7[4] = v6;
  objc_msgSend(v5, "fetchParentsForItemID:recursively:completionHandler:", v3, 1, v7);
  return swift_continuation_await(v4);
}

uint64_t sub_10040D634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 160) = v1;
  if (v1)
    v2 = sub_10040D834;
  else
    v2 = sub_10040D694;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10040D694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  void *v15;
  __n128 v16;

  v1 = *(_QWORD *)(v0 + 120);

  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v1);
    v12 = *(_QWORD *)(v0 + 136);
    v13 = *(void **)(v0 + 144);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(v12);
    v15 = sub_10040EDF8(v14, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);

    v16 = swift_bridgeObjectRelease(v12);
    return (*(uint64_t (**)(void *, __n128))(v0 + 8))(v15, v16);
  }
  if (v1 < 0)
    v11 = v1;
  else
    v11 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v1);
  if (!v2)
    goto LABEL_14;
LABEL_3:
  result = specialized ContiguousArray.reserveCapacity(_:)(v2);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, "itemID");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
    }
    while (v2 != v4);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10040D834()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  swift_willThrow();

  swift_errorRelease(v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10040D890(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10006922C((uint64_t *)&unk_100643490);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10040D938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v10;

  v7[2] = a4;
  v7[3] = a7;
  v10 = (_QWORD *)swift_task_alloc(dword_10065482C);
  v7[4] = v10;
  *v10 = v7;
  v10[1] = sub_10040D9A0;
  v10[16] = a5;
  v10[17] = a6;
  return swift_task_switch(sub_10040D50C, 0, 0);
}

uint64_t sub_10040D9A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10040D9FC, 0, 0);
}

uint64_t sub_10040D9FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __n128 v3;
  os_log_type_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 40);

  v4 = static os_log_type_t.info.getter(v3);
  sub_10040B384(v4, 0xD000000000000025, 0x80000001005332A0);
  dispatch_group_leave(*(dispatch_group_t *)(v1 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10040DA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v5;

  v5 = static os_log_type_t.info.getter();
  sub_10040B384(v5, 0xD00000000000001ALL, 0x8000000100533280);
  dispatch_group_leave(*(dispatch_group_t *)(a4 + 24));
}

uint64_t sub_10040DAAC(uint64_t a1, uint64_t a2)
{
  _QWORD v4[4];

  sub_10040C58C(0, 0xD000000000000023, (void *)0x8000000100532E50);
  v4[3] = type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator();
  v4[0] = a2;
  swift_retain();
  return sub_100068588(v4);
}

uint64_t sub_10040DB10(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(double), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  os_log_type_t v22;
  id v23;
  __n128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  unint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  os_log_type_t v50;
  double v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(double);
  uint64_t v63;
  _QWORD aBlock[5];
  _QWORD *v65;
  void *v66;

  v55 = a6;
  v56 = a7;
  v62 = a4;
  v63 = a5;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchTime(0);
  v15 = *(_QWORD *)(v57 - 8);
  v16 = __chkstk_darwin(v57);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v52 - v19;
  v22 = static os_log_type_t.info.getter(v21);
  v23 = objc_msgSend(a2, "transferResults", sub_10040B384(v22, 0xD00000000000001CLL, 0x80000001005331E0));
  if (v23)
  {
    v25 = v23;
    v54 = v10;
    v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, v26, &protocol witness table for AnyHashable);

    v66 = a3;
    v28 = sub_1002B1BB4();
    v29 = a3;
    AnyHashable.init<A>(_:)(&v66, v26, v28);
    if (*(_QWORD *)(v27 + 16))
    {
      v30 = sub_100067654((uint64_t)aBlock);
      if ((v31 & 1) != 0)
      {
        v32 = *(id *)(*(_QWORD *)(v27 + 56) + 8 * v30);
        swift_bridgeObjectRelease(v27);
        sub_100067748((uint64_t)aBlock);
        v33 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        v52 = static OS_dispatch_queue.main.getter(v33);
        static DispatchTime.now()(v52);
        + infix(_:_:)(v18, 0.25);
        v53 = *(void (**)(char *, uint64_t))(v15 + 8);
        v34 = v57;
        v53(v18, v57);
        v35 = (_QWORD *)swift_allocObject(&unk_1005E9798, 64, 7);
        v36 = v56;
        v35[2] = v55;
        v35[3] = a1;
        v35[4] = v36;
        v35[5] = v32;
        v37 = v63;
        v35[6] = v62;
        v35[7] = v37;
        aBlock[4] = sub_10040E954;
        v65 = v35;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004A82C;
        aBlock[3] = &unk_1005E97B0;
        v38 = _Block_copy(aBlock);
        v39 = v65;
        v40 = v32;
        swift_retain();
        swift_retain();
        v41 = v36;
        swift_retain();
        v42 = swift_release(v39);
        static DispatchQoS.unspecified.getter(v42);
        aBlock[0] = _swiftEmptyArrayStorage;
        v43 = sub_10008BAAC();
        v44 = sub_10006922C((uint64_t *)&unk_100647540);
        v45 = sub_1000791AC();
        v46 = v60;
        v47 = v54;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v54, v43);
        v48 = (void *)v52;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v14, v46, v38);
        _Block_release(v38);

        (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v47);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
        return ((uint64_t (*)(char *, uint64_t))v53)(v20, v34);
      }
    }
    swift_bridgeObjectRelease(v27);
    sub_100067748((uint64_t)aBlock);
  }
  v50 = static os_log_type_t.info.getter(v24);
  v51 = sub_10040B384(v50, 0xD00000000000002DLL, 0x8000000100533200);
  return v62(v51);
}

uint64_t sub_10040DEFC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  uint64_t v19;
  Swift::String v20;
  void *object;
  __n128 v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;
  id v27;
  void *v30;
  _QWORD v31[2];

  v10 = *(void **)(a1 + 16);
  v11 = v10;
  _StringGuts.grow(_:)(40);
  strcpy((char *)v31, "resetting to (");
  HIBYTE(v31[1]) = -18;
  v12 = objc_msgSend(a3, "description", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._object = (void *)0x8000000100533230;
  v17._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v17);
  v30 = v10;
  v18 = v11;
  v19 = sub_10006922C(&qword_100655B90);
  v20._countAndFlagsBits = String.init<A>(describing:)(&v30, v19);
  object = v20._object;
  String.append(_:)(v20);
  v22 = swift_bridgeObjectRelease(object);
  v23 = v31[0];
  v24 = v31[1];
  LOBYTE(v15) = static os_log_type_t.info.getter(v22);
  swift_bridgeObjectRetain(v24);
  sub_10040B384((os_log_type_t)v15, v23, v24);
  swift_bridgeObjectRelease_n(v24, 2);
  v25 = objc_msgSend(*(id *)(a2 + 24), "hierarchyController");
  v26 = (_QWORD *)swift_allocObject(&unk_1005E97E8, 48, 7);
  v26[2] = a2;
  v26[3] = a4;
  v26[4] = a5;
  v26[5] = a6;
  swift_retain();
  v27 = a4;
  swift_retain();
  sub_1001D4F4C(a3, v10, 0, 1, 0, (void (*)(void))sub_10040E968, (uint64_t)v26);

  return swift_release(v26);
}

uint64_t sub_10040E0F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  _QWORD *v41;

  v33 = a3;
  v34 = a4;
  v32 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  v18 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  static DispatchTime.now()(v19);
  + infix(_:_:)(v15, 0.5);
  v35 = *(void (**)(char *, uint64_t))(v12 + 8);
  v35(v15, v11);
  v20 = (_QWORD *)swift_allocObject(&unk_1005E9810, 48, 7);
  v22 = v32;
  v21 = v33;
  v20[2] = a1;
  v20[3] = v22;
  v23 = v34;
  v20[4] = v21;
  v20[5] = v23;
  aBlock[4] = sub_10040E9AC;
  v41 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9828;
  v24 = _Block_copy(aBlock);
  v25 = v41;
  swift_retain();
  v26 = v22;
  swift_retain();
  v27 = swift_release(v25);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = _swiftEmptyArrayStorage;
  v28 = sub_10008BAAC();
  v29 = sub_10006922C((uint64_t *)&unk_100647540);
  v30 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v5, v28);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  return ((uint64_t (*)(char *, uint64_t))v35)(v17, v36);
}

uint64_t sub_10040E388(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  os_log_type_t v5;

  v5 = static os_log_type_t.info.getter();
  sub_10040B384(v5, 0xD000000000000024, 0x8000000100533250);
  DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(a2, 1, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  return a3();
}

uint64_t sub_10040E408()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + 56));
}

uint64_t DOCHierarchyController.BrowsedLocationMoveCoordinator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100146170(*(void **)(v0 + 40), *(void **)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t DOCHierarchyController.BrowsedLocationMoveCoordinator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_100146170(*(void **)(v0 + 40), *(void **)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for DOCHierarchyController.ChangeCoordinator()
{
  return objc_opt_self(_TtCC5Files22DOCHierarchyController17ChangeCoordinator);
}

uint64_t type metadata accessor for DOCHierarchyController.SuspendableUIChangeCoordinator()
{
  return objc_opt_self(_TtCC5Files22DOCHierarchyController30SuspendableUIChangeCoordinator);
}

uint64_t type metadata accessor for DOCHierarchyController.BrowsedLocationRenameCoordinator()
{
  return objc_opt_self(_TtCC5Files22DOCHierarchyController32BrowsedLocationRenameCoordinator);
}

uint64_t type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator()
{
  return objc_opt_self(_TtCC5Files22DOCHierarchyController30BrowsedLocationMoveCoordinator);
}

unint64_t sub_10040E510()
{
  void *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = (char *)objc_msgSend(v0, "hierarchyController");
  v2 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v12, 0, 0);
  v3 = *v2;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_14:

    swift_bridgeObjectRelease(v3);
    return 0;
  }
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v4)
    goto LABEL_14;
LABEL_3:
  result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v3);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    v7 = v6;

    swift_bridgeObjectRelease(v3);
    v8 = type metadata accessor for DOCHierarchyController.BrowsedLocationRenameCoordinator();
    v9 = (_QWORD *)swift_allocObject(v8, 56, 7);
    v9[5] = 0;
    v9[6] = 0;
    v9[3] = v0;
    v9[4] = &_swiftEmptySetSingleton;
    v9[2] = v7;
    v10 = v0;
    if (sub_10040CAD8())
      return (unint64_t)v9;
    swift_release(v9);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t _s30BrowsedLocationMoveCoordinatorC17CoordinationStateCMa()
{
  return objc_opt_self(_TtCFCC5Files22DOCHierarchyController30BrowsedLocationMoveCoordinatorP33_4249E0C2EDAEE12A8582059FBE5217DB20beginCoordinatedMoveFTCS_16DOCMoveOperation2ofCSo6FPItem14toParentFolderCSo19DOCConcreteLocation_T_L_17CoordinationState);
}

ValueMetadata *_s30SuspendableUIChangeCoordinatorC15SnapshotContextVMa()
{
  return &_s30SuspendableUIChangeCoordinatorC15SnapshotContextVN;
}

uint64_t _s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10040E6E8 + 4 * byte_1004E7895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10040E71C + 4 * asc_1004E7890[v4]))();
}

uint64_t sub_10040E71C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040E724(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10040E72CLL);
  return result;
}

uint64_t sub_10040E738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10040E740);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10040E744(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040E74C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionOMa()
{
  return &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON;
}

unint64_t sub_10040E76C()
{
  unint64_t result;

  result = qword_100654810;
  if (!qword_100654810)
  {
    result = swift_getWitnessTable(&unk_1004E79F8, &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON);
    atomic_store(result, &qword_100654810);
  }
  return result;
}

uint64_t sub_10040E7B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10040E7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = (_QWORD *)swift_task_alloc(dword_10065481C);
  v7 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1000EA854;
  v4[2] = v2;
  v4[3] = v3;
  v5 = swift_task_alloc(dword_10065482C);
  v4[4] = v5;
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = sub_10040D9A0;
  *(_OWORD *)(v5 + 128) = v7;
  return swift_task_switch(sub_10040D50C, 0, 0);
}

void sub_10040E89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10040DA64(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10040E8A8()
{
  uint64_t v0;

  return sub_10040DAAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10040E8B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10040E8FC()
{
  uint64_t v0;

  return sub_10040DB10(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(double))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_10040E910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10040E954()
{
  uint64_t v0;

  return sub_10040DEFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10040E968()
{
  uint64_t v0;

  return sub_10040E0F4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10040E978()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10040E9AC()
{
  uint64_t v0;

  return sub_10040E388(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

void sub_10040E9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  Swift::UInt v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  unint64_t v26;
  char *v27;
  _BYTE *v28;
  void *v29;
  void *v30;
  id v31;
  os_log_type_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE v43[24];
  char v44;

  v3 = a1;
  v39 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (uint64_t *)(a2 + 32);
  v37 = (_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain(a1);
  swift_beginAccess(v7, v43, 0, 0);
  v8 = 0;
  v40 = (unint64_t)(v4 + 63) >> 6;
  v36 = v3;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_23:
    v14 = *v7;
    if (*(_QWORD *)(*v7 + 16))
    {
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
      Hasher.init(_seed:)(&v41, *(_QWORD *)(v14 + 40));
      Hasher._combine(_:)(v15);
      v16 = Hasher._finalize()();
      v17 = -1 << *(_BYTE *)(v14 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      {
        v19 = *(_QWORD *)(v14 + 48);
        if ((_DWORD)v15 == *(unsigned __int8 *)(v19 + v18))
        {
LABEL_29:
          v21 = static os_log_type_t.info.getter();
          v41 = 0;
          v42 = 0xE000000000000000;
          _StringGuts.grow(_:)(21);
          v22._countAndFlagsBits = 0x6F69747265737361;
          v22._object = (void *)0xEE00203D2D20736ELL;
          String.append(_:)(v22);
          v44 = v15;
          _print_unlocked<A, B>(_:_:)(&v44, &v41, &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          v23._countAndFlagsBits = 23328;
          v23._object = (void *)0xE200000000000000;
          String.append(_:)(v23);
          v24._countAndFlagsBits = 0x74756F656D6974;
          v24._object = (void *)0xE700000000000000;
          String.append(_:)(v24);
          v25._countAndFlagsBits = 93;
          v25._object = (void *)0xE100000000000000;
          String.append(_:)(v25);
          v26 = v42;
          sub_10040B384(v21, v41, v42);
          swift_bridgeObjectRelease(v26);
          swift_beginAccess(v7, &v41, 33, 0);
          sub_100444CBC(v15);
          swift_endAccess(&v41);
        }
        else
        {
          v20 = ~v17;
          while (1)
          {
            v18 = (v18 + 1) & v20;
            if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
              break;
            if ((_DWORD)v15 == *(unsigned __int8 *)(v19 + v18))
              goto LABEL_29;
          }
        }
      }
      if (!*(_QWORD *)(*v7 + 16))
      {
        v27 = (char *)objc_msgSend(*(id *)(a2 + 24), "dataSource");
        v28 = *(id *)&v27[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

        v28[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
        v29 = *(void **)(a2 + 40);
        if (v29)
        {
          v30 = *(void **)(a2 + 48);
          v38 = v30;
          v31 = v29;
          v32 = static os_log_type_t.info.getter();
          objc_msgSend(v31, "removeFromSuperview", sub_10040B384(v32, 0xD000000000000012, 0x8000000100533360));
          if (v30)
          {
            v33 = v38;
            objc_msgSend(v33, "setUserInteractionEnabled:", 1);

            v31 = v33;
          }
          v3 = v36;

          v34 = *(void **)(a2 + 40);
          v35 = *(void **)(a2 + 48);
          *v37 = 0;
          v37[1] = 0;
          sub_100146170(v34, v35);
        }
        else
        {

        }
      }
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v11 >= v40)
    goto LABEL_35;
  v12 = *(_QWORD *)(v39 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_22;
  v8 = v11 + 1;
  if (v11 + 1 >= v40)
    goto LABEL_35;
  v12 = *(_QWORD *)(v39 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 2;
  if (v11 + 2 >= v40)
    goto LABEL_35;
  v12 = *(_QWORD *)(v39 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 3;
  if (v11 + 3 >= v40)
    goto LABEL_35;
  v12 = *(_QWORD *)(v39 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v13 = v11 + 4;
  if (v13 >= v40)
  {
LABEL_35:
    swift_release(v3);
    return;
  }
  v12 = *(_QWORD *)(v39 + 8 * v13);
  v8 = v13;
  if (v12)
  {
LABEL_22:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v40)
      goto LABEL_35;
    v12 = *(_QWORD *)(v39 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_37:
  __break(1u);
}

void *sub_10040EDF8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v2 = a1;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v3)
      goto LABEL_3;
LABEL_53:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
LABEL_49:
  if (v2 < 0)
    v27 = v2;
  else
    v27 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v27);
  if (!v3)
    goto LABEL_53;
LABEL_3:
  v4 = v2 & 0xC000000000000001;
  v5 = v2 & 0xFFFFFFFFFFFFFF8;
  v6 = v2 + 32;
  v7 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v8 = a2;
  else
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
  v28 = v8;
  v29 = v2 & 0xC000000000000001;
  v33 = a2 & 0xC000000000000001;
  v30 = v2;
  v31 = v2 + 32;
  v32 = v2 & 0xFFFFFFFFFFFFFF8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (__OFSUB__(v3--, 1))
          goto LABEL_45;
        if (v4)
        {
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v2);
        }
        else
        {
          if ((v3 & 0x8000000000000000) != 0)
            goto LABEL_47;
          if (v3 >= *(_QWORD *)(v5 + 16))
            goto LABEL_48;
          v10 = *(id *)(v6 + 8 * v3);
        }
        v11 = v10;
        v12 = objc_msgSend(v10, "fileProviderItem");
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, "itemID");

          if (v14)
            break;
        }

        if (!v3)
          goto LABEL_53;
      }
      if ((unint64_t)a2 >> 62)
        break;
      v15 = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRetain(a2);
      if (v15)
        goto LABEL_18;
LABEL_37:

      swift_bridgeObjectRelease(a2);
      if (!v3)
        goto LABEL_53;
    }
    swift_bridgeObjectRetain(a2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v28);
    if (!v15)
      goto LABEL_37;
LABEL_18:
    v16 = v33 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2) : *(id *)(a2 + 32);
    v17 = v16;
    sub_10004F2F0(0, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
    v18 = static NSObject.== infix(_:_:)(v17, v14);

    if ((v18 & 1) != 0)
      break;
    if (v15 != 1)
    {
      if (v33)
      {
        v19 = 1;
        while (1)
        {
          v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a2);
          v21 = v19 + 1;
          if (__OFADD__(v19, 1))
            break;
          v22 = v20;
          v2 = static NSObject.== infix(_:_:)(v20, v14);
          swift_unknownObjectRelease(v22);
          if ((v2 & 1) != 0)
            goto LABEL_40;
          ++v19;
          if (v21 == v15)
            goto LABEL_33;
        }
        __break(1u);
LABEL_45:
        __break(1u);
      }
      else
      {
        v2 = 5;
        while (1)
        {
          v23 = v2 - 3;
          if (__OFADD__(v2 - 4, 1))
            break;
          v24 = *(id *)(a2 + 8 * v2);
          v25 = static NSObject.== infix(_:_:)(v24, v14);

          if ((v25 & 1) != 0)
          {
LABEL_40:

            swift_bridgeObjectRelease(a2);
            v2 = v30;
            goto LABEL_41;
          }
          ++v2;
          if (v23 == v15)
          {
LABEL_33:

            swift_bridgeObjectRelease(a2);
            v2 = v30;
            v4 = v29;
            goto LABEL_34;
          }
        }
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }

    swift_bridgeObjectRelease(a2);
LABEL_34:
    v6 = v31;
    v5 = v32;
    v7 = a2 & 0xFFFFFFFFFFFFFF8;
    if (!v3)
      goto LABEL_53;
  }

  swift_bridgeObjectRelease(a2);
LABEL_41:
  swift_bridgeObjectRelease(v2);
  return v11;
}

uint64_t sub_10040F100(char *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  if ((objc_msgSend(a1, "byCopy") & 1) != 0)
    return 0;
  v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems];
  if (!((unint64_t)v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      result = swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems]);
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 < 0)
    v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems];
  else
    v20 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems]);
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v6);
  if (v21 != 1)
    return 0;
  swift_bridgeObjectRetain(v6);
  result = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!result)
  {
    swift_bridgeObjectRelease(v6);
    return 0;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v6 + 32);
LABEL_8:
    v9 = v8;
    swift_bridgeObjectRelease(v6);
    v10 = v9;
    v11 = objc_msgSend(a2, "fileProviderItem");
    if (v11)
    {
      v12 = v11;
      v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v10 = v10;
      v14 = static NSObject.== infix(_:_:)(v10, v12);

      if ((v14 & 1) != 0)
      {
        v15 = type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator();
        v16 = (_QWORD *)swift_allocObject(v15, 64, 7);
        v16[6] = 0;
        v16[7] = 0;
        v16[4] = &_swiftEmptySetSingleton;
        v16[5] = 0;
        v16[2] = a2;
        v16[3] = a3;
        v17 = a2;
        v18 = a3;
        v19 = (void *)DOCNode.representedLocation.getter(v13);
        sub_10040D020(a1, v10, v19);

        swift_release(v16);
        return 1;
      }
    }
    else
    {

    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10040F2F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

double sub_10040F33C()
{
  uint64_t v0;

  return sub_10040BE9C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10040F34C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10040F370()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10040F394()
{
  uint64_t v0;

  return sub_10040BACC(v0);
}

void sub_10040F39C()
{
  sub_10040C58C(1, 0xD000000000000018, (void *)0x80000001005333E0);
  sub_10040C58C(0, 0xD000000000000023, (void *)0x8000000100532E50);
}

id sub_10040F428(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics];
  __asm { FMOV            V1.2D, #4.0 }
  *(_OWORD *)v4 = xmmword_1004E7A20;
  *((_OWORD *)v4 + 1) = _Q1;
  *((_QWORD *)v4 + 4) = 0x4010000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel] = a1;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  swift_retain(a1);
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100019A38();

  swift_release(a1);
  return v10;
}

void sub_10040F554(uint64_t a1, void *a2, char a3)
{
  sub_10040FE44(a2, a3);
}

uint64_t sub_10040F580(uint64_t a1, void *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  sub_1004113A0(a2, a3, a4, a5);
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate, v6);
  if (result)
  {
    v8 = result;
    v9 = swift_allocObject(&unk_1005E9B88, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    v12[4] = sub_1000AFDEC;
    v13 = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10004A82C;
    v12[3] = &unk_1005E9BA0;
    v10 = _Block_copy(v12);
    v11 = v13;
    swift_unknownObjectRetain(v8);
    swift_release(v11);
    DOCRunInMainThread(v10);
    _Block_release(v10);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

char *sub_10040F660()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  void *v4;
  char *v5;

  v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar);
  v3 = v2;
  if (v2 == (char *)1)
  {
    v3 = sub_10040F6CC(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_10008D9C4(v4);
  }
  sub_1000B0268(v2);
  return v3;
}

char *sub_10040F6CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  uint64_t v15;
  Class v16;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
  swift_retain();
  v3 = sub_1000E71DC();
  swift_release(v2);
  if (!v3)
    return 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorView());
  swift_retain();
  v5 = sub_1004119FC(0, v3, v4, 0.3);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004DA350;
  v9 = objc_msgSend(v5, "heightAnchor");
  v10 = a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics;
  v11 = objc_msgSend(v9, "constraintEqualToConstant:", *(double *)(a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics));

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v5, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", *(double *)(v10 + 8));

  isa = NSLayoutConstraint.with(priority:)((__C::UILayoutPriority)1144750080).super.isa;
  *(_QWORD *)(v8 + 40) = isa;
  specialized Array._endMutation()(v15);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  v16 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v16, swift_bridgeObjectRelease(v8).n128_f64[0]);
  swift_release(v3);

  return v5;
}

id sub_10040F8B8()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_10040F8CC);
}

id sub_10040F8CC(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, v4);

  objc_msgSend(v2, "setFont:", v5);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v6);

  LODWORD(v7) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v7);
  LODWORD(v8) = 1148846080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v8);
  return v2;
}

id sub_10040FA40()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel, (uint64_t (*)(uint64_t))sub_10040FA54);
}

id sub_10040FA54(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  NSString v7;
  double v8;
  double v9;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v3, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, v4);

  objc_msgSend(v2, "setFont:", v5);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 1);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v6);

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v7);

  LODWORD(v8) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v8);
  LODWORD(v9) = 1148846080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v9);
  return v2;
}

id sub_10040FBE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  }
  else
  {
    v4 = sub_10040FC3C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10040FC3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  uint64_t v16;

  v0 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  static UIButton.Configuration.plain()();

  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v3);
  UIButton.Configuration.titleAlignment.setter(v6);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v2, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  UIButton.configuration.setter(v2);
  objc_msgSend(v12, "setDeliversTouchesForGesturesToSuperview:", 0);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 0, v13);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v12, "setContentHuggingPriority:forAxis:", 0, v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

void sub_10040FE44(void *a1, char a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  if (a2)
  {
    if (a2 != 1)
      __asm { BR              X9 }
    v4 = a1;
    v5 = sub_1000921C4();
    v6 = objc_msgSend(v4, "title");
    objc_msgSend(v5, "setText:", v6);

    sub_10008E938(a1, 1);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
    v8 = *(void **)(v7 + 32);
    swift_retain();
    v9 = v8;
    if (objc_msgSend(v9, "isiCloudDriveProvider"))
    {
      v10 = 0x64756F6C4369;
      swift_release(v7);

      v11 = 0xE600000000000000;
    }
    else
    {
      v12 = objc_msgSend(v9, "providerDisplayName");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v11 = v13;
      swift_release(v7);

    }
    v14._countAndFlagsBits = 0xD000000000000017;
    v15._countAndFlagsBits = 0xD00000000000006CLL;
    v14._object = (void *)0x8000000100533600;
    v15._object = (void *)0x8000000100533620;
    v16 = DOCLocalizedDictionaryString(_:comment:)(v14, v15);
    v17 = sub_1000921C4();
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 112, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v19 + 56) = &type metadata for Int;
    *(_QWORD *)(v19 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v19 + 32) = a1;
    *(_QWORD *)(v19 + 96) = &type metadata for String;
    *(_QWORD *)(v19 + 104) = sub_10006A638();
    *(_QWORD *)(v19 + 72) = v10;
    *(_QWORD *)(v19 + 80) = v11;
    static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v19);
    v21 = v20;
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v16._object);
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "setText:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
}

char *sub_1004105EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *result;
  char *v19;
  char *v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  id v29;
  uint64_t KeyPath;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  char v37[24];
  Swift::String v38;

  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10006922C((uint64_t *)&unk_10064A080);
  v12 = __chkstk_darwin(v11);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v16 = &v37[-v15 - 8];
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a2, v17);
  if (result)
  {
    v19 = result;
    result = (char *)(id)_DocumentManagerBundle(result);
    if (result)
    {
      v20 = result;
      v38._object = (void *)0x8000000100533570;
      v21._countAndFlagsBits = 0x676E696D75736552;
      v21._object = (void *)0xAB00000000A680E2;
      v22.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v22.value._object = (void *)0xEB00000000656C62;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v38._countAndFlagsBits = 0xD00000000000003ALL;
      v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v38);

      v25 = sub_10040FBE0();
      UIButton.configuration.getter();
      v27 = type metadata accessor for UIButton.Configuration(0, v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v16, 1, v27))
      {
        swift_bridgeObjectRelease(v24._object);
        sub_100261834((uint64_t)v16, (uint64_t)v14);
        UIButton.configuration.setter(v14);

        sub_10026187C((uint64_t)v16);
      }
      else
      {
        swift_bridgeObjectRetain(v24._object);
        v28 = UIFontTextStyleFootnote;
        v29 = objc_msgSend(a3, "traitCollection");
        AttributeContainer.init()();
        AttributedString.init(_:attributes:)(v24._countAndFlagsBits, v24._object, v7);
        KeyPath = swift_getKeyPath(&unk_1004E7AA0);
        __chkstk_darwin(KeyPath);
        v31 = swift_getKeyPath(&unk_1004E7AD0);
        v36 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v28, v29);
        v32 = sub_1002793FC();
        AttributedString.subscript.setter(&v36, v31, v32);
        swift_bridgeObjectRelease(v24._object);

        v33 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 0, 1, v33);
        UIButton.Configuration.attributedTitle.setter(v10);
        UIButton.configuration.setter(v16);

      }
      v34 = sub_10040FBE0();
      objc_msgSend(v34, "setUserInteractionEnabled:", 0);

      v35 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel];
      swift_retain();
      sub_1000E6E0C();

      return (char *)swift_release(v35);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

char *sub_100410984(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *result;
  char *v19;
  char *v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  id v29;
  uint64_t KeyPath;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  char v37[24];
  Swift::String v38;

  v5 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v8);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10006922C((uint64_t *)&unk_10064A080);
  v12 = __chkstk_darwin(v11);
  v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v16 = &v37[-v15 - 8];
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a2, v17);
  if (result)
  {
    v19 = result;
    result = (char *)(id)_DocumentManagerBundle(result);
    if (result)
    {
      v20 = result;
      v38._object = (void *)0x8000000100533530;
      v21._countAndFlagsBits = 0xE2676E6973756150;
      v21._object = (void *)0xAA0000000000A680;
      v22.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v22.value._object = (void *)0xEB00000000656C62;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v38._countAndFlagsBits = 0xD000000000000039;
      v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v38);

      v25 = sub_10040FBE0();
      UIButton.configuration.getter();
      v27 = type metadata accessor for UIButton.Configuration(0, v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v16, 1, v27))
      {
        swift_bridgeObjectRelease(v24._object);
        sub_100261834((uint64_t)v16, (uint64_t)v14);
        UIButton.configuration.setter(v14);

        sub_10026187C((uint64_t)v16);
      }
      else
      {
        swift_bridgeObjectRetain(v24._object);
        v28 = UIFontTextStyleFootnote;
        v29 = objc_msgSend(a3, "traitCollection");
        AttributeContainer.init()();
        AttributedString.init(_:attributes:)(v24._countAndFlagsBits, v24._object, v7);
        KeyPath = swift_getKeyPath(&unk_1004E7AA0);
        __chkstk_darwin(KeyPath);
        v31 = swift_getKeyPath(&unk_1004E7AD0);
        v36 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v28, v29);
        v32 = sub_1002793FC();
        AttributedString.subscript.setter(&v36, v31, v32);
        swift_bridgeObjectRelease(v24._object);

        v33 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 0, 1, v33);
        UIButton.Configuration.attributedTitle.setter(v10);
        UIButton.configuration.setter(v16);

      }
      v34 = sub_10040FBE0();
      objc_msgSend(v34, "setUserInteractionEnabled:", 0);

      v35 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel];
      swift_retain();
      sub_1000E6DF0();

      return (char *)swift_release(v35);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100410D18(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  BOOL v20;
  double v21;
  unsigned int v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;

  v5 = v4;
  v7 = sub_100091ECC();
  v8 = objc_msgSend(v7, "arrangedSubviews");

  v9 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v16 = v10;
    else
      v16 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (!v11)
      goto LABEL_13;
  }
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  v12 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
    else
      v13 = *(id *)(v10 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = sub_100091ECC();
    objc_msgSend(v15, "removeArrangedSubview:", v14);

    objc_msgSend(v14, "removeFromSuperview");
  }
  while (v11 != v12);
LABEL_13:
  swift_bridgeObjectRelease_n(v10, 2);
  v17 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
  v18 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
  v19 = *(void **)(v18 + 160);
  if (v19)
  {
    v20 = objc_msgSend(v19, "contentType", swift_retain().n128_f64[0]) == 0;
  }
  else
  {
    *(_QWORD *)&v21 = swift_retain().n128_u64[0];
    v20 = 0;
  }
  v22 = objc_msgSend(*(id *)(v18 + 32), "isSyncStateMessagingSupported", v21, a4);
  swift_release(v18);
  if (v22 && !v20)
  {
    v23 = sub_100091ECC();
    v24 = sub_1000921C4();
    objc_msgSend(v23, "addArrangedSubview:", v24);

  }
  v25 = *(_QWORD *)(v5 + v17);
  swift_retain();
  if ((sub_10008E600() & 1) != 0)
  {
    sub_1000E7C74();
    v27 = v26;
    swift_release(v25);
    if (v27 > 0)
    {
      v28 = sub_100091ECC();
      v29 = sub_10040FA40();
      objc_msgSend(v28, "addArrangedSubview:", v29);

      v30 = sub_100091ECC();
      v31 = sub_10040FBE0();
      objc_msgSend(v30, "addArrangedSubview:", v31);

    }
  }
  else
  {
    swift_release(v25);
  }
  sub_10040FE44(a1, a2);
  sub_100091358(a1, a2);
}

void sub_100410FCC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v40;

  v6 = v4;
  v9 = sub_100091DEC();
  v10 = objc_msgSend(v9, "arrangedSubviews");

  v11 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  v40 = a1;
  v13 = a2;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v9 = (_QWORD *)v12;
    else
      v9 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v12);
    v14 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v14)
      goto LABEL_13;
  }
  else
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (!v14)
      goto LABEL_13;
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  v15 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
    else
      v16 = *(id *)(v12 + 8 * v15 + 32);
    v17 = v16;
    ++v15;
    v18 = sub_100091DEC();
    objc_msgSend(v18, "removeArrangedSubview:", v17);

    objc_msgSend(v17, "removeFromSuperview");
  }
  while (v14 != v15);
LABEL_13:
  swift_bridgeObjectRelease_n(v12, 2);
  v19 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
  v20 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
  swift_retain();
  v21 = sub_1000E7500();
  swift_release(v20);
  if ((v21 & 1) != 0)
  {
    v22 = sub_100091DEC();
    v23 = sub_10040F8B8();
    objc_msgSend(v22, "addArrangedSubview:", v23);

  }
  v9 = *(_QWORD **)(v6 + v19);
  v24 = (void *)v9[20];
  v5 = (char)v13;
  v13 = v40;
  if (v24)
  {
    if (objc_msgSend(v24, "contentType", swift_retain().n128_f64[0]) != (id)2 || (v25 = (void *)v9[20]) == 0)
    {
      swift_release(v9);
      goto LABEL_23;
    }
    v26 = objc_msgSend(v25, "actions");
    v27 = sub_10004F2F0(0, &qword_1006431A0, DOCICloudQuotaInAppAction_ptr);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    if (!((unint64_t)v12 >> 62))
    {
      v28 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_release(v9);
      goto LABEL_20;
    }
LABEL_33:
    if (v12 < 0)
      v38 = v12;
    else
      v38 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v28 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_release(v9);
    swift_bridgeObjectRelease(v12);
LABEL_20:
    swift_bridgeObjectRelease(v12);
    if (v28 > 0)
    {
      v29 = sub_100091DEC();
      v30 = sub_10040FA40();
      objc_msgSend(v29, "addArrangedSubview:", v30);

      v31 = sub_100091DEC();
      v32 = sub_10040FBE0();
      objc_msgSend(v31, "addArrangedSubview:", v32);

    }
  }
LABEL_23:
  if (v5 == 1)
  {
    v35 = v13;
    v36 = sub_10040F8B8();
    v37 = objc_msgSend(v35, "subTitle");
    objc_msgSend(v36, "setText:", v37);

    sub_10008E938(v13, 1);
  }
  else if (v5 == 2 && !v13)
  {
    v33 = sub_10040F8B8();
    if (a4)
      v34 = String._bridgeToObjectiveC()();
    else
      v34 = 0;
    objc_msgSend(v33, "setText:", v34);

  }
  sub_100091358(v13, v5);
}

void sub_1004113A0(void *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  uint64_t v32;
  void *v33;
  BOOL v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;

  v5 = v4;
  v7 = sub_100091FAC();
  v8 = objc_msgSend(v7, "arrangedSubviews");

  v9 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v16 = v10;
    else
      v16 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (!v11)
      goto LABEL_13;
  }
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  v12 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
    else
      v13 = *(id *)(v10 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = sub_100091FAC();
    objc_msgSend(v15, "removeArrangedSubview:", v14);

    objc_msgSend(v14, "removeFromSuperview");
  }
  while (v11 != v12);
LABEL_13:
  swift_bridgeObjectRelease_n(v10, 2);
  v17 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
  v18 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
  swift_retain();
  sub_10008E430();
  v20 = v19;
  swift_release(v18);
  if ((v20 & 1) != 0)
  {
    v21 = sub_10040F660();
    if (v21)
    {
      v22 = v21;
      v23 = sub_100091FAC();
      objc_msgSend(v23, "addArrangedSubview:", v22);

      v45 = (id)objc_opt_self(NSLayoutConstraint);
      v24 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_1004D9B40;
      v26 = objc_msgSend(v22, "widthAnchor");
      v27 = sub_100091FAC();
      v28 = objc_msgSend(v27, "widthAnchor");

      v29 = objc_msgSend(v26, "constraintLessThanOrEqualToAnchor:", v28);
      *(_QWORD *)(v25 + 32) = v29;
      specialized Array._endMutation()(v30);
      sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    }
  }
  v32 = *(_QWORD *)(v5 + v17);
  v33 = *(void **)(v32 + 160);
  if (v33)
  {
    v34 = objc_msgSend(v33, "contentType", swift_retain().n128_f64[0]) == 0;
  }
  else
  {
    *(_QWORD *)&v35 = swift_retain().n128_u64[0];
    v34 = 0;
  }
  if (objc_msgSend(*(id *)(v32 + 32), "isSyncStateMessagingSupported", v35) && !v34)
  {
    swift_release(v32);
LABEL_24:
    v38 = sub_100091FAC();
    v39 = sub_100091ECC();
    objc_msgSend(v38, "addArrangedSubview:", v39);

    goto LABEL_26;
  }
  if ((sub_10008E600() & 1) == 0)
  {
    swift_release(v32);
    goto LABEL_26;
  }
  sub_1000E7C74();
  v37 = v36;
  swift_release(v32);
  if (v37 > 0)
    goto LABEL_24;
LABEL_26:
  v40 = *(_QWORD *)(v5 + v17);
  swift_retain();
  v41 = sub_10008E104();
  swift_release(v40);
  if ((v41 & 1) != 0)
  {
    v43 = sub_100091FAC();
    v44 = sub_100091DEC();
    objc_msgSend(v43, "addArrangedSubview:", v44);

  }
  sub_100410D18(a1, a2, v42, a4);
  sub_100410FCC(a1, (void *)a2, a3, a4);
}

void sub_1004117C0()
{
  uint64_t v0;

  sub_10008F5C0(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel));
  sub_10008D9C4(*(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer));

}

id sub_10041187C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateFooterView.Metrics()
{
  return &type metadata for DOCFileProviderSyncStateFooterView.Metrics;
}

uint64_t sub_100411984()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004119B0()
{
  return 8;
}

uint64_t sub_1004119BC(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004119C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1004119D8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

char *sub_1004119E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1004105EC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

char *sub_1004119F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100410984(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

char *sub_1004119FC(char a1, uint64_t a2, _BYTE *a3, double a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  objc_class *v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  Swift::String v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v47[24];
  uint64_t v48;
  unint64_t v49;
  objc_super v50;

  v7 = a1 & 1;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v47[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_delegate], 0);
  a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_enabled] = 1;
  v12 = &a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_autohideContentOnCompletion] = 1;
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_preferredIconColor] = 0;
  v13 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup;
  v14 = type metadata accessor for DOCGenericOperationCombinedProgress(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = a3;
  v16 = sub_10029BF24((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&off_1005BEEC8);
  *(_QWORD *)&a3[v13] = v16;
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView____lazy_storage___didTapGestureRecognizer] = 0;
  v17 = (uint64_t *)&v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_debugID];
  v18 = UUID.init()(v16);
  v19 = UUID.uuidString.getter(v18);
  v21 = v20;
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v22 = sub_100087794(6, v19, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease(v21);
  *v17 = v22;
  v17[1] = v24;
  v17[2] = v26;
  v17[3] = v28;
  v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_isShowingContent] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_pointerInteraction] = 0;
  v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled] = 0;
  v29 = &v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source];
  *v29 = a2;
  v29[1] = &protocol witness table for DOCFilterableOperationProgressCollectionSource<A>;
  v30 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
  sub_1000A6FF8(v7, a4 + 0.1);
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView] = v31;

  v32 = (objc_class *)type metadata accessor for DOCProgressCollectionIndicatorView();
  v50.receiver = v15;
  v50.super_class = v32;
  v33 = objc_msgSendSuper2(&v50, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v48 = 0;
  v49 = 0xE000000000000000;
  v34 = (char *)v33;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v49);
  v48 = 0xD000000000000011;
  v49 = 0x8000000100533880;
  v35 = objc_msgSend(v34, "description");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39._countAndFlagsBits = v36;
  v39._object = v38;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  v40 = v49;
  sub_10008FA28(v48, v49);
  swift_bridgeObjectRelease(v40);
  v41 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup];
  swift_beginAccess(v41 + 16, &v48, 1, 0);
  *(double *)(v41 + 16) = a4;
  v42 = swift_allocObject(&unk_1005E9B60, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16, v34);
  v43 = (uint64_t *)(v41 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  swift_beginAccess(v43, v47, 1, 0);
  v44 = *v43;
  v45 = v43[1];
  *v43 = (uint64_t)sub_100411D90;
  v43[1] = v42;
  sub_10029F02C(v44, v45);
  sub_10001F13C();
  sub_10008FD24();

  return v34;
}

uint64_t sub_100411D6C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100411D90(uint64_t a1)
{
  uint64_t v1;

  sub_100241620(a1, v1);
}

void sub_100411FF4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char **v7;
  char **v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  char **v28;
  CGRect v29;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char **)objc_msgSend(v1, "delegate", v4);
  if (!v7)
    goto LABEL_19;
  v8 = v7;
  v9 = type metadata accessor for DOCSuggestionsTableViewController();
  v10 = (void *)swift_dynamicCastClass(v8, v9);
  if (!v10)
  {
LABEL_18:
    swift_unknownObjectRelease(v8);
LABEL_19:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCSuggestionsTableViewController.swift", 45, 2, 58, 0);
    __break(1u);
    return;
  }
  v11 = (unint64_t)objc_msgSend(v10, "numberOfSectionsInTableView:", v1);
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = v11;
  v28 = v8;
  if (v11)
  {
    v13 = 0;
    v14 = 0.0;
    v8 = &selRef_setTextSelectionBehavior_;
    v15 = 0.0;
    v16 = 0.0;
    v17 = 0.0;
    while (v13 != v12)
    {
      v18 = (unint64_t)objc_msgSend(v1, "numberOfRowsInSection:", v13);
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_16;
      v19 = v18;
      if (v18)
      {
        v20 = 0;
        do
        {
          v21 = v20 + 1;
          IndexPath.init(row:section:)(v20, v13);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
          objc_msgSend(v1, "rectForRowAtIndexPath:", isa);
          v16 = v23;
          v17 = v24;
          v14 = v25;
          v15 = v26;

          v20 = v21;
        }
        while (v19 != v21);
      }
      if (++v13 == v12)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = 0.0;
  v15 = 0.0;
  v16 = 0.0;
  v17 = 0.0;
LABEL_14:
  v29.origin.x = v16;
  v29.origin.y = v17;
  v29.size.width = v14;
  v29.size.height = v15;
  CGRectGetMaxY(v29);
  swift_unknownObjectRelease(v28);
}

id sub_100412210(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCSuggestionsTableView);
}

uint64_t type metadata accessor for DOCSuggestionsTableView()
{
  return objc_opt_self(_TtC5Files23DOCSuggestionsTableView);
}

id sub_10041230C()
{
  return sub_1001405E0(0, type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell);
}

id sub_100412320()
{
  char *v0;
  uint64_t ObjectType;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  ObjectType = swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions] = _swiftEmptyArrayStorage;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for DOCSuggestionsTableViewController();
  v3 = objc_msgSendSuper2(&v9, "initWithStyle:", 0);
  v4 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = v3;
  v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_100414228, 0, ObjectType);
  swift_unknownObjectRelease(v7);

  swift_bridgeObjectRelease(v5);
  return v6;
}

void sub_100412564()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  objc_super v25;

  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for DOCSuggestionsTableViewController();
  objc_msgSendSuper2(&v25, "viewDidLoad");
  v1 = objc_msgSend(v0, "tableView");
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v2 = v1;
  objc_msgSend(v1, "setClipsToBounds:", 1);

  v3 = objc_msgSend(v0, "tableView");
  if (!v3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v4 = v3;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v4, "setTableFooterView:", v5);

  v6 = objc_msgSend(v0, "tableView");
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6;
  objc_msgSend(v6, "setBouncesVertically:", 0);

  v8 = objc_msgSend(v0, "tableView");
  if (!v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = v8;
  objc_msgSend(v8, "setCellLayoutMarginsFollowReadableWidth:", 1);

  v10 = objc_msgSend(v0, "tableView");
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v10;
  objc_msgSend(v10, "setDelegate:", v0);

  v12 = objc_msgSend(v0, "tableView");
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12;
  objc_msgSend(v12, "setDataSource:", v0);

  v14 = objc_msgSend(v0, "tableView");
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = v14;
  v16 = type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v18);

  v19 = objc_msgSend(v0, "tableView");
  if (!v19)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = v19;
  objc_msgSend(v19, "setShowsVerticalScrollIndicator:", 0);

  v21 = objc_msgSend(v0, "tableView");
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21;
  objc_msgSend(v21, "setShowsHorizontalScrollIndicator:", 0);

  v23 = objc_msgSend(v0, "tableView");
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v23, "setAllowsMultipleSelection:", 0);

    return;
  }
LABEL_21:
  __break(1u);
}

id sub_100412854()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  id result;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  void *v18;
  Class isa;
  objc_super v20;

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v20 - v10;
  v12 = (objc_class *)type metadata accessor for DOCSuggestionsTableViewController();
  v20.receiver = v1;
  v20.super_class = v12;
  v13 = objc_msgSendSuper2(&v20, "resignFirstResponder");
  result = objc_msgSend(v1, "tableView");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = objc_msgSend(result, "indexPathForSelectedRow");

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    sub_1000E9F38((uint64_t)v4);
    return v13;
  }
  v17(v11, v4, v5);
  result = objc_msgSend(v1, "tableView");
  if (result)
  {
    v18 = result;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "deselectRowAtIndexPath:animated:", isa, 1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return v13;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_100412B84()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v1 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - v10;
  result = objc_msgSend(v0, "tableView", v9);
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(result, "indexPathForSelectedRow");

    if (v14)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v15(v3, v7, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        v15(v11, v3, v4);
        sub_10041384C((uint64_t)v11);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    return (id)sub_1000E9F38((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100412DA4(uint64_t a1, int a2, int a3)
{
  char *v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  unint64_t result;
  void *v43;
  id v44;
  void (*v45)(char *, uint64_t, uint64_t, _QWORD *);
  uint64_t v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t, _QWORD *);
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  unsigned int (*v52)(char *, uint64_t, _QWORD *);
  uint64_t (*v53)(char *, char *, _QWORD *);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  char **v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  Class isa;
  uint64_t Strong;
  char *v76;
  void *v77;
  Class v78;
  id v79;
  void *v80;
  Class v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  void *v88;
  _QWORD *v89;
  Class v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  int v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, _QWORD *);
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;

  v4 = v3;
  v100 = a3;
  LODWORD(v104) = a2;
  v105 = a1;
  v107 = (_QWORD *)type metadata accessor for IndexPath(0);
  v5 = *(v107 - 1);
  __chkstk_darwin(v107);
  v96 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v101 = (char *)&v94 - v8;
  __chkstk_darwin(v9);
  v102 = (char *)&v94 - v10;
  __chkstk_darwin(v11);
  v95 = (char *)&v94 - v12;
  __chkstk_darwin(v13);
  v97 = (char *)&v94 - v14;
  v15 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v15);
  v99 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v94 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v94 - v21;
  __chkstk_darwin(v23);
  v98 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v94 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v94 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v94 - v32;
  __chkstk_darwin(v34);
  v103 = (uint64_t)&v94 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v94 - v37;
  v40 = __chkstk_darwin(v39);
  v106 = (uint64_t)&v94 - v41;
  result = (unint64_t)objc_msgSend(v4, "tableView", v40);
  if (!result)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v43 = (void *)result;
  v44 = objc_msgSend((id)result, "indexPathForSelectedRow");

  if (v44)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v44);

    v45 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v5 + 56);
    v45(v38, 0, 1, v107);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v5 + 56);
    v45(v38, 1, 1, v107);
  }
  v46 = v106;
  sub_10016CC70((uint64_t)v38, v106);
  if (!(_BYTE)v104)
  {
    v50 = v103;
    IndexPath.init(row:section:)(v105, 0);
    v51 = v107;
    v45((char *)v50, 0, 1, v107);
LABEL_11:
    v22 = v102;
    goto LABEL_14;
  }
  if (v104 != 1)
  {
    v22 = v102;
    if (!v105)
    {
      v66 = v4;
      sub_1000E26E0(v46, (uint64_t)v33);
      v67 = v107;
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v5 + 48))(v33, 1, v107) == 1)
      {
        sub_1000E9F38((uint64_t)v33);
      }
      else
      {
        v72 = v97;
        (*(void (**)(char *, char *, _QWORD *))(v5 + 32))(v97, v33, v67);
        result = (unint64_t)objc_msgSend(v66, "tableView");
        if (!result)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        v73 = (void *)result;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v73, "deselectRowAtIndexPath:animated:", isa, 0);

        (*(void (**)(char *, _QWORD *))(v5 + 8))(v72, v67);
      }
      Strong = swift_unknownObjectWeakLoadStrong(&v66[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate]);
      if (!Strong)
        return sub_1000E9F38(v46);
      goto LABEL_53;
    }
    v50 = v103;
    IndexPath.init(row:section:)(0, 0);
    v51 = v107;
    v45((char *)v50, 0, 1, v107);
LABEL_14:
    sub_1000E26E0(v50, (uint64_t)v19);
    v52 = *(unsigned int (**)(char *, uint64_t, _QWORD *))(v5 + 48);
    if (v52(v19, 1, v51) == 1)
    {
      sub_1000E9F38(v50);
      sub_1000E9F38(v46);
      v46 = (uint64_t)v19;
      return sub_1000E9F38(v46);
    }
    v53 = *(uint64_t (**)(char *, char *, _QWORD *))(v5 + 32);
    v54 = v53(v22, v19, v51);
    v55 = IndexPath.row.getter(v54);
    v56 = v101;
    v57 = (*(uint64_t (**)(char *, char *, _QWORD *))(v5 + 16))(v101, v22, v51);
    if (v55 < 0)
    {
      v4 = *(char **)(v5 + 8);
      ((void (*)(char *, _QWORD *))v4)(v56, v51);
    }
    else
    {
      v58 = v56;
      v59 = IndexPath.row.getter(v57);
      v107 = v4;
      result = (unint64_t)objc_msgSend(v4, "tableView");
      if (!result)
      {
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      v60 = (void *)result;
      v61 = objc_msgSend((id)result, "numberOfRowsInSection:", 0);

      v4 = *(char **)(v5 + 8);
      ((void (*)(char *, _QWORD *))v4)(v58, v51);
      if (v59 < (uint64_t)v61)
      {
        v46 = v106;
        v62 = v99;
        sub_1000E26E0(v106, v99);
        if (v52((char *)v62, 1, v51) == 1)
        {
          sub_1000E9F38(v62);
          v63 = &selRef_setTextSelectionBehavior_;
        }
        else
        {
          v76 = v96;
          v53(v96, (char *)v62, v51);
          v63 = &selRef_setTextSelectionBehavior_;
          result = (unint64_t)objc_msgSend(v107, "tableView");
          if (!result)
          {
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
          v77 = (void *)result;
          v78 = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v77, "deselectRowAtIndexPath:animated:", v78, 0);

          ((void (*)(char *, _QWORD *))v4)(v76, v51);
        }
        v79 = v107;
        result = (unint64_t)objc_msgSend(v107, v63[204]);
        if (!result)
          goto LABEL_62;
        v80 = (void *)result;
        v81 = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v80, "selectRowAtIndexPath:animated:scrollPosition:", v81, 0, 0);

        result = (unint64_t)objc_msgSend(v79, v63[204]);
        if (!result)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        v82 = (void *)result;
        UITableView.doc_scrollToItemIfNeeded(at:)((uint64_t)v22);

        if ((v100 & 1) != 0)
        {
          v83 = v107;
          v84 = swift_unknownObjectWeakLoadStrong((char *)v107 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate);
          if (v84)
          {
            v19 = (char *)v84;
            result = IndexPath.row.getter(v84);
            v5 = result;
            v69 = *(_QWORD *)((char *)v83 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions);
            if ((v69 & 0xC000000000000001) == 0)
            {
              if ((result & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else
              {
                v85 = v103;
                if (result < *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v86 = *(id *)(v69 + 8 * result + 32);
                  ((void (*)(char *, _QWORD *))v4)(v22, v51);
                  sub_1000E9F38(v85);
                  swift_unknownObjectRelease(v19);

                  return sub_1000E9F38(v46);
                }
              }
              __break(1u);
              goto LABEL_59;
            }
LABEL_56:
            swift_bridgeObjectRetain(v69);
            v91 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v69);
            v92 = swift_bridgeObjectRelease(v69);
            ((void (*)(char *, _QWORD *, __n128))v4)(v22, v51, v92);
            sub_1000E9F38(v103);
            swift_unknownObjectRelease(v19);
            v93 = v91;
            v46 = v106;
            swift_unknownObjectRelease(v93);
            return sub_1000E9F38(v46);
          }
        }
        ((void (*)(char *, _QWORD *))v4)(v22, v51);
        v68 = v103;
LABEL_49:
        sub_1000E9F38(v68);
        return sub_1000E9F38(v46);
      }
      v46 = v106;
      v50 = v103;
    }
    ((void (*)(char *, _QWORD *))v4)(v22, v51);
    v68 = v50;
    goto LABEL_49;
  }
  v47 = v4;
  v48 = *(uint64_t (**)(char *, uint64_t, _QWORD *))(v5 + 48);
  v49 = v107;
  if (v48((char *)v46, 1, v107) == 1)
  {
    if (v105 >= 1)
      sub_100412DA4(1, 2, v100 & 1);
    return sub_1000E9F38(v46);
  }
  sub_1000E26E0(v46, (uint64_t)v30);
  result = v48(v30, 1, v49);
  if ((_DWORD)result == 1)
    goto LABEL_61;
  v64 = IndexPath.row.getter(result);
  v104 = *(void (**)(char *, _QWORD *))(v5 + 8);
  v104(v30, v49);
  if (v64 || (v105 & 0x8000000000000000) == 0)
  {
    v46 = v106;
    sub_1000E26E0(v106, (uint64_t)v22);
    v51 = v107;
    result = v48(v22, 1, v107);
    if ((_DWORD)result == 1)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v4 = v47;
    v69 = IndexPath.row.getter(result);
    v104(v22, v51);
    v70 = v69 + v105;
    v50 = v103;
    if (__OFADD__(v69, v105))
    {
      __break(1u);
      goto LABEL_56;
    }
    v71 = (uint64_t)v98;
    IndexPath.init(row:section:)(v70, 0);
    v45((char *)v71, 0, 1, v51);
    sub_10016CC70(v71, v50);
    goto LABEL_11;
  }
  v46 = v106;
  sub_1000E26E0(v106, (uint64_t)v27);
  v65 = v107;
  if (v48(v27, 1, v107) == 1)
  {
    sub_1000E9F38((uint64_t)v27);
    goto LABEL_52;
  }
  v87 = v95;
  (*(void (**)(char *, char *, _QWORD *))(v5 + 32))(v95, v27, v65);
  result = (unint64_t)objc_msgSend(v47, "tableView");
  if (result)
  {
    v88 = (void *)result;
    v89 = v65;
    v90 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v88, "deselectRowAtIndexPath:animated:", v90, 0);

    v104(v87, v89);
LABEL_52:
    Strong = swift_unknownObjectWeakLoadStrong(&v47[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate]);
    if (Strong)
LABEL_53:
      swift_unknownObjectRelease(Strong);
    return sub_1000E9F38(v46);
  }
LABEL_67:
  __break(1u);
  return result;
}

void sub_10041370C(char a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v3 = objc_msgSend(v1, "tableView");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "reloadData");

  v5 = objc_msgSend(v1, "tableView");
  if (!v5)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v6 = v5;
  objc_msgSend(v5, "invalidateIntrinsicContentSize");

  if ((a1 & 1) != 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate], v7);
    if (Strong)
    {
      v9 = Strong;
      if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement) & 1) != 0)
      {
        swift_unknownObjectRelease(Strong);
      }
      else
      {
        v10 = *(void **)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView);
        v11 = v10;
        sub_10017B834(v10);
        sub_1000968DC();
        v12 = sub_10001F69C();
        sub_10005897C(v12, 0, 0, 1, 1);
        swift_unknownObjectRelease(v9);

      }
    }
  }
}

void sub_10041384C(uint64_t a1)
{
  char *v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  Class isa;
  uint64_t Strong;
  void *v10;
  void *v11;
  id v12;
  id v13;

  v2 = v1;
  v3 = IndexPath.row.getter(a1);
  v4 = v3;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions];
  if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v3 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(id *)(v5 + 8 * v3 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions]);
  v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v5);
  swift_bridgeObjectRelease(v5);
LABEL_5:
  v6 = objc_msgSend(v1, "tableView");
  if (!v6)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v7 = v6;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "deselectRowAtIndexPath:animated:", isa, 1);

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate]);
  v10 = v13;
  if (Strong)
  {
    v11 = *(void **)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion) = v13;
    v12 = v13;

    sub_100462AB4();
    swift_unknownObjectRelease(Strong);

    v10 = v13;
  }

}

void sub_100413AD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  int v17;
  void *v18;
  char **v19;
  id v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  unint64_t v26;
  id v27;
  NSString v28;
  Class isa;
  id v30;
  uint64_t v31;
  _UNKNOWN **v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString *v37;
  void *v38;
  NSString *v39;
  id v40;
  unint64_t v41;
  Class v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  id v50;
  void (*v51)(_QWORD *, _QWORD);
  uint64_t (*v52)(_QWORD *, _QWORD);
  uint64_t v53;
  double v54;
  uint64_t v55;
  double v56;
  void (*v57)(_QWORD *, _QWORD);
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  NSString *v67;
  __int128 v68;
  uint64_t v69;
  id v70;
  _QWORD *v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  char v76[72];
  _QWORD v77[5];
  char v78[56];

  v2 = v1;
  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v8);

  if (!v9)
    goto LABEL_14;
  v10 = type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell();
  v11 = swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
  v12 = IndexPath.row.getter(v11);
  v13 = v12;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions);
  v75 = v4;
  v74 = v5;
  v73 = (void *)v11;
  v72 = v9;
  if ((v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v14);
    v15 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v14);
    swift_bridgeObjectRelease(v14);
    goto LABEL_6;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v12 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  v15 = *(id *)(v14 + 8 * v12 + 32);
LABEL_6:
  v16 = (char *)v15 + OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange;
  v17 = *((unsigned __int8 *)v15 + OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange + 16);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = &selRef_labelColor;
  if (!v17)
    v19 = &selRef_secondaryLabelColor;
  v20 = objc_msgSend(v18, *v19);
  v21 = *(void (**)(void))((swift_isaMask & *v15) + 0xB0);
  v71 = v15;
  v21();
  v23 = v22;
  v24 = sub_10006922C((uint64_t *)&unk_1006424D0);
  inited = swift_initStackObject(v24, v78);
  v68 = xmmword_1004D9670;
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v69 = sub_10004F2F0(0, (unint64_t *)&qword_100644600, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v69;
  *(_QWORD *)(inited + 40) = v20;
  v67 = NSForegroundColorAttributeName;
  v70 = v20;
  v26 = sub_100076434(inited);
  v27 = objc_allocWithZone((Class)NSMutableAttributedString);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  type metadata accessor for Key(0);
  sub_10005FB20();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v27, "initWithString:attributes:", v28, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v32 = DSConflictStrategy_ptr;
  v33 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
  if ((v16[16] & 1) == 0)
  {
    v35 = *(_QWORD *)v16;
    v34 = *((_QWORD *)v16 + 1);
    v36 = swift_initStackObject(v24, v76);
    *(_OWORD *)(v36 + 16) = v68;
    v37 = v67;
    *(_QWORD *)(v36 + 32) = v67;
    v38 = (void *)objc_opt_self(UIColor);
    v39 = v37;
    v40 = objc_msgSend(v38, "labelColor");
    *(_QWORD *)(v36 + 64) = v69;
    *(_QWORD *)(v36 + 40) = v40;
    v41 = sub_100076434(v36);
    v42 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v43 = swift_bridgeObjectRelease(v41).n128_u64[0];
    v44 = v35;
    v32 = DSConflictStrategy_ptr;
    v45 = v34;
    v33 = &selRef_collectionView_targetContentOffsetForProposedContentOffset_;
    objc_msgSend(v30, "setAttributes:range:", v42, v44, v45, v43);

  }
  v46 = static UIListContentConfiguration.cell()(v31);
  v47 = v71;
  v48 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v71) + 0x170))(v46);
  UIListContentConfiguration.image.setter(v48);
  v49 = (void *)objc_opt_self(v32[157]);
  v50 = objc_msgSend(v49, v33[393]);
  v51 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v77);
  UIListContentConfiguration.ImageProperties.tintColor.setter(v50);
  v51(v77, 0);
  v52 = (uint64_t (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v77);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(30.0, 30.0);
  v53 = v52(v77, 0);
  v54 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v53);
  v56 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v55);
  v57 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v77);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v54, v56);
  v57(v77, 0);
  v58 = v30;
  UIListContentConfiguration.attributedText.setter(v30);
  v59 = v75;
  v77[3] = v75;
  v77[4] = &protocol witness table for UIListContentConfiguration;
  v60 = sub_10006CBAC(v77);
  v61 = v74;
  (*(void (**)(_QWORD *, char *, uint64_t))(v74 + 16))(v60, v7, v59);
  v62 = v72;
  v63 = v73;
  UITableViewCell.contentConfiguration.setter(v77);

  v64 = v62;
  v65 = objc_msgSend(v49, "clearColor");
  objc_msgSend(v63, "setBackgroundColor:", v65);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v59);
}

id sub_100414188(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCSuggestionsTableViewController);
}

uint64_t type metadata accessor for DOCSuggestionsTableViewController()
{
  return objc_opt_self(_TtC5Files33DOCSuggestionsTableViewController);
}

uint64_t type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell()
{
  return objc_opt_self(_TtCC5Files33DOCSuggestionsTableViewControllerP33_2E368D64BBCB136E81D511D6E5A68E0E15SuggestionsCell);
}

id sub_10041421C(void *a1)
{
  return objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

void sub_10041422C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  char *v4;
  char *v5;
  uint64_t (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t (*v12)(__n128);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  void **v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions), 2);
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease_n(v1, 2);
    sub_10041370C(1);
    return;
  }
  if (v1 < 0)
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions);
  else
    v18 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions), 2);
  v2 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      else
        v4 = (char *)*(id *)(v1 + 8 * i + 32);
      v5 = v4;
      v6 = *(uint64_t (**)(__n128))&v4[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
      if (v6)
      {
        v7 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator + 8];
        v8 = swift_retain();
        v9 = v6(v8);
        v10 = (void **)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
        swift_beginAccess(&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage], v19, 1, 0);
        v11 = *v10;
        *v10 = (void *)v9;

        sub_100087534((uint64_t)v6, v7);
      }
      v12 = *(uint64_t (**)(__n128))&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
      if (v12)
      {
        v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator + 8];
        v14 = swift_retain();
        v15 = v12(v14);
        v16 = (void **)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
        swift_beginAccess(&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage], v20, 1, 0);
        v17 = *v16;
        *v16 = (void *)v15;

        sub_100087534((uint64_t)v12, v13);
      }

    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_1004143FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;

  v0 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1004DAC10;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputUpArrow);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = (void *)objc_opt_self(UIKeyCommand);
  v6 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v4, 0, "keyCommandMoveSelectionUp");

  *(_QWORD *)(v1 + 32) = v6;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDownArrow);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v9, 0, "keyCommandMoveSelectionDown", swift_bridgeObjectRelease(v8).n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v10;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v11, 0, "keyCommandConfirmSelection");

  *(_QWORD *)(v1 + 48) = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputEscape);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v15, 0, "keyCommandCancelSelection", swift_bridgeObjectRelease(v14).n128_f64[0]);

  *(_QWORD *)(v1 + 56) = v16;
  specialized Array._endMutation()(v17);
  return v1;
}

id DOCDocumentManager.__allocating_init(configuration:sourceObserver:hierarchyController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_uiBrowserDelegate], 0);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser], 0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, "init");
}

void sub_100414678(char *a1)
{
  sub_10039E010(*a1);
}

void sub_100414684()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1004146D0()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x676E697461657263, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_100414764()
{
  __asm { BR              X10 }
}

uint64_t sub_1004147A0(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x676E697461657263, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_100414820(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100414868()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x676E697461657263, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

unint64_t sub_1004148FC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10041DB08(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100414928()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100414958 + 4 * byte_1004E7BAF[*v0]))();
}

void sub_100414958(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x676E697461657263;
  a1[1] = v1;
}

void sub_100414970(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6974726F706D69;
  a1[1] = 0xE900000000000067;
}

void sub_100414994(_QWORD *a1@<X8>)
{
  *a1 = 0x69746E6573657270;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_1004149B4(_QWORD *a1@<X8>)
{
  *a1 = 0x65746E6573657270;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1004149D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100414A04 + 4 * byte_1004E7BB4[*v0]))(0x6576697463616E69, 0xE800000000000000);
}

uint64_t sub_100414A04()
{
  return 0x676E697461657263;
}

uint64_t sub_100414A18()
{
  return 0x6E6974726F706D69;
}

uint64_t sub_100414A38()
{
  return 0x69746E6573657270;
}

uint64_t sub_100414A54()
{
  return 0x65746E6573657270;
}

id sub_100414A70()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  objc_super v7;

  v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if (v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates] == 1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController];
    if (v2)
    {
      v3 = objc_msgSend(v2, "viewIfLoaded");
      if (v3)
      {
        v4 = v3;
        v0[v1] = 0;
        objc_msgSend(v3, "setUserInteractionEnabled:", 1);
        v5 = *(void **)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView];
        if (v5)
        {
          *(_QWORD *)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView] = 0;
          objc_msgSend(v5, "removeFromSuperview");

        }
      }
    }
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession(0);
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100414BC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates) & 1) == 0
    && *(_BYTE *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isInUIPDocumentLanding) == 1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController);
    if (v2)
    {
      v3 = objc_msgSend(v2, "viewIfLoaded");
      if (v3)
      {
        *(_BYTE *)(v0 + v1) = 1;
        v7 = v3;
        objc_msgSend(v3, "setUserInteractionEnabled:", 0);
        v4 = objc_msgSend(v7, "snapshotViewAfterScreenUpdates:", 0);
        if (v4)
        {
          v5 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView);
          *(_QWORD *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView) = v4;
          v6 = v4;

          UIView.doc_addAutoresizingSubview(_:insetBy:)(v6, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
        }

      }
    }
  }
}

void sub_100414CCC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates) == 1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController);
    if (v2)
    {
      v3 = objc_msgSend(v2, "viewIfLoaded");
      if (v3)
      {
        *(_BYTE *)(v0 + v1) = 0;
        v5 = v3;
        objc_msgSend(v3, "setUserInteractionEnabled:", 1);
        v4 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView);
        if (v4)
        {
          *(_QWORD *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView) = 0;
          objc_msgSend(v4, "removeFromSuperview");

        }
      }
    }
  }
}

void sub_100414DA8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v3 = v2;
  v42 = a2;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v37 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_1006495B0);
  __chkstk_darwin(v8);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v11);
  v38 = (uint64_t)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v36 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v36 - v18;
  v39 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase;
  v40 = a1;
  v41 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase);
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v20((char *)v36 - v18, a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier, v5, v17);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v22 = 1;
  v21(v19, 0, 1, v5);
  v36[1] = v3;
  v23 = (char *)objc_msgSend(v3, "activeDocumentCreationSession");
  if (v23)
  {
    v24 = v23;
    ((void (*)(char *, char *, uint64_t))v20)(v15, &v23[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier], v5);

    v22 = 0;
  }
  v21(v15, v22, 1, v5);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  v26 = (uint64_t *)&unk_1006475C0;
  sub_1000271D4((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1006475C0);
  sub_1000271D4((uint64_t)v15, v25, (uint64_t *)&unk_1006475C0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v27((uint64_t)v10, 1, v5) == 1)
  {
    sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006475C0);
    if (v27(v25, 1, v5) != 1)
      v26 = (uint64_t *)&unk_1006495B0;
  }
  else
  {
    v28 = v38;
    sub_1000271D4((uint64_t)v10, v38, (uint64_t *)&unk_1006475C0);
    if (v27(v25, 1, v5) == 1)
    {
      sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
      sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006475C0);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, v5);
      v26 = (uint64_t *)&unk_1006495B0;
    }
    else
    {
      v29 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v37, v25, v5);
      v30 = sub_10005A360((unint64_t *)&qword_100655BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of static Equatable.== infix(_:_:)(v28, v29, v5, v30);
      v31 = *(void (**)(char *, uint64_t))(v6 + 8);
      v31(v29, v5);
      v26 = (uint64_t *)&unk_1006475C0;
      sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
      sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006475C0);
      v31((char *)v28, v5);
    }
  }
  v33 = v41;
  v32 = v42;
  sub_10000CB4C((uint64_t)v10, v26);
  sub_10039E010(v32);
  if ((v35 & 1) == 0)
  {
    static os_log_type_t.info.getter(v34);
    v43 = 0;
    v44 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease(v44);
    v43 = 0xD000000000000016;
    v44 = 0x8000000100534040;
    __asm { BR              X9 }
  }
}

id DOCDocumentManager.init(configuration:sourceObserver:hierarchyController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_super v8;

  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_uiBrowserDelegate]);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser]);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCDocumentManager();
  return objc_msgSendSuper2(&v8, "init");
}

void sub_100415580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *Strong;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  NSURL *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSURL *v39;
  void *v40;
  void *v41;
  NSURL *v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;

  v47 = a4;
  v48 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v13 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser);
  if (Strong)
  {
    v49 = Strong;
    v21 = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files18DOCDocumentManager_uiBrowserDelegate);
    if (v21)
    {
      v22 = (void *)v21;
      sub_1000271D4(a2, (uint64_t)v15, &qword_100643470);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        v23 = sub_10000CB4C((uint64_t)v15, &qword_100643470);
        v24 = Logger.UI.unsafeMutableAddressor(v23);
        v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v24, v6);
        v26 = Logger.logObject.getter(v25);
        v27 = static os_log_type_t.debug.getter(v26);
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Import failed", v28, 2u);
          swift_slowDealloc(v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        if ((objc_msgSend(v22, "respondsToSelector:", "documentBrowser:failedToImportDocumentAtURL:error:") & 1) != 0)
        {
          swift_unknownObjectRetain(v22);
          URL._bridgeToObjectiveC()(v29);
          v31 = v30;
          if (v47)
            v32 = (void *)_convertErrorToNSError(_:)(v47);
          else
            v32 = 0;
          objc_msgSend(v22, "documentBrowser:failedToImportDocumentAtURL:error:", v49, v31, v32);

          swift_unknownObjectRelease_n(v22, 2);
        }
        else
        {

          swift_unknownObjectRelease(v22);
        }
      }
      else
      {
        v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
        v34 = Logger.UI.unsafeMutableAddressor(v33);
        v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v34, v6);
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.debug.getter(v36);
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Import successful", v38, 2u);
          swift_slowDealloc(v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((objc_msgSend(v22, "respondsToSelector:", "documentBrowser:didImportDocumentAtURL:toDestinationURL:") & 1) != 0)
        {
          swift_unknownObjectRetain(v22);
          URL._bridgeToObjectiveC()(v39);
          v41 = v40;
          URL._bridgeToObjectiveC()(v42);
          v44 = v43;
          objc_msgSend(v22, "documentBrowser:didImportDocumentAtURL:toDestinationURL:", v49, v41, v43);

          swift_unknownObjectRelease_n(v22, 2);
          v45 = v44;
        }
        else
        {
          swift_unknownObjectRelease(v22);
          v45 = v49;
        }

        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
    }
    else
    {

    }
  }
}

double sub_10041598C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD aBlock[5];
  uint64_t v58;

  v50 = a6;
  v45 = a7;
  v46 = a8;
  v43 = a5;
  v47 = a3;
  v48 = a4;
  v44 = a2;
  v52 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v51 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = type metadata accessor for DispatchQoS.QoSClass(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.default(_:), v16);
  v42 = static OS_dispatch_queue.global(qos:)(v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v20 = *(unsigned __int8 *)(v14 + 80);
  v21 = (v20 + 24) & ~v20;
  v22 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1005EA298, v24 + 8, v20 | 7);
  *(_QWORD *)(v25 + 16) = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v25 + v21, (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v26 = (_QWORD *)(v25 + v22);
  v27 = v46;
  *v26 = v45;
  v26[1] = v27;
  v28 = v25 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = v48;
  v29 = v49;
  *(_QWORD *)v28 = v49;
  *(_BYTE *)(v28 + 8) = v44;
  v31 = (_QWORD *)(v25 + v23);
  *v31 = v47;
  v31[1] = v30;
  v32 = v50;
  *(_QWORD *)(v25 + v24) = v50;
  aBlock[4] = sub_10041E8C8;
  v58 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EA2B0;
  v33 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(v30);
  v34 = v32;
  swift_retain();
  static DispatchQoS.unspecified.getter(v29);
  v56 = _swiftEmptyArrayStorage;
  v35 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_10006922C((uint64_t *)&unk_100647540);
  v37 = sub_1000791AC();
  v39 = v51;
  v38 = v52;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v36, v37, v52, v35);
  v40 = (void *)v42;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v39, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v38);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v54);
  *(_QWORD *)&result = swift_release(v58).n128_u64[0];
  return result;
}

void sub_100415CE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  void *v41;
  _BOOL4 v42;
  NSURL *v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, __n128);
  id v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  id v89;
  __n128 v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  id v105;
  __n128 v106;
  id v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t (*v111)(id (*)(uint64_t, uint64_t), char *, uint64_t);
  id (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, char *, uint64_t);
  void *v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  _QWORD *v146;
  id v147;
  double v148;
  id v149;
  void *v150;
  void *v151;
  id v152;
  __n128 v153;
  void (*v154)(char *, uint64_t, uint64_t, uint64_t);
  id v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  _QWORD *v163;
  uint64_t v164;
  void *v165;
  _QWORD *v166;
  id v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t, uint64_t, uint64_t);
  void *v174;
  void *v175;
  id v176;
  _BOOL4 v177;
  char *v178;
  uint64_t v179;
  char *v180;
  int v181;
  char *v182;
  id (*v183)(uint64_t, uint64_t);
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  void *v193;
  uint64_t v194;
  id v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  __int128 aBlock;
  void *v200;
  void *v201;
  uint64_t (*v202)();
  _QWORD *v203;
  NSURL v204;

  v187 = a8;
  v186 = a7;
  v181 = a6;
  v192 = (char *)a5;
  v193 = a3;
  v194 = a4;
  v11 = type metadata accessor for URL(0);
  v197 = *(_QWORD *)(v11 - 8);
  v198 = v11;
  v12 = *(_QWORD *)(v197 + 64);
  __chkstk_darwin(v11);
  v185 = (char *)&v172 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v189 = (char *)&v172 - v14;
  __chkstk_darwin(v15);
  v178 = (char *)&v172 - v16;
  __chkstk_darwin(v17);
  v182 = (char *)&v172 - v18;
  __chkstk_darwin(v19);
  v180 = (char *)&v172 - v20;
  __chkstk_darwin(v21);
  v183 = (id (*)(uint64_t, uint64_t))((char *)&v172 - v22);
  v23 = sub_10006922C(&qword_100643470);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v184 = (uint64_t)&v172 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v191 = (char *)&v172 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v172 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v172 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v172 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v172 - v38;
  v40 = objc_msgSend(objc_allocWithZone((Class)NSFileManager), "init");
  v195 = v40;
  v196 = v39;
  v190 = a2;
  v188 = v36;
  if (a1 != 1)
  {
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
    v54 = v24;
    v55 = v198;
    v53(v39, 1, 1, v198);
    v56 = v55;
    v57 = v54;
    v53(v36, 1, 1, v56);
    v183 = 0;
    v179 = 0;
    v58 = (uint64_t)v39;
LABEL_5:
    v180 = a9;
    v59 = swift_allocObject(&unk_1005E9F00, 24, 7);
    swift_unknownObjectWeakInit(v59 + 16);
    v60 = (uint64_t)v191;
    sub_1000271D4(v58, (uint64_t)v191, &qword_100643470);
    v61 = *(unsigned __int8 *)(v57 + 80);
    v62 = (v61 + 24) & ~v61;
    v63 = (v25 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
    v65 = swift_allocObject(&unk_1005EA2E8, v64 + 16, v61 | 7);
    *(_QWORD *)(v65 + 16) = v59;
    sub_1000B34E4(v60, v65 + v62);
    v67 = v194;
    v66 = v195;
    *(_QWORD *)(v65 + v63) = v195;
    v68 = v66;
    v69 = (_QWORD *)(v65 + v64);
    *v69 = v193;
    v69[1] = v67;
    v70 = v184;
    sub_1000271D4((uint64_t)v36, v184, &qword_100643470);
    v72 = v197;
    v71 = v198;
    v73 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 16);
    v74 = v185;
    v73(v185, v190, v198);
    v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
    v76 = v70;
    if (v75(v70, 1, v71) == 1)
    {
      v77 = *(void (**)(char *, char *, uint64_t))(v197 + 32);
      v78 = v189;
      v77(v189, v74, v198);
      v79 = v68;
      swift_retain();
      sub_10000CB4C(v76, &qword_100643470);
    }
    else
    {
      v80 = v197;
      v81 = v76;
      v82 = *(void (**)(char *, uint64_t, __n128))(v197 + 8);
      v83 = v68;
      v84 = swift_retain();
      v85 = v198;
      v82(v74, v198, v84);
      v77 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      v78 = v189;
      v77(v189, (char *)v81, v85);
    }
    v86 = swift_allocObject(&unk_1005EA310, 32, 7);
    *(_QWORD *)(v86 + 16) = sub_10041EA20;
    *(_QWORD *)(v86 + 24) = v65;
    swift_retain_n(v65, 2);
    v87 = objc_msgSend(v180, "fileProviderItem");
    if (v87)
    {
      v88 = v87;
      swift_retain();
      v89 = v88;
      sub_10041EBCC(v78, 1, v186, v187, v88, (uint64_t)v192, (void (*)(_QWORD, id))sub_10041EA20, v65);

      swift_release(v86);
      swift_release_n(v65, 3, v90);
      v92 = v179;
    }
    else
    {
      v93 = type metadata accessor for DOCHierarchyController(0);
      v94 = v198;
      v95 = v192;
      v193 = *(void **)&v192[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
      v194 = v93;
      v191 = *(char **)&v192[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
      v96 = v182;
      v73(v182, (uint64_t)v78, v198);
      v97 = *(unsigned __int8 *)(v197 + 80);
      v98 = (v97 + 32) & ~v97;
      v99 = (v98 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
      v100 = (v98 + v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      v101 = swift_allocObject(&unk_1005EA338, v100 + 16, v97 | 7);
      *(_QWORD *)(v101 + 16) = sub_100066584;
      *(_QWORD *)(v101 + 24) = v86;
      v77((char *)(v101 + v98), v96, v94);
      v102 = v101 + v99;
      *(_QWORD *)v102 = v95;
      *(_BYTE *)(v102 + 8) = v181 & 1;
      v103 = (_QWORD *)(v101 + v100);
      v78 = v189;
      v104 = v187;
      *v103 = v186;
      v103[1] = v104;
      swift_bridgeObjectRetain(v104);
      swift_retain();
      v105 = v95;
      v92 = v179;
      sub_1001E44F4(v193, v191, 0, (uint64_t)sub_10041EB60, v101);

      swift_release_n(v65, 2, v106);
      swift_release(v86);
      v91 = swift_release(v101);
    }
    (*(void (**)(char *, uint64_t, __n128))(v197 + 8))(v78, v198, v91);
    sub_10000CB4C((uint64_t)v188, &qword_100643470);
    sub_10000CB4C((uint64_t)v196, &qword_100643470);
    sub_100087534((uint64_t)v183, v92);
    return;
  }
  v41 = v40;
  v42 = URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v43);
  v45 = v44;
  *(_QWORD *)&aBlock = 0;
  v46 = objc_msgSend(v41, "URLForDirectory:inDomain:appropriateForURL:create:error:", 99, 1, v44, 1, &aBlock);

  v47 = (void *)aBlock;
  if (v46)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v48 = v47;

    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
    v49(v33, 0, 1, v198);
    v50 = (uint64_t)v33;
    v51 = (uint64_t)v196;
    sub_1000B34E4(v50, (uint64_t)v196);
    v52 = 0;
  }
  else
  {
    v107 = (id)aBlock;
    v52 = _convertNSErrorToError(_:)(v47);

    swift_willThrow(v108);
    v51 = (uint64_t)v196;
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
    v49(v196, 1, 1, v198);
  }
  sub_1000271D4(v51, (uint64_t)v30, &qword_100643470);
  v109 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v197 + 48))(v30, 1, v198);
  v177 = v42;
  if (v109 == 1)
  {
    v110 = sub_10000CB4C((uint64_t)v30, &qword_100643470);
LABEL_17:
    v114 = *(id *)DOCLog.UI.unsafeMutableAddressor(v110);
    v115 = static os_log_type_t.error.getter(v114);
    v116 = sub_10006922C((uint64_t *)&unk_100644560);
    v117 = swift_allocObject(v116, 72, 7);
    v118 = v117;
    *(_OWORD *)(v117 + 16) = xmmword_1004D9670;
    if (v52)
    {
      swift_errorRetain(v52);
      v119 = _convertErrorToNSError(_:)(v52);
      swift_errorRelease(v52);
      v201 = (void *)sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      v202 = (uint64_t (*)())sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)&aBlock = v119;
      sub_1000E85C4(&aBlock, v118 + 32);
      v120 = v52;
    }
    else
    {
      *(_QWORD *)(v117 + 56) = &type metadata for String;
      v120 = 0;
      *(_QWORD *)(v117 + 64) = sub_10006A638();
      *(_QWORD *)(v118 + 32) = 0x726F727265206F6ELL;
      *(_QWORD *)(v118 + 40) = 0xE800000000000000;
    }
    v121 = v195;
    os_log(_:dso:log:type:_:)("Unable to create temporary directory for copying file %@.", 57, 2, &_mh_execute_header, v114, v115, v118);

    v122 = swift_bridgeObjectRelease(v118);
    v123 = (uint64_t)v191;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v49)(v191, 1, 1, v198, v122);
    ((void (*)(uint64_t, uint64_t))v193)(v123, v52);
    swift_errorRelease(v120);
    sub_10000CB4C(v123, &qword_100643470);
    if (v177)
      URL.stopAccessingSecurityScopedResource()();

    sub_10000CB4C((uint64_t)v196, &qword_100643470);
    return;
  }
  v111 = *(uint64_t (**)(id (*)(uint64_t, uint64_t), char *, uint64_t))(v197 + 32);
  v112 = v183;
  v113 = v111(v183, v30, v198);
  if (v52)
  {
    v110 = (*(uint64_t (**)(_QWORD, uint64_t))(v197 + 8))(v112, v198);
    goto LABEL_17;
  }
  v173 = v49;
  v172 = v24;
  v124 = v190;
  v125 = URL.lastPathComponent.getter(v113);
  v126 = v112;
  v128 = v127;
  v129 = (void (*)(uint64_t, char *, uint64_t))v111;
  URL.appendingPathComponent(_:)(v125, v127);
  swift_bridgeObjectRelease(v128);
  v176 = objc_msgSend(objc_allocWithZone((Class)NSFileCoordinator), "init");
  URL._bridgeToObjectiveC()((NSURL *)&v204._urlString);
  v175 = v130;
  URL._bridgeToObjectiveC()(&v204);
  v174 = v131;
  v133 = v197;
  v132 = v198;
  v134 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 16);
  v135 = v182;
  v134(v182, v124, v198);
  v136 = v178;
  v134(v178, (uint64_t)v126, v132);
  v137 = *(unsigned __int8 *)(v133 + 80);
  v138 = (v137 + 24) & ~v137;
  v139 = (v12 + v137 + v138) & ~v137;
  v140 = (v12 + v139 + 7) & 0xFFFFFFFFFFFFFFF8;
  v141 = swift_allocObject(&unk_1005EA360, v140 + 16, v137 | 7);
  *(_QWORD *)(v141 + 16) = v195;
  v129(v141 + v138, v135, v132);
  v178 = (char *)v129;
  v129(v141 + v139, v136, v132);
  v142 = (_QWORD *)(v141 + v140);
  v143 = v194;
  *v142 = v193;
  v142[1] = v143;
  v144 = swift_allocObject(&unk_1005EA388, 32, 7);
  *(_QWORD *)(v144 + 16) = sub_10041F2E4;
  *(_QWORD *)(v144 + 24) = v141;
  v179 = v141;
  v202 = sub_100066584;
  v203 = (_QWORD *)v144;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v200 = sub_100416E14;
  v201 = &unk_1005EA3A0;
  v145 = _Block_copy(&aBlock);
  v146 = v203;
  v147 = v195;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v148 = swift_release(v146).n128_u64[0];
  *(_QWORD *)&aBlock = 0;
  v149 = v176;
  v150 = v175;
  v151 = v174;
  objc_msgSend(v176, "coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:", v175, 1, v174, 8, &aBlock, v145, v148);
  _Block_release(v145);

  v152 = (id)aBlock;
  LOBYTE(v150) = swift_isEscapingClosureAtFileLocation(v144, "", 98, 201, 181, 1);
  v153 = swift_release(v144);
  if ((v150 & 1) != 0)
    __break(1u);
  v36 = v188;
  v154 = v173;
  if (!v152)
  {
    v171 = v198;
    (*(void (**)(id (*)(uint64_t, uint64_t), uint64_t, __n128))(v197 + 8))(v183, v198, v153);
    ((void (*)(char *, char *, uint64_t))v178)(v36, v180, v171);
    v154(v36, 0, 1, v171);
    if (v177)
      URL.stopAccessingSecurityScopedResource()();
    v183 = sub_10041F2E4;
    v58 = (uint64_t)v196;
    v57 = v172;
    goto LABEL_5;
  }
  v155 = v152;
  v156 = *(id *)DOCLog.UI.unsafeMutableAddressor(v155);
  v157 = static os_log_type_t.error.getter(v156);
  v158 = sub_10006922C((uint64_t *)&unk_100644560);
  v159 = swift_allocObject(v158, 112, 7);
  *(_OWORD *)(v159 + 16) = xmmword_1004D4CE0;
  URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
  v161 = v160;
  *(_QWORD *)(v159 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v159 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v159 + 32) = v161;
  *(_QWORD *)(v159 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v159 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v159 + 72) = v155;
  v162 = v155;
  os_log(_:dso:log:type:_:)("Unable to access %@. Error: %@", 30, 2, &_mh_execute_header, v156, v157, v159);

  swift_bridgeObjectRelease(v159);
  v163 = (_QWORD *)swift_allocObject(&unk_1005EA3D8, 40, 7);
  v164 = v194;
  v163[2] = v193;
  v163[3] = v164;
  v163[4] = v162;
  v202 = sub_10041FAAC;
  v203 = v163;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v200 = sub_10004A82C;
  v201 = &unk_1005EA3F0;
  v165 = _Block_copy(&aBlock);
  v166 = v203;
  swift_retain();
  v167 = v162;
  swift_release(v166);
  DOCRunInMainThread(v165);
  _Block_release(v165);

  v168 = v198;
  v169 = *(void (**)(char *, uint64_t))(v197 + 8);
  v169(v180, v198);
  v169((char *)v183, v168);

  v170 = v179;
  if (v177)
    URL.stopAccessingSecurityScopedResource()();

  sub_10000CB4C((uint64_t)v196, &qword_100643470);
  swift_release(v170);
}

id sub_100416B2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v10;
  void *v11;
  NSURL *v12;
  void *v13;
  void *v14;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSURL *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  id aBlock[5];
  _QWORD *v36;

  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v11 = v10;
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  aBlock[0] = 0;
  LODWORD(a3) = objc_msgSend(a3, "copyItemAtURL:toURL:error:", v11, v13, aBlock);

  if ((_DWORD)a3)
    return aBlock[0];
  v34 = aBlock[0];
  v16 = aBlock[0];
  v17 = _convertNSErrorToError(_:)(v34);

  v19 = swift_willThrow(v18);
  v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(v19);
  LODWORD(v34) = static os_log_type_t.error.getter(v20);
  v21 = sub_10006922C((uint64_t *)&unk_100644560);
  v22 = swift_allocObject(v21, 152, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004D9880;
  URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
  v24 = v23;
  v25 = a6;
  v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v22 + 56) = v26;
  v27 = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v22 + 64) = v27;
  *(_QWORD *)(v22 + 32) = v24;
  URL._bridgeToObjectiveC()(v28);
  *(_QWORD *)(v22 + 96) = v26;
  *(_QWORD *)(v22 + 104) = v27;
  *(_QWORD *)(v22 + 72) = v29;
  v30 = _convertErrorToNSError(_:)(v17);
  *(_QWORD *)(v22 + 136) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v22 + 144) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v22 + 112) = v30;
  os_log(_:dso:log:type:_:)("Unable to copy %@ into %@. Error: %@", 36, 2, &_mh_execute_header, v20, v34, v22);

  swift_bridgeObjectRelease(v22);
  v31 = (_QWORD *)swift_allocObject(&unk_1005EA428, 40, 7);
  v31[2] = v25;
  v31[3] = a7;
  v31[4] = v17;
  aBlock[4] = sub_10041F39C;
  v36 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EA440;
  v32 = _Block_copy(aBlock);
  v33 = v36;
  swift_retain();
  swift_errorRetain(v17);
  swift_release(v33);
  DOCRunInMainThread(v32);
  _Block_release(v32);
  return (id)swift_errorRelease(v17);
}

uint64_t sub_100416E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *);
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v16 - v11;
  v13 = *(void (**)(char *, char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v13(v12, v10);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_100416EF4(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  a1(v7, a3);
  return sub_10000CB4C((uint64_t)v7, &qword_100643470);
}

void sub_100416FA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  char *v21;
  NSURL *v22;
  void *v23;
  void *v24;
  unsigned int v25;
  void **v26;
  void (*v27)(char *, uint64_t);
  void **v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  char *v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  __n128 v49;
  _QWORD *v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void (*v64)(uint64_t);
  _QWORD *v65;
  char v66[24];

  v59 = a6;
  v13 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v66, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v21 = (char *)Strong;
    sub_1000271D4(a4, (uint64_t)v15, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_10000CB4C((uint64_t)v15, &qword_100643470);
      if (!a1)
        goto LABEL_9;
LABEL_7:
      v29 = *(void **)&v21[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
      v30 = a1;
      v31 = objc_msgSend(v29, "interactionModeForPreparing");
      v32 = objc_msgSend(v29, "neverCreateBookmarkForOpenInPlace") ^ 1;
      v33 = (_QWORD *)swift_allocObject(&unk_1005EA540, 48, 7);
      v33[2] = v59;
      v33[3] = a7;
      v33[4] = v30;
      v33[5] = a2;
      v64 = sub_10041F444;
      v65 = v33;
      aBlock = _NSConcreteStackBlock;
      v61 = 1107296256;
      v62 = sub_10016C02C;
      v63 = &unk_1005EA558;
      v34 = a2;
      v35 = _Block_copy(&aBlock);
      v36 = v65;
      swift_retain();
      swift_errorRetain(v34);
      v37 = (char *)v30;
      objc_msgSend(v37, "prepareForMode:usingBookmark:completionBlock:", v31, v32, v35, swift_release(v36).n128_f64[0]);
      _Block_release(v35);

      v21 = v37;
LABEL_10:

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    URL._bridgeToObjectiveC()(v22);
    v24 = v23;
    aBlock = 0;
    v25 = objc_msgSend(a5, "removeItemAtURL:error:", v23, &aBlock);

    v26 = aBlock;
    if (v25)
    {
      v27 = *(void (**)(char *, uint64_t))(v17 + 8);
      v28 = aBlock;
      v27(v19, v16);
      if (a1)
        goto LABEL_7;
    }
    else
    {
      v38 = aBlock;
      v54 = _convertNSErrorToError(_:)(v26);

      v40 = swift_willThrow(v39);
      v56 = *(id *)DOCLog.UI.unsafeMutableAddressor(v40);
      v55 = static os_log_type_t.error.getter(v56);
      v41 = sub_10006922C((uint64_t *)&unk_100644560);
      v42 = swift_allocObject(v41, 112, 7);
      *(_OWORD *)(v42 + 16) = xmmword_1004D4CE0;
      URL._bridgeToObjectiveC()((NSURL *)&off_1004D4000);
      v44 = v43;
      v58 = a2;
      *(_QWORD *)(v42 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v42 + 64) = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)(v42 + 32) = v44;
      v57 = a7;
      v45 = v54;
      v46 = _convertErrorToNSError(_:)(v54);
      *(_QWORD *)(v42 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      a2 = v58;
      *(_QWORD *)(v42 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v42 + 72) = v46;
      v47 = v56;
      os_log(_:dso:log:type:_:)("Unable to remove url %@. Error: %@", 34, 2, &_mh_execute_header, v56, v55, v42);
      v48 = v45;
      a7 = v57;
      swift_errorRelease(v48);

      v49 = swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v49);
      if (a1)
        goto LABEL_7;
    }
LABEL_9:
    v50 = (_QWORD *)swift_allocObject(&unk_1005EA4F0, 40, 7);
    v50[2] = v59;
    v50[3] = a7;
    v50[4] = a2;
    v64 = (void (*)(uint64_t))sub_10041FAAC;
    v65 = v50;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10004A82C;
    v63 = &unk_1005EA508;
    v51 = _Block_copy(&aBlock);
    v52 = v65;
    swift_retain();
    swift_errorRetain(a2);
    swift_release(v52);
    DOCRunInMainThread(v51);
    _Block_release(v51);
    goto LABEL_10;
  }
}

void sub_100417454(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  _QWORD v13[5];
  _QWORD *v14;

  v9 = (_QWORD *)swift_allocObject(&unk_1005EA590, 48, 7);
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  v9[5] = a5;
  v13[4] = sub_10041F488;
  v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004A82C;
  v13[3] = &unk_1005EA5A8;
  v10 = _Block_copy(v13);
  v11 = v14;
  swift_retain();
  v12 = a4;
  swift_errorRetain(a5);
  swift_release(v11);
  DOCRunInMainThread(v10);
  _Block_release(v10);
}

uint64_t sub_100417524(void (*a1)(char *, uint64_t), uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_10006922C(&qword_100643470);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a3, "fileURL", v8);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v12 = type metadata accessor for URL(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  a1(v10, a4);
  return sub_10000CB4C((uint64_t)v10, &qword_100643470);
}

uint64_t sub_100417604(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  char *v5;
  void **v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  char v26;
  _BYTE v27[24];

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser);
  if (result)
  {
    v4 = (void *)result;
    v5 = (char *)objc_msgSend((id)result, "effectiveBrowserViewController");

    if (v5)
    {
      v6 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess(&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v27, 0, 0);
      v7 = *v6;
      if (v7 && (v8 = type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass(v7, v8)))
      {
        v9 = v7;

        DOCItemCollectionViewController.getCurrentLocation()();
        if (v10)
        {
          v11 = v10;
          v12 = objc_msgSend(v10, "sourceIdentifier");
          v13 = DOCDocumentSourceIdentifierRecentDocuments;
          v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v16 = v15;
          v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
          if (v14 == v17 && v16 == v18)
          {

            swift_bridgeObjectRelease_n(v16, 2);
          }
          else
          {
            v20 = v18;
            v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);

            swift_bridgeObjectRelease(v16);
            *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
            if ((v21 & 1) == 0)
            {
              v23 = objc_msgSend(v11, "fileProviderItem", v22);
              if (v23)
              {
                v24 = v23;
                v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
                v26 = DOCNode.isEqualTo(node:)(a1, v25);

                if ((v26 & 1) != 0)
                  return 1;
              }
              else
              {

              }
              return 0;
            }
          }

          return 1;
        }

      }
      else
      {

      }
    }
    return 0;
  }
  return result;
}

void sub_1004177F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(_QWORD, _QWORD), uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  id v29;
  id v30;
  Class isa;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD, _QWORD);
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  __n128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  id v86;
  void (*v87)(_QWORD, _QWORD);
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t aBlock[5];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v88 = a3;
  v91 = a4;
  v89 = a2;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64);
  __chkstk_darwin(v15);
  v19 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    v87 = a6;
    v90 = a7;
    v20 = v18;
    v21 = (void *)objc_opt_self(FPItemManager);
    v22 = a5;
    v86 = objc_msgSend(v21, "defaultManager");
    v23 = sub_10006922C((uint64_t *)&unk_100644550);
    v24 = *(unsigned __int8 *)(v20 + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = v25 + *(_QWORD *)(v20 + 72);
    v82 = ~v24;
    v83 = v24 | 7;
    v27 = swift_allocObject(v23, v26, v24 | 7);
    v81 = xmmword_1004D9670;
    *(_OWORD *)(v27 + 16) = xmmword_1004D9670;
    v85 = v20;
    v28 = *(void (**)(void))(v20 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v27 + v25, a1, v15);
    v29 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    v30 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v32 = objc_msgSend(v29, "initWithURLs:destinationFolder:", isa, v30, swift_bridgeObjectRelease(v27).n128_f64[0]);

    v84 = v30;
    objc_msgSend(v32, "setLastUsageUpdatePolicy:", 2);
    objc_msgSend(v32, "setShouldBounceOnCollision:", 1);
    v33 = a1;
    if (v91)
    {
      v34 = sub_10006922C(&qword_100644AB8);
      v35 = sub_10006922C((uint64_t *)&unk_100644AC0);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(_QWORD *)(v36 + 72);
      v38 = *(unsigned __int8 *)(v36 + 80);
      v39 = (v38 + 32) & ~v38;
      v40 = swift_allocObject(v34, v39 + v37, v38 | 7);
      *(_OWORD *)(v40 + 16) = v81;
      v41 = (_QWORD *)(v40 + v39 + *(int *)(v35 + 48));
      v28();
      v42 = v91;
      *v41 = v88;
      v41[1] = v42;
      swift_bridgeObjectRetain(v42);
      v43 = v32;
      v44 = sub_1003F29CC(v40);
      sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v43, "setTargetFilenamesByURL:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

    }
    URL.startAccessingSecurityScopedResource()();
    v46 = swift_allocObject(&unk_1005E9F00, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v28)((char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v15);
    v47 = (v24 + 16) & v82;
    v48 = (v16 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    v50 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    v52 = swift_allocObject(&unk_1005EA130, v51 + 9, v83);
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 32))(v52 + v47, v19, v15);
    *(_QWORD *)(v52 + v48) = v46;
    v53 = (_QWORD *)(v52 + v49);
    v54 = v90;
    *v53 = v87;
    v53[1] = v54;
    *(_QWORD *)(v52 + v50) = v32;
    v55 = v52 + v51;
    v56 = v84;
    *(_QWORD *)v55 = v84;
    *(_BYTE *)(v55 + 8) = v89 & 1;
    aBlock[4] = (uint64_t)sub_10041E5C0;
    v93 = v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10015936C;
    aBlock[3] = (uint64_t)&unk_1005EA148;
    v57 = _Block_copy(aBlock);
    v58 = v93;
    v59 = v32;
    v60 = v56;
    v61 = v59;
    swift_retain();
    objc_msgSend(v61, "setActionCompletionBlock:", v57, swift_release(v58).n128_f64[0]);
    _Block_release(v57);

    v62 = v86;
    objc_msgSend(v86, "scheduleAction:", v61);

  }
  else
  {
    v91 = a1;
    v63 = Logger.UI.unsafeMutableAddressor(v17);
    v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v63, v11);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.error.getter(v65);
    if (os_log_type_enabled(v65, (os_log_type_t)v66))
    {
      v67 = swift_slowAlloc(22, -1);
      v90 = a7;
      v68 = v67;
      v69 = swift_slowAlloc(64, -1);
      aBlock[0] = v69;
      *(_DWORD *)v68 = 136315394;
      v94 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95);
      *(_WORD *)(v68 + 12) = 2080;
      v94 = 0;
      v70 = sub_10006922C(&qword_100647560);
      v71 = String.init<A>(describing:)(&v94, v70);
      v72 = a6;
      v74 = v73;
      v94 = sub_1000544FC(v71, v73, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95);
      v75 = v74;
      a6 = v72;
      swift_bridgeObjectRelease(v75);
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "%s importDocument: Unable to import the destination FPItem: %s", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v68, -1, -1);
    }

    v76 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    URL.lastPathComponent.getter(v76);
    v78 = v77;
    v79 = String._bridgeToObjectiveC()();
    v80 = swift_bridgeObjectRelease(v78);
    v61 = (id)DOCErrorNoLocationAvailableError(v79, v80);

    a6(0, v61);
  }

}

void sub_100417E24(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, id), uint64_t a5, void *a6, uint64_t a7, int a8)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  id v44;
  unsigned __int8 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  void (*v53)(_QWORD, id);
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSString v57;
  id v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  void *v80;
  void *v81;
  _QWORD *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void (*v93)(_QWORD, id);
  uint64_t v94;
  uint64_t v95;
  uint64_t aBlock[5];
  _QWORD *v97;
  uint64_t v98;
  _BYTE v99[32];

  LODWORD(v91) = a8;
  v90 = a7;
  v92 = a6;
  v93 = a4;
  v94 = a5;
  v95 = a2;
  v10 = (_QWORD *)type metadata accessor for Logger(0);
  v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v85 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v99, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v22 = (char *)Strong;
    if (a1)
    {
      v23 = Logger.UI.unsafeMutableAddressor(Strong);
      (*(void (**)(char *, uint64_t, _QWORD *))(v11 + 16))(v13, v23, v10);
      swift_errorRetain(a1);
      v24 = swift_errorRetain(a1);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.error.getter(v25);
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc(22, -1);
        v28 = swift_slowAlloc(8, -1);
        v91 = v11;
        v29 = (_QWORD *)v28;
        v90 = swift_slowAlloc(32, -1);
        aBlock[0] = v90;
        *(_DWORD *)v27 = 136315394;
        v98 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99);
        *(_WORD *)(v27 + 12) = 2112;
        swift_errorRetain(a1);
        v30 = _swift_stdlib_bridgeErrorToNSError(a1);
        v92 = v10;
        v31 = v30;
        v98 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99);
        *v29 = v31;
        swift_errorRelease(a1);
        swift_errorRelease(a1);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s importDocument: Unable to import the file to the FileProvider. Error: %@", (uint8_t *)v27, 0x16u);
        v32 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v29, 1, v32);
        swift_slowDealloc(v29, -1, -1);
        v33 = v90;
        swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v27, -1, -1);

        (*(void (**)(char *, id))(v91 + 8))(v13, v92);
      }
      else
      {
        swift_errorRelease(a1);
        swift_errorRelease(a1);

        (*(void (**)(char *, _QWORD *))(v11 + 8))(v13, v10);
      }
      v93(0, a1);
LABEL_18:

      goto LABEL_19;
    }
    v34 = objc_msgSend(v92, "transferResults");
    if (v34)
    {
      v35 = v34;
      v89 = v22;
      v36 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v35, &type metadata for AnyHashable, v36, &protocol witness table for AnyHashable);

      v38 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v38((char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v95, v17);
      v39 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      AnyHashable.init<A>(_:)((char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v39);
      if (*(_QWORD *)(v37 + 16))
      {
        v40 = sub_100067654((uint64_t)aBlock);
        if ((v41 & 1) != 0)
        {
          v42 = *(id *)(*(_QWORD *)(v37 + 56) + 8 * v40);
          swift_bridgeObjectRelease(v37);
          sub_100067748((uint64_t)aBlock);
          v43 = *(void **)&v89[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
          v44 = objc_msgSend(v43, "interactionModeForPreparing");
          v88 = v42;
          if (v44)
          {
            v45 = objc_msgSend(v43, "neverCreateBookmarkForOpenInPlace");
            v46 = (void *)v90;
            if ((v45 & 1) != 0)
            {
              v86 = 0;
              v87 = 0;
            }
            else
            {
              v60 = objc_msgSend(v43, "hostIdentifier");
              v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
              v87 = v61;

            }
          }
          else
          {
            v86 = 0;
            v87 = 0;
            v46 = (void *)v90;
          }
          v38((char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v95, v17);
          v62 = *(unsigned __int8 *)(v18 + 80);
          v63 = (v62 + 24) & ~v62;
          v64 = (v19 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
          v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
          v66 = (v65 + 23) & 0xFFFFFFFFFFFFFFF8;
          v67 = swift_allocObject(&unk_1005EA180, v66 + 9, v62 | 7);
          v68 = v92;
          *(_QWORD *)(v67 + 16) = v92;
          (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v67 + v63, v20, v17);
          v69 = v89;
          *(_QWORD *)(v67 + v64) = v89;
          v70 = (_QWORD *)(v67 + v65);
          v71 = v94;
          *v70 = v93;
          v70[1] = v71;
          v72 = v67 + v66;
          *(_QWORD *)v72 = v46;
          *(_BYTE *)(v72 + 8) = v91 & 1;
          v73 = (void *)objc_opt_self(FPItemManager);
          v74 = v68;
          v75 = v69;
          swift_retain();
          v76 = v46;
          v77 = (char *)objc_msgSend(v73, "defaultManager");
          v78 = (_QWORD *)swift_allocObject(&unk_1005EA1A8, 56, 7);
          v78[2] = sub_10041E680;
          v78[3] = v67;
          v79 = v87;
          v78[4] = v86;
          v78[5] = v79;
          v80 = v88;
          v78[6] = v88;
          aBlock[4] = (uint64_t)sub_100360F8C;
          v97 = v78;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_100175118;
          aBlock[3] = (uint64_t)&unk_1005EA1C0;
          v81 = _Block_copy(aBlock);
          v82 = v97;
          swift_bridgeObjectRetain(v79);
          v83 = v80;
          swift_retain();
          objc_msgSend(v77, "fetchURLForItem:completionHandler:", v83, v81, swift_release(v82).n128_f64[0]);
          _Block_release(v81);
          v84 = v67;
          v22 = v77;
          swift_release(v84);

          swift_bridgeObjectRelease(v79);
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease(v37);
      v34 = (id)sub_100067748((uint64_t)aBlock);
      v22 = v89;
    }
    v47 = Logger.UI.unsafeMutableAddressor(v34);
    v48 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v11 + 16))(v16, v47, v10);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v92 = v10;
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      aBlock[0] = v52;
      *(_DWORD *)v51 = 136315138;
      v98 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s importDocument: Unable to import the file to the FileProvider: The import operation did not return any .transferResults", v51, 0xCu);
      swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v51, -1, -1);

      (*(void (**)(char *, id))(v11 + 8))(v16, v92);
    }
    else
    {

      (*(void (**)(char *, _QWORD *))(v11 + 8))(v16, v10);
    }
    v53 = v93;
    static String._unconditionallyBridgeFromObjectiveC(_:)(UIDocumentBrowserErrorDomain);
    v55 = v54;
    v56 = objc_allocWithZone((Class)NSError);
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v56, "initWithDomain:code:userInfo:", v57, 1, 0, swift_bridgeObjectRelease(v55).n128_f64[0]);

    v59 = (char *)v58;
    v53(0, v58);

    v22 = v59;
    goto LABEL_18;
  }
LABEL_19:
  URL.stopAccessingSecurityScopedResource()();
}

void sub_100418634(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void (*a7)(_QWORD, _QWORD), uint64_t a8, void *a9, char a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  void *v34;
  void (*v35)(_QWORD, _QWORD);
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  char *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __n128 v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void *v73;
  uint64_t v74;
  void (*v75)(_QWORD, _QWORD);
  void *v76;
  uint64_t v77;
  char *v78;
  uint64_t aBlock[5];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v76 = a1;
  v77 = a8;
  v75 = a7;
  v73 = a6;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v78 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v70 - v22;
  v24 = objc_msgSend(a4, "transferResults", v21);
  v74 = v14;
  if (v24)
  {
    v25 = v24;
    v26 = v13;
    v27 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for AnyHashable, v27, &protocol witness table for AnyHashable);

    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, a5, v16);
    v29 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    AnyHashable.init<A>(_:)(v23, v16, v29);
    if (*(_QWORD *)(v28 + 16))
    {
      v30 = sub_100067654((uint64_t)aBlock);
      if ((v31 & 1) != 0)
      {
        v32 = *(id *)(*(_QWORD *)(v28 + 56) + 8 * v30);
        swift_bridgeObjectRelease(v28);
        sub_100067748((uint64_t)aBlock);
        v33 = swift_allocObject(&unk_1005EA1F8, 73, 7);
        v34 = v73;
        v35 = v75;
        v36 = v76;
        *(_QWORD *)(v33 + 16) = v73;
        *(_QWORD *)(v33 + 24) = v35;
        *(_QWORD *)(v33 + 32) = v77;
        *(_QWORD *)(v33 + 40) = v36;
        *(_QWORD *)(v33 + 48) = a3;
        *(_QWORD *)(v33 + 56) = a9;
        *(_QWORD *)(v33 + 64) = v32;
        *(_BYTE *)(v33 + 72) = a10 & 1;
        aBlock[4] = (uint64_t)sub_10041E7A4;
        v80 = v33;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10004A82C;
        aBlock[3] = (uint64_t)&unk_1005EA210;
        v37 = _Block_copy(aBlock);
        v38 = v80;
        swift_errorRetain(a3);
        v39 = v36;
        v40 = a9;
        v41 = v32;
        v42 = v34;
        swift_retain();
        swift_release(v38);
        DOCRunInMainThread(v37);
        _Block_release(v37);

        return;
      }
    }
    swift_bridgeObjectRelease(v28);
    v24 = (id)sub_100067748((uint64_t)aBlock);
    v13 = v26;
    v14 = v74;
  }
  v43 = Logger.UI.unsafeMutableAddressor(v24);
  v44 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v78, v43, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
  v45 = a4;
  swift_errorRetain(a3);
  v46 = v45;
  v47 = swift_errorRetain(a3);
  v48 = v13;
  v49 = Logger.logObject.getter(v47);
  v50 = static os_log_type_t.error.getter(v49);
  if (os_log_type_enabled(v49, (os_log_type_t)v50))
  {
    v72 = v50;
    v73 = (void *)v48;
    v51 = swift_slowAlloc(42, -1);
    v71 = swift_slowAlloc(128, -1);
    aBlock[0] = v71;
    *(_DWORD *)v51 = 136315906;
    v81 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    *(_WORD *)(v51 + 12) = 2080;
    v52 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v53 = dispatch thunk of CustomStringConvertible.description.getter(v16, v52);
    v55 = v54;
    v81 = sub_1000544FC(v53, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    v56 = swift_bridgeObjectRelease(v55);
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v56);
    *(_WORD *)(v51 + 22) = 2080;
    v57 = objc_msgSend(v46, "transferResults");
    if (v57)
    {
      v58 = v57;
      v59 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v60 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v58, &type metadata for AnyHashable, v59, &protocol witness table for AnyHashable);

    }
    else
    {
      v60 = 0;
    }
    v81 = v60;
    v61 = sub_10006922C(&qword_100654A00);
    v62 = String.init<A>(describing:)(&v81, v61);
    v64 = v63;
    v81 = sub_1000544FC(v62, v63, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);

    swift_bridgeObjectRelease(v64);
    *(_WORD *)(v51 + 32) = 2080;
    v81 = a3;
    swift_errorRetain(a3);
    v65 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v66 = String.init<A>(describing:)(&v81, v65);
    v68 = v67;
    v81 = sub_1000544FC(v66, v67, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    swift_bridgeObjectRelease(v68);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v72, "%s importOperation finished with no item matching sourceURL: %s transferResults: %s. Error: %s", (uint8_t *)v51, 0x2Au);
    v69 = v71;
    swift_arrayDestroy(v71, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v51, -1, -1);

    (*(void (**)(char *, void *))(v74 + 8))(v78, v73);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

    swift_errorRelease(a3);
    swift_errorRelease(a3);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v48);
  }
  v75(v76, a3);
}

void sub_100418C38(char *a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *Strong;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  _BOOL4 v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  _QWORD *v39;
  id v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  __n128 v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  __n128 v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  Class isa;
  void *v72;
  uint64_t v73;
  double v74;
  id v75;
  uint64_t v76;
  int v77;
  _QWORD *v78;
  os_log_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  int v83;
  void (*v84)(_QWORD, _QWORD);
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t aBlock[5];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v83 = a8;
  v86 = a4;
  v87 = a5;
  v84 = a2;
  v85 = a3;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v76 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v76 - v19;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser]);
  if (Strong
    && (v22 = Strong,
        v23 = objc_msgSend(Strong, "effectiveBrowserViewController"),
        v22,
        v23))
  {
    v24 = v23;
    v25 = sub_100417604(a6);
    if ((v25 & 1) != 0)
    {
      v26 = Logger.UI.unsafeMutableAddressor(v25);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v26, v11);
      v27 = a7;
      v28 = v23;
      v29 = v27;
      v30 = v28;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.debug.getter(v31);
      v33 = v32;
      v34 = os_log_type_enabled(v31, v32);
      v82 = v30;
      if (v34)
      {
        v35 = swift_slowAlloc(32, -1);
        v78 = (_QWORD *)swift_slowAlloc(16, -1);
        v81 = swift_slowAlloc(32, -1);
        aBlock[0] = v81;
        *(_DWORD *)v35 = 136315650;
        v80 = v24;
        v90 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
        v79 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
        *(_WORD *)(v35 + 12) = 2112;
        v36 = v29;
        v90 = (uint64_t)v29;
        v37 = v29;
        v77 = v33;
        v38 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
        v39 = v78;
        *v78 = v29;

        *(_WORD *)(v35 + 22) = 2112;
        v76 = v35 + 32;
        v90 = (uint64_t)v30;
        v40 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
        v39[1] = v80;

        v29 = v36;
        v41 = v79;
        _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v77, "%s 1. importOperation finished with item: %@). Calling reveal on effectiveBrowserViewController: %@ expecting completion handler to be called", (uint8_t *)v35, 0x20u);
        v42 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v39, 2, v42);
        swift_slowDealloc(v39, -1, -1);
        v43 = v81;
        swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v35, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      v61 = v85;
      v60 = v86;
      v62 = v84;
      v63 = v83;
      if ((v83 & 1) == 0)
        v84(v86, v87);
      v64 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v65 = swift_allocObject(v64, 40, 7);
      *(_OWORD *)(v65 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v65 + 32) = v29;
      aBlock[0] = v65;
      specialized Array._endMutation()(v65);
      v66 = aBlock[0];
      v67 = swift_allocObject(&unk_1005EA248, 64, 7);
      *(_QWORD *)(v67 + 16) = v29;
      *(_BYTE *)(v67 + 24) = v63 & 1;
      *(_QWORD *)(v67 + 32) = v62;
      *(_QWORD *)(v67 + 40) = v61;
      v68 = v87;
      *(_QWORD *)(v67 + 48) = v60;
      *(_QWORD *)(v67 + 56) = v68;
      v69 = v29;
      swift_retain();
      v70 = v60;
      swift_errorRetain(v68);
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      aBlock[4] = (uint64_t)sub_10041E7F8;
      v89 = v67;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10016C02C;
      aBlock[3] = (uint64_t)&unk_1005EA260;
      v72 = _Block_copy(aBlock);
      v73 = v89;
      swift_retain();
      *(_QWORD *)&v74 = swift_release(v73).n128_u64[0];
      v75 = v82;
      objc_msgSend(v82, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 0, v72, v74);
      _Block_release(v72);

      swift_bridgeObjectRelease(v66);
      swift_release(v67);

    }
    else
    {
      v51 = objc_msgSend(a1, "activeDocumentCreationSession");
      if (v51)
      {
        v51[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_switchToRecentsAfterPresentation] = 1;

      }
      v52 = Logger.UI.unsafeMutableAddressor(v51);
      v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v52, v11);
      v54 = Logger.logObject.getter(v53);
      v56 = static os_log_type_t.info.getter(v55);
      if (os_log_type_enabled(v54, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(12, -1);
        v58 = swift_slowAlloc(32, -1);
        aBlock[0] = v58;
        *(_DWORD *)v57 = 136315138;
        v90 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
        _os_log_impl((void *)&_mh_execute_header, v54, v56, "%s importDocument: Skipping reveal item, since the destination isn't the current location, which can happen in UIP", v57, 0xCu);
        swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
        v59 = v58;
        v24 = v23;
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v57, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v84(v86, v87);

    }
  }
  else
  {
    v44 = Logger.UI.unsafeMutableAddressor(Strong);
    v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v20, v44, v11);
    v46 = Logger.logObject.getter(v45);
    v48 = static os_log_type_t.info.getter(v47);
    if (os_log_type_enabled(v46, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      aBlock[0] = v50;
      *(_DWORD *)v49 = 136315138;
      v90 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      _os_log_impl((void *)&_mh_execute_header, v46, v48, "%s importDocument: Unable to reveal item, since effective browser view controller can't be obtained", v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    v84(v86, v87);
  }
}

uint64_t sub_10041938C(int a1, void *a2, char a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  int v33;
  os_log_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = Logger.UI.unsafeMutableAddressor(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
  v18 = a2;
  v41 = v15;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.debug.getter(v19);
  v21 = v20;
  if (!os_log_type_enabled(v19, v20))
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v41, v12);
    if ((a3 & 1) == 0)
      return result;
    return a4(a6, a7);
  }
  v22 = swift_slowAlloc(28, -1);
  v38 = v13;
  v23 = v22;
  v35 = (_QWORD *)swift_slowAlloc(8, -1);
  v36 = swift_slowAlloc(32, -1);
  v43 = v36;
  *(_DWORD *)v23 = 136315650;
  v39 = a4;
  v42 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, &v43);
  v37 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
  *(_WORD *)(v23 + 12) = 2112;
  v34 = v19;
  v42 = (uint64_t)v18;
  v24 = v18;
  v33 = v21;
  v25 = a7;
  v26 = v24;
  a4 = v39;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
  v27 = v35;
  *v35 = v18;

  a7 = v25;
  *(_WORD *)(v23 + 22) = 1024;
  LODWORD(v42) = v40 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, (char *)&v42 + 4);
  v28 = v34;
  _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v33, "%s 2. importOperation reveal item: %@ completed with success: %{BOOL}d)", (uint8_t *)v23, 0x1Cu);
  v29 = sub_10006922C(&qword_100643AB0);
  swift_arrayDestroy(v27, 1, v29);
  swift_slowDealloc(v27, -1, -1);
  v30 = v36;
  swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v30, -1, -1);
  swift_slowDealloc(v23, -1, -1);

  result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v41, v37);
  if ((a3 & 1) != 0)
    return a4(a6, a7);
  return result;
}

void sub_10041966C(void *a1, void (*a2)(_QWORD, id), uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  __n128 v30;
  id v31;
  id v32;
  uint64_t v33;

  v33 = a3;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (v16 = objc_msgSend(a1, "fileProviderItem", v17)) != 0)
  {
    v20 = v16;
    v32 = v16;
    sub_1004177F4(a4, a6 & 1, a7, a8, v20, (void (*)(_QWORD, _QWORD))a2, v33);

  }
  else
  {
    v21 = Logger.UI.unsafeMutableAddressor(v16);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, v21, v14);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "importDocument: Unable to get the current location or the default location", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    URL.lastPathComponent.getter(v26);
    v28 = v27;
    v29 = String._bridgeToObjectiveC()();
    v30 = swift_bridgeObjectRelease(v28);
    v31 = (id)DOCErrorNoLocationAvailableError(v29, v30);

    a2(0, v31);
  }
}

void sub_100419A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSURL *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v8, &qword_100643470);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  if (a2)
    v14 = (void *)_convertErrorToNSError(_:)(a2);
  else
    v14 = 0;
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v12, v14);

}

void sub_100419B8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  id v31;
  id v32;
  double v33;
  void *v34;
  char *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  void **aBlock;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  char *v49;

  v42 = a8;
  v43 = a6;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v38 = a9;
    v39 = a10;
    v20 = a1;
    v41 = objc_msgSend(v20, "itemID");
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v16);
    v21 = *(unsigned __int8 *)(v17 + 80);
    v22 = (v21 + 48) & ~v21;
    v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v40 = a5;
    v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v25 = (char *)swift_allocObject(&unk_1005EA7C0, v24 + 8, v21 | 7);
    *((_QWORD *)v25 + 2) = v20;
    *((_QWORD *)v25 + 3) = a3;
    v26 = v43;
    *((_QWORD *)v25 + 4) = a4;
    *((_QWORD *)v25 + 5) = v26;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v22], v19, v16);
    v27 = &v25[v23];
    v28 = v38;
    *(_QWORD *)v27 = v42;
    *((_QWORD *)v27 + 1) = v28;
    *(_QWORD *)&v25[v24] = v39;
    v48 = sub_10041F79C;
    v49 = v25;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_10013103C;
    v47 = &unk_1005EA7D8;
    v29 = _Block_copy(&aBlock);
    v30 = v49;
    swift_bridgeObjectRetain(v28);
    swift_retain();
    v31 = v20;
    v32 = v26;
    *(_QWORD *)&v33 = swift_release(v30).n128_u64[0];
    v34 = v41;
    objc_msgSend(v40, "fetchParentsForItemID:recursively:completionHandler:", v41, 0, v29, v33);
    _Block_release(v29);

  }
  else
  {
    v35 = (char *)swift_allocObject(&unk_1005EA770, 40, 7);
    *((_QWORD *)v35 + 2) = a3;
    *((_QWORD *)v35 + 3) = a4;
    *((_QWORD *)v35 + 4) = a2;
    v48 = (uint64_t (*)(uint64_t, uint64_t))sub_10041FAAC;
    v49 = v35;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = sub_10004A82C;
    v47 = &unk_1005EA788;
    v36 = _Block_copy(&aBlock);
    v37 = v49;
    swift_retain();
    swift_errorRetain(a2);
    swift_release(v37);
    DOCRunInMainThread(v36);
    _Block_release(v36);
  }
}

void sub_100419E00(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  _QWORD *v45;

  if (a2)
  {
    v14 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = sub_10006922C((uint64_t *)&unk_100644560);
    v17 = swift_allocObject(v16, 112, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v17 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v17 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v17 + 32) = a3;
    v18 = a3;
    v19 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v17 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v17 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v17 + 72) = v19;
    os_log(_:dso:log:type:_:)("importDocument: Unable to fetch parent for item %@. Error: %@", 61, 2, &_mh_execute_header, v14, v15, v17);

    swift_bridgeObjectRelease(v17);
    v20 = (_QWORD *)swift_allocObject(&unk_1005EA888, 40, 7);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a2;
    v44 = sub_10041F39C;
    v45 = v20;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_10004A82C;
    v43 = &unk_1005EA8A0;
    v21 = _Block_copy(&aBlock);
    v22 = v45;
    swift_retain();
    swift_errorRetain(a2);
LABEL_16:
    swift_release(v22);
    DOCRunInMainThread(v21);
    _Block_release(v21);
    return;
  }
  if (!a1)
  {
LABEL_15:
    v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v35 = static os_log_type_t.error.getter(v34);
    v36 = sub_10006922C((uint64_t *)&unk_100644560);
    v37 = swift_allocObject(v36, 72, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v37 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v37 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v37 + 32) = a3;
    v38 = a3;
    os_log(_:dso:log:type:_:)("importDocument: Unable to fetch parent for item %@.", 51, 2, &_mh_execute_header, v34, v35, v37);

    swift_bridgeObjectRelease(v37);
    v39 = swift_allocObject(&unk_1005EA810, 32, 7);
    *(_QWORD *)(v39 + 16) = a4;
    *(_QWORD *)(v39 + 24) = a5;
    v44 = sub_10041F834;
    v45 = (_QWORD *)v39;
    aBlock = _NSConcreteStackBlock;
    v41 = 1107296256;
    v42 = sub_10004A82C;
    v43 = &unk_1005EA828;
    v21 = _Block_copy(&aBlock);
    v22 = v45;
    swift_retain();
    goto LABEL_16;
  }
  if (!((unint64_t)a1 >> 62))
  {
    v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v26)
      goto LABEL_6;
    goto LABEL_14;
  }
  if (a1 >= 0)
    v33 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v33 = a1;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v33))
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    goto LABEL_15;
  }
LABEL_6:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_9;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(a1 + 32);
LABEL_9:
    v28 = v27;
    swift_bridgeObjectRelease(a1);
    v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v30 = (void *)DOCNode.sourceIdentifier.getter(v29);
    v31 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v30, v28);

    v32 = swift_allocObject(&unk_1005EA860, 32, 7);
    *(_QWORD *)(v32 + 16) = a4;
    *(_QWORD *)(v32 + 24) = a5;
    swift_retain();
    sub_10041598C(a7, 1, a8, a9, a10, v31, (uint64_t)sub_10041F83C, v32);

    swift_release(v32);
    return;
  }
  __break(1u);
}

uint64_t sub_10041A26C(void (*a1)(char *, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  a1(v4, 0);
  return sub_10000CB4C((uint64_t)v4, &qword_100643470);
}

void sub_10041A310(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void **aBlock;
  _QWORD v26[4];
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.UI.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v22 = v4;
    v24 = v2;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 138412290;
    v23 = a1;
    if (a1)
    {
      aBlock = (void **)&v10->isa;
      v15 = v10;
    }
    else
    {
      aBlock = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v26);
    a1 = v23;
    *v14 = v23;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Creating document at %@", v13, 0xCu);
    v16 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v14, 1, v16);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
    v2 = v24;
    v4 = v22;
  }
  else
  {

    v11 = v10;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = swift_allocObject(&unk_1005E9E60, 32, 7);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = v2;
  v26[3] = sub_10041DF64;
  v27 = v17;
  aBlock = _NSConcreteStackBlock;
  v26[0] = 1107296256;
  v26[1] = sub_10004A82C;
  v26[2] = &unk_1005E9E78;
  v18 = _Block_copy(&aBlock);
  v19 = v27;
  v20 = v10;
  v21 = v2;
  swift_release(v19);
  DOCRunInMainThread(v18);
  _Block_release(v18);
}

double sub_10041A5A0(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  double result;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  id v49;
  id v50;
  _QWORD *v51;
  id v52;
  _QWORD aBlock[5];
  _QWORD *v54;
  char v55[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&aBlock[-1] - v10;
  v12 = objc_msgSend(a2, "activeDocumentCreationSession", v9);

  if (v12)
  {
    v14 = Logger.UI.unsafeMutableAddressor(v13);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Ignore document creation because the client is still processing the previous request", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v20 = *(void **)&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
    v21 = objc_msgSend(v20, "sceneIdentifier");
    v22 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v21);

    v23 = &v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v55, 0, 0);
    if (*(_QWORD *)v23)
    {
      v25 = Logger.UI.unsafeMutableAddressor(v24);
      v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v11, v25, v4);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.error.getter(v27);
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Ignore document creation because the client is still processing an open document request", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    }
    else
    {
      Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_documentBrowser]);
      if (Strong)
      {
        v31 = (void *)Strong;
        v32 = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_uiBrowserDelegate]);
        if (v32)
        {
          v33 = (void *)v32;
          v34 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
          v35 = objc_msgSend(v31, "configuration");
          v36 = objc_msgSend(v35, "sceneIdentifier");

          v37 = objc_msgSend(v34, "globalTabbedBrowserControllerForIdentifier:", v36);
          v52 = v33;
          if (v37)
          {
            v38 = type metadata accessor for DOCServiceDocumentBrowserViewController();
            v39 = (void *)swift_dynamicCastClass(v37, v38);
            if (!v39)

          }
          else
          {
            v39 = 0;
          }
          v40 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession(0));
          v41 = v39;
          v42 = a1;
          v43 = v20;
          v44 = sub_10041DF98(v42, v43, v39);

          objc_msgSend(a2, "setActiveDocumentCreationSession:", v44);
          sub_100414DA8((uint64_t)v44, 1);
          v45 = v52;
          if ((objc_msgSend(v52, "respondsToSelector:", "documentBrowser:didRequestDocumentCreationWithHandler:") & 1) != 0)
          {
            v46 = swift_allocObject(&unk_1005E9F00, 24, 7);
            swift_unknownObjectWeakInit(v46 + 16);
            v47 = (_QWORD *)swift_allocObject(&unk_1005E9F28, 40, 7);
            v47[2] = v46;
            v47[3] = v44;
            v47[4] = v42;
            aBlock[4] = sub_10041E0E0;
            v54 = v47;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10041AA7C;
            aBlock[3] = &unk_1005E9F40;
            v48 = _Block_copy(aBlock);
            v49 = v42;
            swift_unknownObjectRetain(v45);
            swift_retain();
            v50 = v44;
            objc_msgSend(v45, "documentBrowser:didRequestDocumentCreationWithHandler:", v31, v48, swift_retain().n128_f64[0]);
            _Block_release(v48);
            v51 = v54;
            swift_release(v47);

            swift_unknownObjectRelease_n(v45, 2);
            swift_release(v51);
            *(_QWORD *)&result = swift_release(v46).n128_u64[0];
          }
          else
          {

            *(_QWORD *)&result = swift_unknownObjectRelease(v45).n128_u64[0];
          }
        }
        else
        {

        }
      }
      else
      {

      }
    }
  }
  return result;
}

uint64_t sub_10041AA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, __n128);
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, uint64_t, __n128))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  v13 = swift_retain();
  v10(v8, a3, v13);
  swift_release(v9);
  return sub_10000CB4C((uint64_t)v8, &qword_100643470);
}

void sub_10041AB70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  Swift::String v28;
  void *object;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  double (*v44)(char *, char *, uint64_t);
  void *v45;
  void **aBlock;
  unint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void *v50;
  uint64_t v51;
  char v52[24];

  v45 = a5;
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v43 - v17;
  a3 += 16;
  swift_beginAccess(a3, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v20 = (void *)Strong;
    if (!a2)
    {
LABEL_5:
      v21 = swift_allocObject(&unk_1005E9F78, 32, 7);
      *(_QWORD *)(v21 + 16) = v20;
      *(_QWORD *)(v21 + 24) = a4;
      v50 = sub_10041E0EC;
      v51 = v21;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v48 = sub_10004A82C;
      v49 = &unk_1005E9F90;
      v22 = _Block_copy(&aBlock);
      v23 = v51;
      v24 = v20;
      v25 = a4;
      swift_release(v23);
      DOCRunInMainThread(v22);
      _Block_release(v22);

      return;
    }
    sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_10000CB4C((uint64_t)v11, &qword_100643470);
      goto LABEL_5;
    }
    v44 = *(double (**)(char *, char *, uint64_t))(v13 + 32);
    v26.n128_f64[0] = v44(v18, v11, v12);
    static os_log_type_t.info.getter(v26);
    aBlock = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v47);
    aBlock = (void **)0xD000000000000016;
    v47 = 0x8000000100533E00;
    v28._countAndFlagsBits = URL.absoluteString.getter(v27);
    object = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(object);
    v30 = v47;
    sub_10041D844((uint64_t)a4, (uint64_t)aBlock, v47);
    v31 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, char *, uint64_t, __n128))(v13 + 16))(v15, v18, v12, v31);
    v32 = *(unsigned __int8 *)(v13 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = (v14 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = a2;
    v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject(&unk_1005E9FC8, v35 + 8, v32 | 7);
    *(_QWORD *)(v36 + 16) = v20;
    *(_QWORD *)(v36 + 24) = a4;
    v44((char *)(v36 + v33), v15, v12);
    *(_QWORD *)(v36 + v34) = v43;
    v37 = v45;
    *(_QWORD *)(v36 + v35) = v45;
    v50 = sub_10041E1C4;
    v51 = v36;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_10004A82C;
    v49 = &unk_1005E9FE0;
    v38 = _Block_copy(&aBlock);
    v39 = v51;
    v40 = v20;
    v41 = a4;
    v42 = v37;
    swift_release(v39);
    DOCRunInMainThread(v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

double sub_10041AECC(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  double result;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;

  v26 = a5;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100414DA8((uint64_t)a2, 2);
  static os_log_type_t.info.getter(v13);
  v27 = 0;
  v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v28);
  v27 = 0xD000000000000013;
  v28 = 0x8000000100533E20;
  v15._countAndFlagsBits = URL.absoluteString.getter(v14);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17 = v28;
  sub_10041D844((uint64_t)a2, v27, v28);
  v18 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a3, v9, v18);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(&unk_1005EA018, v20 + v11, v19 | 7);
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21 + v20, v12, v9);
  v22 = a1;
  v23 = a2;
  sub_10041598C(a3, 0, 0, 0, a4, v26, (uint64_t)sub_10041E290, v21);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_10041B064(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char *v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void **aBlock;
  unint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void (*v40)();
  uint64_t v41;

  v34 = a3;
  v35 = a2;
  v32 = a1;
  v7 = sub_10006922C(&qword_100643470);
  v33 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v33 + 64);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13.n128_f64[0] = __chkstk_darwin(v10);
  v14 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.info.getter(v13);
  aBlock = 0;
  v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v37);
  aBlock = (void **)0xD000000000000014;
  v37 = 0x8000000100533E40;
  v16._countAndFlagsBits = URL.absoluteString.getter(v15);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18 = v37;
  sub_10041D844((uint64_t)a4, (uint64_t)aBlock, v37);
  v19 = swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a5, v10, v19);
  sub_1000271D4(v32, (uint64_t)v9, &qword_100643470);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = *(unsigned __int8 *)(v33 + 80);
  v23 = (v12 + v22 + v21) & ~v22;
  v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject(&unk_1005EA040, v24 + 8, v20 | v22 | 7);
  v26 = v34;
  *(_QWORD *)(v25 + 16) = v34;
  *(_QWORD *)(v25 + 24) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v25 + v21, v14, v10);
  sub_1000B34E4((uint64_t)v9, v25 + v23);
  v27 = v35;
  *(_QWORD *)(v25 + v24) = v35;
  v40 = sub_10041E3D0;
  v41 = v25;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_10004A82C;
  v39 = &unk_1005EA058;
  v28 = _Block_copy(&aBlock);
  v29 = v41;
  v30 = v26;
  v31 = a4;
  swift_errorRetain(v27);
  swift_release(v29);
  DOCRunInMainThread(v28);
  _Block_release(v28);
}

void sub_10041B2A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  id v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  double (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void **aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  void (*v74)();
  uint64_t v75;

  v63 = a4;
  v64 = a3;
  v8 = type metadata accessor for URL(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v65 = v9;
  v66 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100643470);
  v59 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v60 = v11;
  v62 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v56 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for DispatchTime(0);
  v18 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.n128_f64[0] = __chkstk_darwin(v21);
  v24 = (char *)&v53 - v23;
  static os_log_type_t.info.getter(v22);
  sub_10041D844(a2, 0xD00000000000002CLL, 0x8000000100533E60);
  v61 = a2;
  sub_100414DA8(a2, 3);
  v25 = objc_msgSend(a1, "activeDocumentCreationSession");
  if (v25)
  {
    v27 = v25;
    v28 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v29 = static OS_dispatch_queue.main.getter(v28);
    v55 = a5;
    v30 = (void *)v29;
    static DispatchTime.now()(v29);
    + infix(_:_:)(v20, 5.0);
    v54 = *(double (**)(char *, uint64_t))(v18 + 8);
    v54(v20, v69);
    v31 = swift_allocObject(&unk_1005EA0E0, 32, 7);
    *(_QWORD *)(v31 + 16) = a1;
    *(_QWORD *)(v31 + 24) = v27;
    v74 = sub_10041E5B4;
    v75 = v31;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_10004A82C;
    v73 = &unk_1005EA0F8;
    v32 = _Block_copy(&aBlock);
    v33 = v75;
    v34 = a1;
    v35 = v27;
    swift_release(v33);
    static DispatchQoS.unspecified.getter(v36);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v37 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v38 = sub_10006922C((uint64_t *)&unk_100647540);
    v39 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v38, v39, v12, v37);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v24, v17, v14, v32);
    _Block_release(v32);

    a5 = v55;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v57);
    v26.n128_f64[0] = v54(v24, v69);
  }
  static os_log_type_t.info.getter(v26);
  sub_10041D844(v61, 0xD000000000000025, 0x8000000100533E90);
  v40 = v62;
  sub_1000271D4(v63, v62, &qword_100643470);
  v42 = v66;
  v41 = v67;
  v43 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v64, v68);
  v44 = *(unsigned __int8 *)(v59 + 80);
  v45 = (v44 + 24) & ~v44;
  v46 = *(unsigned __int8 *)(v41 + 80);
  v47 = (v60 + v46 + v45) & ~v46;
  v48 = (v65 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = swift_allocObject(&unk_1005EA090, v48 + 8, v44 | v46 | 7);
  *(_QWORD *)(v49 + 16) = a1;
  sub_1000B34E4(v40, v49 + v45);
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v49 + v47, v42, v43);
  *(_QWORD *)(v49 + v48) = a5;
  v74 = (void (*)())sub_10041DDE4;
  v75 = v49;
  aBlock = _NSConcreteStackBlock;
  v71 = 1107296256;
  v72 = sub_10004A82C;
  v73 = &unk_1005EA0A8;
  v50 = _Block_copy(&aBlock);
  v51 = v75;
  v52 = a1;
  swift_errorRetain(a5);
  swift_release(v51);
  DOCRunInMainThread(v50);
  _Block_release(v50);
}

void sub_10041B768(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  __n128 v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;

  v34 = a2;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_1006495B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_1006475C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v31 - v17;
  v33 = a1;
  v19 = (char *)objc_msgSend(a1, "activeDocumentCreationSession", v16);
  if (v19)
  {
    v20 = v19;
    v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v21(v18, &v19[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier], v3);

    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v22(v18, 0, 1, v3);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v22(v18, 1, 1, v3);
    v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  }
  v21(v14, (char *)(v34 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier), v3);
  v22(v14, 0, 1, v3);
  v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1000271D4((uint64_t)v18, (uint64_t)v8, (uint64_t *)&unk_1006475C0);
  sub_1000271D4((uint64_t)v14, v23, (uint64_t *)&unk_1006475C0);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v24((uint64_t)v8, 1, v3) != 1)
  {
    sub_1000271D4((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1006475C0);
    if (v24(v23, 1, v3) != 1)
    {
      v26 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v32, v23, v3);
      v27 = sub_10005A360((unint64_t *)&qword_100655BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v26, v3, v27);
      v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v26, v3);
      sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006475C0);
      sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006475C0);
      v29(v11, v3);
      sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_1006475C0);
      if ((v28 & 1) == 0)
        return;
      goto LABEL_11;
    }
    sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006475C0);
    sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006475C0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
LABEL_9:
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_1006495B0);
    return;
  }
  sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_1006475C0);
  sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006475C0);
  if (v24(v23, 1, v3) != 1)
    goto LABEL_9;
  sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_1006475C0);
LABEL_11:
  static os_log_type_t.info.getter(v25);
  v30 = v34;
  sub_10041D844(v34, 0xD000000000000036, 0x8000000100533EC0);
  sub_100414DA8(v30, 0);
}

void sub_10041BB18(void *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  id v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  _BYTE v28[40];
  _BYTE v29[24];

  if (a1)
  {
    v26 = a1;
    sub_10041A5A0(v26, a2);

    return;
  }
  v3 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController];
  v4 = swift_allocObject(&unk_1005E9EB0, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v29, 0, 0);
  v6 = *v5;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v19 = v6;
    else
      v19 = v6 & 0xFFFFFFFFFFFFFF8;
    v20 = a2;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (v7)
    {
LABEL_5:
      v9 = v7 - 1;
      if (__OFSUB__(v7, 1))
      {
        __break(1u);
      }
      else if ((v6 & 0xC000000000000001) == 0)
      {
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v9 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v10 = *(id *)(v6 + 8 * v9 + 32);
          goto LABEL_10;
        }
        __break(1u);
        return;
      }
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
LABEL_10:
      v11 = v10;
      v12 = objc_msgSend(v10, "fileProviderItem", swift_bridgeObjectRelease(v6).n128_f64[0]);
      if (v12)
      {
        v13 = v12;
        v14 = (void *)FPActionImportHere;
        v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
        inited = swift_initStackObject(v15, v28);
        *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
        *(_QWORD *)(inited + 32) = v13;
        v27 = inited;
        specialized Array._endMutation()(inited);
        v17 = v13;
        LOBYTE(v14) = sub_1003598CC(v14, v27);
        swift_bridgeObjectRelease(v27);

        if ((v14 & 1) != 0)
        {
          v18 = v11;
          sub_10041A5A0(v18, a2);

          swift_release(v4);
          return;
        }
      }

      goto LABEL_19;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2;
    swift_bridgeObjectRetain(v6);
    if (v7)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(v6);
LABEL_19:
  type metadata accessor for DOCHierarchyController(0);
  v21 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  v22 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
  v23 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
  v24 = swift_allocObject(&unk_1005E9ED8, 32, 7);
  *(_QWORD *)(v24 + 16) = sub_10041DF90;
  *(_QWORD *)(v24 + 24) = v4;
  v25 = v23;
  swift_retain();
  sub_1001E44F4(v21, v22, v23, (uint64_t)sub_10012BC58, v24);

  swift_release(v4);
  swift_release(v24);
}

void sub_10041BDE0(void *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = a1;
    sub_10041A5A0(v15, a2);

  }
  else
  {
    v9 = Logger.UI.unsafeMutableAddressor(v6);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.debug.getter(v11);
    if (os_log_type_enabled(v11, (os_log_type_t)v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v12, "Cannot create a document if we don't have a default location", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_10041BF14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v35 = a6;
  v36 = a5;
  v37 = a4;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = swift_allocObject(&unk_1005EA6A8, 32, 7);
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = a3;
    v18 = a1;
    swift_retain();
    sub_10041598C(v37, 1, 0, 0, v35, v18, (uint64_t)sub_10041F5FC, v17);

    swift_release(v17);
  }
  else
  {
    v33 = v10;
    v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v35 = a2;
    v36 = a3;
    v19 = Logger.UI.unsafeMutableAddressor(v14);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v19, v12);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cannot import a document if we don't have a default location", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v24 = v33;
    v25 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v34, v37, v9);
    v26 = *(unsigned __int8 *)(v24 + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject(&unk_1005EA658, v27 + v11, v26 | 7);
    v29 = v36;
    *(_QWORD *)(v28 + 16) = v35;
    *(_QWORD *)(v28 + 24) = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v28 + v27, v25, v9);
    aBlock[4] = sub_10041F5CC;
    v39 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005EA670;
    v30 = _Block_copy(aBlock);
    v31 = v39;
    swift_retain();
    swift_release(v31);
    DOCRunInMainThread(v30);
    _Block_release(v30);
  }
}

uint64_t sub_10041C1B4(void (*a1)(char *, id))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  __n128 v10;
  id v11;
  uint64_t v13;

  v2 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  URL.lastPathComponent.getter(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = swift_bridgeObjectRelease(v8);
  v11 = (id)DOCErrorNoLocationAvailableError(v9, v10);

  a1(v4, v11);
  return sub_10000CB4C((uint64_t)v4, &qword_100643470);
}

void sub_10041C2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v23 = a7;
  v13 = sub_10006922C(&qword_100643470);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  sub_1000271D4(a1, (uint64_t)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100643470);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(a5, v18 + 8, v16 | 7);
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  sub_1000B34E4((uint64_t)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v17);
  *(_QWORD *)(v19 + v18) = a2;
  aBlock[4] = a6;
  v25 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = v23;
  v20 = _Block_copy(aBlock);
  v21 = v25;
  swift_retain();
  swift_errorRetain(a2);
  swift_release(v21);
  DOCRunInMainThread(v20);
  _Block_release(v20);
}

void sub_10041C5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t inited;
  uint64_t v43;
  id v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  __n128 v60;
  void (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[40];
  char v75[32];

  v5 = v4;
  v71 = a2;
  v72 = a4;
  v70 = a3;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v66 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v61 - v15;
  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController];
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v18((char *)&v61 - v15, a1, v7, v14);
  v68 = v12;
  v65 = (void (*)(char *, char *, uint64_t))v18;
  ((void (*)(char *, char *, uint64_t))v18)(v12, v16, v7);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v62 = v19 | 7;
  v23 = swift_allocObject(&unk_1005E9C80, v22 + 8, v19 | 7);
  v24 = v5;
  *(_QWORD *)(v23 + 16) = v5;
  v63 = v20;
  v69 = v8;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v26 = v7;
  v27 = v17;
  v61 = v25;
  v25(v23 + v20, v16, v26);
  v64 = v21;
  v28 = (_QWORD *)(v23 + v21);
  v29 = v72;
  *v28 = v70;
  v28[1] = v29;
  v67 = v23;
  *(_QWORD *)(v23 + v22) = v71;
  v30 = (uint64_t *)(v27 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v27 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v75, 0, 0);
  v31 = *v30;
  if (!((unint64_t)v31 >> 62))
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    v33 = v5;
    swift_retain_n(v29, 2);
    v34 = v33;
    swift_bridgeObjectRetain(v31);
    if (v32)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v31);
    goto LABEL_17;
  }
  if (v31 < 0)
    v53 = v31;
  else
    v53 = v31 & 0xFFFFFFFFFFFFFF8;
  v54 = v5;
  swift_retain_n(v29, 2);
  v55 = v54;
  swift_bridgeObjectRetain(v31);
  v32 = _CocoaArrayWrapper.endIndex.getter(v53);
  if (!v32)
    goto LABEL_16;
LABEL_3:
  v35 = v32 - 1;
  if (__OFSUB__(v32, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_20:
    v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v31);
LABEL_8:
    v37 = v36;
    v38 = objc_msgSend(v36, "fileProviderItem", swift_bridgeObjectRelease(v31).n128_f64[0]);
    if (v38)
    {
      v39 = v38;
      v40 = (void *)FPActionImportHere;
      v41 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v41, v74);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v39;
      v73 = inited;
      specialized Array._endMutation()(inited);
      v43 = v73;
      v44 = v39;
      LOBYTE(v40) = sub_1003598CC(v40, v43);
      swift_bridgeObjectRelease(v43);

      if ((v40 & 1) != 0)
      {
        v45 = v64;
        v46 = v66;
        v47 = (uint64_t)v68;
        v65(v66, v68, v26);
        v48 = swift_allocObject(&unk_1005E9CD0, v45 + 16, v62);
        *(_QWORD *)(v48 + 16) = v24;
        v61(v48 + v63, v46, v26);
        v49 = (_QWORD *)(v48 + v45);
        v50 = v72;
        *v49 = v70;
        v49[1] = v50;
        v51 = v24;
        swift_retain();
        v52 = v37;
        sub_10041598C(v47, 1, 0, 0, v71, v52, (uint64_t)sub_10041DC54, v48);

        swift_release(v67);
LABEL_18:

        v60 = swift_release(v48);
        (*(void (**)(uint64_t, uint64_t, __n128))(v69 + 8))(v47, v26, v60);
        swift_release(v50);
        return;
      }
    }

LABEL_17:
    type metadata accessor for DOCHierarchyController(0);
    v56 = *(void **)(v27 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    v57 = *(void **)(v27 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
    v58 = *(void **)(v27 + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
    v48 = swift_allocObject(&unk_1005E9CA8, 32, 7);
    v59 = v67;
    *(_QWORD *)(v48 + 16) = sub_10041DBEC;
    *(_QWORD *)(v48 + 24) = v59;
    v52 = v58;
    swift_retain();
    sub_1001E44F4(v56, v57, v58, (uint64_t)sub_1000D9F90, v48);

    swift_release(v59);
    v50 = v72;
    v47 = (uint64_t)v68;
    goto LABEL_18;
  }
  if ((v35 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v35 < *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v36 = *(id *)(v31 + 8 * v35 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10041CA4C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint8_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v46 = a6;
  v48 = a4;
  v49 = a2;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a3;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9, v16);
    v19 = *(unsigned __int8 *)(v10 + 80);
    v20 = a5;
    v21 = (v19 + 24) & ~v19;
    v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_1005E9DE8, v22 + 16, v19 | 7);
    v24 = v49;
    *(_QWORD *)(v23 + 16) = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23 + v21, v12, v9);
    v25 = (_QWORD *)(v23 + v22);
    *v25 = v48;
    v25[1] = v20;
    v26 = a1;
    v27 = v24;
    swift_retain();
    sub_10041598C(v47, 1, 0, 0, v46, v26, (uint64_t)sub_10041DC54, v23);
    swift_release(v23);

  }
  else
  {
    v45 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v46 = a5;
    v28 = Logger.UI.unsafeMutableAddressor(v15);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, v28, v13);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, (os_log_type_t)v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v31, "Cannot import a document if we don't have a default location", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    v33 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v45, v47, v9);
    v34 = *(unsigned __int8 *)(v10 + 80);
    v35 = (v34 + 24) & ~v34;
    v36 = (v11 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject(&unk_1005E9D98, v36 + 16, v34 | 7);
    v38 = v49;
    *(_QWORD *)(v37 + 16) = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v37 + v35, v33, v9);
    v39 = (_QWORD *)(v37 + v36);
    v40 = v46;
    *v39 = v48;
    v39[1] = v40;
    aBlock[4] = sub_10041DDEC;
    v51 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005E9DB0;
    v41 = _Block_copy(aBlock);
    v42 = v51;
    v43 = v38;
    swift_retain();
    swift_release(v42);
    DOCRunInMainThread(v41);
    _Block_release(v41);
  }
}

uint64_t sub_10041CD4C(void *a1, uint64_t a2, void (*a3)(char *, id), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  __n128 v40;
  id v41;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v49;
  void (*v50)(char *, id);
  _QWORD aBlock[5];
  uint64_t v52;

  v49 = a4;
  v50 = a3;
  v47 = a1;
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v45 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100643470);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v43 - v14;
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v6 + 56);
  v16 = v48((char *)&v43 - v14, 1, 1, v5, v13);
  v46 = a2;
  URL.lastPathComponent.getter(v16);
  v18 = v17;
  v19 = String._bridgeToObjectiveC()();
  v20 = swift_bridgeObjectRelease(v18);
  v44 = (id)DOCErrorNoLocationAvailableError(v19, v20);

  sub_1000271D4((uint64_t)v15, (uint64_t)v11, &qword_100643470);
  v21 = v45;
  v22 = a2;
  v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v45, v22, v43);
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = *(unsigned __int8 *)(v6 + 80);
  v27 = (v10 + v26 + v25) & ~v26;
  v28 = (v7 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1005E9E10, v28 + 8, v24 | v26 | 7);
  v30 = v47;
  *(_QWORD *)(v29 + 16) = v47;
  sub_1000B34E4((uint64_t)v11, v29 + v25);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v29 + v27, v21, v23);
  v31 = v44;
  *(_QWORD *)(v29 + v28) = v44;
  aBlock[4] = sub_10041DDE4;
  v52 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9E28;
  v32 = _Block_copy(aBlock);
  v33 = v52;
  v34 = v30;
  v35 = v31;
  swift_release(v33);
  DOCRunInMainThread(v32);
  _Block_release(v32);

  sub_10000CB4C((uint64_t)v15, &qword_100643470);
  v36 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v15, 1, 1, v23);
  URL.lastPathComponent.getter(v36);
  v38 = v37;
  v39 = String._bridgeToObjectiveC()();
  v40 = swift_bridgeObjectRelease(v38);
  v41 = (id)DOCErrorNoLocationAvailableError(v39, v40);

  v50(v15, v41);
  return sub_10000CB4C((uint64_t)v15, &qword_100643470);
}

void sub_10041D014(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v34 = a5;
  v35 = a6;
  v32 = a3;
  v33 = a2;
  v8 = sub_10006922C(&qword_100643470);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a4, v12, v15);
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = (v14 + v19 + v18) & ~v19;
  v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1005E9CF8, v22 + 16, v17 | v19 | 7);
  v24 = v32;
  *(_QWORD *)(v23 + 16) = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23 + v18, v16, v12);
  sub_1000B34E4((uint64_t)v11, v23 + v20);
  v26 = v33;
  v25 = v34;
  *(_QWORD *)(v23 + v21) = v33;
  v27 = (_QWORD *)(v23 + v22);
  v28 = v35;
  *v27 = v25;
  v27[1] = v28;
  aBlock[4] = sub_10041DD54;
  v37 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9D10;
  v29 = _Block_copy(aBlock);
  v30 = v37;
  v31 = v24;
  swift_errorRetain(v26);
  swift_retain();
  swift_release(v30);
  DOCRunInMainThread(v29);
  _Block_release(v29);
}

uint64_t sub_10041D1F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  _QWORD aBlock[5];
  uint64_t v35;

  v32 = a6;
  v33 = a5;
  v30 = a4;
  v31 = a3;
  v29 = a1;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100643470);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a3, (uint64_t)v15, &qword_100643470);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v14 + v18 + v17) & ~v18;
  v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1005E9D48, v20 + 8, v16 | v18 | 7);
  v22 = v29;
  *(_QWORD *)(v21 + 16) = v29;
  sub_1000B34E4((uint64_t)v15, v21 + v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v19, v11, v8);
  v23 = v30;
  *(_QWORD *)(v21 + v20) = v30;
  aBlock[4] = sub_10041DDE4;
  v35 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005E9D60;
  v24 = _Block_copy(aBlock);
  v25 = v35;
  v26 = v22;
  swift_errorRetain(v23);
  swift_release(v25);
  DOCRunInMainThread(v24);
  _Block_release(v24);
  return v33(v31, v23);
}

void DOCDocumentManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCDocumentManager", 24, "init()", 6, 0);
  __break(1u);
}

id DOCDocumentManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDocumentManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10041D5C0()
{
  return type metadata accessor for DOCDocumentManager.DocumentCreationSession(0);
}

uint64_t type metadata accessor for DOCDocumentManager.DocumentCreationSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1006549E8;
  if (!qword_1006549E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DOCDocumentManager.DocumentCreationSession);
  return result;
}

uint64_t sub_10041D604(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1004E7C08;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = &unk_1004E7C20;
    v4[4] = &unk_1004E7C20;
    v4[5] = &unk_1004E7C38;
    v4[6] = &unk_1004E7C20;
    v4[7] = &unk_1004E7C38;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCDocumentManager.DocumentCreationSession.Phase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCDocumentManager.DocumentCreationSession.Phase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10041D77C + 4 * byte_1004E7BBE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10041D7B0 + 4 * byte_1004E7BB9[v4]))();
}

uint64_t sub_10041D7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10041D7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10041D7C0);
  return result;
}

uint64_t sub_10041D7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10041D7D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10041D7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10041D7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCDocumentManager.DocumentCreationSession.Phase()
{
  return &type metadata for DOCDocumentManager.DocumentCreationSession.Phase;
}

unint64_t sub_10041D800()
{
  unint64_t result;

  result = qword_1006549F8;
  if (!qword_1006549F8)
  {
    result = swift_getWitnessTable(&unk_1004E7CF8, &type metadata for DOCDocumentManager.DocumentCreationSession.Phase);
    atomic_store(result, (unint64_t *)&qword_1006549F8);
  }
  return result;
}

uint64_t sub_10041D844(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  __n128 v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier;
  v15 = Logger.UI.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  v16 = swift_bridgeObjectRetain_n(a3, 2);
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.info.getter(v18);
  if (os_log_type_enabled(v17, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v32 = v10;
    v21 = v20;
    v31 = swift_slowAlloc(64, -1);
    v35 = v31;
    *(_DWORD *)v21 = 136315394;
    v29[1] = v21 + 4;
    v22 = sub_10005A360(&qword_100646B30, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
    v25 = v24;
    v34 = sub_1000544FC(v23, v24, &v35);
    v30 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    v26 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain(a3);
    v34 = sub_1000544FC(v33, a3, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "[CREATE DOCUMENT]: (session: %s) %s", (uint8_t *)v21, 0x16u);
    v27 = v31;
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    swift_bridgeObjectRelease_n(a3, 2);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

unint64_t sub_10041DB08(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0DF8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_10041DB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_10041DBEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10041CA4C(a1, *(void **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10041DC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);

  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1))
    v10(v0 + v8, v1);
  v11 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_errorRelease(*(_QWORD *)(v0 + v11));
  swift_release(*(_QWORD *)(v0 + v12 + 8));
  return swift_deallocObject(v0, v12 + 16, v3 | v7 | 7);
}

uint64_t sub_10041DD54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10041D1F8(*(void **)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD *)(v0 + v6), *(uint64_t (**)(uint64_t, uint64_t))(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10041DDEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_10041CD4C(*(void **)(v0 + 16), v0 + v2, *(void (**)(char *, id))v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_10041DE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void sub_10041DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_10041D014(a1, a2, *(void **)(v2 + 16), v2 + v6, *v7, v7[1]);
}

uint64_t sub_10041DF38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10041DF64()
{
  uint64_t v0;

  sub_10041BB18(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10041DF6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10041DF90(void *a1)
{
  uint64_t v1;

  sub_10041BDE0(a1, *(char **)(v1 + 16));
}

id sub_10041DF98(void *a1, void *a2, void *a3)
{
  void *v3;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  unsigned __int8 v12;
  objc_super v14;

  v7 = v3;
  UUID.init()(v7);
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase] = 0;
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_switchToRecentsAfterPresentation] = 0;
  v8 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController] = 0;
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_targetLocation] = a1;
  v9 = *(void **)&v7[v8];
  *(_QWORD *)&v7[v8] = a3;
  v10 = a1;
  v11 = a3;

  v12 = objc_msgSend(a2, "isInUIPDocumentLanding");
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isInUIPDocumentLanding] = v12;

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession(0);
  return objc_msgSendSuper2(&v14, "init");
}

uint64_t sub_10041E088()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041E0AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10041E0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10041AB70(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

id sub_10041E0EC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  sub_100414DA8(*(_QWORD *)(v0 + 24), 0);
  return objc_msgSend(v1, "setActiveDocumentCreationSession:", 0);
}

uint64_t sub_10041E124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_10041E1C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10041AECC(*(void **)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10041E214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10041E290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_10041B064(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

uint64_t sub_10041E2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);

  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1))
    v10(v0 + v8, v1);
  v11 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  swift_errorRelease(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v12, v3 | v7 | 7);
}

void sub_10041E3D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_10041B2A8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10041E450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);

  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9)
    v10(v0 + v3, v5);
  v11 = (v3 + v4 + v7) & ~v7;
  v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10(v0 + v11, v5);
  swift_errorRelease(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v12 + 8, v2 | v7 | 7);
}

void sub_10041E538()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_100415580(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_10041E5B4()
{
  uint64_t v0;

  sub_10041B768(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10041E5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v7 + 8));

  return swift_deallocObject(v0, v8 + 9, v5);
}

void sub_10041E680(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100418634(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(void **)(v3 + v9), *(void (**)(_QWORD, _QWORD))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10041E724()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10041E758()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 73, 7);
}

void sub_10041E7A4()
{
  uint64_t v0;

  sub_100418C38(*(char **)(v0 + 16), *(void (**)(_QWORD, _QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_10041E7BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_errorRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10041E7F8(int a1)
{
  uint64_t v1;

  return sub_10041938C(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10041E80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 39) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_10041E8C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100415CE4(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(char **)(v0 + ((((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10041E950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v2 | 7);
}

void sub_10041EA20(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100416FA4(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10041EA98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10041EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8;
  v8 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v6);
}

void sub_10041EB60(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_10041966C(a1, *(void (**)(_QWORD, id))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_10041EBCC(char *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(_QWORD, id), uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  id v29;
  id v30;
  Class isa;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  unint64_t v44;
  Class v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t (**v54)();
  uint64_t (*v55)();
  unint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_QWORD, id);
  uint64_t v79;
  uint64_t v80;
  NSString v81;
  __n128 v82;
  __int128 v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(_QWORD, id);
  uint64_t v94;
  uint64_t aBlock[5];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v91 = a6;
  v88 = a3;
  v89 = a4;
  LODWORD(v93) = a2;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v90 = v14;
  v92 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject(&unk_1005EA478, 32, 7);
  v20 = v19;
  *(_QWORD *)(v19 + 16) = a7;
  *(_QWORD *)(v19 + 24) = a8;
  if (a5)
  {
    v94 = v19;
    v21 = (void *)objc_opt_self(FPItemManager);
    swift_retain();
    v22 = a5;
    v87 = objc_msgSend(v21, "defaultManager");
    v23 = sub_10006922C((uint64_t *)&unk_100644550);
    v24 = *(unsigned __int8 *)(v13 + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = v25 + *(_QWORD *)(v13 + 72);
    v84 = v24 | 7;
    v27 = swift_allocObject(v23, v26, v24 | 7);
    v83 = xmmword_1004D9670;
    *(_OWORD *)(v27 + 16) = xmmword_1004D9670;
    v86 = v13;
    v28 = *(void (**)(void))(v13 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v28)(v27 + v25, a1, v12);
    v29 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    v30 = v22;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v32 = objc_msgSend(v29, "initWithURLs:destinationFolder:", isa, v30, swift_bridgeObjectRelease(v27).n128_f64[0]);

    v85 = v30;
    objc_msgSend(v32, "setLastUsageUpdatePolicy:", 2);
    objc_msgSend(v32, "setShouldBounceOnCollision:", 1);
    v33 = a1;
    v34 = v89;
    if (v89)
    {
      v35 = sub_10006922C(&qword_100644AB8);
      v36 = sub_10006922C((uint64_t *)&unk_100644AC0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(_QWORD *)(v37 + 72);
      v39 = *(unsigned __int8 *)(v37 + 80);
      v40 = (v39 + 32) & ~v39;
      v41 = swift_allocObject(v35, v40 + v38, v39 | 7);
      *(_OWORD *)(v41 + 16) = v83;
      v42 = (_QWORD *)(v41 + v40 + *(int *)(v36 + 48));
      v28();
      *v42 = v88;
      v42[1] = v34;
      swift_bridgeObjectRetain(v34);
      v43 = v32;
      v44 = sub_1003F29CC(v41);
      sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v43, "setTargetFilenamesByURL:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

    }
    URL.startAccessingSecurityScopedResource()();
    v46 = swift_allocObject(&unk_1005E9F00, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16);
    v47 = v92;
    ((void (*)(char *, char *, uint64_t))v28)(v92, v33, v12);
    v48 = (v24 + 16) & ~v24;
    v49 = (v90 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
    v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    v53 = swift_allocObject(&unk_1005EA4A0, v52 + 9, v84);
    (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v53 + v48, v47, v12);
    *(_QWORD *)(v53 + v49) = v46;
    v54 = (uint64_t (**)())(v53 + v50);
    v55 = (uint64_t (*)())v94;
    *v54 = sub_10010DF60;
    v54[1] = v55;
    *(_QWORD *)(v53 + v51) = v32;
    v56 = v53 + v52;
    v57 = v85;
    *(_QWORD *)v56 = v85;
    *(_BYTE *)(v56 + 8) = v93 & 1;
    aBlock[4] = (uint64_t)sub_10041E5C0;
    v96 = v53;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10015936C;
    aBlock[3] = (uint64_t)&unk_1005EA4B8;
    v58 = _Block_copy(aBlock);
    v59 = v96;
    v60 = v32;
    v61 = v57;
    v62 = v60;
    swift_retain();
    objc_msgSend(v62, "setActionCompletionBlock:", v58, swift_release(v59).n128_f64[0]);
    _Block_release(v58);

    v63 = v87;
    objc_msgSend(v87, "scheduleAction:", v62);
    swift_release(v55);

  }
  else
  {
    v92 = a1;
    v93 = a7;
    swift_retain();
    v65 = Logger.UI.unsafeMutableAddressor(v64);
    v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v65, v15);
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.error.getter(v67);
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc(22, -1);
      v94 = v20;
      v70 = v69;
      v71 = swift_slowAlloc(64, -1);
      aBlock[0] = v71;
      *(_DWORD *)v70 = 136315394;
      v97 = sub_1000544FC(0xD00000000000005DLL, 0x8000000100533F00, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);
      *(_WORD *)(v70 + 12) = 2080;
      v97 = 0;
      v72 = sub_10006922C(&qword_100647560);
      v73 = String.init<A>(describing:)(&v97, v72);
      v75 = v74;
      v97 = sub_1000544FC(v73, v74, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);
      swift_bridgeObjectRelease(v75);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s importDocument: Unable to import the destination FPItem: %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      v76 = v70;
      v20 = v94;
      swift_slowDealloc(v76, -1, -1);
    }

    v77 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v78 = v93;
    URL.lastPathComponent.getter(v77);
    v80 = v79;
    v81 = String._bridgeToObjectiveC()();
    v82 = swift_bridgeObjectRelease(v80);
    v62 = (id)DOCErrorNoLocationAvailableError(v81, v82);

    v78(0, v62);
    swift_release(v20);
  }

}

uint64_t sub_10041F238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v8 + 16, v6);
}

id sub_10041F2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 24) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  return sub_100416B2C(a1, a2, *(void **)(v2 + 16), v2 + v7, v2 + ((v8 + v6 + v7) & ~v6), *(_QWORD *)(v2 + ((v8 + ((v8 + v6 + v7) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v8 + ((v8 + v6 + v7) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10041F35C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10041F36C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10041F39C()
{
  uint64_t v0;

  return sub_100416EF4(*(void (**)(char *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10041F3BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100417E24(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(_QWORD, id))(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(void **)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_10041F444(uint64_t a1)
{
  uint64_t v1;

  sub_100417454(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10041F454()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10041F488()
{
  uint64_t v0;

  return sub_100417524(*(void (**)(char *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10041F494()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10041F4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100419A8C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10041F4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_10041F558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10041F5CC()
{
  uint64_t v0;

  type metadata accessor for URL(0);
  return sub_10041C1B4(*(void (**)(char *, id))(v0 + 16));
}

void sub_10041F5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10041C2A4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1005EA6D0, (uint64_t)sub_10041F630, (uint64_t)&unk_1005EA6E8);
}

uint64_t sub_10041F634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_10041F6E0(uint64_t a1, uint64_t a2)
{
  return sub_10041F7A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD))sub_100419B8C);
}

uint64_t sub_10041F6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_10041F79C(uint64_t a1, uint64_t a2)
{
  return sub_10041F7A8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD))sub_100419E00);
}

uint64_t sub_10041F7A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD))
{
  char *v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a3(a1, a2, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), *((_QWORD *)v3 + 5), &v3[v8], *(_QWORD *)&v3[v9], *(_QWORD *)&v3[v9 + 8], *(_QWORD *)&v3[(v9 + 23) & 0xFFFFFFFFFFFFF8]);
}

uint64_t sub_10041F834()
{
  uint64_t v0;

  return sub_10041A26C(*(void (**)(char *, _QWORD))(v0 + 16));
}

void sub_10041F83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10041C2A4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1005EA8D8, (uint64_t)sub_10041F630, (uint64_t)&unk_1005EA8F0);
}

uint64_t sub_10041F870()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_errorRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10041F8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  swift_errorRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10041F95C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return (*(uint64_t (**)(unint64_t, _QWORD))(v0 + 16))(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10041FAB8()
{
  return 0x73656C6966;
}

uint64_t sub_10041FACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x73656C6966 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease(0xE500000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73656C6966, 0xE500000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_10041FB58(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042043C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10041FB80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042043C();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_10041FBA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_100420310(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_10041FBD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10041FBFC + 4 * byte_1004E7D20[a1]))(1936154996, 0xE400000000000000);
}

unint64_t sub_10041FBFC()
{
  return 0xD000000000000010;
}

uint64_t sub_10041FC18()
{
  return 0x6C62617463656A65;
}

unint64_t sub_10041FC34()
{
  return 0xD000000000000018;
}

uint64_t sub_10041FC54()
{
  return 0x656C746974627573;
}

uint64_t sub_10041FC6C()
{
  return 0x666E496572616873;
}

uint64_t sub_10041FC90()
{
  return 0x614E656372756F73;
}

uint64_t sub_10041FCAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10041FCE8 + 4 * byte_1004E7D27[a1]))(0xD000000000000015, 0x800000010050BCA0);
}

uint64_t sub_10041FCE8()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_10041FD00()
{
  return 0x7974706D65;
}

uint64_t sub_10041FD14()
{
  return 0x726F727265;
}

uint64_t sub_10041FD28()
{
  return 0x626967696C656E69;
}

uint64_t sub_10041FD44()
{
  return 0x616F6C7055746F6ELL;
}

unint64_t sub_10041FD64()
{
  return 0xD000000000000014;
}

uint64_t sub_10041FD80()
{
  return 0x50676E69776F6873;
}

uint64_t sub_10041FDA4()
{
  return 0x6F546E7275746572;
}

uint64_t sub_10041FDC8()
{
  unsigned __int8 *v0;

  return sub_10041FBD0(*v0);
}

uint64_t sub_10041FDD0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100420530(a1, a2);
  *a3 = result;
  return result;
}

void sub_10041FDF4(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10041FE00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042108C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10041FE28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10042108C();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_10041FE50@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_10042080C(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

void sub_10041FE98(char *a1)
{
  sub_10039E3A0(*a1);
}

Swift::Int sub_10041FEA4()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_1000E3060((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_10041FEE8(uint64_t a1)
{
  char *v1;

  sub_1000E3060(a1, *v1);
}

Swift::Int sub_10041FEF0(uint64_t a1)
{
  char *v1;
  char v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  sub_1000E3060((uint64_t)v4, v2);
  return Hasher._finalize()();
}

unint64_t sub_10041FF30@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100420BC4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10041FF5C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10041FCAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s20NodeStatusAppearanceOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20NodeStatusAppearanceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100420060 + 4 * byte_1004E7D35[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100420094 + 4 * byte_1004E7D30[v4]))();
}

uint64_t sub_100420094(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042009C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004200A4);
  return result;
}

uint64_t sub_1004200B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004200B8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1004200BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004200C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20NodeStatusAppearanceOMa()
{
  return &_s20NodeStatusAppearanceON;
}

ValueMetadata *type metadata accessor for DOCDebugUIScenarioCollection()
{
  return &type metadata for DOCDebugUIScenarioCollection;
}

uint64_t sub_1004200F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100420C0C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

unint64_t sub_100420150()
{
  unint64_t result;

  result = qword_100654A08;
  if (!qword_100654A08)
  {
    result = swift_getWitnessTable(&unk_1004E7E40, &_s20NodeStatusAppearanceON);
    atomic_store(result, (unint64_t *)&qword_100654A08);
  }
  return result;
}

void sub_100420194(char *a1)
{
  sub_10039E1B8(*a1);
}

void sub_1004201A0()
{
  char *v0;

  sub_1000E3458(0, *v0);
}

void sub_1004201AC(uint64_t a1)
{
  char *v1;

  sub_1000E2F8C(a1, *v1);
}

void sub_1004201B4(uint64_t a1)
{
  char *v1;

  sub_1000E3458(a1, *v1);
}

unint64_t sub_1004201BC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10042161C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1004201E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100420218 + 4 * byte_1004E7D3A[*v0]))();
}

void sub_100420218(_QWORD *a1@<X8>)
{
  *a1 = 2036429415;
  a1[1] = 0xE400000000000000;
}

void sub_10042022C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E65657267;
  a1[1] = 0xE500000000000000;
}

void sub_100420244(_QWORD *a1@<X8>)
{
  *a1 = 0x656C70727570;
  a1[1] = 0xE600000000000000;
}

void sub_10042025C(_QWORD *a1@<X8>)
{
  *a1 = 1702194274;
  a1[1] = 0xE400000000000000;
}

void sub_100420270(_QWORD *a1@<X8>)
{
  *a1 = 0x776F6C6C6579;
  a1[1] = 0xE600000000000000;
}

void sub_100420288(_QWORD *a1@<X8>)
{
  *a1 = 6579570;
  a1[1] = 0xE300000000000000;
}

void sub_10042029C(_QWORD *a1@<X8>)
{
  *a1 = 0x65676E61726FLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1004202B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004215D8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

_QWORD *sub_100420310(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v3 = sub_10006922C(&qword_100654A10);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10007E7A0(a1, v7);
  v10 = sub_10042043C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DOCDebugUIScenarioCollection.CodingKeys, &type metadata for DOCDebugUIScenarioCollection.CodingKeys, v10, v7, v8);
  if (v1)
  {
    sub_100068588(a1);
  }
  else
  {
    v11 = sub_10006922C(&qword_100654A20);
    v12 = sub_100420480();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v16;
    sub_100068588(a1);
  }
  return v9;
}

unint64_t sub_10042043C()
{
  unint64_t result;

  result = qword_100654A18;
  if (!qword_100654A18)
  {
    result = swift_getWitnessTable(&unk_1004E7F84, &type metadata for DOCDebugUIScenarioCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100654A18);
  }
  return result;
}

unint64_t sub_100420480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100654A28;
  if (!qword_100654A28)
  {
    v1 = sub_10007E830(&qword_100654A20);
    sub_1004204EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_100654A28);
  }
  return result;
}

unint64_t sub_1004204EC()
{
  unint64_t result;

  result = qword_100654A30;
  if (!qword_100654A30)
  {
    result = swift_getWitnessTable(&unk_1004E7F5C, &_s8SettingsVN);
    atomic_store(result, (unint64_t *)&qword_100654A30);
  }
  return result;
}

uint64_t sub_100420530(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1936154996, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010)
  {
    v7 = 0x8000000100532540;
    if (a2 == 0x8000000100532540)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100532540, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0x6C62617463656A65 && a2 == 0xE900000000000065)
  {
    v8 = 0xE900000000000065;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C62617463656A65, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0xD000000000000018 && a2 == 0x80000001005340E0)
  {
    v9 = 0x80000001005340E0;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018, 0x80000001005340E0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v10 = 0xE800000000000000;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x666E496572616873 && a2 == 0xE90000000000006FLL)
  {
    v11 = 0xE90000000000006FLL;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x666E496572616873, 0xE90000000000006FLL, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_37;
  }
  if (a1 == 0x614E656372756F73 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease(0xEA0000000000656DLL);
    return 6;
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x614E656372756F73, 0xEA0000000000656DLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_10042080C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unsigned __int8 v37;
  int v38;
  char v39;

  v5 = sub_10006922C(&qword_100654A58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10007E7A0(a1, v9);
  v11 = sub_10042108C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s8SettingsV10CodingKeysON, &_s8SettingsV10CodingKeysON, v11, v9, v10);
  if (v2)
  {
    sub_100068588(a1);
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRelease(0);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(0);
  }
  else
  {
    v12 = sub_10006922C(&qword_100654A68);
    v39 = 0;
    v13 = sub_1004210D0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v36, v12, &v39, v5, v12, v13);
    v14 = v36;
    v39 = 1;
    v15 = sub_100421178();
    swift_bridgeObjectRetain(v14);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v36, &_s20NodeStatusAppearanceON, &v39, v5, &_s20NodeStatusAppearanceON, v15);
    v16 = v36;
    LOBYTE(v36) = 2;
    v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
    v39 = 3;
    v17 = sub_1004211BC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v36, &type metadata for CGFloat, &v39, v5, &type metadata for CGFloat, v17);
    v35 = v16;
    v34 = v36;
    v33 = v37;
    LOBYTE(v36) = 4;
    v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
    v20 = v19;
    v31 = v18;
    v32 = a2;
    LOBYTE(v36) = 5;
    swift_bridgeObjectRetain(v19);
    v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
    v23 = v22;
    v30 = v21;
    LOBYTE(v36) = 6;
    swift_bridgeObjectRetain(v22);
    v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v36, v5);
    v26 = v25;
    v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28 = v24;
    v27(v8, v5);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(0);
    sub_100068588(a1);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v14);
    v29 = v32;
    *v32 = v14;
    *((_BYTE *)v29 + 8) = v35;
    *((_BYTE *)v29 + 9) = v38;
    v29[2] = v34;
    *((_BYTE *)v29 + 24) = v33;
    v29[4] = v31;
    v29[5] = v20;
    v29[6] = v30;
    v29[7] = v23;
    v29[8] = v28;
    v29[9] = v26;
  }
}

unint64_t sub_100420BC4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0E90, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9)
    return 9;
  else
    return v3;
}

unint64_t sub_100420C0C()
{
  unint64_t result;

  result = qword_100654A38;
  if (!qword_100654A38)
  {
    result = swift_getWitnessTable(&unk_1004E7DC8, &_s20NodeStatusAppearanceON);
    atomic_store(result, (unint64_t *)&qword_100654A38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCDebugUIScenarioCollection.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100420C90 + 4 * byte_1004E7D42[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100420CB0 + 4 * byte_1004E7D47[v4]))();
}

_BYTE *sub_100420C90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100420CB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100420CB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100420CC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100420CC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100420CD0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DOCDebugUIScenarioCollection.CodingKeys()
{
  return &type metadata for DOCDebugUIScenarioCollection.CodingKeys;
}

uint64_t _s8SettingsVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

uint64_t _s8SettingsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v4 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v4;
  v5 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v5;
  v6 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *_s8SettingsVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  v6 = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[2] = v6;
  a1[4] = a2[4];
  v7 = a2[5];
  v8 = a1[5];
  a1[5] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  a1[6] = a2[6];
  v9 = a2[7];
  v10 = a1[7];
  a1[7] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  a1[8] = a2[8];
  v11 = a2[9];
  v12 = a1[9];
  a1[9] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t *_s8SettingsVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  v5 = a2[5];
  v6 = a1[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRelease(v6);
  v7 = a2[7];
  v8 = a1[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease(v8);
  v9 = a2[9];
  v10 = a1[9];
  a1[8] = a2[8];
  a1[9] = v9;
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t _s8SettingsVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8SettingsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s8SettingsVMa()
{
  return &_s8SettingsVN;
}

unint64_t sub_100420FB8()
{
  unint64_t result;

  result = qword_100654A40;
  if (!qword_100654A40)
  {
    result = swift_getWitnessTable(&unk_1004E7F34, &type metadata for DOCDebugUIScenarioCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100654A40);
  }
  return result;
}

unint64_t sub_100421000()
{
  unint64_t result;

  result = qword_100654A48;
  if (!qword_100654A48)
  {
    result = swift_getWitnessTable(&unk_1004E7EA4, &type metadata for DOCDebugUIScenarioCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100654A48);
  }
  return result;
}

unint64_t sub_100421048()
{
  unint64_t result;

  result = qword_100654A50;
  if (!qword_100654A50)
  {
    result = swift_getWitnessTable(&unk_1004E7ECC, &type metadata for DOCDebugUIScenarioCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100654A50);
  }
  return result;
}

unint64_t sub_10042108C()
{
  unint64_t result;

  result = qword_100654A60;
  if (!qword_100654A60)
  {
    result = swift_getWitnessTable(&unk_1004E8158, &_s8SettingsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100654A60);
  }
  return result;
}

unint64_t sub_1004210D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100654A70;
  if (!qword_100654A70)
  {
    v1 = sub_10007E830(&qword_100654A68);
    sub_100421134();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_100654A70);
  }
  return result;
}

unint64_t sub_100421134()
{
  unint64_t result;

  result = qword_100654A78;
  if (!qword_100654A78)
  {
    result = swift_getWitnessTable(&unk_1004E8130, &_s3TagON);
    atomic_store(result, (unint64_t *)&qword_100654A78);
  }
  return result;
}

unint64_t sub_100421178()
{
  unint64_t result;

  result = qword_100654A80;
  if (!qword_100654A80)
  {
    result = swift_getWitnessTable(&unk_1004E7DA0, &_s20NodeStatusAppearanceON);
    atomic_store(result, (unint64_t *)&qword_100654A80);
  }
  return result;
}

unint64_t sub_1004211BC()
{
  unint64_t result;

  result = qword_100654A88;
  if (!qword_100654A88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_100654A88);
  }
  return result;
}

uint64_t _s8SettingsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8SettingsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1004212DC + 4 * byte_1004E7D51[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100421310 + 4 * byte_1004E7D4C[v4]))();
}

uint64_t sub_100421310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100421318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100421320);
  return result;
}

uint64_t sub_10042132C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100421334);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100421338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100421340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8SettingsV10CodingKeysOMa()
{
  return &_s8SettingsV10CodingKeysON;
}

uint64_t _s3TagOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s3TagOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100421438 + 4 * byte_1004E7D5B[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10042146C + 4 * byte_1004E7D56[v4]))();
}

uint64_t sub_10042146C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100421474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10042147CLL);
  return result;
}

uint64_t sub_100421488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100421490);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100421494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042149C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s3TagOMa()
{
  return &_s3TagON;
}

unint64_t sub_1004214BC()
{
  unint64_t result;

  result = qword_100654A90;
  if (!qword_100654A90)
  {
    result = swift_getWitnessTable(&unk_1004E8050, &_s3TagON);
    atomic_store(result, (unint64_t *)&qword_100654A90);
  }
  return result;
}

unint64_t sub_100421504()
{
  unint64_t result;

  result = qword_100654A98;
  if (!qword_100654A98)
  {
    result = swift_getWitnessTable(&unk_1004E8108, &_s8SettingsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100654A98);
  }
  return result;
}

unint64_t sub_10042154C()
{
  unint64_t result;

  result = qword_100654AA0;
  if (!qword_100654AA0)
  {
    result = swift_getWitnessTable(&unk_1004E8078, &_s8SettingsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100654AA0);
  }
  return result;
}

unint64_t sub_100421594()
{
  unint64_t result;

  result = qword_100654AA8;
  if (!qword_100654AA8)
  {
    result = swift_getWitnessTable(&unk_1004E80A0, &_s8SettingsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100654AA8);
  }
  return result;
}

unint64_t sub_1004215D8()
{
  unint64_t result;

  result = qword_100654AB0;
  if (!qword_100654AB0)
  {
    result = swift_getWitnessTable(&unk_1004E7FD8, &_s3TagON);
    atomic_store(result, (unint64_t *)&qword_100654AB0);
  }
  return result;
}

unint64_t sub_10042161C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005C0F88, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

id sub_100421664()
{
  id *v0;

  return objc_msgSend(*v0, "attributedText");
}

void sub_100421688(void *a1)
{
  id *v1;

  objc_msgSend(*v1, "setAttributedText:", a1);

}

void *sub_1004216BC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText);
  v2 = v1;
  return v1;
}

void sub_1004216EC(void *a1)
{
  void **v1;
  char *v2;
  void *v3;
  id v4;

  v2 = (char *)*v1;
  v3 = *(void **)((char *)*v1 + OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText] = a1;
  v4 = a1;

  objc_msgSend(v2, "setNeedsUpdateConfiguration");
  objc_msgSend(v2, "invalidateIntrinsicContentSize");

}

id sub_100421750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t countAndFlagsBits;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;

  v2 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount);
  result = (id)_DocumentManagerBundle(a1);
  v5 = result;
  if (v3 < 1)
  {
    if (result)
    {
      v18._object = (void *)0x8000000100534540;
      v14._countAndFlagsBits = 0x6C6C4120776F6853;
      v14._object = (void *)0xE800000000000000;
      v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v15.value._object = (void *)0xEB00000000656C62;
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      v18._countAndFlagsBits = 0xD000000000000028;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v5, v16, v18)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
  }
  else
  {
    if (result)
    {
      v17._countAndFlagsBits = 0xD00000000000005CLL;
      v17._object = (void *)0x8000000100534570;
      v6._countAndFlagsBits = 0x6C6C4120776F6853;
      v6._object = (void *)0xED00002964252820;
      v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v7.value._object = (void *)0xEB00000000656C62;
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v17);

      v10 = sub_10006922C((uint64_t *)&unk_100644560);
      v11 = swift_allocObject(v10, 72, 7);
      v12 = *(_QWORD *)(v1 + v2);
      *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v11 + 56) = &type metadata for Int;
      *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v11 + 32) = v12;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v9._countAndFlagsBits, v9._object, v11);
      swift_bridgeObjectRelease(v9._object);
      swift_bridgeObjectRelease(v11);
      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10042190C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  }
  else
  {
    v4 = sub_10042197C(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *((_QWORD *)v1 + 1) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_10042197C(void *a1)
{
  id v2;
  void *v3;
  double v4;
  void *v5;
  id v6;
  id result;
  void *v8;
  UIAccessibilityTraits v9;
  id v10;
  unint64_t v11;
  UIAccessibilityTraits v12;
  id v13;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  if (qword_100641148 != -1)
    swift_once(&qword_100641148, sub_1000834CC);
  v3 = (void *)qword_100654AC0;
  v4 = *(double *)&qword_100654AC8;
  v5 = (void *)objc_opt_self(UIFont);
  v6 = v3;
  result = objc_msgSend(v5, "_preferredFontForTextStyle:weight:", v6, v4);
  if (result)
  {
    v8 = result;

    objc_msgSend(v2, "setFont:", v8);
    v9 = UIAccessibilityTraitHeader;
    v10 = v2;
    v11 = (unint64_t)objc_msgSend(v10, "accessibilityTraits");
    if ((v9 & ~v11) != 0)
      v12 = v9;
    else
      v12 = 0;
    objc_msgSend(v10, "setAccessibilityTraits:", v12 | v11);

    v13 = objc_msgSend(a1, "contentView");
    objc_msgSend(v13, "addSubview:", v10);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100421B20(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton])
  {
    v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton];
  }
  else
  {
    v4 = sub_100421B84(v2, a2);
    v5 = *(_QWORD *)&v2[v3];
    *(_QWORD *)&v2[v3] = v4;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v4;
}

uint64_t sub_100421B84(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v31;

  v3 = type metadata accessor for UIButton.Configuration(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)aBlock - v9;
  __chkstk_darwin(v8);
  v12 = (char *)aBlock - v11;
  v13 = (void *)objc_opt_self(UIDevice);

  static UIButton.Configuration.borderless()(v14);
  sub_10004F2F0(0, (unint64_t *)&unk_100644310, UIButton_ptr);
  v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v15(v10, v12, v3);
  v16 = swift_allocObject(&unk_1005EAE28, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v15(v7, v10, v3);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v17 = swift_allocObject(&unk_1005EB148, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100427F30;
  *(_QWORD *)(v17 + 24) = v16;
  swift_retain_n(v16, 2);
  v19 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v18, 0, 0, 0, sub_1000D9F90, v17);
  v20 = (void *)UIButton.init(configuration:primaryAction:)(v7, v19);
  swift_release(v16);
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v10, v3);
  swift_release(v16);
  v22 = swift_allocObject(&unk_1005EAE28, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  aBlock[4] = sub_100427F38;
  v31 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005EB160;
  v23 = _Block_copy(aBlock);
  swift_release(v31);
  objc_msgSend(v20, "setConfigurationUpdateHandler:", v23);
  _Block_release(v23);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v24) = 1148846080;
  objc_msgSend(v20, "setContentCompressionResistancePriority:forAxis:", 0, v24);
  static DOCVibrancy.Style.stroke(_:)(0);
  v25 = sub_10006922C(&qword_100654C88);
  v26 = swift_allocObject(v25, 32, 7);
  *(_QWORD *)(v26 + 16) = v20;
  *(_QWORD *)(v26 + 24) = v20;
  v27 = v20;
  v28 = objc_msgSend(a1, "contentView");
  UIView.addSubview<A>(_:)(v26);

  v21(v12, v3);
  return v26;
}

void sub_100421ECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void *, __n128);
  uint64_t v6;
  __n128 v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void *, __n128))(Strong
                                               + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8);
      v7 = swift_retain();
      v5(v4, v7);
      sub_100087534((uint64_t)v5, v6);
    }

  }
}

uint64_t sub_100421F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t KeyPath;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  id v37;
  _BYTE v38[24];

  v4 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v4);
  v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_10064A080);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v36 - v14;
  v17 = type metadata accessor for UIButton.Configuration(0, v16);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v38, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2, v21);
  if (result)
  {
    v23 = (void *)result;
    UIButton.configuration.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
    {

      return sub_10026187C((uint64_t)v15);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v15, v17);
      v24 = v23;
      v25 = UIView.doc_tintColorIgnoringVibrancyContainer.getter();

      UIButton.Configuration.baseForegroundColor.setter(v25);
      v26 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle];
      v27 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle + 8];
      v28 = objc_opt_self(UIFont);
      v36[0] = v13;
      v29 = (void *)v28;
      v36[1] = a1;
      swift_bridgeObjectRetain(v27);
      v30 = objc_msgSend(v29, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)(v26, v27, v6);
      KeyPath = swift_getKeyPath(&unk_1004E8290);
      v36[-2] = __chkstk_darwin(KeyPath);
      v32 = swift_getKeyPath(&unk_1004E82C0);
      v37 = v30;
      v33 = sub_1002793FC();
      AttributedString.subscript.setter(&v37, v32, v33);
      v34 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v9, 0, 1, v34);
      UIButton.Configuration.attributedTitle.setter(v9);
      v35 = v36[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v18 + 16))(v36[0], v20, v17);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v35, 0, 1, v17);
      UIButton.configuration.setter(v35);

      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return result;
}

id sub_100422284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  void *v13;
  id v14;

  v3 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint;
  v4 = *(void **)(v2
                + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint);
  if (v4)
  {
    v5 = *(id *)(v2
               + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint);
  }
  else
  {
    v6 = v2;
    v7 = sub_100421B20(a1, a2);
    v8 = (void *)DOCViewDecorator.leadingAnchor.getter();
    swift_release(v7);
    v9 = sub_10042190C();
    v10 = objc_msgSend(v9, "trailingAnchor");

    v11 = objc_msgSend(v8, "constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:", v10, 1.0);
    LODWORD(v12) = 1148682240;
    objc_msgSend(v11, "setPriority:", v12);
    v13 = *(void **)(v6 + v3);
    *(_QWORD *)(v6 + v3) = v11;
    v5 = v11;

    v4 = 0;
  }
  v14 = v4;
  return v5;
}

id sub_100422370()
{
  return sub_1003EAE5C(&OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator);
}

id sub_10042237C()
{
  return sub_1003EAE5C(&OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator);
}

id sub_100422388()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  NSString *v8;
  id v9;
  unint64_t v10;
  Class isa;
  NSString v12;
  Class v13;
  id v14;
  double v15;
  double v16;
  id v17;
  id v18;
  id v19;
  id v21;
  NSString v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  _BYTE v27[72];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
  if (!v1)
    goto LABEL_8;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8]);
  if (String.count.getter(v2, v1) < 1)
  {
    swift_bridgeObjectRelease(v1);
LABEL_8:
    v21 = objc_allocWithZone((Class)NSAttributedString);
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v21, "initWithString:", v22);

    return v23;
  }
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = sub_100427710(v3);

  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags];
  v6 = sub_10006922C((uint64_t *)&unk_1006424D0);
  inited = swift_initStackObject(v6, v27);
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_10004F2F0(0, (unint64_t *)&unk_10064F630, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v4;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v5);
  v8 = NSFontAttributeName;
  v9 = v4;
  v10 = sub_100076434(inited);
  sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  type metadata accessor for Key(0);
  sub_10005FB20();
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v14 = objc_msgSend((id)objc_opt_self(DOCTagStringRenderingRequest), "requestForChainedTags:tagDimension:text:textAttributes:", isa, v12, v13, 16.0);

  if (v14)
  {
    swift_bridgeObjectRelease(v1);
    objc_msgSend(v14, "setTagToTitleSpacing:", 8.0);
    objc_msgSend(v9, "capHeight");
    v16 = (v15 + -24.0) * 0.5;
    if (v16 < 0.0)
      v16 = 0.0;
    objc_msgSend(v14, "setTagBaselineAdjustment:", v16);
    v17 = v14;
    objc_msgSend(v17, "setLayoutDirection:", objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection"));

    v18 = objc_msgSend((id)objc_opt_self(DOCTagRenderer), "shared");
    v19 = objc_msgSend(v18, "renderAttributedStringWithRequest:", v17);

    return v19;
  }
  else
  {
    v24 = objc_allocWithZone((Class)NSAttributedString);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "initWithString:", v25, swift_bridgeObjectRelease(v1).n128_f64[0]);

    return v26;
  }
}

void sub_1004226DC(uint64_t a1)
{
  char *v1;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char isEscapingClosureAtFileLocation;
  _QWORD v13[5];
  uint64_t v14;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = a1;
  v4 = swift_bridgeObjectRetain(a1);
  v5 = sub_10023D784(v4, v3);
  swift_bridgeObjectRelease(a1);
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_1005EB0D0, 24, 7);
    *(_QWORD *)(v7 + 16) = v1;
    v8 = swift_allocObject(&unk_1005EB0F8, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100428028;
    *(_QWORD *)(v8 + 24) = v7;
    v13[4] = sub_10010DB64;
    v14 = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10006655C;
    v13[3] = &unk_1005EB110;
    v9 = _Block_copy(v13);
    v10 = v14;
    v11 = v1;
    swift_retain();
    swift_release(v10);
    objc_msgSend(v6, "performWithoutAnimation:", v9);
    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 114, 180, 48, 1);
    swift_bridgeObjectRelease(v3);
    swift_release(v7);
    swift_release(v8);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

void sub_100422870(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  BOOL v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  void *v18;
  char *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v4 = &v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
  if (v5)
  {
    if (a2)
    {
      v6 = *(_QWORD *)v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v4, v5, a1, a2, 0) & 1) != 0)
        return;
    }
  }
  else if (!a2)
  {
    return;
  }
  v7 = &v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons], v32, 0, 0);
  v8 = *(_QWORD *)v7;
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(v8);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_14;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v20 >= v13)
      goto LABEL_32;
    v21 = *(_QWORD *)(v9 + 8 * v20);
    ++v14;
    if (!v21)
    {
      v14 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_32;
      v21 = *(_QWORD *)(v9 + 8 * v14);
      if (!v21)
      {
        v14 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_32;
        v21 = *(_QWORD *)(v9 + 8 * v14);
        if (!v21)
        {
          v14 = v20 + 3;
          if (v20 + 3 >= v13)
            goto LABEL_32;
          v21 = *(_QWORD *)(v9 + 8 * v14);
          if (!v21)
            break;
        }
      }
    }
LABEL_31:
    v12 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_14:
    v17 = *(char **)(*(_QWORD *)(v8 + 56) + 8 * v16);
    v18 = *(void **)&v17[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
    v19 = v17;
    objc_msgSend(v18, "setNeedsUpdateConfiguration");
    objc_msgSend(v18, "invalidateIntrinsicContentSize");

  }
  v22 = v20 + 4;
  if (v22 < v13)
  {
    v21 = *(_QWORD *)(v9 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        v14 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_35;
        if (v14 >= v13)
          goto LABEL_32;
        v21 = *(_QWORD *)(v9 + 8 * v14);
        ++v22;
        if (v21)
          goto LABEL_31;
      }
    }
    v14 = v22;
    goto LABEL_31;
  }
LABEL_32:
  swift_release(v8);
  v23 = (void *)objc_opt_self(UIView);
  v24 = swift_allocObject(&unk_1005EAFE0, 24, 7);
  *(_QWORD *)(v24 + 16) = v2;
  v25 = swift_allocObject(&unk_1005EB008, 32, 7);
  *(_QWORD *)(v25 + 16) = sub_100427EC4;
  *(_QWORD *)(v25 + 24) = v24;
  aBlock[4] = sub_10010DB64;
  v31 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006655C;
  aBlock[3] = &unk_1005EB020;
  v26 = _Block_copy(aBlock);
  v27 = v31;
  v28 = v2;
  swift_retain();
  swift_release(v27);
  objc_msgSend(v23, "performWithoutAnimation:", v26);
  _Block_release(v26);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 114, 194, 48, 1);
  swift_release(v24);
  swift_release(v25);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return;
LABEL_36:
  __break(1u);
}

void sub_100422B74(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(id, uint64_t, uint64_t);
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;

  v2 = sub_100422388();
  v3 = sub_10042190C();
  v5 = v4;
  ObjectType = swift_getObjectType(v3, v4);
  v7 = *(void (**)(id, uint64_t, uint64_t))(v5 + 16);
  v8 = v3;
  v7(v2, ObjectType, v5);

  v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
  v10 = *(void **)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
  *v9 = v3;
  v9[1] = v5;

  v11 = sub_10042190C();
  objc_msgSend(v11, "layoutIfNeeded");

}

uint64_t sub_100422C34(uint64_t result)
{
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  int isEscapingClosureAtFileLocation;
  _QWORD v15[5];
  uint64_t v16;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = result;
  if (v2 != result)
  {
    v3 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8];
    if (v4)
    {
      v6 = v3[3];
      v5 = v3[4];
      sub_1001BC194(*v3, *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8], v3[2], v6, v5);
      v7 = *(_BYTE *)(v5 + 24);
      swift_release(v5);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v7 = 0;
    }
    v8 = (void *)objc_opt_self(UIView);
    v9 = swift_allocObject(&unk_1005EB058, 25, 7);
    *(_QWORD *)(v9 + 16) = v1;
    *(_BYTE *)(v9 + 24) = v7;
    v10 = swift_allocObject(&unk_1005EB080, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_1001D09B0;
    *(_QWORD *)(v10 + 24) = v9;
    v15[4] = sub_10010DB64;
    v16 = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10006655C;
    v15[3] = &unk_1005EB098;
    v11 = _Block_copy(v15);
    v12 = v16;
    v13 = v1;
    swift_retain();
    swift_release(v12);
    objc_msgSend(v8, "performWithoutAnimation:", v11);
    _Block_release(v11);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 114, 384, 40, 1);
    swift_release(v9);
    result = swift_release(v10);
    if (isEscapingClosureAtFileLocation)
      __break(1u);
  }
  return result;
}

uint64_t sub_100422DD8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  char v25[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "contentView");
  v3 = type metadata accessor for DOCItemCollectionView();
  v4 = (void *)UIView.doc_nearestAncestor<A>(ofType:)(v3, v3);

  v5 = 0.0;
  if (v4)
  {
    v6 = objc_msgSend(v4, "doc_nearestAncestorViewController");

    if (v6)
    {
      v7 = type metadata accessor for DOCItemCollectionViewController(0);
      v8 = swift_dynamicCastClass(v6, v7);
      if (v8 && (v9 = v8, (sub_10006BCB4() & 1) != 0))
      {
        v10 = *(double *)(v9
                        + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics
                        + 32);

        v5 = v10 + 0.0;
      }
      else
      {

      }
    }
  }
  v11 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints], v25, 0, 0);
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)v11);
    sub_1001408E4(3);
    if ((v14 & 1) != 0)
    {
      v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease(v12);
      objc_msgSend(v15, "setConstant:", v5 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 8]);

    }
    else
    {
      swift_bridgeObjectRelease(v12);
    }
  }
  v16 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)v11);
    sub_1001408E4(0);
    if ((v18 & 1) != 0)
    {
      v19 = *(id *)(*(_QWORD *)(v16 + 56) + 8 * v17);
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v19, "setConstant:", v5 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics]);

    }
    else
    {
      swift_bridgeObjectRelease(v16);
    }
  }
  v20 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)v11);
    sub_1001408E4(4);
    if ((v22 & 1) != 0)
    {
      v23 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v21);
      swift_bridgeObjectRelease(v20);
      objc_msgSend(v23, "setConstant:", v5 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 16]);

    }
    else
    {
      swift_bridgeObjectRelease(v20);
    }
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView], "setSpacing:", *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 32] - v5);
  return sub_100426320();
}

void sub_10042304C(void *a1, char *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  double v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _BYTE *v24;
  char isEscapingClosureAtFileLocation;
  id v26;
  void **aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  objc_super v33;

  v5 = OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack;
  v6 = type metadata accessor for DOCStackView();
  v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v8 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button] = a1;
  v8[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_buttonExtendsFullWidth] = *a2;
  v26 = a1;

  v33.receiver = v8;
  v33.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView();
  v9 = objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = (void *)objc_opt_self(UIView);
  v11 = swift_allocObject(&unk_1005EAEC8, 24, 7);
  *(_QWORD *)(v11 + 16) = v9;
  v12 = swift_allocObject(&unk_1005EAEF0, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_1004276A4;
  *(_QWORD *)(v12 + 24) = v11;
  v31 = sub_10006657C;
  v32 = v12;
  aBlock = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_10006655C;
  v30 = &unk_1005EAF08;
  v13 = _Block_copy(&aBlock);
  v14 = v32;
  v15 = v9;
  swift_retain();
  objc_msgSend(v10, "performWithoutAnimation:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v12, "", 114, 243, 44, 1);
  *(_QWORD *)&v16 = swift_release(v12).n128_u64[0];
  if ((v13 & 1) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  v17 = *(void **)&v15[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack];
  objc_msgSend(v17, "addArrangedSubview:", *(_QWORD *)&v15[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button], v16);
  if (v15[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_buttonExtendsFullWidth] == 1)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v18 = v17;
    v19 = (void *)static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter();
    objc_msgSend(v18, "addArrangedSubview:", v19);

  }
  v20 = swift_allocObject(&unk_1005EAF40, 24, 7);
  *(_QWORD *)(v20 + 16) = v15;
  v21 = swift_allocObject(&unk_1005EAF68, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_1004276E0;
  *(_QWORD *)(v21 + 24) = v20;
  v31 = sub_10010DB64;
  v32 = v21;
  aBlock = _NSConcreteStackBlock;
  v28 = 1107296256;
  v29 = sub_10006655C;
  v30 = &unk_1005EAF80;
  v22 = _Block_copy(&aBlock);
  v23 = v32;
  v24 = v15;
  swift_retain();
  objc_msgSend(v10, "performWithoutAnimation:", v22, swift_release(v23).n128_f64[0]);

  _Block_release(v22);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 114, 254, 44, 1);
  swift_release(v20);
  swift_release(v11);
  swift_release(v21);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_7;
}

void sub_1004233A8(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Class isa;

  v1 = *(_QWORD *)&a1[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack];
  objc_msgSend(a1, "addSubview:", v1);
  isa = (Class)(id)DOCConstraintsToResizeWithSuperview(v1, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  if (!isa)
  {
    v2 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v2);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v3);
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

}

void sub_100423468(char *a1, double a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = *(void **)&a1[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
  LODWORD(a2) = 1148846080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 1, a2);
  v4 = objc_msgSend(a1, "heightAnchor");
  v5 = objc_msgSend(v3, "heightAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  objc_msgSend(v6, "setActive:", 1);
}

void sub_100423540()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button));
}

id sub_10042356C()
{
  return sub_1001405E0(0, type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView);
}

void sub_1004235B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  void *v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  char v30[24];

  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8);
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 16);
  v12 = *(_BYTE *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 24);
  if (v9)
  {
    if (a2)
    {
      sub_1001CEF88(*(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor), *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8), *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 16));
      sub_1001CEF88(v10, v9, v11);
      sub_1001CEF88(a1, a2, a3);
      v13 = static DOCItemSortDescriptor.== infix(_:_:)(v10, v9, v11, v12 & 1, a1, a2, a3, a4 & 1);
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(a2);
      sub_100144F34(v10, v9, v11);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v9);
      if ((v13 & 1) != 0)
        return;
      goto LABEL_7;
    }
  }
  else if (!a2)
  {
    return;
  }
  sub_1001CEF88(*(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor), *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8), *(_QWORD *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 16));
  sub_1001CEF88(a1, a2, a3);
  sub_100144F34(v10, v9, v11);
  sub_100144F34(a1, a2, a3);
LABEL_7:
  sub_100426320();
  v14 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons, v30, 0, 0);
  v15 = *v14;
  v16 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v15 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain(v15);
  v21 = 0;
  while (1)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_11;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v20)
      goto LABEL_29;
    v28 = *(_QWORD *)(v16 + 8 * v27);
    ++v21;
    if (!v28)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v20)
        goto LABEL_29;
      v28 = *(_QWORD *)(v16 + 8 * v21);
      if (!v28)
      {
        v21 = v27 + 2;
        if (v27 + 2 >= v20)
          goto LABEL_29;
        v28 = *(_QWORD *)(v16 + 8 * v21);
        if (!v28)
        {
          v21 = v27 + 3;
          if (v27 + 3 >= v20)
            goto LABEL_29;
          v28 = *(_QWORD *)(v16 + 8 * v21);
          if (!v28)
            break;
        }
      }
    }
LABEL_28:
    v19 = (v28 - 1) & v28;
    v23 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_11:
    v24 = *(char **)(*(_QWORD *)(v15 + 56) + 8 * v23);
    v25 = *(void **)&v24[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
    v26 = v24;
    objc_msgSend(v25, "setNeedsUpdateConfiguration");
    objc_msgSend(v25, "invalidateIntrinsicContentSize");

  }
  v29 = v27 + 4;
  if (v29 >= v20)
  {
LABEL_29:
    swift_release(v15);
    return;
  }
  v28 = *(_QWORD *)(v16 + 8 * v29);
  if (v28)
  {
    v21 = v29;
    goto LABEL_28;
  }
  while (1)
  {
    v21 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v21 >= v20)
      goto LABEL_29;
    v28 = *(_QWORD *)(v16 + 8 * v21);
    ++v29;
    if (v28)
      goto LABEL_28;
  }
LABEL_32:
  __break(1u);
}

void sub_100423890(char a1)
{
  _BYTE *v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class v10;

  v2 = v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons];
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = a1;
  if (v2 != (a1 & 1))
  {
    objc_msgSend(v1, "setDeliversTouchesForGesturesToSuperview:", (a1 & 1) == 0);
    sub_100426320();
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints];
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v5);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v7 = sub_1004260C4();
    v8 = *(_QWORD *)&v1[v4];
    *(_QWORD *)&v1[v4] = v7;
    swift_bridgeObjectRelease(v8);
    v9 = *(_QWORD *)&v1[v4];
    swift_bridgeObjectRetain(v9);
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

    sub_100425EF4();
  }
}

uint64_t sub_1004239BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36[3];
  char v37[40];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8);
  if (v3)
  {
    v4 = v2[3];
    v5 = v2[4];
    v6 = v2[2];
    v7 = *v2;
    sub_1001BC194(*v2, v3, v6, v4, v5);
    swift_bridgeObjectRetain(v4);
    sub_1001D09CC(v7, v3, v6, v4, v5);
  }
  else
  {
    v6 = 0;
    v4 = 0xE000000000000000;
  }
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8);
  *v8 = v6;
  v8[1] = v4;
  sub_100422870(v9, v10);
  swift_bridgeObjectRelease(v10);
  v11 = sub_10006922C(&qword_100654C80);
  inited = swift_initStackObject(v11, v37);
  v13 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  v14 = (void *)v2[1];
  if (v14)
  {
    v16 = v2[3];
    v15 = v2[4];
    v17 = v2[2];
    v18 = *v2;
    sub_1001BC194(*v2, v2[1], v17, v16, v15);
    swift_retain();
    sub_1001D09CC(v18, (uint64_t)v14, v17, v16, v15);
    v14 = *(void **)(v15 + 32);
    v19 = v14;
    inited = swift_release(v15);
  }
  *(_QWORD *)(v13 + 32) = v14;
  specialized Array._endMutation()(inited);
  v20 = v13;
  v21 = _swiftEmptyArrayStorage;
  v36[0] = (unint64_t)_swiftEmptyArrayStorage;
  v22 = *(void **)(v20 + 32);
  if (v22)
  {
    v23 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((v36[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((v36[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v26);
    v21 = (_QWORD *)v36[0];
  }
  swift_bridgeObjectRelease(v20);
  sub_1004226DC((uint64_t)v21);
  v27 = v2[1];
  if (v27)
  {
    v29 = v2[3];
    v28 = v2[4];
    v30 = v2[2];
    v31 = *v2;
    sub_1001BC194(*v2, v2[1], v30, v29, v28);
    swift_retain();
    sub_1001D09CC(v31, v27, v30, v29, v28);
    swift_beginAccess(v28 + 16, v36, 0, 0);
    v32 = *(_QWORD *)(v28 + 16);
    swift_bridgeObjectRetain(v32);
    swift_release(v28);
    if ((unint64_t)v32 >> 62)
    {
      if (v32 < 0)
        v35 = v32;
      else
        v35 = v32 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v32);
      v33 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v33 = 0;
  }
  return sub_100422C34(v33);
}

void sub_100423C68(char a1)
{
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Class v10;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) = a1;
  if (v2 != (a1 & 1))
  {
    sub_100425EF4();
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v5);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v7 = sub_1004260C4();
    v8 = *(_QWORD *)(v1 + v4);
    *(_QWORD *)(v1 + v4) = v7;
    swift_bridgeObjectRelease(v8);
    v9 = *(_QWORD *)(v1 + v4);
    swift_bridgeObjectRetain(v9);
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

  }
}

void sub_100423D88(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  id v18;
  id v19;

  v3 = v2;
  v4 = v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride];
  if (v4 == 2)
  {
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style])
    {
      v5 = 0;
    }
    else
    {
      v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8];
      v5 = v6 != 0;
      if (v6)
      {
        v8 = swift_allocObject(&unk_1005EAFB8, 32, 7);
        *(_QWORD *)(v8 + 16) = v6;
        *(_QWORD *)(v8 + 24) = v7;
        v9 = sub_10012B584;
      }
      else
      {
        v9 = 0;
        v8 = 0;
      }
      sub_10008BA00(v6, v7);
      a1 = sub_100087534((uint64_t)v9, v8);
    }
  }
  else
  {
    v5 = v4 & 1;
  }
  v10 = sub_100421B20(a1, a2);
  DOCViewDecorator.isHidden.setter(v5 ^ 1u);
  v11 = swift_release(v10);
  v19 = sub_100422284(v11, v12);
  v14 = sub_100421B20((uint64_t)v19, v13);
  v15 = DOCViewDecorator.isHidden.getter();
  swift_release(v14);
  if ((v15 & 1) != 0)
  {
    v16 = 0;
  }
  else
  {
    v17 = objc_msgSend(v3, "traitCollection");
    v18 = objc_msgSend(v17, "preferredContentSizeCategory");

    LOBYTE(v17) = UIContentSizeCategory.isAccessibilityCategory.getter(v18);
    v16 = v17 ^ 1;
  }
  objc_msgSend(v19, "setActive:", v16 & 1);

}

double sub_100423F04(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _QWORD v28[5];
  _BYTE v29[8];
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[8];
  uint64_t v33;

  sub_100427F80((uint64_t)a1, (uint64_t)v28);
  v4 = v28[0];
  v3 = v28[1];
  v23 = v28[2];
  v24 = v28[4];
  v25 = v28[3];
  v5 = v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 16);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 24);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 32);
  if (!v6)
  {
    sub_100427F80((uint64_t)a1, (uint64_t)v32);
    if (!v33)
      goto LABEL_14;
LABEL_10:
    sub_1001BC194(v7, v6, v9, v8, v10);
    sub_100427FC8(a1);
    sub_1001D09CC(v7, v6, v9, v8, v10);
    sub_1001D09CC(v4, v3, v23, v25, v24);
    goto LABEL_11;
  }
  sub_100427F80((uint64_t)a1, (uint64_t)v32);
  if (!v33)
    goto LABEL_10;
  if (v7 == v4 && v6 == v3)
  {
    sub_1001BC194(v4, v3, v9, v8, v10);
    sub_1001BC194(v4, v3, v9, v8, v10);
    sub_100427FC8(a1);
    swift_release(v24);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v3);
    sub_1001D09CC(v4, v3, v9, v8, v10);
    swift_release(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v4, v3, 0);
    sub_1001BC194(v7, v6, v9, v8, v10);
    sub_1001BC194(v7, v6, v9, v8, v10);
    sub_100427FC8(a1);
    swift_release(v24);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v3);
    sub_1001D09CC(v7, v6, v9, v8, v10);
    swift_release(v10);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    if ((v12 & 1) == 0)
      goto LABEL_11;
  }
LABEL_14:
  v14 = *(_QWORD *)(v5 + 8);
  if (v14)
  {
    v15 = *(_QWORD *)(v5 + 32);
    swift_beginAccess(v15 + 16, v27, 0, 0);
    v16 = *(_QWORD *)(v15 + 16);
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v21 = *(_QWORD *)(v15 + 16);
      else
        v21 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v17 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_100427F80((uint64_t)a1, (uint64_t)v29);
    if (!v30)
      goto LABEL_11;
  }
  else
  {
    sub_100427F80((uint64_t)a1, (uint64_t)v29);
    if (!v30)
      return result;
    v17 = 0;
  }
  v18 = v31;
  *(_QWORD *)&result = swift_beginAccess(v31 + 16, v26, 0, 0).n128_u64[0];
  v19 = *(_QWORD *)(v18 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
      goto LABEL_23;
LABEL_11:
    sub_1004239BC();
    return result;
  }
  if (v19 < 0)
    v22 = v19;
  else
    v22 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v19);
  v20 = _CocoaArrayWrapper.endIndex.getter(v22);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  if (!v14)
    goto LABEL_11;
LABEL_23:
  if (v17 != v20)
    goto LABEL_11;
  return result;
}

uint64_t sub_100424224(uint64_t a1, char a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((a2 & 1) != 0)
  {
    v3 = *(id *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString);
    v4 = swift_bridgeObjectRetain(*(_QWORD *)(a1
                                            + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString
                                            + 8));
  }
  else
  {
    v3 = sub_100421750(a1);
    v4 = v5;
  }
  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle + 8);
  *v6 = v3;
  v6[1] = v4;
  v8 = swift_bridgeObjectRelease(v7);
  v10 = sub_100421B20(v8, v9);
  DOCViewDecorator<>.setNeedsUpdateConfiguration()();
  v11 = swift_release(v10);
  v13 = sub_100421B20(v11, v12);
  DOCViewDecorator.layoutIfNeeded()();
  return swift_release(v13);
}

char *sub_1004242B4(double a1, double a2, double a3, double a4)
{
  void *v4;
  _BYTE *v9;
  char *result;
  char *v11;
  Swift::String *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  __int128 v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  double *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  double v91;
  void *v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  Class isa;
  char *v110;
  id v111;
  char *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  id v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  Class v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t ObjectType;
  objc_super v141;
  Swift::String v142;

  ObjectType = swift_getObjectType(v4);
  v9 = v4;
  result = (char *)(id)_DocumentManagerBundle(v9);
  if (result)
  {
    v11 = result;
    v12 = (Swift::String *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString];
    v142._object = (void *)0x80000001005345D0;
    v13._countAndFlagsBits = 0x73654C20776F6853;
    v13._object = (void *)0xE900000000000073;
    v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v14.value._object = (void *)0xEB00000000656C62;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v142._countAndFlagsBits = 0xD00000000000002ALL;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v11, v15, v142);

    *v12 = v16;
    v17 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
    *v17 = 0;
    v17[1] = 0;
    v18 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle];
    *v18 = 0;
    v18[1] = 0xE000000000000000;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator] = 0;
    v19 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
    *(_OWORD *)(v19 + 8) = xmmword_1004E81B0;
    *(_OWORD *)(v19 + 24) = xmmword_1004E81B0;
    v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
    *(_OWORD *)(v19 + 40) = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
    *(_WORD *)v19 = 256;
    *(_OWORD *)(v19 + 56) = v20;
    v19[72] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = _swiftEmptyArrayStorage;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = _swiftEmptyArrayStorage;
    v21 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
    *v21 = 0;
    v21[1] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = 0;
    v22 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
    *(_OWORD *)v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    *((_QWORD *)v22 + 4) = 0;
    v23 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
    *(_QWORD *)&v9[v23] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons] = &_swiftEmptyDictionarySingleton;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints] = &_swiftEmptyDictionarySingleton;
    v24 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
    v24[24] = 0;
    *((_QWORD *)v24 + 1) = 0;
    *((_QWORD *)v24 + 2) = 0;
    *(_QWORD *)v24 = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride] = 2;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = 0;
    v25 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    *(_OWORD *)v25 = 0u;
    *((_OWORD *)v25 + 1) = 0u;
    *((_QWORD *)v25 + 4) = 0;
    v26 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
    *v26 = 0;
    v26[1] = 0;
    v27 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
    *v27 = 0;
    v27[1] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView] = 0;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX] = 0;

    v141.receiver = v9;
    v141.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader();
    v28 = (char *)objc_msgSendSuper2(&v141, "initWithFrame:", a1, a2, a3, a4);
    v30 = sub_100421B20((uint64_t)v28, v29);
    DOCViewDecorator<>.buttonType.getter();
    swift_release(v30);
    v31 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v32 = swift_allocObject(v31, 56, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1004D9720;
    v34 = sub_100421B20(v32, v33);
    v35 = (void *)DOCViewDecorator.trailingAnchor.getter();
    v36 = objc_msgSend(v28, "contentView", swift_release(v34).n128_f64[0]);
    v37 = objc_msgSend(v36, "layoutMarginsGuide");

    v38 = objc_msgSend(v37, "trailingAnchor");
    v39 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);

    *(_QWORD *)(v32 + 32) = v39;
    v42 = sub_100421B20(v40, v41);
    v43 = (void *)DOCViewDecorator.firstBaselineAnchor.getter();
    swift_release(v42);
    v44 = sub_10042190C();
    v45 = objc_msgSend(v44, "firstBaselineAnchor");

    v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
    *(_QWORD *)(v32 + 40) = v46;
    v47 = objc_msgSend(v28, "contentView");
    v48 = objc_msgSend(v47, "bottomAnchor");

    v49 = sub_10042190C();
    v50 = objc_msgSend(v49, "bottomAnchor");

    v51 = (double *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
    v52 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v50, *(double *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 24]);

    *(_QWORD *)(v32 + 48) = v52;
    specialized Array._endMutation()(v53);
    v54 = *(_QWORD *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints];
    *(_QWORD *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = v32;
    swift_bridgeObjectRelease(v54);
    v138 = v31;
    v55 = swift_allocObject(v31, 64, 7);
    *(_OWORD *)(v55 + 16) = xmmword_1004DAC10;
    v57 = sub_100421B20(v55, v56);
    v58 = (void *)DOCViewDecorator.leadingAnchor.getter();
    swift_release(v57);
    v59 = sub_10042190C();
    v60 = objc_msgSend(v59, "leadingAnchor");

    v61 = objc_msgSend(v58, "constraintEqualToAnchor:", v60);
    *(_QWORD *)(v55 + 32) = v61;
    v64 = sub_100421B20(v62, v63);
    v65 = (void *)DOCViewDecorator.trailingAnchor.getter();
    v66 = objc_msgSend(v28, "contentView", swift_release(v64).n128_f64[0]);
    v67 = objc_msgSend(v66, "layoutMarginsGuide");

    v68 = objc_msgSend(v67, "trailingAnchor");
    v69 = objc_msgSend(v65, "constraintLessThanOrEqualToAnchor:", v68);

    *(_QWORD *)(v55 + 40) = v69;
    v72 = sub_100421B20(v70, v71);
    v73 = (void *)DOCViewDecorator.firstBaselineAnchor.getter();
    swift_release(v72);
    v74 = sub_10042190C();
    v75 = objc_msgSend(v74, "lastBaselineAnchor");

    v76 = objc_msgSend(v73, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v75, 1.0);
    *(_QWORD *)(v55 + 48) = v76;
    v77 = objc_msgSend(v28, "contentView");
    v78 = objc_msgSend(v77, "bottomAnchor");

    v81 = sub_100421B20(v79, v80);
    v82 = (void *)DOCViewDecorator.lastBaselineAnchor.getter();
    swift_release(v81);
    v83 = objc_msgSend(v78, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v82, 1.0);

    *(_QWORD *)(v55 + 56) = v83;
    specialized Array._endMutation()(v84);
    v85 = *(_QWORD *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints];
    *(_QWORD *)&v28[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = v55;
    swift_bridgeObjectRelease(v85);
    v86 = sub_10042190C();
    v87 = objc_msgSend(v86, "topAnchor");

    v88 = objc_msgSend(v28, "contentView");
    v89 = objc_msgSend(v88, "topAnchor");

    v90 = objc_msgSend(v87, "constraintEqualToAnchor:constant:", v89, v51[1]);
    LODWORD(v91) = 1144913920;
    objc_msgSend(v90, "setPriority:", v91);
    v92 = (void *)objc_opt_self(NSLayoutConstraint);
    v93 = swift_allocObject(v31, 56, 7);
    *(_OWORD *)(v93 + 16) = xmmword_1004D9720;
    *(_QWORD *)(v93 + 32) = v90;
    v139 = v90;
    v94 = sub_10042190C();
    v95 = objc_msgSend(v94, "leadingAnchor");

    v96 = objc_msgSend(v28, "contentView");
    v97 = objc_msgSend(v96, "layoutMarginsGuide");

    v98 = objc_msgSend(v97, "leadingAnchor");
    v99 = objc_msgSend(v95, "constraintEqualToAnchor:", v98);

    *(_QWORD *)(v93 + 40) = v99;
    v100 = v92;
    v101 = objc_msgSend(v28, "contentView");
    v102 = objc_msgSend(v101, "layoutMarginsGuide");

    v103 = objc_msgSend(v102, "trailingAnchor");
    v104 = sub_10042190C();
    v105 = objc_msgSend(v104, "trailingAnchor");

    v106 = objc_msgSend(v103, "constraintGreaterThanOrEqualToAnchor:", v105);
    *(_QWORD *)(v93 + 48) = v106;
    specialized Array._endMutation()(v107);
    v108 = v93;
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v92, "activateConstraints:", isa, swift_bridgeObjectRelease(v108).n128_f64[0]);

    v110 = v28;
    v111 = sub_100422370();
    objc_msgSend(v110, "addSubview:", v111);

    v112 = v110;
    v113 = sub_10042237C();
    objc_msgSend(v112, "addSubview:", v113);

    v114 = sub_1004260C4();
    v115 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    v116 = *(_QWORD *)&v112[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints];
    *(_QWORD *)&v112[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = v114;
    swift_bridgeObjectRelease(v116);
    v117 = swift_allocObject(v138, 40, 7);
    *(_OWORD *)(v117 + 16) = xmmword_1004D9B40;
    v118 = sub_100422370();
    v119 = objc_msgSend(v118, "topAnchor");

    v120 = objc_msgSend(v112, "topAnchor");
    v121 = objc_msgSend(v119, "constraintEqualToAnchor:", v120);

    *(_QWORD *)(v117 + 32) = v121;
    specialized Array._endMutation()(v122);
    v123 = v117;
    v124 = sub_10042237C();
    v125 = objc_msgSend(v124, "bottomAnchor");

    v126 = objc_msgSend(v112, "bottomAnchor");
    v127 = objc_msgSend(v125, "constraintEqualToAnchor:", v126);

    swift_bridgeObjectRetain(*(_QWORD *)&v112[v115]);
    sub_1000887D0(v128);
    v129 = v127;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v129);
    v131 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v130 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v131 >= v130 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v130 > 1, v131 + 1, 1);
    v132 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v131, v129);
    specialized Array._endMutation()(v132);

    v133 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v100, "activateConstraints:", v133, swift_bridgeObjectRelease(v123).n128_f64[0]);

    sub_100425EF4();
    sub_100424FE4();
    v134 = sub_10006922C((uint64_t *)&unk_1006444C0);
    v135 = swift_allocObject(v134, 64, 7);
    *(_OWORD *)(v135 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v135 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v135 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(_QWORD *)(v135 + 48) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v135 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
    v136 = v112;
    v137 = UIView.registerForTraitChanges<A>(_:handler:)(v135, sub_100427600, 0, ObjectType);
    swift_unknownObjectRelease(v137);
    swift_bridgeObjectRelease(v135);

    return v136;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100424FE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  Class v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  char *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView], "setAxis:", 0);
  objc_msgSend(*(id *)&v0[v2], "setAlignment:", 3);
  objc_msgSend(*(id *)&v0[v2], "setDistribution:", 0);
  objc_msgSend(*(id *)&v0[v2], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend(v0, "contentView");
  objc_msgSend(v3, "addSubview:", *(_QWORD *)&v1[v2]);

  v60 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
  v5 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 40];
  v4 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 48];
  v7 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 56];
  v6 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 64];
  v55 = (id)objc_opt_self(NSLayoutConstraint);
  v58 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v8 = swift_allocObject(v58, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004DAC10;
  v9 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "topAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, v5);
  *(_QWORD *)(v8 + 32) = v12;
  v13 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "bottomAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, -v7);
  *(_QWORD *)(v8 + 40) = v16;
  v17 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  v18 = objc_msgSend(v1, "contentView");
  v19 = objc_msgSend(v18, "layoutMarginsGuide");

  v20 = objc_msgSend(v19, "leadingAnchor");
  v21 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v20, v4);

  *(_QWORD *)(v8 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v23 = objc_msgSend(v1, "contentView");
  v24 = objc_msgSend(v23, "layoutMarginsGuide");

  v25 = objc_msgSend(v24, "trailingAnchor");
  v26 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v25, -v6);

  *(_QWORD *)(v8 + 56) = v26;
  specialized Array._endMutation()(v27);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v61 = sub_1004256F4(1, (uint64_t)v1);
  v29 = sub_1004256F4(0, (uint64_t)v1);
  v30 = sub_1004256F4(3, (uint64_t)v1);
  v31 = sub_1004256F4(4, (uint64_t)v1);
  v57 = v29;
  v32 = objc_msgSend(v29, "widthAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", 0.0);

  v56 = v30;
  v34 = objc_msgSend(v30, "widthAnchor");
  v35 = objc_msgSend(v34, "constraintEqualToConstant:", 0.0);

  v36 = objc_msgSend(v31, "widthAnchor");
  v37 = objc_msgSend(v36, "constraintEqualToConstant:", 0.0);

  v38 = swift_allocObject(v58, 56, 7);
  *(_OWORD *)(v38 + 16) = xmmword_1004D9720;
  *(_QWORD *)(v38 + 32) = v33;
  *(_QWORD *)(v38 + 40) = v35;
  *(_QWORD *)(v38 + 48) = v37;
  v65[0] = v38;
  specialized Array._endMutation()(v38);
  v39 = v33;
  v40 = v35;
  v59 = v37;
  v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "activateConstraints:", v41, swift_bridgeObjectRelease(v65[0]).n128_f64[0]);

  objc_msgSend(*(id *)&v1[v2], "addArrangedSubview:", v61);
  if (v60[72] == 1)
  {
    v42 = objc_msgSend(*(id *)&v1[v2], "heightAnchor");
    v43 = objc_msgSend(v61, "heightAnchor");
    v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, 0.0);

    objc_msgSend(v44, "setActive:", 1);
  }
  objc_msgSend(*(id *)&v1[v2], "addArrangedSubview:", v57);
  objc_msgSend(*(id *)&v1[v2], "addArrangedSubview:", v56);
  objc_msgSend(*(id *)&v1[v2], "addArrangedSubview:", v31);
  v45 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints], v65, 33, 0);
  v46 = v39;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v45);
  v62 = *(_QWORD *)v45;
  *(_QWORD *)v45 = 0x8000000000000000;
  sub_100358424((uint64_t)v46, 0, isUniquelyReferenced_nonNull_native);
  v48 = *(_QWORD *)v45;
  *(_QWORD *)v45 = v62;
  swift_bridgeObjectRelease(v48);
  v49 = v40;
  v50 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v45);
  v63 = *(_QWORD *)v45;
  *(_QWORD *)v45 = 0x8000000000000000;
  sub_100358424((uint64_t)v49, 3, v50);
  v51 = *(_QWORD *)v45;
  *(_QWORD *)v45 = v63;
  swift_bridgeObjectRelease(v51);
  v52 = v59;
  v53 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v45);
  v64 = *(_QWORD *)v45;
  *(_QWORD *)v45 = 0x8000000000000000;
  sub_100358424((uint64_t)v52, 4, v53);
  v54 = *(_QWORD *)v45;
  *(_QWORD *)v45 = v64;
  swift_bridgeObjectRelease(v54);
  swift_endAccess(v65);
  sub_100426320();

}

id sub_1004256F4(char a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  char v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v27;
  _BYTE v28[24];
  void **aBlock;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v4 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v5 = v4;
  v6 = a2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics;
  v7 = *(_BYTE *)(a2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics);
  if (v7)
    v8 = 0;
  else
    v8 = 4;
  objc_msgSend(v4, "setContentHorizontalAlignment:", v8);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v9 = swift_allocObject(&unk_1005EAE28, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_1005EAE50, 25, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_BYTE *)(v10 + 24) = a1;
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v11, 0, 0, 0, sub_10042768C, v10);
  objc_msgSend(v5, "setDoc_primaryAction:", v12);

  v13 = swift_allocObject(&unk_1005EAE28, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = swift_allocObject(&unk_1005EAE78, 25, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = a1;
  *((_QWORD *)&v31 + 1) = sub_100427698;
  *(_QWORD *)&v32 = v14;
  aBlock = _NSConcreteStackBlock;
  *(_QWORD *)&v30 = 1107296256;
  *((_QWORD *)&v30 + 1) = sub_1000602CC;
  *(_QWORD *)&v31 = &unk_1005EAE90;
  v15 = _Block_copy(&aBlock);
  objc_msgSend(v5, "setConfigurationUpdateHandler:", v15, swift_release(v32).n128_f64[0]);
  _Block_release(v15);
  v16 = *(_BYTE *)(v6 + 1);
  v17 = *(_BYTE *)(v6 + 72);
  LOBYTE(aBlock) = v7;
  BYTE1(aBlock) = v16;
  v30 = *(_OWORD *)(v6 + 8);
  v31 = *(_OWORD *)(v6 + 24);
  v32 = *(_OWORD *)(v6 + 40);
  v33 = *(_OWORD *)(v6 + 56);
  v34 = v17;
  v18 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView());
  v19 = v5;
  sub_10042304C(v19, (char *)&aBlock);
  v21 = v20;
  v22 = (_QWORD *)(a2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess(v22, v28, 33, 0);
  v23 = v21;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
  v27 = *v22;
  *v22 = 0x8000000000000000;
  sub_100358410((uint64_t)v23, a1, isUniquelyReferenced_nonNull_native);
  v25 = *v22;
  *v22 = v27;
  swift_bridgeObjectRelease(v25);
  swift_endAccess(v28);

  return v23;
}

void sub_10042599C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  void (*v7)(void *, uint64_t, __n128);
  uint64_t v8;
  __n128 v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(void (**)(void *, uint64_t, __n128))(Strong
                                                        + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler);
    if (v7)
    {
      v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler + 8);
      v9 = swift_retain();
      v7(v6, a3, v9);
      sub_100087534((uint64_t)v7, v8);
    }

  }
}

void sub_100425A2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  NSString v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  int v44;
  int v45;
  char v46[24];

  v6 = sub_10006922C((uint64_t *)&unk_1006529B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (NSString)Strong;
    v14 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8);
    if (v14)
    {
      v15 = Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
      v16 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8);
      if (v16)
      {
        v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title);
        v18 = a3;
        v19 = *(unsigned __int8 *)(v15 + 24);
        v20 = *(_QWORD *)(v15 + 16);
        v43 = a1;
        v21 = *(_QWORD *)v15;
        v40 = v17;
        v41 = v21;
        v22 = (void *)objc_opt_self(UIDevice);
        v42 = v22;
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v14);
        v23 = v21;
        LOBYTE(v21) = v19;
        v44 = v19;
        sub_1001CEF88(v23, v16, v20);

        static UIButton.Configuration.borderless()(v24);
        v25 = v18;
        v45 = v18;
        v26 = sub_10005F79C(v18, v40, v14);
        AttributedString.init(_:)();
        v27 = type metadata accessor for AttributedString(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 0, 1, v27);
        UIButton.Configuration.attributedTitle.setter(v8);
        v28 = v25;
        v29 = v41;
        sub_1000531A4(v28, v41, v16, v20, v21);
        v31 = v30;
        v32 = v30;
        UIButton.Configuration.image.setter(v31);
        UIButton.Configuration.imagePadding.setter(4.0);
        UIButton.Configuration.imagePlacement.setter(8);

        v33 = v43;
        v34 = v13;
        UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v34, "tintColor"));

        UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
        swift_bridgeObjectRelease(v14);
        sub_100144F34(v29, v16, v20);
        v36 = type metadata accessor for UIButton.Configuration(0, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 0, 1, v36);
        UIButton.configuration.setter(v11);
        sub_100427D38(v45);
        v38 = v37;
        swift_bridgeObjectRelease(v20);
        v39 = swift_bridgeObjectRelease(v16).n128_u64[0];
        if (v38)
        {
          v13 = String._bridgeToObjectiveC()();
          v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
        }
        else
        {
          v13 = 0;
        }
        objc_msgSend(v33, "setAccessibilityIdentifier:", v13, *(double *)&v39);

      }
    }

  }
}

void sub_100425E14()
{
  char *v0;
  double v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader();
  objc_msgSendSuper2(&v8, "prepareForReuse");
  sub_100423C68(0);
  v1 = *(double *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
  if (v1 != 0.0)
    objc_msgSend(v0, "setNeedsUpdateConfiguration");
  v2 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v5 = sub_100087534(v3, v4);
  sub_100423D88(v5, v6);
  sub_100425EF4();
  v7 = objc_msgSend(v0, "traitCollection");
  sub_100426A04();

}

void sub_100425EF4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 1) != 1)
  {
    v6 = sub_100422370();
    objc_msgSend(v6, "setHidden:", 1);

    v7 = sub_10042237C();
    objc_msgSend(v7, "setHidden:", 1, v7);
LABEL_22:

    return;
  }
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style);
  if ((unint64_t)(v1 - 1) < 2)
  {
    v2 = sub_100422370();
    v3 = v2;
    v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons) == 1
      && (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) & 1) == 0)
    {
      v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator);
    }
    else
    {
      v5 = 1;
    }
    objc_msgSend(v2, "setHidden:", v5);

    v12 = sub_10042237C();
    if ((*(_BYTE *)(v0 + v4) & 1) != 0)
    {
      v13 = 0;
    }
    else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) == 1)
    {
      v13 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators);
    }
    else
    {
      v13 = 1;
    }
LABEL_21:
    objc_msgSend(v12, "setHidden:", v13, v12);
    goto LABEL_22;
  }
  if (!v1)
  {
    v8 = sub_100422370();
    v9 = v8;
    v10 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) & 1) != 0
      || (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators) & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator);
    }
    objc_msgSend(v8, "setHidden:", v11);

    v12 = sub_10042237C();
    if (*(_BYTE *)(v0 + v10) == 1)
      v13 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators);
    else
      v13 = 1;
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, &v15, &type metadata for DOCDisplayMode, &type metadata for Int);
  __break(1u);
}

uint64_t sub_1004260C4()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  v1 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) == 1)
  {
    v2 = objc_msgSend(v0, "leftAnchor");
  }
  else
  {
    v3 = objc_msgSend(v0, "layoutMarginsGuide");
    v2 = objc_msgSend(v3, "leftAnchor");

  }
  if (*((_BYTE *)v0 + v1) == 1)
  {
    v4 = objc_msgSend(v0, "rightAnchor");
  }
  else
  {
    v5 = objc_msgSend(v0, "layoutMarginsGuide");
    v4 = objc_msgSend(v5, "rightAnchor");

  }
  v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004DAC10;
  v8 = sub_100422370();
  v9 = objc_msgSend(v8, "leftAnchor");

  v10 = objc_msgSend(v9, "constraintEqualToAnchor:", v2);
  *(_QWORD *)(v7 + 32) = v10;
  v11 = sub_100422370();
  v12 = objc_msgSend(v11, "rightAnchor");

  v13 = objc_msgSend(v12, "constraintEqualToAnchor:", v4);
  *(_QWORD *)(v7 + 40) = v13;
  v14 = sub_10042237C();
  v15 = objc_msgSend(v14, "leftAnchor");

  v16 = objc_msgSend(v15, "constraintEqualToAnchor:", v2);
  *(_QWORD *)(v7 + 48) = v16;
  v17 = sub_10042237C();
  v18 = objc_msgSend(v17, "rightAnchor");

  v19 = objc_msgSend(v18, "constraintEqualToAnchor:", v4);
  *(_QWORD *)(v7 + 56) = v19;
  specialized Array._endMutation()(v20);

  return v7;
}

uint64_t sub_100426320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  _BOOL8 v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BOOL8 v39;
  _QWORD *v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  _BOOL8 v54;
  _QWORD *v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78[128];
  char v79[128];
  char v80[128];
  _BYTE v81[136];

  v1 = v0;
  v2 = sub_10006922C(&qword_10064A0A0);
  __chkstk_darwin(v2);
  v73 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v72 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v76 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v75 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons;
  v9 = &selRef_objectForKey_ofClass_;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView), "setHidden:", (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons) & 1) == 0);
  v10 = sub_10042190C();
  objc_msgSend(v10, "setHidden:", *(unsigned __int8 *)(v1 + v8));

  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons, &v77, 0, 0);
  v12 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    sub_1001408E4(0);
    if ((v14 & 1) != 0)
    {
      v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      v16 = swift_bridgeObjectRelease(v12).n128_u64[0];
      v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits);
      if (v17)
      {
        swift_retain();
        sub_10006B424((uint64_t)v78);
        swift_release(v17);
        sub_10003BDA0((uint64_t)v78);
        v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor);
        v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8);
        if (v19)
        {
          v20 = v18[2];
          v71 = v5;
          v21 = v4;
          v22 = *v18;
          swift_bridgeObjectRetain(v19);
          swift_bridgeObjectRetain(v20);
          v9 = &selRef_objectForKey_ofClass_;
          sub_100144F34(v22, v19, v20);
          v23 = 8 * v22;
          v4 = v21;
          v5 = v71;
          v24 = 0x5040302010000uLL >> v23;
        }
        else
        {
          LOBYTE(v24) = 6;
        }
        v26 = sub_100075C04(v24, v78[16]);
        v27 = sub_100076430(2, (uint64_t)v26);
        v16 = swift_bridgeObjectRelease(v26).n128_u64[0];
        if (v27)
        {
          v16 = *(unint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics);
          v25 = *(double *)&v16 == 0.0;
        }
        else
        {
          v25 = 1;
        }
      }
      else
      {
        v25 = 1;
      }
      objc_msgSend(v15, v9[168], v25, *(double *)&v16);

    }
    else
    {
      swift_bridgeObjectRelease(v12);
    }
  }
  v28 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    sub_1001408E4(3);
    if ((v30 & 1) != 0)
    {
      v31 = *(id *)(*(_QWORD *)(v28 + 56) + 8 * v29);
      v32 = swift_bridgeObjectRelease(v28).n128_u64[0];
      v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits);
      if (v33)
      {
        swift_retain();
        sub_10006B424((uint64_t)v79);
        swift_release(v33);
        sub_10003BDA0((uint64_t)v79);
        v34 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor);
        v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8);
        if (v35)
        {
          v36 = v34[2];
          v37 = *v34;
          v71 = v5;
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain(v36);
          v5 = v71;
          sub_100144F34(v37, v35, v36);
          v38 = 0x5040302010000uLL >> (8 * v37);
        }
        else
        {
          LOBYTE(v38) = 6;
        }
        v40 = sub_100075C04(v38, v79[16]);
        v39 = 1;
        v41 = sub_100076430(1, (uint64_t)v40);
        v32 = swift_bridgeObjectRelease(v40).n128_u64[0];
        if (v41)
        {
          v32 = *(unint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 8);
          v39 = *(double *)&v32 == 0.0;
        }
      }
      else
      {
        v39 = 1;
      }
      v9 = &selRef_objectForKey_ofClass_;
      objc_msgSend(v31, "setHidden:", v39, *(double *)&v32);

    }
    else
    {
      swift_bridgeObjectRelease(v28);
    }
  }
  v42 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    sub_1001408E4(4);
    if ((v44 & 1) != 0)
    {
      v45 = *(id *)(*(_QWORD *)(v42 + 56) + 8 * v43);
      v46 = swift_bridgeObjectRelease(v42).n128_u64[0];
      v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits);
      if (v47)
      {
        swift_retain();
        sub_10006B424((uint64_t)v80);
        swift_release(v47);
        sub_10003BDA0((uint64_t)v80);
        v48 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor);
        v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor + 8);
        if (v49)
        {
          v50 = v48[2];
          v51 = *v48;
          swift_bridgeObjectRetain(*(_QWORD *)(v1
                                             + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor
                                             + 8));
          swift_bridgeObjectRetain(v50);
          sub_100144F34(v51, v49, v50);
          v52 = 8 * v51;
          v9 = &selRef_objectForKey_ofClass_;
          v53 = 0x5040302010000uLL >> v52;
        }
        else
        {
          LOBYTE(v53) = 6;
        }
        v55 = sub_100075C04(v53, v80[16]);
        v56 = sub_100076430(3, (uint64_t)v55);
        v46 = swift_bridgeObjectRelease(v55).n128_u64[0];
        if (v56)
        {
          v46 = *(unint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 16);
          v54 = *(double *)&v46 == 0.0;
        }
        else
        {
          v54 = 1;
        }
      }
      else
      {
        v54 = 1;
      }
      objc_msgSend(v45, v9[168], v54, *(double *)&v46);

    }
    else
    {
      swift_bridgeObjectRelease(v42);
    }
  }
  v57 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits;
  v58 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits);
  if (v58)
  {
    swift_retain();
    sub_10006B424((uint64_t)v81);
    swift_release(v58);
    sub_10003BDA0((uint64_t)v81);
    v59 = _swiftEmptyArrayStorage;
    if (*(_BYTE *)(v1 + v8) == 1 && (v81[80] & 1) != 0)
    {
      v60 = sub_10006922C((uint64_t *)&unk_10064A0B0);
      v61 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
      v59 = (_QWORD *)swift_allocObject(v60, ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72), *(unsigned __int8 *)(v61 + 80) | 7);
      *((_OWORD *)v59 + 1) = xmmword_1004D9670;
      v62 = v74;
      (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v74);
      v63 = *(_QWORD *)(v1 + v57);
      if (v63 && objc_msgSend(*(id *)(v63 + 552), "horizontalSizeClass") == (id)1)
        v64 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.standard(_:);
      else
        v64 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.actual(_:);
      v65 = *v64;
      v66 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v67 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v73, v65, v66);
      v68 = v72;
      type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v67, 0, 1, v66);
      UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(1, v67, 0);
      v69 = v75;
      static UICellAccessory.disclosureIndicator(displayed:options:)(v75, v68);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v68, v4);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v62);
    }
  }
  else
  {
    v59 = _swiftEmptyArrayStorage;
  }
  return UICollectionViewListCell.accessories.setter(v59);
}

void sub_100426A04()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(id, uint64_t, uint64_t);
  id v8;
  _QWORD *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  Class v13;
  uint64_t v14;
  Class v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Class isa;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  Class v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class v35;

  v1 = v0;
  if (sub_10007B5C0(16))
  {
    v2 = sub_100422388();
    v3 = sub_10042190C();
    v5 = v4;
    ObjectType = swift_getObjectType(v3, v4);
    v7 = *(void (**)(id, uint64_t, uint64_t))(v5 + 16);
    v8 = v3;
    v7(v2, ObjectType, v5);

    v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
    v10 = *(void **)(v1
                   + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
    *v9 = v3;
    v9[1] = v5;

    if (UITraitCollection.doc_preferredLayoutSizeCategory.getter()
      && !*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style))
    {
      v21 = (void *)objc_opt_self(NSLayoutConstraint);
      v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints);
      sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain(v22);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v21, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

      v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints);
      swift_bridgeObjectRetain(v24);
      v25 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v21, "activateConstraints:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

      v18 = sub_100422284(v26, v27);
      objc_msgSend(v18, "setActive:", 0);
    }
    else
    {
      v11 = (void *)objc_opt_self(NSLayoutConstraint);
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints);
      sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain(v12);
      v13 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v11, "deactivateConstraints:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints);
      swift_bridgeObjectRetain(v14);
      v15 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v11, "activateConstraints:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      v18 = sub_100422284(v16, v17);
      v20 = sub_100421B20((uint64_t)v18, v19);
      LOBYTE(v15) = DOCViewDecorator.isHidden.getter();
      swift_release(v20);
      objc_msgSend(v18, "setActive:", (v15 & 1) == 0);
    }

    v28 = (void *)objc_opt_self(NSLayoutConstraint);
    v29 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints);
    sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v30);
    v31 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "deactivateConstraints:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

    v32 = sub_1004260C4();
    v33 = *(_QWORD *)(v1 + v29);
    *(_QWORD *)(v1 + v29) = v32;
    swift_bridgeObjectRelease(v33);
    v34 = *(_QWORD *)(v1 + v29);
    swift_bridgeObjectRetain(v34);
    v35 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "activateConstraints:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

  }
}

void sub_100426D24(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD v41[5];

  v2 = v1;
  v38 = a1;
  v3 = sub_10006922C(&qword_100651B30);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIBackgroundConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for UICellConfigurationState(0);
  v39 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v1, "contentView", v14);
  v18 = type metadata accessor for DOCItemCollectionView();
  v19 = (void *)UIView.doc_nearestAncestor<A>(ofType:)(v18, v18);

  if (v19)
  {
    v40 = objc_msgSend(v19, "doc_nearestAncestorViewController");

    if (v40)
    {
      v20 = type metadata accessor for DOCItemCollectionViewController(0);
      v21 = (void *)swift_dynamicCastClass(v40, v20);
      if (v21)
      {
        v22 = objc_msgSend(v21, "navigationController");

        if (v22)
        {
          v40 = v22;
          v23 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
          v23(v16, v38, v13);
          v24 = UICellConfigurationState.isPinned.setter(1);
          v25 = *(id *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
          if (v25)
          {
            v26 = *(void **)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
            v27 = v40;
          }
          else
          {
            v38 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView;
            static UIBackgroundConfiguration.listHeader()(v24);
            v41[3] = v13;
            v41[4] = &protocol witness table for UICellConfigurationState;
            v28 = (char *)sub_10006CBAC(v41);
            v23(v28, (uint64_t)v16, v13);
            UIBackgroundConfiguration.updated(for:)(v41);
            v37 = *(void (**)(char *, uint64_t))(v7 + 8);
            v37(v9, v6);
            v29 = sub_100068588(v41);
            v30 = (void *)UIBackgroundConfiguration.visualEffect.getter(v29);
            v31 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v30);

            v25 = v31;
            v32 = objc_msgSend(v40, "navigationBar");
            v33 = objc_msgSend(v32, "_backdropViewLayerGroupName");

            objc_msgSend(v25, "_setGroupName:", v33);
            v27 = v40;
            v34 = *(void **)&v2[v38];
            *(_QWORD *)&v2[v38] = v25;

            v37(v12, v6);
            v26 = 0;
          }
          static UIBackgroundConfiguration.clear()(v26);
          v35 = v25;
          UIBackgroundConfiguration.customView.setter(v25);
          UIBackgroundConfiguration.backgroundInsets.setter(-*(double *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension], 0.0, 0.0, 0.0);
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v12, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
          UICollectionViewCell.backgroundConfiguration.setter(v5);
          objc_msgSend(v35, "setAlpha:", *(double *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha]);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v13);
        }
      }
      else
      {

      }
    }
  }
}

id sub_10042719C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t ObjectType;
  void *v12;

  v1 = sub_10042190C();
  v3 = v2;
  v4 = objc_opt_self(UILabel);
  v5 = (id)swift_dynamicCastObjCClass(v1, v4);
  if (!v5)
  {
    v6 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX;
    v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX);
    if (v7)
    {
      v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX);
      v9 = v8;
    }
    else
    {
      v9 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
      v8 = 0;
      v7 = *(void **)(v0 + v6);
    }
    *(_QWORD *)(v0 + v6) = v9;
    v10 = v8;
    v5 = v9;

    ObjectType = swift_getObjectType(v1);
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    objc_msgSend(v5, "setAttributedText:", v12);

  }
  return v5;
}

id sub_1004272C0(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCItemCollectionViewSectionHeader);
}

uint64_t type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView()
{
  return objc_opt_self(_TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView);
}

void *sub_1004274A0()
{
  void *result;

  result = (void *)sub_1003F1824((uint64_t)_swiftEmptyArrayStorage);
  off_100654AB8 = result;
  return result;
}

void sub_1004274D4()
{
  uint64_t v0;

}

id sub_1004274E4(uint64_t a1)
{
  return sub_1001405E0(a1, type metadata accessor for DOCPlatterizedLabel);
}

uint64_t type metadata accessor for DOCPlatterizedLabel()
{
  return objc_opt_self(_TtC5Files19DOCPlatterizedLabel);
}

__n128 initializeWithCopy for DOCItemCollectionViewSectionHeader.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewSectionHeader.Metrics(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[73])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewSectionHeader.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewSectionHeader.Metrics()
{
  return &type metadata for DOCItemCollectionViewSectionHeader.Metrics;
}

void sub_100427600(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "traitCollection");
  sub_100426A04();

}

uint64_t sub_100427644()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100427668()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10042768C(uint64_t a1)
{
  uint64_t v1;

  sub_10042599C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_100427698(void *a1)
{
  uint64_t v1;

  sub_100425A2C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_1004276A4()
{
  uint64_t v0;

  sub_1004233A8(*(char **)(v0 + 16));
}

uint64_t sub_1004276AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004276BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004276E0(double a1)
{
  uint64_t v1;

  sub_100423468(*(char **)(v1 + 16), a1);
}

uint64_t sub_1004276E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100427710(void *a1)
{
  double v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  void *v15;
  void *v17;
  _BYTE v18[24];

  if (qword_100641148 != -1)
    swift_once(&qword_100641148, sub_1000834CC);
  v2 = *(double *)&qword_100654AC8;
  v3 = qword_100641140;
  v4 = (id)qword_100654AC0;
  if (v3 != -1)
    swift_once(&qword_100641140, sub_1004274A0);
  v5 = objc_msgSend(a1, "preferredContentSizeCategory");
  swift_beginAccess(&off_100654AB8, v18, 32, 0);
  v6 = off_100654AB8;
  if (*((_QWORD *)off_100654AB8 + 2) && (v7 = sub_100079D38(v5), (v8 & 1) != 0))
  {
    v9 = *(void **)(v6[7] + 8 * v7);
    swift_endAccess(v18);
    v10 = v9;
  }
  else
  {

    swift_endAccess(v18);
    v11 = (void *)objc_opt_self(UIFontDescriptor);
    v5 = objc_msgSend(v11, "_preferredFontDescriptorWithTextStyle:design:weight:compatibleWithTraitCollection:", v4, UIFontDescriptorSystemDesignDefault, a1, v2);
    if (!v5)
      v5 = objc_msgSend(v11, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v4, a1);
    v12 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v5, 0.0);
    v13 = objc_msgSend(a1, "preferredContentSizeCategory");
    swift_beginAccess(&off_100654AB8, v18, 33, 0);
    v10 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100654AB8);
    v17 = off_100654AB8;
    off_100654AB8 = (_UNKNOWN *)0x8000000000000000;
    sub_100356938((uint64_t)v10, v13, isUniquelyReferenced_nonNull_native);
    v15 = off_100654AB8;
    off_100654AB8 = v17;

    swift_bridgeObjectRelease(v15);
    swift_endAccess(v18);
  }

  return v10;
}

double sub_10042794C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t *v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char *v11;
  _BYTE v12[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu) = a1;
  v5 = a1;

  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  *(_QWORD *)&result = swift_beginAccess(v2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons, v12, 0, 0).n128_u64[0];
  v8 = *v6;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain(v8);
    sub_1001408E4(1);
    if ((v10 & 1) != 0)
    {
      v11 = (char *)*(id *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      objc_msgSend(*(id *)&v11[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button], "setMenu:", *(_QWORD *)(v2 + v3), swift_bridgeObjectRelease(v8).n128_f64[0]);

    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

void sub_100427A14(uint64_t a1)
{
  _BYTE *v1;
  id v2;
  void *v3;
  Swift::String *v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  __int128 v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  Swift::String v20;

  v2 = (id)_DocumentManagerBundle(a1);
  if (!v2)
    __break(1u);
  v3 = v2;
  v4 = (Swift::String *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString];
  v20._countAndFlagsBits = 0xD00000000000002ALL;
  v20._object = (void *)0x80000001005345D0;
  v5._countAndFlagsBits = 0x73654C20776F6853;
  v5._object = (void *)0xE900000000000073;
  v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v3, v7, v20);

  *v4 = v8;
  v9 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator] = 0;
  v11 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
  *(_OWORD *)(v11 + 8) = xmmword_1004E81B0;
  *(_OWORD *)(v11 + 24) = xmmword_1004E81B0;
  v12 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *(_WORD *)v11 = 256;
  *(_OWORD *)(v11 + 56) = v12;
  v11[72] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = _swiftEmptyArrayStorage;
  v13 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = 0;
  v14 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_QWORD *)v14 + 4) = 0;
  v15 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints] = &_swiftEmptyDictionarySingleton;
  v16 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
  v16[24] = 0;
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  *(_QWORD *)v16 = 0;
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu] = 0;
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride] = 2;
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = 0;
  v17 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_QWORD *)v17 + 4) = 0;
  v18 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCItemCollectionViewSectionHeader.swift", 46, 2, 444, 0);
  __break(1u);
}

void sub_100427D38(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100427D80@<X0>(uint64_t a1@<X2>, char a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;

  v5 = DOCItemSortDescriptor.ascending.getter(v4, a1, a3, a2 & 1);
  sub_10000F428(0x5040302010000uLL >> (8 * v4));
  v7 = v6;
  v8 = (void *)objc_opt_self(DOCAXIdentifier);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "sortByHeaderButtonForSortIdentifier:ascending:active:", v9, v5 & 1, v7 & 1, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  return v11;
}

uint64_t sub_100427EA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100427EC4()
{
  uint64_t v0;

  sub_100422B74(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100427EDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100427EEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100427F10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100427F20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100427F30()
{
  uint64_t v0;

  sub_100421ECC(v0);
}

uint64_t sub_100427F38(uint64_t a1)
{
  uint64_t v1;

  return sub_100421F54(a1, v1);
}

uint64_t sub_100427F4C()
{
  return 8;
}

uint64_t sub_100427F58(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100427F60(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100427F74(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100427F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100646CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100427FC8(uint64_t *a1)
{
  sub_1001BC194(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_100428030()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  double v12;
  int v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  if (objc_msgSend(v0, "isRoot"))
  {
    v1 = objc_msgSend(v0, "fileProviderItem");
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v1, "providerID");
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      v6 = v5;

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSMBFileProvider);
      if (v4 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n(v6, 2);
      }
      else
      {
        v10 = v8;
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
        swift_bridgeObjectRelease(v6);
        *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
        if ((v11 & 1) == 0)
        {
          v13 = 1;
LABEL_17:

          goto LABEL_18;
        }
      }
      v14 = objc_msgSend(v2, "itemID", v12);
      v15 = objc_msgSend(v14, "domainIdentifier");

      v16 = objc_msgSend(v2, "parentItemID");
      v17 = objc_msgSend(v16, "domainIdentifier");

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v23 = v21;
      if (v18 == v22 && v20 == v21)
      {
        v13 = 1;
        v23 = v20;
      }
      else
      {
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
      }
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v23);

      goto LABEL_17;
    }
    v13 = 1;
  }
  else
  {
    v13 = 0;
  }
LABEL_18:
  v24 = sub_10006922C(&qword_10064FE20);
  inited = swift_initStackObject(v24, &v42);
  *(_OWORD *)(inited + 16) = xmmword_1004E1E40;
  v26 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
  *(_QWORD *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
  v27 = (void *)DOCDocumentSourceIdentifierSearch;
  v28 = (void *)DOCDocumentSourceIdentifierSharedItems;
  *(_QWORD *)(inited + 40) = DOCDocumentSourceIdentifierSearch;
  *(_QWORD *)(inited + 48) = v28;
  v29 = (void *)DOCDocumentSourceIdentifierTaggedItems;
  v30 = (void *)DOCDocumentSourceIdentifierSpotlight;
  *(_QWORD *)(inited + 56) = DOCDocumentSourceIdentifierTaggedItems;
  *(_QWORD *)(inited + 64) = v30;
  v31 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  *(_QWORD *)(inited + 72) = DOCDocumentSourceIdentifierTrashedItems;
  v32 = v26;
  v33 = v27;
  v34 = v28;
  v35 = v29;
  v36 = v30;
  v37 = v31;
  v38 = objc_msgSend(v0, "sourceIdentifier");
  LODWORD(v27) = sub_1000DFACC((uint64_t)v38, inited);

  swift_setDeallocating(inited);
  v39 = *(_QWORD *)(inited + 16);
  type metadata accessor for DOCDocumentSourceIdentifier(0);
  swift_arrayDestroy(inited + 32, v39, v40);
  return v13 & ~(_DWORD)v27 & 1;
}

id sub_10042830C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  double v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  v1 = objc_msgSend(v0, "fileProviderItem");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "folderType");

    if (v3 == (id)4)
    {
      v4 = sub_100428850();
      goto LABEL_16;
    }
  }
  v5 = objc_msgSend(v0, "representedTag");
  if (!v5)
  {
    v8 = objc_msgSend(v0, "sourceIdentifier");
    v9 = DOCDocumentSourceIdentifierRecentDocuments;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    if (v10 == v13 && v12 == v14)
    {

      swift_bridgeObjectRelease_n(v12, 2);
    }
    else
    {
      v16 = v14;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);

      swift_bridgeObjectRelease(v12);
      *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
      if ((v17 & 1) == 0)
      {
        v19 = objc_msgSend(v0, "sourceIdentifier", v18);
        v20 = DOCDocumentSourceIdentifierSharedItems;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v23 = v22;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v26 = v24;
        if (v21 == v25 && v23 == v24)
        {

          swift_bridgeObjectRelease_n(v23, 2);
        }
        else
        {
          v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);

          swift_bridgeObjectRelease(v23);
          *(_QWORD *)&v30 = swift_bridgeObjectRelease(v26).n128_u64[0];
          if ((v29 & 1) == 0)
          {
            v31 = objc_msgSend(v0, "sourceIdentifier", v30);
            v32 = DOCDocumentSourceIdentifierSearch;
            v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
            v35 = v34;
            v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
            v38 = v36;
            if (v33 == v37 && v35 == v36)
            {

              swift_bridgeObjectRelease_n(v35, 2);
            }
            else
            {
              v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v35, v37, v36, 0);

              swift_bridgeObjectRelease(v35);
              *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
              if ((v39 & 1) == 0)
              {
                v41 = objc_msgSend(v0, "sourceIdentifier", v40);
                v42 = DOCDocumentSourceIdentifierTrashedItems;
                v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
                v45 = v44;
                v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
                v48 = v46;
                if (v43 == v47 && v45 == v46)
                {

                  swift_bridgeObjectRelease_n(v45, 2);
                  return 0;
                }
                v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);

                swift_bridgeObjectRelease(v45);
                swift_bridgeObjectRelease(v48);
                if ((v49 & 1) != 0)
                  return 0;
                v4 = sub_1004290F8();
                goto LABEL_16;
              }
            }
            return objc_msgSend((id)objc_opt_self(DOCContentUnavailableConfiguration), "searchConfiguration");
          }
        }
        v4 = sub_100428EF4();
LABEL_16:
        v7 = v4;
        v27 = v4;
        return v7;
      }
    }
    v4 = sub_100428CF0();
    goto LABEL_16;
  }
  v6 = v5;
  v7 = sub_100428A48(v5);

  return v7;
}

id sub_100428660(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  id result;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  Swift::String v21;

  v3 = objc_msgSend(a1, "iconPreferingSymbolImages");
  objc_msgSend(v1, "setImage:", v3);

  result = (id)_DocumentManagerBundle(v4);
  if (result)
  {
    v6 = result;
    v21._object = (void *)0x80000001005346F0;
    v7._countAndFlagsBits = 0x6D45207369204025;
    v7._object = (void *)0xEB00000000797470;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0xD000000000000048;
    v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v21);

    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
    v13 = objc_msgSend(a1, "providerName");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v12 + 56) = &type metadata for String;
    *(_QWORD *)(v12 + 64) = sub_10006A638();
    *(_QWORD *)(v12 + 32) = v14;
    *(_QWORD *)(v12 + 40) = v16;
    static String.localizedStringWithFormat(_:_:)(v10._countAndFlagsBits, v10._object, v12);
    v18 = v17;
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v10._object);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setText:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v20 = objc_msgSend(a1, "domainName");
    objc_msgSend(v1, "setSecondaryText:", v20);

    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100428850()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  Swift::String v18;
  Swift::String v19;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  objc_msgSend(v0, "setImage:", v2);
  result = (id)_DocumentManagerBundle(v3);
  if (result)
  {
    v5 = result;
    v6._countAndFlagsBits = 0xD000000000000013;
    v18._countAndFlagsBits = 0xD000000000000040;
    v18._object = (void *)0x8000000100534760;
    v6._object = (void *)0x8000000100534740;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v18)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v0, "setText:", v10);

    result = (id)_DocumentManagerBundle(v11);
    if (result)
    {
      v12 = result;
      v13._countAndFlagsBits = 0xD000000000000024;
      v19._countAndFlagsBits = 0xD000000000000046;
      v19._object = (void *)0x80000001005347E0;
      v13._object = (void *)0x80000001005347B0;
      v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v14.value._object = (void *)0xEB00000000656C62;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v19)._object;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v0, "setSecondaryText:", v17);

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100428A48(void *a1)
{
  void *v1;
  NSString v3;
  id v4;
  uint64_t v5;
  id result;
  void *v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *object;
  NSString v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  Swift::String v28;
  Swift::String v29;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

  objc_msgSend(v1, "setImage:", v4);
  result = (id)_DocumentManagerBundle(v5);
  if (result)
  {
    v7 = result;
    v28._countAndFlagsBits = 0xD00000000000003ALL;
    v28._object = (void *)0x8000000100534850;
    v8._countAndFlagsBits = 0x6567676154206F4ELL;
    v8._object = (void *)0xEF73656C69462064;
    v9.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v9.value._object = (void *)0xEB00000000656C62;
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v28)._object;

    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setText:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

    result = (id)_DocumentManagerBundle(v13);
    if (result)
    {
      v14 = result;
      v29._countAndFlagsBits = 0xD000000000000040;
      v29._object = (void *)0x80000001005348C0;
      v15._object = (void *)0x8000000100534890;
      v15._countAndFlagsBits = 0x100000000000002ALL;
      v16.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v16.value._object = (void *)0xEB00000000656C62;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v29);

      v19 = sub_10006922C((uint64_t *)&unk_100644560);
      v20 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
      v21 = objc_msgSend(a1, "displayName");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      *(_QWORD *)(v20 + 56) = &type metadata for String;
      *(_QWORD *)(v20 + 64) = sub_10006A638();
      *(_QWORD *)(v20 + 32) = v22;
      *(_QWORD *)(v20 + 40) = v24;
      static String.localizedStringWithFormat(_:_:)(v18._countAndFlagsBits, v18._object, v20);
      v26 = v25;
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18._object);
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v1, "setSecondaryText:", v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100428CF0()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  Swift::String v18;
  Swift::String v19;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  objc_msgSend(v0, "setImage:", v2);
  result = (id)_DocumentManagerBundle(v3);
  if (result)
  {
    v5 = result;
    v18._countAndFlagsBits = 0xD000000000000031;
    v6._object = (void *)0xEA00000000007374;
    v18._object = (void *)0x8000000100534910;
    v6._countAndFlagsBits = 0x6E65636552206F4ELL;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v18)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v0, "setText:", v10);

    result = (id)_DocumentManagerBundle(v11);
    if (result)
    {
      v12 = result;
      v19._countAndFlagsBits = 0xD000000000000037;
      v19._object = (void *)0x8000000100534980;
      v13._object = (void *)0x8000000100534950;
      v13._countAndFlagsBits = 0xD00000000000002BLL;
      v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v14.value._object = (void *)0xEB00000000656C62;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v19)._object;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v0, "setSecondaryText:", v17);

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100428EF4()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  Swift::String v18;
  Swift::String v19;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  objc_msgSend(v0, "setImage:", v2);
  result = (id)_DocumentManagerBundle(v3);
  if (result)
  {
    v5 = result;
    v18._countAndFlagsBits = 0xD00000000000003CLL;
    v18._object = (void *)0x80000001005349C0;
    v6._countAndFlagsBits = 0x6572616853206F4ELL;
    v6._object = (void *)0xEF73656C69462064;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v18)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v0, "setText:", v10);

    result = (id)_DocumentManagerBundle(v11);
    if (result)
    {
      v12 = result;
      v13._countAndFlagsBits = 0xD00000000000001ELL;
      v19._countAndFlagsBits = 0xD000000000000042;
      v19._object = (void *)0x8000000100534A20;
      v13._object = (void *)0x8000000100534A00;
      v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v14.value._object = (void *)0xEB00000000656C62;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v19)._object;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v0, "setSecondaryText:", v17);

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004290F8()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v11;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  objc_msgSend(v0, "setImage:", v2);
  result = (id)_DocumentManagerBundle(v3);
  if (result)
  {
    v5 = result;
    v11._object = (void *)0x8000000100534A70;
    v6._countAndFlagsBits = 0x69207265646C6F46;
    v6._object = (void *)0xEF7974706D452073;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v11._countAndFlagsBits = 0xD000000000000034;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v11)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v0, "setText:", v10);

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100429248()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id result;
  void *v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSString v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  void *object;
  NSString v26;
  Swift::String v27;
  Swift::String v28;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = UIDevice.doc_preferredAuthenticationMechanism.getter();

  if (v3 - 2 >= 3)
  {
    if ((_BYTE)v3)
    {
      result = (id)_DocumentManagerBundle(v4);
      if (!result)
        goto LABEL_10;
      v8 = result;
      v27._object = (void *)0x80000001005346C0;
      v9._countAndFlagsBits = 0x4025207265746E45;
      v9._object = (void *)0xE800000000000000;
      v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v10.value._object = (void *)0xEB00000000656C62;
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v27._countAndFlagsBits = 0xD00000000000002CLL;
      v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v27);

      v13 = sub_10006922C((uint64_t *)&unk_100644560);
      v14 = swift_allocObject(v13, 72, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
      v15 = DOCAuthenticationMechanism.localizedDescription.getter(1);
      v17 = v16;
      *(_QWORD *)(v14 + 56) = &type metadata for String;
      *(_QWORD *)(v14 + 64) = sub_10006A638();
      *(_QWORD *)(v14 + 32) = v15;
      *(_QWORD *)(v14 + 40) = v17;
      static String.localizedStringWithFormat(_:_:)(v12._countAndFlagsBits, v12._object, v14);
      v6 = v18;
      swift_bridgeObjectRelease(v12._object);
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      v6 = 0xE000000000000000;
    }
  }
  else
  {
    DOCAuthenticationMechanism.localizedDescription.getter(v3);
    v6 = v5;
  }
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v19, swift_bridgeObjectRelease(v6).n128_f64[0]);

  result = (id)_DocumentManagerBundle(v20);
  if (result)
  {
    v21 = result;
    v28._countAndFlagsBits = 0xD000000000000089;
    v28._object = (void *)0x8000000100534630;
    v22._countAndFlagsBits = 0x20776F6873206F74;
    v22._object = (void *)0xEE007265646C6F66;
    v23.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v23.value._object = (void *)0xEB00000000656C62;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v28)._object;

    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSecondaryText:", v26, swift_bridgeObjectRelease(object).n128_f64[0]);

    return v1;
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

id sub_1004295D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInterface();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCInterface()
{
  return objc_opt_self(_TtC5Files12DOCInterface);
}

uint64_t sub_100429674(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v13;
  unint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[24];
  _BYTE v18[24];

  v3 = type metadata accessor for UICellConfigurationState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v17[-v8];
  v10 = v1 + OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_configurationState;
  v11 = swift_beginAccess(v10, v18, 0, 0);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16);
  v12(v9, v10, v3, v11);
  v13 = swift_beginAccess(v10, v17, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 24))(v10, a1, v3, v13);
  swift_endAccess(v17);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v12)(v6, v10, v3);
  v14 = sub_10032C54C();
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v3, v14);
  v15 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v15(v6, v3);
  if ((v10 & 1) == 0)
    sub_10000AA50();
  v15(a1, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v9, v3);
}

uint64_t sub_1004297FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_configurationState;
  v2 = type metadata accessor for UICellConfigurationState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_100429838()
{
  return _s19BackgroundStateViewCMa(0);
}

uint64_t _s19BackgroundStateViewC5StyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10042988C + 4 * byte_1004E8315[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004298C0 + 4 * asc_1004E8310[v4]))();
}

uint64_t sub_1004298C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004298C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004298D0);
  return result;
}

uint64_t sub_1004298DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004298E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004298E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004298F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19BackgroundStateViewC5StyleOMa()
{
  return &_s19BackgroundStateViewC5StyleON;
}

unint64_t sub_100429910()
{
  unint64_t result;

  result = qword_100654CF0;
  if (!qword_100654CF0)
  {
    result = swift_getWitnessTable(&unk_1004E8358, &_s19BackgroundStateViewC5StyleON);
    atomic_store(result, (unint64_t *)&qword_100654CF0);
  }
  return result;
}

void sub_100429954(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v12 = (char *)v45 - v11;
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
  {
    v13 = objc_opt_self(FINode);
    v14 = swift_dynamicCastObjCClass(a1, v13);
    if (v14)
    {
      v15 = *(void **)(v2 + 32);
      if (v15)
      {
        v49 = v14;
        swift_unknownObjectRetain(a1);
        v16 = v15;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v49);
        swift_unknownObjectRelease(a1);

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
    v22 = Logger.UI.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v22, v5);
    v23 = swift_unknownObjectRetain_n(a1, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v49 = v27;
      v47 = a2;
      *(_DWORD *)v26 = 136315138;
      v46 = (uint64_t)(v26 + 4);
      ObjectType = swift_getObjectType(a1, v28);
      v30 = DOCNode.nodeDescription.getter(ObjectType);
      v32 = v31;
      v48 = sub_1000544FC(v30, v31, &v49);
      a2 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v32);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Attempting to get index path for a non-FINode '%s' in FINode data source.", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    v17 = swift_getObjectType(a1, v10);
    v18 = objc_msgSend(a1, "fpfs_fpItem");
    if (v18)
    {
      v19 = *(void **)(v2 + 24);
      if (v19)
      {
        v20 = v18;
        v49 = (uint64_t)v18;
        v21 = v19;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(&v49);

        return;
      }
      goto LABEL_19;
    }
    v33 = Logger.UI.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v33, v5);
    v34 = swift_unknownObjectRetain_n(a1, 2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(12, -1);
      v47 = a2;
      v38 = (uint8_t *)v37;
      v46 = swift_slowAlloc(32, -1);
      v49 = v46;
      *(_DWORD *)v38 = 136315138;
      v45[1] = v38 + 4;
      v39 = DOCNode.nodeDescription.getter(v17);
      v41 = v40;
      v48 = sub_1000544FC(v39, v40, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v41);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Attempting to get index path for a node '%s' without an FPItem in FPItem data source.", v38, 0xCu);
      v42 = v46;
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      v43 = v38;
      a2 = v47;
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a1, 2);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  v44 = type metadata accessor for IndexPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(a2, 1, 1, v44);
}

uint64_t sub_100429D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[24];

  v1 = sub_10006922C((uint64_t *)&unk_100654FA0);
  __chkstk_darwin(v1);
  v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_10006922C((uint64_t *)&unk_100646C20);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_10006922C((uint64_t *)&unk_100646C30);
  v8 = *(_QWORD *)(v7 - 8);
  result = __chkstk_darwin(v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v12 = *(void **)(v0 + 32);
    if (v12)
    {
      v13 = v12;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      v14 = sub_10006922C((uint64_t *)&unk_100654E80);
      v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
      v15(v3, 0, 1, v14);
      v16 = type metadata accessor for DOCNodeDiffableDataSourceSnapshot(0);
      v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, 1, 1, v7);
      v18 = v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
      v15((_BYTE *)(v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot), 1, 1, v14);
      *(_BYTE *)(v17 + 16) = 1;
      swift_beginAccess(v18, v30, 33, 0);
      v19 = (uint64_t *)&unk_100654FA0;
      v20 = (uint64_t)v3;
      v21 = v18;
LABEL_6:
      sub_10008BB40(v20, v21, v19);
      swift_endAccess(v30);
      return v17;
    }
    __break(1u);
  }
  else
  {
    v22 = *(void **)(v0 + 24);
    if (v22)
    {
      v23 = v22;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      v24 = type metadata accessor for DOCNodeDiffableDataSourceSnapshot(0);
      v17 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
      v25 = v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v26(v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, 1, 1, v7);
      v27 = v17 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
      v28 = sub_10006922C((uint64_t *)&unk_100654E80);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
      *(_BYTE *)(v17 + 16) = 0;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v6, v11, v7);
      v26((uint64_t)v6, 0, 1, v7);
      swift_beginAccess(v25, v30, 33, 0);
      v19 = (uint64_t *)&unk_100646C20;
      v20 = (uint64_t)v6;
      v21 = v25;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10042A038(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _BYTE v27[24];

  v9 = sub_10006922C((uint64_t *)&unk_100654FA0);
  __chkstk_darwin(v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = sub_10006922C((uint64_t *)&unk_100646C20);
  __chkstk_darwin(v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 16) & 1) == 0)
    {
LABEL_15:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000041, 0x8000000100534CB0, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 171, 0);
LABEL_17:
      __break(1u);
      return result;
    }
    v15 = *(void **)(v4 + 32);
    if (v15)
    {
      v16 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
      swift_beginAccess(a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot, v27, 0, 0);
      sub_1000271D4(v16, (uint64_t)v11, (uint64_t *)&unk_100654FA0);
      v17 = sub_10006922C((uint64_t *)&unk_100654E80);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) != 1)
      {
        v19 = v15;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v11, a2 & 1, a3, a4);

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v11, v17);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000041, 0x8000000100534D00, "Files/DOCNodeDiffableDataSource.swift", 37, 2, 164, 0);
    goto LABEL_17;
  }
  v21 = *(void **)(v4 + 24);
  if (!v21)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, v27, 0, 0);
  sub_1000271D4(v22, (uint64_t)v14, (uint64_t *)&unk_100646C20);
  v23 = sub_10006922C((uint64_t *)&unk_100646C30);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v25 = v21;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v14, a2 & 1, a3, a4);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v14, v23);
}

uint64_t sub_10042A2BC()
{
  return type metadata accessor for DOCNodeDiffableDataSourceSnapshot(0);
}

ValueMetadata *type metadata accessor for DOCNodeDiffableDataSourceSnapshot.SnapshotType()
{
  return &type metadata for DOCNodeDiffableDataSourceSnapshot.SnapshotType;
}

uint64_t _s5Files25DOCNodeDiffableDataSourceC14DataSourceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10042A324 + 4 * byte_1004E83C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10042A358 + 4 * byte_1004E83C0[v4]))();
}

uint64_t sub_10042A358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042A360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10042A368);
  return result;
}

uint64_t sub_10042A374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10042A37CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10042A380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042A388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeDiffableDataSource.DataSourceType()
{
  return &type metadata for DOCNodeDiffableDataSource.DataSourceType;
}

unint64_t sub_10042A3A8()
{
  unint64_t result;

  result = qword_100654F88;
  if (!qword_100654F88)
  {
    result = swift_getWitnessTable(&unk_1004E84BC, &type metadata for DOCNodeDiffableDataSource.DataSourceType);
    atomic_store(result, (unint64_t *)&qword_100654F88);
  }
  return result;
}

unint64_t sub_10042A3F0()
{
  unint64_t result;

  result = qword_100654F90;
  if (!qword_100654F90)
  {
    result = swift_getWitnessTable(&unk_1004E8524, &type metadata for DOCNodeDiffableDataSourceSnapshot.SnapshotType);
    atomic_store(result, (unint64_t *)&qword_100654F90);
  }
  return result;
}

uint64_t sub_10042A434()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10042A754()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPinchZoomTestParameters();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCPinchZoomTestParameters()
{
  return objc_opt_self(_TtC5Files26DOCPinchZoomTestParameters);
}

uint64_t sub_10042A7E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_10042A7F4(void *a1)
{
  double *v1;
  double v3;
  double v4;
  double v5;
  double v6;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  objc_msgSend(a1, "pinchOpenWithStartPoint:endPoint:duration:", v3, v4, v5, v6, 1.0);
  objc_msgSend(a1, "advanceTime:", 0.5);
  return objc_msgSend(a1, "pinchCloseWithStartPoint:endPoint:duration:", v5, v6, v3, v4, 1.0);
}

uint64_t sub_10042A87C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void DOCFullDocumentManagerViewController.search(forQuery:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  _QWORD v13[5];
  _QWORD *v14;

  v8 = sub_100083AE8();
  v9 = swift_allocObject(&unk_1005EB4E0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_1005EB508, 56, 7);
  v10[2] = v9;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a1;
  v10[6] = a2;
  v13[4] = sub_10042B3B4;
  v14 = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004A82C;
  v13[3] = &unk_1005EB520;
  v11 = _Block_copy(v13);
  v12 = v14;
  sub_10008BA00(a3, a4);
  swift_bridgeObjectRetain(a2);
  objc_msgSend(v8, "performAfterSearchInitialization:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

}

uint64_t sub_10042A9C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10042A9E4(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *Strong;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  id v68;
  id v69;
  _QWORD *v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  unint64_t v75;
  char *v76;
  _QWORD *v77;
  void *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  id v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  int v86;
  NSObject *v87;
  id v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t aBlock[5];
  _QWORD *v96;
  uint64_t v97;
  _BYTE v98[32];

  v93 = a5;
  v94 = a3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v92 = (char *)&v84 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v84 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v84 - v18;
  a1 += 16;
  swift_beginAccess(a1, v98, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v21 = Strong;
    v91 = objc_msgSend(Strong, "effectiveSearchController");
    if (v91)
    {
      v22 = objc_msgSend(v21, "presentedViewController");
      v89 = a4;
      v90 = a2;
      if (v22)
      {
        v23 = objc_opt_self(UIAlertController);
        v24 = swift_dynamicCastObjCClass(v22, v23);
        if (v24)
        {
          v25 = Logger.Application.unsafeMutableAddressor(v24);
          v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v19, v25, v8);
          v27 = Logger.logObject.getter(v26);
          v28 = static os_log_type_t.error.getter(v27);
          if (os_log_type_enabled(v27, v28))
          {
            v29 = (uint8_t *)swift_slowAlloc(12, -1);
            v30 = swift_slowAlloc(32, -1);
            v88 = v22;
            v31 = v30;
            aBlock[0] = v30;
            *(_DWORD *)v29 = 136315138;
            v97 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100534DF0, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: Alert is presented, bailing out for safety", v29, 0xCu);
            v32 = 1;
            swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
            v33 = v31;
            v22 = v88;
            swift_slowDealloc(v33, -1, -1);
            swift_slowDealloc(v29, -1, -1);

            (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
            v34 = 0;
            v35 = 2;
LABEL_20:
            a4 = v89;
            goto LABEL_21;
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
          v34 = 0;
          v35 = 2;
          goto LABEL_19;
        }
        v45 = objc_opt_self(UIDocumentPickerViewController);
        v46 = swift_dynamicCastObjCClass(v22, v45);
        if (v46)
        {
          v47 = Logger.Application.unsafeMutableAddressor(v46);
          v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v16, v47, v8);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.error.getter(v49);
          if (os_log_type_enabled(v49, v50))
          {
            v51 = (uint8_t *)swift_slowAlloc(12, -1);
            v52 = swift_slowAlloc(32, -1);
            aBlock[0] = v52;
            v88 = v22;
            *(_DWORD *)v51 = 136315138;
            v97 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100534DF0, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s: Picker is presented (probably chosing a directory for scanned document), bailing out for safety", v51, 0xCu);
            swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v52, -1, -1);
            swift_slowDealloc(v51, -1, -1);

            (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
            v34 = 0;
            v35 = 3;
            v32 = 1;
            v22 = v88;
            goto LABEL_20;
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
          v34 = 0;
          v35 = 3;
LABEL_19:
          v32 = 1;
          goto LABEL_20;
        }
        v32 = 0;
        v35 = 5;
        v34 = 1;
      }
      else
      {
        v35 = 5;
        v32 = 1;
        v34 = 1;
      }
LABEL_21:
      v53 = v91;
      if (objc_msgSend(v21, "isEditing"))
        objc_msgSend(v21, "setEditing:", 0);
      if (v34)
      {
        v54 = (_QWORD *)swift_allocObject(&unk_1005EB558, 56, 7);
        v55 = a4;
        v56 = v54;
        v54[2] = v53;
        v54[3] = v55;
        v57 = v94;
        v58 = (uint64_t)v90;
        v54[4] = v93;
        v54[5] = v58;
        if (v22)
          v59 = v32;
        else
          v59 = 1;
        v54[6] = v57;
        if ((v59 & 1) == 0)
        {
          v77 = (_QWORD *)swift_allocObject(&unk_1005EB580, 40, 7);
          v77[2] = v53;
          v77[3] = sub_10042B968;
          v77[4] = v56;
          aBlock[4] = (uint64_t)sub_10042B9A0;
          v96 = v77;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_10004A82C;
          aBlock[3] = (uint64_t)&unk_1005EB598;
          v78 = _Block_copy(aBlock);
          v79 = v96;
          v80 = v53;
          v81 = v58;
          v82 = v80;
          sub_10008BA00(v81, v94);
          swift_bridgeObjectRetain(v93);
          v83 = v22;
          swift_retain();
          objc_msgSend(v83, "dismissViewControllerAnimated:completion:", 0, v78, swift_release(v79).n128_f64[0]);
          swift_release(v56);

          _Block_release(v78);
          return;
        }
        v60 = v53;
        sub_10008BA00(v58, v94);
        v61 = swift_bridgeObjectRetain(v93);
        v62 = Logger.Application.unsafeMutableAddressor(v61);
        v63 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v92, v62, v8);
        v64 = v60;
        v65 = Logger.logObject.getter(v64);
        v66 = static os_log_type_t.debug.getter(v65);
        v87 = v65;
        v86 = v66;
        if (os_log_type_enabled(v65, v66))
        {
          v67 = swift_slowAlloc(22, -1);
          v84 = (_QWORD *)swift_slowAlloc(8, -1);
          v85 = swift_slowAlloc(32, -1);
          aBlock[0] = v85;
          *(_DWORD *)v67 = 136315394;
          v97 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100534DF0, aBlock);
          v88 = v22;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
          *(_WORD *)(v67 + 12) = 2112;
          v97 = (uint64_t)v64;
          v68 = v64;
          v69 = v64;
          v22 = v88;
          v58 = (uint64_t)v90;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
          v70 = v84;
          *v84 = v91;

          v64 = v68;
          v71 = v87;
          _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v86, "%s: Activating continuation search on: %@", (uint8_t *)v67, 0x16u);
          v72 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v70, 1, v72);
          swift_slowDealloc(v70, -1, -1);
          v73 = v85;
          swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v73, -1, -1);
          swift_slowDealloc(v67, -1, -1);

          (*(void (**)(char *, uint64_t))(v9 + 8))(v92, v8);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v9 + 8))(v63, v8);
        }
        sub_10042B404(v64, v89, v93, v58, v94);
        swift_release(v56);

        goto LABEL_37;
      }
      v74 = v90;
      if (!v90)
      {

LABEL_37:
        return;
      }
      v75 = sub_10042B3C0();
      v43 = swift_allocError(&_s11SearchErrorON, v75, 0, 0);
      *v76 = v35;
      v74(v43, 1);

LABEL_32:
      swift_errorRelease(v43);
      return;
    }

  }
  v36 = Logger.Application.unsafeMutableAddressor(Strong);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v36, v8);
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.error.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(12, -1);
    v41 = swift_slowAlloc(32, -1);
    aBlock[0] = v41;
    *(_DWORD *)v40 = 136315138;
    v97 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100534DF0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s: Unable to continue activity since search controller is nil", v40, 0xCu);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (a2)
  {
    v42 = sub_10042B3C0();
    v43 = swift_allocError(&_s11SearchErrorON, v42, 0, 0);
    *v44 = 1;
    a2(v43, 1);
    goto LABEL_32;
  }
}

uint64_t sub_10042B378()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10042B3B4()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10042A9E4);
}

unint64_t sub_10042B3C0()
{
  unint64_t result;

  result = qword_100655060;
  if (!qword_100655060)
  {
    result = swift_getWitnessTable(&unk_1004E85EC, &_s11SearchErrorON);
    atomic_store(result, (unint64_t *)&qword_100655060);
  }
  return result;
}

uint64_t sub_10042B404(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  _QWORD *v45;

  v36 = a4;
  v37 = a5;
  v35 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - v18;
  v20 = sub_100086BF0();
  v38 = static OS_dispatch_queue.main.getter(v20);
  static DispatchTime.now()(v38);
  + infix(_:_:)(v16, 0.35);
  v39 = *(void (**)(char *, uint64_t))(v14 + 8);
  v39(v16, v13);
  v21 = (_QWORD *)swift_allocObject(&unk_1005EB5D0, 56, 7);
  v22 = v35;
  v23 = v36;
  v21[2] = a1;
  v21[3] = v22;
  v21[4] = a3;
  v21[5] = v23;
  v24 = v37;
  v21[6] = v37;
  aBlock[4] = sub_10042B9EC;
  v45 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EB5E8;
  v25 = _Block_copy(aBlock);
  v26 = v45;
  v27 = a1;
  swift_bridgeObjectRetain(a3);
  sub_10008BA00(v23, v24);
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_10008BAAC();
  v30 = sub_10006922C((uint64_t *)&unk_100647540);
  v31 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v7, v29);
  v32 = (void *)v38;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v12, v9, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
  return ((uint64_t (*)(char *, uint64_t))v39)(v19, v40);
}

void sub_10042B69C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD))
{
  sub_10045EFEC();
  sub_100460640();
  if (a4)
    a4(0, 0);
}

uint64_t sub_10042B6FC(void *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v26 = v5;
    v14 = v13;
    v23 = (_QWORD *)swift_slowAlloc(8, -1);
    v25 = swift_slowAlloc(32, -1);
    v29 = v25;
    *(_DWORD *)v14 = 136315394;
    v27 = a2;
    v28 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100534DF0, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    *(_WORD *)(v14 + 12) = 2112;
    v28 = (uint64_t)v10;
    v15 = v10;
    v24 = v4;
    v16 = v15;
    a2 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    v17 = v23;
    *v23 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Activating continuation search on: %@", (uint8_t *)v14, 0x16u);
    v18 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v17, 1, v18);
    swift_slowDealloc(v17, -1, -1);
    v19 = v25;
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v20 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v24);
  }
  else
  {

    v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return a2(v20);
}

uint64_t sub_10042B968()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10042B404);
}

uint64_t sub_10042B974()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10042B9A0()
{
  uint64_t v0;

  return sub_10042B6FC(*(void **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24));
}

uint64_t sub_10042B9B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10042B9EC()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10042B69C);
}

uint64_t _s11SearchErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10042BA44 + 4 * byte_1004E8571[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10042BA78 + 4 * asc_1004E856C[v4]))();
}

uint64_t sub_10042BA78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042BA80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10042BA88);
  return result;
}

uint64_t sub_10042BA94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10042BA9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10042BAA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042BAA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11SearchErrorOMa()
{
  return &_s11SearchErrorON;
}

unint64_t sub_10042BAC8()
{
  unint64_t result;

  result = qword_100655068;
  if (!qword_100655068)
  {
    result = swift_getWitnessTable(&unk_1004E85C4, &_s11SearchErrorON);
    atomic_store(result, (unint64_t *)&qword_100655068);
  }
  return result;
}

void sub_10042BB1C(char a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  void *Strong;
  uint64_t v5;
  void *v6;
  char **v7;
  id v8;
  id v9;

  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled);
  if (v3 != (a1 & 1))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_targetView, a2);
    if (Strong)
    {
      v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture);
      v9 = Strong;
      if (v3)
      {
        if (v5)
        {
          objc_msgSend(Strong, "addGestureRecognizer:");
          v6 = *(void **)(v2 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
          if (v6)
          {
            v7 = &selRef_addInteraction_;
LABEL_11:
            v8 = v6;
            objc_msgSend(v9, *v7, v8);

            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
      else if (v5)
      {
        objc_msgSend(Strong, "removeGestureRecognizer:");
        v6 = *(void **)(v2 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
        if (v6)
        {
          v7 = &selRef_removeInteraction_;
          goto LABEL_11;
        }
        goto LABEL_15;
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
  }
}

void sub_10042BC10(void *a1)
{
  uint64_t v1;
  double *v2;
  double v3;
  double v4;
  uint64_t v5;
  void *v6;
  id v7;
  _OWORD v8[2];
  uint64_t v9;

  if (objc_msgSend(a1, "state") == (id)1)
  {
    sub_10042BDB4();
    v2 = (double *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext);
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16))
    {
      v4 = *v2;
      v3 = v2[1];
      sub_10004F2F0(0, &qword_100655128, UIEditMenuConfiguration_ptr);
      v9 = 0;
      memset(v8, 0, sizeof(v8));
      v5 = UIEditMenuConfiguration.init(identifier:sourcePoint:)(v8, v4, v3);
      v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
      if (v6)
      {
        v7 = (id)v5;
        objc_msgSend(v6, "presentEditMenuWithConfiguration:");

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10042BDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  NSString v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  Swift::String v26;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_targetView);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture);
    if (v4)
    {
      v24 = v3;
      objc_msgSend(v4, "locationInView:");
      v6 = v5;
      v7 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_delegate);
      if (!v7)
      {

        return;
      }
      v8 = v7;
      v9 = (id)_DocumentManagerBundle(v7);
      if (v9)
      {
        v10 = v9;
        v26._countAndFlagsBits = 0xD00000000000002ALL;
        v26._object = (void *)0x8000000100534ED0;
        v11._object = (void *)0x8000000100534EB0;
        v11._countAndFlagsBits = 0xD000000000000012;
        v12.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v12.value._object = (void *)0xEB00000000656C62;
        v13._countAndFlagsBits = 2037411651;
        v13._object = (void *)0xE400000000000000;
        v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v26);

        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

        v17 = swift_allocObject(&unk_1005EB790, 24, 7);
        swift_unknownObjectWeakInit(v17 + 16);
        v19 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14._countAndFlagsBits, v14._object, 0, 0, v16, 0, 0, 0, v18, 0, 0, 0, sub_10042C57C, v17);
        v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v21 = swift_allocObject(v20, 40, 7);
        *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v21 + 32) = v19;
        v25 = v21;
        specialized Array._endMutation()(v21);
        swift_unknownObjectRelease(v8);
        v22 = v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
        v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16);
        *(_QWORD *)v22 = v6;
        *(_QWORD *)(v22 + 8) = 0;
        *(_QWORD *)(v22 + 16) = v25;
        *(_BYTE *)(v22 + 24) = 0;

        swift_bridgeObjectRelease(v23);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10042C054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  NSString v15;
  id v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  Swift::String v26;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_targetView);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
    if (v4)
    {
      v24 = v3;
      objc_msgSend(v4, "locationInView:");
      v6 = v5;
      v7 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_delegate);
      if (!v7)
      {

        return;
      }
      v8 = v7;
      v9 = (id)_DocumentManagerBundle(v7);
      if (v9)
      {
        v10 = v9;
        v26._countAndFlagsBits = 0xD00000000000002ALL;
        v26._object = (void *)0x8000000100534ED0;
        v11._object = (void *)0x8000000100534EB0;
        v11._countAndFlagsBits = 0xD000000000000012;
        v12.value._countAndFlagsBits = 0x617A696C61636F4CLL;
        v12.value._object = (void *)0xEB00000000656C62;
        v13._countAndFlagsBits = 2037411651;
        v13._object = (void *)0xE400000000000000;
        v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v26);

        sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

        v17 = swift_allocObject(&unk_1005EB790, 24, 7);
        swift_unknownObjectWeakInit(v17 + 16);
        v19 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14._countAndFlagsBits, v14._object, 0, 0, v16, 0, 0, 0, v18, 0, 0, 0, sub_10042C57C, v17);
        v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v21 = swift_allocObject(v20, 40, 7);
        *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v21 + 32) = v19;
        v25 = v21;
        specialized Array._endMutation()(v21);
        swift_unknownObjectRelease(v8);
        v22 = v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
        v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16);
        *(_QWORD *)v22 = v6;
        *(_QWORD *)(v22 + 8) = 0;
        *(_QWORD *)(v22 + 16) = v25;
        *(_BYTE *)(v22 + 24) = 1;

        swift_bridgeObjectRelease(v23);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_10042C324()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCViewEditMenuInteraction();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCViewEditMenuInteraction()
{
  return objc_opt_self(_TtC5Files26DOCViewEditMenuInteraction);
}

uint64_t initializeWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationContext()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationContext;
}

uint64_t sub_10042C558()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10042C57C(uint64_t a1)
{
  uint64_t v1;

  sub_1001D2E80(a1, v1);
}

Class sub_10042C584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  Class result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  UIMenuElementSize preferredElementSize;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::OpaquePointer v21;
  id v22;
  _QWORD v23[4];
  _QWORD *v24;
  UIImage_optional v25;

  v1 = v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16);
  if (!v2)
  {
    sub_10042C054();
    v2 = *(_QWORD *)(v1 + 16);
    if (!v2)
      return 0;
  }
  v3 = *(_BYTE *)(v1 + 24);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v18 = v2 & 0xFFFFFFFFFFFFFF8;
    else
      v18 = v2;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v4)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease(v2);
    v14 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      goto LABEL_23;
LABEL_14:
    swift_bridgeObjectRetain(v14);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v15);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    preferredElementSize = v14;
LABEL_15:
    swift_bridgeObjectRelease(v14);
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v25.value.super.isa = 0;
    v25.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v25, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v21).super.super.isa;
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  if (!v4)
    goto LABEL_22;
LABEL_5:
  v24 = _swiftEmptyArrayStorage;
  result = (Class)specialized ContiguousArray.reserveCapacity(_:)(v4);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v2);
        v10 = v9;
        if ((v3 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        v9 = *(id *)(v2 + 8 * v6 + 32);
        v10 = v9;
        if ((v3 & 1) == 0)
        {
LABEL_12:
          v11 = v10;
          v12 = objc_msgSend(v11, "copy");
          _bridgeAnyObjectToAny(_:)(v23, v12);

          swift_unknownObjectRelease(v12);
          v13 = sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
          swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v13, 7);
          v10 = v22;
          objc_msgSend(v22, "setImage:", 0);

        }
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v7 = v24[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
      specialized ContiguousArray._endMutation()(v8);
      if (v4 == v6)
      {
        v14 = (uint64_t)v24;
        swift_bridgeObjectRelease(v2);
        if (!((unint64_t)v14 >> 62))
          goto LABEL_14;
LABEL_23:
        if (v14 < 0)
          v19 = v14;
        else
          v19 = v14 & 0xFFFFFFFFFFFFFF8;
        v20 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
        swift_bridgeObjectRetain(v14);
        preferredElementSize = _bridgeCocoaArray<A>(_:)(v19, v20);
        swift_bridgeObjectRelease(v14);
        goto LABEL_15;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10042C88C + 4 * byte_1004E8635[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10042C8C0 + 4 * byte_1004E8630[v4]))();
}

uint64_t sub_10042C8C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042C8C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10042C8D0);
  return result;
}

uint64_t sub_10042C8DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10042C8E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10042C8E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10042C8F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationStyle()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationStyle;
}

_QWORD *assignWithCopy for DOCViewEditMenuInteraction.Presentatable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[2];
  v4 = a1[2];
  a1[2] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.Presentatable()
{
  return &type metadata for DOCViewEditMenuInteraction.Presentatable;
}

unint64_t sub_10042C968()
{
  unint64_t result;

  result = qword_100655130;
  if (!qword_100655130)
  {
    result = swift_getWitnessTable(&unk_1004E8710, &type metadata for DOCViewEditMenuInteraction.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_100655130);
  }
  return result;
}

uint64_t sub_10042C9B0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  id v10;
  NSURL *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::Int v21;
  __n128 v22;
  char v23;
  uint64_t Strong;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSURL *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_allocWithZone((Class)NSURLComponents);
  URL._bridgeToObjectiveC()(v11);
  v13 = v12;
  v14 = objc_msgSend(v10, "initWithURL:resolvingAgainstBaseURL:", v12, 0);

  if (!v14)
  {
LABEL_8:
    v14 = objc_msgSend(a2, "options");
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 24);
    if (Strong)
    {
      v25 = Strong;
      v23 = sub_100209DE4(a1, v14, 1, 1, 1);
      swift_unknownObjectRelease(v25);

      return v23 & 1;
    }
LABEL_16:

    v23 = 0;
    return v23 & 1;
  }
  v15 = objc_msgSend(v14, "scheme");
  if (!v15)
  {
LABEL_7:

    goto LABEL_8;
  }
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  v21 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005BFC20, v20);
  v22 = swift_bridgeObjectRelease(v19);
  if (!v21)
  {
    v26 = objc_msgSend(a2, "options", v22.n128_f64[0]);
    v27 = swift_unknownObjectWeakLoadStrong(v3 + 24);
    if (v27)
    {
      v28 = v27;
      v23 = sub_100209DE4(a1, v26, 1, 1, 1);
      swift_unknownObjectRelease(v28);

      return v23 & 1;
    }

    goto LABEL_16;
  }
  if (v21 != 2)
  {
    if (v21 == 1)
    {
      static URLComponents._unconditionallyBridgeFromObjectiveC(_:)(v14, v22);
      v23 = sub_10042E14C(v9, a2);

      (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v7 + 8))(v9, v6);
      return v23 & 1;
    }
    goto LABEL_7;
  }
  v29 = swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (v29)
  {
    v31 = (void *)v29;
    URL._bridgeToObjectiveC()(v30);
    v33 = v32;
    objc_msgSend(v31, "showConnectToServer:", v32);

  }
  v23 = 1;
  return v23 & 1;
}

uint64_t sub_10042CC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = v4;
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[7] = v5;
  v3[8] = v6;
  return swift_task_switch(sub_10042CC8C, v5, v6);
}

uint64_t sub_10042CC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v15;

  v2 = URLQueryItem.value.getter(a1);
  if (!v3 || (v4 = v3, v5 = sub_1004BEB70(v2, v3), v7 = v6, swift_bridgeObjectRelease(v4), (v7 & 1) != 0))
  {
    v15 = swift_release(*(_QWORD *)(v1 + 48));
    return (*(uint64_t (**)(__n128))(v1 + 8))(v15);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 32);
    v10 = *(_QWORD *)(v1 + 24);
    v11 = static MainActor.shared.getter(v8);
    *(_QWORD *)(v1 + 72) = v11;
    v12 = (_QWORD *)swift_task_alloc(48);
    *(_QWORD *)(v1 + 80) = v12;
    v12[2] = v9;
    v12[3] = v5;
    v12[4] = v10;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 88) = v13;
    *v13 = v1;
    v13[1] = sub_10042CD9C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v13, v11, &protocol witness table for MainActor, 0xD000000000000018, 0x8000000100534F80, sub_1004302F0, v12, &type metadata for ()[8]);
  }
}

uint64_t sub_10042CD9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[7];
    v5 = v2[8];
    v6 = sub_10042CE44;
  }
  else
  {
    v7 = v2[10];
    swift_release(v2[9]);
    swift_task_dealloc(v7);
    v4 = v2[7];
    v5 = v2[8];
    v6 = sub_10042CE10;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10042CE10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042CE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10042CE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  double result;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v46 = a4;
  v48 = a3;
  v49 = a1;
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = sub_10006922C((uint64_t *)&unk_100655280);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v44 = (char *)Strong;
    v50 = swift_allocObject(&unk_1005EBB80, 24, 7);
    swift_weakInit(v50 + 16, a2);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v19(v16, v49, v11);
    v49 = v11;
    v20 = v6;
    v21 = v5;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v22(v10, v46, v21);
    v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v19(v45, (uint64_t)v16, v49);
    v23 = (uint64_t)v47;
    v22(v47, (uint64_t)v10, v21);
    v24 = *(unsigned __int8 *)(v12 + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = *(unsigned __int8 *)(v20 + 80);
    v27 = (v13 + v26 + v25) & ~v26;
    v28 = swift_allocObject(&unk_1005EBBA8, v27 + v7, v24 | v26 | 7);
    v29 = v48;
    *(_QWORD *)(v28 + 16) = v50;
    *(_QWORD *)(v28 + 24) = v29;
    v30 = v28 + v25;
    v31 = v21;
    v32 = v20;
    v33 = v49;
    v46 = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30, v16, v49);
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v28 + v27, v10, v31);
    v34 = v44;
    v35 = *(void **)&v44[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    v36 = v23;
    if (v35)
    {
      *(_QWORD *)&v44[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
      swift_retain_n(v50, 2);
      aBlock[4] = sub_1004303E0;
      v52 = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EBBC0;
      v37 = _Block_copy(aBlock);
      v38 = v52;
      swift_retain();
      objc_msgSend(v35, "dismissViewControllerAnimated:completion:", 1, v37, swift_release(v38).n128_f64[0]);
      v39 = v37;
      v36 = v23;
      _Block_release(v39);

      v34 = v35;
      v40 = (uint64_t)v45;
    }
    else
    {
      swift_retain_n(v50, 2);
      v40 = (uint64_t)v45;
      sub_10042D1B8(v41, v29, (uint64_t)v45, v23);
    }
    swift_release(v28);
    v42 = v50;
    swift_release(v50);

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v40, v33);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v31);
    *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  }
  return result;
}

double sub_10042D1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  id v29;
  id v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];

  v35 = a3;
  v36 = a4;
  v37 = a2;
  v38 = type metadata accessor for URLComponents(0);
  v5 = *(_QWORD *)(v38 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v38);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_100655280);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + 16;
  swift_beginAccess(a1 + 16, v40, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    v15 = Strong;
    v16 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 16);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
    v34 = v16;
    if (v16)
    {
      v33 = swift_allocObject(&unk_1005EBB80, 24, 7);
      v17 = v33 + 16;
      swift_beginAccess(v12, v39, 0, 0);
      v18 = swift_weakLoadStrong(v12);
      swift_weakInit(v17, v18);
      v19 = swift_release(v18);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v8, v19);
      v20 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v38);
      v21 = *(unsigned __int8 *)(v9 + 80);
      v22 = (v21 + 16) & ~v21;
      v23 = *(unsigned __int8 *)(v5 + 80);
      v24 = (v10 + v23 + v22) & ~v23;
      v25 = (v6 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
      v26 = swift_allocObject(&unk_1005EBBF8, v25 + 8, v21 | v23 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v26 + v22, v11, v8);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v26 + v24, v7, v20);
      v27 = v33;
      *(_QWORD *)(v26 + v25) = v33;
      *(_QWORD *)&v28 = swift_retain().n128_u64[0];
      v29 = v34;
      v30 = objc_msgSend(v34, "namedLocationResolver", v28);
      v31 = (_QWORD *)swift_allocObject(&unk_1005EBC20, 40, 7);
      v31[2] = v29;
      v31[3] = sub_100430514;
      v31[4] = v26;
      v32 = v29;
      swift_retain();
      sub_10036EE38(v37, (uint64_t)sub_10021C614, (uint64_t)v31);
      swift_release(v31);

      swift_release(v26);
      *(_QWORD *)&result = swift_release(v27).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10042D440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, unint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  __n128 v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t Strong;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];

  v72 = a4;
  v73 = a3;
  v6 = type metadata accessor for URLQueryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100655260);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v19;
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v16) == 1)
  {
    sub_10000CB4C((uint64_t)v15, &qword_100643470);
    v21 = sub_10042FF28();
    v22 = swift_allocError(&type metadata for DeepLinkComponents.DeepLinkError, v21, 0, 0);
    *v23 = 2;
    v74[0] = v22;
    v24 = sub_10006922C((uint64_t *)&unk_100655280);
    return CheckedContinuation.resume(throwing:)(v74, v24);
  }
  v70 = v12;
  v71 = v18;
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v18, v15, v16);
  v27 = URLComponents.queryItems.getter(v26);
  if (v27)
  {
    v29 = v27;
    v73 = v16;
    v30 = *(_QWORD *)(v27 + 16);
    if (v30)
    {
      v68 = v20;
      v69 = a2;
      v31 = v27 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v32 = *(_QWORD *)(v7 + 72);
      v33 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
      v34 = swift_bridgeObjectRetain(v27);
      while (1)
      {
        v35 = v33(v9, v31, v6, v34);
        v36 = URLQueryItem.name.getter(v35);
        v38 = v37;
        if (v36 == 0x656D616E656C6966 && v37 == 0xE900000000000073)
        {
          swift_bridgeObjectRelease(v29);
          v20 = v68;
          v44 = v72;
          v16 = v73;
          v42 = (uint64_t)v70;
          v45 = 0xE900000000000073;
          goto LABEL_16;
        }
        v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, 0x656D616E656C6966, 0xE900000000000073, 0);
        v40 = swift_bridgeObjectRelease(v38);
        if ((v39 & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v40);
        v31 += v32;
        if (!--v30)
        {
          v28 = swift_bridgeObjectRelease(v29);
          v41 = 1;
          v20 = v68;
          goto LABEL_13;
        }
      }
      v45 = v29;
      v20 = v68;
      v44 = v72;
      v16 = v73;
      v42 = (uint64_t)v70;
LABEL_16:
      v46 = swift_bridgeObjectRelease(v45);
      (*(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 32))(v42, v9, v6, v46);
      v41 = 0;
      v43 = v71;
    }
    else
    {
      v41 = 1;
LABEL_13:
      v16 = v73;
      v43 = v71;
      v44 = v72;
      v42 = (uint64_t)v70;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v42, v41, 1, v6, v28);
    v47 = swift_bridgeObjectRelease(v29);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v42, 1, v6, v47);
    if ((_DWORD)v48 == 1)
      goto LABEL_18;
    v53 = v42;
    v54 = URLQueryItem.value.getter(v48);
    v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v53, v6);
    if (!v56)
      goto LABEL_19;
    v57 = v44 + 16;
    v74[0] = v54;
    v74[1] = v56;
    v58 = sub_10008B9BC();
    v59 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(44, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v58);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v60);
    *(&v67 - 2) = (uint64_t)v43;
    v61 = sub_1004A9000((void (*)(__int128 *, __n128))sub_1004305C8, (uint64_t)(&v67 - 4), v59);
    swift_bridgeObjectRelease(v59);
    swift_beginAccess(v57, v74, 0, 0);
    Strong = swift_weakLoadStrong(v57);
    if (Strong)
    {
      v63 = Strong;
      v64 = swift_unknownObjectWeakLoadStrong(Strong + 24);
      if (v64)
      {
        v65 = v64;
        sub_10020B24C((uint64_t)v61);
        swift_release(v63);
        swift_bridgeObjectRelease(v61);
        swift_unknownObjectRelease(v65);
LABEL_27:
        v66 = sub_10006922C((uint64_t *)&unk_100655280);
        CheckedContinuation.resume(returning:)(v66, v66);
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v43, v16);
      }
      swift_release(v63);
    }
    swift_bridgeObjectRelease(v61);
    goto LABEL_27;
  }
  v42 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v70, 1, 1, v6);
  v43 = v71;
LABEL_18:
  sub_10000CB4C(v42, &qword_100655260);
LABEL_19:
  v49 = sub_10042FF28();
  v50 = swift_allocError(&type metadata for DeepLinkComponents.DeepLinkError, v49, 0, 0);
  *v51 = 3;
  v74[0] = v50;
  v52 = sub_10006922C((uint64_t *)&unk_100655280);
  CheckedContinuation.resume(throwing:)(v74, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v43, v16);
}

uint64_t sub_10042D94C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = static String._fromSubstring(_:)(*a1, a1[1], a1[2], a1[3]);
  v3 = v2;
  URL.appendingPathComponent(_:)(v1, v2);
  return swift_bridgeObjectRelease(v3);
}

void sub_10042D9A0(void *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  v8 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v11 = (void *)objc_opt_self(FPItemManager);
    v12 = a1;
    v13 = objc_msgSend(v11, "defaultManager");
    v14 = (_QWORD *)swift_allocObject(&unk_1005EBA18, 40, 7);
    v14[2] = v12;
    v14[3] = a3;
    v14[4] = a4;
    aBlock[4] = sub_10042FF98;
    v22 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100175118;
    aBlock[3] = &unk_1005EBA30;
    v15 = _Block_copy(aBlock);
    v16 = v22;
    v17 = v12;
    swift_retain();
    swift_release(v16);
    objc_msgSend(v13, "fetchURLForItem:completionHandler:", v17, v15);
    _Block_release(v15);

  }
  else
  {
    if (a2)
    {
      v18 = a2;
    }
    else
    {
      v19 = sub_10042FF28();
      v18 = swift_allocError(&type metadata for DeepLinkComponents.DeepLinkError, v19, 0, 0);
      *v20 = 0;
    }
    *v10 = v18;
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    swift_errorRetain(a2);
    a3(v10);
    sub_10000CB4C((uint64_t)v10, &qword_1006501D0);
  }
}

uint64_t sub_10042DB5C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void (*v46)(uint64_t *);
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *);
  uint64_t v60;
  uint64_t aBlock[5];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a4;
  v60 = a5;
  v54 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v54);
  v55 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v52 - v19;
  sub_1000271D4(a1, (uint64_t)v13, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v21 = sub_10000CB4C((uint64_t)v13, &qword_100643470);
    v22 = Logger.Application.unsafeMutableAddressor(v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v22, v58);
    v23 = a3;
    v24 = a2;
    swift_errorRetain(a2);
    v25 = v23;
    v26 = swift_errorRetain(a2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(32, -1);
      v30 = (_QWORD *)swift_slowAlloc(8, -1);
      v53 = swift_slowAlloc(64, -1);
      aBlock[0] = v53;
      *(_DWORD *)v29 = 136315650;
      v63 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100534F50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
      *(_WORD *)(v29 + 12) = 2112;
      v63 = (uint64_t)v25;
      v31 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
      *v30 = v25;

      *(_WORD *)(v29 + 22) = 2080;
      v63 = v24;
      swift_errorRetain(v24);
      v32 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v33 = String.init<A>(describing:)(&v63, v32);
      v35 = v34;
      v63 = sub_1000544FC(v33, v34, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: Failed to fetch URL for: %@ error: %s", (uint8_t *)v29, 0x20u);
      v36 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v30, 1, v36);
      swift_slowDealloc(v30, -1, -1);
      v37 = v53;
      swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    v46 = v59;
    v48 = v54;
    v47 = v55;
    v49 = v24;
    if (!v24)
    {
      v50 = sub_10042FF28();
      v49 = swift_allocError(&type metadata for DeepLinkComponents.DeepLinkError, v50, 0, 0);
      *v51 = 0;
    }
    *v47 = v49;
    swift_storeEnumTagMultiPayload(v47, v48, 1);
    swift_errorRetain(v24);
    v46(v47);
    return sub_10000CB4C((uint64_t)v47, &qword_1006501D0);
  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v20, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
    v39 = *(unsigned __int8 *)(v15 + 80);
    v40 = (v39 + 32) & ~v39;
    v41 = swift_allocObject(&unk_1005EBA68, v40 + v16, v39 | 7);
    v42 = v60;
    *(_QWORD *)(v41 + 16) = v59;
    *(_QWORD *)(v41 + 24) = v42;
    v38((char *)(v41 + v40), v17, v14);
    aBlock[4] = (uint64_t)sub_100430018;
    v62 = v41;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005EBA80;
    v43 = _Block_copy(aBlock);
    v44 = v62;
    swift_retain();
    swift_release(v44);
    DOCRunInMainThread(v43);
    _Block_release(v43);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

uint64_t sub_10042E090(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a3, v8);
  swift_storeEnumTagMultiPayload(v7, v5, 0);
  a1(v7);
  return sub_10000CB4C((uint64_t)v7, &qword_1006501D0);
}

uint64_t sub_10042E14C(void (*a1)(char *, uint64_t, uint64_t, uint64_t), void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  int v30;
  __n128 v31;
  uint64_t Strong;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  char *v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);

  v3 = v2;
  v6 = type metadata accessor for URLQueryItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C(&qword_100655260);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = URLComponents.queryItems.getter(v13);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
LABEL_15:
    v30 = 0;
    goto LABEL_16;
  }
  v16 = v14;
  v42 = a1;
  v17 = *(_QWORD *)(v14 + 16);
  if (v17)
  {
    v39 = v12;
    v40 = a2;
    v41 = v2;
    v18 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain(v14);
    while (1)
    {
      v21 = v20(v9, v18, v6);
      v22 = URLQueryItem.name.getter(v21);
      v24 = v23;
      if (v22 == 1851876211 && v23 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease(v16);
        v28 = 0xE400000000000000;
        goto LABEL_13;
      }
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 1851876211, 0xE400000000000000, 0);
      v26 = swift_bridgeObjectRelease(v24);
      if ((v25 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v26);
      v18 += v19;
      if (!--v17)
      {
        v15 = swift_bridgeObjectRelease(v16);
        v27 = 1;
        a2 = v40;
        v3 = v41;
        a1 = v42;
        v12 = v39;
        goto LABEL_14;
      }
    }
    v28 = v16;
LABEL_13:
    a1 = v42;
    v29 = swift_bridgeObjectRelease(v28);
    v12 = v39;
    (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 32))(v39, v9, v6, v29);
    v27 = 0;
    a2 = v40;
    v3 = v41;
  }
  else
  {
    v27 = 1;
    a1 = v42;
  }
LABEL_14:
  v30 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v12, v27, 1, v6, v15);
  v31 = swift_bridgeObjectRelease(v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v12, 1, v6, v31) == 1)
    goto LABEL_15;
LABEL_16:
  sub_10000CB4C((uint64_t)v12, &qword_100655260);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 24);
  if (Strong)
  {
    v33 = Strong;
    v34 = *(void **)(Strong + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    v35 = v34;
    swift_unknownObjectRelease(v33);
  }
  else
  {
    v34 = 0;
  }
  v36 = v34;
  v37 = sub_10042ECE0(a1, a2, v3, v30, v34);

  return v37 & 1;
}

void sub_10042E3FC(uint64_t a1, char a2, void *a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  if ((a2 & 1) != 0)
  {
    v4 = swift_allocObject(&unk_1005EBB30, 24, 7);
    *(_QWORD *)(v4 + 16) = a3;
    v8[4] = sub_100430604;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10004A82C;
    v8[3] = &unk_1005EBB48;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = a3;
    swift_release(v6);
    DOCRunInMainThread(v5);
    _Block_release(v5);
  }
}

void sub_10042E4A8(void *a1)
{
  char *v1;

  if (a1)
  {
    v1 = a1;
    sub_100321738(1, 0, 0, v1, v1);

  }
}

uint64_t sub_10042E4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  _QWORD *v12;

  v8[2] = a7;
  v8[3] = a8;
  v11 = type metadata accessor for MainActor(0);
  v8[4] = v11;
  v8[5] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_10065516C);
  v8[6] = v12;
  *v12 = v8;
  v12[1] = sub_10042E56C;
  return sub_10042CC18(a5, a6);
}

uint64_t sub_10042E56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10042E630;
  else
    v6 = sub_10042E5F4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10042E5F4()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042E630()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void (**)(uint64_t))(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_errorRetain(v1);
  v2(v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10042E690(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void *Strong;
  uint64_t v26;
  void (*v27)(uint64_t);
  void (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t);
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void (**v41)(uint64_t);
  id v42;
  __n128 v43;
  char *v44;
  void (*v45)(uint64_t);
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  id v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  void (*v62)(uint64_t);
  char v63[24];
  char v64[24];

  v61 = a8;
  v62 = a7;
  v59 = a4;
  v60 = a6;
  v58 = a5;
  LODWORD(v57) = a3;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - v15;
  v17 = sub_10006922C(&qword_1006501D0);
  __chkstk_darwin(v17);
  v19 = (unint64_t *)((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000271D4(a1, (uint64_t)v19, &qword_1006501D0);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    v20 = *v19;
    swift_errorRetain(*v19);
    v62(v20);
    swift_errorRelease(v20);
    return swift_errorRelease(v20);
  }
  v22 = (char)v57;
  v56 = v11;
  v23 = *(void (**)(char *, _QWORD *, uint64_t))(v11 + 32);
  v23(v16, v19, v10);
  v24 = a2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  v26 = v10;
  v28 = v61;
  v27 = v62;
  if (Strong)
  {
    v29 = Strong;
    if ((v22 & 1) != 0)
    {
      v30 = v56;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v13, v16, v26);
      v31 = *(unsigned __int8 *)(v30 + 80);
      v55 = v26;
      v32 = (v31 + 24) & ~v31;
      v54 = (v12 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      v53 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      v33 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
      v57 = v16;
      v34 = v28;
      v35 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
      v36 = swift_allocObject(&unk_1005EBAB8, v35 + 16, v31 | 7);
      *(_QWORD *)(v36 + 16) = v24;
      v37 = v13;
      v38 = v55;
      v23((char *)(v36 + v32), v37, v55);
      v40 = v58;
      v39 = v59;
      *(_QWORD *)(v36 + v54) = v59;
      *(_QWORD *)(v36 + v53) = v40;
      *(_QWORD *)(v36 + v33) = v60;
      v41 = (void (**)(uint64_t))(v36 + v35);
      *v41 = v62;
      v41[1] = v34;
      swift_retain();
      v42 = v39;
      swift_retain();
      swift_retain();
      v43 = swift_retain();
      v44 = v57;
      static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)(v57, 0, 1, 0, v29, sub_100430114, v36, v43);
      swift_release(v36);

      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v44, v38);
    }

  }
  v45 = v27;
  v46 = (unsigned __int8 *)(v58 + 16);
  v47 = (unsigned __int8 *)(v60 + 16);
  v48 = objc_msgSend(v59, "options");
  swift_beginAccess(v46, v64, 0, 0);
  v49 = *v46;
  swift_beginAccess(v47, v63, 0, 0);
  v50 = *v47;
  v51 = swift_unknownObjectWeakLoadStrong(v24 + 24);
  if (v51)
  {
    v52 = v51;
    sub_100209DE4((uint64_t)v16, v48, 0, v49, v50);
    swift_unknownObjectRelease(v52);
  }

  v45(0);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v16, v26);
}

void sub_10042E9E4(int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  _QWORD v30[2];
  int v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v35 = a7;
  v36 = a8;
  v33 = a5;
  v34 = a6;
  v32 = a4;
  v30[1] = a2;
  v31 = a1;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a3, v10, v13);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1005EBAE0, v20 + 16, v15 | 7);
  *(_BYTE *)(v21 + 16) = v31;
  *(_QWORD *)(v21 + 24) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v21 + v16, v14, v10);
  v23 = v32;
  v22 = v33;
  *(_QWORD *)(v21 + v17) = v32;
  *(_QWORD *)(v21 + v18) = v22;
  v24 = v35;
  *(_QWORD *)(v21 + v19) = v34;
  v25 = (_QWORD *)(v21 + v20);
  v26 = v36;
  *v25 = v24;
  v25[1] = v26;
  aBlock[4] = sub_10043025C;
  v38 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EBAF8;
  v27 = _Block_copy(aBlock);
  v28 = v38;
  swift_retain();
  v29 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release(v28);
  DOCRunInMainThread(v27);
  _Block_release(v27);
}

uint64_t sub_10042EB98(char a1, uint64_t a2, uint64_t a3, id a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD, uint64_t, uint64_t, id))
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  int v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  if ((a1 & 1) == 0)
  {
    v12 = a6 + 16;
    v13 = a5 + 16;
    v14 = objc_msgSend(a4, "options");
    swift_beginAccess(v13, v21, 0, 0);
    v15 = *(unsigned __int8 *)(a5 + 16);
    swift_beginAccess(v12, &v20, 0, 0);
    v16 = *(unsigned __int8 *)(a6 + 16);
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 24);
    if (Strong)
    {
      v18 = Strong;
      sub_100209DE4(a3, v14, 0, v15, v16);

      swift_unknownObjectRelease(v18);
    }
    else
    {

    }
  }
  return a7(0, a2, a3, a4);
}

uint64_t sub_10042EC94()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  sub_10008F5C0(v0 + 24);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for DeepLinkNavigator()
{
  return objc_opt_self(_TtC5Files17DeepLinkNavigator);
}

uint64_t sub_10042ECE0(void (*a1)(char *, uint64_t, uint64_t, uint64_t), void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, unint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, unint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  __n128 v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  void (**v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v99;
  __n128 v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, unint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  __n128 v121;
  __n128 v122;
  unsigned int (*v123)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(char *, unint64_t, uint64_t);
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  id v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  void *v158;
  id v159;
  id v160;
  uint64_t v161;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  id v172;
  void *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  int v177;
  void *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  void (*v192)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  _QWORD aBlock[5];
  uint64_t v199;

  v184 = a3;
  v178 = a2;
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v187 = (char *)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for URL(0);
  v193 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v179 = (char *)&v169 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URLComponents(0);
  v194 = *(_QWORD *)(v11 - 8);
  v195 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v169 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = v12;
  __chkstk_darwin(v14);
  v183 = (char *)&v169 - v15;
  v16 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v16);
  v182 = (uint64_t)&v169 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10006922C(&qword_100655260);
  __chkstk_darwin(v18);
  v174 = (char *)&v169 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v188 = (char *)&v169 - v21;
  __chkstk_darwin(v22);
  v185 = (char *)&v169 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v169 - v25;
  v27 = type metadata accessor for URLQueryItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  __chkstk_darwin(v27);
  v30 = (char *)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v169 - v32;
  __chkstk_darwin(v34);
  v196 = (char *)&v169 - v35;
  __chkstk_darwin(v36);
  v189 = (char *)&v169 - v37;
  __chkstk_darwin(v38);
  v171 = (char *)&v169 - v39;
  __chkstk_darwin(v40);
  v180 = (char *)&v169 - v41;
  __chkstk_darwin(v42);
  v181 = (char *)&v169 - v43;
  v44 = swift_allocObject(&unk_1005EB900, 32, 7);
  v177 = a4;
  *(_BYTE *)(v44 + 16) = a4;
  v190 = v44;
  *(_QWORD *)(v44 + 24) = a5;
  v173 = a5;
  v172 = a5;
  v192 = a1;
  v45 = ((uint64_t (*)(void))URLComponents.queryItems.getter)();
  v197 = v28;
  v191 = v13;
  if (v45)
  {
    v46 = v45;
    v175 = v26;
    v47 = *(_QWORD *)(v45 + 16);
    if (v47)
    {
      v48 = v45 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v49 = *(_QWORD *)(v28 + 72);
      v50 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v28 + 16);
      v170 = v45;
      swift_bridgeObjectRetain(v45);
      while (1)
      {
        v51 = v50(v30, v48, v27);
        v52 = URLQueryItem.name.getter(v51);
        v54 = v53;
        if (v52 == 0x6E6F697461636F6CLL && v53 == 0xE800000000000000)
        {
          v46 = v170;
          swift_bridgeObjectRelease(v170);
          v59 = 0xE800000000000000;
          goto LABEL_13;
        }
        v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, 0x6E6F697461636F6CLL, 0xE800000000000000, 0);
        v56 = swift_bridgeObjectRelease(v54);
        if ((v55 & 1) != 0)
          break;
        v28 = v197;
        (*(void (**)(char *, uint64_t, __n128))(v197 + 8))(v30, v27, v56);
        v48 += v49;
        if (!--v47)
        {
          v46 = v170;
          swift_bridgeObjectRelease(v170);
          v13 = v191;
          goto LABEL_9;
        }
      }
      v46 = v170;
      v59 = v170;
      v28 = v197;
LABEL_13:
      v60 = swift_bridgeObjectRelease(v59);
      v26 = v175;
      (*(void (**)(char *, char *, uint64_t, __n128))(v28 + 32))(v175, v30, v27, v60);
      v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v57(v26, 0, 1, v27);
      v13 = v191;
    }
    else
    {
LABEL_9:
      v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v26 = v175;
      v57(v175, 1, 1, v27);
    }
    v58 = v192;
    v61 = swift_bridgeObjectRelease(v46);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v28 + 48))(v26, 1, v27, v61) != 1)
    {
      v196 = *(char **)(v28 + 32);
      v78 = v181;
      ((void (*)(char *, char *, uint64_t))v196)(v181, v26, v27);
      v79 = type metadata accessor for TaskPriority(0);
      v80 = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v182, 1, 1, v79);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v180, v78, v27);
      v81 = v194;
      (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v194 + 16))(v183, v58, v195);
      type metadata accessor for MainActor(0);
      v82 = v28;
      v83 = v184;
      swift_retain();
      v84 = v190;
      swift_retain();
      v86 = static MainActor.shared.getter(v85);
      v87 = *(unsigned __int8 *)(v82 + 80);
      v88 = (v87 + 40) & ~v87;
      v89 = *(unsigned __int8 *)(v81 + 80);
      v90 = (v29 + v89 + v88) & ~v89;
      v91 = (v176 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
      v92 = (char *)swift_allocObject(&unk_1005EB9F0, v91 + 16, v87 | v89 | 7);
      *((_QWORD *)v92 + 2) = v86;
      *((_QWORD *)v92 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v92 + 4) = v83;
      ((void (*)(char *, char *, uint64_t))v196)(&v92[v88], v180, v27);
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v92[v90], v183, v195);
      v93 = (void (**)(uint64_t))&v92[v91];
      *v93 = sub_10042FCBC;
      v93[1] = (void (*)(uint64_t))v84;
      v94 = sub_100174E78(v182, (uint64_t)&unk_100655270, (uint64_t)v92);
      swift_release(v94);
      (*(void (**)(char *, uint64_t))(v197 + 8))(v181, v27);
      v95 = v84;
      goto LABEL_70;
    }
  }
  else
  {
    v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v57(v26, 1, 1, v27);
    v58 = v192;
  }
  sub_10000CB4C((uint64_t)v26, &qword_100655260);
  v62 = v195;
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v194 + 16))(v13, v58, v195);
  v63 = URLComponents.scheme.setter(1701603686, 0xE400000000000000);
  v64 = URLComponents.queryItems.getter(v63);
  v192 = v57;
  if (!v64)
  {
    v96 = (uint64_t)v185;
    v57(v185, 1, 1, v27);
LABEL_30:
    sub_10000CB4C(v96, &qword_100655260);
    LODWORD(v185) = 0;
    goto LABEL_32;
  }
  v66 = v64;
  v67 = *(_QWORD *)(v64 + 16);
  if (v67)
  {
    v68 = v28;
    v69 = v64 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v70 = *(_QWORD *)(v68 + 72);
    v71 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v68 + 16);
    swift_bridgeObjectRetain(v64);
    while (1)
    {
      v72 = v71(v33, v69, v27);
      v73 = URLQueryItem.name.getter(v72);
      v75 = v74;
      if (v73 == 1852141679 && v74 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease(v66);
        v97 = 0xE400000000000000;
        goto LABEL_28;
      }
      v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, 1852141679, 0xE400000000000000, 0);
      v77 = swift_bridgeObjectRelease(v75);
      if ((v76 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t, __n128))(v197 + 8))(v33, v27, v77);
      v69 += v70;
      if (!--v67)
      {
        v65 = swift_bridgeObjectRelease(v66);
        v62 = v195;
        v13 = v191;
        v28 = v197;
        goto LABEL_25;
      }
    }
    v97 = v66;
LABEL_28:
    v98 = v192;
    v99 = swift_bridgeObjectRelease(v97);
    v28 = v197;
    v96 = (uint64_t)v185;
    (*(void (**)(char *, char *, uint64_t, __n128))(v197 + 32))(v185, v33, v27, v99);
    v62 = v195;
    v13 = v191;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v98)(v96, 0, 1, v27, v100);
  }
  else
  {
LABEL_25:
    v96 = (uint64_t)v185;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v192)(v185, 1, 1, v27, v65);
  }
  v101 = swift_bridgeObjectRelease(v66);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v28 + 48))(v96, 1, v27, v101) == 1)
    goto LABEL_30;
  sub_10000CB4C(v96, &qword_100655260);
  URLComponents.queryItems.setter(0);
  LODWORD(v185) = 1;
LABEL_32:
  v102 = (uint64_t)v188;
  v103 = swift_allocObject(&unk_1005EB928, 17, 7);
  *(_BYTE *)(v103 + 16) = 1;
  v95 = swift_allocObject(&unk_1005EB928, 17, 7);
  *(_BYTE *)(v95 + 16) = 1;
  v104 = URLComponents.queryItems.getter(v95);
  if (!v104)
  {
    v192((char *)v102, 1, 1, v27);
    v118 = (uint64_t)v187;
LABEL_47:
    v124 = sub_10000CB4C(v102, &qword_100655260);
    v125 = v190;
    v126 = v186;
    goto LABEL_65;
  }
  v105 = v104;
  v106 = *(_QWORD *)(v104 + 16);
  if (v106)
  {
    v182 = v103;
    v183 = (char *)v95;
    v107 = v104 + ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80));
    v108 = *(_QWORD *)(v197 + 72);
    v109 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v197 + 16);
    swift_bridgeObjectRetain(v104);
    v110 = v196;
    while (1)
    {
      v111 = v109(v110, v107, v27);
      v112 = URLQueryItem.name.getter(v111);
      v114 = v113;
      if (v112 == 0x6C6165766572 && v113 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease(v105);
        v120 = 0xE600000000000000;
        goto LABEL_44;
      }
      v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v112, v113, 0x6C6165766572, 0xE600000000000000, 0);
      v116 = swift_bridgeObjectRelease(v114);
      if ((v115 & 1) != 0)
        break;
      v110 = v196;
      (*(void (**)(char *, uint64_t, __n128))(v197 + 8))(v196, v27, v116);
      v107 += v108;
      if (!--v106)
      {
        swift_bridgeObjectRelease(v105);
        v117 = 1;
        v62 = v195;
        v13 = v191;
        v118 = (uint64_t)v187;
        v102 = (uint64_t)v188;
        v119 = v197;
        goto LABEL_45;
      }
    }
    v120 = v105;
LABEL_44:
    v62 = v195;
    v118 = (uint64_t)v187;
    v121 = swift_bridgeObjectRelease(v120);
    v119 = v197;
    v102 = (uint64_t)v188;
    (*(void (**)(char *, char *, uint64_t, __n128))(v197 + 32))(v188, v196, v27, v121);
    v117 = 0;
    v13 = v191;
LABEL_45:
    v95 = (uint64_t)v183;
    v103 = v182;
  }
  else
  {
    v117 = 1;
    v118 = (uint64_t)v187;
    v119 = v197;
  }
  v192((char *)v102, v117, 1, v27);
  v122 = swift_bridgeObjectRelease(v105);
  v123 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v119 + 48);
  if (v123(v102, 1, v27, v122) == 1)
    goto LABEL_47;
  v127 = v119;
  v196 = (char *)v123;
  v128 = sub_10000CB4C(v102, &qword_100655260);
  *(_BYTE *)(v103 + 16) = 0;
  v129 = URLComponents.queryItems.getter(v128);
  if (!v129)
  {
    v145 = (uint64_t)v174;
    v192(v174, 1, 1, v27);
LABEL_63:
    sub_10000CB4C(v145, &qword_100655260);
    goto LABEL_64;
  }
  v130 = v129;
  v131 = *(_QWORD *)(v129 + 16);
  if (v131)
  {
    v182 = v103;
    v183 = (char *)v95;
    v132 = 0xEC00000073746E65;
    v133 = v129 + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80));
    v134 = *(_QWORD *)(v119 + 72);
    v135 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v119 + 16);
    swift_bridgeObjectRetain(v129);
    v136 = v189;
    while (1)
    {
      v137 = v135(v136, v133, v27);
      v138 = URLQueryItem.name.getter(v137);
      v140 = v139;
      if (v138 == 0x746E6F63776F6873 && v139 == 0xEC00000073746E65)
      {
        swift_bridgeObjectRelease(v130);
        goto LABEL_60;
      }
      v141 = _stringCompareWithSmolCheck(_:_:expecting:)(v138, v139, 0x746E6F63776F6873, 0xEC00000073746E65, 0);
      v142 = swift_bridgeObjectRelease(v140);
      if ((v141 & 1) != 0)
        break;
      v136 = v189;
      (*(void (**)(char *, uint64_t, __n128))(v197 + 8))(v189, v27, v142);
      v133 += v134;
      if (!--v131)
      {
        swift_bridgeObjectRelease(v130);
        v143 = 1;
        v62 = v195;
        v13 = v191;
        v144 = v197;
        v145 = (uint64_t)v174;
        v95 = (uint64_t)v183;
        goto LABEL_61;
      }
    }
    v132 = v130;
    v136 = v189;
LABEL_60:
    v95 = (uint64_t)v183;
    v146 = swift_bridgeObjectRelease(v132);
    v144 = v197;
    v145 = (uint64_t)v174;
    (*(void (**)(char *, char *, uint64_t, __n128))(v197 + 32))(v174, v136, v27, v146);
    v143 = 0;
    v62 = v195;
    v13 = v191;
LABEL_61:
    v103 = v182;
  }
  else
  {
    v143 = 1;
    v145 = (uint64_t)v174;
    v144 = v127;
  }
  v192((char *)v145, v143, 1, v27);
  v147 = swift_bridgeObjectRelease(v130);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v196)(v145, 1, v27, v147) == 1)
    goto LABEL_63;
  v163 = v171;
  v164 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v144 + 32))(v171, v145, v27);
  v165 = URLQueryItem.value.getter(v164);
  if (v166)
  {
    v167 = v166;
    if (v165 == 0x65736C6166 && v166 == 0xE500000000000000)
    {
      (*(void (**)(char *, uint64_t))(v144 + 8))(v163, v27);
      swift_bridgeObjectRelease(0xE500000000000000);
    }
    else
    {
      v168 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, v166, 0x65736C6166, 0xE500000000000000, 0);
      (*(void (**)(char *, uint64_t))(v144 + 8))(v163, v27);
      swift_bridgeObjectRelease(v167);
      if ((v168 & 1) == 0)
        goto LABEL_64;
    }
    *(_BYTE *)(v95 + 16) = 0;
    goto LABEL_64;
  }
  (*(void (**)(char *, uint64_t))(v144 + 8))(v163, v27);
LABEL_64:
  v124 = URLComponents.queryItems.setter(0);
  v125 = v190;
  v126 = v186;
  v118 = (uint64_t)v187;
LABEL_65:
  v148 = v193;
  URLComponents.url.getter(v124);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v118, 1, v126) == 1)
  {
    sub_10000CB4C(v118, &qword_100643470);
    if ((v177 & 1) != 0)
    {
      v149 = swift_allocObject(&unk_1005EB950, 24, 7);
      *(_QWORD *)(v149 + 16) = v173;
      aBlock[4] = sub_10042FCD8;
      v199 = v149;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005EB968;
      v150 = _Block_copy(aBlock);
      v151 = v199;
      v152 = v172;
      swift_release(v151);
      DOCRunInMainThread(v150);
      _Block_release(v150);
    }
    (*(void (**)(char *, uint64_t))(v194 + 8))(v13, v62);
    swift_release(v103);
    swift_release(v125);
    v80 = 0;
  }
  else
  {
    v153 = v179;
    (*(void (**)(char *, uint64_t, uint64_t))(v148 + 32))(v179, v118, v126);
    v154 = swift_allocObject(&unk_1005EB9A0, 72, 7);
    *(_QWORD *)(v154 + 16) = v184;
    *(_BYTE *)(v154 + 24) = (_BYTE)v185;
    v155 = v103;
    v156 = v95;
    v157 = v178;
    *(_QWORD *)(v154 + 32) = v178;
    *(_QWORD *)(v154 + 40) = v155;
    *(_QWORD *)(v154 + 48) = v156;
    *(_QWORD *)(v154 + 56) = sub_10042FCBC;
    *(_QWORD *)(v154 + 64) = v125;
    v158 = (void *)objc_opt_self(FPItemManager);
    swift_retain();
    swift_retain();
    v159 = v157;
    v95 = v156;
    swift_retain();
    v160 = objc_msgSend(v158, "defaultManager", swift_retain().n128_f64[0]);
    v161 = swift_allocObject(&unk_1005EB9C8, 32, 7);
    *(_QWORD *)(v161 + 16) = sub_10042FD24;
    *(_QWORD *)(v161 + 24) = v154;
    swift_retain();
    FPItemManager.doc_fetchItem(for:completionHandler:)(v153, sub_10042FD60, v161);
    swift_release(v161);

    swift_release(v154);
    (*(void (**)(char *, uint64_t))(v193 + 8))(v153, v126);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v13, v195);
    swift_release(v155);
    swift_release(v125);
    v80 = 1;
  }
LABEL_70:
  swift_release(v95);
  return v80;
}

uint64_t sub_10042FC98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10042FCBC(uint64_t a1)
{
  uint64_t v1;

  sub_10042E3FC(a1, *(_BYTE *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10042FCC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_10042FCD8()
{
  uint64_t v0;

  sub_10042E4A8(*(void **)(v0 + 16));
}

uint64_t sub_10042FCE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10042FD24(uint64_t a1)
{
  uint64_t v1;

  return sub_10042E690(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t))(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

uint64_t sub_10042FD3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10042FD60(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10042D9A0(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10042FD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for URLQueryItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v10);
}

uint64_t sub_10042FE44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for URLComponents(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + v8;
  v14 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  v16 = v14[1];
  v17 = (_QWORD *)swift_task_alloc(dword_10065526C);
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1000EA854;
  return sub_10042E4EC(a1, v9, v10, v11, v12, v13, v15, v16);
}

unint64_t sub_10042FF28()
{
  unint64_t result;

  result = qword_100655278;
  if (!qword_100655278)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeepLinkComponents.DeepLinkError, &type metadata for DeepLinkComponents.DeepLinkError);
    atomic_store(result, (unint64_t *)&qword_100655278);
  }
  return result;
}

uint64_t sub_10042FF6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10042FF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10042DB5C(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t *))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10042FFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100430018()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_10042E090(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_100430048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

void sub_100430114(int a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10042E9E4(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100430190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

uint64_t sub_10043025C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10042EB98(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(id *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(_QWORD, uint64_t, uint64_t, id))(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004302CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1004302F0(uint64_t a1)
{
  uint64_t *v1;

  return sub_10042CE8C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004302FC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100430320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = sub_10006922C((uint64_t *)&unk_100655280);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  v12 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

double sub_1004303E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_10006922C((uint64_t *)&unk_100655280) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URLComponents(0) - 8) + 80);
  return sub_10042D1B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_100430448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_10006922C((uint64_t *)&unk_100655280);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URLComponents(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v3 | v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_100430514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_10006922C((uint64_t *)&unk_100655280) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for URLComponents(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_10042D440(a1, v1 + v4, v1 + v7, *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100430594()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004305C8(_QWORD *a1)
{
  return sub_10042D94C(a1);
}

void sub_10043060C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  swift_retain();
  v9 = a3;
  v6(v8, a3);
  swift_release(v5);
  swift_bridgeObjectRelease(v8);

}

void sub_1004306A4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  void **v15;
  void *v16;
  id v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  _QWORD aBlock[5];
  _QWORD *v24;
  char v25[24];

  v9 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v10 + 32) = a1;
  aBlock[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)FPDownloadOperation);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v12 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "initWithItems:", isa, swift_bridgeObjectRelease(aBlock[0]).n128_f64[0]);

  objc_msgSend(v14, "setQualityOfService:", 25);
  v15 = (void **)(v4 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
  swift_beginAccess(v15, v25, 1, 0);
  v16 = *v15;
  *v15 = v12;
  v17 = v12;
  sub_10010EDA8(v16);

  v18 = (_QWORD *)swift_allocObject(&unk_1005EBD38, 40, 7);
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  aBlock[4] = sub_100432CE4;
  v24 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10043060C;
  aBlock[3] = &unk_1005EBD50;
  v19 = _Block_copy(aBlock);
  v20 = v24;
  v21 = a2;
  swift_retain();
  swift_release(v20);
  objc_msgSend(v14, "setDownloadCompletionBlock:", v19);
  _Block_release(v19);
  v22 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  objc_msgSend(v22, "scheduleAction:", v14);

}

void sub_1004308C8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD, __n128), uint64_t a5)
{
  void *v8;
  id *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  id v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __int128 v47;
  void **aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  void *v53;
  _QWORD *v54;

  if (!a2)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v40 = a1;
      else
        v40 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v40))
      {
LABEL_7:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v24 = *(id *)(a1 + 32);
        }
        v25 = v24;
        swift_bridgeObjectRelease(a1);
        v26 = (_QWORD *)swift_allocObject(&unk_1005EBD88, 40, 7);
        v26[2] = a4;
        v26[3] = a5;
        v26[4] = v25;
        v53 = sub_100093E6C;
        v54 = v26;
        aBlock = _NSConcreteStackBlock;
        v50 = 1107296256;
        v51 = sub_10004A82C;
        v52 = &unk_1005EBDA0;
        v27 = _Block_copy(&aBlock);
        v28 = v54;
        swift_retain();
        v29 = v25;
        swift_release(v28);
        DOCRunInMainThread(v27);
        _Block_release(v27);

        return;
      }
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v23)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(a1);
    v42 = *(id *)DOCLog.UI.unsafeMutableAddressor(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = sub_10006922C((uint64_t *)&unk_100644560);
    v45 = swift_allocObject(v44, 72, 7);
    *(_OWORD *)(v45 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v45 + 56) = &type metadata for String;
    *(_QWORD *)(v45 + 64) = sub_10006A638();
    *(_QWORD *)(v45 + 32) = 0xD000000000000035;
    *(_QWORD *)(v45 + 40) = 0x8000000100534FE0;
    os_log(_:dso:log:type:_:)("%@: Download operation did not return any new item", 50, 2, &_mh_execute_header, v42, v43, v45);

    v46 = swift_bridgeObjectRelease(v45);
    a4(0, v46);
    return;
  }
  v8 = (void *)_convertErrorToNSError(_:)(a2);
  v9 = (id *)DOCLog.UI.unsafeMutableAddressor(v8);
  v10 = *v9;
  v11 = static os_log_type_t.error.getter(v10);
  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v13 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v13 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v13 + 32) = v8;
  v14 = v8;
  os_log(_:dso:log:type:_:)("Got a nil item from createDOCItemBookmark while attempting to access a file. %@", 79, 2, &_mh_execute_header, v10, v11, v13);

  v15 = objc_msgSend(v14, "domain", swift_bridgeObjectRelease(v13).n128_f64[0]);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
  v21 = v19;
  if (v16 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease_n(v18, 2);
  }
  else
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v21);
    if ((v30 & 1) == 0)
    {
LABEL_14:
      v35 = swift_allocObject(&unk_1005EBDD8, 32, 7);
      *(_QWORD *)(v35 + 16) = v14;
      *(_QWORD *)(v35 + 24) = a3;
      v53 = sub_10034757C;
      v54 = (_QWORD *)v35;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_10004A82C;
      v52 = &unk_1005EBDF0;
      v36 = _Block_copy(&aBlock);
      v37 = v54;
      v38 = v14;
      v39 = a3;
      swift_release(v37);
      DOCRunInMainThread(v36);
      _Block_release(v36);
      goto LABEL_15;
    }
  }
  if (objc_msgSend(v14, "code", 1, 2) != (id)3072)
    goto LABEL_14;
  v31 = *v9;
  v32 = static os_log_type_t.error.getter(v31);
  v33 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v33 + 16) = v47;
  *(_QWORD *)(v33 + 56) = &type metadata for String;
  *(_QWORD *)(v33 + 64) = sub_10006A638();
  *(_QWORD *)(v33 + 32) = 0xD000000000000035;
  *(_QWORD *)(v33 + 40) = 0x8000000100534FE0;
  os_log(_:dso:log:type:_:)("%@: Download operation canceled", 31, 2, &_mh_execute_header, v31, v32, v33);

  v34 = swift_bridgeObjectRelease(v33);
LABEL_15:
  a4(0, v34);

}

void sub_100430D88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  id *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void **v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  id v38;
  unsigned int v39;
  char *v40;
  _QWORD aBlock[5];
  uint64_t v42;
  char v43[24];
  char v44[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v44, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v40 = (char *)Strong;
    v8 = (id *)DOCLog.UI.unsafeMutableAddressor(Strong);
    v9 = *v8;
    v10 = static os_log_type_t.default.getter(v9);
    v11 = sub_10006922C((uint64_t *)&unk_100644560);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004D9670;
    v13 = objc_msgSend(a1, "displayName");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v12 + 56) = &type metadata for String;
    v17 = sub_10006A638();
    *(_QWORD *)(v12 + 64) = v17;
    *(_QWORD *)(v12 + 32) = v14;
    *(_QWORD *)(v12 + 40) = v16;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] notifying Delegate for %@.", 46, 2, &_mh_execute_header, v9, v10, v12);

    swift_bridgeObjectRelease(v12);
    if ((*(_BYTE *)(a3 + 40) & 1) == 0)
    {
      v18 = (void **)&v40[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess(&v40[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v43, 1, 0);
      v19 = *v18;
      *v18 = a1;
      v20 = a1;
      sub_1000AE638(v19);

      v21 = *v8;
      v39 = static os_log_type_t.default.getter(v21);
      v22 = swift_allocObject(v11, 72, 7);
      *(_OWORD *)(v22 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v22 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      *(_QWORD *)(v22 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      *(_QWORD *)(v22 + 32) = v20;
      v23 = v20;
      os_log(_:dso:log:type:_:)("[Interaction] Keeping track of last opened item in 'prepareItemAndOpenIfNeeded()': %@", 85, 2, &_mh_execute_header, v21, v39, v22);

      swift_bridgeObjectRelease(v22);
    }
    v24 = *v8;
    v25 = static os_log_type_t.default.getter(v24);
    v26 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
    v27 = objc_msgSend(a1, "displayName");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    *(_QWORD *)(v26 + 56) = &type metadata for String;
    *(_QWORD *)(v26 + 64) = v17;
    *(_QWORD *)(v26 + 32) = v28;
    *(_QWORD *)(v26 + 40) = v30;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Fetching URL for item %@.", 45, 2, &_mh_execute_header, v24, v25, v26);

    swift_bridgeObjectRelease(v26);
    v31 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v32 = swift_allocObject(&unk_1005EBC48, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    v33 = swift_allocObject(&unk_1005EBE28, 104, 7);
    *(_QWORD *)(v33 + 16) = v32;
    *(_QWORD *)(v33 + 24) = a1;
    v34 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v33 + 80) = v34;
    *(_QWORD *)(v33 + 96) = *(_QWORD *)(a3 + 64);
    v35 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v33 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v33 + 48) = v35;
    aBlock[4] = sub_100432DAC;
    v42 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100175118;
    aBlock[3] = &unk_1005EBE40;
    v36 = _Block_copy(aBlock);
    v37 = v42;
    v38 = a1;
    sub_1001CF3C8((_QWORD *)a3);
    swift_release(v37);
    objc_msgSend(v31, "fetchURLForItem:completionHandler:", v38, v36);
    _Block_release(v36);

  }
}

void sub_100431160(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *Strong;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v9 = sub_10006922C(&qword_100643470);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a3 + 16;
  v14 = swift_allocObject(&unk_1005EBC48, 24, 7);
  swift_beginAccess(v13, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v13, v15);
  swift_unknownObjectWeakInit(v14 + 16);

  sub_1002320B8(a1, (uint64_t)v12);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_1005EBE78, v21 + 72, v17 | 7);
  sub_100070EDC((uint64_t)v12, v22 + v18, &qword_100643470);
  *(_QWORD *)(v22 + v19) = a4;
  *(_QWORD *)(v22 + v20) = v14;
  v23 = v22 + v21;
  v24 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v23 + 48) = v24;
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(a5 + 64);
  v25 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)v23 = *(_OWORD *)a5;
  *(_OWORD *)(v23 + 16) = v25;
  aBlock[4] = sub_100432EC0;
  v31 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EBE90;
  v26 = _Block_copy(aBlock);
  v27 = v31;
  v28 = a4;
  sub_1001CF3C8((_QWORD *)a5);
  swift_release(v27);
  DOCRunInMainThread(v26);
  _Block_release(v26);
}

void sub_100431328(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t);
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  void **v32;
  void *v33;
  _BYTE v34[24];
  id v35[3];

  v8 = type metadata accessor for URL(0);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1, 1, v8);
  if ((_DWORD)v9 == 1 && (v9 = (uint64_t)objc_msgSend(a2, "doc_isCollaborationInvitation"), (v9 & 1) == 0))
  {
    v20 = a3 + 16;
    v21 = *(id *)DOCLog.UI.unsafeMutableAddressor(v9);
    v22 = static os_log_type_t.error.getter(v21);
    v23 = sub_10006922C((uint64_t *)&unk_100644560);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1004D9670;
    v25 = objc_msgSend(a2, "displayName");
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 64) = sub_10006A638();
    *(_QWORD *)(v24 + 32) = v26;
    *(_QWORD *)(v24 + 40) = v28;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction]  Got a nil url returned from fetchURL for %@, clearing lastOpenedItem", 89, 2, &_mh_execute_header, v21, v22, v24);

    swift_bridgeObjectRelease(v24);
    swift_beginAccess(v20, v35, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v20, v29);
    if (Strong)
    {
      v31 = (void *)Strong;
      v32 = (void **)(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
      swift_beginAccess(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, v34, 1, 0);
      v33 = *v32;
      *v32 = 0;
      sub_1000AE638(v33);

    }
  }
  else
  {
    v10 = *(uint64_t (**)(void *, uint64_t))(a4 + 24);
    if (v10)
      v9 = v10(a2, a1);
    v11 = *(_BYTE *)(a4 + 40);
    v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(v9);
    v13 = static os_log_type_t.default.getter(v12);
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
    v16 = objc_msgSend(a2, "displayName");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    *(_QWORD *)(v15 + 56) = &type metadata for String;
    *(_QWORD *)(v15 + 64) = sub_10006A638();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    if ((v11 & 1) != 0)
    {
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Did commit Preview of %@.", 45, 2, &_mh_execute_header, v12, v13, v15);

      swift_bridgeObjectRelease(v15);
      sub_100070EDC(a4, (uint64_t)v34, (uint64_t *)&unk_100648470);
      sub_100070EDC((uint64_t)v34, (uint64_t)v35, (uint64_t *)&unk_100648470);
      if (v35[0])
        objc_msgSend(v35[0], "didCommitPreviewOf:", a2);
    }
    else
    {
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Reporting Selection of %@ to actionReportingDelegate.", 73, 2, &_mh_execute_header, v12, v13, v15);

      swift_bridgeObjectRelease(v15);
      sub_100070EDC(a4, (uint64_t)v34, (uint64_t *)&unk_100648470);
      sub_100070EDC((uint64_t)v34, (uint64_t)v35, (uint64_t *)&unk_100648470);
      if (v35[0])
        objc_msgSend(v35[0], "didSelectItem:atParentLocation:wasAlreadySelected:onlyRevealIfColumn:", a2, *(_QWORD *)(a4 + 48), *(unsigned __int8 *)(a4 + 56), 0);
    }
  }
}

void sub_100431674(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (a1)
    {
      v7 = a1;
      sub_100432B04(v7);

      v6 = v7;
    }

  }
}

void sub_1004316DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  _BYTE v22[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11, v12);
  if (Strong)
  {
    v14 = Strong;
    if (a1)
    {
      v15 = *(void **)(a3 + 64);
      v16 = swift_allocObject(&unk_1005EBC48, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16);
      v17 = swift_allocObject(&unk_1005EBD10, 120, 7);
      *(_QWORD *)(v17 + 16) = a4;
      *(_QWORD *)(v17 + 24) = v16;
      v18 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v17 + 64) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v17 + 80) = v18;
      v19 = *(_QWORD *)(a3 + 64);
      v20 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v17 + 32) = *(_OWORD *)a3;
      *(_OWORD *)(v17 + 48) = v20;
      *(_QWORD *)(v17 + 96) = v19;
      *(_QWORD *)(v17 + 104) = a5;
      *(_QWORD *)(v17 + 112) = a6;
      v21 = a1;
      swift_unknownObjectRetain(a4);
      swift_retain();
      sub_1001CF3C8((_QWORD *)a3);
      swift_retain();
      sub_1004306A4(v21, v15, (uint64_t)sub_100432CA8, v17);

      swift_release(v16);
      swift_release(v17);
    }
    else
    {

    }
  }
}

void sub_10043181C(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id, __n128), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  void **v29;
  void *v30;
  id v31;
  id v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  void (*v43)(void *);
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void **v75;
  void *v76;
  id v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  __n128 v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(id, __n128);
  __int128 v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  char v98[24];
  uint64_t v99;
  _BYTE v100[24];
  uint64_t v101;
  _BYTE v102[16];
  id v103;
  char v104[32];

  v90 = a6;
  v91 = a5;
  v89 = a4;
  v96 = a3;
  v8 = type metadata accessor for Logger(0);
  v94 = *(_QWORD *)(v8 - 8);
  v95 = v8;
  v9 = __chkstk_darwin(v8);
  v93 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v12 = *v11;
  v13 = static os_log_type_t.default.getter(v12);
  v14 = sub_10006922C((uint64_t *)&unk_100644560);
  v15 = swift_allocObject(v14, 72, 7);
  v92 = xmmword_1004D9670;
  *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
  v97 = a2;
  v16 = objc_msgSend(a2, "displayName");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v20 = sub_10006A638();
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;

  swift_bridgeObjectRelease(v15);
  if (!a1)
  {
    v45 = *v11;
    v46 = static os_log_type_t.error.getter(v45);
    v47 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v47 + 16) = v92;
    v48 = objc_msgSend(v97, "displayName");
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *(_QWORD *)(v47 + 56) = &type metadata for String;
    *(_QWORD *)(v47 + 64) = v20;
    *(_QWORD *)(v47 + 32) = v49;
    *(_QWORD *)(v47 + 40) = v51;

    swift_bridgeObjectRelease(v47);
    return;
  }
  v21 = a1;
  v22 = v14;
  v88 = v20;
  v24 = v96;
  v23 = v97;
  v25 = v96 + 16;
  swift_beginAccess(v96 + 16, v104, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v24 + 16, v26);
  if (Strong)
  {
    v28 = (void *)Strong;
    v29 = (void **)(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem, v98, 0, 0);
    v30 = *v29;
    if (*v29)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v31 = v21;
      v32 = v30;
      v33 = static NSObject.== infix(_:_:)(v32, v31);

      if ((v33 & 1) != 0)
      {
        v34 = *v11;
        v35 = static os_log_type_t.default.getter(v34);
        v36 = swift_allocObject(v22, 72, 7);
        *(_OWORD *)(v36 + 16) = v92;
        v37 = objc_msgSend(v23, "displayName");
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v40 = v39;

        v41 = v88;
        *(_QWORD *)(v36 + 56) = &type metadata for String;
        *(_QWORD *)(v36 + 64) = v41;
        *(_QWORD *)(v36 + 32) = v38;
        *(_QWORD *)(v36 + 40) = v40;

        v42 = swift_bridgeObjectRelease(v36);
        v43 = *(void (**)(void *))(v89 + 8);
        if (v43)
        {
          v44 = v31;
          v43(v21);

        }
        v91(v31, v42);

        return;
      }
    }
    else
    {
      v53 = v21;
    }

  }
  else
  {
    v52 = v21;
  }
  v55 = v94;
  v54 = v95;
  v56 = v93;
  v57 = Logger.UI.unsafeMutableAddressor(v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v56, v57, v54);
  v58 = v21;
  swift_retain_n(v24, 2);
  v59 = v58;
  v60 = Logger.logObject.getter(v59);
  v61 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = swift_slowAlloc(32, -1);
    v97 = (id)swift_slowAlloc(96, -1);
    v103 = v97;
    *(_DWORD *)v62 = 136315650;
    v63 = objc_msgSend(v59, "displayName");
    v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v66 = v65;

    v101 = sub_1000544FC(v64, v66, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v102);

    swift_bridgeObjectRelease(v66);
    *(_WORD *)(v62 + 12) = 2080;
    v67 = v59;
    v68 = objc_msgSend(v67, "description");
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v71 = v70;

    v101 = sub_1000544FC(v69, v71, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, v102);

    swift_bridgeObjectRelease(v71);
    *(_WORD *)(v62 + 22) = 2080;
    swift_beginAccess(v25, &v101, 0, 0);
    v73 = swift_unknownObjectWeakLoadStrong(v25, v72);
    if (v73)
    {
      v74 = (void *)v73;
      v75 = (void **)(v73 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
      swift_beginAccess(v73 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem, v100, 0, 0);
      v76 = *v75;
      v77 = v76;

    }
    else
    {
      v76 = 0;
    }
    v80 = v94;
    v79 = v95;
    v81 = v93;
    v99 = (uint64_t)v76;
    v82 = sub_10006922C(&qword_100647560);
    v83 = String.init<A>(describing:)(&v99, v82);
    v85 = v84;
    v99 = sub_1000544FC(v83, v84, (uint64_t *)&v103);
    v86 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100);
    swift_release_n(v96, 2, v86);
    swift_bridgeObjectRelease(v85);
    v87 = v97;
    swift_arrayDestroy(v97, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v79);
  }
  else
  {

    swift_release_n(v24, 2, v78);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
  }
}

void sub_100431EE8(void *a1, void (*a2)(void))
{
  id v3;

  if (a1)
  {
    v3 = a1;
    a2();

  }
}

void sub_100431F28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  unsigned __int8 v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void *);
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  __n128 v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  __int128 v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103[3];
  char v104[8];

  v102 = a4;
  v6 = type metadata accessor for Logger(0);
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  v7 = __chkstk_darwin(v6);
  v94 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v95 = (char *)&v94 - v10;
  __chkstk_darwin(v9);
  v99 = (char *)&v94 - v11;
  v12 = sub_10006922C((uint64_t *)&unk_100646BD0);
  v13 = __chkstk_darwin(v12);
  v96 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (id *)DOCLog.UI.unsafeMutableAddressor(v13);
  v16 = *v15;
  v17 = static os_log_type_t.default.getter(v16);
  v97 = sub_10006922C((uint64_t *)&unk_100644560);
  v18 = swift_allocObject(v97, 72, 7);
  v98 = xmmword_1004D9670;
  *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
  v19 = objc_msgSend(a1, "displayName");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  *(_QWORD *)(v18 + 56) = &type metadata for String;
  v23 = sub_10006A638();
  *(_QWORD *)(v18 + 64) = v23;
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v22;

  swift_bridgeObjectRelease(v18);
  v24 = swift_allocObject(&unk_1005EBC48, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = swift_allocObject(&unk_1005EBC70, 96, 7);
  *(_QWORD *)(v25 + 16) = v24;
  v26 = *(_OWORD *)a2;
  *(_OWORD *)(v25 + 40) = *(_OWORD *)(a2 + 16);
  v27 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v25 + 72) = v27;
  *(_QWORD *)(v25 + 88) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(v25 + 24) = v26;
  sub_1001CF3C8((_QWORD *)a2);
  if (objc_msgSend(a1, "isDownloading") && !objc_msgSend(a1, "isDownloaded"))
    v28 = 1;
  else
    v28 = objc_msgSend(a1, "isExternalDownloadPlaceholder");
  if (objc_msgSend(a1, "isCloudItem"))
    v29 = objc_msgSend(a1, "isDownloaded") ^ 1;
  else
    v29 = 0;
  if (objc_msgSend(a1, "isFolder"))
  {
    v30 = objc_msgSend(a1, "fpfs_fpItem");
    v32 = v100;
    v31 = v101;
    v33 = v99;
    if (v30)
    {
      v34 = v30;
      v35 = qword_100640E38;
      v36 = v30;
      if (v35 != -1)
        swift_once(&qword_100640E38, sub_10009870C);
      v37 = type metadata accessor for RestorableSettings(0);
      v38 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v96, 1, 1, v37);
      swift_beginAccess(&off_100645FC0, v103, 33, 0);
      v39 = v36;
      sub_10043B2D8(v38, v34, 0);
      swift_endAccess(v103);

    }
    v40 = Logger.UI.unsafeMutableAddressor(v30);
    v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v33, v40, v31);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[TAP] [Interaction] Node is a folder, navigating to the next location.", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
    v45 = (void *)DOCNode.sourceIdentifier.getter(v102);
    v46 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v45, a1);

    sub_100070EDC(a2, (uint64_t)v104, (uint64_t *)&unk_100648470);
    sub_100070EDC((uint64_t)v104, (uint64_t)v103, (uint64_t *)&unk_100648470);
    if (v103[0])
      objc_msgSend(v103[0], "didSelectLocation:atParentLocation:", v46, *(_QWORD *)(a2 + 48));
    swift_release(v25);

    return;
  }
  if ((*(_BYTE *)(a2 + 42) & 1) != 0 && (*(_BYTE *)(a2 + 56) & 1) == 0)
  {
    v47 = *v15;
    v48 = static os_log_type_t.default.getter(v47);
    v49 = swift_allocObject(v97, 72, 7);
    *(_OWORD *)(v49 + 16) = v98;
    v50 = objc_msgSend(a1, "displayName");
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v53 = v52;

    *(_QWORD *)(v49 + 56) = &type metadata for String;
    *(_QWORD *)(v49 + 64) = v23;
    *(_QWORD *)(v49 + 32) = v51;
    *(_QWORD *)(v49 + 40) = v53;

    swift_bridgeObjectRelease(v49);
    v54 = swift_allocObject(&unk_1005EBCE8, 32, 7);
    *(_QWORD *)(v54 + 16) = sub_100232490;
    *(_QWORD *)(v54 + 24) = v25;
    swift_retain();
    v55 = sub_100432A14;
LABEL_29:
    DOCNode.fpfs_fetchFPItem(completion:)(v55, v54, v102);
    v76 = v54;
    goto LABEL_30;
  }
  if ((*(_BYTE *)(a2 + 57) & 1) != 0)
  {
LABEL_28:
    v77 = *v15;
    v78 = static os_log_type_t.default.getter(v77);
    v79 = swift_allocObject(v97, 72, 7);
    *(_OWORD *)(v79 + 16) = v98;
    v80 = objc_msgSend(a1, "displayName");
    v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
    v83 = v82;

    *(_QWORD *)(v79 + 56) = &type metadata for String;
    *(_QWORD *)(v79 + 64) = v23;
    *(_QWORD *)(v79 + 32) = v81;
    *(_QWORD *)(v79 + 40) = v83;

    swift_bridgeObjectRelease(v79);
    v54 = swift_allocObject(&unk_1005EBC98, 32, 7);
    *(_QWORD *)(v54 + 16) = sub_100232490;
    *(_QWORD *)(v54 + 24) = v25;
    swift_retain();
    v55 = sub_100432F30;
    goto LABEL_29;
  }
  if ((v28 & 1) == 0)
  {
    if ((v29 & 1) != 0)
    {
      v65 = *v15;
      LODWORD(v101) = static os_log_type_t.default.getter(v65);
      v66 = swift_allocObject(v97, 72, 7);
      *(_OWORD *)(v66 + 16) = v98;
      v67 = objc_msgSend(a1, "displayName");
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v70 = v69;

      *(_QWORD *)(v66 + 56) = &type metadata for String;
      *(_QWORD *)(v66 + 64) = v23;
      *(_QWORD *)(v66 + 32) = v68;
      *(_QWORD *)(v66 + 40) = v70;

      swift_bridgeObjectRelease(v66);
      v71 = swift_allocObject(&unk_1005EBC48, 24, 7);
      swift_unknownObjectWeakInit(v71 + 16);
      v72 = swift_allocObject(&unk_1005EBCC0, 120, 7);
      v73 = *(_OWORD *)a2;
      *(_OWORD *)(v72 + 40) = *(_OWORD *)(a2 + 16);
      v74 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v72 + 56) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v72 + 72) = v74;
      *(_QWORD *)(v72 + 16) = v71;
      v75 = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(v72 + 24) = v73;
      *(_QWORD *)(v72 + 88) = v75;
      *(_QWORD *)(v72 + 96) = a1;
      *(_QWORD *)(v72 + 104) = sub_100232490;
      *(_QWORD *)(v72 + 112) = v25;
      sub_1001CF3C8((_QWORD *)a2);
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain(a1);
      DOCNode.fpfs_fetchFPItem(completion:)(sub_100232534, v72, v102);
      swift_release(v71);
      v76 = v72;
LABEL_30:
      swift_release(v76);
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  v56 = objc_msgSend(a1, "isExternalDownloadPlaceholder");
  if ((_DWORD)v56)
  {
    v57 = Logger.UI.unsafeMutableAddressor(v56);
    v59 = v100;
    v58 = v101;
    v60 = v95;
    v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 16))(v95, v57, v101);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[TAP] [Interaction] Item is a Safari download in progress, don't cancel the D/L, but don't open either", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
      swift_release(v25);

    }
    else
    {

      swift_release(v25);
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    return;
  }
  v85 = v100;
  v84 = v101;
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
  {
LABEL_31:
    swift_release(v25);
    return;
  }
  v86 = Logger.UI.unsafeMutableAddressor(v56);
  v87 = v94;
  v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 16))(v94, v86, v84);
  v89 = Logger.logObject.getter(v88);
  v90 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v91 = 0;
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "[TAP] [Interaction] Item is a Download in progress, Cancelling D/L", v91, 2u);
    swift_slowDealloc(v91, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v84);
  v92 = swift_allocObject(&unk_1005EBC48, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16);
  swift_retain();
  DOCNode.fpfs_fetchFPItem(completion:)(sub_100232548, v92, v102);
  swift_release_n(v92, 2, v93);
  swift_release(v25);
}

uint64_t sub_100432904()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100432928()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100432984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1004329F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100432A14(void *a1)
{
  uint64_t v1;

  sub_100431EE8(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_100432A2C(void *a1, void *a2, uint64_t a3)
{
  unsigned __int8 v6;
  id v7;
  void *v8;
  char v9;
  char v10;
  uint64_t result;

  if (objc_msgSend(a1, "isCloudItem"))
    v6 = objc_msgSend(a1, "isDownloaded");
  else
    v6 = 1;
  v7 = objc_msgSend(a1, "cachedDomain");
  if (v7)
  {
    v8 = v7;
    v9 = FPProviderDomain.shouldUseDSEnumeration.getter();

  }
  else
  {
    v9 = 0;
  }
  if (objc_msgSend(a2, "browserViewContext") == (id)1)
    v10 = 1;
  else
    v10 = v6;
  result = 1;
  if ((v10 & 1) == 0 && (v9 & 1) == 0)
  {
    if ((DOCIsNetworkReachable(1) & 1) != 0)
    {
      return 1;
    }
    else
    {
      DOCAlertUserTheNetworkIsNotReachable(a3);
      return 0;
    }
  }
  return result;
}

void sub_100432B04(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  uint64_t v10;

  v2 = objc_msgSend(a1, "downloadingProgress");
  objc_msgSend(v2, "cancel");

  v3 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v4 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v5 + 32) = a1;
  v10 = v5;
  specialized Array._endMutation()(v5);
  v6 = objc_allocWithZone((Class)FPEvictOperation);
  sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v7 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v6, "initWithItems:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  objc_msgSend(v3, "scheduleAction:", v9);
}

uint64_t sub_100432C3C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));

  swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

void sub_100432CA8(void *a1)
{
  uint64_t v1;

  sub_10043181C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32, *(void (**)(id, __n128))(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_100432CB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100432CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004308C8(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD, __n128))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100432CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100432D1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100432D48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 104, 7);
}

void sub_100432DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100431160(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t sub_100432DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  swift_release(*(_QWORD *)(v0 + v5));
  v10 = v0 + v6;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v6 + 8))
    swift_release(*(_QWORD *)(v10 + 16));
  if (*(_QWORD *)(v10 + 24))
    swift_release(*(_QWORD *)(v10 + 32));

  return swift_deallocObject(v0, v6 + 72, v2 | 7);
}

void sub_100432EC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100431328(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
}

void sub_100432F34(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::Int v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;

  v2 = a1;
  v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
      goto LABEL_5;
LABEL_11:
    v5 = &_swiftEmptyDictionarySingleton;
    if (v3)
      goto LABEL_6;
LABEL_12:
    v11 = -1 << *(_BYTE *)(v2 + 32);
    v8 = ~v11;
    v42 = v2 + 64;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(v2 + 64);
    v10 = v2;
    goto LABEL_16;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaDictionary.count.getter(a1, a2);
  if (!v4)
    goto LABEL_11;
LABEL_5:
  sub_10006922C((uint64_t *)&unk_100655350);
  v5 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v4);
  if (!v3)
    goto LABEL_12;
LABEL_6:
  if (v2 < 0)
    v6 = v2;
  else
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
  v7 = __CocoaDictionary.makeIterator()(v6);
  v42 = 0;
  v8 = 0;
  v9 = 0;
  v10 = v7 | 0x8000000000000000;
LABEL_16:
  v41 = (unint64_t)(v8 + 64) >> 6;
  v14 = (char *)(v5 + 8);
  swift_bridgeObjectRetain(v2);
  swift_retain();
  v16 = 0;
  while ((v10 & 0x8000000000000000) != 0)
  {
    v21 = __CocoaDictionary.Iterator.next()(v15);
    if (!v21)
      goto LABEL_50;
    v23 = v22;
    v43 = v21;
    v24 = sub_10004F2F0(0, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
    swift_dynamicCast(&v44, &v43, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
    v43 = v23;
    v25 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    swift_dynamicCast(&v45, &v43, (char *)&type metadata for Swift.AnyObject + 8, v25, 7);
    v26 = v44;
    v27 = v45;
LABEL_41:
    v15 = NSObject._rawHashValue(seed:)(v5[5]);
    v34 = -1 << *((_BYTE *)v5 + 32);
    v35 = v15 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)&v14[8 * (v35 >> 6)]) != 0)
    {
      v17 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)&v14[8 * (v35 >> 6)])) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_51;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)&v14[8 * v36];
      }
      while (v40 == -1);
      v17 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)&v14[(v17 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v17;
    v18 = 8 * v17;
    *(_QWORD *)(v5[6] + v18) = v26;
    *(_QWORD *)(v5[7] + v18) = v27;
    ++v5[2];
  }
  if (v9)
  {
    v19 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v20 = v19 | (v16 << 6);
LABEL_40:
    v26 = *(void **)(*(_QWORD *)(v10 + 48) + 8 * v20);
    v27 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v20);
    v44 = v26;
    v45 = v27;
    v32 = v26;
    v33 = v27;
    goto LABEL_41;
  }
  v28 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v28 >= v41)
    goto LABEL_50;
  v29 = *(_QWORD *)(v42 + 8 * v28);
  v30 = v16 + 1;
  if (v29)
    goto LABEL_39;
  v30 = v16 + 2;
  if (v16 + 2 >= v41)
    goto LABEL_50;
  v29 = *(_QWORD *)(v42 + 8 * v30);
  if (v29)
    goto LABEL_39;
  v30 = v16 + 3;
  if (v16 + 3 >= v41)
    goto LABEL_50;
  v29 = *(_QWORD *)(v42 + 8 * v30);
  if (v29)
    goto LABEL_39;
  v30 = v16 + 4;
  if (v16 + 4 >= v41)
    goto LABEL_50;
  v29 = *(_QWORD *)(v42 + 8 * v30);
  if (v29)
  {
LABEL_39:
    v9 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v30 << 6);
    v16 = v30;
    goto LABEL_40;
  }
  v31 = v16 + 5;
  if (v16 + 5 >= v41)
  {
LABEL_50:
    v44 = 0;
    v45 = 0;
    swift_release(v5);
    sub_10021C590(v10);
    return;
  }
  v29 = *(_QWORD *)(v42 + 8 * v31);
  if (v29)
  {
    v30 = v16 + 5;
    goto LABEL_39;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v41)
      goto LABEL_50;
    v29 = *(_QWORD *)(v42 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_39;
  }
LABEL_52:
  __break(1u);
}

unint64_t sub_10043330C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v50[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10006922C((uint64_t *)&unk_1006533B0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v41 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v40 = (unint64_t)(63 - v4) >> 6;
  v7 = &v47;
  v8 = &v49;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  v12 = &type metadata for String;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v40)
    goto LABEL_32;
  v22 = *(_QWORD *)(v41 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v40)
      goto LABEL_32;
    v22 = *(_QWORD *)(v41 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v40)
        goto LABEL_32;
      v22 = *(_QWORD *)(v41 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v40)
          goto LABEL_32;
        v22 = *(_QWORD *)(v41 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v40)
          {
            v22 = *(_QWORD *)(v41 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v40)
                break;
              v22 = *(_QWORD *)(v41 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_10021C590(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v43 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = 16 * v20;
    v26 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v28 = *v26;
    v27 = v26[1];
    v29 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v25);
    v30 = *v29;
    v31 = v29[1];
    v45 = v28;
    v46 = v27;
    v44[0] = v30;
    v44[1] = v31;
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v31);
    swift_dynamicCast(v7, v44, v12, v11, 7);
    v32 = v45;
    v33 = v46;
    sub_100079B28(v7, v8);
    sub_100079B28(v8, v50);
    sub_100079B28(v50, &v48);
    result = sub_10007EF08(v32, v33);
    v34 = result;
    if ((v35 & 1) != 0)
    {
      v42 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v32;
      v18[1] = v33;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v42;
      v19 = (_QWORD *)(v3[7] + 32 * v34);
      sub_100068588(v19);
      result = (unint64_t)sub_100079B28(&v48, v19);
      v6 = v43;
      if (!v43)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v36 = (uint64_t *)(v3[6] + 16 * result);
    *v36 = v32;
    v36[1] = v33;
    result = (unint64_t)sub_100079B28(&v48, (_OWORD *)(v3[7] + 32 * result));
    v37 = v3[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_34;
    v3[2] = v39;
    v6 = v43;
    if (!v43)
      goto LABEL_11;
LABEL_10:
    v43 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_100433674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  __n128 v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t, __n128);
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  char *v49;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  _QWORD v59[2];
  int64_t v60;
  uint64_t v61;
  Swift::Int *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v72 = sub_10006922C((uint64_t *)&unk_10064DA60);
  __chkstk_darwin(v72);
  v69 = (char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_10006922C(&qword_100655338);
  __chkstk_darwin(v71);
  v4 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v70 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (char *)v59 - v9;
  __chkstk_darwin(v10);
  v66 = (char *)v59 - v11;
  v65 = sub_10006922C(&qword_100655340);
  __chkstk_darwin(v65);
  v64 = (uint64_t)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63 = (char *)v59 - v14;
  v73 = a1;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    sub_10006922C(&qword_100655348);
    v16 = (Swift::Int *)static _DictionaryStorage.allocate(capacity:)(v15);
  }
  else
  {
    v16 = (Swift::Int *)&_swiftEmptyDictionarySingleton;
  }
  v17 = *(_QWORD *)(v73 + 64);
  v61 = v73 + 64;
  v18 = -1 << *(_BYTE *)(v73 + 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v17;
  v59[1] = -1 << *(_BYTE *)(v73 + 32);
  v60 = (unint64_t)(63 - v18) >> 6;
  v21 = (char *)(v16 + 8);
  swift_bridgeObjectRetain(v73);
  v22 = swift_retain();
  v74 = 0;
  v68 = v7;
  v62 = v16;
  v23 = v69;
  while (1)
  {
    if (v20)
    {
      v75 = (v20 - 1) & v20;
      v27 = __clz(__rbit64(v20)) | (v74 << 6);
      goto LABEL_28;
    }
    v28 = v74 + 1;
    if (__OFADD__(v74, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v28 >= v60)
      goto LABEL_37;
    v29 = *(_QWORD *)(v61 + 8 * v28);
    v30 = v74 + 1;
    if (!v29)
    {
      v30 = v74 + 2;
      if (v74 + 2 >= v60)
        goto LABEL_37;
      v29 = *(_QWORD *)(v61 + 8 * v30);
      if (!v29)
      {
        v30 = v74 + 3;
        if (v74 + 3 >= v60)
          goto LABEL_37;
        v29 = *(_QWORD *)(v61 + 8 * v30);
        if (!v29)
        {
          v30 = v74 + 4;
          if (v74 + 4 >= v60)
            goto LABEL_37;
          v29 = *(_QWORD *)(v61 + 8 * v30);
          if (!v29)
            break;
        }
      }
    }
LABEL_27:
    v74 = v30;
    v75 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_28:
    v32 = v73;
    v33 = v70;
    v34 = *(_QWORD *)(v70 + 72);
    v35 = v34 * v27;
    v36 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v70 + 16);
    v37 = v63;
    v36(v63, *(_QWORD *)(v73 + 48) + v34 * v27, v5, v22);
    v38 = *(_QWORD *)(v32 + 56) + v35;
    v39 = v65;
    ((void (*)(char *, unint64_t, uint64_t))v36)(&v37[*(int *)(v65 + 48)], v38, v5);
    v40 = (uint64_t)v37;
    v41 = v64;
    sub_1004359E4(v40, v64);
    v42 = v41 + *(int *)(v39 + 48);
    v43 = &v23[*(int *)(v72 + 48)];
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
    v45 = v67;
    v44(v67, v41, v5);
    swift_dynamicCast(v23, v45, v5, &type metadata for AnyHashable, 7);
    v44(v43, v42, v5);
    v46 = &v4[*(int *)(v71 + 48)];
    v47 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v4 = *(_OWORD *)v23;
    *((_OWORD *)v4 + 1) = v47;
    *((_QWORD *)v4 + 4) = *((_QWORD *)v23 + 4);
    v44(v46, (uint64_t)v43, v5);
    v48 = *((_OWORD *)v4 + 1);
    v79 = *(_OWORD *)v4;
    v80 = v48;
    v81 = *((_QWORD *)v4 + 4);
    v49 = v66;
    v44(v66, (uint64_t)v46, v5);
    v76 = v79;
    v77 = v80;
    v78 = v81;
    v50 = v68;
    v44(v68, (uint64_t)v49, v5);
    v16 = v62;
    v51 = AnyHashable._rawHashValue(seed:)(v62[5]);
    v52 = -1 << *((_BYTE *)v16 + 32);
    v53 = v51 & ~v52;
    v54 = v53 >> 6;
    if (((-1 << v53) & ~*(_QWORD *)&v21[8 * (v53 >> 6)]) != 0)
    {
      v24 = __clz(__rbit64((-1 << v53) & ~*(_QWORD *)&v21[8 * (v53 >> 6)])) | v53 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v55 = 0;
      v56 = (unint64_t)(63 - v52) >> 6;
      do
      {
        if (++v54 == v56 && (v55 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v57 = v54 == v56;
        if (v54 == v56)
          v54 = 0;
        v55 |= v57;
        v58 = *(_QWORD *)&v21[8 * v54];
      }
      while (v58 == -1);
      v24 = __clz(__rbit64(~v58)) + (v54 << 6);
    }
    *(_QWORD *)&v21[(v24 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v24;
    v25 = v16[6] + 40 * v24;
    v26 = v77;
    *(_OWORD *)v25 = v76;
    *(_OWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 32) = v78;
    v44((char *)(v16[7] + v24 * v34), (uint64_t)v50, v5);
    ++v16[2];
    v20 = v75;
  }
  v31 = v74 + 5;
  if (v74 + 5 >= v60)
  {
LABEL_37:
    swift_release(v16);
    sub_10021C590(v73);
    return;
  }
  v29 = *(_QWORD *)(v61 + 8 * v31);
  if (v29)
  {
    v30 = v74 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v60)
      goto LABEL_37;
    v29 = *(_QWORD *)(v61 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_100433C60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10006922C(&qword_10064DB20);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_100069BD8(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v41);
    *(_QWORD *)&v40 = v19;
    *((_QWORD *)&v40 + 1) = v18;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v19;
    *((_QWORD *)&v38[0] + 1) = v18;
    swift_bridgeObjectRetain(v18);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_100079B28(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_100079B28(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_100079B28(v37, v38);
    sub_100079B28(v38, &v34);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v30;
    *(_OWORD *)(v10 + 16) = v31;
    *(_QWORD *)(v10 + 32) = v32;
    sub_100079B28(&v34, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10021C590(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1004340B4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  _QWORD v36[5];
  uint64_t v37;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "linkColor");
  objc_msgSend(v2, "setTintColor:", v3);

  v4 = (void *)objc_opt_self(_UIResilientRemoteViewContainerViewController);
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files23DOCPickerViewController_source], "pickerExtension");
  v6 = swift_allocObject(&unk_1005EBFB8, 24, 7);
  *(_QWORD *)(v6 + 16) = v0;
  v36[4] = sub_1004359DC;
  v37 = v6;
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 1107296256;
  v36[2] = sub_10043457C;
  v36[3] = &unk_1005EBFD0;
  v7 = _Block_copy(v36);
  v8 = v37;
  v9 = v0;
  v10 = objc_msgSend(v4, "instantiateWithExtension:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

  v11 = OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController;
  v12 = *(void **)&v9[OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController] = v10;

  v13 = *(void **)&v9[v11];
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v13, "delayDisplayOfRemoteController");
  v14 = *(void **)&v9[v11];
  if (!v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15 = objc_msgSend(v14, "view");
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  objc_msgSend(v15, "setAutoresizingMask:", 18);

  v17 = *(void **)&v9[v11];
  if (!v17)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18 = objc_msgSend(v17, "view");
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v19 = v18;
  v20 = objc_msgSend(v9, "view");
  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v21 = v20;
  objc_msgSend(v20, "bounds");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  objc_msgSend(v19, "setFrame:", v23, v25, v27, v29);
  if (!*(_QWORD *)&v9[v11])
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v9, "addChildViewController:");
  v30 = objc_msgSend(v9, "view");
  if (!v30)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v31 = v30;
  v32 = *(void **)&v9[v11];
  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = objc_msgSend(v32, "view");
  if (!v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v34 = v33;
  objc_msgSend(v31, "addSubview:", v33);

  v35 = *(void **)&v9[v11];
  if (v35)
  {
    objc_msgSend(v35, "didMoveToParentViewController:", v9);
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1004343C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;

  if (a3)
  {
    v6 = *(id *)DOCLog.Source.unsafeMutableAddressor();
    v7 = static os_log_type_t.error.getter(v6);
    v8 = sub_10006922C((uint64_t *)&unk_100644560);
    v9 = swift_allocObject(v8, 112, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1004D4CE0;
    v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a4
                                                                + OBJC_IVAR____TtC5Files23DOCPickerViewController_source), "pickerExtension"));
    v11 = objc_msgSend(v10, "identifier");

    if (v11)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      *(_QWORD *)(v9 + 56) = &type metadata for String;
      *(_QWORD *)(v9 + 64) = sub_10006A638();
      *(_QWORD *)(v9 + 32) = v12;
      *(_QWORD *)(v9 + 40) = v14;
      v15 = _convertErrorToNSError(_:)(a3);
      *(_QWORD *)(v9 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v9 + 104) = sub_100151F4C();
      *(_QWORD *)(v9 + 72) = v15;
      os_log(_:dso:log:type:_:)("Error when getting the remote view for the UIDocumentPicker extension with identifier(%@) error %@", 98, 2, &_mh_execute_header, v6, v7, v9);

      swift_bridgeObjectRelease(v9);
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  v16 = *(void **)(a4 + OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController);
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = objc_msgSend(v16, "remoteViewController");
  if (v17)
  {
    v18 = v17;
    sub_100434638(v17);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10043457C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *);
  id v9;
  id v10;

  v8 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  swift_unknownObjectRetain(a2);
  v9 = a3;
  v10 = a4;
  v8(a2, a3, a4);
  swift_release(v7);

  return swift_unknownObjectRelease(a2);
}

void sub_100434638(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void *v21;
  id v22;
  double v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  __n128 v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  char *v44;
  char *v45;
  id v46;
  NSURL *v47;
  void *v48;
  char *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  _QWORD *v72;
  unint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  __n128 v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  unint64_t v80;
  char v81;
  double v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  unint64_t v90;
  double v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Class isa;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  void (*v110)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v111;
  char *v112;
  unint64_t v113;
  _OWORD v114[2];
  unint64_t v115;
  __int128 aBlock;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;

  v2 = v1;
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v111 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v106 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v106 - v10;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v108 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v106 - v16;
  v19 = __chkstk_darwin(v18);
  v109 = (char *)&v106 - v20;
  objc_msgSend(a1, "setPublicController:", v2, v19);
  v112 = v2;
  v21 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCPickerViewController_source];
  v22 = objc_msgSend(v21, "providerDomain");
  v24 = v22;
  if (v22)
  {
    v25 = objc_msgSend(v22, "identifier");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v27 = v26;

    v24 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  objc_msgSend(a1, "setIdentifier:", v24, v23);

  objc_msgSend(a1, "setEdgesForExtendedLayout:", 0);
  v119 = sub_1004350C8;
  v120 = 0;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v117 = sub_1000602CC;
  v118 = &unk_1005EBF30;
  v28 = _Block_copy(&aBlock);
  v29 = sub_1000C5280(a1, v28);
  _Block_release(v28);
  v30 = *(void **)&v112[OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration];
  v31 = v29;
  DOCDocumentPickerExtensionUpdateWithConfiguration(v29, v30);
  v32 = objc_msgSend(v30, "urls");
  if (!v32)
    goto LABEL_19;
  v34 = v32;
  v35 = sub_10004F2F0(0, &qword_100644C20, FPSandboxingURLWrapper_ptr);
  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

  if (!((unint64_t)v36 >> 62))
  {
    if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
    goto LABEL_18;
  }
  if (v36 < 0)
    v52 = v36;
  else
    v52 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  v53 = _CocoaArrayWrapper.endIndex.getter(v52);
  swift_bridgeObjectRelease(v36);
  if (!v53)
  {
LABEL_18:
    v33 = swift_bridgeObjectRelease(v36);
LABEL_19:
    v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
    v110(v11, 1, 1, v12, v33);
LABEL_20:
    sub_10000CB4C((uint64_t)v11, &qword_100643470);
    objc_msgSend(v31, "_setUploadURLWrapper:", 0);
    goto LABEL_21;
  }
LABEL_6:
  v107 = v8;
  if ((v36 & 0xC000000000000001) != 0)
  {
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v36);
  }
  else
  {
    if (!*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v37 = *(id *)(v36 + 32);
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "url", swift_bridgeObjectRelease(v36).n128_f64[0]);

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v40 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v40(v11, v17, v12);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v41)(v11, 0, 1, v12);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v43 = v42(v11, 1, v12);
  v110 = v41;
  if (v43 == 1)
    goto LABEL_20;
  v44 = v109;
  v40(v109, v11, v12);
  v45 = v107;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v107, v44, v12);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v41)(v45, 0, 1, v12);
  v46 = objc_msgSend(v30, "interactionMode");
  if (v42(v45, 1, v12) == 1)
  {
    v48 = 0;
  }
  else
  {
    v49 = v45;
    URL._bridgeToObjectiveC()(v47);
    v48 = v50;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v49, v12);
  }
  v51 = objc_msgSend((id)objc_opt_self(_UIDocumentPickerNSURLWrapper), "wrapperWithURL:readonly:", v48, v46 == (id)2);

  objc_msgSend(v31, "_setUploadURLWrapper:", v51);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v109, v12);
LABEL_21:
  v115 = sub_10008B1F0((uint64_t)_swiftEmptyArrayStorage);
  if (objc_msgSend(v30, "interactionMode") != (id)3 && objc_msgSend(v30, "interactionMode") != (id)1)
    goto LABEL_27;
  v55 = objc_msgSend(v21, "providerDomain");
  if (!v55)
    goto LABEL_26;
  v56 = v55;

  v57 = objc_msgSend(v21, "providerDomain");
  if (!v57)
  {
LABEL_43:
    __break(1u);
    return;
  }
  v58 = v57;
  v59 = objc_msgSend(v57, "storageURLs");

  v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v12);
  v61 = *(_QWORD *)(v60 + 16);
  *(_QWORD *)&v54 = swift_bridgeObjectRelease(v60).n128_u64[0];
  if (!v61)
  {
LABEL_26:
    v62 = *(id *)DOCLog.Source.unsafeMutableAddressor();
    v63 = static os_log_type_t.error.getter(v62);
    os_log(_:dso:log:type:_:)("Cannot configure the Picker view controller in move or open if there is no storage URL for file provider", 104, 2, &_mh_execute_header, v62, v63, _swiftEmptyArrayStorage);

  }
LABEL_27:
  v64 = objc_msgSend(v21, "providerDomain", v54);
  if (v64)
  {
    v65 = v64;
    v66 = objc_msgSend(v64, "storageURLs");

    v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v12);
    if (*(_QWORD *)(v67 + 16))
    {
      v68 = (uint64_t)v111;
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v111, v67 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12);
      v69 = 0;
    }
    else
    {
      v69 = 1;
      v68 = (uint64_t)v111;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v110)(v68, v69, 1, v12);
    v70 = swift_bridgeObjectRelease(v67);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v13 + 48))(v68, 1, v12, v70) == 1)
    {
      sub_10000CB4C(v68, &qword_100643470);
    }
    else
    {
      v71 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v108, v68, v12);
      v118 = (void *)v12;
      v72 = sub_10006CBAC(&aBlock);
      (*(void (**)(_QWORD *, char *, uint64_t))(v13 + 16))(v72, v71, v12);
      sub_100079B28(&aBlock, v114);
      v73 = v115;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v115);
      v113 = v73;
      sub_100356D3C(v114, 0xD000000000000012, 0x80000001005352E0, isUniquelyReferenced_nonNull_native);
      v115 = v113;
      v75 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v71, v12, v75);
    }
  }
  v76 = objc_msgSend(v21, "providerDomain");
  if (v76)
  {
    v77 = v76;
    v78 = objc_msgSend(v76, "identifier");

    type metadata accessor for FPProviderDomainID(0);
    v118 = v79;
    *(_QWORD *)&aBlock = v78;
    sub_100079B28(&aBlock, v114);
    v80 = v115;
    v81 = swift_isUniquelyReferenced_nonNull_native(v115);
    v113 = v80;
    sub_100356D3C(v114, 0xD000000000000012, 0x80000001005352C0, v81);
    v115 = v113;
    *(_QWORD *)&v82 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
  }
  else
  {
    sub_100443DB8(0xD000000000000012, 0x80000001005352C0, &aBlock);
    sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
  }
  v83 = objc_msgSend(v21, "fileProviderDocumentGroup", v82);
  if (v83)
  {
    v84 = v83;
    v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v87 = v86;

    v118 = &type metadata for String;
    *(_QWORD *)&aBlock = v85;
    *((_QWORD *)&aBlock + 1) = v87;
    sub_100079B28(&aBlock, v114);
    v88 = v115;
    v89 = swift_isUniquelyReferenced_nonNull_native(v115);
    v113 = v88;
    sub_100356D3C(v114, 0x746E656D75636F64, 0xED000070756F7247, v89);
    v90 = v113;
    *(_QWORD *)&v91 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
  }
  else
  {
    sub_100443DB8(0x746E656D75636F64, 0xED000070756F7247, &aBlock);
    sub_10000CB4C((uint64_t)&aBlock, &qword_100642730);
    v90 = v115;
  }
  v92 = objc_msgSend(v21, "displayName", v91);
  v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
  v95 = v94;

  v118 = &type metadata for String;
  *(_QWORD *)&aBlock = v93;
  *((_QWORD *)&aBlock + 1) = v95;
  sub_100079B28(&aBlock, v114);
  v96 = swift_isUniquelyReferenced_nonNull_native(v90);
  v113 = v90;
  sub_100356D3C(v114, 0x657A696C61636F6CLL, 0xED0000656D614E64, v96);
  v97 = v113;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_100433C60(v97);
  v99 = v98;
  swift_bridgeObjectRelease(v97);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v99);
  v101 = swift_allocObject(&unk_1005EBF68, 24, 7);
  v102 = v112;
  *(_QWORD *)(v101 + 16) = v112;
  v119 = sub_10043599C;
  v120 = v101;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v117 = sub_10016C02C;
  v118 = &unk_1005EBF80;
  v103 = _Block_copy(&aBlock);
  v104 = v120;
  v105 = v102;
  objc_msgSend(v31, "_prepareWithExtensionInfo:completionHandler:", isa, v103, swift_release(v104).n128_f64[0]);
  _Block_release(v103);
  swift_unknownObjectRelease(v31);

}

double sub_1004350C8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v2 = *(id *)DOCLog.Source.unsafeMutableAddressor();
  v3 = static os_log_type_t.error.getter(v2);
  v4 = sub_10006922C((uint64_t *)&unk_100644560);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004D9670;
  v6 = _convertErrorToNSError(_:)(a1);
  *(_QWORD *)(v5 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
  *(_QWORD *)(v5 + 64) = sub_100151F4C();
  *(_QWORD *)(v5 + 32) = v6;
  os_log(_:dso:log:type:_:)("Failed to get the proxy object for UI document picker extensions with error %@", 78, 2, &_mh_execute_header, v2, v3, v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

void sub_100435190(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = swift_allocObject(&unk_1005EBEC8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_1005EBEF0, v8 + v5, v7 | 7);
  *(_QWORD *)(v9 + 16) = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_10043596C;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005EBF08;
  v10 = _Block_copy(aBlock);
  objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v10, swift_release(v12).n128_f64[0]);
  _Block_release(v10);
}

void sub_1004352E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  char *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  char v31[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration);
    if (objc_msgSend(v7, "useSharedQuickLook"))
    {
      v8 = objc_msgSend(v7, "sceneIdentifier");
      if (v8)
      {
        v9 = qword_1006411A8;
        v10 = v8;
        if (v9 != -1)
          swift_once(&qword_1006411A8, sub_100470A10);
        v11 = (void *)qword_100656EE0;
        v12 = (char *)objc_msgSend((id)qword_100656EE0, "objectForKey:", v10);
        if (!v12)
        {
          v13 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
          v12 = (char *)DOCPreviewController.init()();
          objc_msgSend(v11, "setObject:forKey:", v12, v10);
        }

        v14 = &v12[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider];
        *((_QWORD *)v14 + 1) = 0;
        swift_unknownObjectWeakAssign(v14, 0);
        v15 = sub_10006922C((uint64_t *)&unk_100644550);
        v16 = type metadata accessor for URL(0);
        v17 = *(_QWORD *)(v16 - 8);
        v18 = *(unsigned __int8 *)(v17 + 80);
        v19 = (v18 + 32) & ~v18;
        v20 = swift_allocObject(v15, v19 + *(_QWORD *)(v17 + 72), v18 | 7);
        *(_OWORD *)(v20 + 16) = xmmword_1004D9670;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v20 + v19, a2, v16);
        v21 = *(void **)&v5[OBJC_IVAR____TtC5Files23DOCPickerViewController_source];
        v22 = v21;
        DOCPreviewController.set(_:defaultIndex:)(v20, v21, 1, 0, 1);

        swift_bridgeObjectRelease(v20);
      }
      else
      {
        v23 = *(id *)DOCLog.Source.unsafeMutableAddressor();
        v24 = static os_log_type_t.debug.getter(v23);
        os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v23, v24, _swiftEmptyArrayStorage);

      }
    }
    if (objc_msgSend(*(id *)&v5[v6], "interactionMode") == (id)1)
      v25 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC5Files23DOCPickerViewController_source], "supportsInteractionMode:", 1) ^ 1;
    else
      v25 = 0;
    v26 = &v5[OBJC_IVAR____TtC5Files23DOCPickerViewController_delegate];
    v27 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Files23DOCPickerViewController_delegate]);
    if (v27)
    {
      v28 = v27;
      v29 = *((_QWORD *)v26 + 1);
      ObjectType = swift_getObjectType(v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 24))(a2, v25, ObjectType, v29);

      swift_unknownObjectRelease(v28);
    }
    else
    {

    }
  }
}

id sub_10043582C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCPickerViewController()
{
  return objc_opt_self(_TtC5Files23DOCPickerViewController);
}

uint64_t sub_1004358D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004358F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10043596C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_1004352E4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

id sub_10043599C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController), "endDelayingDisplayOfRemoteController");
}

uint64_t sub_1004359B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004359DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1004343C4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1004359E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100655340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100435A48(void *a1)
{
  uint64_t v1;
  id v3;
  double result;
  id v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  _QWORD v11[5];
  _QWORD *v12;

  v3 = objc_msgSend(a1, "displayName");
  if (v3)
  {

    v5 = objc_msgSend(a1, "node");
    if (v5)
    {
      v6 = v5;
      v7 = (_QWORD *)swift_allocObject(&unk_1005EC0E8, 40, 7);
      v7[2] = v6;
      v7[3] = a1;
      v7[4] = v1;
      v11[4] = sub_10043AE10;
      v12 = v7;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_100438428;
      v11[3] = &unk_1005EC100;
      v8 = _Block_copy(v11);
      v9 = v12;
      swift_unknownObjectRetain(v6);
      v10 = a1;
      objc_msgSend(v6, "fetchParents:", v8, swift_release(v9).n128_f64[0]);
      _Block_release(v8);
      *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }
  return result;
}

id sub_100435B4C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t countAndFlagsBits;
  id result;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;

  v1 = objc_msgSend(v0, "displayName");
  if (v1)
  {
    v2 = v1;
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
LABEL_5:
    v8 = countAndFlagsBits;

    return (id)v8;
  }
  result = (id)_DocumentManagerBundle(0);
  if (result)
  {
    v2 = result;
    v9._object = (void *)0x80000001005357C0;
    v5._countAndFlagsBits = 2960685;
    v5._object = (void *)0xE300000000000000;
    v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6.value._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v9._countAndFlagsBits = 0xD000000000000053;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v2, v7, v9)._countAndFlagsBits;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100435C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t result;
  void *v7;
  _BYTE v8[40];

  sub_100092328(a1, (uint64_t)v8);
  v2 = sub_10006922C(&qword_100655680);
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  if (swift_dynamicCast(&v7, v8, v2, v3, 6))
  {
    v4 = v7;
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v5 = static NSObject.== infix(_:_:)(v1, v4);

    return v5 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x80000001005357A0, "Files/DOCGoToLocation+DocumentManager.swift", 43, 2, 24, 0);
    __break(1u);
  }
  return result;
}

id sub_100435D10()
{
  return sub_100435B4C();
}

uint64_t sub_100435D30(uint64_t a1)
{
  return sub_100435C1C(a1) & 1;
}

id sub_100435D5C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  unsigned int v18;
  uint64_t v19;
  __objc2_prot *v20;
  uint64_t inited;
  id v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  id v26;
  void *v27;
  _QWORD *v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t, __n128);
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  NSURL *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_class *v54;
  uint64_t v55;
  id v56;
  void *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char v62[48];
  objc_super v63;
  _QWORD v64[2];
  _QWORD v65[3];
  uint64_t v66;
  char v67[56];

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  v13 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v14 = v1;
  v15 = NSCoder.decodeObject<A>(of:forKey:)(v13, 0x6E6F697461636F6CLL, 0xE800000000000000, v13);
  if (v15)
  {
    v16 = (void *)v15;
    v61 = v6;
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(a1, "decodeBoolForKey:", v17);

    v19 = sub_100439308();
    v20 = &OBJC_PROTOCOL___RPTTestParameters;
    if (v18)
    {
      inited = swift_initStackObject(v19, v62);
      *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(inited + 32) = sub_10004F2F0(0, &qword_100655650, NSArray_ptr);
      *(_QWORD *)(inited + 40) = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
      *(_QWORD *)&v14[OBJC_IVAR___DOCGoToRecentLocation_location] = v16;
      v22 = v16;
      v23 = sub_10043C0C4(inited);
      v24 = swift_bridgeObjectRelease(inited);
      NSCoder.decodeTopLevelObject(of:forKey:)(v65, v23, 0x73746E65726170, 0xE700000000000000, v24);
      swift_bridgeObjectRelease(v23);
      if (v66)
      {
        v34 = sub_10006922C(&qword_100645068);
        v20 = &OBJC_PROTOCOL___RPTTestParameters;
        if ((swift_dynamicCast(v64, v65, (char *)&type metadata for Any + 8, v34, 6) & 1) != 0)
        {
          v56 = v22;
          v58 = v14;
          v35 = v64[0];
          sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
          static FINode.startIfNeeded()();
          v65[0] = _swiftEmptyArrayStorage;
          v36 = *(_QWORD *)(v35 + 16);
          v57 = a1;
          v55 = v35;
          if (v36)
          {
            v37 = v35 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
            v59 = *(_QWORD *)(v4 + 72);
            v60 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
            v38 = swift_bridgeObjectRetain(v35);
            v39 = v61;
            while (1)
            {
              v41 = v60;
              ((void (*)(char *, uint64_t, uint64_t, __n128))v60)(v12, v37, v3, v38);
              v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v42)(v12, 0, 1, v3);
              v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
              if (v43(v12, 1, v3) == 1)
                break;
              (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v39, v12, v3);
              v41(v9, v39, v3);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v42)(v9, 0, 1, v3);
              if (v43(v9, 1, v3) == 1)
              {
                v45 = 0;
              }
              else
              {
                URL._bridgeToObjectiveC()(v44);
                v45 = v46;
                (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
              }
              v47 = objc_msgSend((id)objc_opt_self(FINode), "fiNodeFromURL:", v45);

              v48 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v39, v3);
              if (v47)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
                v50 = *(_QWORD *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
                v49 = *(_QWORD *)((v65[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v50 >= v49 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
                v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v47);
                specialized Array._endMutation()(v40);
                v39 = v61;
              }
              v37 += v59;
              if (!--v36)
                goto LABEL_30;
            }
          }
          else
          {
            v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
            v38 = swift_bridgeObjectRetain(v35);
LABEL_30:
            v42(v12, 1, 1, v3, v38);
          }
          v53 = v55;
          swift_bridgeObjectRelease(v55);
          v52 = v65[0];
          swift_bridgeObjectRelease(v53);

          v14 = v58;
          v27 = v57;
          goto LABEL_32;
        }

      }
      else
      {

        sub_10000CB4C((uint64_t)v65, &qword_100642730);
        v20 = &OBJC_PROTOCOL___RPTTestParameters;
      }
    }
    else
    {
      v25 = swift_initStackObject(v19, v67);
      *(_OWORD *)(v25 + 16) = xmmword_1004D4CE0;
      *(_QWORD *)(v25 + 32) = sub_10004F2F0(0, &qword_100655650, NSArray_ptr);
      *(_QWORD *)(v25 + 40) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      *(_QWORD *)&v14[OBJC_IVAR___DOCGoToRecentLocation_location] = v16;
      v26 = v16;
      v27 = a1;
      v28 = sub_10043C0C4(v25);
      v29 = swift_bridgeObjectRelease(v25);
      NSCoder.decodeTopLevelObject(of:forKey:)(v65, v28, 0x73746E65726170, 0xE700000000000000, v29);
      swift_bridgeObjectRelease(v28);

      if (v66)
      {
        v51 = sub_10006922C((uint64_t *)&unk_100643CB0);
        if ((swift_dynamicCast(v64, v65, (char *)&type metadata for Any + 8, v51, 6) & 1) != 0)
        {
          v52 = v64[0];
LABEL_32:
          *(_QWORD *)&v14[OBJC_IVAR___DOCGoToRecentLocation_parents] = v52;

          v54 = (objc_class *)type metadata accessor for DOCGoToRecentLocation();
          v63.receiver = v14;
          v63.super_class = v54;
          v32 = objc_msgSendSuper2(&v63, "init");

          return v32;
        }

      }
      else
      {

        sub_10000CB4C((uint64_t)v65, &qword_100642730);
      }
    }
    v30 = *(void **)&v14[(unint64_t)v20[12].isa];

  }
  else
  {

  }
  v31 = type metadata accessor for DOCGoToRecentLocation();
  swift_deallocPartialClassInstance(v14, v31, 24, 7);
  return 0;
}

void sub_1004363EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  Class v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t i;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  NSString v53;
  id v54;
  Class isa;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  unint64_t v60;

  v3 = sub_10006922C(&qword_100643470);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - v8;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR___DOCGoToRecentLocation_location);
  v11 = String._bridgeToObjectiveC()();
  v58 = a1;
  objc_msgSend(a1, "encodeObject:forKey:", v10, v11);

  v12 = *(_QWORD *)(v1 + OBJC_IVAR___DOCGoToRecentLocation_parents);
  v13 = (unint64_t)v12 >> 62;
  v59 = v12;
  v57 = v3;
  if ((unint64_t)v12 >> 62)
    goto LABEL_54;
  v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = swift_bridgeObjectRetain_n(v12, 2);
  if (v14)
  {
    while (1)
    {
      v15 = v59 & 0xC000000000000001;
      if ((v59 & 0xC000000000000001) == 0)
        break;
      v16 = 0;
      while (1)
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v59);
        v17 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        v18 = v12;
        ObjectType = swift_getObjectType(v12);
        v20 = DOCNode.isFINode.getter(ObjectType);
        swift_unknownObjectRelease(v18);
        if ((v20 & 1) == 0)
          goto LABEL_33;
        ++v16;
        if (v17 == v14)
          goto LABEL_13;
      }
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      if (v12 < 0)
        v56 = v12;
      else
        v56 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v12, 2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v56);
      v14 = v12;
      if (!v12)
        goto LABEL_13;
    }
    v21 = 0;
    v22 = (char *)(v59 + 32);
    while (1)
    {
      v23 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_53;
      v24 = swift_getObjectType(*(_QWORD *)&v22[8 * v21]);
      v12 = DOCNode.isFINode.getter(v24);
      if ((v12 & 1) == 0)
        break;
      ++v21;
      if (v23 == v14)
        goto LABEL_13;
    }
LABEL_33:
    v42 = v59;
    swift_bridgeObjectRelease_n(v59, 2);
    v60 = (unint64_t)_swiftEmptyArrayStorage;
    if (v13)
    {
      if (v42 < 0)
        v52 = v42;
      else
        v52 = v42 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v42, 2);
      v43 = _CocoaArrayWrapper.endIndex.getter(v52);
      if (v43)
        goto LABEL_35;
    }
    else
    {
      v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v42, 2);
      if (v43)
      {
LABEL_35:
        if (v43 < 1)
          goto LABEL_60;
        for (i = 0; i != v43; ++i)
        {
          if (v15)
          {
            v46 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v42);
          }
          else
          {
            v46 = *(void **)(v42 + 8 * i + 32);
            swift_unknownObjectRetain(v46);
          }
          v47 = objc_msgSend(v46, "fpfs_fpItem", v57);
          swift_unknownObjectRelease(v46);
          if (v47)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
            v50 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v49 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v50 >= v49 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
            v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v47);
            specialized Array._endMutation()(v45);
          }
        }
        swift_bridgeObjectRelease(v42);
        v51 = (_QWORD *)v60;
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease(v42);
    v51 = _swiftEmptyArrayStorage;
LABEL_51:
    swift_bridgeObjectRelease(v42);
    v53 = String._bridgeToObjectiveC()();
    v54 = v58;
    objc_msgSend(v58, "encodeBool:forKey:", 0, v53);

    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v51);
    v59 = (unint64_t)String._bridgeToObjectiveC()();
    objc_msgSend(v54, "encodeObject:forKey:", isa, v59);

    return;
  }
LABEL_13:
  v25 = v59;
  swift_bridgeObjectRelease_n(v59, 2);
  if (!v13)
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v25);
    if (v26)
      goto LABEL_15;
LABEL_31:
    swift_bridgeObjectRelease(v25);
    v28 = _swiftEmptyArrayStorage;
LABEL_32:
    v38 = String._bridgeToObjectiveC()();
    v39 = v58;
    objc_msgSend(v58, "encodeBool:forKey:", 1, v38);

    v40 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v28);
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v39, "encodeObject:forKey:", v40, v41);

    return;
  }
  if (v25 < 0)
    v37 = v25;
  else
    v37 = v25 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v25);
  v26 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v26)
    goto LABEL_31;
LABEL_15:
  v60 = (unint64_t)_swiftEmptyArrayStorage;
  sub_100155374(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v27 = 0;
    v28 = (_QWORD *)v60;
    v29 = v25 & 0xC000000000000001;
    do
    {
      if (v29)
      {
        v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
      }
      else
      {
        v30 = *(void **)(v25 + 8 * v27 + 32);
        swift_unknownObjectRetain(v30);
      }
      v31 = objc_msgSend(v30, "nodeURL", v57);
      if (v31)
      {
        v32 = v31;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

        v33 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 0, 1, v33);
      }
      else
      {
        v34 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
      }
      sub_100070EDC((uint64_t)v6, (uint64_t)v9, &qword_100643470);
      swift_unknownObjectRelease(v30);
      v60 = (unint64_t)v28;
      v36 = v28[2];
      v35 = v28[3];
      if (v36 >= v35 >> 1)
      {
        sub_100155374(v35 > 1, v36 + 1, 1);
        v28 = (_QWORD *)v60;
      }
      ++v27;
      v28[2] = v36 + 1;
      sub_100070EDC((uint64_t)v9, (uint64_t)v28+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v36, &qword_100643470);
      v25 = v59;
    }
    while (v26 != v27);
    swift_bridgeObjectRelease(v59);
    goto LABEL_32;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

