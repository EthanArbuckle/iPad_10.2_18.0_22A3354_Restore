void DOCItemCollectionViewController.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(void *a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  __n128 v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v40 = a1;
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  v16 = type metadata accessor for DOCNodeContextMenuConfiguration();
  v17 = swift_dynamicCastClass(a2, v16);
  if (v17)
  {
    v18 = v17;
    v39 = a3;
    v19 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    v41 = a2;
    if (objc_msgSend(v19, "browserViewContext"))
    {

    }
    else
    {
      v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
      v21 = swift_bridgeObjectRetain(v20);
      v22 = sub_100096D88(v21);
      v23 = swift_bridgeObjectRelease(v20);
      if (*((_QWORD *)v22 + 2))
      {
        (*(void (**)(char *, char *, uint64_t, __n128))(v10 + 16))(v8, &v22[(*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v9, v23);
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      v25 = v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v24, 1, v9);
      v26 = swift_bridgeObjectRelease(v22);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v26) == 1)
      {

        sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
      }
      else
      {
        v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v27(v15, v8, v9);
        if ((sub_100191654((uint64_t)v15) & 1) != 0)
        {
          objc_msgSend(v25, "setPreferredCommitStyle:", 0);
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
          v28 = *(unsigned __int8 *)(v10 + 80);
          v29 = (v28 + 32) & ~v28;
          v30 = swift_allocObject(&unk_1005CC110, v29 + v11, v28 | 7);
          v31 = v25;
          v32 = v30;
          v33 = v40;
          *(_QWORD *)(v30 + 16) = v3;
          *(_QWORD *)(v30 + 24) = v33;
          v27((char *)(v30 + v29), v12, v9);
          aBlock[4] = sub_1001CA58C;
          v43 = v32;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10004A82C;
          aBlock[3] = &unk_1005CC128;
          v34 = _Block_copy(aBlock);
          v35 = v43;
          v36 = v3;
          v37 = v33;
          objc_msgSend(v31, "addAnimations:", v34, swift_release(v35).n128_f64[0]);
          _Block_release(v34);

          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);

        }
      }
    }
  }
}

void sub_1001A2BB0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, uint64_t))
{
  id v10;
  id v11;
  id v12;

  v10 = a3;
  v11 = a4;
  swift_unknownObjectRetain(a5);
  v12 = a1;
  a6(v10, v11, a5);

  swift_unknownObjectRelease(a5);
}

void DOCItemCollectionViewController.contextMenuInteraction(_:willDisplayMenuFor:animator:)(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu) = a1;
  v2 = a1;

}

void DOCItemCollectionViewController.contextMenuInteraction(_:willEndFor:animator:)(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1001CA608(a3);
}

id DOCItemCollectionViewController.contextMenuInteraction(_:configurationForMenuAtLocation:)(void *a1, double a2, double a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id result;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  _BYTE *v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v7 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)aBlock - v12;
  if ((v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0)
    || objc_msgSend(v3, "isEditing", v11) && objc_msgSend(a1, "menuAppearance") != (id)2
    || objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "browserViewContext"))
  {
    return 0;
  }
  objc_msgSend(v3, "loadViewIfNeeded");
  result = *(id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    v15 = objc_msgSend(result, "indexPathForItemAtPoint:", a2, a3);
    if (v15)
    {
      v16 = v15;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v15);

      v17 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
    }
    else
    {
      v18 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
    }
    sub_100070EDC((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_100642710);
    if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] != 1)
    {
      v19 = type metadata accessor for IndexPath(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19) == 1)
      {
        if (objc_msgSend(a1, "menuAppearance") == (id)2)
        {
          v20 = sub_1001A3038();
        }
        else
        {
          v21 = swift_allocObject(&unk_1005CC160, 24, 7);
          *(_QWORD *)(v21 + 16) = v3;
          v22 = (void *)objc_opt_self(UIContextMenuConfiguration);
          aBlock[4] = sub_1001D25F0;
          v27 = v21;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1001B1644;
          aBlock[3] = &unk_1005CC178;
          v23 = _Block_copy(aBlock);
          v24 = v27;
          v25 = v3;
          swift_retain();
          v20 = objc_msgSend(v22, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v23, swift_release(v24).n128_f64[0]);
          swift_release(v21);
          _Block_release(v23);
        }
        sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100642710);
        return v20;
      }
    }
    sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100642710);
    return 0;
  }
  __break(1u);
  return result;
}

id sub_1001A3038()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend(v0, "contextMenuForFolder");
  if (v1)
  {
    v2 = swift_allocObject(&unk_1005CE320, 24, 7);
    *(_QWORD *)(v2 + 16) = v1;
    v3 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v8[4] = sub_1001D2A10;
    v9 = v2;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1001B1644;
    v8[3] = &unk_1005CE338;
    v4 = _Block_copy(v8);
    v5 = v9;
    v6 = v1;
    swift_retain();
    v1 = objc_msgSend(v3, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v4, swift_release(v5).n128_f64[0]);
    swift_release(v2);
    _Block_release(v4);

  }
  return v1;
}

void sub_1001A31B8(uint64_t a1)
{
  void *v1;
  id v3;
  _QWORD *v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
    return;
  v3 = v1;
  v4 = sub_1001BAEA4(a1, (uint64_t)v3);

  v5 = (char *)v3;
  v6 = sub_1001BA370((uint64_t)v4, (uint64_t)v5, 0);
  swift_bridgeObjectRelease(v4);

  v20 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v14 = v6;
    else
      v14 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v6);
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        goto LABEL_31;
      }
      for (i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
        }
        else
        {
          v11 = *(void **)(v6 + 8 * i + 32);
          swift_unknownObjectRetain(v11);
        }
        v12 = objc_msgSend(v11, "isActionable", v20);
        if ((_DWORD)v12)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v9 = *(_QWORD *)(v20 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
          v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v11);
          specialized ContiguousArray._endMutation()(v10);
        }
        else
        {
          swift_unknownObjectRelease(v11);
        }
      }
      swift_bridgeObjectRelease(v6);
      v13 = v20;
      if (v20 < 0)
        goto LABEL_27;
      goto LABEL_20;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease(v6);
  v13 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
    goto LABEL_27;
LABEL_20:
  if ((v13 & 0x4000000000000000) != 0)
  {
LABEL_27:
    swift_retain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_release(v13);
    if (!v19)
      goto LABEL_28;
    goto LABEL_22;
  }
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_28:
    swift_release(v13);
    return;
  }
LABEL_22:
  v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v15)
  {
LABEL_31:
    __break(1u);
    return;
  }
  v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(_BYTE *)(v16 + 16) & 1) != 0)
    v17 = *(void **)(*(_QWORD *)v16 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
  else
    v17 = *(void **)(v16 + 8);
  swift_unknownObjectRetain(v17);
  sub_100151504(v13, v17);
  swift_release(v13);
  swift_unknownObjectRelease(v17);
}

void *sub_1001A340C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void *result;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a3;
  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - v13;
  v15 = sub_100195148(a1);
  if ((v15 & 1) != 0)
  {
    v16 = Logger.UI.unsafeMutableAddressor(v15);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v16, v8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.debug.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Skipping item, since it is the Create Item index path.", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v21 = type metadata accessor for IndexPath(0);
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v39;
    return (void *)v22(v23, 1, 1, v21);
  }
  if (IndexPath.count.getter(v15) != 2)
  {
    v26 = type metadata accessor for IndexPath(0);
    v27 = *(_QWORD *)(v26 - 8);
    goto LABEL_12;
  }
  result = *(void **)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
    __break(1u);
    return result;
  }
  if ((objc_msgSend(result, "isGathering") & 1) != 0
    || (*(_BYTE *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) == 0)
  {
    v26 = type metadata accessor for IndexPath(0);
    v30 = *(_QWORD *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v7, a1, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v7, 0, 1, v26);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v26);
    goto LABEL_14;
  }
  v25 = sub_100195148(a1);
  v26 = type metadata accessor for IndexPath(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((v25 & 1) != 0)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v7, 1, 1, v26);
    v29 = v39;
LABEL_15:
    v31 = sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
    v32 = Logger.UI.unsafeMutableAddressor(v31);
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v32, v8);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.debug.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Skipping item, since it could not be resolved.", v36, 2u);
      swift_slowDealloc(v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v21 = type metadata accessor for IndexPath(0);
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
    v23 = v29;
    return (void *)v22(v23, 1, 1, v21);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v7, a1, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26);
LABEL_14:
  v29 = v39;
  if (v28 == 1)
    goto LABEL_15;
  type metadata accessor for IndexPath(0);
  v37 = *(_QWORD *)(v26 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v29, v7, v26);
  return (void *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v29, 0, 1, v26);
}

UIMenu sub_1001A383C()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  UIMenuElementSize preferredElementSize;
  Swift::String v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::OpaquePointer v18;
  UIImage_optional v19;

  v1 = sub_100149C98((id)1);
  v2 = (uint64_t)v1;
  v3 = v1[2];
  if (v3)
  {
    swift_bridgeObjectRetain(v1);
    for (i = 0; i != v3; ++i)
    {
      v5 = *(_QWORD *)(v2 + 8 * i + 32);
      v6 = swift_bridgeObjectRetain(v5);
      sub_100130470(v6);
    }
    swift_bridgeObjectRelease(v2);
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v15 = _swiftEmptyArrayStorage;
    else
      v15 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v7)
  {
    v8 = v0;
    sub_1001BD4E8(v2, v8);
    v10 = v9;
    swift_bridgeObjectRelease(v2);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v16 = v10;
      else
        v16 = v10 & 0xFFFFFFFFFFFFFF8;
      v17 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      swift_bridgeObjectRetain(v10);
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v16, v17);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = swift_bridgeObjectRetain(v10);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v11);
      sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      preferredElementSize = v10;
    }
    swift_bridgeObjectRelease(v10);
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v19.value.super.isa = 0;
    v19.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v19, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v18);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    return 0;
  }
}

Class sub_1001A3A18@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, Class *a3@<X8>)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Class result;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  uint64_t v24;
  _QWORD *preferredElementSize;
  Swift::String v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  Swift::OpaquePointer v31;
  Class *v32;
  void *v33;
  UIImage_optional v34;

  v3 = a2;
  v5 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2;
    if (v6)
      goto LABEL_3;
LABEL_21:

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_22:
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v29 = _swiftEmptyArrayStorage;
      else
        v29 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      v30 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
      preferredElementSize = (_QWORD *)_bridgeCocoaArray<A>(_:)(v29, v30);
      goto LABEL_15;
    }
LABEL_14:
    v24 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
    sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
    preferredElementSize = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v34.value.super.isa = 0;
    v34.is_nil = 0;
    result = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v34, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v31).super.super.isa;
    *a3 = result;
    return result;
  }
LABEL_17:
  if (v5 < 0)
    v27 = v5;
  else
    v27 = v5 & 0xFFFFFFFFFFFFFF8;
  v28 = v3;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_21;
LABEL_3:
  result = (Class)specialized ContiguousArray.reserveCapacity(_:)(v6);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v32 = a3;
    v33 = v3;
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v9 = 0;
    do
    {
      if (v6 == v9)
      {
        __break(1u);
        goto LABEL_17;
      }
      if ((v5 & 0xC000000000000001) != 0)
        v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
      else
        v21 = (char *)*(id *)(v5 + 8 * v9 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, "action");
      v14 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle + 8];
      if (v14)
      {
        v11 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle];
        v13 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle + 8];
      }
      else
      {
        v10 = objc_msgSend(v22, "title");
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;

        v14 = 0;
      }
      ++v9;
      swift_bridgeObjectRetain(v14);
      a3 = (Class *)objc_msgSend(v22, "image");
      v3 = (char *)swift_allocObject(&unk_1005CBE18, 24, 7);
      swift_unknownObjectWeakInit(v3 + 16);
      v15 = swift_allocObject(&unk_1005CD998, 32, 7);
      *(_QWORD *)(v15 + 16) = v3;
      *(_QWORD *)(v15 + 24) = v23;
      v17 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v13, 0, 0, a3, 0, 0, 0, v16, 0, 0, 0, sub_1001D0600, v15);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v19 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
      v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized ContiguousArray._endMutation()(v20);
    }
    while (v6 != v9);

    a3 = v32;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      goto LABEL_22;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_1001A3D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = (id)swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, "performSelector:withObject:", a3, a1);
    return v8;
  }
  return result;
}

id DOCItemCollectionViewController.targetPreview(for:)(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  double v14;
  id v15;
  id result;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  CGAffineTransform v30;
  char v31[24];

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v31, 0, 0).n128_u64[0];
  v15 = 0;
  if (*(_QWORD *)v13)
    return v15;
  v15 = objc_msgSend(a1, "window", v14);

  if (!v15)
    return v15;
  objc_msgSend(v1, "loadViewIfNeeded");
  result = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    v17 = objc_msgSend(result, "indexPathForCell:", a1);
    if (v17)
    {
      v18 = v17;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v17);

      v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v19(v5, v9, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v19(v12, v5, v6);
        v20 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
        v21 = sub_100173CF8((uint64_t)v12);
        objc_msgSend(v20, "bounds");
        objc_msgSend(a1, "convertPoint:fromCoordinateSpace:", v20);
        v23 = v22;
        v25 = v24;
        v26 = objc_msgSend(v21, "visiblePath");
        if (v26)
        {
          v27 = v26;
          CGAffineTransformMakeTranslation(&v30, -v23, -v25);
          objc_msgSend(v27, "applyTransform:", &v30);

        }
        v28 = objc_allocWithZone((Class)UITargetedPreview);
        v29 = v20;
        v15 = objc_msgSend(v28, "initWithView:parameters:", v29, v21);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        return v15;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A4148(void *a1, uint64_t (*a2)(void *, char *, __n128))
{
  char *v2;
  id *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = (id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v5 = *v4;
  v6 = static os_log_type_t.debug.getter(v5);
  v7 = sub_10006922C((uint64_t *)&unk_100644560);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004D9670;
  v9 = objc_msgSend(a1, "displayName");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)(v8 + 56) = &type metadata for String;
  v13 = sub_10006A638();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v12;
  os_log(_:dso:log:type:_:)("Getting current collection for item %@", 38, 2, &_mh_execute_header, v5, v6, v8);

  swift_bridgeObjectRelease(v8);
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v14);
  v15 = sub_10006922C((uint64_t *)&unk_1006424B0);
  LOBYTE(v12) = Array<A>.contains(node:)(a1, v14, v15);
  v16 = swift_bridgeObjectRelease(v14);
  if ((v12 & 1) != 0)
  {
    v17 = a1;
    v18 = v2;
  }
  else
  {
    v19 = *v4;
    v20 = static os_log_type_t.debug.getter(v19);
    v21 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v21 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v21 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v21 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v21 + 32) = v2;
    v22 = v2;
    v23 = objc_msgSend(a1, "displayName");
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    *(_QWORD *)(v21 + 96) = &type metadata for String;
    *(_QWORD *)(v21 + 104) = v13;
    *(_QWORD *)(v21 + 72) = v24;
    *(_QWORD *)(v21 + 80) = v26;
    os_log(_:dso:log:type:_:)("The current collection %@ doesn't contain item %@", 49, 2, &_mh_execute_header, v19, v20, v21);

    v16 = swift_bridgeObjectRelease(v21);
    v17 = 0;
    v18 = 0;
  }
  return a2(v17, v18, v16);
}

void sub_1001A438C(void *a1, uint64_t a2, void *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  void **v32;
  void **v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void **v37;
  uint8_t *v38;
  id v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  id v53;
  char *v54;
  id v55;
  _QWORD *v56;
  uint64_t v57;
  void **v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint8_t *v65;
  void **v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  id v73;
  _QWORD *v74;
  void *v75;
  _QWORD *v76;
  id v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  void **v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  _QWORD v93[3];
  char v94[8];
  uint64_t v95;
  void **aBlock;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  _QWORD *v101;

  v87 = a6;
  v91 = a3;
  v92 = a4;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v86 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v84 = (void **)((char *)&v81 - v13);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - v19;
  __chkstk_darwin(v21);
  v24 = (char *)&v81 - v23;
  v90 = a1;
  if (a2)
  {
    v85 = v20;
    v83 = (_QWORD *)v9;
    v25 = swift_errorRetain(a2);
    v26 = Logger.UI.unsafeMutableAddressor(v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v24, v26, v14);
    swift_errorRetain(a2);
    v27 = swift_errorRetain(a2);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(12, -1);
      v88 = v15;
      v31 = (uint8_t *)v30;
      v32 = (void **)swift_slowAlloc(32, -1);
      v82 = v10;
      v33 = v32;
      aBlock = v32;
      v89 = v14;
      *(_DWORD *)v31 = 136315138;
      v81 = v17;
      swift_getErrorValue(a2, v94, v93);
      v34 = Error.localizedDescription.getter(v93[1], v93[2]);
      v36 = v35;
      v95 = sub_1000544FC(v34, v35, (uint64_t *)&aBlock);
      v17 = v81;
      v14 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
      swift_bridgeObjectRelease(v36);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error while trying to fetch the url %s", v31, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      v37 = v33;
      v10 = v82;
      swift_slowDealloc(v37, -1, -1);
      v38 = v31;
      v15 = v88;
      swift_slowDealloc(v38, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    v22 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    v9 = (uint64_t)v83;
    a1 = v90;
    v20 = v85;
  }
  if (a1)
  {
    v39 = a1;
    v40 = Logger.UI.unsafeMutableAddressor(v39);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v40, v14);
    v41 = v86;
    (*(void (**)(char *, id, uint64_t))(v10 + 16))(v86, v91, v9);
    v91 = v39;
    v42 = Logger.logObject.getter(v91);
    v43 = static os_log_type_t.debug.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = v41;
      v45 = swift_slowAlloc(22, -1);
      v46 = swift_slowAlloc(8, -1);
      v89 = v14;
      v83 = (_QWORD *)v46;
      v84 = (void **)swift_slowAlloc(32, -1);
      aBlock = v84;
      *(_DWORD *)v45 = 136315394;
      v85 = a5;
      v47 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v48 = v44;
      v49 = dispatch thunk of CustomStringConvertible.description.getter(v9, v47);
      v51 = v50;
      v95 = sub_1000544FC(v49, v50, (uint64_t *)&aBlock);
      v88 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
      v52 = swift_bridgeObjectRelease(v51);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v48, v9, v52);
      *(_WORD *)(v45 + 12) = 2112;
      v53 = v91;
      v95 = (uint64_t)v91;
      v54 = v17;
      v55 = v91;
      a5 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
      v56 = v83;
      *v83 = v90;

      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Fetching item for url %s item %@ to be able to get the transition controller", (uint8_t *)v45, 0x16u);
      v57 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v56, 1, v57);
      swift_slowDealloc(v56, -1, -1);
      v58 = v84;
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v54, v89);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);

      v53 = v91;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    v73 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v74 = (_QWORD *)swift_allocObject(&unk_1005CD790, 48, 7);
    v74[2] = v87;
    v74[3] = v53;
    v74[4] = v92;
    v74[5] = a5;
    v100 = sub_1001D0324;
    v101 = v74;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_100175118;
    v99 = &unk_1005CD7A8;
    v75 = _Block_copy(&aBlock);
    v76 = v101;
    v77 = v53;
    swift_retain();
    swift_retain();
    objc_msgSend(v73, "fetchURLForItem:completionHandler:", v77, v75, swift_release(v76).n128_f64[0]);
    _Block_release(v75);

  }
  else
  {
    v59 = Logger.UI.unsafeMutableAddressor(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v59, v14);
    v60 = v84;
    v61 = (*(uint64_t (**)(void **, id, uint64_t))(v10 + 16))(v84, v91, v9);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc(12, -1);
      v89 = v14;
      v65 = (uint8_t *)v64;
      v66 = (void **)swift_slowAlloc(32, -1);
      v82 = v10;
      v67 = v66;
      aBlock = v66;
      v85 = v20;
      *(_DWORD *)v65 = 136315138;
      v88 = v15;
      v68 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v69 = dispatch thunk of CustomStringConvertible.description.getter(v9, v68);
      v71 = v70;
      v95 = sub_1000544FC(v69, v70, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &aBlock);
      v72 = swift_bridgeObjectRelease(v71);
      (*(void (**)(void **, uint64_t, __n128))(v82 + 8))(v60, v9, v72);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to fetch item for url: %s to be able to get the transition controller", v65, 0xCu);
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v89);
    }
    else
    {
      (*(void (**)(void **, uint64_t))(v10 + 8))(v60, v9);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    v78 = swift_allocObject(&unk_1005CD740, 32, 7);
    *(_QWORD *)(v78 + 16) = v92;
    *(_QWORD *)(v78 + 24) = a5;
    v100 = sub_1001D02C8;
    v101 = (_QWORD *)v78;
    aBlock = _NSConcreteStackBlock;
    v97 = 1107296256;
    v98 = sub_10004A82C;
    v99 = &unk_1005CD758;
    v79 = _Block_copy(&aBlock);
    v80 = v101;
    swift_retain();
    swift_release(v80);
    DOCRunInMainThread(v79);
    _Block_release(v79);
  }
}

void sub_1001A4BE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v25 = a5;
  v10 = sub_10006922C(&qword_100643470);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v13, &qword_100643470);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1005CD7E0, v18 + 16, v14 | 7);
  sub_100070EDC((uint64_t)v13, v19 + v15, &qword_100643470);
  *(_QWORD *)(v19 + v16) = a3;
  *(_QWORD *)(v19 + v17) = a4;
  v20 = (_QWORD *)(v19 + v18);
  *v20 = v25;
  v20[1] = a6;
  aBlock[4] = sub_1001D0408;
  v27 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CD7F8;
  v21 = _Block_copy(aBlock);
  v22 = v27;
  swift_retain();
  v23 = a4;
  swift_retain();
  swift_release(v22);
  DOCRunInMainThread(v21);
  _Block_release(v21);
}

uint64_t sub_1001A4D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *, __n128), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  char *v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, char *, __n128);
  uint64_t v42;
  char v43[32];
  char v44[24];

  v41 = a4;
  v42 = a5;
  v8 = type metadata accessor for Logger(0);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v16, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v21 = sub_10000CB4C((uint64_t)v16, &qword_100643470);
LABEL_10:
    v31 = Logger.UI.unsafeMutableAddressor(v21);
    v33 = v39;
    v32 = v40;
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 16))(v10, v31, v40);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Item is not part of the current collection", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
    return ((uint64_t (*)(_QWORD, _QWORD))v41)(0, 0);
  }
  v22 = a2 + 16;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  swift_beginAccess(a2 + 16, v44, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    goto LABEL_9;
  v24 = (char *)Strong;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v20, v17);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
  if (!*(_QWORD *)&v24[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    __break(1u);
    return result;
  }
  v26 = sub_10004FD50();
  __chkstk_darwin(v26);
  *(&v38 - 2) = a3;
  *(&v38 - 1) = (uint64_t)v13;
  v27 = (void *)sub_100174BD4(sub_100146530, (uint64_t)(&v38 - 4), v26);

  swift_bridgeObjectRelease(v26);
  sub_10000CB4C((uint64_t)v13, &qword_100643470);
  if (!v27)
  {
LABEL_9:
    v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    goto LABEL_10;
  }
  swift_beginAccess(v22, v43, 0, 0);
  v28 = swift_unknownObjectWeakLoadStrong(v22);
  if (v28)
  {
    v29 = (void *)v28;
    sub_1001A4148(v27, v41);

  }
  v30 = swift_unknownObjectRelease(v27);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v18 + 8))(v20, v17, v30);
}

double sub_1001A50A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;

  v41 = a2;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.UI.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  swift_bridgeObjectRetain_n(a1, 2);
  v14 = v4;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v39 = a3;
    v18 = v17;
    v37 = swift_slowAlloc(64, -1);
    v43 = v37;
    *(_DWORD *)v18 = 136315394;
    v19 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v38 = v8;
    v20 = v19;
    v21 = swift_bridgeObjectRetain(a1);
    v22 = Array.description.getter(v21, v20);
    v40 = a4;
    v24 = v23;
    swift_bridgeObjectRelease(a1);
    v42 = (id)sub_1000544FC(v22, v24, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    swift_bridgeObjectRelease_n(a1, 2);
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v24).n128_u64[0];
    *(_WORD *)(v18 + 12) = 2080;
    v42 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v25);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v27 = String.init<A>(describing:)(&v42, v26);
    v29 = v28;
    v42 = (id)sub_1000544FC(v27, v28, &v43);
    a4 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);

    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[REVEAL]: revealing items: %s source: %s", (uint8_t *)v18, 0x16u);
    v30 = v37;
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v31 = v18;
    a3 = v39;
    swift_slowDealloc(v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v38);
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v32 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v33 = swift_allocObject(&unk_1005CD858, 56, 7);
  *(_QWORD *)(v33 + 16) = v14;
  *(_BYTE *)(v33 + 24) = v41 & 1;
  *(_QWORD *)(v33 + 32) = a3;
  *(_QWORD *)(v33 + 40) = a4;
  *(_QWORD *)(v33 + 48) = a1;
  swift_bridgeObjectRetain(a1);
  v34 = v14;
  swift_retain();
  sub_10047BB5C(a1, (uint64_t)sub_1001D049C, v33);

  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

void sub_1001A53E8(uint64_t a1, void *a2, int a3, void (*a4)(_QWORD), uint64_t a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  double v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  double v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  void *v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  void *v113;
  double v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  os_log_t v120;
  char *v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  os_log_t v126;
  id v127;
  NSObject *v128;
  os_log_type_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  double v134;
  id v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  void (*v140)(_QWORD);
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  char *v144;
  uint64_t v145;
  void *v146;
  id v147;
  id v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  id v153;
  char *v154;
  char *v155;
  os_log_t v156;
  char *v157;
  id v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  void (*v167)(_QWORD);
  uint64_t v168;
  uint64_t aBlock[5];
  uint64_t v170;
  id v171;
  _BYTE v172[16];

  v158 = a6;
  v167 = a4;
  v168 = a5;
  v165 = a3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v161 = v8;
  v162 = v9;
  __chkstk_darwin(v8);
  v160 = (char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v156 = (os_log_t)((char *)&v150 - v12);
  __chkstk_darwin(v13);
  v154 = (char *)&v150 - v14;
  v15 = type metadata accessor for UTType(0);
  v163 = *(_QWORD *)(v15 - 8);
  v164 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v18);
  v155 = (char *)&v150 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v150 - v21;
  v159 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (char *)&v150 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10006922C((uint64_t *)&unk_100644BC0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (id *)((char *)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  v31 = (id *)((char *)&v150 - v30);
  v32 = a2;
  v33 = (uint64_t)sub_1001BB240(a1, (uint64_t)v32);
  v166 = (uint64_t)v32;

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v40 = v33;
    else
      v40 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v33);
    if (v41 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    v34 = swift_allocObject(&unk_1005CD8A8, 56, 7);
    v35 = (void *)v166;
    *(_QWORD *)(v34 + 16) = v166;
    *(_QWORD *)(v34 + 24) = v33;
    *(_BYTE *)(v34 + 32) = v165 & 1;
    v36 = v168;
    *(_QWORD *)(v34 + 40) = v167;
    *(_QWORD *)(v34 + 48) = v36;
    aBlock[4] = (uint64_t)sub_1001D0528;
    v170 = v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005CD8C0;
    v37 = _Block_copy(aBlock);
    v38 = v170;
    v39 = v35;
    swift_retain();
    swift_release(v38);
    DOCRunInMainThread(v37);
    _Block_release(v37);
    return;
  }
  swift_bridgeObjectRelease(v33);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_11;
  v43 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  sub_1000271D4(v43, (uint64_t)v31, (uint64_t *)&unk_100644BC0);
  v153 = *v31;
  v44 = (char *)v31 + *(int *)(v25 + 48);
  v45 = v159;
  v152 = *(void (**)(char *, uint64_t))(v23 + 8);
  v152(v44, v159);
  sub_1000271D4(v43, (uint64_t)v28, (uint64_t *)&unk_100644BC0);

  v46 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v46(v22, (char *)v28 + *(int *)(v25 + 48), v45);
  v47 = *(char **)(v23 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v47)(v22, 0, 1, v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v45) == 1)
  {

    v42 = sub_10000CB4C((uint64_t)v22, &qword_100643470);
LABEL_11:
    v48 = Logger.UI.unsafeMutableAddressor(v42);
    v49 = v161;
    v50 = v162;
    v51 = v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v160, v48, v161);
    swift_bridgeObjectRetain_n(a1, 2);
    v52 = v158;
    v53 = swift_bridgeObjectRetain_n(v158, 2);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = v52;
      v57 = swift_slowAlloc(32, -1);
      v166 = swift_slowAlloc(96, -1);
      aBlock[0] = v166;
      *(_DWORD *)v57 = 136315650;
      v171 = (id)sub_1000544FC(0xD000000000000032, 0x8000000100515F50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      *(_WORD *)(v57 + 12) = 2080;
      v58 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v59 = swift_bridgeObjectRetain(v56);
      v60 = Array.description.getter(v59, v58);
      v62 = v61;
      swift_bridgeObjectRelease(v56);
      v171 = (id)sub_1000544FC(v60, v62, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      swift_bridgeObjectRelease_n(v56, 2);
      swift_bridgeObjectRelease(v62);
      *(_WORD *)(v57 + 22) = 2080;
      v63 = swift_bridgeObjectRetain(a1);
      v64 = Array.description.getter(v63, v25);
      v66 = v65;
      swift_bridgeObjectRelease(a1);
      v171 = (id)sub_1000544FC(v64, v66, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v66);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "[REVEAL]: %s Could not fetchURLPairs or get an item to search for. Items provided: %s, URLPairs: %s", (uint8_t *)v57, 0x20u);
      v67 = v166;
      swift_arrayDestroy(v166, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v57, -1, -1);

      (*(void (**)(char *, uint64_t))(v162 + 8))(v160, v161);
    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease_n(v52, 2);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v49);
    }
    v167(0);
    return;
  }
  v68 = v153;
  v160 = v47;
  v69 = ((uint64_t (*)(char *, char *, uint64_t))v46)(v157, v22, v45);
  v70 = (void *)v166;
  if (*(_BYTE *)(*(_QWORD *)(v166 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
                + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                + 8) != 1)
    goto LABEL_27;
  v151 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v158 = *(id *)(v166 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  v71 = objc_msgSend(v158, "recentDocumentsContentTypes");
  v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v164);

  v73 = *(_QWORD *)(v72 + 16);
  if (v73)
  {
    v74 = v72 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
    v75 = *(_QWORD *)(v163 + 72);
    swift_bridgeObjectRetain(v72);
    v76 = v68;
    while (1)
    {
      v77 = objc_msgSend(v76, "contentType");
      static UTType._unconditionallyBridgeFromObjectiveC(_:)(v77);

      LOBYTE(v77) = UTType.conforms(to:)(v74);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v17, v164);
      if ((v77 & 1) != 0)
        break;
      v74 += v75;
      --v73;
      v76 = v68;
      if (!v73)
      {
        v78 = swift_bridgeObjectRelease_n(v72, 2);
        v70 = (void *)v166;
        goto LABEL_22;
      }
    }
    v69 = swift_bridgeObjectRelease_n(v72, 2);
LABEL_27:
    v164 = v23;
    v123 = Logger.UI.unsafeMutableAddressor(v69);
    v124 = v161;
    v125 = v162;
    v126 = v156;
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v162 + 16))(v156, v123, v161);
    v127 = v68;
    v128 = Logger.logObject.getter(v127);
    v129 = static os_log_type_t.default.getter(v128);
    v130 = v129;
    if (os_log_type_enabled(v128, v129))
    {
      v131 = swift_slowAlloc(22, -1);
      LODWORD(v163) = v130;
      v132 = v131;
      v133 = swift_slowAlloc(64, -1);
      aBlock[0] = v133;
      *(_DWORD *)v132 = 136315394;
      v171 = (id)sub_1000544FC(0xD000000000000032, 0x8000000100515F50, aBlock);
      *(_QWORD *)&v134 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172).n128_u64[0];
      *(_WORD *)(v132 + 12) = 2080;
      v135 = objc_msgSend(v127, "displayName", v134);
      v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v135);
      v138 = v137;

      v139 = v136;
      v45 = v159;
      v171 = (id)sub_1000544FC(v139, v138, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);

      swift_bridgeObjectRelease(v138);
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v163, "[REVEAL]: %s - Waiting for pending node: %s", (uint8_t *)v132, 0x16u);
      swift_arrayDestroy(v133, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v133, -1, -1);
      swift_slowDealloc(v132, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v162 + 8))(v156, v124);
    }
    else
    {

      (*(void (**)(os_log_t, uint64_t))(v125 + 8))(v126, v124);
    }
    v140 = v167;
    v141 = v168;
    v142 = v152;
    v143 = (uint64_t)v155;
    v144 = v157;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v155, v157, v45);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v160)(v143, 0, 1, v45);
    v145 = swift_allocObject(&unk_1005CD880, 56, 7);
    v146 = (void *)v166;
    *(_QWORD *)(v145 + 16) = v127;
    *(_QWORD *)(v145 + 24) = v146;
    *(_BYTE *)(v145 + 32) = v165 & 1;
    *(_QWORD *)(v145 + 40) = v140;
    *(_QWORD *)(v145 + 48) = v141;
    v147 = v127;
    v148 = v146;
    swift_retain();
    v149 = v147;
    sub_1001B4164(v149, v143, (uint64_t)sub_1001D04E4, v145, v148);

    swift_release(v145);
    sub_10000CB4C(v143, &qword_100643470);
    v142(v144, v45);
    return;
  }
  swift_bridgeObjectRelease(v72);
  v76 = v68;
LABEL_22:
  v79 = Logger.UI.unsafeMutableAddressor(v78);
  v80 = v161;
  v81 = v162;
  v82 = v154;
  (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v154, v79, v161);
  v83 = v70;
  v84 = v76;
  v85 = v83;
  v86 = v84;
  v87 = v85;
  v88 = v86;
  v89 = v87;
  v90 = v88;
  v91 = Logger.logObject.getter(v90);
  v92 = static os_log_type_t.default.getter(v91);
  v165 = v92;
  if (os_log_type_enabled(v91, v92))
  {
    v93 = swift_slowAlloc(52, -1);
    v160 = (char *)swift_slowAlloc(160, -1);
    aBlock[0] = (uint64_t)v160;
    *(_DWORD *)v93 = 136316162;
    v156 = v91;
    v171 = (id)sub_1000544FC(0xD000000000000032, 0x8000000100515F50, aBlock);
    *(_QWORD *)&v94 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172).n128_u64[0];
    *(_WORD *)(v93 + 12) = 2080;
    v95 = objc_msgSend(v90, "debugDescription", v94);
    v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
    v98 = v97;

    v45 = v159;
    v171 = (id)sub_1000544FC(v96, v98, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);

    *(_QWORD *)&v99 = swift_bridgeObjectRelease(v98).n128_u64[0];
    *(_WORD *)(v93 + 22) = 2080;
    v100 = objc_msgSend(v90, "contentType", v99);
    static UTType._unconditionallyBridgeFromObjectiveC(_:)(v100);

    v102 = UTType.identifier.getter(v101);
    v104 = v103;
    v105 = v17;
    v106 = v89;
    v107 = v164;
    (*(void (**)(char *, uint64_t))(v163 + 8))(v105, v164);
    v171 = (id)sub_1000544FC(v102, v104, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);

    *(_QWORD *)&v108 = swift_bridgeObjectRelease(v104).n128_u64[0];
    *(_WORD *)(v93 + 32) = 2080;
    v171 = objc_msgSend(*(id *)(v166 + v151), "identifier", v108);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v110 = String.init<A>(describing:)(&v171, v109);
    v112 = v111;
    v171 = (id)sub_1000544FC(v110, v111, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);

    v113 = v106;
    *(_QWORD *)&v114 = swift_bridgeObjectRelease(v112).n128_u64[0];
    *(_WORD *)(v93 + 42) = 2080;
    v115 = objc_msgSend(v158, "recentDocumentsContentTypes", v114);
    v116 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v115, v107);

    v117 = Array.description.getter(v116, v107);
    v119 = v118;
    swift_bridgeObjectRelease(v116);
    v171 = (id)sub_1000544FC(v117, v119, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);

    swift_bridgeObjectRelease(v119);
    v120 = v156;
    _os_log_impl((void *)&_mh_execute_header, v156, (os_log_type_t)v165, "[REVEAL]: %s - Can not reveal item: %s because node is a type: %s not supported by spotlight-backed collection source: %s because recentDocumentsContentTypes does not contain it: %s", (uint8_t *)v93, 0x34u);
    v121 = v160;
    swift_arrayDestroy(v160, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v121, -1, -1);
    swift_slowDealloc(v93, -1, -1);

    (*(void (**)(char *, uint64_t))(v162 + 8))(v154, v161);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
  }
  v122 = v152;
  v167(0);

  v122(v157, v45);
}

uint64_t sub_1001A6218(uint64_t a1, uint64_t a2, int a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10018D330(a2, 1, a3);
  v12 = Logger.UI.unsafeMutableAddressor(v11);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[REVEAL]: found matching nodes, calling completion block", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a4(1);
}

void sub_1001A6350(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;

  v12 = swift_allocObject(&unk_1005CD948, 64, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_BYTE *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  v17[4] = sub_1001D05C8;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = &unk_1005CD960;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_unknownObjectRetain(a1);
  v15 = a2;
  v16 = a3;
  swift_retain();
  swift_release(v14);
  DOCRunInMainThread(v13);
  _Block_release(v13);
}

uint64_t sub_1001A6434(void *a1, void *a2, void *a3, int a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  id v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  os_log_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  os_log_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  char *v94;
  id v95;
  uint64_t v96;

  LODWORD(v8) = a4;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v94 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v85 - v16;
  __chkstk_darwin(v18);
  v21 = (char *)&v85 - v20;
  v92 = a6;
  v93 = a5;
  v91 = v19;
  if (a1)
  {
    v22 = swift_unknownObjectRetain(a1);
    v23 = Logger.UI.unsafeMutableAddressor(v22);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v24(v17, v23, v12);
    v25 = a2;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc(22, -1);
      LODWORD(v89) = v8;
      v8 = v29;
      v88 = swift_slowAlloc(64, -1);
      v96 = v88;
      *(_DWORD *)v8 = 136315394;
      v90 = v13;
      v95 = (id)sub_1000544FC(0xD000000000000032, 0x8000000100515F50, &v96);
      *(_QWORD *)&v30 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96).n128_u64[0];
      *(_WORD *)(v8 + 12) = 2080;
      v31 = objc_msgSend(v25, "displayName", v30, v8 + 14);
      v87 = v26;
      v32 = v31;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      LODWORD(v86) = v28;
      v34 = v24;
      v35 = a1;
      v36 = a3;
      v37 = v33;
      v39 = v38;

      v40 = v37;
      a3 = v36;
      a1 = v35;
      v24 = v34;
      v95 = (id)sub_1000544FC(v40, v39, &v96);
      v12 = v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);

      swift_bridgeObjectRelease(v39);
      v41 = v87;
      _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v86, "[REVEAL]: %s - Found matching node for %s", (uint8_t *)v8, 0x16u);
      v42 = v88;
      swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      v43 = v8;
      LOBYTE(v8) = v89;
      swift_slowDealloc(v43, -1, -1);

      v44 = *(void (**)(char *, uint64_t))(v90 + 8);
    }
    else
    {

      v44 = *(void (**)(char *, uint64_t))(v13 + 8);
    }
    v44(v17, v12);
    v63 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v64 = swift_allocObject(v63, 40, 7);
    *(_OWORD *)(v64 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v64 + 32) = a1;
    v96 = v64;
    specialized Array._endMutation()(v64);
    v65 = v96;
    swift_unknownObjectRetain(a1);
    sub_10018D330(v65, 1, v8 & 1);
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v65);
  }
  else
  {
    v45 = Logger.UI.unsafeMutableAddressor(v19);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v24(v21, v45, v12);
    v46 = a2;
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.error.getter(v47);
    v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      v50 = swift_slowAlloc(22, -1);
      v90 = v13;
      v51 = v50;
      v89 = swift_slowAlloc(64, -1);
      v96 = v89;
      *(_DWORD *)v51 = 136315394;
      LODWORD(v88) = v49;
      v95 = (id)sub_1000544FC(0xD000000000000032, 0x8000000100515F50, &v96);
      *(_QWORD *)&v52 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96).n128_u64[0];
      *(_WORD *)(v51 + 12) = 2080;
      v86 = v51 + 14;
      v53 = objc_msgSend(v46, "displayName", v52);
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v87 = v47;
      v55 = a3;
      v56 = v54;
      v58 = v57;

      v59 = v56;
      a3 = v55;
      a1 = 0;
      v95 = (id)sub_1000544FC(v59, v58, &v96);
      v12 = v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);

      swift_bridgeObjectRelease(v58);
      v60 = v87;
      _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v88, "[REVEAL]: %s - Couldn't Find matching node for %s", (uint8_t *)v51, 0x16u);
      v61 = v89;
      swift_arrayDestroy(v89, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v51, -1, -1);

      v44 = *(void (**)(char *, uint64_t))(v90 + 8);
    }
    else
    {

      v44 = *(void (**)(char *, uint64_t))(v13 + 8);
    }
    v62 = ((uint64_t (*)(char *, uint64_t))v44)(v21, v12);
  }
  v66 = Logger.UI.unsafeMutableAddressor(v62);
  v67 = v94;
  v24(v94, v66, v12);
  swift_unknownObjectRetain_n(a1, 2);
  v68 = a3;
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc(22, -1);
    v72 = swift_slowAlloc(64, -1);
    v95 = a1;
    v96 = v72;
    *(_DWORD *)v71 = 136315394;
    v73 = sub_10006922C(&qword_100652EB0);
    v74 = Optional.debugDescription.getter(v73);
    v76 = v75;
    v95 = (id)sub_1000544FC(v74, v75, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);
    swift_unknownObjectRelease_n(a1, 2);
    *(_QWORD *)&v77 = swift_bridgeObjectRelease(v76).n128_u64[0];
    *(_WORD *)(v71 + 12) = 2080;
    v95 = objc_msgSend(*(id *)&v68[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier", v77);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v79 = String.init<A>(describing:)(&v95, v78);
    v81 = v80;
    v95 = (id)sub_1000544FC(v79, v80, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96);

    swift_bridgeObjectRelease(v81);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "[REVEAL]: calling completion block after waiting for pending node. Found node: %s. source: %s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);

    v82 = v94;
    v83 = v91;
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    v82 = v67;
    v83 = v12;
  }
  v44(v82, v83);
  return v93(1);
}

void sub_1001A6CD0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void *v40;
  _QWORD *v41;

  v35 = a5;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10000CB4C((uint64_t)v15, &qword_100643470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    v34 = a3;
    if (!*(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    v20 = sub_10004FD50();
    __chkstk_darwin(v20);
    *(&v33 - 2) = a4;
    *(&v33 - 1) = (uint64_t)v12;
    v21 = sub_100174BD4(sub_100146530, (uint64_t)(&v33 - 4), v20);
    swift_bridgeObjectRelease(v20);
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    if (v21)
    {
      v22 = (_QWORD *)swift_allocObject(&unk_1005CD678, 48, 7);
      v24 = v34;
      v23 = v35;
      v22[2] = v34;
      v22[3] = v21;
      v22[4] = v23;
      v22[5] = a6;
      v40 = sub_1001D0174;
      v41 = v22;
      aBlock = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_10004A82C;
      v39 = &unk_1005CD690;
      v25 = _Block_copy(&aBlock);
      v26 = v41;
      v27 = v24;
      swift_unknownObjectRetain(v21);
      swift_retain();
      swift_release(v26);
      DOCRunInMainThread(v25);
      _Block_release(v25);
      v28 = swift_unknownObjectRelease(v21);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v28);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v29 = v35;
  v30 = swift_allocObject(&unk_1005CD628, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a6;
  v40 = sub_10010C18C;
  v41 = (_QWORD *)v30;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_10004A82C;
  v39 = &unk_1005CD640;
  v31 = _Block_copy(&aBlock);
  v32 = v41;
  swift_retain();
  swift_release(v32);
  DOCRunInMainThread(v31);
  _Block_release(v31);
}

void sub_1001A6FF4(void *a1, void *a2, void (*a3)(id, __n128), uint64_t a4)
{
  char *v8;

  swift_retain();
  v8 = a1;
  sub_1001CA9D8(a2, v8, a3, a4, (uint64_t)v8);
  swift_release(a4);

}

void sub_1001A7060(void *a1, void *a2, void (*a3)(id, __n128), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  id v40;
  double v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  void (*v45)(id, __n128);
  objc_super v46;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && a1)
  {
    v45 = a3;
    v14 = a2;
    v15 = swift_unknownObjectRetain(a1);
    v16 = *(id *)DOCLog.UI.unsafeMutableAddressor(v15);
    v17 = static os_log_type_t.debug.getter(v16);
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 112, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D4CE0;
    v20 = objc_msgSend(a1, "description");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_10006A638();
    *(_QWORD *)(v19 + 32) = v21;
    *(_QWORD *)(v19 + 40) = v23;
    *(_QWORD *)(v19 + 96) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v19 + 104) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v19 + 72) = v14;
    v24 = v14;
    os_log(_:dso:log:type:_:)("Getting transition controller for item %@ collection %@", 55, 2, &_mh_execute_header, v16, v17, v19);

    v25 = objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "sceneIdentifier", swift_bridgeObjectRelease(v19).n128_f64[0]);
    if (v25)
    {
      v26 = v25;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v35 = (objc_class *)type metadata accessor for DOCServiceTransitionController();
    v36 = (char *)objc_allocWithZone(v35);
    v37 = swift_unknownObjectWeakInit(&v36[OBJC_IVAR____TtC5Files30DOCServiceTransitionController_itemCollection]);
    v38 = (uint64_t *)&v36[OBJC_IVAR____TtC5Files30DOCServiceTransitionController_sceneIdentifier];
    *v38 = 0;
    v38[1] = 0;
    swift_unknownObjectWeakAssign(v37, v24);
    *(_QWORD *)&v36[OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node] = a1;
    v39 = v38[1];
    *v38 = v27;
    v38[1] = v29;
    swift_unknownObjectRetain_n(a1, 2);
    v40 = v24;
    *(_QWORD *)&v41 = swift_bridgeObjectRelease(v39).n128_u64[0];
    v46.receiver = v36;
    v46.super_class = v35;
    v42 = objc_msgSendSuper2(&v46, "init", v41);

    v43 = swift_unknownObjectRelease(a1);
    v45(v42, v43);

    swift_unknownObjectRelease(a1);
  }
  else
  {
    v30 = Logger.UI.unsafeMutableAddressor(v11);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v30, v9);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Not enough information to get the transition controller", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    ((void (*)(_QWORD))a3)(0);
  }
}

void sub_1001A7500(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void *v40;
  _QWORD *v41;

  v35 = a5;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10000CB4C((uint64_t)v15, &qword_100643470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    v34 = a3;
    if (!*(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    v20 = sub_10004FD50();
    __chkstk_darwin(v20);
    *(&v33 - 2) = a4;
    *(&v33 - 1) = (uint64_t)v12;
    v21 = sub_100174BD4(sub_100146530, (uint64_t)(&v33 - 4), v20);
    swift_bridgeObjectRelease(v20);
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    if (v21)
    {
      v22 = (_QWORD *)swift_allocObject(&unk_1005CD560, 48, 7);
      v24 = v34;
      v23 = v35;
      v22[2] = v34;
      v22[3] = v21;
      v22[4] = v23;
      v22[5] = a6;
      v40 = sub_1001D010C;
      v41 = v22;
      aBlock = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_10004A82C;
      v39 = &unk_1005CD578;
      v25 = _Block_copy(&aBlock);
      v26 = v41;
      v27 = v24;
      swift_unknownObjectRetain(v21);
      swift_retain();
      swift_release(v26);
      DOCRunInMainThread(v25);
      _Block_release(v25);
      v28 = swift_unknownObjectRelease(v21);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v28);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v29 = v35;
  v30 = swift_allocObject(&unk_1005CD510, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a6;
  v40 = sub_1001D2A08;
  v41 = (_QWORD *)v30;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_10004A82C;
  v39 = &unk_1005CD528;
  v31 = _Block_copy(&aBlock);
  v32 = v41;
  swift_retain();
  swift_release(v32);
  DOCRunInMainThread(v31);
  _Block_release(v31);
}

Swift::Int sub_1001A7980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE v6[24];

  v4 = swift_projectBox(a3);
  swift_beginAccess(v4, v6, 1, 0);
  sub_1001D00A4(a1, v4);
  return OS_dispatch_semaphore.signal()();
}

void DOCItemCollectionViewController.getCell(for:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  id v11;
  id v12;
  _QWORD v13[5];
  _QWORD *v14;

  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v8 = (_QWORD *)swift_allocObject(&unk_1005CC1B0, 48, 7);
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  v13[4] = sub_1001CA9CC;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100175118;
  v13[3] = &unk_1005CC1C8;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v3;
  v12 = a1;
  swift_retain();
  objc_msgSend(v7, "fetchURLForItem:completionHandler:", v12, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);

}

void sub_1001A7B60(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  void *v40;
  _QWORD *v41;

  v35 = a5;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10000CB4C((uint64_t)v15, &qword_100643470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    v34 = a3;
    if (!*(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    v20 = sub_10004FD50();
    __chkstk_darwin(v20);
    *(&v33 - 2) = a4;
    *(&v33 - 1) = (uint64_t)v12;
    v21 = sub_100174BD4(sub_100146530, (uint64_t)(&v33 - 4), v20);
    swift_bridgeObjectRelease(v20);
    sub_10000CB4C((uint64_t)v12, &qword_100643470);
    if (v21)
    {
      v22 = (_QWORD *)swift_allocObject(&unk_1005CE2D0, 48, 7);
      v24 = v34;
      v23 = v35;
      v22[2] = v34;
      v22[3] = v21;
      v22[4] = v23;
      v22[5] = a6;
      v40 = sub_1001D0E18;
      v41 = v22;
      aBlock = _NSConcreteStackBlock;
      v37 = 1107296256;
      v38 = sub_10004A82C;
      v39 = &unk_1005CE2E8;
      v25 = _Block_copy(&aBlock);
      v26 = v41;
      v27 = v24;
      swift_unknownObjectRetain(v21);
      swift_retain();
      swift_release(v26);
      DOCRunInMainThread(v25);
      _Block_release(v25);
      v28 = swift_unknownObjectRelease(v21);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v28);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v29 = v35;
  v30 = swift_allocObject(&unk_1005CE280, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = a6;
  v40 = sub_1001D2A08;
  v41 = (_QWORD *)v30;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_10004A82C;
  v39 = &unk_1005CE298;
  v31 = _Block_copy(&aBlock);
  v32 = v41;
  swift_retain();
  swift_release(v32);
  DOCRunInMainThread(v31);
  _Block_release(v31);
}

double sub_1001A7E84(char *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v8;
  double result;

  swift_retain();
  v8 = (void *)swift_unknownObjectRetain(a2);
  sub_1001CB36C(v8, a1, a3, a4, a2);
  swift_release(a4);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

void DOCItemCollectionViewController.previewController(_:viewFor:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v8 = swift_allocObject(&unk_1005CC200, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v11[4] = sub_100066584;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100083540;
  v11[3] = &unk_1005CC218;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain();
  objc_msgSend(v4, "getViewFor:waitForNewThumbnail::", a2, 0, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
}

void sub_1001A8110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v8 = swift_allocObject(&unk_1005CDEC0, 32, 7);
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v11[4] = sub_10010DF60;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100083540;
  v11[3] = &unk_1005CDED8;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain();
  objc_msgSend(v4, "getViewFor:waitForNewThumbnail::", a2, 0, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
}

void *DOCItemCollectionViewController.alertPresentingViewController.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

uint64_t DOCItemCollectionViewController.shouldAdjustScrollViewInsetWhenRenaming.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), "sceneIdentifier");
  v3 = objc_msgSend(v1, "globalTabbedBrowserControllerForIdentifier:", v2);

  if (!v3)
    return 1;
  v4 = objc_msgSend(v3, "effectiveFullBrowser");

  v5 = objc_msgSend(v4, "pickerFilenameView");
  if (!v5)
    return 1;

  return 0;
}

Swift::Void __swiftcall DOCItemCollectionViewController.renameWillBegin()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v1 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v1);
  v45 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.Rename.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v13 = v0;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v41 = v7;
    v42 = v6;
    v43 = v4;
    v44 = v3;
    v16 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(64, -1);
    v47[0] = v40;
    *(_DWORD *)v16 = 136315394;
    v46 = sub_1000544FC(0xD000000000000011, 0x8000000100513A60, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    *(_WORD *)(v16 + 12) = 2080;
    v17 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
    if (v17)
    {
      v18 = *(_QWORD *)(v17 + 64);
      ObjectType = swift_getObjectType(v18);
      swift_unknownObjectRetain(v18);
      v20 = DOCNode.nodeDescription.getter(ObjectType);
      v22 = v21;
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v22 = 0xE300000000000000;
      v20 = 4271950;
    }
    v46 = sub_1000544FC(v20, v22, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);

    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s node: %s", (uint8_t *)v16, 0x16u);
    v23 = v40;
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v41);
    v4 = v43;
    v3 = v44;
    v6 = v42;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v24 = &v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v25 = swift_beginAccess(&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v47, 0, 0).n128_u64[0];
  if (*(_QWORD *)v24 <= 1uLL)
  {
    v26 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
    if (v26)
    {
      v27 = *(_QWORD *)(v26 + 64);
      v28 = (void *)swift_unknownObjectRetain(v27);
      v29 = v45;
      sub_10017A9F4(v28, v45);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v29, 1, v3) == 1)
      {
        swift_unknownObjectRelease(v27);
        sub_10000CB4C(v29, (uint64_t *)&unk_100642710);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v29, v3);
        v30 = sub_10006922C(&qword_100644BD0);
        v31 = *(unsigned __int8 *)(v4 + 80);
        v32 = (v31 + 32) & ~v31;
        v33 = v4;
        v34 = swift_allocObject(v30, v32 + *(_QWORD *)(v4 + 72), v31 | 7);
        *(_OWORD *)(v34 + 16) = xmmword_1004D9670;
        (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v34 + v32, v6, v3);
        sub_10009A978(0, v34);
        swift_unknownObjectRelease(v27);
        swift_setDeallocating(v34);
        swift_arrayDestroy(v34 + v32, *(_QWORD *)(v34 + 16), v3);
        swift_deallocClassInstance(v34, 32, 7);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v3);
      }
    }
  }
  v35 = objc_msgSend(v13, "traitCollection", v25);
  if (objc_msgSend(v35, "verticalSizeClass") == (id)1)
    v36 = 1;
  else
    v36 = UITraitCollection.doc_preferredLayoutSizeCategory.getter() == 2
       && objc_msgSend(v35, "horizontalSizeClass") == (id)1;
  v37 = objc_msgSend(v13, "navigationController");
  sub_100185498(v36, v37, 1);

  objc_msgSend(v13, "loadViewIfNeeded");
  v38 = *(void **)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v38)
  {
    v39 = objc_msgSend(v38, "panGestureRecognizer");
    objc_msgSend(v39, "setEnabled:", 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001A87E8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  int v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  double v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  id v28;
  int IsHardwareKeyboardAttached;
  unint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  __n128 v45;
  __n128 v46;
  void (*v47)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[40];
  _QWORD aBlock[5];
  uint64_t v53;
  char v54[24];

  v2 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v2);
  v4 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  if (v10)
  {
    v11 = *(void **)(v10 + 64);
    swift_unknownObjectRetain(v11);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(a1, "loadViewIfNeeded");
  v12 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v12)
  {
    __break(1u);
    return;
  }
  v13 = objc_msgSend(v12, "panGestureRecognizer");
  objc_msgSend(v13, "setEnabled:", 1);

  v14 = *(_QWORD *)&a1[v9];
  *(_QWORD *)&a1[v9] = 0;
  *(_QWORD *)&v15 = swift_release(v14).n128_u64[0];
  if (!*(_QWORD *)&a1[v9])
    a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  if (a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] == 1)
  {
    v16 = objc_msgSend(a1, "navigationController", v15);
    if (v16)
    {
      v17 = v16;
    }
    else
    {
      v19 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
      v20 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "sceneIdentifier");
      v21 = objc_msgSend(v19, "globalTabbedBrowserControllerForIdentifier:", v20);

      if (v21)
      {
        v22 = objc_msgSend(v21, "effectiveFullBrowser");
        v17 = objc_msgSend(v22, "internalNavigationController");

        v18 = 0;
        goto LABEL_13;
      }
      v17 = 0;
    }
    v18 = 1;
LABEL_13:
    sub_100185498(0, v17, v18);

  }
  v23 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  *(_QWORD *)&v24 = swift_beginAccess(&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v54, 0, 0).n128_u64[0];
  if (*(_QWORD *)v23 != 2)
    goto LABEL_19;
  if ((objc_msgSend(a1, "isEditing", v24) & 1) != 0)
    goto LABEL_19;
  v25 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode];
  if (!v25)
    goto LABEL_19;
  v26 = (void *)swift_unknownObjectRetain(*(_QWORD *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode]);
  sub_10017A9F4(v26, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_unknownObjectRelease(v25);
    sub_10000CB4C((uint64_t)v4, (uint64_t *)&unk_100642710);
LABEL_19:
    v27 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  v47 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
  v47(v8, v4, v5);
  v48 = sub_10006922C(&qword_100644BD0);
  v49 = *(unsigned __int8 *)(v6 + 80);
  v50 = (v49 + 32) & ~v49;
  v27 = (_QWORD *)swift_allocObject(v48, v50 + *(_QWORD *)(v6 + 72), v49 | 7);
  *((_OWORD *)v27 + 1) = xmmword_1004D9670;
  v47((_BYTE *)v27 + v50, v8, v5);
  swift_unknownObjectRelease(v25);
LABEL_20:
  sub_10009A978(0, (uint64_t)v27);
  swift_bridgeObjectRelease(v27);
  v28 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  IsHardwareKeyboardAttached = GSEventIsHardwareKeyboardAttached();

  if (IsHardwareKeyboardAttached && v11)
  {
    ObjectType = swift_getObjectType(v11);
    if ((DOCNode.nodeType.getter(ObjectType) & 1) != 0)
    {
      v36 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v36, v51);
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      *(_QWORD *)(inited + 32) = v11;
      aBlock[0] = inited;
      specialized Array._endMutation()(inited);
      v38 = aBlock[0];
      swift_unknownObjectRetain(v11);
      sub_100094F78(v38, 0, 0);
      v30 = swift_bridgeObjectRelease(v38).n128_u64[0];
    }
    else
    {
      v32 = swift_allocObject(&unk_1005CE078, 32, 7);
      *(_QWORD *)(v32 + 16) = a1;
      *(_QWORD *)(v32 + 24) = v11;
      aBlock[4] = sub_1001D0B18;
      v53 = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100175118;
      aBlock[3] = &unk_1005CE090;
      v33 = _Block_copy(aBlock);
      v34 = v53;
      swift_unknownObjectRetain_n(v11, 2);
      v35 = a1;
      objc_msgSend(v11, "fetchURL:", v33, swift_release(v34).n128_f64[0]);
      _Block_release(v33);
      v30 = swift_unknownObjectRelease(v11).n128_u64[0];
    }
  }
  v39 = *(void **)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (((objc_msgSend(v39, "forMovingDocuments", *(double *)&v30) & 1) != 0
     || (objc_msgSend(v39, "forSavingDocuments") & 1) != 0
     || (objc_msgSend(v39, "forPickingFolders") & 1) != 0
     || objc_msgSend(v39, "forPickingDownloadsFolder"))
    && a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] == 1)
  {
    if (v11)
    {
      v40 = swift_getObjectType(v11);
      swift_unknownObjectRetain(v11);
      v41 = DOCNode.fpfs_syncFetchFPItem()(v40);
      if (v41)
      {
        v42 = (void *)v41;
        v43 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v44 = swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v44 + 16);
        v45 = swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)(v42, sub_1001D0B04, v44, v45);

        swift_release_n(v44, 2, v46);
      }
      swift_unknownObjectRelease_n(v11, 2);
    }
  }
  else
  {
    swift_unknownObjectRelease(v11);
  }
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
}

uint64_t sub_1001A8DC8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v7 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v7);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&aBlock[-1] - v11;
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v12, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_10000CB4C((uint64_t)v12, &qword_100643470);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v18 = objc_opt_self(FPItem);
  v19 = swift_dynamicCastObjCClassUnconditional(a4, v18, 0, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  if (*(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    v20 = sub_10004FD50();
    __chkstk_darwin(v20);
    *(&v27 - 2) = v19;
    *(&v27 - 1) = (uint64_t)v9;
    v21 = sub_100174BD4(sub_100146530, (uint64_t)(&v27 - 4), v20);
    swift_bridgeObjectRelease(v20);
    sub_10000CB4C((uint64_t)v9, &qword_100643470);
    if (v21)
    {
      v23 = swift_allocObject(&unk_1005CE0C8, 32, 7);
      *(_QWORD *)(v23 + 16) = a3;
      *(_QWORD *)(v23 + 24) = v21;
      aBlock[4] = sub_1001D0B2C;
      v29 = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005CE0E0;
      v24 = _Block_copy(aBlock);
      v25 = v29;
      v26 = a3;
      swift_unknownObjectRetain(v21);
      swift_release(v25);
      DOCRunInMainThread(v24);
      _Block_release(v24);
      v22 = swift_unknownObjectRelease(v21);
    }
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1001A9060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t inited;
  double result;
  uint64_t v6;
  _BYTE v7[40];

  v3 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v3, v7);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a2;
  v6 = inited;
  specialized Array._endMutation()(inited);
  swift_unknownObjectRetain(a2);
  sub_100094F78(v6, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_1001A90E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_1005CE118, 32, 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_1001D0B40;
  v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CE130;
  v14 = _Block_copy(aBlock);
  v15 = v25;
  v16 = a1;
  swift_retain();
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10006922C((uint64_t *)&unk_100647540);
  v20 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
}

void sub_1001A9308(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (void *)Strong;
    if (a2)
    {
      v10 = a2;
      sub_1001B4B5C(v10, 0, (uint64_t)v9);

    }
    else
    {
      v11 = Logger.Rename.unsafeMutableAddressor(Strong);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
      v12 = v9;
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.error.getter(v13);
      if (os_log_type_enabled(v13, (os_log_type_t)v14))
      {
        v25 = v14;
        v15 = swift_slowAlloc(22, -1);
        v24 = swift_slowAlloc(64, -1);
        v27 = v24;
        *(_DWORD *)v15 = 136315394;
        v26 = sub_1000544FC(0xD000000000000012, 0x8000000100516B10, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
        *(_WORD *)(v15 + 12) = 2080;
        v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
        if (v16)
        {
          v17 = *(_QWORD *)(v16 + 64);
          ObjectType = swift_getObjectType(v17);
          swift_unknownObjectRetain(v17);
          v19 = DOCNode.nodeDescription.getter(ObjectType);
          v21 = v20;
          swift_unknownObjectRelease(v17);
        }
        else
        {
          v21 = 0xE300000000000000;
          v19 = 4271950;
        }
        v26 = sub_1000544FC(v19, v21, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);

        swift_bridgeObjectRelease(v21);
        _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v25, "%s Could not refetch item when trying to open the newly created folder: %s", (uint8_t *)v15, 0x16u);
        v22 = v24;
        swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v15, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1001A95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  v9 = type metadata accessor for Logger(0);
  v8[18] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[19] = v10;
  v8[20] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v8[21] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v8[22] = v12;
  v8[23] = v13;
  return swift_task_switch(sub_1001A965C, v12, v13);
}

uint64_t sub_1001A965C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 64, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 192) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_100646AA4);
    *(_QWORD *)(v0 + 200) = v3;
    *v3 = v0;
    v3[1] = sub_1001A9700;
    return sub_1001A9AF4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001A9700(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 208) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1001A9758, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
}

uint64_t sub_1001A9758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  id v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 168));
  if (v1)
  {
    v3 = (const void *)(v0 + 16);
    v4 = *(void **)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = Logger.Rename.unsafeMutableAddressor(v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    v9 = v4;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.debug.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v33 = *(_QWORD *)(v0 + 208);
      v35 = *(_QWORD *)(v0 + 152);
      v36 = *(_QWORD *)(v0 + 144);
      v37 = *(_QWORD *)(v0 + 160);
      v12 = swift_slowAlloc(22, -1);
      v32 = (_QWORD *)swift_slowAlloc(8, -1);
      v34 = swift_slowAlloc(32, -1);
      v38 = v34;
      *(_DWORD *)v12 = 136315394;
      *(_QWORD *)(v0 + 88) = sub_1000544FC(0xD00000000000002CLL, 0x8000000100515340, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
      *(_WORD *)(v12 + 12) = 2112;
      *(_QWORD *)(v0 + 96) = v9;
      v13 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104);
      *v32 = v33;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s new folder action created item: %@. Attempting to reveal", (uint8_t *)v12, 0x16u);
      v14 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v32, 1, v14);
      swift_slowDealloc(v32, -1, -1);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      v15 = v12;
      v3 = (const void *)(v0 + 16);
      swift_slowDealloc(v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v36);
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 152);
      v17 = *(_QWORD *)(v0 + 160);
      v19 = *(_QWORD *)(v0 + 144);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    v20 = *(void **)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 136);
    v22 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v23 = swift_allocObject(v22, 40, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v23 + 32) = v9;
    v38 = v23;
    specialized Array._endMutation()(v23);
    v24 = v38;
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    v25 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    v27 = (_QWORD *)swift_allocObject(&unk_1005CC7C8, 40, 7);
    v27[2] = v25;
    v27[3] = v20;
    v27[4] = v21;
    *(_QWORD *)(v0 + 48) = sub_1001CF13C;
    *(_QWORD *)(v0 + 56) = v27;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_10016C02C;
    *(_QWORD *)(v0 + 40) = &unk_1005CC7E0;
    v28 = _Block_copy(v3);
    v29 = *(_QWORD *)(v0 + 56);
    v30 = v25;
    v16 = v20;
    swift_bridgeObjectRetain(v21);
    objc_msgSend(v16, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 0, v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);

  }
  else
  {
    v16 = *(id *)(v0 + 192);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A9AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = type metadata accessor for Logger(0);
  v4[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[11] = v6;
  v4[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[13] = v7;
  v4[14] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v4[15] = v8;
  v4[16] = v9;
  return swift_task_switch(sub_1001A9B90, v8, v9);
}

uint64_t sub_1001A9B90()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;

  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 64));
  v2 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  *(_QWORD *)(v0 + 136) = v2;
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)(v0 + 72);
    v10 = *(_OWORD *)(v0 + 48);
    v5 = static MainActor.shared.getter(v2);
    *(_QWORD *)(v0 + 144) = v5;
    v6 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 152) = v6;
    *(_QWORD *)(v6 + 16) = v3;
    *(_OWORD *)(v6 + 24) = v10;
    *(_QWORD *)(v6 + 40) = v4;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 160) = v7;
    v8 = sub_10006922C(&qword_100647560);
    *v7 = v0;
    v7[1] = sub_1001A9CBC;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v5, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x8000000100515C30, sub_1001CF9B4, v6, v8);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1001A9CBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 152);
  v3 = *(_QWORD *)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001A9D24, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_1001A9D24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_type_t type;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = v1;
    v6 = Logger.Rename.unsafeMutableAddressor(v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
    v7 = v5;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter(v8);
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(void **)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 80);
    if (v10)
    {
      v30 = *(_QWORD *)(v0 + 96);
      v31 = *(_QWORD *)(v0 + 80);
      v29 = *(void **)(v0 + 136);
      v15 = swift_slowAlloc(32, -1);
      v28 = swift_slowAlloc(96, -1);
      v32 = v28;
      *(_DWORD *)v15 = 136315650;
      *(_QWORD *)(v0 + 24) = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515C30, &v32);
      *(_QWORD *)&v16 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32).n128_u64[0];
      *(_WORD *)(v15 + 12) = 2080;
      v17 = objc_msgSend(v7, "displayName", v16);
      type = v9;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v27 = v13;
      v20 = v19;

      *(_QWORD *)(v0 + 32) = sub_1000544FC(v18, v20, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
      swift_bridgeObjectRelease(v20);

      *(_WORD *)(v15 + 22) = 2080;
      v21 = objc_msgSend(v7, "itemIdentifier");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      *(_QWORD *)(v0 + 40) = sub_1000544FC(v22, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease(v24);

      _os_log_impl((void *)&_mh_execute_header, v8, type, "%s: new folder named \"%s\" was created with itemIdentifier: %s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy(v28, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v31);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    }
  }
  else
  {

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(void *))(v0 + 8))(v1);
}

void sub_1001AA018(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  v14 = a2;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(32, -1);
    v36 = v9;
    v18 = v17;
    v32 = (_QWORD *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(64, -1);
    v39 = v35;
    *(_DWORD *)v18 = 136315650;
    v37 = a4;
    v38 = sub_1000544FC(0xD00000000000002CLL, 0x8000000100515340, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    *(_WORD *)(v18 + 12) = 2112;
    v33 = v15;
    v19 = a1;
    v38 = (uint64_t)v14;
    v20 = v14;
    v34 = v8;
    v21 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    v22 = v32;
    *v32 = v14;

    *(_WORD *)(v18 + 22) = 2080;
    if ((v19 & 1) != 0)
      v23 = 1702195828;
    else
      v23 = 0x65736C6166;
    if ((v19 & 1) != 0)
      v24 = 0xE400000000000000;
    else
      v24 = 0xE500000000000000;
    v38 = sub_1000544FC(v23, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    v25 = v24;
    a4 = v37;
    swift_bridgeObjectRelease(v25);
    v26 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, v16, "%s reveal item: %@ success: %s", (uint8_t *)v18, 0x20u);
    v27 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v22, 1, v27);
    swift_slowDealloc(v22, -1, -1);
    v28 = v35;
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v29 = *(void **)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed) = v14;
  v30 = v14;

  v31 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder) = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease(v31);
  sub_1001AA328();
}

void sub_1001AA328()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  double v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t aBlock[5];
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed])
  {
    v8 = Logger.Rename.unsafeMutableAddressor(v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v2);
    v9 = v1;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, (os_log_type_t)v11))
    {
      v30 = v11;
      v12 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(64, -1);
      aBlock[0] = v29;
      *(_DWORD *)v12 = 136315394;
      v31 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100515390, aBlock);
      *(_QWORD *)&v13 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock).n128_u64[0];
      *(_WORD *)(v12 + 12) = 2080;
      v14 = *(void **)&v1[v7];
      if (v14)
      {
        v15 = objc_msgSend(v14, "itemIdentifier", v13);
        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v18 = v17;

      }
      else
      {
        v18 = 0xE300000000000000;
        v16 = 4271950;
      }
      v31 = sub_1000544FC(v16, v18, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);

      swift_bridgeObjectRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v30, "%s: item: %s", (uint8_t *)v12, 0x16u);
      v19 = v29;
      swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer;
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer], "invalidate");
    v21 = *(void **)(*(_QWORD *)&v9[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                   + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v21 && objc_msgSend(v21, "isUsingFPFS"))
      v22 = 0.01;
    else
      v22 = 0.1;
    v23 = (void *)objc_opt_self(NSTimer);
    v24 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    aBlock[4] = (uint64_t)sub_1001CF148;
    v33 = v24;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000602CC;
    aBlock[3] = (uint64_t)&unk_1005CC808;
    v25 = _Block_copy(aBlock);
    swift_release(v33);
    v26 = objc_msgSend(v23, "scheduledTimerWithTimeInterval:repeats:block:", 0, v25, v22);
    _Block_release(v25);
    v27 = *(void **)&v9[v20];
    *(_QWORD *)&v9[v20] = v26;

  }
}

void sub_1001AA69C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v17 = a5;
  v9 = sub_10006922C(&qword_100646AD0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_1005CCDE0, v14 + v11, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1004864E8(a2, a3, a4, 1, v17, (uint64_t)sub_1001CFA24, v15);
  swift_release(v15);

}

uint64_t sub_1001AA7CC(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;

  v4 = a1;
  v1 = a1;
  v2 = sub_10006922C(&qword_100646AD0);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_1001AA810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD);
  void (*v43)(_QWORD, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  __n128 v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  NSObject *v143;
  os_log_type_t v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint8_t *v152;
  uint64_t v153;
  _QWORD v154[3];
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(_QWORD, _QWORD);
  uint64_t (*v165)(uint64_t, uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168[2];

  v166 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v166 - 8);
  v2 = __chkstk_darwin(v166);
  v3 = __chkstk_darwin(v2);
  v4 = __chkstk_darwin(v3);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v154 - v6;
  v8 = __chkstk_darwin(v5);
  __chkstk_darwin(v8);
  v10 = __chkstk_darwin((char *)v154 - v9);
  v12 = (char *)v154 - v11;
  result = __chkstk_darwin(v10);
  v19 = (char *)v154 - v18;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0)
    return 0;
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController);
  if (!v20)
    return 0;
  v157 = result;
  v158 = v14;
  v159 = v17;
  v160 = v16;
  v162 = v15;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v21)
  {
    v22 = *(_QWORD *)(v20 + 64);
    swift_unknownObjectRetain(v22);
    swift_retain();
    v23 = sub_10004FD50();
    swift_unknownObjectRetain(v22);
    v24 = sub_1001BD6E4(v23, v22);
    swift_bridgeObjectRelease(v23);
    v163 = v22;
    v25 = swift_unknownObjectRelease(v22);
    v26 = Logger.Rename.unsafeMutableAddressor(v25);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
    v161 = v24;
    v165 = v27;
    if (v24)
    {
      v27((uint64_t)v7, v26, v166);
      v28 = swift_retain_n(v20, 2);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.debug.getter();
      v31 = v20;
      if (os_log_type_enabled(v29, v30))
      {
        v32 = swift_slowAlloc(22, -1);
        v164 = (void (*)(_QWORD, _QWORD))swift_slowAlloc(64, -1);
        v168[0] = (uint64_t)v164;
        *(_DWORD *)v32 = 136315394;
        v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
        *(_WORD *)(v32 + 12) = 2080;
        v159 = v32 + 14;
        v33 = *(_QWORD *)(v20 + 64);
        ObjectType = swift_getObjectType(v33, v34);
        swift_unknownObjectRetain(v33);
        v36 = DOCNode.nodeDescription.getter(ObjectType);
        v38 = v37;
        swift_unknownObjectRelease(v33);
        v167 = sub_1000544FC(v36, v38, v168);
        v39 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
        swift_release_n(v20, 2, v39);
        v40 = v38;
        v31 = v20;
        v41 = v166;
        swift_bridgeObjectRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: Found item by matching by matching identifiers: %s", (uint8_t *)v32, 0x16u);
        v42 = v164;
        swift_arrayDestroy(v164, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v32, -1, -1);

        v43 = *(void (**)(_QWORD, _QWORD))(v1 + 8);
        v44 = v7;
        v45 = v41;
      }
      else
      {

        swift_release_n(v20, 2, v62);
        v43 = *(void (**)(_QWORD, _QWORD))(v1 + 8);
        v44 = v7;
        v45 = v166;
      }
      v164 = v43;
      v43(v44, v45);
      v64 = v162;
      v65 = v163;
      v66 = v161;
      v67 = v161;
LABEL_22:
      v105 = swift_getObjectType(v66, v63);
      swift_unknownObjectRetain(v67);
      v106 = DOCNode.isEqualTo(node:)(v65, v105);
      v107 = v106;
      v108 = Logger.Rename.unsafeMutableAddressor(v106);
      if ((v107 & 1) != 0)
      {
        v109 = v160;
        v110 = v165(v160, v108, v166);
        v111 = Logger.logObject.getter(v110);
        v112 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v111, v112))
        {
          v113 = (uint8_t *)swift_slowAlloc(12, -1);
          v114 = swift_slowAlloc(32, -1);
          v168[0] = v114;
          *(_DWORD *)v113 = 136315138;
          v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
          _os_log_impl((void *)&_mh_execute_header, v111, v112, "%s: No update needed", v113, 0xCu);
          v115 = 1;
          swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v114, -1, -1);
          swift_slowDealloc(v113, -1, -1);
          swift_release(v31);
          swift_unknownObjectRelease(v66);

          swift_unknownObjectRelease(v65);
          v164(v109, v166);
          swift_unknownObjectRelease(v66);
          return v115;
        }
        swift_release(v31);
        swift_unknownObjectRelease(v66);

        swift_unknownObjectRelease(v65);
        v164(v109, v166);
      }
      else
      {
        v165(v64, v108, v166);
        v116 = swift_retain_n(v31, 4);
        v117 = Logger.logObject.getter(v116);
        v118 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v117, v118))
        {
          v119 = swift_slowAlloc(32, -1);
          v120 = swift_slowAlloc(96, -1);
          v161 = v66;
          v121 = v120;
          v168[0] = v120;
          *(_DWORD *)v119 = 136315650;
          v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
          *(_QWORD *)&v122 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168).n128_u64[0];
          *(_WORD *)(v119 + 12) = 2080;
          v123 = objc_msgSend(*(id *)(v31 + 64), "filename", v122);
          v124 = v31;
          v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
          v127 = v126;

          v167 = sub_1000544FC(v125, v127, v168);
          v128 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
          swift_release_n(v124, 2, v128);
          swift_bridgeObjectRelease(v127);
          *(_WORD *)(v119 + 22) = 2080;
          v129 = *(_QWORD *)(v124 + 64);
          v131 = swift_getObjectType(v129, v130);
          swift_unknownObjectRetain(v129);
          v132 = DOCNode.nodeDescription.getter(v131);
          v134 = v133;
          swift_unknownObjectRelease(v129);
          v135 = v132;
          v31 = v124;
          v167 = sub_1000544FC(v135, v134, v168);
          v65 = v163;
          v136 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
          swift_release_n(v124, 2, v136);
          swift_bridgeObjectRelease(v134);
          _os_log_impl((void *)&_mh_execute_header, v117, v118, "%s: Updating renameController with new item name: %s node: %s", (uint8_t *)v119, 0x20u);
          swift_arrayDestroy(v121, 3, (char *)&type metadata for Any + 8);
          v137 = v121;
          v66 = v161;
          swift_slowDealloc(v137, -1, -1);
          swift_slowDealloc(v119, -1, -1);

          v138 = v162;
        }
        else
        {

          swift_release_n(v31, 4, v139);
          v138 = v64;
        }
        v164(v138, v166);
        v140 = *(_QWORD *)(v31 + 64);
        *(_QWORD *)(v31 + 64) = v66;
        swift_unknownObjectRetain(v66);
        swift_unknownObjectRelease(v140);
        sub_10038BB78();
        swift_release(v31);
        swift_unknownObjectRelease(v65);
        swift_unknownObjectRelease(v66);
      }
      swift_unknownObjectRelease(v66);
      return 1;
    }
    v154[2] = 0;
    v161 = v21;
    v156 = v26;
    ((void (*)(char *))v27)(v19);
    v46 = swift_retain_n(v20, 2);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter();
    v49 = v48;
    v31 = v20;
    if (os_log_type_enabled(v47, v48))
    {
      v50 = swift_slowAlloc(22, -1);
      v155 = v20;
      v51 = v50;
      v52 = swift_slowAlloc(64, -1);
      v168[0] = v52;
      *(_DWORD *)v51 = 136315394;
      LODWORD(v164) = v49;
      v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      *(_WORD *)(v51 + 12) = 2080;
      v154[1] = v51 + 14;
      v53 = *(_QWORD *)(v155 + 64);
      v55 = v47;
      v56 = swift_getObjectType(v53, v54);
      swift_unknownObjectRetain(v53);
      v57 = DOCNode.nodeDescription.getter(v56);
      v59 = v58;
      swift_unknownObjectRelease(v53);
      v167 = sub_1000544FC(v57, v59, v168);
      v60 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      swift_release_n(v155, 2, v60);
      swift_bridgeObjectRelease(v59);
      _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v164, "%s: Couldn't find item by matching DOCNode: %s in itemCollection", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy(v52, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1, -1);
      v61 = v51;
      v31 = v155;
      swift_slowDealloc(v61, -1, -1);

    }
    else
    {

      swift_release_n(v20, 2, v68);
    }
    v164 = *(void (**)(_QWORD, _QWORD))(v1 + 8);
    v164(v19, v166);
    v69 = objc_msgSend(*(id *)(v31 + 64), "filename");
    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v73 = sub_10004FD50();
    swift_bridgeObjectRetain(v72);
    v74 = sub_1001BD7F4(v73, v70, v72);
    swift_bridgeObjectRelease(v73);
    v75 = v72;
    v66 = (uint64_t)v74;
    swift_bridgeObjectRelease_n(v75, 2);
    if (v74)
    {
      v165((uint64_t)v12, v156, v166);
      v76 = swift_unknownObjectRetain_n(v74, 2);
      v77 = Logger.logObject.getter(v76);
      v78 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = swift_slowAlloc(22, -1);
        v161 = swift_slowAlloc(64, -1);
        v168[0] = v161;
        *(_DWORD *)v79 = 136315394;
        v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
        *(_WORD *)(v79 + 12) = 2080;
        v81 = swift_getObjectType(v74, v80);
        v82 = DOCNode.nodeDescription.getter(v81);
        v84 = v83;
        v167 = sub_1000544FC(v82, v83, v168);
        v85 = (void (*)(char *, uint64_t))v164;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
        swift_unknownObjectRelease_n(v66, 2);
        swift_bridgeObjectRelease(v84);
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s: Found new item matching by file name: %s", (uint8_t *)v79, 0x16u);
        v86 = v161;
        swift_arrayDestroy(v161, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v86, -1, -1);
        swift_slowDealloc(v79, -1, -1);

        v85(v12, v166);
      }
      else
      {
        swift_unknownObjectRelease_n(v74, 2);

        v164(v12, v166);
      }
      v103 = v66;
      v64 = v162;
      v65 = v163;
LABEL_21:
      v104 = *(_QWORD *)(v31 + 64);
      *(_QWORD *)(v31 + 64) = v66;
      swift_unknownObjectRetain_n(v66, 2);
      swift_unknownObjectRetain(v103);
      swift_unknownObjectRelease(v104);
      sub_10038BB78();
      swift_unknownObjectRelease_n(v66, 2);
      swift_unknownObjectRetain(v66);
      v67 = 0;
      goto LABEL_22;
    }
    v87 = *(_QWORD *)(v31 + 56);
    if (v87)
    {
      v88 = *(_QWORD *)(v31 + 48);
      swift_bridgeObjectRetain(*(_QWORD *)(v31 + 56));
      v89 = sub_10004FD50();
      swift_bridgeObjectRetain(v87);
      v66 = (uint64_t)sub_1001BD7F4(v89, v88, v87);
      swift_bridgeObjectRelease(v89);
      swift_bridgeObjectRelease_n(v87, 2);
      if (v66)
      {
        v90 = v157;
        v165(v157, v156, v166);
        v91 = swift_unknownObjectRetain_n(v66, 2);
        v92 = Logger.logObject.getter(v91);
        v93 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = v90;
          v95 = swift_slowAlloc(22, -1);
          v96 = swift_slowAlloc(64, -1);
          v168[0] = v96;
          *(_DWORD *)v95 = 136315394;
          v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
          *(_WORD *)(v95 + 12) = 2080;
          v98 = swift_getObjectType(v66, v97);
          v99 = DOCNode.nodeDescription.getter(v98);
          v101 = v100;
          v167 = sub_1000544FC(v99, v100, v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
          swift_unknownObjectRelease_n(v66, 2);
          swift_bridgeObjectRelease(v101);
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "%s: Found new item matching by proposed file name: %s", (uint8_t *)v95, 0x16u);
          swift_arrayDestroy(v96, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v96, -1, -1);
          swift_slowDealloc(v95, -1, -1);

          v102 = v94;
        }
        else
        {
          swift_unknownObjectRelease_n(v66, 2);

          v102 = v90;
        }
        v164(v102, v166);
        v64 = v162;
        v65 = v163;
        swift_unknownObjectRetain(v66);
        v103 = 0;
        goto LABEL_21;
      }
    }
    v141 = v158;
    v142 = v165(v158, v156, v166);
    v143 = Logger.logObject.getter(v142);
    v144 = static os_log_type_t.error.getter(v143);
    if (os_log_type_enabled(v143, v144))
    {
      v145 = (uint8_t *)swift_slowAlloc(12, -1);
      v146 = swift_slowAlloc(32, -1);
      v168[0] = v146;
      *(_DWORD *)v145 = 136315138;
      v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      _os_log_impl((void *)&_mh_execute_header, v143, v144, "%s: Failed at all attempts to find item being renamed", v145, 0xCu);
      swift_arrayDestroy(v146, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v146, -1, -1);
      swift_slowDealloc(v145, -1, -1);
    }

    v164(v141, v166);
    v147 = v163;
    v148 = v159;
    v149 = v165(v159, v156, v166);
    v150 = Logger.logObject.getter(v149);
    v151 = static os_log_type_t.error.getter(v150);
    if (os_log_type_enabled(v150, v151))
    {
      v152 = (uint8_t *)swift_slowAlloc(12, -1);
      v153 = swift_slowAlloc(32, -1);
      v168[0] = v153;
      *(_DWORD *)v152 = 136315138;
      v167 = sub_1000544FC(0xD00000000000002CLL, 0x80000001005172B0, v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      _os_log_impl((void *)&_mh_execute_header, v150, v151, "%s: Failed. Unable to find item being renamed", v152, 0xCu);
      swift_arrayDestroy(v153, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v153, -1, -1);
      swift_slowDealloc(v152, -1, -1);
    }
    swift_release(v31);

    swift_unknownObjectRelease(v147);
    v164(v148, v166);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001AB890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 64);
    ObjectType = swift_getObjectType(v10, v5);
    swift_unknownObjectRetain(v10);
    v12 = DOCNode.nodeDescription.getter(ObjectType);
    v14 = v13;
    v4 = swift_unknownObjectRelease(v10);
  }
  else
  {
    v14 = 0xE300000000000000;
    v12 = 7104878;
  }
  v15 = Logger.Rename.unsafeMutableAddressor(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v7, v15, v2);
  v16 = swift_bridgeObjectRetain(v14);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v29 = v8;
    v20 = v19;
    v21 = swift_slowAlloc(64, -1);
    v27 = v12;
    v22 = v21;
    v31 = v21;
    *(_DWORD *)v20 = 136315394;
    v30 = sub_1000544FC(0x6E655274726F6261, 0xED00002928656D61, &v31);
    v28 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain(v14);
    v30 = sub_1000544FC(v27, v14, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(v14, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s: detected unrecoverable state: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v20;
    v8 = v29;
    swift_slowDealloc(v23, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n(v14, 2);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
  v25 = *(_QWORD *)(v1 + v8);
  if (v25)
  {
    swift_retain();
    sub_10038EF44();
    return swift_release(v25);
  }
  return result;
}

void sub_1001ABB28(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v7 = sub_10006922C(&qword_100643470);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v10, &qword_100643470);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1005CC890, v14 + 8, v11 | 7);
  sub_100070EDC((uint64_t)v10, v15 + v12, &qword_100643470);
  *(_QWORD *)(v15 + v13) = a3;
  *(_QWORD *)(v15 + v14) = a4;
  aBlock[4] = sub_1001CF21C;
  v21 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CC8A8;
  v16 = _Block_copy(aBlock);
  v17 = v21;
  v18 = a3;
  v19 = a4;
  swift_release(v17);
  DOCRunInMainThread(v16);
  _Block_release(v16);
}

uint64_t sub_1001ABC70(uint64_t a1, char *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  NSObject *v48;
  int v49;
  uint64_t v50;
  double v51;
  void *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v66 = a3;
  v5 = type metadata accessor for Logger(0);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v65 = (char *)&v62 - v9;
  v10 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10006922C(&qword_100643470);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v62 - v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000271D4(a1, (uint64_t)v18, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    v23 = sub_10000CB4C((uint64_t)v18, &qword_100643470);
LABEL_8:
    v31 = v67;
    v30 = v68;
LABEL_9:
    v32 = Logger.Rename.unsafeMutableAddressor(v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v8, v32, v30);
    v33 = a2;
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(22, -1);
      v37 = swift_slowAlloc(64, -1);
      v70 = v37;
      *(_DWORD *)v36 = 136315394;
      v69 = sub_1000544FC(0xD00000000000001FLL, 0x80000001005153B0, &v70);
      *(_QWORD *)&v38 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70).n128_u64[0];
      *(_WORD *)(v36 + 12) = 2080;
      v39 = *(void **)&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
      if (v39)
      {
        v40 = objc_msgSend(v39, "itemIdentifier", v38);
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

      }
      else
      {
        v41 = 4271950;
        v43 = 0xE300000000000000;
      }
      v69 = sub_1000544FC(v41, v43, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Enqueued folder not found in item collection: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v8, v68);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v8, v30);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v22, v19);
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  if (!*(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    __break(1u);
    return result;
  }
  v25 = v22;
  v26 = sub_10004FD50();
  __chkstk_darwin(v26);
  *(&v62 - 2) = (uint64_t)v66;
  *(&v62 - 1) = (uint64_t)v16;
  v27 = (void *)sub_100174BD4(sub_10012B7C8, (uint64_t)(&v62 - 4), v26);
  swift_bridgeObjectRelease(v26);
  sub_10000CB4C((uint64_t)v16, &qword_100643470);
  if (!v27)
  {
    v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v19);
    goto LABEL_8;
  }
  v66 = v25;
  sub_10017A9F4(v27, (uint64_t)v12);
  v28 = type metadata accessor for IndexPath(0);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v12, 1, v28);
  v31 = v67;
  v30 = v68;
  if (v29 == 1)
  {
    swift_unknownObjectRelease(v27);
    sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v66, v19);
    goto LABEL_9;
  }
  v44 = sub_10000CB4C((uint64_t)v12, (uint64_t *)&unk_100642710);
  v45 = Logger.Rename.unsafeMutableAddressor(v44);
  v46 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v65, v45, v30);
  v47 = a2;
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, (os_log_type_t)v49))
  {
    v64 = v49;
    v50 = swift_slowAlloc(22, -1);
    v63 = swift_slowAlloc(64, -1);
    v70 = v63;
    *(_DWORD *)v50 = 136315394;
    v69 = sub_1000544FC(0xD00000000000001FLL, 0x80000001005153B0, &v70);
    *(_QWORD *)&v51 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70).n128_u64[0];
    *(_WORD *)(v50 + 12) = 2080;
    v52 = *(void **)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
    if (v52)
    {
      v53 = objc_msgSend(v52, "itemIdentifier", v51);
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v56 = v55;

    }
    else
    {
      v54 = 4271950;
      v56 = 0xE300000000000000;
    }
    v69 = sub_1000544FC(v54, v56, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

    swift_bridgeObjectRelease(v56);
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v64, "%s: Resuming enqueued inline rename of folder created: %s", (uint8_t *)v50, 0x16u);
    v57 = v63;
    swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v68);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v31 + 8))(v46, v30);
  }
  v58 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder;
  v59 = *(_QWORD *)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder];
  swift_unknownObjectRetain(v27);
  swift_bridgeObjectRetain(v59);
  sub_1001AC3AC(v27, v59);
  swift_unknownObjectRelease(v27);
  swift_bridgeObjectRelease(v59);
  v60 = *(void **)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
  *(_QWORD *)&v47[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;

  v61 = *(_QWORD *)&v47[v58];
  *(_QWORD *)&v47[v58] = _swiftEmptyArrayStorage;
  swift_unknownObjectRelease(v27);
  swift_bridgeObjectRelease(v61);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v66, v19);
}

uint64_t sub_1001AC3AC(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v60 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v60 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v60 - v18;
  if (!a1)
  {
    v34 = Logger.Rename.unsafeMutableAddressor(v17);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v34, v6);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v64[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v65 = sub_1000544FC(0xD000000000000026, 0x80000001005153D0, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s: nil folder node. Bailing and cleaning up", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return sub_1001AE068(0xD000000000000026, 0x80000001005153D0, (uint64_t)v3);
  }
  swift_unknownObjectRetain(a1);
  v20 = objc_msgSend(v3, "setEditing:", 0);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v53 = a2;
    else
      v53 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v21 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(a2);
    if (v21 >= 1)
      goto LABEL_4;
LABEL_20:
    v54 = Logger.Rename.unsafeMutableAddressor(v20);
    v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v54, v6);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v61 = (uint64_t)v3;
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v64[0] = v59;
      v62 = v6;
      *(_DWORD *)v58 = 136315138;
      v65 = sub_1000544FC(0xD000000000000026, 0x80000001005153D0, v64);
      v3 = (char *)v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s no nodes to move, preparing to rename", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v62);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
    goto LABEL_23;
  }
  v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v21 < 1)
    goto LABEL_20;
LABEL_4:
  v22 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v64, 0, 0);
  v23 = *(_QWORD *)v22;
  v25 = Logger.Rename.unsafeMutableAddressor(v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (v23 == 2)
  {
    v26(v19, v25, v6);
    v27 = swift_bridgeObjectRetain(a2);
    v28 = Logger.logObject.getter(v27);
    v29 = v6;
    v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v60 = swift_slowAlloc(32, -1);
      v65 = v60;
      *(_DWORD *)v31 = 136315394;
      v61 = (uint64_t)v3;
      v32 = sub_1000544FC(0xD000000000000026, 0x80000001005153D0, &v65);
      v62 = v29;
      v63 = v32;
      v3 = (char *)v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
      *(_WORD *)(v31 + 12) = 2048;
      v63 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
      swift_bridgeObjectRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v28, v30, "%s in column view with: %ld nodes to move", (uint8_t *)v31, 0x16u);
      v33 = v60;
      swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v62);
    }
    else
    {

      swift_bridgeObjectRelease(a2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v29);
    }
LABEL_23:
    sub_1001AE284(0xD000000000000026, 0x80000001005153D0, v3, a1, a2);
    return swift_unknownObjectRelease(a1);
  }
  v26(v16, v25, v6);
  v41 = swift_bridgeObjectRetain(a2);
  v42 = Logger.logObject.getter(v41);
  v43 = v6;
  v44 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v44))
  {
    v45 = swift_slowAlloc(22, -1);
    v62 = v43;
    v46 = v45;
    v61 = swift_slowAlloc(32, -1);
    v65 = v61;
    *(_DWORD *)v46 = 136315394;
    v60 = v46 + 4;
    v63 = sub_1000544FC(0xD000000000000026, 0x80000001005153D0, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
    *(_WORD *)(v46 + 12) = 2048;
    v63 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
    swift_bridgeObjectRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v42, v44, "%s not in column view with: %ld nodes to move. Moving nodes then starting rename", (uint8_t *)v46, 0x16u);
    v47 = v61;
    swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v62);
  }
  else
  {

    swift_bridgeObjectRelease(a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v43);
  }
  v48 = (_QWORD *)swift_allocObject(&unk_1005CC8E0, 56, 7);
  v48[2] = 0xD000000000000026;
  v48[3] = 0x80000001005153D0;
  v48[4] = a2;
  v48[5] = v3;
  v48[6] = a1;
  v49 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16);
  v50 = (_QWORD *)swift_allocObject(&unk_1005CC908, 48, 7);
  v50[2] = v49;
  v50[3] = a1;
  v50[4] = sub_1001CF2A8;
  v50[5] = v48;
  swift_unknownObjectRetain_n(a1, 2);
  swift_bridgeObjectRetain(a2);
  v51 = v3;
  swift_retain();
  v52 = sub_10006922C((uint64_t *)&unk_1006424B0);
  Array<A>.fpfs_fetchAllFPItems(completion:)(sub_1001CF2C0, v50, a2, v52);
  swift_release(v48);
  swift_unknownObjectRelease(a1);
  return swift_release(v50);
}

void sub_1001ACBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD aBlock[5];
  uint64_t v16;
  char v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed);
    if (v6)
    {
      v7 = (void *)objc_opt_self(FPItemManager);
      v8 = v6;
      v9 = objc_msgSend(v7, "defaultManager");
      v10 = swift_allocObject(&unk_1005CC840, 32, 7);
      *(_QWORD *)(v10 + 16) = v5;
      *(_QWORD *)(v10 + 24) = v8;
      aBlock[4] = sub_1001CF150;
      v16 = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100175118;
      aBlock[3] = &unk_1005CC858;
      v11 = _Block_copy(aBlock);
      v12 = v16;
      v13 = v8;
      v14 = v5;
      swift_release(v12);
      objc_msgSend(v9, "fetchURLForItem:completionHandler:", v13, v11);
      _Block_release(v11);

      v5 = v9;
    }

  }
}

void sub_1001ACD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) == 0)
    {
      if (*(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController))
        sub_1001847F4();
    }

  }
}

void sub_1001ACD80(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id *Strong;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a4;
  v37 = a6;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  swift_bridgeObjectRetain_n(a3, 2);
  v16 = swift_unknownObjectRetain_n(a5, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(42, -1);
    v35 = a1;
    v20 = v19;
    v34 = swift_slowAlloc(96, -1);
    v39 = v34;
    *(_DWORD *)v20 = 136315906;
    swift_bridgeObjectRetain(a3);
    v38 = sub_1000544FC(a2, a3, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v38 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100516C90, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    *(_WORD *)(v20 + 22) = 2048;
    v38 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    *(_WORD *)(v20 + 32) = 2080;
    ObjectType = swift_getObjectType(a5, v21);
    v23 = DOCNode.nodeDescription.getter(ObjectType);
    v25 = v24;
    v38 = sub_1000544FC(v23, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    swift_unknownObjectRelease_n(a5, 2);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s->%s (%ld): Found existing cell on screen: %s", (uint8_t *)v20, 0x2Au);
    v26 = v34;
    swift_arrayDestroy(v34, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    v27 = v20;
    a1 = v35;
    swift_slowDealloc(v27, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a5, 2);
    swift_bridgeObjectRelease_n(a3, 2);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v28 = *(_QWORD *)(v37 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController);
  if (v28)
  {
    v29 = type metadata accessor for DOCItemCollectionCell();
    v31 = (void *)swift_dynamicCastClass(a1, v29);
    if (v31)
      v32 = a1;
    Strong = (id *)swift_unknownObjectWeakLoadStrong(v28 + 72, v30);
    swift_unknownObjectWeakAssign(v28 + 72, v31);
    swift_retain();
    sub_10038BE3C(Strong);
    swift_release(v28);

  }
}

void sub_1001AD09C(char *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  void *v17;
  void *v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v54 = a6;
  v55 = a5;
  v56 = a3;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v49 - v14;
  v16 = sub_100195350((uint64_t)a2);
  if (v16)
  {
    v17 = v16;
    if ((sub_10017E610(a2) & 1) != 0)
    {
      objc_msgSend(a1, "loadViewIfNeeded");
      v18 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = v18;
      objc_msgSend(v17, "frame");
      v20 = objc_msgSend(v19, "_isRectFullyVisible:");

      if (v20)
      {
        v53 = a1;
        v22 = Logger.Rename.unsafeMutableAddressor(v21);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v22, v9);
        swift_bridgeObjectRetain_n(a4, 2);
        v23 = swift_unknownObjectRetain_n(a2, 2);
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.debug.getter();
        v26 = v25;
        if (os_log_type_enabled(v24, v25))
        {
          v27 = swift_slowAlloc(42, -1);
          v54 = swift_slowAlloc(96, -1);
          v58 = v54;
          *(_DWORD *)v27 = 136315906;
          LODWORD(v51) = v26;
          swift_bridgeObjectRetain(a4);
          v57 = sub_1000544FC(v56, a4, &v58);
          v52 = v9;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
          swift_bridgeObjectRelease_n(a4, 3);
          *(_WORD *)(v27 + 12) = 2080;
          v57 = sub_1000544FC(0xD000000000000010, 0x8000000100516C70, &v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
          *(_WORD *)(v27 + 22) = 2048;
          v57 = v55;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
          *(_WORD *)(v27 + 32) = 2080;
          ObjectType = swift_getObjectType(a2, v28);
          v30 = DOCNode.nodeDescription.getter(ObjectType);
          v32 = v31;
          v57 = sub_1000544FC(v30, v31, &v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
          swift_unknownObjectRelease_n(a2, 2);
          swift_bridgeObjectRelease(v32);
          _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v51, "%s->%s (%ld): Found existing cell on screen: %s", (uint8_t *)v27, 0x2Au);
          v33 = v54;
          swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v33, -1, -1);
          swift_slowDealloc(v27, -1, -1);

          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v52);
        }
        else
        {

          swift_unknownObjectRelease_n(a2, 2);
          swift_bridgeObjectRelease_n(a4, 2);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        }
        sub_1001ACD80(v17, v56, a4, v55, (uint64_t)a2, (uint64_t)v53);

        return;
      }
    }

  }
  v34 = Logger.Rename.unsafeMutableAddressor(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v34, v9);
  swift_bridgeObjectRetain_n(a4, 2);
  v35 = swift_unknownObjectRetain_n(a2, 2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc(42, -1);
    v39 = swift_slowAlloc(96, -1);
    v53 = a1;
    v40 = v39;
    v58 = v39;
    *(_DWORD *)v38 = 136315906;
    v52 = v9;
    swift_bridgeObjectRetain(a4);
    v57 = sub_1000544FC(v56, a4, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
    swift_bridgeObjectRelease_n(a4, 3);
    v50 = v10;
    v51 = a4;
    *(_WORD *)(v38 + 12) = 2080;
    v57 = sub_1000544FC(0xD000000000000010, 0x8000000100516C70, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
    *(_WORD *)(v38 + 22) = 2048;
    v57 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
    *(_WORD *)(v38 + 32) = 2080;
    v42 = swift_getObjectType(a2, v41);
    v43 = DOCNode.nodeDescription.getter(v42);
    v45 = v44;
    v57 = sub_1000544FC(v43, v44, &v58);
    a4 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s->%s (%ld): No existing cell on screen, trying to scroll to it: %s", (uint8_t *)v38, 0x2Au);
    swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
    v46 = v40;
    a1 = v53;
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v52);
  }
  else
  {

    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a4, 2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  v47 = v54;
  swift_bridgeObjectRetain(a4);
  swift_unknownObjectRetain(a2);
  v48 = a1;
  sub_1001BCD90(v47, v48, v48, (uint64_t)a2, v56, a4, v55);

  swift_unknownObjectRelease(a2);
  swift_bridgeObjectRelease(a4);
}

uint64_t sub_1001AD698(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v49 - v15;
  v17 = sub_100195350(a2);
  if (v17)
  {
    v18 = v17;
    sub_1001ACD80(v17, a3, a4, a5, a2, a1);
    v20 = Logger.Rename.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v20, v10);
    swift_bridgeObjectRetain_n(a4, 2);
    v21 = swift_unknownObjectRetain_n(a2, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = a5;
    v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v24))
    {
      v25 = swift_slowAlloc(42, -1);
      v50 = v10;
      v26 = v25;
      v27 = swift_slowAlloc(96, -1);
      v51 = v11;
      v28 = v27;
      v54 = v27;
      *(_DWORD *)v26 = 136315906;
      v52 = v23;
      swift_bridgeObjectRetain(a4);
      v53 = sub_1000544FC(a3, a4, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v26 + 12) = 2080;
      v53 = sub_1000544FC(0xD000000000000010, 0x8000000100516C70, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v26 + 22) = 2048;
      v53 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v26 + 32) = 2080;
      ObjectType = swift_getObjectType(a2, v29);
      v31 = DOCNode.nodeDescription.getter(ObjectType);
      v33 = v32;
      v53 = sub_1000544FC(v31, v32, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v33);
      _os_log_impl((void *)&_mh_execute_header, v22, v24, "%s->%s (%ld): Scrolling revealed cell for folder node: %s", (uint8_t *)v26, 0x2Au);
      swift_arrayDestroy(v28, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v14, v50);
    }

    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a4, 2);
    v47 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v48 = v14;
  }
  else
  {
    v52 = a5;
    v35 = Logger.Rename.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v35, v10);
    swift_bridgeObjectRetain_n(a4, 2);
    v36 = swift_unknownObjectRetain_n(a2, 2);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc(42, -1);
      v40 = swift_slowAlloc(96, -1);
      v51 = v11;
      v41 = v40;
      v54 = v40;
      *(_DWORD *)v39 = 136315906;
      swift_bridgeObjectRetain(a4);
      v53 = sub_1000544FC(a3, a4, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v39 + 12) = 2080;
      v53 = sub_1000544FC(0xD000000000000010, 0x8000000100516C70, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v39 + 22) = 2048;
      v53 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v39 + 32) = 2080;
      v43 = swift_getObjectType(a2, v42);
      v44 = DOCNode.nodeDescription.getter(v43);
      v46 = v45;
      v53 = sub_1000544FC(v44, v45, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v46);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s->%s (%ld): Scrolling FAILED. Could not find cell for folder node: %s", (uint8_t *)v39, 0x2Au);
      swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v39, -1, -1);

      v47 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
    }
    else
    {

      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease_n(a4, 2);
      v47 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    }
    v48 = v16;
  }
  return v47(v48, v10);
}

void sub_1001ADBC0(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _BYTE *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  int v50;
  uint64_t v51;
  void (*v52)(void *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a4;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - v16;
  v18 = sub_100195350((uint64_t)a2);
  if (v18)
  {
    v19 = v18;
    v20 = Logger.Rename.unsafeMutableAddressor(v18);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v14, v20, v55);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.debug.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v57 = v25;
      *(_DWORD *)v24 = 136315138;
      v56 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s: Scrolling completed and found cell", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v55);
    v26 = v19;
    a3(v19);

  }
  else
  {
    v27 = Logger.Rename.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v17, v27, v55);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a5, v8);
    v28 = swift_unknownObjectRetain_n(a2, 2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc(32, -1);
      v52 = a3;
      v33 = v32;
      v51 = swift_slowAlloc(96, -1);
      v57 = v51;
      *(_DWORD *)v33 = 136315650;
      v50 = v31;
      v56 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, &v57);
      *(_QWORD *)&v34 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57).n128_u64[0];
      *(_WORD *)(v33 + 12) = 2080;
      v35 = objc_msgSend(a2, "description", v34, v33 + 14);
      v49 = v29;
      v36 = v35;
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v39 = v38;

      v56 = sub_1000544FC(v37, v39, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      swift_unknownObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v33 + 22) = 2080;
      v40 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v41 = dispatch thunk of CustomStringConvertible.description.getter(v8, v40);
      v43 = v42;
      v56 = sub_1000544FC(v41, v42, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      v44 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v44);
      v45 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v50, "%s: Could not find item cell for node: %s indexPath: %s", (uint8_t *)v33, 0x20u);
      v46 = v51;
      swift_arrayDestroy(v51, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      v47 = v33;
      a3 = v52;
      swift_slowDealloc(v47, -1, -1);

    }
    else
    {
      swift_unknownObjectRelease_n(a2, 2);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v55);
    a3(0);
  }
}

uint64_t sub_1001AE068(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Rename.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = swift_bridgeObjectRetain_n(a2, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v21 = a3;
    v16 = v15;
    v17 = swift_slowAlloc(64, -1);
    v23 = v17;
    *(_DWORD *)v16 = 136315394;
    swift_bridgeObjectRetain(a2);
    v22 = sub_1000544FC(a1, a2, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v16 + 12) = 2080;
    v22 = sub_1000544FC(0x2870756E61656C63, 0xE900000000000029, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s > %s: clearing preparing state", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v18 = v16;
    a3 = v21;
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) = 0;
  return result;
}

uint64_t sub_1001AE284(uint64_t a1, unint64_t a2, char *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  double v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __n128 v62;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, __n128);
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;

  v71 = a5;
  v9 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v9);
  v73 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v74 = *(_QWORD *)(v11 - 8);
  v75 = v11;
  __chkstk_darwin(v11);
  v68 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v72 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v64 - v18;
  v20 = Logger.Rename.unsafeMutableAddressor(v17);
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  v66 = v20;
  v67 = v21;
  ((void (*)(char *))v21)(v19);
  v22 = swift_bridgeObjectRetain_n(a2, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v69 = v13;
    v26 = a2;
    v27 = v25;
    v28 = swift_slowAlloc(64, -1);
    v76[0] = v28;
    *(_DWORD *)v27 = 136315394;
    v65 = a4;
    swift_bridgeObjectRetain(v26);
    v77 = sub_1000544FC(a1, v26, v76);
    v70 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
    swift_bridgeObjectRelease_n(v26, 3);
    *(_WORD *)(v27 + 12) = 2080;
    v77 = sub_1000544FC(0xD000000000000011, 0x8000000100515420, v76);
    a3 = v70;
    a4 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s > %s BEGIN", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v29 = v27;
    a2 = v26;
    v13 = v69;
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v19, v13);
  v31 = v73;
  sub_10017A9F4(a4, v73);
  v33 = v74;
  v32 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v74 + 48))(v31, 1, v75) == 1)
  {
    sub_10000CB4C(v31, (uint64_t *)&unk_100642710);
    ObjectType = swift_getObjectType(a4, v34);
    v36 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
    v37 = *(void **)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
    *(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = v36;

    v38 = *(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder];
    v39 = v71;
    *(_QWORD *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = v71;
    swift_bridgeObjectRetain(v39);
    v40 = swift_bridgeObjectRelease(v38);
    v41 = v72;
    v67(v72, v66, v13, v40);
    swift_bridgeObjectRetain_n(a2, 2);
    v42 = swift_unknownObjectRetain_n(a4, 2);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter();
    v45 = v13;
    v46 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v47 = swift_slowAlloc(32, -1);
      LODWORD(v73) = v46;
      v48 = a4;
      v49 = v47;
      v74 = swift_slowAlloc(96, -1);
      v76[0] = v74;
      *(_DWORD *)v49 = 136315650;
      v70 = a3;
      swift_bridgeObjectRetain(a2);
      v77 = sub_1000544FC(a1, a2, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      swift_bridgeObjectRelease_n(a2, 3);
      v75 = a2;
      *(_WORD *)(v49 + 12) = 2080;
      v77 = sub_1000544FC(0xD000000000000011, 0x8000000100515420, v76);
      *(_QWORD *)&v50 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78).n128_u64[0];
      *(_WORD *)(v49 + 22) = 2080;
      v51 = objc_msgSend(v48, "description", v50);
      v52 = a1;
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v69 = v45;
      v55 = v54;

      a2 = v75;
      v56 = v53;
      a1 = v52;
      v77 = sub_1000544FC(v56, v55, v76);
      a3 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, &v78);
      swift_unknownObjectRelease_n(v48, 2);
      swift_bridgeObjectRelease(v55);
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v73, "%s > %s: item collection doesn't contain new folder: %s yet, enqueing", (uint8_t *)v49, 0x20u);
      v57 = v74;
      swift_arrayDestroy(v74, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      v58 = v72;
      v59 = v69;
    }
    else
    {

      swift_unknownObjectRelease_n(a4, 2);
      swift_bridgeObjectRelease_n(a2, 2);
      v58 = v41;
      v59 = v13;
    }
    v30(v58, v59);
    return sub_1001AE068(a1, a2, (uint64_t)a3);
  }
  else
  {
    v60 = v68;
    (*(void (**)(char *, uint64_t, unint64_t))(v33 + 32))(v68, v31, v32);
    v61 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v76, 0, 0);
    if (*(_QWORD *)v61 == 2)
      v62.n128_f64[0] = sub_1001AE8B0(a1, a2, a3, v71, (char *)a4, v60);
    else
      sub_1001B05C4(a1, a2, a3, a4, (uint64_t)v60);
    return (*(uint64_t (**)(char *, unint64_t, __n128))(v33 + 8))(v60, v32, v62);
  }
}

double sub_1001AE8B0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, char *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a3;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Rename.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v31 = a6;
    v21 = v20;
    v29 = swift_slowAlloc(64, -1);
    v35 = v29;
    *(_DWORD *)v21 = 136315394;
    v32 = a4;
    swift_bridgeObjectRetain(a2);
    v34 = sub_1000544FC(a1, a2, &v35);
    v30 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v21 + 12) = 2080;
    v34 = sub_1000544FC(0xD000000000000019, 0x8000000100515440, &v35);
    a4 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s > %s: BEGIN", (uint8_t *)v21, 0x16u);
    v22 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v21;
    a6 = v31;
    swift_slowDealloc(v23, -1, -1);

    v24 = v15;
    v25 = v30;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    v25 = a1;
  }
  swift_bridgeObjectRetain(a2);
  swift_unknownObjectRetain(a5);
  v26 = (char *)v33;
  swift_bridgeObjectRetain(a4);
  sub_1001CC6E4(a5, a6, v26, a5, v25, a2, v26, a4);
  swift_unknownObjectRelease(a5);
  swift_bridgeObjectRelease(a2);

  *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

uint64_t sub_1001AEB58(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  char *v30;
  id v31;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a6;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Rename.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  v17 = swift_bridgeObjectRetain_n(a4, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v35 = a2;
    v21 = v20;
    v22 = swift_slowAlloc(64, -1);
    v37 = a3;
    v23 = v22;
    v40 = v22;
    *(_DWORD *)v21 = 136315394;
    v34 = a5;
    swift_bridgeObjectRetain(a4);
    v39 = sub_1000544FC(v37, a4, &v40);
    v36 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v21 + 12) = 2080;
    v39 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, &v40);
    a1 = v36;
    a5 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s > %s: Beginning rename steps starting with validateNodeSelectionAndPerformDidPickIfNeeded", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    v24 = v23;
    a3 = v37;
    swift_slowDealloc(v24, -1, -1);
    v25 = v21;
    a2 = v35;
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v26 = (_QWORD *)swift_allocObject(&unk_1005CC9D0, 64, 7);
  v26[2] = a3;
  v26[3] = a4;
  v26[4] = a5;
  v26[5] = a1;
  v27 = v38;
  v26[6] = v38;
  v26[7] = a2;
  ObjectType = swift_getObjectType(a1, v28);
  swift_bridgeObjectRetain(a4);
  v30 = a5;
  swift_unknownObjectRetain(a1);
  swift_bridgeObjectRetain(v27);
  v31 = a2;
  sub_1001B66A4(a1, 0, (void (*)(void))sub_1001CF384, (uint64_t)v26, v30, ObjectType);
  return swift_release(v26);
}

uint64_t sub_1001AEE0C(uint64_t a1, unint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  id v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t aBlock[5];
  _QWORD *v74;

  v62 = a5;
  v63 = a6;
  v61 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  __chkstk_darwin(v9);
  v69 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  __chkstk_darwin(v11);
  v66 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v65 - 8);
  v14 = __chkstk_darwin(v65);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v64 = (char *)&v56 - v17;
  v18 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = Logger.Rename.unsafeMutableAddressor(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v23, v18);
  v24 = swift_bridgeObjectRetain_n(a2, 2);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.debug.getter();
  v27 = os_log_type_enabled(v25, v26);
  v60 = a2;
  if (v27)
  {
    v28 = swift_slowAlloc(22, -1);
    v58 = v13;
    v29 = v28;
    v56 = swift_slowAlloc(64, -1);
    aBlock[0] = v56;
    *(_DWORD *)v29 = 136315394;
    v59 = a3;
    v57 = v16;
    swift_bridgeObjectRetain(a2);
    v72 = sub_1000544FC(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v29 + 12) = 2080;
    v72 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, aBlock);
    v16 = v57;
    a3 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s > %s: validation and selection completed", (uint8_t *)v29, 0x16u);
    v30 = v56;
    swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v31 = v29;
    v13 = v58;
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  v32 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v33 = (void *)static OS_dispatch_queue.main.getter(v32);
  static DispatchTime.now()(v33);
  v34 = v64;
  + infix(_:_:)(v16, 1.0);
  v59 = *(void (**)(_QWORD, _QWORD))(v13 + 8);
  v35 = v65;
  v59(v16, v65);
  v36 = swift_allocObject(&unk_1005CBE18, 24, 7);
  v37 = a3;
  swift_unknownObjectWeakInit(v36 + 16);
  v38 = (_QWORD *)swift_allocObject(&unk_1005CCBD8, 72, 7);
  v39 = v60;
  v40 = v61;
  v38[2] = a1;
  v38[3] = v39;
  v42 = v62;
  v41 = v63;
  v38[4] = v40;
  v38[5] = v42;
  v38[6] = v36;
  v38[7] = v37;
  v38[8] = v41;
  aBlock[4] = (uint64_t)sub_1001CF74C;
  v74 = v38;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CCBF0;
  v43 = _Block_copy(aBlock);
  v44 = v74;
  swift_bridgeObjectRetain(v39);
  swift_unknownObjectRetain(v40);
  swift_bridgeObjectRetain(v42);
  v45 = v37;
  v46 = v41;
  v47 = swift_release(v44);
  v48 = v66;
  static DispatchQoS.unspecified.getter(v47);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v49 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v50 = sub_10006922C((uint64_t *)&unk_100647540);
  v51 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v52 = v69;
  v53 = v50;
  v54 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v53, v51, v71, v49);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v34, v48, v52, v43);
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v52, v54);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v48, v68);
  return ((uint64_t (*)(char *, uint64_t))v59)(v34, v35);
}

uint64_t sub_1001AF324(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t result;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v50 = a5;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Logger.Rename.unsafeMutableAddressor(v15);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v51 = v13;
  v19(v17, v18, v13);
  swift_bridgeObjectRetain_n(a2, 2);
  v20 = swift_unknownObjectRetain_n(a3, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter();
  v23 = os_log_type_enabled(v21, v22);
  v48 = a1;
  v49 = a4;
  if (v23)
  {
    v24 = swift_slowAlloc(32, -1);
    v46 = a6;
    v25 = v24;
    v45 = swift_slowAlloc(96, -1);
    v53 = v45;
    *(_DWORD *)v25 = 136315650;
    swift_bridgeObjectRetain(a2);
    v52 = sub_1000544FC(a1, a2, &v53);
    v47 = a7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v25 + 12) = 2080;
    v52 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    *(_WORD *)(v25 + 22) = 2080;
    v52 = a3;
    swift_unknownObjectRetain(a3);
    v26 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v27 = String.init<A>(describing:)(&v52, v26);
    v29 = v28;
    v52 = sub_1000544FC(v27, v28, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    swift_unknownObjectRelease_n(a3, 2);
    v30 = v29;
    a7 = v47;
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s > %s: collection view quiescent timer finished, re-fetching item: %s", (uint8_t *)v25, 0x20u);
    v31 = v45;
    swift_arrayDestroy(v45, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    v32 = v25;
    a6 = v46;
    swift_slowDealloc(v32, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v51);
  v33 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  ObjectType = swift_getObjectType(a3, v34);
  result = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  if (result)
  {
    v37 = (void *)result;
    v38 = (_QWORD *)swift_allocObject(&unk_1005CCC28, 64, 7);
    v39 = v49;
    v38[2] = v48;
    v38[3] = a2;
    v40 = v50;
    v38[4] = v39;
    v38[5] = v40;
    v38[6] = a6;
    v38[7] = a7;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v39);
    swift_retain();
    v41 = a6;
    v42 = a7;
    FPItemManager.doc_refetchItem(_:completion:)(v37, sub_1001CF7A4, v38, v43);

    return swift_release(v38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001AF68C(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t Strong;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  _QWORD *v66;
  id v67;
  id v68;
  id v69;
  _BYTE v70[12];
  int v71;
  _QWORD *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t aBlock[5];
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;

  v79 = a6;
  v80 = a3;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = &v70[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __chkstk_darwin(v16);
  v21 = &v70[-v20];
  if (a1)
  {
    v78 = a5;
    v22 = a1;
    v23 = Logger.Rename.unsafeMutableAddressor(v22);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v18, v23, v14);
    swift_bridgeObjectRetain_n(a4, 2);
    v24 = v22;
    v77 = v18;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc(32, -1);
      v74 = a7;
      v29 = v28;
      v72 = (_QWORD *)swift_slowAlloc(8, -1);
      v73 = swift_slowAlloc(64, -1);
      aBlock[0] = v73;
      *(_DWORD *)v29 = 136315650;
      v75 = v15;
      swift_bridgeObjectRetain(a4);
      v83 = sub_1000544FC(v80, a4, aBlock);
      v71 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v29 + 12) = 2080;
      v83 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
      *(_WORD *)(v29 + 22) = 2112;
      v83 = (uint64_t)v24;
      v30 = v24;
      v76 = v14;
      v31 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
      v32 = v72;
      *v72 = a1;

      _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v71, "%s > %s: re-fetched item: %@", (uint8_t *)v29, 0x20u);
      v33 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v32, 1, v33);
      swift_slowDealloc(v32, -1, -1);
      v34 = v73;
      swift_arrayDestroy(v73, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      v35 = v29;
      a7 = v74;
      swift_slowDealloc(v35, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v77, v76);
    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v77, v14);
    }
    v49 = v78;
    if ((unint64_t)v78 >> 62)
    {
      if (v78 < 0)
        v62 = v78;
      else
        v62 = v78 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v78);
      v63 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v49);
      if (v63 >= 1)
        goto LABEL_9;
    }
    else if (*(uint64_t *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_9:
      v50 = v79 + 16;
      swift_beginAccess(v79 + 16, aBlock, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v50, v51);
      if (Strong)
      {
        v53 = (void *)Strong;
        v54 = (_QWORD *)swift_allocObject(&unk_1005CCCA0, 56, 7);
        v54[2] = v80;
        v54[3] = a4;
        v54[4] = a7;
        v54[5] = v24;
        v54[6] = a8;
        v55 = swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v55 + 16);
        v56 = (_QWORD *)swift_allocObject(&unk_1005CCCC8, 48, 7);
        v56[2] = v55;
        v56[3] = v24;
        v56[4] = sub_1001CF7C8;
        v56[5] = v54;
        v57 = v24;
        swift_bridgeObjectRetain(a4);
        v58 = v57;
        v59 = a7;
        v60 = a8;
        swift_retain();
        v61 = sub_10006922C((uint64_t *)&unk_1006424B0);
        Array<A>.fpfs_fetchAllFPItems(completion:)(sub_1001D25FC, v56, v49, v61);

        swift_release(v54);
        swift_release(v56);
      }
      else
      {

      }
      return;
    }
    v64 = (_QWORD *)swift_allocObject(&unk_1005CCC50, 56, 7);
    v64[2] = v80;
    v64[3] = a4;
    v64[4] = a7;
    v64[5] = v24;
    v64[6] = a8;
    aBlock[4] = (uint64_t)sub_1001CF7B8;
    v82 = v64;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005CCC68;
    v65 = _Block_copy(aBlock);
    v66 = v82;
    swift_bridgeObjectRetain(a4);
    v67 = v24;
    v68 = a7;
    v69 = a8;
    swift_release(v66);
    DOCRunInMainThread(v65);

    _Block_release(v65);
    return;
  }
  v36 = Logger.Rename.unsafeMutableAddressor(v19);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v21, v36, v14);
  v37 = a2;
  swift_bridgeObjectRetain_n(a4, 2);
  v38 = v37;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.error.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = a4;
    v42 = swift_slowAlloc(32, -1);
    v43 = swift_slowAlloc(96, -1);
    aBlock[0] = v43;
    *(_DWORD *)v42 = 136315650;
    v76 = v14;
    swift_bridgeObjectRetain(v41);
    v83 = sub_1000544FC(v80, v41, aBlock);
    v75 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    swift_bridgeObjectRelease_n(v41, 3);
    *(_WORD *)(v42 + 12) = 2080;
    v83 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    *(_WORD *)(v42 + 22) = 2080;
    v83 = (uint64_t)a2;
    v44 = v38;
    v45 = sub_10006922C((uint64_t *)&unk_100646AC0);
    v46 = String.init<A>(describing:)(&v83, v45);
    v48 = v47;
    v83 = sub_1000544FC(v46, v47, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);

    swift_bridgeObjectRelease(v48);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s > %s: could not re-fetch folder, error: %s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy(v43, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v21, v76);
  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v21, v14);
  }
}

void sub_1001AFDC8(int a1, uint64_t a2, unint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t aBlock[5];
  _QWORD *v38;

  v35 = a6;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Rename.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  v17 = swift_bridgeObjectRetain_n(a3, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(28, -1);
    v33 = a4;
    v21 = v20;
    v32 = swift_slowAlloc(64, -1);
    aBlock[0] = v32;
    *(_DWORD *)v21 = 136315650;
    HIDWORD(v31) = a1;
    swift_bridgeObjectRetain(a3);
    v36 = sub_1000544FC(a2, a3, aBlock);
    v34 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, aBlock);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v21 + 12) = 2080;
    v36 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, aBlock);
    a5 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, aBlock);
    *(_WORD *)(v21 + 22) = 1024;
    LODWORD(v36) = BYTE4(v31) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 4);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s > %s: move success finished with success: %{BOOL}d. Starting rename", (uint8_t *)v21, 0x1Cu);
    v22 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v21;
    a4 = v33;
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v24 = (_QWORD *)swift_allocObject(&unk_1005CCCF0, 56, 7);
  v24[2] = a2;
  v24[3] = a3;
  v24[4] = a4;
  v24[5] = a5;
  v25 = v35;
  v24[6] = v35;
  aBlock[4] = (uint64_t)sub_1001CF860;
  v38 = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CCD08;
  v26 = _Block_copy(aBlock);
  v27 = v38;
  swift_bridgeObjectRetain(a3);
  v28 = a4;
  v29 = a5;
  v30 = v25;
  swift_release(v27);
  DOCRunInMainThread(v26);
  _Block_release(v26);
}

uint64_t sub_1001B00C0(uint64_t a1, unint64_t a2, _BYTE *a3, void *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v26;
  void *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v29 = a1;
    v20 = v19;
    v21 = swift_slowAlloc(64, -1);
    v28 = a3;
    v22 = v21;
    v31 = v21;
    *(_DWORD *)v20 = 136315394;
    v27 = a5;
    swift_bridgeObjectRetain(a2);
    v30 = sub_1000544FC(v29, a2, &v31);
    v26 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v30 = sub_1000544FC(0xD000000000000026, 0x80000001005154A0, &v31);
    a4 = v26;
    a5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s > %s: No node to move. Starting rename", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    v23 = v22;
    a3 = v28;
    swift_slowDealloc(v23, -1, -1);
    v24 = v20;
    a1 = v29;
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return sub_1001B8CFC(a4, a5, a1, a2, a3);
}

void sub_1001B0304(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  os_log_t v33[2];
  uint64_t v34;
  int v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v37 = a1;
    sub_1001AEB58(a2, v37, a3, a4, a5, a6);

  }
  else
  {
    v17 = Logger.Rename.unsafeMutableAddressor(v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
    v18 = swift_unknownObjectRetain_n(a2, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc(22, -1);
      v35 = v21;
      v23 = v22;
      v34 = swift_slowAlloc(64, -1);
      v39 = v34;
      *(_DWORD *)v23 = 136315394;
      v38 = sub_1000544FC(0xD000000000000019, 0x8000000100515440, &v39);
      v36 = a4;
      *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39).n128_u64[0];
      *(_WORD *)(v23 + 12) = 2080;
      v33[1] = (os_log_t)(v23 + 14);
      v25 = objc_msgSend(a2, "description", v24);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v33[0] = v19;
      v27 = v26;
      v37 = a5;
      v29 = v28;

      v38 = sub_1000544FC(v27, v29, &v39);
      a4 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
      swift_unknownObjectRelease_n(a2, 2);
      v30 = v29;
      a5 = v37;
      swift_bridgeObjectRelease(v30);
      v31 = v33[0];
      _os_log_impl((void *)&_mh_execute_header, v33[0], (os_log_type_t)v35, "%s: Could not show inline rename for item: %s. Unable to find cell.", (uint8_t *)v23, 0x16u);
      v32 = v34;
      swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a2, 2);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    sub_1001AE068(a3, a4, (uint64_t)a5);
  }
}

uint64_t sub_1001B05C4(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v27 = v10;
    v20 = v19;
    v26 = swift_slowAlloc(64, -1);
    v31 = v26;
    *(_DWORD *)v20 = 136315394;
    v28 = a3;
    swift_bridgeObjectRetain(a2);
    v21 = sub_1000544FC(a1, a2, &v31);
    v29 = a5;
    v30 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v20 + 12) = 2080;
    v30 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100515BE0, &v31);
    a3 = v28;
    a5 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s > %s: BEGIN", (uint8_t *)v20, 0x16u);
    v22 = v26;
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v27);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  swift_bridgeObjectRetain(a2);
  v23 = a3;
  v24 = (void *)swift_unknownObjectRetain(a4);
  sub_1001CCF24(v24, a5, v23, a1, a2, v23, a4);
  swift_bridgeObjectRelease(a2);

  return swift_unknownObjectRelease(a4);
}

void sub_1001B0840(void *a1, uint64_t a2, unint64_t a3, _BYTE *a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v34[2];
  int v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType(a5, v13);
    v38 = a1;
    sub_1001B9120(a5, v38, a2, a3, a4, ObjectType);

  }
  else
  {
    v17 = Logger.Rename.unsafeMutableAddressor(v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, v17, v10);
    v18 = swift_unknownObjectRetain_n(a5, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc(22, -1);
      v37 = a3;
      v23 = v22;
      v36 = swift_slowAlloc(64, -1);
      v40 = v36;
      *(_DWORD *)v23 = 136315394;
      v39 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100515BE0, &v40);
      v35 = v21;
      *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40).n128_u64[0];
      *(_WORD *)(v23 + 12) = 2080;
      v34[1] = (os_log_t)(v23 + 14);
      v25 = objc_msgSend(a5, "description", v24);
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v34[0] = v19;
      v27 = v26;
      v38 = a4;
      v29 = v28;

      v39 = sub_1000544FC(v27, v29, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_unknownObjectRelease_n(a5, 2);
      v30 = v29;
      a4 = v38;
      swift_bridgeObjectRelease(v30);
      v31 = v34[0];
      _os_log_impl((void *)&_mh_execute_header, v34[0], (os_log_type_t)v35, "%s: Could not show inline rename for item: %s", (uint8_t *)v23, 0x16u);
      v32 = v36;
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      v33 = v23;
      a3 = v37;
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a5, 2);
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    sub_1001AE068(a2, a3, (uint64_t)a4);
  }
}

uint64_t sub_1001B0B08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Logger.Rename.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  v14 = swift_bridgeObjectRetain_n(a2, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(22, -1);
    v23[1] = a3;
    v18 = v17;
    v19 = swift_slowAlloc(64, -1);
    v27 = v19;
    *(_DWORD *)v18 = 136315394;
    v25 = a4;
    swift_bridgeObjectRetain(a2);
    v26 = sub_1000544FC(a1, a2, &v27);
    v24 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v18 + 12) = 2080;
    v26 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100515BC0, &v27);
    a1 = v24;
    a4 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s > %s: now safe to change first responder, beginning rename", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v20 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_10038C8C0(v20, v21);
  return sub_1001AE068(a1, a2, a4);
}

uint64_t sub_1001B0D40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = Logger.Rename.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  swift_bridgeObjectRetain_n(a3, 2);
  v17 = swift_bridgeObjectRetain_n(a4, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v28 = a5;
    v29 = a6;
    v20 = a2;
    v21 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(32, -1);
    v31 = v26;
    *(_DWORD *)v21 = 136315394;
    swift_bridgeObjectRetain(a3);
    v27 = v20;
    v30 = sub_1000544FC(v20, a3, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v21 + 12) = 2048;
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v25 = a4;
      else
        v25 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a4);
      v22 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(a4);
    }
    else
    {
      v22 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a4);
    v30 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    swift_bridgeObjectRelease(a4);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s not in column view with: %ld nodes to move. Node move success! preparing to rename", (uint8_t *)v21, 0x16u);
    v23 = v26;
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    a5 = v28;
    a6 = v29;
    a2 = v27;
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a4, 2);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  return sub_1001AE284(a2, a3, a5, a6, a4);
}

id sub_1001B0FD4()
{
  return DOCItemCollectionViewController.actionContext(from:)();
}

id sub_1001B0FE4()
{
  void *v0;

  return objc_msgSend(v0, "isEditing");
}

uint64_t DOCTab.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x6573776F7242;
  v2 = 0x3F3F3F3F3FLL;
  if (a1 == 1)
    v2 = 0x646572616853;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x73746E65636552;
}

uint64_t sub_1001B10D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 0x6573776F7242;
  v3 = 0x3F3F3F3F3FLL;
  if (*v0 == 1)
    v3 = 0x646572616853;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x73746E65636552;
}

id sub_1001B113C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id result;
  uint64_t v7;
  _BYTE *v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  os_log_type_t v14;
  uint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(DOCFeature);
  result = objc_msgSend(v5, "protectedAppsEnabled");
  if ((_DWORD)result)
  {
    v7 = Logger.UI.unsafeMutableAddressor(result);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
    v8 = v0;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      v20 = v10;
      v11 = swift_slowAlloc(24, -1);
      v19 = swift_slowAlloc(32, -1);
      v22 = v19;
      *(_DWORD *)v11 = 136315650;
      v21 = sub_1000544FC(0xD00000000000002DLL, 0x8000000100516E70, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      *(_WORD *)(v11 + 12) = 1024;
      v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
      LODWORD(v21) = v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4);
      *(_WORD *)(v11 + 18) = 1024;
      if (objc_msgSend(v5, "protectedAppsEnabled"))
      {
        v13 = v8[v12];
        v14 = v20;
        v15 = v19;
        v16 = v13 == 1
           && (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
      }
      else
      {
        v16 = 0;
        v14 = v20;
        v15 = v19;
      }
      LODWORD(v21) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4);

      _os_log_impl((void *)&_mh_execute_header, v9, v14, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d reload contents of item collection", (uint8_t *)v11, 0x18u);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v17 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    v18 = swift_bridgeObjectRetain(v17);
    sub_100039F10(v18, 0);
    return (id)swift_bridgeObjectRelease(v17);
  }
  return result;
}

void sub_1001B13DC()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_100672758 = v2;
}

uint64_t sub_1001B1468(char *a1, uint64_t a2, char a3)
{
  Class isa;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  UIAccessibilityPostNotification(0x3FCu, v7);
  v8 = &a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate], v9);
  if (result)
  {
    v12 = result;
    v13 = *((_QWORD *)v8 + 1);
    ObjectType = swift_getObjectType(result, v11);
    (*(void (**)(char *, _UNKNOWN **, uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 72))(a1, &off_1005E7FD8, a2, a3 & 1, ObjectType, v13);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

void sub_1001B1540(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(sub_10006922C((uint64_t *)&unk_100644C10) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100465660(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1001B1858(v5);
  *a1 = v3;
}

Swift::Int sub_1001B15C4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  Swift::Int result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100465674(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1001B2258(v6);
  *a1 = v3;
  return result;
}

id sub_1001B1644(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10004F2F0(0, (unint64_t *)&qword_100644320, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain();
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

uint64_t sub_1001B16BC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1001B1720;
  return v6(a1);
}

uint64_t sub_1001B1720()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1001B176C(_QWORD *a1)
{
  uint64_t v1;

  return sub_100178A10(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001B1774(uint64_t a1, uint64_t a2)
{
  return sub_1001B17D4(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (unint64_t *)&qword_100649150, (uint64_t)&protocol conformance descriptor for IndexPath) & 1;
}

uint64_t sub_1001B17A4(uint64_t a1, uint64_t a2)
{
  return sub_1001B17D4(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Date, &qword_100646A88, (uint64_t)&protocol conformance descriptor for Date) & 1;
}

uint64_t sub_1001B17D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;

  v10 = a3(0);
  v11 = sub_10005A360(a4, a3, a5);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v10, v11) & 1;
}

void sub_1001B1858(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Int v17;
  unint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  Swift::Int v36;
  uint64_t v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  Swift::Int v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::Int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  Swift::Int v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  _QWORD *v119;
  char *v120;
  _QWORD *v121;
  Swift::Int v122;
  Swift::Int v123;
  uint64_t v124;
  Swift::Int v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  Swift::Int v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v134 = sub_10006922C((uint64_t *)&unk_100644C10);
  v127 = *(_QWORD *)(v134 - 8);
  v3 = __chkstk_darwin(v134);
  v124 = (uint64_t)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v135 = (uint64_t)&v120 - v6;
  v7 = __chkstk_darwin(v5);
  v132 = (uint64_t)&v120 - v8;
  __chkstk_darwin(v7);
  v131 = (uint64_t)&v120 - v9;
  v10 = a1[1];
  v11 = _minimumMergeRunLength(_:)(v10);
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      sub_1001B2CA4(0, v10, 1, a1);
    return;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v133 = a1;
  v122 = v11;
  v128 = v1;
  if (v10 < 2)
  {
    v16 = (char *)_swiftEmptyArrayStorage;
    v126 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    v121 = _swiftEmptyArrayStorage;
    if (v10 != 1)
    {
      v18 = _swiftEmptyArrayStorage[2];
LABEL_105:
      v105 = v16;
      if (v18 >= 2)
      {
        v112 = *v133;
        do
        {
          v113 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v112)
            goto LABEL_146;
          v114 = *(_QWORD *)&v105[16 * v113 + 32];
          v115 = *(_QWORD *)&v105[16 * v18 + 24];
          v116 = v128;
          sub_1001B3138(v112 + *(_QWORD *)(v127 + 72) * v114, v112 + *(_QWORD *)(v127 + 72) * *(_QWORD *)&v105[16 * v18 + 16], v112 + *(_QWORD *)(v127 + 72) * v115, v126);
          v128 = v116;
          if (v116)
            break;
          if (v115 < v114)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0)
            v105 = sub_10046564C((uint64_t)v105);
          if (v113 >= *((_QWORD *)v105 + 2))
            goto LABEL_136;
          v117 = &v105[16 * v113 + 32];
          *(_QWORD *)v117 = v114;
          *((_QWORD *)v117 + 1) = v115;
          v118 = *((_QWORD *)v105 + 2);
          if (v18 > v118)
            goto LABEL_137;
          memmove(&v105[16 * v18 + 16], &v105[16 * v18 + 32], 16 * (v118 - v18));
          *((_QWORD *)v105 + 2) = v118 - 1;
          v18 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease(v105);
      v119 = v121;
      v121[2] = 0;
      swift_bridgeObjectRelease(v119);
      return;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = static Array._allocateBufferUninitialized(minimumCapacity:)(v12 >> 1, v134);
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v127 + 80);
    v121 = (_QWORD *)v14;
    v126 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v133;
    v22 = *(_QWORD *)(v127 + 72);
    v23 = v131;
    sub_1000271D4(*v133 + v22 * v20, v131, (uint64_t *)&unk_100644C10);
    v24 = v21 + v22 * v17;
    v25 = v132;
    sub_1000271D4(v24, v132, (uint64_t *)&unk_100644C10);
    LODWORD(v130) = static IndexPath.< infix(_:_:)(v23 + *(int *)(v134 + 48), v25 + *(int *)(v134 + 48));
    sub_10000CB4C(v25, (uint64_t *)&unk_100644C10);
    sub_10000CB4C(v23, (uint64_t *)&unk_100644C10);
    v17 = v19 + 2;
    v129 = v21;
    v136 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v125 = v19;
    v26 = v16;
    v27 = v22 * v20;
    v28 = v21;
    v29 = v19 + 2;
    v30 = v22 * v29;
    do
    {
      v31 = v10;
      v32 = v131;
      sub_1000271D4(v28 + v30, v131, (uint64_t *)&unk_100644C10);
      v33 = v132;
      sub_1000271D4(v28 + v27, v132, (uint64_t *)&unk_100644C10);
      v34 = static IndexPath.< infix(_:_:)(v32 + *(int *)(v134 + 48), v33 + *(int *)(v134 + 48));
      sub_10000CB4C(v33, (uint64_t *)&unk_100644C10);
      sub_10000CB4C(v32, (uint64_t *)&unk_100644C10);
      if (((v130 ^ v34) & 1) != 0)
      {
        v16 = v26;
        v17 = v29;
        v19 = v125;
        v10 = v31;
        if ((v130 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v28 += v136;
      ++v29;
      v10 = v31;
    }
    while (v31 != v29);
    v16 = v26;
    v17 = v31;
    v19 = v125;
LABEL_21:
    if ((v130 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v51 = v136;
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v35 = v133;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100464E4C(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_100464E4C((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_122;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_123;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_125;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_128;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_132;
            v92 = v67 < v102;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_88;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_124;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_127;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_130;
        if (__OFADD__(v86, v91))
          goto LABEL_131;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_94:
          if (v92)
            v64 = v76;
          goto LABEL_96;
        }
LABEL_88:
        if ((v87 & 1) != 0)
          goto LABEL_126;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_129;
        if (v98 < v86)
          goto LABEL_14;
LABEL_96:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v133)
          goto LABEL_144;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v128;
        sub_1001B3138(*v133 + *(_QWORD *)(v127 + 72) * *(_QWORD *)v106, *v133 + *(_QWORD *)(v127 + 72) * *(_QWORD *)v108, *v133 + *(_QWORD *)(v127 + 72) * v109, v126);
        v128 = v110;
        if (v110)
          goto LABEL_116;
        if (v109 < v107)
          goto LABEL_119;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_120;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_121;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v133[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v130 = v10;
  v120 = v16;
  v52 = 0;
  v53 = v136 * (v17 - 1);
  v54 = v17 * v136;
  v55 = v19;
  v56 = v19 * v136;
  v35 = v133;
  v125 = v19;
  do
  {
    if (v55 != v17 + v52 - 1)
    {
      v57 = v129;
      if (!v129)
        goto LABEL_145;
      v58 = v129 + v56;
      v59 = v129 + v53;
      sub_100070EDC(v129 + v56, v124, (uint64_t *)&unk_100644C10);
      if (v56 < v53 || v58 >= v57 + v54)
      {
        swift_arrayInitWithTakeFrontToBack(v57 + v56, v57 + v53, 1, v134);
        v51 = v136;
      }
      else
      {
        v51 = v136;
        if (v56 != v53)
          swift_arrayInitWithTakeBackToFront(v58);
      }
      sub_100070EDC(v124, v59, (uint64_t *)&unk_100644C10);
      v35 = v133;
      v19 = v125;
    }
    ++v55;
    --v52;
    v53 -= v51;
    v54 -= v51;
    v56 += v51;
  }
  while (v55 < v17 + v52);
  v16 = v120;
  v10 = v130;
  if (v17 >= v130)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v122)
    goto LABEL_57;
  if (__OFADD__(v19, v122))
    goto LABEL_141;
  if (v19 + v122 >= v10)
    v36 = v10;
  else
    v36 = v19 + v122;
  if (v36 >= v19)
  {
    if (v17 != v36)
    {
      v120 = v16;
      v37 = *(_QWORD *)(v127 + 72);
      v136 = v37 * (v17 - 1);
      v129 = v37;
      v38 = v17 * v37;
      v125 = v19;
      v123 = v36;
      do
      {
        v40 = 0;
        v41 = v19;
        v130 = v17;
        while (1)
        {
          v42 = *v35;
          v43 = v38;
          v44 = v38 + v40 + *v35;
          v45 = v131;
          v46 = v35;
          sub_1000271D4(v44, v131, (uint64_t *)&unk_100644C10);
          v47 = v132;
          sub_1000271D4(v136 + v40 + v42, v132, (uint64_t *)&unk_100644C10);
          LOBYTE(v42) = static IndexPath.< infix(_:_:)(v45 + *(int *)(v134 + 48), v47 + *(int *)(v134 + 48));
          sub_10000CB4C(v47, (uint64_t *)&unk_100644C10);
          sub_10000CB4C(v45, (uint64_t *)&unk_100644C10);
          if ((v42 & 1) == 0)
            break;
          v48 = *v46;
          if (!*v46)
            goto LABEL_143;
          v38 = v43;
          v49 = v48 + v43 + v40;
          v50 = v48 + v136 + v40;
          sub_100070EDC(v49, v135, (uint64_t *)&unk_100644C10);
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v134);
          sub_100070EDC(v135, v50, (uint64_t *)&unk_100644C10);
          v39 = v130;
          v40 -= v129;
          ++v41;
          v35 = v133;
          if (v130 == v41)
            goto LABEL_35;
        }
        v39 = v130;
        v38 = v43;
        v35 = v46;
LABEL_35:
        v17 = v39 + 1;
        v136 += v129;
        v38 += v129;
        v19 = v125;
      }
      while (v17 != v123);
      v17 = v123;
      v16 = v120;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

Swift::Int sub_1001B2258(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int result;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Swift::Int v19;
  unint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  _QWORD *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  Swift::Int v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  Swift::Int v138;
  char *v139;
  char *v140;
  char *v141;
  Swift::Int v142;
  unint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  char *v153;
  Swift::Int v154;
  uint64_t v155;
  uint64_t v156;

  v3 = type metadata accessor for IndexPath(0);
  v156 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v141 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v153 = (char *)&v136 - v7;
  v8 = __chkstk_darwin(v6);
  v149 = (char *)&v136 - v9;
  __chkstk_darwin(v8);
  v148 = (char *)&v136 - v10;
  v11 = a1[1];
  result = _minimumMergeRunLength(_:)(v11);
  if (result >= v11)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11)
        return sub_1001B2EE4(0, v11, 1, a1);
      return result;
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v14 = result;
  v152 = v3;
  v144 = v1;
  if (v11 < 2)
  {
    v18 = (char *)_swiftEmptyArrayStorage;
    v143 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80));
    v137 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v20 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v20 < 2)
      {
LABEL_117:
        swift_bridgeObjectRelease(v18);
        v135 = v137;
        v137[2] = 0;
        return swift_bridgeObjectRelease(v135);
      }
      v127 = *a1;
      while (1)
      {
        v128 = v20 - 2;
        if (v20 < 2)
          goto LABEL_136;
        v129 = v144;
        if (!v127)
          goto LABEL_148;
        v130 = v18;
        v131 = *(_QWORD *)&v18[16 * v128 + 32];
        v132 = *(_QWORD *)&v18[16 * v20 + 24];
        sub_1001B35EC(v127 + *(_QWORD *)(v156 + 72) * v131, v127 + *(_QWORD *)(v156 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v127 + *(_QWORD *)(v156 + 72) * v132, v143);
        if (v129)
        {
          v125 = v18;
          goto LABEL_104;
        }
        if (v132 < v131)
          goto LABEL_137;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
          v130 = sub_10046564C((uint64_t)v18);
        if (v128 >= *((_QWORD *)v130 + 2))
          goto LABEL_138;
        v133 = &v130[16 * v128 + 32];
        *(_QWORD *)v133 = v131;
        *((_QWORD *)v133 + 1) = v132;
        v134 = *((_QWORD *)v130 + 2);
        if (v20 > v134)
          goto LABEL_139;
        v18 = v130;
        memmove(&v130[16 * v20 + 16], &v130[16 * v20 + 32], 16 * (v134 - v20));
        *((_QWORD *)v130 + 2) = v134 - 1;
        v20 = v134 - 1;
        v144 = 0;
        if (v134 <= 2)
          goto LABEL_117;
      }
    }
  }
  else
  {
    v15 = v13 >> 1;
    v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v156 + 80);
    v137 = (_QWORD *)v16;
    v143 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  v151 = a1;
  v138 = v14;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    v139 = v18;
    if (v19 + 1 >= v11)
    {
      ++v19;
      v42 = v144;
    }
    else
    {
      v23 = *a1;
      v24 = v156;
      v25 = v19;
      v26 = *(_QWORD *)(v156 + 72);
      v27 = *a1 + v26 * v22;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
      v29 = v148;
      v154 = v11;
      v30 = v152;
      v28(v148, v27, v152);
      v31 = v149;
      v28(v149, v23 + v26 * v25, v30);
      LODWORD(v150) = static IndexPath.< infix(_:_:)(v29, v31);
      v32 = *(void (**)(char *, uint64_t))(v24 + 8);
      v32(v31, v30);
      v33 = v30;
      v11 = v154;
      v32(v29, v33);
      v19 = v25 + 2;
      v146 = v23;
      v155 = v26;
      if (v25 + 2 >= v11)
      {
        a1 = v151;
        v42 = v144;
        v41 = v26;
        v21 = v25;
        v14 = v138;
      }
      else
      {
        v142 = v25;
        v147 = v26 * v22;
        v34 = v23;
        v35 = v26 * v19;
        while (1)
        {
          v36 = v19;
          v37 = v148;
          v38 = v152;
          v28(v148, v34 + v35, v152);
          v39 = v149;
          v28(v149, v34 + v147, v38);
          v40 = static IndexPath.< infix(_:_:)(v37, v39);
          v32(v39, v38);
          v32(v37, v38);
          if (((v150 ^ v40) & 1) != 0)
            break;
          v19 = v36 + 1;
          v41 = v155;
          v34 += v155;
          if (v154 == v36 + 1)
          {
            v11 = v154;
            v19 = v154;
            a1 = v151;
            v42 = v144;
            v14 = v138;
            v21 = v142;
            goto LABEL_24;
          }
        }
        a1 = v151;
        v42 = v144;
        v14 = v138;
        v19 = v36;
        v21 = v142;
        v11 = v154;
        v41 = v155;
      }
LABEL_24:
      v18 = v139;
      if ((v150 & 1) != 0)
      {
        if (v19 < v21)
          goto LABEL_142;
        if (v21 < v19)
        {
          v43 = 0;
          v44 = v41 * (v19 - 1);
          v45 = v19 * v41;
          v46 = v21;
          v142 = v21;
          v47 = v21 * v41;
          do
          {
            if (v46 != v19 + v43 - 1)
            {
              v144 = v42;
              v51 = v146;
              if (!v146)
                goto LABEL_147;
              v52 = v146 + v47;
              v53 = v146 + v44;
              v150 = *(char **)(v156 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v150)(v141, v146 + v47, v152);
              if (v47 < v44 || v52 >= v51 + v45)
              {
                v48 = v51 + v47;
                v49 = v51 + v44;
                v50 = v152;
                swift_arrayInitWithTakeFrontToBack(v48, v49, 1, v152);
              }
              else
              {
                v50 = v152;
                if (v47 != v44)
                  swift_arrayInitWithTakeBackToFront(v52);
              }
              ((void (*)(uint64_t, char *, uint64_t))v150)(v53, v141, v50);
              a1 = v151;
              v18 = v139;
              v42 = v144;
              v41 = v155;
            }
            ++v46;
            --v43;
            v44 -= v41;
            v45 -= v41;
            v47 += v41;
          }
          while (v46 < v19 + v43);
          v14 = v138;
          v11 = v154;
          v21 = v142;
        }
      }
    }
    if (v19 < v11)
    {
      if (__OFSUB__(v19, v21))
        goto LABEL_140;
      if (v19 - v21 < v14)
      {
        if (__OFADD__(v21, v14))
          goto LABEL_143;
        if (v21 + v14 >= v11)
          v54 = v11;
        else
          v54 = v21 + v14;
        if (v54 < v21)
          goto LABEL_144;
        if (v19 != v54)
        {
          v142 = v21;
          v55 = *(_QWORD *)(v156 + 72);
          v56 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
          v144 = v42;
          v145 = v56;
          v155 = v55 * (v19 - 1);
          v150 = (char *)v19;
          v146 = v55;
          v57 = v19 * v55;
          v58 = v152;
          v140 = (char *)v54;
          do
          {
            v59 = 0;
            v60 = v142;
            v147 = v57;
            while (1)
            {
              v154 = v60;
              v61 = *a1;
              v62 = v57 + v59 + *a1;
              v63 = v148;
              v64 = v145;
              v145(v148, v62, v58);
              v65 = a1;
              v66 = v149;
              v64(v149, v155 + v59 + v61, v58);
              LOBYTE(v64) = static IndexPath.< infix(_:_:)(v63, v66);
              v67 = *(void (**)(char *, uint64_t))(v156 + 8);
              v67(v66, v58);
              v67(v63, v58);
              if ((v64 & 1) == 0)
                break;
              v68 = *v65;
              if (!*v65)
                goto LABEL_145;
              v57 = v147;
              v69 = v68 + v147 + v59;
              v70 = (char *)(v68 + v155 + v59);
              v71 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 32);
              v58 = v152;
              v71(v153, v69, v152);
              swift_arrayInitWithTakeFrontToBack(v69, v70, 1, v58);
              v71(v70, (uint64_t)v153, v58);
              v59 -= v146;
              v60 = v154 + 1;
              a1 = v151;
              if (v150 == (char *)(v154 + 1))
                goto LABEL_49;
            }
            v58 = v152;
            a1 = v65;
            v57 = v147;
LABEL_49:
            v155 += v146;
            v57 += v146;
            ++v150;
          }
          while (v150 != v140);
          v19 = (Swift::Int)v140;
          v42 = v144;
          v18 = v139;
          v21 = v142;
        }
      }
    }
    if (v19 < v21)
    {
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    v72 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
    v144 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_100464E4C(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v75 = *((_QWORD *)v18 + 2);
    v74 = *((_QWORD *)v18 + 3);
    v20 = v75 + 1;
    if (v75 >= v74 >> 1)
      v18 = sub_100464E4C((char *)(v74 > 1), v75 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v76 = v18 + 32;
    v77 = &v18[16 * v75 + 32];
    *(_QWORD *)v77 = v72;
    *((_QWORD *)v77 + 1) = v19;
    if (v75)
      break;
    v20 = 1;
LABEL_14:
    v11 = a1[1];
    v14 = v138;
    if (v19 >= v11)
      goto LABEL_106;
  }
  while (1)
  {
    v78 = v20 - 1;
    if (v20 >= 4)
    {
      v83 = &v76[16 * v20];
      v84 = *((_QWORD *)v83 - 8);
      v85 = *((_QWORD *)v83 - 7);
      v89 = __OFSUB__(v85, v84);
      v86 = v85 - v84;
      if (v89)
        goto LABEL_124;
      v88 = *((_QWORD *)v83 - 6);
      v87 = *((_QWORD *)v83 - 5);
      v89 = __OFSUB__(v87, v88);
      v81 = v87 - v88;
      v82 = v89;
      if (v89)
        goto LABEL_125;
      v90 = v20 - 2;
      v91 = &v76[16 * v20 - 32];
      v93 = *(_QWORD *)v91;
      v92 = *((_QWORD *)v91 + 1);
      v89 = __OFSUB__(v92, v93);
      v94 = v92 - v93;
      if (v89)
        goto LABEL_127;
      v89 = __OFADD__(v81, v94);
      v95 = v81 + v94;
      if (v89)
        goto LABEL_130;
      if (v95 >= v86)
      {
        v113 = &v76[16 * v78];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v89 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v89)
          goto LABEL_134;
        v106 = v81 < v116;
        goto LABEL_93;
      }
    }
    else
    {
      if (v20 != 3)
      {
        v107 = *((_QWORD *)v18 + 4);
        v108 = *((_QWORD *)v18 + 5);
        v89 = __OFSUB__(v108, v107);
        v100 = v108 - v107;
        v101 = v89;
        goto LABEL_87;
      }
      v80 = *((_QWORD *)v18 + 4);
      v79 = *((_QWORD *)v18 + 5);
      v89 = __OFSUB__(v79, v80);
      v81 = v79 - v80;
      v82 = v89;
    }
    if ((v82 & 1) != 0)
      goto LABEL_126;
    v90 = v20 - 2;
    v96 = &v76[16 * v20 - 32];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v99 = __OFSUB__(v97, v98);
    v100 = v97 - v98;
    v101 = v99;
    if (v99)
      goto LABEL_129;
    v102 = &v76[16 * v78];
    v104 = *(_QWORD *)v102;
    v103 = *((_QWORD *)v102 + 1);
    v89 = __OFSUB__(v103, v104);
    v105 = v103 - v104;
    if (v89)
      goto LABEL_132;
    if (__OFADD__(v100, v105))
      goto LABEL_133;
    if (v100 + v105 >= v81)
    {
      v106 = v81 < v105;
LABEL_93:
      if (v106)
        v78 = v90;
      goto LABEL_95;
    }
LABEL_87:
    if ((v101 & 1) != 0)
      goto LABEL_128;
    v109 = &v76[16 * v78];
    v111 = *(_QWORD *)v109;
    v110 = *((_QWORD *)v109 + 1);
    v89 = __OFSUB__(v110, v111);
    v112 = v110 - v111;
    if (v89)
      goto LABEL_131;
    if (v112 < v100)
      goto LABEL_14;
LABEL_95:
    v117 = v78 - 1;
    if (v78 - 1 >= v20)
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    v118 = *a1;
    if (!*a1)
      goto LABEL_146;
    v119 = &v76[16 * v117];
    v120 = *(_QWORD *)v119;
    v121 = &v76[16 * v78];
    v122 = *((_QWORD *)v121 + 1);
    v123 = v144;
    sub_1001B35EC(v118 + *(_QWORD *)(v156 + 72) * *(_QWORD *)v119, v118 + *(_QWORD *)(v156 + 72) * *(_QWORD *)v121, v118 + *(_QWORD *)(v156 + 72) * v122, v143);
    v144 = v123;
    if (v123)
      break;
    if (v122 < v120)
      goto LABEL_121;
    if (v78 > *((_QWORD *)v18 + 2))
      goto LABEL_122;
    *(_QWORD *)v119 = v120;
    *(_QWORD *)&v76[16 * v117 + 8] = v122;
    v124 = *((_QWORD *)v18 + 2);
    if (v78 >= v124)
      goto LABEL_123;
    v20 = v124 - 1;
    memmove(&v76[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
    *((_QWORD *)v18 + 2) = v124 - 1;
    a1 = v151;
    if (v124 <= 2)
      goto LABEL_14;
  }
  v125 = v18;
LABEL_104:
  swift_bridgeObjectRelease(v125);
  v126 = v137;
  v137[2] = 0;
  return swift_bridgeObjectRelease(v126);
}

uint64_t sub_1001B2CA4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v26 = a1;
  v30 = sub_10006922C((uint64_t *)&unk_100644C10);
  v7 = __chkstk_darwin(v30);
  v31 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v27 = (uint64_t)&v24 - v10;
  result = __chkstk_darwin(v9);
  v14 = (char *)&v24 - v13;
  v29 = a3;
  v25 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v33 = v15 * (v29 - 1);
    v28 = v15;
    v32 = v15 * v29;
LABEL_5:
    v16 = 0;
    v17 = v26;
    while (1)
    {
      v18 = *a4;
      sub_1000271D4(v32 + v16 + *a4, (uint64_t)v14, (uint64_t *)&unk_100644C10);
      v19 = v27;
      sub_1000271D4(v33 + v16 + v18, v27, (uint64_t *)&unk_100644C10);
      LOBYTE(v18) = static IndexPath.< infix(_:_:)(&v14[*(int *)(v30 + 48)], v19 + *(int *)(v30 + 48));
      sub_10000CB4C(v19, (uint64_t *)&unk_100644C10);
      result = sub_10000CB4C((uint64_t)v14, (uint64_t *)&unk_100644C10);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v33 += v28;
        v32 += v28;
        if (++v29 == v25)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      v23 = v20 + v33 + v16;
      sub_100070EDC(v22, v31, (uint64_t *)&unk_100644C10);
      swift_arrayInitWithTakeFrontToBack(v22, v23, 1, v30);
      result = sub_100070EDC(v31, v23, (uint64_t *)&unk_100644C10);
      v16 -= v28;
      ++v17;
      a4 = v21;
      if (v29 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B2EE4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v29 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v37 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v36 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v33 = (char *)&v27 - v11;
  result = __chkstk_darwin(v10);
  v32 = (char *)&v27 - v13;
  v35 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v14 = v37[9];
    v30 = (void (*)(char *, uint64_t, uint64_t))v37[2];
    v31 = a4;
    v39 = v14 * (v35 - 1);
    v34 = v14;
    v38 = v14 * v35;
LABEL_5:
    v15 = 0;
    v16 = v29;
    while (1)
    {
      v17 = *a4;
      v18 = v32;
      v19 = v30;
      v30(v32, v38 + v15 + *a4, v7);
      v20 = v33;
      v19(v33, v39 + v15 + v17, v7);
      LOBYTE(v17) = static IndexPath.< infix(_:_:)(v18, v20);
      v21 = (void (*)(char *, uint64_t))v37[1];
      v22 = v20;
      a4 = v31;
      v21(v22, v7);
      result = ((uint64_t (*)(char *, uint64_t))v21)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v39 += v34;
        v38 += v34;
        if (++v35 == v28)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v38 + v15;
      v25 = v23 + v39 + v15;
      v26 = (void (*)(char *, uint64_t, uint64_t))v37[4];
      v26(v36, v24, v7);
      swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v7);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v25, v36, v7);
      v15 -= v34;
      if (v35 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B3138(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v45 = sub_10006922C((uint64_t *)&unk_100644C10);
  v8 = __chkstk_darwin(v45);
  v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v48 = a1;
  v47 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v45);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v25 = a4 + v18;
      v46 = a4 + v18;
      v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v42 = a4;
        v43 = a1;
        do
        {
          v28 = a3 + v27;
          sub_1000271D4(v25 + v27, (uint64_t)v11, (uint64_t *)&unk_100644C10);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_1000271D4(a2 + v27, v44, (uint64_t *)&unk_100644C10);
          v33 = static IndexPath.< infix(_:_:)(v31 + *(int *)(v45 + 48), v32 + *(int *)(v45 + 48));
          v34 = v32;
          v11 = (char *)v31;
          sub_10000CB4C(v34, (uint64_t *)&unk_100644C10);
          sub_10000CB4C(v31, (uint64_t *)&unk_100644C10);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v28, a2 + v27, 1, v45);
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28);
            }
            v48 += v27;
          }
          else
          {
            v38 = v46;
            v39 = v46 + v27;
            v46 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v39, 1, v45);
              v29 = a2;
              v37 = v42;
              v36 = v43;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v42;
              v36 = v43;
              if (!v35)
                swift_arrayInitWithTakeBackToFront(v28);
              v29 = a2;
            }
          }
          v25 = v46;
          if (v46 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v45);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v43 = a4 + v17;
    v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_1000271D4(a2, (uint64_t)v11, (uint64_t *)&unk_100644C10);
        sub_1000271D4(a4, v20, (uint64_t *)&unk_100644C10);
        v21 = static IndexPath.< infix(_:_:)(&v11[*(int *)(v45 + 48)], v20 + *(int *)(v45 + 48));
        sub_10000CB4C(v20, (uint64_t *)&unk_100644C10);
        sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_100644C10);
        v22 = v48;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v48 < a2 || v48 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack(v48, a2, 1, v45);
          }
          else if (v48 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }
        }
        else
        {
          v24 = v47 + v13;
          if (v48 < v47 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack(v48, v47, 1, v45);
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }
          v47 = v24;
          v23 = a2;
        }
        v48 = v22 + v13;
        a4 = v47;
        if (v47 >= v43)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_100464F44(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001B35EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, unint64_t, uint64_t);
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = type metadata accessor for IndexPath(0);
  v9 = __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v50 = (char *)&v45 - v11;
  v52 = v12;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v55 = a1;
  v54 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v30 = a4 + v18;
      v53 = a4 + v18;
      v55 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v13;
        v46 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
        v47 = a1;
        v48 = a4;
        v33 = v50;
        do
        {
          v49 = a3 + v32;
          v34 = v46;
          v46(v33, v30 + v32, v8);
          v35 = a2 + v32;
          v36 = v51;
          v34(v51, a2 + v32, v8);
          v37 = static IndexPath.< infix(_:_:)(v33, v36);
          v38 = *(void (**)(char *, uint64_t))(v52 + 8);
          v38(v36, v8);
          v38(v33, v8);
          if ((v37 & 1) != 0)
          {
            v39 = v49;
            if (a3 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v49, a2 + v32, 1, v8);
              v41 = v47;
              v40 = v48;
            }
            else
            {
              v41 = v47;
              v40 = v48;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v49);
            }
            v55 += v32;
          }
          else
          {
            v42 = v53;
            v43 = v53 + v32;
            v53 += v32;
            v39 = v49;
            if (a3 < v42 || v49 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v49, v43, 1, v8);
              v35 = a2;
              v41 = v47;
              v40 = v48;
            }
            else
            {
              v41 = v47;
              v40 = v48;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v49);
              v35 = a2;
            }
          }
          v30 = v53;
          if (v53 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v49 = a4 + v17;
    v53 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
      do
      {
        v21 = a3;
        v22 = a4;
        v23 = v50;
        v20(v50, a2, v8);
        v24 = v51;
        v20(v51, v22, v8);
        v25 = static IndexPath.< infix(_:_:)(v23, v24);
        v26 = *(void (**)(char *, uint64_t))(v52 + 8);
        v26(v24, v8);
        v26(v23, v8);
        v27 = v55;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v13;
          if (v55 < a2 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v8);
          }
          else if (v55 == a2)
          {
            v27 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v55);
          }
        }
        else
        {
          v29 = v54 + v13;
          if (v55 < v54 || v55 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v8);
          }
          else if (v55 != v54)
          {
            swift_arrayInitWithTakeBackToFront(v55);
          }
          v54 = v29;
          v28 = a2;
        }
        v55 = v27 + v13;
        a4 = v54;
        if (v54 >= v49)
          break;
        a3 = v21;
        a2 = v28;
      }
      while (v28 < v21);
    }
LABEL_60:
    sub_100464F50(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001B3AC0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  size_t v7;
  char v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v13;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 3;
  v7 = v6 & 0x1FFFFFFFFFFFFFF8;
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v6 & 0x1FFFFFFFFFFFFFF8, 8),
        (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1001BC5D4((uint64_t)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v3, a2);
    v9 = v8;
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    sub_1001BC5D4((uint64_t)v10, v3, a2);
    v9 = v11;
    swift_slowDealloc(v10, -1, -1);
  }
  return v9 & 1;
}

uint64_t sub_1001B3C28()
{
  return sub_100088A54(sub_1000818A0);
}

char *sub_1001B3C34(void *a1, uint64_t a2, void *a3, uint64_t a4, char *a5)
{
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  char *v28;
  id *v29;
  id v30;
  NSString v31;
  unsigned __int8 v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  char v39[24];
  _QWORD v40[5];
  objc_super v41;
  _QWORD v42[5];

  v42[3] = type metadata accessor for FamilyFetcher();
  v42[4] = (char *)&_s14descr1005DD249OMn.Parent + 3;
  v42[0] = a2;
  v10 = &a5[OBJC_IVAR____TtC5Files14DOCTipsManager_controller];
  swift_unknownObjectWeakInit(&a5[OBJC_IVAR____TtC5Files14DOCTipsManager_controller]);
  v11 = OBJC_IVAR____TtC5Files14DOCTipsManager_fileManager;
  v12 = (void *)objc_opt_self(NSFileManager);
  v13 = a5;
  *(_QWORD *)&a5[v11] = objc_msgSend(v12, "defaultManager");
  v14 = OBJC_IVAR____TtC5Files14DOCTipsManager_fpItemManager;
  *(_QWORD *)&v13[v14] = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v15 = &v13[OBJC_IVAR____TtC5Files14DOCTipsManager_familyFolderFilePath];
  v16 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_sharingFlowTask] = 0;
  swift_unknownObjectWeakAssign(v10, a1);
  sub_100092328((uint64_t)v42, (uint64_t)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_familyFetcher]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTip] = a4;
  if (a3)
  {
    v17 = (void *)objc_opt_self(DOCManagedPermission);
    swift_retain();
    v18 = a3;
    v19 = objc_msgSend(v17, "defaultPermission");
    v20 = objc_msgSend(v19, "userActionForConfiguration:", v18);

    v21 = objc_msgSend(v18, "hostIdentifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

    v24 = objc_allocWithZone((Class)DOCSourceObserver);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v24, "initWithUserAction:hostIdentifier:", v20, v25, swift_bridgeObjectRelease(v23).n128_f64[0]);

    *(_QWORD *)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_sourceObserver] = v26;
    v27 = v26;
    objc_msgSend(v27, "startObservingSources");

  }
  else
  {
    *(_QWORD *)&v13[OBJC_IVAR____TtC5Files14DOCTipsManager_sourceObserver] = 0;
    swift_retain();
  }

  v41.receiver = v13;
  v41.super_class = (Class)type metadata accessor for DOCTipsManager(0);
  v28 = (char *)objc_msgSendSuper2(&v41, "init");
  if (DOCIsInternalBuild())
  {
    v29 = (id *)NSUserDefaults.docUserDefaults.unsafeMutableAddressor();
    swift_beginAccess(v29, v39, 0, 0);
    if (*v29)
    {
      v30 = *v29;
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v30, "BOOLForKey:", v31);

      if ((v32 & 1) != 0)
        static Tips.showAllTipsForTesting()();
    }
  }
  v40[3] = type metadata accessor for DOCTipsFamilyTip();
  v40[4] = sub_10005A360(&qword_100643AD8, (uint64_t (*)(uint64_t))type metadata accessor for DOCTipsFamilyTip, (uint64_t)&unk_1004E63EC);
  v40[0] = a4;
  v33 = swift_allocObject(&unk_1005CC688, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  v34 = objc_allocWithZone((Class)type metadata accessor for TipUIView(0));
  swift_retain();
  v35 = swift_retain();
  v36 = TipUIView.init(_:arrowEdge:actionHandler:)(v40, 4, sub_1001CEEEC, v33, v35);

  swift_release(a4);
  sub_100068588(v42);
  swift_release(v33);
  v37 = *(void **)&v28[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView];
  *(_QWORD *)&v28[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView] = v36;

  return v28;
}

uint64_t sub_1001B401C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1001B4084;
  return v5(v2 + 32);
}

uint64_t sub_1001B4084()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1001B40D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  if (*(_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    v4 = result;
    v5 = sub_10004FD50();
    __chkstk_darwin(v5);
    v7[2] = v4;
    v7[3] = a2;
    v6 = sub_100174BD4(sub_100146530, (uint64_t)v7, v5);
    swift_bridgeObjectRelease(v5);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B4164(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v73[12];
  int v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t aBlock[5];
  uint64_t v91;

  v76 = a5;
  v78 = a3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v87 = *(_QWORD *)(v8 - 8);
  v88 = v8;
  __chkstk_darwin(v8);
  v86 = &v73[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v10 - 8);
  v85 = v10;
  __chkstk_darwin(v10);
  v83 = &v73[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v82 = type metadata accessor for DispatchTime(0);
  v80 = *(_QWORD *)(v82 - 8);
  v12 = __chkstk_darwin(v82);
  v79 = &v73[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v81 = &v73[-v14];
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v73[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v21 = &v73[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v22);
  v24 = &v73[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000271D4(a2, (uint64_t)v24, &qword_100643470);
  v25 = type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(0);
  v26 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_BYTE *)(v26 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 0;
  *(_QWORD *)(v26 + 16) = a1;
  sub_1000271D4((uint64_t)v24, v26 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, &qword_100643470);
  v27 = (uint64_t *)(v26
                  + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler);
  *v27 = v78;
  v27[1] = a4;
  v28 = a1;
  swift_retain();
  UUID.init()(v29);
  sub_10000CB4C((uint64_t)v24, &qword_100643470);
  v30 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v19 + 32))(v26 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, v21, v77);
  v31 = Logger.UI.unsafeMutableAddressor(v30);
  v77 = v16;
  v78 = v15;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v18, v31, v15);
  v32 = v28;
  v33 = v76;
  v34 = v32;
  v35 = (char *)v33;
  v76 = v18;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter(v36);
  v38 = v37;
  if (os_log_type_enabled(v36, v37))
  {
    v39 = swift_slowAlloc(32, -1);
    v74 = v38;
    v40 = v39;
    v75 = swift_slowAlloc(96, -1);
    aBlock[0] = v75;
    *(_DWORD *)v40 = 136315650;
    v89 = (id)sub_1000544FC(0xD00000000000002BLL, 0x8000000100515F90, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, aBlock);
    *(_WORD *)(v40 + 12) = 2080;
    v41 = objc_msgSend(v34, "displayName");
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    v89 = (id)sub_1000544FC(v42, v44, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, aBlock);

    swift_bridgeObjectRelease(v44);
    *(_WORD *)(v40 + 22) = 2080;
    v89 = objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], "identifier");
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    v46 = String.init<A>(describing:)(&v89, v45);
    v48 = v47;
    v89 = (id)sub_1000544FC(v46, v47, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, aBlock);

    swift_bridgeObjectRelease(v48);
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v74, "%s - adding node to be resolved: %s in source: %s", (uint8_t *)v40, 0x20u);
    v49 = v75;
    swift_arrayDestroy(v75, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v40, -1, -1);

  }
  else
  {

  }
  (*(void (**)(id, uint64_t))(v77 + 8))(v76, v78);
  v50 = &v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
  swift_beginAccess(&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts], aBlock, 33, 0);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
  v53 = *(_QWORD *)((*(_QWORD *)v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v52 = *(_QWORD *)((*(_QWORD *)v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v53 >= v52 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
  v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v26);
  specialized Array._endMutation()(v54);
  swift_endAccess(aBlock);
  v55 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v56 = (void *)static OS_dispatch_queue.main.getter(v55);
  v57 = v79;
  static DispatchTime.now()(v56);
  v58 = v81;
  + infix(_:_:)(v57, 1.5);
  v80 = *(_QWORD *)(v80 + 8);
  v59 = v82;
  ((void (*)(_BYTE *, uint64_t))v80)(v57, v82);
  v60 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  v61 = swift_allocObject(&unk_1005CD8F8, 32, 7);
  *(_QWORD *)(v61 + 16) = v60;
  *(_QWORD *)(v61 + 24) = v26;
  aBlock[4] = (uint64_t)sub_1001D0548;
  v91 = v61;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CD910;
  v62 = _Block_copy(aBlock);
  v63 = v91;
  swift_retain();
  v64 = swift_release(v63);
  v65 = v83;
  static DispatchQoS.unspecified.getter(v64);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v66 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v67 = sub_10006922C((uint64_t *)&unk_100647540);
  v68 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v69 = v86;
  v70 = v67;
  v71 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v70, v68, v88, v66);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v58, v65, v69, v62);
  _Block_release(v62);
  swift_release(v26);

  (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v69, v71);
  (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v65, v85);
  return ((uint64_t (*)(_BYTE *, uint64_t))v80)(v58, v59);
}

uint64_t sub_1001B488C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, a3);
  v9 = (_QWORD *)swift_allocObject(&unk_1005CC728, 40, 7);
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  swift_bridgeObjectRetain(a2);
  swift_retain();
  swift_unknownObjectRetain(a1);
  DOCNode.fpfs_fetchFPItem(completion:)(sub_100145E80, v9, a4);
  swift_release(v8);
  return swift_release(v9);
}

uint64_t sub_1001B4944(void *a1, uint64_t a2, SEL *a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.AppIntents.unsafeMutableAddressor(objc_msgSend(*(id *)(a2 + 16), *a3, a1));
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = swift_unknownObjectRetain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v27 = v8;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v29 = v26;
    *(_DWORD *)v16 = 136315138;
    v17 = objc_msgSend(a1, "filesIntentsDebugDescription", v16 + 4);
    v25 = a4;
    v18 = v17;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    v28 = sub_1000544FC(v19, v21, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);

    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v25, v16, 0xCu);
    v22 = v26;
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_1001B4B5C(void *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  __n128 v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void **v63;
  double v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  NSObject *v73;
  __n128 v74;
  os_log_type_t v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  _QWORD *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSString v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  _BOOL8 v101;
  BOOL v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_QWORD, _QWORD, _QWORD);
  uint64_t *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  NSObject *v125;
  __n128 v126;
  os_log_type_t v127;
  uint8_t *v128;
  void **v129;
  void *v130;
  unsigned __int8 v131;
  char *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  char v136;
  char *v137;
  unsigned __int8 v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  BOOL v147;
  char *v148;
  id v149;
  char *v150;
  id *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unsigned int v161;
  uint64_t v162;
  unint64_t v163;
  void *v164;
  id v165;
  unint64_t v166;
  id v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  id v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  char *v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  void *v190;
  id v191;
  __int128 v192;
  __int128 v193;
  char *v194;
  char *v195;
  id v196;
  uint64_t v197;
  char *v198;
  void *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  void (*v203)(_QWORD, _QWORD, _QWORD);
  char *v204;
  void (*v205)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v206;
  uint64_t v207;
  _QWORD *v208;
  char *v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __n128 v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  void *v220;
  char *v221;
  void *v222;
  uint64_t v223;
  void (*v224)(_QWORD, _QWORD, _QWORD);
  id v225;
  void (*v226)(_QWORD, _QWORD, _QWORD);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  _QWORD *v244;
  void *v245;
  _QWORD *v246;
  id v247;
  double v248;
  void *v249;
  void (*v250)(_QWORD, _QWORD, _QWORD);
  uint64_t v251;
  uint64_t v252;
  int v253;
  unsigned int v254;
  __int128 v255;
  id *v256;
  void *v257;
  uint64_t v258;
  id v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  char *v269;
  int v270;
  id v271;
  char *v272;
  uint64_t Strong;
  uint64_t v274;
  char *v275;
  _QWORD *v276;
  id aBlock;
  _QWORD v278[4];
  _QWORD *v279;
  char v280;
  char v281;
  char v282;
  char v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  char *v288;
  uint64_t v289;

  v270 = a2;
  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v260 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v267 = (char *)&v252 - v8;
  v9 = type metadata accessor for URL(0);
  v266 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v265 = (char *)&v252 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v264 = (char *)&v252 - v12;
  v263 = type metadata accessor for Date(0);
  v262 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin(v263);
  v261 = (char *)&v252 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD **)(v14 - 8);
  __chkstk_darwin(v14);
  v269 = (char *)&v252 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v252 - v18;
  __chkstk_darwin(v20);
  v272 = (char *)&v252 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v252 - v23;
  v26 = Logger.UI.unsafeMutableAddressor(v25);
  v27 = (char *)v15[2];
  v274 = v26;
  v275 = v27;
  ((void (*)(char *))v27)(v24);
  v28 = swift_unknownObjectRetain_n(a1, 2);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  v31 = os_log_type_enabled(v29, v30);
  v268 = v9;
  v271 = v19;
  if (v31)
  {
    v32 = swift_slowAlloc(22, -1);
    v276 = v15;
    v33 = v32;
    v259 = (id)swift_slowAlloc(64, -1);
    *(_QWORD *)&v284 = v259;
    *(_DWORD *)v33 = 136315394;
    Strong = v14;
    aBlock = sub_1000544FC(0xD000000000000051, 0x8000000100515840, (uint64_t *)&v284);
    *(_QWORD *)&v34 = UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v278).n128_u64[0];
    *(_WORD *)(v33 + 12) = 2080;
    v258 = v33 + 14;
    v35 = a1;
    v36 = objc_msgSend(a1, "displayName", v34);
    v37 = a3;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v40 = v39;

    a1 = v35;
    v41 = v38;
    a3 = v37;
    v14 = Strong;
    aBlock = sub_1000544FC(v41, v40, (uint64_t *)&v284);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v278);

    swift_bridgeObjectRelease(v40);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s [TAP] [Interaction] Validating selection of item %s", (uint8_t *)v33, 0x16u);
    v42 = v259;
    swift_arrayDestroy(v259, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    v43 = (char *)v276[1];
  }
  else
  {

    v43 = (char *)v15[1];
  }
  ((void (*)(char *, uint64_t))v43)(v24, v14);
  v44 = *(void **)(a3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  v45 = objc_msgSend(v44, "sceneIdentifier");
  v276 = _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v45);

  v46 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v47 = objc_msgSend(v44, "sceneIdentifier");
  v48 = objc_msgSend(v46, "globalTabbedBrowserControllerForIdentifier:", v47);

  if (v48)
  {
    v49 = objc_msgSend(v48, "activeDocumentCreationIntent");

    if (v49)
    {
      v50 = objc_msgSend(a1, "displayName");
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v53 = v52;

      v54 = v272;
      ((void (*)(char *, uint64_t, uint64_t))v275)(v272, v274, v14);
      v55 = swift_bridgeObjectRetain(v53);
      v56 = Logger.logObject.getter(v55);
      v58 = static os_log_type_t.info.getter(v57);
      if (os_log_type_enabled(v56, v58))
      {
        Strong = v14;
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v60 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v284 = v60;
        *(_DWORD *)v59 = 136315138;
        swift_bridgeObjectRetain(v53);
        aBlock = sub_1000544FC(v51, v53, (uint64_t *)&v284);
        UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v278);
        swift_bridgeObjectRelease_n(v53, 3);
        _os_log_impl((void *)&_mh_execute_header, v56, v58, "[TAP] [Interaction] An item, '%s', was selected while there is UIP document creation in progress. Bailing out.", v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        v61 = v272;
        v62 = Strong;
      }
      else
      {

        swift_bridgeObjectRelease_n(v53, 2);
        v61 = v54;
        v62 = v14;
      }
      ((void (*)(char *, uint64_t))v43)(v61, v62);
LABEL_33:
      v114 = &v289;
LABEL_34:

      return;
    }
  }
  v63 = (void **)((char *)v276 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  *(_QWORD *)&v64 = swift_beginAccess((char *)v276 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem, &v283, 1, 0).n128_u64[0];
  if (*v63)
  {
    v272 = v43;
    v65 = objc_msgSend(a1, "displayName", v64);
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;

    v69 = *v63;
    v70 = v271;
    ((void (*)(id, uint64_t, uint64_t))v275)(v271, v274, v14);
    v71 = v69;
    v72 = swift_bridgeObjectRetain(v68);
    v73 = Logger.logObject.getter(v72);
    v75 = static os_log_type_t.info.getter(v74);
    if (os_log_type_enabled(v73, v75))
    {
      Strong = v14;
      v76 = swift_slowAlloc(22, -1);
      v77 = (_QWORD *)swift_slowAlloc(8, -1);
      v275 = (char *)swift_slowAlloc(32, -1);
      *(_QWORD *)&v284 = v275;
      *(_DWORD *)v76 = 136315394;
      swift_bridgeObjectRetain(v68);
      aBlock = sub_1000544FC(v66, v68, (uint64_t *)&v284);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v278);
      swift_bridgeObjectRelease_n(v68, 3);
      *(_WORD *)(v76 + 12) = 2112;
      if (v69)
      {
        aBlock = (uint64_t)v71;
        v78 = v71;
      }
      else
      {
        aBlock = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v278);
      *v77 = v69;

      _os_log_impl((void *)&_mh_execute_header, v73, v75, "[TAP] [Interaction] An item, '%s', was selected while another is trying to be opened: '%@'. Bailing out.", (uint8_t *)v76, 0x16u);
      v112 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v77, 1, v112);
      swift_slowDealloc(v77, -1, -1);
      v113 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
      swift_arrayDestroy(v275, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v76, -1, -1);

      v93 = v271;
      v94 = Strong;
    }
    else
    {

      swift_bridgeObjectRelease_n(v68, 2);
      v93 = v70;
      v94 = v14;
    }
    ((void (*)(id, uint64_t))v272)(v93, v94);
    goto LABEL_33;
  }
  if (((objc_msgSend(a1, "isTrashed", v64) & 1) != 0
     || *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 33) == 1)
    && (objc_msgSend(a1, "isFolder") & 1) == 0)
  {
    v79 = (_QWORD *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
    swift_beginAccess(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v280, 0, 0);
    if (*v79 != 2
      || *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) == 1)
    {
      v81 = *(id *)DOCLog.UI.unsafeMutableAddressor(v80);
      v82 = static os_log_type_t.default.getter(v81);
      v83 = sub_10006922C((uint64_t *)&unk_100644560);
      v84 = swift_allocObject(v83, 72, 7);
      *(_OWORD *)(v84 + 16) = xmmword_1004D9670;
      v85 = objc_msgSend(a1, "displayName");
      v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
      v88 = v87;

      *(_QWORD *)(v84 + 56) = &type metadata for String;
      *(_QWORD *)(v84 + 64) = sub_10006A638();
      *(_QWORD *)(v84 + 32) = v86;
      *(_QWORD *)(v84 + 40) = v88;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] A trashed item, '%@', was selected, alerting the user it can't be oppened. Bailing out.", 107, 2, &_mh_execute_header, v81, v82, v84);

      v89 = objc_msgSend(a1, "displayName", swift_bridgeObjectRelease(v84).n128_f64[0]);
      if (!v89)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v92 = v91;
        v89 = String._bridgeToObjectiveC()();
        v90 = swift_bridgeObjectRelease(v92);
      }
      DOCAlertUserTrashedFileCanNotBeOpened(v89, a3, v90);

      return;
    }
  }
  v95 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v96 = DOCNode.fpfs_syncFetchFPItem()(v95);
  if (!v96)
  {
    v115 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v116 = static os_log_type_t.error.getter(v115);
    v117 = sub_10006922C((uint64_t *)&unk_100644560);
    v118 = swift_allocObject(v117, 72, 7);
    *(_OWORD *)(v118 + 16) = xmmword_1004D9670;
    v119 = objc_msgSend(a1, "displayName");
    v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v119);
    v122 = v121;

    *(_QWORD *)(v118 + 56) = &type metadata for String;
    *(_QWORD *)(v118 + 64) = sub_10006A638();
    *(_QWORD *)(v118 + 32) = v120;
    *(_QWORD *)(v118 + 40) = v122;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Couldn't get FPItem from node for '%@. Bailing out.", 71, 2, &_mh_execute_header, v115, v116, v118);

LABEL_42:
    swift_bridgeObjectRelease(v118);
    return;
  }
  v97 = (void *)v96;
  v98 = v14;
  v99 = (uint64_t *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v282, 0, 0);
  if (*v99 == 2
    && *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) != 1)
  {
    goto LABEL_36;
  }
  v100 = sub_100432A2C(v97, v44, a3);
  if ((v100 & 1) == 0)
  {
    v115 = *(id *)DOCLog.UI.unsafeMutableAddressor(v100);
    v139 = v97;
    v140 = static os_log_type_t.error.getter(v115);
    v141 = sub_10006922C((uint64_t *)&unk_100644560);
    v118 = swift_allocObject(v141, 72, 7);
    *(_OWORD *)(v118 + 16) = xmmword_1004D9670;
    v142 = objc_msgSend(a1, "displayName");
    v143 = static String._unconditionallyBridgeFromObjectiveC(_:)(v142);
    v145 = v144;

    *(_QWORD *)(v118 + 56) = &type metadata for String;
    *(_QWORD *)(v118 + 64) = sub_10006A638();
    *(_QWORD *)(v118 + 32) = v143;
    *(_QWORD *)(v118 + 40) = v145;
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] An non-downloaded item, '%@', was selected, but cannot be downloaded.", 89, 2, &_mh_execute_header, v115, v140, v118);

    goto LABEL_42;
  }
  if ((objc_msgSend(v97, "doc_isCollaborationInvitation") & 1) != 0)
  {
    v101 = FPItem.openInvitationIfPossible()();
    v102 = v101;
    v103 = *(id *)DOCLog.UI.unsafeMutableAddressor(v101);
    v104 = v103;
    if (v102)
    {
      v105 = static os_log_type_t.default.getter(v103);
      v106 = sub_10006922C((uint64_t *)&unk_100644560);
      v107 = swift_allocObject(v106, 72, 7);
      *(_OWORD *)(v107 + 16) = xmmword_1004D9670;
      v108 = objc_msgSend(a1, "displayName");
      v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
      v111 = v110;

      *(_QWORD *)(v107 + 56) = &type metadata for String;
      *(_QWORD *)(v107 + 64) = sub_10006A638();
      *(_QWORD *)(v107 + 32) = v109;
      *(_QWORD *)(v107 + 40) = v111;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Opened invitation link for %@", 49, 2, &_mh_execute_header, v104, v105, v107);
    }
    else
    {
      v228 = static os_log_type_t.error.getter(v103);
      v229 = sub_10006922C((uint64_t *)&unk_100644560);
      v107 = swift_allocObject(v229, 72, 7);
      *(_OWORD *)(v107 + 16) = xmmword_1004D9670;
      v230 = objc_msgSend(a1, "displayName");
      v231 = static String._unconditionallyBridgeFromObjectiveC(_:)(v230);
      v233 = v232;

      *(_QWORD *)(v107 + 56) = &type metadata for String;
      *(_QWORD *)(v107 + 64) = sub_10006A638();
      *(_QWORD *)(v107 + 32) = v231;
      *(_QWORD *)(v107 + 40) = v233;
      os_log(_:dso:log:type:_:)("TAP] [Interaction] Could not open invitation for %@", 51, 2, &_mh_execute_header, v104, v228, v107);
    }

    swift_bridgeObjectRelease(v107);
    return;
  }
LABEL_36:
  v271 = v97;
  v257 = a1;
  v123 = v269;
  v124 = ((uint64_t (*)(char *, uint64_t, uint64_t))v275)(v269, v274, v98);
  v125 = Logger.logObject.getter(v124);
  v127 = static os_log_type_t.info.getter(v126);
  if (os_log_type_enabled(v125, v127))
  {
    v128 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v128 = 0;
    _os_log_impl((void *)&_mh_execute_header, v125, v127, "[TAP] [Interaction] Clearing the last selected Item", v128, 2u);
    swift_slowDealloc(v128, -1, -1);
  }

  ((void (*)(char *, uint64_t))v43)(v123, v98);
  v129 = (void **)((char *)v276 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
  swift_beginAccess((char *)v276 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem, &v281, 1, 0);
  v130 = *v129;
  *v129 = 0;
  sub_10010EDA8(v130);

  v274 = swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v274 + 16);
  v275 = (char *)swift_allocObject(&unk_1005CBE18, 24, 7);
  swift_unknownObjectWeakInit(v275 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting);
  v131 = objc_msgSend(v44, "useSharedQuickLook");
  v132 = (char *)a3;
  v133 = *v99;
  v134 = *(void **)&v132[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
  v135 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
  v272 = v132;
  v136 = v132[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected];
  v137 = v134;
  if ((v270 & 1) != 0 && objc_msgSend(v44, "useSharedQuickLook"))
    v138 = 1;
  else
    v138 = objc_msgSend(v44, "skipDownload");
  v146 = v257;
  *(_QWORD *)&v284 = Strong;
  *((_QWORD *)&v284 + 1) = sub_1001CF394;
  *(_QWORD *)&v285 = v274;
  *((_QWORD *)&v285 + 1) = sub_1001CF39C;
  *(_QWORD *)&v286 = v275;
  BYTE8(v286) = v270 & 1;
  BYTE9(v286) = v131;
  BYTE10(v286) = v133 == 2;
  *(_QWORD *)&v287 = v134;
  BYTE8(v287) = v136;
  BYTE9(v287) = v138;
  v288 = v272;
  v147 = *v99 == 2;
  v269 = v137;
  v253 = v270 & 1;
  if (v147 && (v272[v135] & 1) == 0)
  {
    v150 = v272;
    swift_retain();
    swift_retain();
LABEL_51:
    v254 = 0;
    goto LABEL_52;
  }
  v148 = v272;
  swift_retain();
  v149 = objc_msgSend(v44, "shouldOpenInApp", swift_retain().n128_f64[0]);
  if (!(_DWORD)v149)
    goto LABEL_51;
  v149 = objc_msgSend(v146, "isFolder");
  if ((v149 & 1) != 0)
    goto LABEL_51;
  v149 = objc_msgSend(v146, "isExternalDownloadPlaceholder");
  v254 = v149 ^ 1;
LABEL_52:
  v151 = (id *)DOCLog.UI.unsafeMutableAddressor(v149);
  v259 = *v151;
  LODWORD(v258) = static os_log_type_t.default.getter(v259);
  v152 = sub_10006922C((uint64_t *)&unk_100644560);
  v153 = swift_allocObject(v152, 112, 7);
  *(_OWORD *)(v153 + 16) = xmmword_1004D4CE0;
  v154 = objc_msgSend(v146, "displayName");
  v155 = v146;
  v156 = static String._unconditionallyBridgeFromObjectiveC(_:)(v154);
  v158 = v157;

  *(_QWORD *)(v153 + 56) = &type metadata for String;
  v159 = sub_10006A638();
  v160 = v159;
  *(_QWORD *)(v153 + 32) = v156;
  *(_QWORD *)(v153 + 40) = v158;
  v161 = v254;
  v162 = 20302;
  if (v254)
    v162 = 5457241;
  v163 = 0xE200000000000000;
  *(_QWORD *)(v153 + 96) = &type metadata for String;
  *(_QWORD *)(v153 + 104) = v159;
  if (v161)
    v163 = 0xE300000000000000;
  *(_QWORD *)(v153 + 64) = v159;
  *(_QWORD *)(v153 + 72) = v162;
  *(_QWORD *)(v153 + 80) = v163;
  v164 = v259;
  os_log(_:dso:log:type:_:)("[TAP] [Interaction] An item, '%@', was selected. Attempting to open it? %@", 74, 2, &_mh_execute_header, v259, v258, v153);

  swift_bridgeObjectRelease(v153);
  v256 = v151;
  v165 = *v151;
  v166 = v160;
  v167 = v165;
  LODWORD(v259) = static os_log_type_t.default.getter(v167);
  v252 = v152;
  v168 = swift_allocObject(v152, 72, 7);
  v255 = xmmword_1004D9670;
  *(_OWORD *)(v168 + 16) = xmmword_1004D9670;
  v169 = objc_msgSend(v155, "displayName");
  v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v169);
  v172 = v171;

  *(_QWORD *)(v168 + 56) = &type metadata for String;
  *(_QWORD *)(v168 + 64) = v166;
  v258 = v166;
  *(_QWORD *)(v168 + 32) = v170;
  *(_QWORD *)(v168 + 40) = v172;
  if (!v161)
  {
    os_log(_:dso:log:type:_:)("[TAP] [Interaction] Not trying to open %@ with LaunchUtils", 58, 2, &_mh_execute_header, v167, v259, v168);

    swift_bridgeObjectRelease(v168);
    v225 = v276;
    sub_10022F010(v257, (uint64_t)&v284);
    swift_unknownObjectRelease(Strong);
    v226 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
    swift_release(v275);
    v227 = v274;
    swift_release(v274);

    sub_100087534((uint64_t)sub_1001CF394, v227);
    sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v226);

    v114 = (uint64_t *)&v287;
    goto LABEL_34;
  }
  os_log(_:dso:log:type:_:)("[TAP] [Interaction] Should Try to Open with LaunchUtils: %@", 59, 2, &_mh_execute_header, v167, v259, v168);

  swift_bridgeObjectRelease(v168);
  v173 = *v63;
  v174 = v271;
  *v63 = v271;
  v175 = v174;
  sub_1000AE638(v173);

  v176 = *v256;
  v177 = static os_log_type_t.default.getter(v176);
  v178 = v252;
  v179 = swift_allocObject(v252, 72, 7);
  *(_OWORD *)(v179 + 16) = v255;
  v180 = objc_msgSend(v257, "displayName");
  v181 = static String._unconditionallyBridgeFromObjectiveC(_:)(v180);
  v183 = v182;

  v184 = v258;
  *(_QWORD *)(v179 + 56) = &type metadata for String;
  *(_QWORD *)(v179 + 64) = v184;
  *(_QWORD *)(v179 + 32) = v181;
  *(_QWORD *)(v179 + 40) = v183;
  os_log(_:dso:log:type:_:)("[TAP] [Interaction] Keeping track of last opened item in 'validateItemSelectionAndPerformDidPickIfNeeded()': %@", 111, 2, &_mh_execute_header, v176, v177, v179);

  v185 = objc_msgSend(v44, "forPickingDocuments", swift_bridgeObjectRelease(v179).n128_f64[0]);
  if ((v185 & 1) != 0)
  {
    v186 = v261;
    Date.init()(v185);
    FPItem.setLastOpenDate(_:delay:)(v186, 3.0);
    (*(void (**)(char *, uint64_t))(v262 + 8))(v186, v263);
  }
  v187 = swift_allocObject(&unk_1005CBE18, 24, 7);
  v188 = v272;
  swift_unknownObjectWeakInit(v187 + 16);
  v189 = swift_allocObject(&unk_1005CE168, 137, 7);
  v190 = v257;
  *(_QWORD *)(v189 + 16) = v187;
  *(_QWORD *)(v189 + 24) = v190;
  v191 = v276;
  *(_QWORD *)(v189 + 32) = v276;
  *(_QWORD *)(v189 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
  *(_QWORD *)(v189 + 48) = 0;
  *(_QWORD *)(v189 + 56) = v175;
  v192 = v287;
  *(_OWORD *)(v189 + 96) = v286;
  *(_OWORD *)(v189 + 112) = v192;
  *(_QWORD *)(v189 + 128) = v288;
  v193 = v285;
  *(_OWORD *)(v189 + 64) = v284;
  *(_OWORD *)(v189 + 80) = v193;
  *(_BYTE *)(v189 + 136) = v253;
  v194 = v190;
  v271 = v175;
  v263 = v187;
  swift_retain();
  v195 = (char *)v191;
  swift_unknownObjectRetain(Strong);
  sub_10008BA00((uint64_t)sub_1001CF394, v274);
  sub_10008BA00((uint64_t)sub_1001CF39C, (uint64_t)v275);
  v269 = v269;
  v276 = v188;
  v272 = v194;
  v196 = objc_msgSend(v194, "nodeURL");
  v197 = v268;
  v198 = v267;
  if (v196)
  {
    v199 = v196;
    v200 = v178;
    v201 = v265;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v196);

    v202 = v266;
    v203 = *(void (**)(_QWORD, _QWORD, _QWORD))(v266 + 32);
    v204 = v201;
    v178 = v200;
    v203(v198, v204, v197);
    v205 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v202 + 56);
    v205(v198, 0, 1, v197);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48))(v198, 1, v197) != 1)
    {
      v203(v264, v198, v197);
      v206 = *v256;
      LODWORD(v265) = static os_log_type_t.default.getter(v206);
      v207 = swift_allocObject(v200, 72, 7);
      v267 = v195;
      v208 = (_QWORD *)v207;
      *(_OWORD *)(v207 + 16) = v255;
      v209 = v272;
      v210 = objc_msgSend(v272, "displayName");
      v211 = static String._unconditionallyBridgeFromObjectiveC(_:)(v210);
      v212 = v202;
      v214 = v213;

      v215 = v258;
      v208[7] = &type metadata for String;
      v208[8] = v215;
      v208[4] = v211;
      v208[5] = v214;

      v216 = swift_bridgeObjectRelease(v208);
      v217 = (uint64_t)v260;
      v218 = v264;
      (*(void (**)(char *, char *, uint64_t, __n128))(v212 + 16))(v260, v264, v197, v216);
      v205(v217, 0, 1, v197);
      v219 = v263;
      v220 = v209;
      v221 = v267;
      v222 = v271;
      sub_1001B82A0(v217, 0, v263, v220, v267, v271, (uint64_t)&v284, v270 & 1);
      swift_unknownObjectRelease(Strong);
      swift_release(v189);
      v223 = v274;
      sub_100087534((uint64_t)sub_1001CF394, v274);
      v224 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
      sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v275);
      swift_release(v223);
      swift_release(v224);

      swift_release(v219);
      sub_10000CB4C(v217, &qword_100643470);
      (*(void (**)(char *, uint64_t))(v212 + 8))(v218, v197);

      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v266 + 56))(v267, 1, 1, v268);
  }
  swift_release(v263);
  sub_10000CB4C((uint64_t)v198, &qword_100643470);
  v234 = *v256;
  v235 = static os_log_type_t.default.getter(v234);
  v236 = swift_allocObject(v178, 72, 7);
  *(_OWORD *)(v236 + 16) = v255;
  v237 = v272;
  v238 = objc_msgSend(v272, "displayName");
  v239 = static String._unconditionallyBridgeFromObjectiveC(_:)(v238);
  v241 = v240;

  v242 = v258;
  *(_QWORD *)(v236 + 56) = &type metadata for String;
  *(_QWORD *)(v236 + 64) = v242;
  *(_QWORD *)(v236 + 32) = v239;
  *(_QWORD *)(v236 + 40) = v241;

  swift_bridgeObjectRelease(v236);
  v243 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v244 = (_QWORD *)swift_allocObject(&unk_1005CE190, 40, 7);
  v244[2] = v237;
  v244[3] = sub_1001CF3A8;
  v244[4] = v189;
  v278[3] = sub_1001D29D0;
  v279 = v244;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v278[0] = 1107296256;
  v278[1] = sub_100175118;
  v278[2] = &unk_1005CE1A8;
  v245 = _Block_copy(&aBlock);
  v246 = v279;
  v247 = v237;
  swift_retain();
  *(_QWORD *)&v248 = swift_release(v246).n128_u64[0];
  v249 = v271;
  objc_msgSend(v243, "fetchURLForItem:completionHandler:", v271, v245, v248);
  swift_unknownObjectRelease(Strong);
  v250 = (void (*)(_QWORD, _QWORD, _QWORD))v275;
  swift_release(v275);
  v251 = v274;
  swift_release(v274);

  sub_100087534((uint64_t)sub_1001CF394, v251);
  sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v250);
  swift_release(v189);

  _Block_release(v245);
}

void sub_1001B66A4(void *a1, int a2, void (*a3)(void), uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  BOOL v35;
  uint64_t v36;
  double v37;
  void (*v38)(void);
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t (*v46)(_QWORD, _QWORD);
  char *v47;
  char *v48;
  _QWORD *v49;
  _BYTE *v50;
  void *v51;
  id v52;
  char *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  void **v72;
  double v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void *v78;
  char *v79;
  _QWORD *v80;
  id v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSString v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  uint64_t v111;
  char *v112;
  void *v113;
  _BOOL8 v114;
  BOOL v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  void **v140;
  void *v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  char v147;
  unsigned __int8 v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  BOOL v158;
  char *v159;
  id v160;
  char *v161;
  id *v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char *v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  id v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  char *v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  void *v198;
  char *v199;
  void (*v200)(void);
  __int128 v201;
  __int128 v202;
  char *v203;
  id v204;
  uint64_t v205;
  void *v206;
  char *v207;
  uint64_t v208;
  void (*v209)(_QWORD, _QWORD, _QWORD);
  uint64_t v210;
  void (*v211)(_QWORD, _QWORD, _QWORD, _QWORD);
  int v212;
  char *v213;
  id v214;
  uint64_t v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  __n128 v222;
  uint64_t v223;
  void (*v224)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v225;
  char *v226;
  uint64_t v227;
  void *v228;
  void (*v229)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v230)(_QWORD, _QWORD);
  uint64_t (*v231)(_QWORD, _QWORD);
  void (*v232)(_QWORD, _QWORD, _QWORD);
  uint64_t v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  id v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  void *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  id v248;
  _QWORD *v249;
  void *v250;
  _QWORD *v251;
  void *v252;
  uint64_t (*v253)(_QWORD, _QWORD);
  void (*v254)(_QWORD, _QWORD, _QWORD);
  uint64_t v255;
  int v256;
  unsigned int v257;
  void *v258;
  void (*v259)(void);
  __int128 v260;
  id *v261;
  char *v262;
  char *v263;
  uint64_t v264;
  _QWORD *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  char *v273;
  char *v274;
  char *v275;
  _QWORD *v276;
  uint64_t Strong;
  char *v278;
  char *v279;
  uint64_t v280;
  char *v281;
  id aBlock;
  _QWORD v283[4];
  _QWORD *v284;
  char v285;
  char v286;
  char v287;
  char v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  char *v293;

  v272 = a6;
  v281 = a5;
  v280 = a4;
  v271 = a2;
  v8 = sub_10006922C(&qword_100643470);
  v9 = __chkstk_darwin(v8);
  v262 = (char *)&v255 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v255 - v11;
  v270 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v270 - 8);
  v14 = __chkstk_darwin(v270);
  v267 = (char *)&v255 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v266 = (char *)&v255 - v16;
  v265 = (_QWORD *)type metadata accessor for Date(0);
  v264 = *(v265 - 1);
  __chkstk_darwin(v265);
  v263 = (char *)&v255 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)type metadata accessor for Logger(0);
  v19 = (_QWORD *)*(v18 - 1);
  v20 = __chkstk_darwin(v18);
  v273 = (char *)&v255 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v274 = (char *)&v255 - v23;
  v24 = __chkstk_darwin(v22);
  v275 = (char *)&v255 - v25;
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v255 - v27;
  v29 = Logger.UI.unsafeMutableAddressor(v26);
  v30 = (char *)v19[2];
  Strong = v29;
  v278 = v30;
  ((void (*)(char *))v30)(v28);
  v31 = swift_unknownObjectRetain_n(a1, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  v34 = v33;
  v35 = os_log_type_enabled(v32, v33);
  v268 = v13;
  v269 = v12;
  if (v35)
  {
    v36 = swift_slowAlloc(22, -1);
    v279 = (char *)swift_slowAlloc(64, -1);
    *(_QWORD *)&v289 = v279;
    *(_DWORD *)v36 = 136315394;
    aBlock = sub_1000544FC(0xD000000000000051, 0x8000000100515840, (uint64_t *)&v289);
    *(_QWORD *)&v37 = UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v283).n128_u64[0];
    *(_WORD *)(v36 + 12) = 2080;
    v261 = (id *)(v36 + 14);
    v38 = a3;
    v39 = objc_msgSend(a1, "displayName", v37);
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v276 = v19;
    v41 = v40;
    LODWORD(v260) = v34;
    v42 = v18;
    v44 = v43;

    a3 = v38;
    aBlock = sub_1000544FC(v41, v44, (uint64_t *)&v289);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v283);
    swift_unknownObjectRelease_n(a1, 2);
    v45 = v44;
    v18 = v42;
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v260, "%s [TAP] [Interaction] Validating selection of item %s", (uint8_t *)v36, 0x16u);
    v46 = (uint64_t (*)(_QWORD, _QWORD))v279;
    swift_arrayDestroy(v279, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    v47 = (char *)v276[1];
    v48 = v28;
    v49 = v42;
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    v47 = (char *)v19[1];
    v48 = v28;
    v49 = v18;
  }
  v279 = v47;
  ((void (*)(char *, _QWORD *))v47)(v48, v49);
  v50 = v281;
  v51 = *(void **)&v281[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  v52 = objc_msgSend(v51, "sceneIdentifier");
  v53 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v52);

  v54 = (void *)objc_opt_self(DOCTabbedBrowserViewController);
  v55 = objc_msgSend(v51, "sceneIdentifier");
  v56 = objc_msgSend(v54, "globalTabbedBrowserControllerForIdentifier:", v55);

  if (v56)
  {
    v57 = objc_msgSend(v56, "activeDocumentCreationIntent");

    if (v57)
    {
      v58 = objc_msgSend(a1, "displayName");
      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v61 = v60;

      v62 = v275;
      ((void (*)(char *, uint64_t, _QWORD *))v278)(v275, Strong, v18);
      v63 = swift_bridgeObjectRetain(v61);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(12, -1);
        v67 = swift_slowAlloc(32, -1);
        v273 = v53;
        v68 = v67;
        *(_QWORD *)&v289 = v67;
        v276 = v18;
        *(_DWORD *)v66 = 136315138;
        swift_bridgeObjectRetain(v61);
        aBlock = sub_1000544FC(v59, v61, (uint64_t *)&v289);
        UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v283);
        swift_bridgeObjectRelease_n(v61, 3);
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "[TAP] [Interaction] An item, '%s', was selected while there is UIP document creation in progress. Bailing out.", v66, 0xCu);
        swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
        v69 = v68;
        v53 = v273;
        swift_slowDealloc(v69, -1, -1);
        swift_slowDealloc(v66, -1, -1);

        v70 = v275;
        v71 = v276;
      }
      else
      {

        swift_bridgeObjectRelease_n(v61, 2);
        v70 = v62;
        v71 = v18;
      }
      v105 = ((uint64_t (*)(char *, _QWORD *))v279)(v70, v71);
      goto LABEL_41;
    }
  }
  v276 = v18;
  v72 = (void **)&v53[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  *(_QWORD *)&v73 = swift_beginAccess(&v53[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], &v288, 1, 0).n128_u64[0];
  if (*v72)
  {
    v273 = v53;
    v74 = objc_msgSend(a1, "displayName", v73);
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
    v77 = v76;

    v78 = *v72;
    v79 = v274;
    v80 = v276;
    ((void (*)(char *, uint64_t, _QWORD *))v278)(v274, Strong, v276);
    v81 = v78;
    v82 = swift_bridgeObjectRetain(v77);
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v83, v84))
    {
      v259 = a3;
      v85 = swift_slowAlloc(22, -1);
      v86 = (_QWORD *)swift_slowAlloc(8, -1);
      v87 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v289 = v87;
      *(_DWORD *)v85 = 136315394;
      swift_bridgeObjectRetain(v77);
      aBlock = sub_1000544FC(v75, v77, (uint64_t *)&v289);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v283);
      swift_bridgeObjectRelease_n(v77, 3);
      *(_WORD *)(v85 + 12) = 2112;
      if (v78)
      {
        aBlock = (uint64_t)v81;
        v88 = v81;
      }
      else
      {
        aBlock = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)((id *)&aBlock, v283);
      *v86 = v78;

      _os_log_impl((void *)&_mh_execute_header, v83, v84, "[TAP] [Interaction] An item, '%s', was selected while another is trying to be opened: '%@'. Bailing out.", (uint8_t *)v85, 0x16u);
      v125 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v86, 1, v125);
      swift_slowDealloc(v86, -1, -1);
      swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1, -1);
      swift_slowDealloc(v85, -1, -1);

      v107 = ((uint64_t (*)(char *, _QWORD *))v279)(v274, v276);
      a3 = v259;
    }
    else
    {

      swift_bridgeObjectRelease_n(v77, 2);
      v107 = ((uint64_t (*)(char *, _QWORD *))v279)(v79, v80);
    }
    ((void (*)(uint64_t))a3)(v107);
    v53 = v273;
    goto LABEL_42;
  }
  if ((objc_msgSend(a1, "isTrashed", v73) & 1) == 0
    && v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 33] != 1
    || (objc_msgSend(a1, "isFolder") & 1) != 0
    || (v89 = &v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode],
        swift_beginAccess(&v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v285, 0, 0),
        *v89 == 2)
    && v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] != 1)
  {
    v108 = DOCNode.fpfs_syncFetchFPItem()(v272);
    if (v108)
    {
      v109 = (char *)v108;
      v110 = (uint64_t *)&v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v287, 0, 0);
      if (*v110 == 2
        && v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] != 1)
      {
        goto LABEL_34;
      }
      v111 = sub_100432A2C(v109, v51, (uint64_t)v50);
      if ((v111 & 1) != 0)
      {
        if ((objc_msgSend(v109, "doc_isCollaborationInvitation") & 1) != 0)
        {
          v112 = v53;
          v113 = v109;
          v114 = FPItem.openInvitationIfPossible()();
          v115 = v114;
          v116 = *(id *)DOCLog.UI.unsafeMutableAddressor(v114);
          v117 = v116;
          if (v115)
          {
            v118 = static os_log_type_t.default.getter(v116);
            v119 = sub_10006922C((uint64_t *)&unk_100644560);
            v120 = swift_allocObject(v119, 72, 7);
            *(_OWORD *)(v120 + 16) = xmmword_1004D9670;
            v121 = objc_msgSend(a1, "displayName");
            v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
            v124 = v123;

            *(_QWORD *)(v120 + 56) = &type metadata for String;
            *(_QWORD *)(v120 + 64) = sub_10006A638();
            *(_QWORD *)(v120 + 32) = v122;
            *(_QWORD *)(v120 + 40) = v124;
            os_log(_:dso:log:type:_:)("[TAP] [Interaction] Opened invitation link for %@", 49, 2, &_mh_execute_header, v117, v118, v120);
          }
          else
          {
            v233 = static os_log_type_t.error.getter(v116);
            v234 = sub_10006922C((uint64_t *)&unk_100644560);
            v120 = swift_allocObject(v234, 72, 7);
            *(_OWORD *)(v120 + 16) = xmmword_1004D9670;
            v235 = objc_msgSend(a1, "displayName");
            v236 = static String._unconditionallyBridgeFromObjectiveC(_:)(v235);
            v238 = v237;

            *(_QWORD *)(v120 + 56) = &type metadata for String;
            *(_QWORD *)(v120 + 64) = sub_10006A638();
            *(_QWORD *)(v120 + 32) = v236;
            *(_QWORD *)(v120 + 40) = v238;
            os_log(_:dso:log:type:_:)("TAP] [Interaction] Could not open invitation for %@", 51, 2, &_mh_execute_header, v117, v233, v120);
          }

          swift_bridgeObjectRelease(v120);
          a3();
          v53 = v112;
          goto LABEL_42;
        }
LABEL_34:
        v275 = v109;
        v258 = a1;
        v135 = v273;
        v136 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v278)(v273, Strong, v276);
        v137 = Logger.logObject.getter(v136);
        v138 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v137, v138))
        {
          v139 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v139 = 0;
          _os_log_impl((void *)&_mh_execute_header, v137, v138, "[TAP] [Interaction] Clearing the last selected Item", v139, 2u);
          swift_slowDealloc(v139, -1, -1);
        }

        ((void (*)(char *, _QWORD *))v279)(v135, v276);
        v140 = (void **)&v53[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
        swift_beginAccess(&v53[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem], &v286, 1, 0);
        v141 = *v140;
        *v140 = 0;
        v273 = v53;
        sub_10010EDA8(v141);

        v278 = (char *)swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v278 + 16);
        v279 = (char *)swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v279 + 16);
        Strong = swift_unknownObjectWeakLoadStrong(&v50[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], v142);
        v143 = objc_msgSend(v51, "useSharedQuickLook");
        v144 = *v110;
        v145 = *(void **)&v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
        v146 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
        v147 = v50[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected];
        v276 = v145;
        if ((v271 & 1) != 0 && objc_msgSend(v51, "useSharedQuickLook"))
          v148 = 1;
        else
          v148 = objc_msgSend(v51, "skipDownload");
        v157 = v258;
        *(_QWORD *)&v289 = Strong;
        *((_QWORD *)&v289 + 1) = sub_1001CF394;
        *(_QWORD *)&v290 = v278;
        *((_QWORD *)&v290 + 1) = sub_1001CF39C;
        *(_QWORD *)&v291 = v279;
        BYTE8(v291) = v271 & 1;
        BYTE9(v291) = v143;
        BYTE10(v291) = v144 == 2;
        *(_QWORD *)&v292 = v145;
        BYTE8(v292) = v147;
        BYTE9(v292) = v148;
        v293 = v281;
        v158 = *v110 == 2;
        v259 = a3;
        v256 = v271 & 1;
        if (v158 && (v281[v146] & 1) == 0)
        {
          v161 = v281;
          swift_retain();
          swift_retain();
        }
        else
        {
          v159 = v281;
          swift_retain();
          v160 = objc_msgSend(v51, "shouldOpenInApp", swift_retain().n128_f64[0]);
          if ((_DWORD)v160)
          {
            v160 = objc_msgSend(v157, "isFolder");
            if ((v160 & 1) == 0)
            {
              v160 = objc_msgSend(v157, "isExternalDownloadPlaceholder");
              v257 = v160 ^ 1;
              goto LABEL_52;
            }
          }
        }
        v257 = 0;
LABEL_52:
        v162 = (id *)DOCLog.UI.unsafeMutableAddressor(v160);
        v274 = (char *)*v162;
        LODWORD(v261) = static os_log_type_t.default.getter(v274);
        v163 = sub_10006922C((uint64_t *)&unk_100644560);
        v164 = swift_allocObject(v163, 112, 7);
        *(_OWORD *)(v164 + 16) = xmmword_1004D4CE0;
        v165 = objc_msgSend(v157, "displayName");
        v166 = v157;
        v167 = static String._unconditionallyBridgeFromObjectiveC(_:)(v165);
        v169 = v168;

        *(_QWORD *)(v164 + 56) = &type metadata for String;
        v170 = sub_10006A638();
        v171 = (char *)v170;
        *(_QWORD *)(v164 + 32) = v167;
        *(_QWORD *)(v164 + 40) = v169;
        v172 = v257;
        v173 = 20302;
        if (v257)
          v173 = 5457241;
        v174 = 0xE200000000000000;
        *(_QWORD *)(v164 + 96) = &type metadata for String;
        *(_QWORD *)(v164 + 104) = v170;
        if (v172)
          v174 = 0xE300000000000000;
        *(_QWORD *)(v164 + 64) = v170;
        *(_QWORD *)(v164 + 72) = v173;
        *(_QWORD *)(v164 + 80) = v174;
        v175 = v274;
        os_log(_:dso:log:type:_:)("[TAP] [Interaction] An item, '%@', was selected. Attempting to open it? %@", 74, 2, &_mh_execute_header, v274, v261, v164);

        swift_bridgeObjectRelease(v164);
        v261 = v162;
        v176 = *v162;
        v177 = static os_log_type_t.default.getter(v176);
        v274 = (char *)v163;
        v178 = swift_allocObject(v163, 72, 7);
        v260 = xmmword_1004D9670;
        *(_OWORD *)(v178 + 16) = xmmword_1004D9670;
        v179 = objc_msgSend(v166, "displayName");
        v180 = static String._unconditionallyBridgeFromObjectiveC(_:)(v179);
        v182 = v181;

        *(_QWORD *)(v178 + 56) = &type metadata for String;
        *(_QWORD *)(v178 + 64) = v171;
        *(_QWORD *)(v178 + 32) = v180;
        *(_QWORD *)(v178 + 40) = v182;
        if (!v172)
        {
          os_log(_:dso:log:type:_:)("[TAP] [Interaction] Not trying to open %@ with LaunchUtils", 58, 2, &_mh_execute_header, v176, v177, v178);

          swift_bridgeObjectRelease(v178);
          v53 = v273;
          sub_100431F28(v258, (uint64_t)&v289, (uint64_t)v273, v272);
          swift_unknownObjectRelease(Strong);
          v231 = (uint64_t (*)(_QWORD, _QWORD))v279;
          swift_release(v279);
          v232 = (void (*)(_QWORD, _QWORD, _QWORD))v278;
          swift_release(v278);

          sub_100087534((uint64_t)sub_1001CF394, (uint64_t)v232);
          sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v231);

          v259();
          goto LABEL_42;
        }
        os_log(_:dso:log:type:_:)("[TAP] [Interaction] Should Try to Open with LaunchUtils: %@", 59, 2, &_mh_execute_header, v176, v177, v178);

        swift_bridgeObjectRelease(v178);
        v183 = *v72;
        v184 = v275;
        *v72 = v275;
        v185 = v184;
        sub_1000AE638(v183);

        v186 = *v261;
        v187 = static os_log_type_t.default.getter(v186);
        v188 = swift_allocObject(v274, 72, 7);
        *(_OWORD *)(v188 + 16) = v260;
        v189 = objc_msgSend(v258, "displayName");
        v190 = static String._unconditionallyBridgeFromObjectiveC(_:)(v189);
        v192 = v191;

        *(_QWORD *)(v188 + 56) = &type metadata for String;
        *(_QWORD *)(v188 + 64) = v171;
        *(_QWORD *)(v188 + 32) = v190;
        *(_QWORD *)(v188 + 40) = v192;
        os_log(_:dso:log:type:_:)("[TAP] [Interaction] Keeping track of last opened item in 'validateItemSelectionAndPerformDidPickIfNeeded()': %@", 111, 2, &_mh_execute_header, v186, v187, v188);

        v193 = objc_msgSend(v51, "forPickingDocuments", swift_bridgeObjectRelease(v188).n128_f64[0]);
        if ((v193 & 1) != 0)
        {
          v194 = v263;
          Date.init()(v193);
          FPItem.setLastOpenDate(_:delay:)(v194, 3.0);
          (*(void (**)(char *, _QWORD *))(v264 + 8))(v194, v265);
        }
        v275 = v171;
        v195 = swift_allocObject(&unk_1005CBE18, 24, 7);
        v196 = v281;
        swift_unknownObjectWeakInit(v195 + 16);
        v197 = swift_allocObject(&unk_1005CC9F8, 137, 7);
        v198 = v258;
        *(_QWORD *)(v197 + 16) = v195;
        *(_QWORD *)(v197 + 24) = v198;
        v199 = v273;
        v200 = v259;
        *(_QWORD *)(v197 + 32) = v273;
        *(_QWORD *)(v197 + 40) = v200;
        *(_QWORD *)(v197 + 48) = v280;
        *(_QWORD *)(v197 + 56) = v185;
        v201 = v292;
        *(_OWORD *)(v197 + 96) = v291;
        *(_OWORD *)(v197 + 112) = v201;
        *(_QWORD *)(v197 + 128) = v293;
        v202 = v290;
        *(_OWORD *)(v197 + 64) = v289;
        *(_OWORD *)(v197 + 80) = v202;
        *(_BYTE *)(v197 + 136) = v256;
        swift_unknownObjectRetain(v198);
        v265 = v185;
        swift_retain();
        v203 = v199;
        swift_retain();
        swift_unknownObjectRetain(Strong);
        sub_10008BA00((uint64_t)sub_1001CF394, (uint64_t)v278);
        sub_10008BA00((uint64_t)sub_1001CF39C, (uint64_t)v279);
        v276 = v276;
        v281 = (char *)v196;
        v204 = objc_msgSend(v198, "nodeURL");
        v205 = (uint64_t)v269;
        v273 = v203;
        if (v204)
        {
          v206 = v204;
          v207 = v267;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v204);

          v208 = v268;
          v209 = *(void (**)(_QWORD, _QWORD, _QWORD))(v268 + 32);
          v210 = v270;
          v209(v205, v207, v270);
          v211 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v208 + 56);
          v211(v205, 0, 1, v210);
          v212 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v205, 1, v210);
          v213 = v274;
          if (v212 != 1)
          {
            v209(v266, v205, v210);
            v214 = *v261;
            LODWORD(v269) = static os_log_type_t.default.getter(v214);
            v215 = swift_allocObject(v213, 72, 7);
            *(_OWORD *)(v215 + 16) = v260;
            v216 = objc_msgSend(v198, "displayName");
            v217 = v208;
            v218 = static String._unconditionallyBridgeFromObjectiveC(_:)(v216);
            v220 = v219;

            v221 = v275;
            *(_QWORD *)(v215 + 56) = &type metadata for String;
            *(_QWORD *)(v215 + 64) = v221;
            *(_QWORD *)(v215 + 32) = v218;
            *(_QWORD *)(v215 + 40) = v220;

            v222 = swift_bridgeObjectRelease(v215);
            v223 = v217;
            v224 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v217 + 16);
            v225 = (uint64_t)v262;
            v226 = v266;
            v227 = v270;
            v224(v262, v266, v270, v222);
            v211(v225, 0, 1, v227);
            v53 = v273;
            v228 = v265;
            sub_1001B87B8(v225, 0, v195, v258, v273, v259, v280, v265, (uint64_t)&v289, v271 & 1);
            swift_unknownObjectRelease(Strong);
            swift_release(v197);
            v229 = (void (*)(_QWORD, _QWORD, _QWORD))v278;
            sub_100087534((uint64_t)sub_1001CF394, (uint64_t)v278);
            v230 = (uint64_t (*)(_QWORD, _QWORD))v279;
            sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v279);
            swift_release(v229);
            swift_release(v230);

            swift_release(v195);
            sub_10000CB4C(v225, &qword_100643470);
            (*(void (**)(char *, uint64_t))(v223 + 8))(v226, v227);
            goto LABEL_42;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v268 + 56))(v269, 1, 1, v270);
          v213 = v274;
        }
        swift_release(v195);
        sub_10000CB4C(v205, &qword_100643470);
        v239 = *v261;
        v240 = static os_log_type_t.default.getter(v239);
        v241 = swift_allocObject(v213, 72, 7);
        *(_OWORD *)(v241 + 16) = v260;
        v242 = objc_msgSend(v198, "displayName");
        v243 = v198;
        v244 = static String._unconditionallyBridgeFromObjectiveC(_:)(v242);
        v246 = v245;

        v247 = v275;
        *(_QWORD *)(v241 + 56) = &type metadata for String;
        *(_QWORD *)(v241 + 64) = v247;
        *(_QWORD *)(v241 + 32) = v244;
        *(_QWORD *)(v241 + 40) = v246;

        swift_bridgeObjectRelease(v241);
        v248 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        v249 = (_QWORD *)swift_allocObject(&unk_1005CCA20, 40, 7);
        v249[2] = v243;
        v249[3] = sub_1001CF3A8;
        v249[4] = v197;
        v283[3] = sub_1001CF3B4;
        v284 = v249;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v283[0] = 1107296256;
        v283[1] = sub_100175118;
        v283[2] = &unk_1005CCA38;
        v250 = _Block_copy(&aBlock);
        v251 = v284;
        swift_unknownObjectRetain(v243);
        swift_retain();
        swift_release(v251);
        v252 = v265;
        objc_msgSend(v248, "fetchURLForItem:completionHandler:", v265, v250);
        swift_unknownObjectRelease(Strong);
        v253 = (uint64_t (*)(_QWORD, _QWORD))v279;
        swift_release(v279);
        v254 = (void (*)(_QWORD, _QWORD, _QWORD))v278;
        swift_release(v278);

        sub_100087534((uint64_t)sub_1001CF394, (uint64_t)v254);
        sub_100087534((uint64_t)sub_1001CF39C, (uint64_t)v253);
        swift_release(v197);

        _Block_release(v250);
        v53 = (char *)v248;
        goto LABEL_42;
      }
      v126 = *(id *)DOCLog.UI.unsafeMutableAddressor(v111);
      v149 = v109;
      v150 = static os_log_type_t.error.getter(v126);
      v151 = sub_10006922C((uint64_t *)&unk_100644560);
      v129 = swift_allocObject(v151, 72, 7);
      *(_OWORD *)(v129 + 16) = xmmword_1004D9670;
      v152 = objc_msgSend(a1, "displayName");
      v153 = static String._unconditionallyBridgeFromObjectiveC(_:)(v152);
      v154 = v53;
      v156 = v155;

      *(_QWORD *)(v129 + 56) = &type metadata for String;
      *(_QWORD *)(v129 + 64) = sub_10006A638();
      *(_QWORD *)(v129 + 32) = v153;
      *(_QWORD *)(v129 + 40) = v156;
      v53 = v154;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] An non-downloaded item, '%@', was selected, but cannot be downloaded.", 89, 2, &_mh_execute_header, v126, v150, v129);

    }
    else
    {
      v126 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
      v127 = static os_log_type_t.error.getter(v126);
      v128 = sub_10006922C((uint64_t *)&unk_100644560);
      v129 = swift_allocObject(v128, 72, 7);
      *(_OWORD *)(v129 + 16) = xmmword_1004D9670;
      v130 = objc_msgSend(a1, "displayName");
      v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(v130);
      v132 = v53;
      v134 = v133;

      *(_QWORD *)(v129 + 56) = &type metadata for String;
      *(_QWORD *)(v129 + 64) = sub_10006A638();
      *(_QWORD *)(v129 + 32) = v131;
      *(_QWORD *)(v129 + 40) = v134;
      v53 = v132;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Couldn't get FPItem from node for '%@. Bailing out.", 71, 2, &_mh_execute_header, v126, v127, v129);
    }

    v106 = swift_bridgeObjectRelease(v129);
LABEL_41:
    ((void (*)(uint64_t, __n128))a3)(v105, v106);
    goto LABEL_42;
  }
  v91 = a1;
  v92 = v53;
  v93 = *(id *)DOCLog.UI.unsafeMutableAddressor(v90);
  v94 = static os_log_type_t.default.getter(v93);
  v95 = sub_10006922C((uint64_t *)&unk_100644560);
  v96 = swift_allocObject(v95, 72, 7);
  *(_OWORD *)(v96 + 16) = xmmword_1004D9670;
  v97 = objc_msgSend(a1, "displayName");
  v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
  v100 = v99;

  *(_QWORD *)(v96 + 56) = &type metadata for String;
  *(_QWORD *)(v96 + 64) = sub_10006A638();
  *(_QWORD *)(v96 + 32) = v98;
  *(_QWORD *)(v96 + 40) = v100;
  os_log(_:dso:log:type:_:)("[TAP] [Interaction] A trashed item, '%@', was selected, alerting the user it can't be oppened. Bailing out.", 107, 2, &_mh_execute_header, v93, v94, v96);

  v101 = objc_msgSend(v91, "displayName", swift_bridgeObjectRelease(v96).n128_f64[0]);
  if (!v101)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v104 = v103;
    v101 = String._bridgeToObjectiveC()();
    v102 = swift_bridgeObjectRelease(v104);
  }
  DOCAlertUserTrashedFileCanNotBeOpened(v101, v281, v102);

  a3();
  v53 = v92;
LABEL_42:

}

void sub_1001B82A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6, uint64_t a7, int a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  id v52;
  id v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  char *v58;
  id v59;
  char *v60;
  id v61;
  void (*v62)(char *, char *, uint64_t);
  int v63;
  id v64;
  id v65;
  char *v66;
  _QWORD aBlock[5];
  char *v68;
  char v69[24];

  v63 = a8;
  v64 = a6;
  v65 = a4;
  v66 = a5;
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v62 - v20;
  a3 += 16;
  swift_beginAccess(a3, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v23 = (void *)Strong;
    if (a2)
    {
      v24 = swift_errorRetain(a2);
      v25 = *(id *)DOCLog.UI.unsafeMutableAddressor(v24);
      v26 = static os_log_type_t.error.getter(v25);
      v27 = sub_10006922C((uint64_t *)&unk_100644560);
      v28 = swift_allocObject(v27, 112, 7);
      *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
      v29 = objc_msgSend(v65, "displayName");
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v32 = v31;

      *(_QWORD *)(v28 + 56) = &type metadata for String;
      *(_QWORD *)(v28 + 64) = sub_10006A638();
      *(_QWORD *)(v28 + 32) = v30;
      *(_QWORD *)(v28 + 40) = v32;
      v33 = _convertErrorToNSError(_:)(a2);
      *(_QWORD *)(v28 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v28 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v28 + 72) = v33;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem: Got a nil url from fetchURL for item %@. error %@. Bailing out.", 108, 2, &_mh_execute_header, v25, v26, v28);

      swift_bridgeObjectRelease(v28);
      v34 = (void **)&v66[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess(&v66[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
      v35 = *v34;
      *v34 = 0;
      sub_1000AE638(v35);

      swift_errorRelease(a2);
    }
    else
    {
      sub_1000271D4(a1, (uint64_t)v14, &qword_100643470);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        v36 = sub_10000CB4C((uint64_t)v14, &qword_100643470);
        v37 = *(id *)DOCLog.UI.unsafeMutableAddressor(v36);
        v38 = static os_log_type_t.error.getter(v37);
        v39 = sub_10006922C((uint64_t *)&unk_100644560);
        v40 = swift_allocObject(v39, 72, 7);
        *(_OWORD *)(v40 + 16) = xmmword_1004D9670;
        v41 = objc_msgSend(v65, "displayName");
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v44 = v43;

        *(_QWORD *)(v40 + 56) = &type metadata for String;
        *(_QWORD *)(v40 + 64) = sub_10006A638();
        *(_QWORD *)(v40 + 32) = v42;
        *(_QWORD *)(v40 + 40) = v44;
        os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem Got a nil url from fetchURL for item %@ but no error.", 97, 2, &_mh_execute_header, v37, v38, v40);

        swift_bridgeObjectRelease(v40);
        v45 = (void **)&v66[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess(&v66[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
        v46 = *v45;
        *v45 = 0;
        sub_1000AE638(v46);

      }
      else
      {
        v62 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v62(v21, v14, v15);
        v47 = swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v47 + 16);
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
        v48 = *(unsigned __int8 *)(v16 + 80);
        v49 = (v48 + 64) & ~v48;
        v50 = (v17 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
        v51 = (char *)swift_allocObject(&unk_1005CE1E0, v50 + 73, v48 | 7);
        v52 = v65;
        *((_QWORD *)v51 + 2) = v47;
        *((_QWORD *)v51 + 3) = v52;
        *((_QWORD *)v51 + 4) = v66;
        *((_QWORD *)v51 + 5) = DOCSplitBrowserViewController.didCommitPreview(of:);
        v53 = v64;
        *((_QWORD *)v51 + 6) = 0;
        *((_QWORD *)v51 + 7) = v53;
        v62(&v51[v49], v18, v15);
        v54 = &v51[v50];
        v55 = *(_OWORD *)(a7 + 48);
        *((_OWORD *)v54 + 2) = *(_OWORD *)(a7 + 32);
        *((_OWORD *)v54 + 3) = v55;
        *((_QWORD *)v54 + 8) = *(_QWORD *)(a7 + 64);
        v56 = *(_OWORD *)(a7 + 16);
        *(_OWORD *)v54 = *(_OWORD *)a7;
        *((_OWORD *)v54 + 1) = v56;
        v54[72] = v63 & 1;
        aBlock[4] = sub_1001CF3C4;
        v68 = v51;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004A82C;
        aBlock[3] = &unk_1005CE1F8;
        v57 = _Block_copy(aBlock);
        v58 = v68;
        v59 = v65;
        v60 = v66;
        v61 = v64;
        sub_1001CF3C8((_QWORD *)a7);
        swift_release(v58);
        DOCRunInMainThread(v57);
        _Block_release(v57);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      }
    }
  }
}

void sub_1001B87B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void (*a6)(void), uint64_t a7, void *a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  id v55;
  void (*v56)(void);
  id v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  char *v62;
  char *v63;
  id v64;
  void (*v65)(char *, char *, uint64_t);
  int v66;
  uint64_t v67;
  id v68;
  void (*v69)(void);
  id v70;
  char *v71;
  _QWORD aBlock[5];
  char *v73;
  char v74[24];

  v68 = a8;
  v69 = a6;
  v70 = a4;
  v71 = a5;
  v14 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v14);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin(v17);
  v21 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v65 - v22;
  a3 += 16;
  swift_beginAccess(a3, v74, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3, v24);
  if (Strong)
  {
    v26 = (void *)Strong;
    if (a2)
    {
      v27 = swift_errorRetain(a2);
      v28 = *(id *)DOCLog.UI.unsafeMutableAddressor(v27);
      v29 = static os_log_type_t.error.getter(v28);
      v30 = sub_10006922C((uint64_t *)&unk_100644560);
      v31 = swift_allocObject(v30, 112, 7);
      *(_OWORD *)(v31 + 16) = xmmword_1004D4CE0;
      v32 = objc_msgSend(v70, "displayName");
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = sub_10006A638();
      *(_QWORD *)(v31 + 32) = v33;
      *(_QWORD *)(v31 + 40) = v35;
      v36 = _convertErrorToNSError(_:)(a2);
      *(_QWORD *)(v31 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v31 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
      *(_QWORD *)(v31 + 72) = v36;
      os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem: Got a nil url from fetchURL for item %@. error %@. Bailing out.", 108, 2, &_mh_execute_header, v28, v29, v31);

      swift_bridgeObjectRelease(v31);
      v37 = (void **)&v71[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess(&v71[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
      v38 = *v37;
      *v37 = 0;
      sub_1000AE638(v38);

      v69();
      swift_errorRelease(a2);
    }
    else
    {
      v67 = a7;
      sub_1000271D4(a1, (uint64_t)v16, &qword_100643470);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
      {
        v39 = sub_10000CB4C((uint64_t)v16, &qword_100643470);
        v40 = *(id *)DOCLog.UI.unsafeMutableAddressor(v39);
        v41 = static os_log_type_t.error.getter(v40);
        v42 = sub_10006922C((uint64_t *)&unk_100644560);
        v43 = swift_allocObject(v42, 72, 7);
        *(_OWORD *)(v43 + 16) = xmmword_1004D9670;
        v44 = objc_msgSend(v70, "displayName");
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v47 = v46;

        *(_QWORD *)(v43 + 56) = &type metadata for String;
        *(_QWORD *)(v43 + 64) = sub_10006A638();
        *(_QWORD *)(v43 + 32) = v45;
        *(_QWORD *)(v43 + 40) = v47;
        os_log(_:dso:log:type:_:)("[TAP] [Interaction] Clearing lastOpenedItem Got a nil url from fetchURL for item %@ but no error.", 97, 2, &_mh_execute_header, v40, v41, v43);

        swift_bridgeObjectRelease(v43);
        v48 = (void **)&v71[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess(&v71[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
        v49 = *v48;
        *v48 = 0;
        sub_1000AE638(v49);

        v69();
      }
      else
      {
        v66 = a10;
        v65 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
        v65(v23, v16, v17);
        v50 = swift_allocObject(&unk_1005CBE18, 24, 7);
        swift_unknownObjectWeakInit(v50 + 16);
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
        v51 = *(unsigned __int8 *)(v18 + 80);
        v52 = (v51 + 64) & ~v51;
        v53 = (v19 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
        v54 = (char *)swift_allocObject(&unk_1005CCA70, v53 + 73, v51 | 7);
        v55 = v70;
        *((_QWORD *)v54 + 2) = v50;
        *((_QWORD *)v54 + 3) = v55;
        v56 = v69;
        *((_QWORD *)v54 + 4) = v71;
        *((_QWORD *)v54 + 5) = v56;
        v57 = v68;
        *((_QWORD *)v54 + 6) = v67;
        *((_QWORD *)v54 + 7) = v57;
        v65(&v54[v52], v21, v17);
        v58 = &v54[v53];
        v59 = *(_OWORD *)(a9 + 48);
        *((_OWORD *)v58 + 2) = *(_OWORD *)(a9 + 32);
        *((_OWORD *)v58 + 3) = v59;
        *((_QWORD *)v58 + 8) = *(_QWORD *)(a9 + 64);
        v60 = *(_OWORD *)(a9 + 16);
        *(_OWORD *)v58 = *(_OWORD *)a9;
        *((_OWORD *)v58 + 1) = v60;
        v58[72] = v66 & 1;
        aBlock[4] = sub_1001CF3C4;
        v73 = v54;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004A82C;
        aBlock[3] = &unk_1005CCA88;
        v61 = _Block_copy(aBlock);
        v62 = v73;
        swift_unknownObjectRetain(v70);
        v63 = v71;
        swift_retain();
        v64 = v68;
        sub_1001CF3C8((_QWORD *)a9);
        swift_release(v62);
        DOCRunInMainThread(v61);
        _Block_release(v61);

        (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
      }
    }
  }
}

uint64_t sub_1001B8CFC(void *a1, void *a2, uint64_t a3, unint64_t a4, _BYTE *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t (**v42)();
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  void *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.Rename.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  swift_bridgeObjectRetain_n(a4, 2);
  v16 = a1;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  v19 = v18;
  v20 = os_log_type_enabled(v17, v18);
  v57 = a3;
  if (v20)
  {
    v21 = swift_slowAlloc(32, -1);
    v55 = a2;
    v22 = v21;
    v54 = swift_slowAlloc(96, -1);
    v59 = v54;
    *(_DWORD *)v22 = 136315650;
    v56 = a5;
    swift_bridgeObjectRetain(a4);
    v58 = sub_1000544FC(a3, a4, &v59);
    v53 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v22 + 12) = 2080;
    v58 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100515BC0, &v59);
    *(_QWORD *)&v23 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59).n128_u64[0];
    *(_WORD *)(v22 + 22) = 2080;
    v24 = objc_msgSend(v16, "description", v23);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v51 = v11;
    v52 = v10;
    v26 = v25;
    v28 = v27;

    v58 = sub_1000544FC(v26, v28, &v59);
    a5 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);

    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v53, "%s > %s: item: %s", (uint8_t *)v22, 0x20u);
    v29 = v54;
    swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v30 = v22;
    a2 = v55;
    swift_slowDealloc(v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v52);
  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 1;
  v31 = type metadata accessor for DOCInlineRenameController();
  v32 = swift_allocObject(v31, 160, 7);
  v33 = v16;
  v34 = a2;
  v35 = a5;
  v36 = sub_1001BDA68((uint64_t)v35, (uint64_t)v34, (uint64_t)v33, v32);

  *(_BYTE *)(v36 + 40) = 1;
  v37 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  v38 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  *(_QWORD *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v36;
  swift_retain();
  swift_release(v38);
  if (!*(_QWORD *)&v35[v37])
    v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v39 = (_QWORD *)swift_allocObject(&unk_1005CCD40, 48, 7);
  v40 = v39;
  v41 = v57;
  v39[2] = v57;
  v39[3] = a4;
  v39[4] = v36;
  v39[5] = v35;
  if (*(_QWORD *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    v42 = (uint64_t (**)())&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v43 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v44 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                        + 8];
    *v42 = sub_1001CF874;
    v42[1] = (uint64_t (*)())v39;
    swift_bridgeObjectRetain(a4);
    v45 = v35;
    return sub_100087534(v43, v44);
  }
  else
  {
    swift_bridgeObjectRetain_n(a4, 2);
    v47 = v35;
    swift_retain_n(v36, 2);
    v48 = v47;
    sub_1001B0B08(v41, a4, v36, (uint64_t)v48);

    swift_release_n(v36, 2, v49);
    swift_bridgeObjectRelease(a4);
    return swift_release(v40);
  }
}

uint64_t sub_1001B9120(void *a1, void *a2, uint64_t a3, unint64_t a4, _BYTE *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  unint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = Logger.Rename.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
  swift_bridgeObjectRetain_n(a4, 2);
  v18 = swift_unknownObjectRetain_n(a1, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  v58 = v20;
  v21 = os_log_type_enabled(v19, v20);
  v59 = a3;
  if (v21)
  {
    v22 = swift_slowAlloc(32, -1);
    v55 = v13;
    v23 = v22;
    v54 = swift_slowAlloc(96, -1);
    v61 = v54;
    *(_DWORD *)v23 = 136315650;
    v56 = a2;
    swift_bridgeObjectRetain(a4);
    v60 = sub_1000544FC(a3, a4, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(a4, 3);
    v57 = a6;
    *(_WORD *)(v23 + 12) = 2080;
    v60 = sub_1000544FC(0xD00000000000001DLL, 0x8000000100515BC0, &v61);
    *(_QWORD *)&v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61).n128_u64[0];
    *(_WORD *)(v23 + 22) = 2080;
    v25 = objc_msgSend(a1, "description", v24, v23 + 24);
    v53 = v12;
    v26 = v25;
    v27 = a4;
    v28 = a5;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v31 = v30;

    v32 = v29;
    a5 = v28;
    a4 = v27;
    a2 = v56;
    v60 = sub_1000544FC(v32, v31, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v58, "%s > %s: item: %s", (uint8_t *)v23, 0x20u);
    v33 = v54;
    swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v53);
  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(a4, 2);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 1;
  v34 = type metadata accessor for DOCInlineRenameController();
  v35 = swift_allocObject(v34, 160, 7);
  swift_unknownObjectRetain(a1);
  v36 = a2;
  v37 = a5;
  v38 = sub_100390918((uint64_t)v37, (uint64_t)v36, (uint64_t)a1, v35);

  swift_unknownObjectRelease(a1);
  *(_BYTE *)(v38 + 40) = 1;
  v39 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  v40 = *(_QWORD *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  *(_QWORD *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v38;
  swift_retain();
  swift_release(v40);
  if (!*(_QWORD *)&v37[v39])
    v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v41 = (_QWORD *)swift_allocObject(&unk_1005CCDB8, 48, 7);
  v42 = v41;
  v43 = v59;
  v41[2] = v59;
  v41[3] = a4;
  v41[4] = v38;
  v41[5] = v37;
  if (*(_QWORD *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    v44 = (uint64_t (**)())&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v45 = *(_QWORD *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    v46 = *(_QWORD *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                        + 8];
    *v44 = sub_1001D25EC;
    v44[1] = (uint64_t (*)())v41;
    swift_bridgeObjectRetain(a4);
    v47 = v37;
    return sub_100087534(v45, v46);
  }
  else
  {
    swift_bridgeObjectRetain_n(a4, 2);
    v49 = v37;
    swift_retain_n(v38, 2);
    v50 = v49;
    sub_1001B0B08(v43, a4, v38, (uint64_t)v50);

    swift_release_n(v38, 2, v51);
    swift_bridgeObjectRelease(a4);
    return swift_release(v42);
  }
}

void sub_1001B9574(_BYTE *a1)
{
  id v1;
  id v2;

  a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  v1 = objc_msgSend(a1, "viewIfLoaded");
  v2 = objc_msgSend(v1, "window");

  if (v2)
    sub_1000926C8();
}

void sub_1001B95E4()
{
  sub_10017D5A0(1);
}

void sub_1001B9608()
{
  sub_10017D5A0(0);
}

uint64_t sub_1001B962C(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*a4;
  v14 = sub_100140624(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = (_QWORD *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_unknownObjectRelease(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1002E80E0();
    goto LABEL_7;
  }
  sub_1002DF398(v17, a3 & 1);
  v23 = sub_100140624(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = (_QWORD *)*a4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10014EE38(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1001B9788(void *a1, char a2, void *a3, char a4)
{
  id v6;
  id v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      v13 = v12;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
      v16 = v14;
      if (v11 == v15 && v13 == v14)
        v10 = 1;
      else
        v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v14, 0);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v16);
      return v10 & 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
    v6 = a1;
    v7 = a3;
    v8 = static NSObject.== infix(_:_:)(v6, v7);

    return v8 & 1;
  }
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_1001B9878(uint64_t a1, void (*a2)(_OWORD *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v8)
      return swift_release(a1);
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v8)
        return swift_release(a1);
      v19 = *(_QWORD *)(v25 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v8)
          return swift_release(a1);
        v19 = *(_QWORD *)(v25 + 8 * v10);
        if (!v19)
        {
          v10 = v18 + 3;
          if (v18 + 3 >= v8)
            return swift_release(a1);
          v19 = *(_QWORD *)(v25 + 8 * v10);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(a1 + 48) + 40 * v12;
    v22 = *(_QWORD *)(v14 + 32);
    v15 = v22;
    v16 = *(_OWORD *)(v14 + 16);
    v21[0] = *(_OWORD *)v14;
    v21[1] = v16;
    v23 = v21[0];
    v24 = v16;
    v17 = *(_QWORD *)(v13 + 8 * v12);
    sub_1001D0760((uint64_t)&v23);
    sub_1001D0760((uint64_t)&v24);
    swift_retain();
    swift_bridgeObjectRetain(v17);
    a2(v21, v17);
    sub_1001D0A08((uint64_t)&v23);
    sub_1001D0A08((uint64_t)&v24);
    swift_bridgeObjectRelease(v17);
    result = swift_release(v15);
  }
  v20 = v18 + 4;
  if (v20 >= v8)
    return swift_release(a1);
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v8)
      return swift_release(a1);
    v19 = *(_QWORD *)(v25 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001B9A70(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unsigned __int8 v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = *(_QWORD *)(result + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = result;
    v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v3 + 16) & 1) == 0)
    {
      v4 = *(id *)v3;
      v5 = objc_msgSend(v4, "doc_displaysSearchResults");

      if ((v5 & 1) != 0)
        return 0;
    }
    v6 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
    if (!v6)
      return 0;
    v7 = objc_msgSend(v6, "searchController");
    if (!v7)
      return 0;
    v8 = v7;
    v9 = type metadata accessor for DOCSearchController();
    v10 = (char *)swift_dynamicCastClass(v8, v9);
    v11 = v10;
    if (!v10)
    {

      return 0;
    }
    v12 = objc_msgSend(v10, "searchBar");
    v13 = objc_msgSend(v12, "text");

    if (v13)
    {
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0xE000000000000000;
    }
    v18 = &v11[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate], v14);
    v21 = Strong;
    if (!Strong)
    {

      swift_bridgeObjectRelease(v17);
      return 0;
    }
    v22 = *((_QWORD *)v18 + 1);
    ObjectType = swift_getObjectType(Strong, v20);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 8))(v11, ObjectType, v22);
    result = swift_unknownObjectRelease(v21);
    v25 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
    if (v25 >= *(_QWORD *)(v24 + 16))
    {

      swift_bridgeObjectRelease(v17);
      v28 = v24;
      goto LABEL_18;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
      v26 = *(_QWORD *)(v24 + 16 * v25 + 32);
      swift_unknownObjectRetain_n(v26, 2);
      swift_bridgeObjectRelease(v24);
      v27 = String.count.getter(v15, v17);

      swift_unknownObjectRelease(v26);
      if (v27 <= 0)
      {
        swift_unknownObjectRelease(v26);
        v28 = v17;
LABEL_18:
        swift_bridgeObjectRelease(v28);
        return 0;
      }
      return v15;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001B9CB0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  _QWORD *result;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD v46[2];
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  v3 = v2;
  v56 = a2;
  v5 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for IndexPath(0);
  v54 = *(_QWORD *)(v57 - 8);
  v8 = __chkstk_darwin(v57);
  v49 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v47 = (char *)v46 - v10;
  v11 = sub_10006922C((uint64_t *)&unk_100646C10);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10006922C((uint64_t *)&unk_100644C10);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v55 = (uint64_t)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v48 = (uint64_t)v46 - v18;
  if ((unint64_t)a1 >> 62)
  {
LABEL_24:
    if (a1 < 0)
      v45 = a1;
    else
      v45 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v45);
    if (v19)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease(a1);
    return _swiftEmptyArrayStorage;
  }
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v19)
    goto LABEL_28;
LABEL_3:
  v46[1] = v3;
  v53 = a1 & 0xC000000000000001;
  v58 = _swiftEmptyArrayStorage;
  v20 = 4;
  v51 = a1;
  v52 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v50 = v15;
  while (1)
  {
    v3 = v20 - 4;
    if (v53)
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1);
    else
      v22 = *(id *)(a1 + 8 * v20);
    a1 = (uint64_t)v22;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    v59 = v20 - 3;
    v23 = v19;
    v24 = v56;
    objc_msgSend(v56, "loadViewIfNeeded");
    result = *(_QWORD **)&v24[v52];
    if (!result)
      break;
    v26 = v14;
    v27 = objc_msgSend(result, "indexPathForCell:", a1);
    if (!v27)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v7, 1, 1, v57);
LABEL_15:
      sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_100642710);
      v15 = v50;
      v14 = v26;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v13, 1, 1, v26);

      goto LABEL_16;
    }
    v28 = v27;
    v29 = v49;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v30 = v7;
    v31 = v54;
    v32 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v33 = v29;
    v34 = v57;
    v32(v30, v33, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v34);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v7 = v30;
    if (v35(v30, 1, v34) == 1)
      goto LABEL_15;
    v36 = v47;
    v37 = v57;
    v32(v47, v7, v57);
    v38 = (char *)v13 + *(int *)(v26 + 48);
    *v13 = a1;
    v39 = v36;
    v14 = v26;
    v32(v38, v39, v37);
    v15 = v50;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v13, 0, 1, v26);
LABEL_16:
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_100646C10);
      v19 = v23;
      v21 = v59;
    }
    else
    {
      v40 = v48;
      sub_100070EDC((uint64_t)v13, v48, (uint64_t *)&unk_100644C10);
      sub_100070EDC(v40, v55, (uint64_t *)&unk_100644C10);
      v41 = (unint64_t)v58;
      if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
        v41 = sub_1001530BC(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
      v43 = *(_QWORD *)(v41 + 16);
      v42 = *(_QWORD *)(v41 + 24);
      v58 = (_QWORD *)v41;
      v19 = v23;
      if (v43 >= v42 >> 1)
        v58 = (_QWORD *)sub_1001530BC(v42 > 1, v43 + 1, 1, (unint64_t)v58);
      v21 = v59;
      v44 = v58;
      v58[2] = v43 + 1;
      sub_100070EDC(v55, (uint64_t)v44+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v43, (uint64_t *)&unk_100644C10);
    }
    ++v20;
    a1 = v51;
    if (v21 == v19)
    {
      swift_bridgeObjectRelease(v51);
      return v58;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1001BA164(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  unint64_t v25;

  v24 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 16);
  v20 = a1;
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v21 = *(_QWORD *)(v4 + 72);
    v22 = v11;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v22(v8, v10, v3);
      v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v13(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
        break;
      v14 = (uint64_t)v23;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v23, v8, v3);
      v15 = sub_10017A754(v14, 0);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v14, v3);
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v18 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v17 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized Array._endMutation()(v12);
      }
      v10 += v21;
      if (!--v9)
        goto LABEL_10;
    }
  }
  else
  {
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain(a1);
LABEL_10:
    v13(v8, 1, 1, v3);
  }
  swift_bridgeObjectRelease(v20);
  return v25;
}

unint64_t sub_1001BA370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v26 = a2;
  v27 = a3;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 16);
  v22 = a1;
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23 = *(_QWORD *)(v5 + 72);
    v24 = v12;
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v24(v9, v11, v4);
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v14(v9, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
        break;
      v15 = (uint64_t)v25;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v9, v4);
      v16 = sub_10017A754(v15, v27);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v19 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v18 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v19 >= v18 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
        specialized Array._endMutation()(v13);
      }
      v11 += v23;
      if (!--v10)
        goto LABEL_10;
    }
  }
  else
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain(a1);
LABEL_10:
    v14(v9, 1, 1, v4);
  }
  swift_bridgeObjectRelease(v22);
  return v28;
}

_QWORD *sub_1001BA578(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v32 = a2;
  v7 = sub_10006922C(&qword_100646BE0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_10006922C(&qword_100644BF0);
  v10 = *(_QWORD *)(v31 - 8);
  v11 = __chkstk_darwin(v31);
  v30 = (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v27 = (uint64_t)&v25 - v13;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v14)
  {
    v15 = _swiftEmptyArrayStorage;
    v28 = a1;
    v29 = a1 & 0xC000000000000001;
    v16 = 4;
    v26 = a3;
    while (1)
    {
      v17 = v16 - 4;
      if (!v29)
        break;
      a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, a1);
      v18 = __OFADD__(v17, 1);
      v19 = v16 - 3;
      if (v18)
        goto LABEL_20;
LABEL_11:
      v33 = a1;
      sub_10018E2F4((void **)&v33, v32, a3, v9);
      if (v4)
      {
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v28);
        swift_unknownObjectRelease(a1);
        return v15;
      }
      swift_unknownObjectRelease(a1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v31) == 1)
      {
        sub_10000CB4C((uint64_t)v9, &qword_100646BE0);
      }
      else
      {
        v20 = v27;
        sub_100070EDC((uint64_t)v9, v27, &qword_100644BF0);
        sub_100070EDC(v20, v30, &qword_100644BF0);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
          v15 = (_QWORD *)sub_100153654(0, v15[2] + 1, 1, (unint64_t)v15);
        v22 = v15[2];
        v21 = v15[3];
        if (v22 >= v21 >> 1)
          v15 = (_QWORD *)sub_100153654(v21 > 1, v22 + 1, 1, (unint64_t)v15);
        v15[2] = v22 + 1;
        sub_100070EDC(v30, (uint64_t)v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v22, &qword_100644BF0);
        a3 = v26;
      }
      ++v16;
      a1 = v28;
      if (v19 == v14)
      {
        swift_bridgeObjectRelease(v28);
        return v15;
      }
    }
    a1 = *(_QWORD *)(a1 + 8 * v16);
    swift_unknownObjectRetain(a1);
    v18 = __OFADD__(v17, 1);
    v19 = v16 - 3;
    if (!v18)
      goto LABEL_11;
LABEL_20:
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v23);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1001BA860(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Class isa;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;

  v27 = a2;
  v26 = sub_10006922C(&qword_100644BF0);
  __chkstk_darwin(v26);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = _swiftEmptyArrayStorage;
  v28 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v9 = (char *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v10 = *(_QWORD *)(v4 + 72);
    v24 = v2;
    v25 = v10;
    v11 = type metadata accessor for IndexPath(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v23 = a1;
    swift_bridgeObjectRetain(a1);
    do
    {
      v15 = *(int *)(v26 + 48);
      v16 = &v6[v15];
      *(_QWORD *)v6 = *(_QWORD *)v9;
      v13(&v6[v15], &v9[v15], v11);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
      v18 = objc_msgSend(v27, "cellForItemAtIndexPath:", isa);

      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
        v21 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v20 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v21 >= v20 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
        specialized Array._endMutation()(v14);
      }
      v9 += v25;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v23);
    return (_QWORD *)v28;
  }
  return result;
}

char *sub_1001BAA04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *result;
  void *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;

  v52 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v55 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - v7;
  __chkstk_darwin(v9);
  v46 = (char *)&v44 - v10;
  __chkstk_darwin(v11);
  v51 = (char *)&v44 - v12;
  __chkstk_darwin(v13);
  v58 = (char *)&v44 - v14;
  v15 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v45 = a1;
  if (v20)
  {
    v53 = v17;
    v44 = v8;
    v49 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v21 = (char *)(a1 + v49);
    v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    v48 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    v22 = *(_QWORD *)(v4 + 72);
    v23 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain(a1);
    v56 = (char *)_swiftEmptyArrayStorage;
    v57 = v23;
    v24 = v58;
    v59 = v4;
    v54 = v19;
    while (1)
    {
      v23(v19, v21, v3);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v25(v19, 0, 1, v3);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
      if (v26(v19, 1, v3) == 1)
        goto LABEL_28;
      v27 = v19;
      v28 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
      v29 = v28(v24, v27, v3);
      result = (char *)IndexPath.count.getter(v29);
      if (result != (char *)2)
        goto LABEL_17;
      v31 = *(void **)(v52 + v50);
      if (!v31)
      {
        __break(1u);
        return result;
      }
      if ((objc_msgSend(v31, "isGathering") & 1) != 0 || (*(_BYTE *)(v52 + v48) & 1) == 0)
        goto LABEL_19;
      if ((objc_msgSend(v31, "isGathering") & 1) != 0)
        break;
      LODWORD(v47) = *(unsigned __int8 *)(v52 + v48);
      v32 = v46;
      v33 = v57(v46, v58, v3);
      if ((_DWORD)v47 != 1)
        goto LABEL_14;
      LODWORD(v47) = IndexPath.item.getter(v33) == 0;
LABEL_15:
      v34 = *(void (**)(char *, uint64_t))(v4 + 8);
      v34(v32, v3);
      v35 = v44;
      v36 = v57(v44, v58, v3);
      if (!(_DWORD)v47)
      {
        v34(v35, v3);
LABEL_19:
        v38 = v53;
        v24 = v58;
        v57((char *)v53, v58, v3);
        v37 = 0;
        goto LABEL_20;
      }
      v47 = IndexPath.section.getter(v36);
      v34(v35, v3);
      if (v47)
        goto LABEL_19;
LABEL_17:
      v37 = 1;
      v24 = v58;
      v38 = v53;
LABEL_20:
      v25((char *)v38, v37, 1, v3);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v24, v3);
      if (v26((char *)v38, 1, v3) == 1)
      {
        sub_10000CB4C(v38, (uint64_t *)&unk_100642710);
        v4 = v59;
      }
      else
      {
        v39 = v51;
        v28(v51, (char *)v38, v3);
        v28(v55, v39, v3);
        if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
          v56 = (char *)sub_100153D0C(0, *((_QWORD *)v56 + 2) + 1, 1, (unint64_t)v56);
        v4 = v59;
        v41 = *((_QWORD *)v56 + 2);
        v40 = *((_QWORD *)v56 + 3);
        if (v41 >= v40 >> 1)
          v56 = (char *)sub_100153D0C(v40 > 1, v41 + 1, 1, (unint64_t)v56);
        v42 = v55;
        v43 = v56;
        *((_QWORD *)v56 + 2) = v41 + 1;
        v28(&v43[v49 + v41 * v22], v42, v3);
        v24 = v58;
      }
      v21 += v22;
      --v20;
      v19 = v54;
      v23 = v57;
      if (!v20)
        goto LABEL_27;
    }
    v32 = v46;
    v57(v46, v58, v3);
LABEL_14:
    LODWORD(v47) = 0;
    goto LABEL_15;
  }
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain(a1);
  v56 = (char *)_swiftEmptyArrayStorage;
LABEL_27:
  v25(v19, 1, 1, v3);
LABEL_28:
  swift_bridgeObjectRelease(v45);
  return v56;
}

_QWORD *sub_1001BAEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;

  v50 = a2;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v48 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v42 = (char *)&v39 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - v9;
  v11 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v11);
  v52 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v43 = v3;
  if (v16)
  {
    v47 = v10;
    v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v40 = a1;
    v41 = v17;
    v18 = a1 + v17;
    v19 = *(_QWORD *)(v4 + 72);
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain(a1);
    v51 = _swiftEmptyArrayStorage;
    v45 = v19;
    v46 = v15;
    do
    {
      v49(v15, v18, v3);
      v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v44(v15, 0, 1, v3);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
      if (v23(v15, 1, v3) == 1)
      {
        a1 = v40;
        goto LABEL_17;
      }
      v24 = v18;
      v25 = v16;
      v26 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v27 = v3;
      v28 = (uint64_t)v52;
      v29 = v4;
      v30 = (uint64_t)v47;
      v26(v47, v15, v27);
      v31 = v53;
      sub_1001A340C(v30, v50, v28);
      v53 = v31;
      if (v31)
      {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v27);
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease(v40);
        return v51;
      }
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v27);
      if (v23((char *)v28, 1, v27) == 1)
      {
        sub_10000CB4C((uint64_t)v52, (uint64_t *)&unk_100642710);
        v4 = v29;
        v20 = v45;
        v15 = v46;
        v3 = v27;
        v21 = v25;
        v22 = v24;
      }
      else
      {
        v32 = v42;
        v26(v42, v52, v27);
        v26(v48, v32, v27);
        if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
          v51 = (_QWORD *)sub_100153D0C(0, v51[2] + 1, 1, (unint64_t)v51);
        v4 = v29;
        v21 = v25;
        v34 = v51[2];
        v33 = v51[3];
        v15 = v46;
        v22 = v24;
        if (v34 >= v33 >> 1)
          v51 = (_QWORD *)sub_100153D0C(v33 > 1, v34 + 1, 1, (unint64_t)v51);
        v35 = v51;
        v51[2] = v34 + 1;
        v20 = v45;
        v36 = (char *)v35 + v41 + v34 * v45;
        v3 = v43;
        v26(v36, v48, v43);
      }
      v18 = v22 + v20;
      v16 = v21 - 1;
    }
    while (v16);
    a1 = v40;
    v44(v15, 1, 1, v43);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain(a1);
    v51 = _swiftEmptyArrayStorage;
    v37(v15, 1, 1, v43);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return v51;
}

_QWORD *sub_1001BB240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  char *v38;
  void *v39;
  void (*v40)(void);
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  char v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  void (*v88)(char *, uint64_t, __n128);
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void **v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, char *, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  char *v120;
  id v121;
  uint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  unint64_t v125;

  v110 = sub_10006922C((uint64_t *)&unk_10064EB70);
  __chkstk_darwin(v110);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD **)(v6 - 8);
  __chkstk_darwin(v6);
  v95 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v120 = (char *)&v93 - v10;
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v113 = (uint64_t)&v93 - v15;
  __chkstk_darwin(v16);
  v109 = (char *)&v93 - v17;
  __chkstk_darwin(v18);
  v108 = (uint64_t)&v93 - v19;
  __chkstk_darwin(v20);
  v112 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v22);
  v111 = (char *)&v93 - v23;
  __chkstk_darwin(v24);
  v119 = (uint64_t)&v93 - v25;
  v103 = sub_10006922C((uint64_t *)&unk_100644BC0);
  __chkstk_darwin(v103);
  v102 = (uint64_t *)((char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  v101 = (void **)((char *)&v93 - v29);
  result = _swiftEmptyArrayStorage;
  v125 = (unint64_t)_swiftEmptyArrayStorage;
  v100 = *(_QWORD *)(a1 + 16);
  if (v100)
  {
    v99 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v31 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    v98 = *(_QWORD *)(v28 + 72);
    v97 = (void (*)(void))v7[2];
    v94 = a1;
    swift_bridgeObjectRetain(a1);
    v32 = 0;
    v115 = v5;
    v124 = v7;
    v105 = v13;
    v96 = v31;
    while (1)
    {
      v107 = v32;
      v34 = (void **)(v99 + v98 * v32);
      v35 = v103;
      v36 = *(int *)(v103 + 48);
      v37 = v101;
      v38 = (char *)v34 + v36;
      v39 = *v34;
      *v101 = *v34;
      v106 = (char *)v37 + v36;
      v40 = v97;
      v97();
      v41 = *(int *)(v35 + 48);
      v42 = v102;
      v43 = (char *)v102 + v41;
      *v102 = v39;
      ((void (*)(char *, char *, uint64_t))v40)((char *)v42 + v41, v38, v6);
      v44 = v119;
      v114 = (void (*)(uint64_t, char *, uint64_t))v7[4];
      v114(v119, v43, v6);
      v118 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7[7];
      v118(v44, 0, 1, v6);
      if (!v31)
        break;
      v121 = v39;
      v45 = sub_10004FD50();
      v46 = v45;
      v47 = (uint64_t)v111;
      if ((unint64_t)v45 >> 62)
      {
        if (v45 < 0)
          v92 = v45;
        else
          v92 = v45 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v45);
        v48 = _CocoaArrayWrapper.endIndex.getter(v92);
      }
      else
      {
        v48 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v45);
      }
      v49 = DSConflictStrategy_ptr;
      if (v48)
      {
        v122 = v48;
        v123 = v46 & 0xC000000000000001;
        v50 = 4;
        v117 = v46;
        do
        {
          v51 = v50 - 4;
          if (v123)
          {
            v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(v50 - 4, v46);
            v53 = v50 - 3;
            if (__OFADD__(v51, 1))
              goto LABEL_52;
          }
          else
          {
            v52 = *(_QWORD *)(v46 + 8 * v50);
            swift_unknownObjectRetain(v52);
            v53 = v50 - 3;
            if (__OFADD__(v51, 1))
            {
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
          }
          v54 = objc_opt_self(v49[8]);
          v55 = swift_dynamicCastObjCClass(v52, v54);
          if (v55)
          {
            v56 = (void *)v55;
            swift_unknownObjectRetain(v52);
            v57 = objc_msgSend(v56, "fpItem");
            if (v57)
            {
              v58 = v57;
              v59 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
              v60 = DOCNode.isEqualTo(node:)(v121, v59);

              if ((v60 & 1) != 0)
              {
                swift_bridgeObjectRelease_n(v117, 2);
                swift_unknownObjectRelease(v52);
                goto LABEL_43;
              }
            }
            sub_1000271D4(v119, v47, &qword_100643470);
            v61 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v124[6];
            if (v61(v47, 1, v6) == 1)
            {
              swift_unknownObjectRelease(v52);
              sub_10000CB4C(v47, &qword_100643470);
LABEL_11:
              v46 = v117;
              goto LABEL_12;
            }
            v114((uint64_t)v120, (char *)v47, v6);
            v62 = objc_msgSend(v56, "fileURL");
            if (v62)
            {
              v63 = v62;
              v64 = (uint64_t)v109;
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v62);

              v65 = 0;
            }
            else
            {
              v65 = 1;
              v64 = (uint64_t)v109;
            }
            v118(v64, v65, 1, v6);
            v69 = v108;
            sub_100070EDC(v64, v108, &qword_100643470);
            v70 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v61)(v69, 1, v6);
            v116 = v53;
            if ((_DWORD)v70 == 1)
            {
              sub_10000CB4C(v69, &qword_100643470);
              v71 = 1;
              v72 = v112;
            }
            else
            {
              v72 = v112;
              URL.standardizedFileURL.getter(v70);
              ((void (*)(uint64_t, uint64_t))v124[1])(v69, v6);
              v71 = 0;
            }
            v73 = v118;
            v74 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v118)(v72, v71, 1, v6);
            v75 = v113;
            URL.standardizedFileURL.getter(v74);
            v73(v75, 0, 1, v6);
            v76 = v6;
            v77 = (uint64_t)v115;
            v78 = (uint64_t)&v115[*(int *)(v110 + 48)];
            sub_1000271D4(v72, (uint64_t)v115, &qword_100643470);
            sub_1000271D4(v75, v78, &qword_100643470);
            if (v61(v77, 1, v76) == 1)
            {
              swift_unknownObjectRelease(v52);
              sub_10000CB4C(v75, &qword_100643470);
              sub_10000CB4C(v72, &qword_100643470);
              ((void (*)(char *, uint64_t))v124[1])(v120, v76);
              v79 = v61(v78, 1, v76);
              v6 = v76;
              v53 = v116;
              if (v79 == 1)
              {
                sub_10000CB4C((uint64_t)v115, &qword_100643470);
                v46 = v117;
LABEL_42:
                swift_bridgeObjectRelease_n(v46, 2);
                goto LABEL_43;
              }
              goto LABEL_36;
            }
            v80 = (uint64_t)v105;
            sub_1000271D4(v77, (uint64_t)v105, &qword_100643470);
            v81 = v61(v78, 1, v76);
            v53 = v116;
            if (v81 == 1)
            {
              swift_unknownObjectRelease(v52);
              sub_10000CB4C(v113, &qword_100643470);
              sub_10000CB4C(v112, &qword_100643470);
              v82 = (void (*)(char *, uint64_t))v124[1];
              v82(v120, v76);
              v82((char *)v80, v76);
              v6 = v76;
LABEL_36:
              sub_10000CB4C((uint64_t)v115, (uint64_t *)&unk_10064EB70);
              v47 = (uint64_t)v111;
              v49 = DSConflictStrategy_ptr;
              goto LABEL_11;
            }
            v83 = v80;
            v84 = v95;
            v114((uint64_t)v95, (char *)v78, v76);
            v85 = sub_10005A360(&qword_1006418E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
            v86 = v83;
            v104 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v84, v76, v85);
            v87 = swift_unknownObjectRelease(v52);
            v88 = (void (*)(char *, uint64_t, __n128))v124[1];
            v88(v84, v76, v87);
            sub_10000CB4C(v113, &qword_100643470);
            sub_10000CB4C(v112, &qword_100643470);
            ((void (*)(char *, uint64_t))v88)(v120, v76);
            ((void (*)(uint64_t, uint64_t))v88)(v86, v76);
            sub_10000CB4C(v77, &qword_100643470);
            v6 = v76;
            v47 = (uint64_t)v111;
            v49 = DSConflictStrategy_ptr;
            v46 = v117;
            if ((v104 & 1) != 0)
              goto LABEL_42;
          }
          else
          {
            v66 = objc_opt_self(FPItem);
            if (!swift_dynamicCastObjCClass(v52, v66))
              goto LABEL_54;
            v67 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
            swift_unknownObjectRetain(v52);
            v68 = DOCNode.isEqualTo(node:)(v121, v67);
            swift_unknownObjectRelease(v52);
            if ((v68 & 1) != 0)
              goto LABEL_42;
          }
LABEL_12:
          swift_unknownObjectRelease(v52);
          ++v50;
        }
        while (v53 != v122);
      }
      swift_bridgeObjectRelease_n(v46, 2);
      v52 = 0;
LABEL_43:

      sub_10000CB4C(v119, &qword_100643470);
      v7 = v124;
      v89 = ((uint64_t (*)(char *, uint64_t))v124[1])(v106, v6);
      v31 = v96;
      if (v52)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
        v91 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v90 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v91 >= v90 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
        v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v52);
        specialized Array._endMutation()(v33);
      }
      v32 = v107 + 1;
      if (v107 + 1 == v100)
      {
        swift_bridgeObjectRelease(v94);
        return (_QWORD *)v125;
      }
    }
LABEL_53:
    __break(1u);
LABEL_54:
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x8000000100515C00, "Files/DOCItemCollectionViewController.swift", 43, 2, 1023, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BBC3C(uint64_t a1, void (*a2)(__int128 *, uint64_t, __n128))
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __n128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  void (*v32)(__int128 *, uint64_t, __n128);

  v32 = a2;
  v26 = sub_10006922C(&qword_100646BE8);
  __chkstk_darwin(v26);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v25 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25)
      return swift_release(a1);
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v25)
        return swift_release(a1);
      v21 = *(_QWORD *)(v24 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v25)
          return swift_release(a1);
        v21 = *(_QWORD *)(v24 + 8 * v10);
        if (!v21)
        {
          v10 = v20 + 3;
          if (v20 + 3 >= v25)
            return swift_release(a1);
          v21 = *(_QWORD *)(v24 + 8 * v10);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v21 - 1) & v21;
    v12 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(a1 + 48) + 40 * v12;
    v29 = *(_QWORD *)(v14 + 32);
    v15 = *(_OWORD *)(v14 + 16);
    v27 = *(_OWORD *)v14;
    v28 = v15;
    v30 = v27;
    v31 = v15;
    v16 = v13 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) - 8) + 72) * v12;
    v17 = (uint64_t)&v4[*(int *)(v26 + 48)];
    sub_10007C6DC(v16, v17, type metadata accessor for ScrollPositionInfo.ItemOffset);
    v18 = v28;
    *(_OWORD *)v4 = v27;
    *((_OWORD *)v4 + 1) = v18;
    *((_QWORD *)v4 + 4) = v29;
    sub_1001D0760((uint64_t)&v30);
    sub_1001D0760((uint64_t)&v31);
    v19 = swift_retain();
    v32(&v27, v17, v19);
    result = sub_10000CB4C((uint64_t)v4, &qword_100646BE8);
  }
  v22 = v20 + 4;
  if (v22 >= v25)
    return swift_release(a1);
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v25)
      return swift_release(a1);
    v21 = *(_QWORD *)(v24 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001BBEB8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _QWORD *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  char *v17;
  void *v18;
  char v19[24];
  _OWORD v20[5];

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView) || (result & 1) == 0)
    return *(_QWORD *)(v2 + v3);
  v4 = *(_BYTE **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v4)
  {
    v5 = &v4[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    if ((v4[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) != 0)
      v6 = *(void **)(*v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    else
      v6 = (void *)v5[1];
    swift_unknownObjectRetain(v6);
    v7 = *(_OWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 48);
    v20[2] = *(_OWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 32);
    v20[3] = v7;
    v20[4] = *(_OWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 64);
    v8 = *(_OWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 16);
    v20[0] = *(_OWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
    v20[1] = v8;
    v9 = v4;
    sub_100028DA4((uint64_t)v20);
    v10 = sub_1000AFCA4(v6, v9, v20);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
      swift_beginAccess(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v19, 0, 0);
      v13 = *v12;
      v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
      *(_QWORD *)&v11[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = v13;
      if (v14 != v13)
      {
        if (qword_100640DD8 != -1)
          swift_once(&qword_100640DD8, sub_1000AF8E4);
        v15 = *(double *)&xmmword_100645A80;
        if (!v13)
          v15 = 0.0;
        objc_msgSend(v11, "setDirectionalLayoutMargins:", v15, *((double *)&xmmword_100645A80 + 1), *(double *)&qword_100645A90, *(double *)&qword_100645A98);
        sub_100015074();
        sub_1000AFE14();
      }
      v16 = &v11[OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate];
      *((_QWORD *)v16 + 1) = &off_1005CC288;
      swift_unknownObjectWeakAssign(v16, v2);
      objc_msgSend(v11, "setAccessibilityIdentifier:", DOCItemCollectionViewFooterViewIdentifier);
      v17 = &v11[OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate];
      *((_QWORD *)v17 + 1) = &off_1005D9BA8;
      swift_unknownObjectWeakAssign(v17, v2);
      v18 = *(void **)(v2 + v3);
      *(_QWORD *)(v2 + v3) = v11;

    }
    return *(_QWORD *)(v2 + v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001BC0B0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  v9 = v7 == a1 && v8 == a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0) & 1) != 0)
    return 0;
  v11 = 0;
  v12 = a3 + 10;
  v13 = 1;
  while (1)
  {
    if (v3 == v13)
      return 0;
    ++v11;
    v14 = *(v12 - 1);
    v15 = *v12;
    if (v14 == a1 && v15 == a2)
      break;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
    result = v13++;
    v12 += 5;
    if ((v17 & 1) != 0)
      return result;
  }
  return v11;
}

uint64_t sub_1001BC194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_retain(a5);
  }
  return result;
}

uint64_t sub_1001BC1D0()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001BC204()
{
  void **v0;

  sub_10017DAA8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001BC210()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BC220()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_1001BC24C(uint64_t a1)
{
  uint64_t v1;

  sub_10017DD18(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1001BC258()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1001BC284()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  return objc_msgSend(v1, "removeFromSuperview");
}

BOOL sub_1001BC2BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[104];
  uint64_t v14;

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v4, v12, 0, 0);
  if (*v4)
    return 0;
  sub_100064B54();
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
  if (!v6)
    return 0;
  swift_retain();
  sub_10009DED4((uint64_t)v13);
  swift_release(v6);
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView))
  {
    sub_1001D0668((uint64_t)v13);
    return 0;
  }
  swift_beginAccess(a1 + 16, v11, 0, 0);
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v10 = v7;
    else
      v10 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1001D0668((uint64_t)v13);
  return v14 < v8;
}

_QWORD *sub_1001BC3D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  char **v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  _BOOL8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void *v31;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      v5 = &selRef_viewOptionsRoot;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_9:
        v7 = v6;
        v8 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_15;
        v9 = objc_msgSend(a2, v5[471]);
        objc_msgSend(v9, "layoutFrame");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;

        v33.origin.x = v11;
        v33.origin.y = v13;
        v33.size.width = v15;
        v33.size.height = v17;
        v34 = CGRectIntegral(v33);
        x = v34.origin.x;
        y = v34.origin.y;
        width = v34.size.width;
        height = v34.size.height;
        objc_msgSend(v7, "frame");
        v36.origin.x = v22;
        v36.origin.y = v23;
        v36.size.width = v24;
        v36.size.height = v25;
        v35.origin.x = x;
        v35.origin.y = y;
        v35.size.width = width;
        v35.size.height = height;
        v26 = CGRectContainsRect(v35, v36);
        if (v26)
        {
          v31 = v7;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
          v27 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
          v5 = &selRef_viewOptionsRoot;
          v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v31);
          specialized ContiguousArray._endMutation()(v28);
        }
        else
        {

        }
        ++v4;
        if (v8 == v3)
          return _swiftEmptyArrayStorage;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v30 = a1;
      else
        v30 = a1 & 0xFFFFFFFFFFFFFF8;
      v3 = _CocoaArrayWrapper.endIndex.getter(v30);
      if (!v3)
        return _swiftEmptyArrayStorage;
    }
    v6 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1001BC5D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  unint64_t i;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  unint64_t j;
  unint64_t v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = a2;
  if (a2 >> 62)
    goto LABEL_42;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v4)
    goto LABEL_46;
LABEL_3:
  v50 = a3 + 56;
  v47 = v3;
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      v10 = v8;
      v48 = v5;
      v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a3 + 40));
      v12 = -1 << *(_BYTE *)(a3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = 1 << v13;
      if (((1 << v13) & *(_QWORD *)(v50 + 8 * (v13 >> 6))) == 0)
        goto LABEL_5;
      sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
      v16 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v13);
      v17 = static NSObject.== infix(_:_:)(v16, v10);

      if ((v17 & 1) == 0)
        break;
      swift_unknownObjectRelease(v10);
LABEL_16:
      v5 = v48;
      v3 = v47;
      v23 = *(_QWORD *)(a1 + 8 * v14);
      *(_QWORD *)(a1 + 8 * v14) = v15 | v23;
      if ((v15 & v23) != 0)
      {
        v7 = v4;
      }
      else
      {
        v5 = v48 + 1;
        v7 = v4;
        if (__OFADD__(v48, 1))
          goto LABEL_41;
        if (v5 == *(_QWORD *)(a3 + 16))
          goto LABEL_46;
      }
LABEL_6:
      if (v6 == v7)
        goto LABEL_46;
    }
    v18 = ~v12;
    for (i = v13 + 1; ; i = v20 + 1)
    {
      v20 = i & v18;
      if (((*(_QWORD *)(v50 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0)
        break;
      v21 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v20);
      v22 = static NSObject.== infix(_:_:)(v21, v10);

      if ((v22 & 1) != 0)
      {
        swift_unknownObjectRelease(v10);
        v14 = v20 >> 6;
        v15 = 1 << v20;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease(v10);
    v3 = v47;
    v7 = v4;
    v5 = v48;
    goto LABEL_6;
  }
  v24 = 0;
  v25 = 0;
  v44 = v3 + 32;
  v45 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v25 == v45)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      if (v3 < 0)
        v43 = v3;
      else
        v43 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v4 = _CocoaArrayWrapper.endIndex.getter(v43);
      if (!v4)
        goto LABEL_46;
      goto LABEL_3;
    }
    v49 = v24;
    v27 = *(_QWORD *)(a3 + 40);
    v28 = *(id *)(v44 + 8 * v25);
    v29 = v27;
    v3 = (uint64_t)v28;
    v30 = NSObject._rawHashValue(seed:)(v29);
    v31 = -1 << *(_BYTE *)(a3 + 32);
    v32 = v30 & ~v31;
    v33 = v32 >> 6;
    v34 = 1 << v32;
    if (((1 << v32) & *(_QWORD *)(v50 + 8 * (v32 >> 6))) != 0)
      break;
LABEL_22:

    v26 = v4;
    v24 = v49;
LABEL_23:
    if (++v25 == v26)
    {
      v3 = v47;
LABEL_46:
      swift_bridgeObjectRelease(v3);
      return;
    }
  }
  v3 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
  v35 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v32);
  v36 = static NSObject.== infix(_:_:)(v35, v28);

  if ((v36 & 1) != 0)
  {

  }
  else
  {
    v37 = ~v31;
    for (j = v32 + 1; ; j = v39 + 1)
    {
      v39 = j & v37;
      if (((*(_QWORD *)(v50 + (((j & v37) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v37)) & 1) == 0)
        goto LABEL_22;
      v40 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v39);
      v41 = static NSObject.== infix(_:_:)(v40, v28);

      if ((v41 & 1) != 0)
        break;
    }

    v33 = v39 >> 6;
    v34 = 1 << v39;
  }
  v24 = v49;
  v42 = *(_QWORD *)(a1 + 8 * v33);
  *(_QWORD *)(a1 + 8 * v33) = v34 | v42;
  if ((v34 & v42) != 0)
  {
    v26 = v4;
    goto LABEL_23;
  }
  v24 = v49 + 1;
  v26 = v4;
  if (!__OFADD__(v49, 1))
  {
    if (v24 == *(_QWORD *)(a3 + 16))
    {
      v3 = v47;
      goto LABEL_46;
    }
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1001BC9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  __n128 v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, unint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  _QWORD *v48;

  v41 = a2;
  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v42 = (char *)&v34 - v14;
  result = __chkstk_darwin(v13);
  v46 = (char *)&v34 - v16;
  v48 = _swiftEmptyArrayStorage;
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v17 = 0;
    v35 = v8;
    v36 = a1;
    while (v17 < *(_QWORD *)(a1 + 16))
    {
      v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v21 = *(_QWORD *)(v10 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v44 = v21;
      v43(v8, a1 + v20 + v21 * v17, v9);
      v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v45(v8, 0, 1, v9);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (v22(v8, 1, v9) == 1)
        goto LABEL_22;
      v40 = v17;
      v47 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v47(v46, v8, v9);
      v23 = *(_QWORD *)(v41 + 16);
      v39 = v20;
      if (v23)
      {
        v24 = v41 + v20;
        swift_bridgeObjectRetain(v41);
        while (1)
        {
          v43(v6, v24, v9);
          v45(v6, 0, 1, v9);
          if (v22(v6, 1, v9) == 1)
            break;
          v25 = v42;
          v47(v42, v6, v9);
          v26 = sub_10005A360((unint64_t *)&qword_100649150, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
          v27 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v46, v9, v26);
          v28 = v10;
          v29 = *(void (**)(char *, uint64_t))(v10 + 8);
          v29(v25, v9);
          if ((v27 & 1) != 0)
          {
            v18 = swift_bridgeObjectRelease(v41);
            result = ((uint64_t (*)(char *, uint64_t, __n128))v29)(v46, v9, v18);
            v10 = v28;
            v19 = v40;
            goto LABEL_4;
          }
          v24 += v44;
          --v23;
          v10 = v28;
          if (!v23)
            goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v41);
LABEL_14:
        v45(v6, 1, 1, v9);
      }
      v30 = swift_bridgeObjectRelease(v41);
      ((void (*)(char *, char *, uint64_t, __n128))v47)(v38, v46, v9, v30);
      v31 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
      {
        sub_100154FD0(0, v31[2] + 1, 1);
        v31 = v48;
      }
      v19 = v40;
      v33 = v31[2];
      v32 = v31[3];
      if (v33 >= v32 >> 1)
      {
        sub_100154FD0(v32 > 1, v33 + 1, 1);
        v31 = v48;
      }
      v31[2] = v33 + 1;
      result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v31 + v39 + v33 * v44, v38, v9);
      v48 = v31;
LABEL_4:
      v17 = v19 + 1;
      a1 = v36;
      v8 = v35;
      if (v17 == v37)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_21:
    v45(v8, 1, 1, v9);
LABEL_22:
    swift_bridgeObjectRelease(a1);
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_100642710);
    return (uint64_t)v48;
  }
  return result;
}

void sub_1001BCD90(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  Class isa;
  id v24;
  id v25;
  void *v26;
  id v27;
  Class v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD aBlock[5];
  uint64_t v58;

  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  __chkstk_darwin(v13);
  v53 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v15 - 8);
  v52 = v15;
  __chkstk_darwin(v15);
  v50 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTime(0);
  v47 = *(_QWORD *)(v49 - 8);
  v17 = __chkstk_darwin(v49);
  v46 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v48 = (char *)&v45 - v19;
  v20 = (_QWORD *)swift_allocObject(&unk_1005CE7D0, 56, 7);
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a7;
  v21 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v22 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v22)
  {
    v25 = a3;
    swift_unknownObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    sub_1001AD698((uint64_t)v25, a4, a5, a6, a7);
    swift_release(v20);
    return;
  }
  v45 = a3;
  swift_unknownObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  v56 = v22;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v56, "cellForItemAtIndexPath:", isa);

  if (v24)
  {
    objc_msgSend(v24, "frame");
    if ((objc_msgSend(v56, "_isRectFullyVisible:") & 1) != 0)
    {
      sub_1001AD698((uint64_t)v45, a4, a5, a6, a7);
      swift_release(v20);

LABEL_11:
      return;
    }

  }
  if ((uint64_t)objc_msgSend(v56, "numberOfSections") < 1)
  {
    sub_1001AD698((uint64_t)v45, a4, a5, a6, a7);
    swift_release(v20);
    goto LABEL_11;
  }
  objc_msgSend(a2, "loadViewIfNeeded");
  v26 = *(void **)&a2[v21];
  if (v26)
  {
    v27 = v26;
    v28 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "scrollToItemAtIndexPath:atScrollPosition:animated:", v28, 0, 1);

    v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v30 = (void *)static OS_dispatch_queue.main.getter(v29);
    v31 = v46;
    static DispatchTime.now()(v30);
    v32 = v48;
    + infix(_:_:)(v31, 0.3);
    v47 = *(_QWORD *)(v47 + 8);
    v33 = v49;
    ((void (*)(char *, uint64_t))v47)(v31, v49);
    v34 = swift_allocObject(&unk_1005CE7F8, 32, 7);
    *(_QWORD *)(v34 + 16) = sub_1001D13D0;
    *(_QWORD *)(v34 + 24) = v20;
    aBlock[4] = sub_10010DF60;
    v58 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CE810;
    v35 = _Block_copy(aBlock);
    v36 = v58;
    swift_retain();
    v37 = swift_release(v36);
    v38 = v50;
    static DispatchQoS.unspecified.getter(v37);
    aBlock[0] = _swiftEmptyArrayStorage;
    v39 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v40 = sub_10006922C((uint64_t *)&unk_100647540);
    v41 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v42 = v53;
    v43 = v40;
    v44 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v43, v41, v55, v39);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v32, v38, v42, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v44);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
    ((void (*)(char *, uint64_t))v47)(v32, v33);
    swift_release(v20);
  }
  else
  {
    swift_bridgeObjectRelease(a6);
    swift_unknownObjectRelease(a4);

    __break(1u);
  }
}

_QWORD *sub_1001BD284(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  BOOL v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;

  v3 = a1;
  v35 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_36;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v8 = v3 + 32;
      v29 = v3;
      v30 = a2 + 7;
      v32 = v3 & 0xC000000000000001;
      v33 = a2;
      v31 = v3 & 0xFFFFFFFFFFFFFF8;
      v34 = v4;
      while (1)
      {
        if (v6)
        {
          v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v29);
          v10 = __OFADD__(v5++, 1);
          if (v10)
          {
LABEL_32:
            __break(1u);
            return v35;
          }
        }
        else
        {
          if (v5 >= *(_QWORD *)(v7 + 16))
          {
            __break(1u);
            goto LABEL_35;
          }
          v9 = *(void **)(v8 + 8 * v5);
          swift_unknownObjectRetain(v9);
          v10 = __OFADD__(v5++, 1);
          if (v10)
            goto LABEL_32;
        }
        v11 = objc_msgSend(v9, "fpfs_fpItem");
        if (v11)
        {
          v3 = (uint64_t)v11;
          v12 = objc_msgSend(v11, "collaborationIdentifier");

          if (v12)
            break;
        }
        swift_unknownObjectRelease(v9);
LABEL_5:
        if (v5 == v4)
          return v35;
      }
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v3 = v14;

      v15 = (_QWORD *)a2[2];
      if (!v15)
      {
        swift_unknownObjectRelease(v9);
        swift_bridgeObjectRelease(v3);
        v4 = v34;
        goto LABEL_5;
      }
      v16 = a2[4];
      v17 = a2[5];
      v18 = v16 == v13 && v17 == v3;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v13, v3, 0) & 1) != 0)
        break;
      if (v15 == (_QWORD *)1)
      {
LABEL_29:
        swift_unknownObjectRelease(v9);
        swift_bridgeObjectRelease(v3);
        goto LABEL_18;
      }
      v22 = v30;
      v23 = 1;
      while (1)
      {
        a2 = (_QWORD *)(v23 + 1);
        if (__OFADD__(v23, 1))
          break;
        v24 = *(v22 - 1);
        v25 = *v22;
        v26 = v24 == v13 && v25 == v3;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v13, v3, 0) & 1) != 0)
          goto LABEL_17;
        v22 += 2;
        ++v23;
        if (a2 == v15)
          goto LABEL_29;
      }
LABEL_35:
      __break(1u);
LABEL_36:
      if (v3 < 0)
        v28 = v3;
      else
        v28 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v28);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
LABEL_17:
    v19 = swift_bridgeObjectRelease(v3);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
    v20 = v35[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
    v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v9);
    v3 = (uint64_t)&v35;
    specialized ContiguousArray._endMutation()(v21);
LABEL_18:
    v6 = v32;
    a2 = v33;
    v7 = v31;
    v4 = v34;
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1001BD4E8(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  Class v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v14 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      v7 = *i;
      v12 = v7;
      swift_bridgeObjectRetain(v7);
      sub_1001A3A18(&v12, a2, &v13);
      swift_bridgeObjectRelease(v7);
      if (v2)
        break;
      v9 = v13;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v10 = v14[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
      specialized ContiguousArray._endMutation()(v11);
      if (!--v4)
        return;
    }
    swift_release(v14);
  }
}

void *sub_1001BD5E0(void *a1, double a2, double a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  double v8;
  CGAffineTransform v10;

  if (objc_msgSend(a1, "isFolder"))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100646B00, UIBezierPath_ptr);
    v5 = (void *)static UIBezierPath.folder.getter();
  }
  else if (a3 <= 100.0)
  {
    v6 = sub_10004F2F0(0, (unint64_t *)&qword_100646B00, UIBezierPath_ptr);
    if (a3 >= 50.0)
      v5 = (void *)static UIBezierPath.document_84.getter(v6);
    else
      v5 = (void *)static UIBezierPath.document_44.getter(v6);
  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_100646B00, UIBezierPath_ptr);
    v5 = (void *)static UIBezierPath.document.getter();
  }
  v7 = v5;
  objc_msgSend(v5, "bounds");
  CGAffineTransformMakeScale(&v10, a2 / v8, a2 / v8);
  objc_msgSend(v7, "applyTransform:", &v10);
  return v7;
}

uint64_t sub_1001BD6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v6 = v5 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      v9 = __OFADD__(v6, 1);
      v10 = v5 - 3;
      if (v9)
        goto LABEL_14;
LABEL_9:
      ObjectType = swift_getObjectType(v8, v7);
      if ((DOCNode.isEqualTo(node:)(a2, ObjectType) & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v8;
      }
      swift_unknownObjectRelease(v8);
      ++v5;
      if (v10 == v4)
        goto LABEL_11;
    }
    v8 = *(_QWORD *)(a1 + 8 * v5);
    swift_unknownObjectRetain(v8);
    v9 = __OFADD__(v6, 1);
    v10 = v5 - 3;
    if (!v9)
      goto LABEL_9;
LABEL_14:
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_11:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void *sub_1001BD7F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v23 = v4;
    v24 = v7;
    v25 = v7 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v9 = v4 - 4;
      if (!v25)
        break;
      v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v7);
      v11 = v4 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_20;
LABEL_9:
      v12 = v8;
      v13 = v10;
      v14 = a3;
      v15 = objc_msgSend(v10, "filename", v23);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      a3 = v14;
      v19 = v16 == a2 && v18 == v14;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
LABEL_19:
        swift_bridgeObjectRelease(a3);
        return v13;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a2, v14, 0);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
      {
        a3 = v24;
        goto LABEL_19;
      }
      swift_unknownObjectRelease(v13);
      ++v4;
      v8 = v12;
      v19 = v11 == v12;
      v7 = v24;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
        return 0;
      }
    }
    v10 = (void *)swift_unknownObjectRetain(*(_QWORD *)(v7 + 8 * v4));
    v11 = v4 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_9;
LABEL_20:
    __break(1u);
LABEL_21:
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  swift_bridgeObjectRelease(v7);
  return 0;
}

uint64_t sub_1001BD99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v9;
  _BYTE v10[120];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v4, &v9, 0, 0);
  if (!*v4)
  {
    sub_100064B54();
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
      if (v6)
      {
        swift_retain();
        sub_10009DED4((uint64_t)v10);
        swift_release(v6);
        if ((*(_BYTE *)(a1 + 24) & 1) != 0)
        {
          sub_1001D0668((uint64_t)v10);
        }
        else
        {
          v7 = sub_1001BC2BC(a1);
          sub_1001D0668((uint64_t)v10);
          if (v7)
            return v10[32] & 1;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1001BDA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;

  v8 = a4 + 16;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16);
  *(_QWORD *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = 0;
  v9 = swift_unknownObjectWeakInit(a4 + 72);
  *(_QWORD *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(_BYTE *)(a4 + 136) = 1;
  *(_QWORD *)(a4 + 144) = 0;
  *(_QWORD *)(a4 + 152) = 0;
  *(_QWORD *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign(v9, a2);
  *(_QWORD *)(a4 + 24) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign(v8, a1);
  v10 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain(a3);
  v11 = objc_msgSend(v10, "initWithTarget:action:", a4, "didTapOverlay");
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 72, v13);
  swift_unknownObjectWeakAssign(&v12[OBJC_IVAR____TtC5Files26DOCInlineRenameOverlayView_itemCell], Strong);

  objc_msgSend(v12, "addGestureRecognizer:", v11);
  v15 = *(void **)(a4 + 32);
  *(_QWORD *)(a4 + 32) = v12;

  v16 = sub_10038C784();
  if (qword_1006410A0 != -1)
    swift_once(&qword_1006410A0, sub_100390884);
  v17 = static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
  v18 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue", (unsigned __int128)0, (unsigned __int128)0);
  (*(void (**)(uint64_t, __int128 *, id, void (*)(uint64_t), _QWORD))(*(_QWORD *)v16 + 144))(v17, &v22, v18, sub_10038C844, 0);
  v20 = v19;
  swift_release(v16);

  swift_bridgeObjectRelease(v20);
  sub_10000CB4C((uint64_t)&v22, &qword_100642730);
  return a4;
}

uint64_t sub_1001BDCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = swift_unknownObjectRetain(a1);
    sub_1001BDF10(v11, a2, a3);
    return swift_unknownObjectRelease(a1);
  }
  else
  {
    v13 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    v14 = swift_unknownObjectRetain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(22, -1);
      v18 = swift_slowAlloc(64, -1);
      v24 = v18;
      *(_DWORD *)v17 = 136315394;
      v23 = sub_1000544FC(0xD00000000000001ELL, 0x80000001005100C0, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      *(_WORD *)(v17 + 12) = 2080;
      v23 = a3;
      swift_unknownObjectRetain(a3);
      v19 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v20 = String.init<A>(describing:)(&v23, v19);
      v22 = v21;
      v23 = sub_1000544FC(v20, v21, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      swift_unknownObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s did not find matching node for node: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a3, 2);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_1001BDF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
  v13 = *(_QWORD *)(v12 + 16);
  v44 = v10;
  if (v13)
  {
    v37 = a2;
    v38 = a3;
    v39 = v7;
    v40 = v6;
    v14 = *(_QWORD *)(v11 + 8);
    v15 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain_n(v12, 2);
    v42 = v14;
    swift_bridgeObjectRetain(v14);
    v41 = v15;
    swift_bridgeObjectRetain(v15);
    v43 = v12;
    v16 = (uint64_t *)(v12 + 64);
    while (1)
    {
      v17 = *(v16 - 4);
      v18 = *(v16 - 3);
      v19 = *(v16 - 2);
      v20 = *(v16 - 1);
      v21 = *v16;
      swift_beginAccess(*v16 + 16, v47, 0, 0);
      v22 = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v20);
      swift_retain();
      swift_bridgeObjectRetain(v22);
      v23 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v24 = Array<A>.contains(node:)(a1, v22, v23);
      swift_bridgeObjectRelease(v22);
      if ((v24 & 1) != 0)
        break;
      swift_release(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v18);
      v16 += 5;
      if (!--v13)
      {
        v48 = v17;
        v49 = v18;
        v50 = v19;
        v51 = v20;
        v52 = v21;
        swift_bridgeObjectRelease(v41);
        swift_bridgeObjectRelease(v42);
        v8 = swift_bridgeObjectRelease_n(v43, 2);
        v7 = v39;
        v6 = v40;
        v10 = v44;
        a3 = v38;
        goto LABEL_6;
      }
    }
    v48 = v17;
    v49 = v18;
    v50 = v19;
    v51 = v20;
    v52 = v21;
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease_n(v43, 2);
    if ((*(_BYTE *)(v21 + 24) & 1) == 0)
      sub_10017CEE0(&v48, 0);
    swift_release(v21);
    swift_bridgeObjectRelease(v20);
    return swift_bridgeObjectRelease(v18);
  }
  else
  {
LABEL_6:
    v25 = Logger.UI.unsafeMutableAddressor(v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v25, v6);
    v26 = swift_unknownObjectRetain_n(a3, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(22, -1);
      v30 = swift_slowAlloc(64, -1);
      v46 = v30;
      *(_DWORD *)v29 = 136315394;
      v45 = sub_1000544FC(0xD00000000000001CLL, 0x80000001005100E0, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      *(_WORD *)(v29 + 12) = 2080;
      v45 = a3;
      swift_unknownObjectRetain(a3);
      v31 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v32 = String.init<A>(describing:)(&v45, v31);
      v33 = a3;
      v35 = v34;
      v45 = sub_1000544FC(v32, v34, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      swift_unknownObjectRelease_n(v33, 2);
      swift_bridgeObjectRelease(v35);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s can not find section containing node: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v44, v6);
    }
    else
    {

      swift_unknownObjectRelease_n(a3, 2);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
}

unint64_t sub_1001BE2BC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005BF4E8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_1001BE304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }
    v7 = static UUID.== infix(_:_:)(v6 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, a2);
    swift_release(v6);
    if ((v7 & 1) != 0)
      return v5;
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4)
      return 0;
  }
}

void sub_1001BE41C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;

  objc_msgSend(v0, "docSetNeedsUpdateContentUnavailableConfiguration");
  v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v1)
  {
    if (objc_msgSend(v1, "isGathering"))
    {
      v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 0;
      sub_100189BB8();
    }
    else
    {
      sub_100007214();
      v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v2)
      {
        v3 = v2;
        sub_10003181C();

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001BE4C4()
{
  _BYTE *v0;
  _BYTE *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf] = 0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isActiveDragSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView] = 0;
  v3 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher];
  v4 = type metadata accessor for FamilyFetcher();
  v5 = swift_allocObject(v4, 16, 7);
  v3[3] = v4;
  v3[4] = (uint64_t)&_s14descr1005DD249OMn.Parent + 3;
  *v3 = v5;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDropSession] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;
  v6 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  *v6 = 0;
  v6[1] = 0;
  v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier;
  *(_QWORD *)&v1[v7] = sub_10008B324((uint64_t)_swiftEmptyArrayStorage);
  v8 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortOptionsAccessibilityModelView;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] = 2;
  v10 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_dropTargetHighlightedCell] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload] = 2;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache] = &_swiftEmptyDictionarySingleton;
  v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus] = 0;
  v14 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  *v14 = 0xD000000000000020;
  v14[1] = 0x800000010050BDD0;
  v15 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  *v15 = 0xD000000000000020;
  v15[1] = 0x800000010050BE00;
  v16 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  *v16 = 0xD000000000000029;
  v16[1] = 0x800000010050BE30;
  v17 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionCreateCellIdentifier];
  *v17 = 0xD000000000000022;
  v17[1] = 0x800000010050BE60;
  v18 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionFooterIdentifier];
  *v18 = 0xD00000000000002BLL;
  v18[1] = 0x800000010050BE90;
  v19 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyFooterIdentifier];
  *v19 = 0xD000000000000030;
  v19[1] = 0x800000010050BEC0;
  v20 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionHeaderIdentifier];
  *v20 = 0xD00000000000002BLL;
  v20[1] = 0x800000010050BF00;
  v21 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGroupedSectionHeaderIdentifier];
  *v21 = 0xD00000000000002CLL;
  v21[1] = 0x800000010050BF30;
  v22 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyHeaderIdentifier];
  *v22 = 0xD000000000000030;
  v22[1] = 0x800000010050BF60;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState] = 4;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isUIPStackedSearchActive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode] = 0;
  v23 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  *v23 = 0;
  v23[1] = 0;
  v24 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility];
  *v24 = 0;
  v24[1] = 0;
  v25 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool;
  v26 = type metadata accessor for DOCItemCollectionCellContentPool();
  v27 = (_QWORD *)swift_allocObject(v26, 40, 7);
  v27[2] = 0;
  v27[3] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v27[4] = sub_10008AD3C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v1[v25] = v27;
  v28 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool;
  v29 = type metadata accessor for DOCThumbnailLoadingPool();
  swift_allocObject(v29, 40, 7);
  *(_QWORD *)&v1[v28] = sub_100019050();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 1;
  v30 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  *v30 = 2;
  v30[1] = 0;
  v30[2] = 0;
  v30[3] = 0;
  v31 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  v32 = objc_msgSend((id)objc_opt_self(DOCPostLaunchBuffer), "shared");
  LOBYTE(v28) = objc_msgSend(v32, "locked");

  v1[v31] = v28;
  v12(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], 1, 1, v11);
  v33 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  v34 = sub_10008AC14((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)v33 = _swiftEmptyArrayStorage;
  *((_QWORD *)v33 + 1) = _swiftEmptyArrayStorage;
  *((_QWORD *)v33 + 2) = v34;
  *((_WORD *)v33 + 12) = 8;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior] = 7;
  v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher;
  if (qword_1006410A8 != -1)
    swift_once(&qword_1006410A8, sub_1000AA544);
  *(_QWORD *)&v1[v35] = sub_100392098();
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringObservation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens] = _swiftEmptyArrayStorage;
  v12(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], 1, 1, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus] = 0;
  v36 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController;
  *(_QWORD *)&v1[v36] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCTypeToFocusController(0)), "init");
  v37 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration];
  v38 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout] = 0;
  v39 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics];
  *v39 = 0;
  *(_OWORD *)(v39 + 8) = xmmword_1004D4CF0;
  *(_OWORD *)(v39 + 24) = xmmword_1004D4D00;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView] = 1;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits] = 0;
  v40 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  *(_OWORD *)v40 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  *((_QWORD *)v40 + 4) = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsAlert]);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading] = 0;
  v41 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  *((_QWORD *)v41 + 1) = 0;
  *((_QWORD *)v41 + 2) = 0;
  *(_QWORD *)v41 = 0;
  v41[24] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = 2;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastPreviewedFPItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = 0;
  v42 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  *(_OWORD *)v42 = 0u;
  *((_OWORD *)v42 + 1) = 0u;
  *((_QWORD *)v42 + 4) = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
  v43 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  *(_OWORD *)v43 = 0u;
  *((_OWORD *)v43 + 1) = 0u;
  *((_QWORD *)v43 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController] = 0;
  v44 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName];
  *v44 = 0;
  v44[1] = 0;
  v45 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  *(_QWORD *)v45 = 0;
  *((_QWORD *)v45 + 1) = 0;
  v45[16] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  v46 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(_QWORD *)v46 = 0;
  v46[8] = 0;
  v47 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  v48 = type metadata accessor for ScrollPositionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 1, 1, v48);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  v49 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets];
  *(_OWORD *)v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  v49[32] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 0;
  v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage;
  v51 = _s10BBIStorageCMa();
  swift_allocObject(v51, 208, 7);
  sub_1002CF03C();
  *(_QWORD *)&v1[v50] = v52;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCItemCollectionViewController.swift", 43, 2, 533, 0);
  __break(1u);
}

void sub_1001BEF44(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  void **v7;
  double *v8;
  double v9;
  void *v10;
  double *v11;
  double v12;
  id v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class v29;
  id v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  Class isa;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  Class v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[8];
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71[8];

  v2 = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
  if (!v3)
    goto LABEL_17;
  swift_retain();
  sub_10009DED4((uint64_t)v66);
  swift_release(v3);
  v5 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController) + 16) <= (int64_t)a1)
  {
    sub_1001D0668((uint64_t)v66);
LABEL_17:
    v34 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v35 = objc_msgSend(v34, "fractionalWidthDimension:", 0.2);
    v36 = objc_msgSend(v34, "fractionalHeightDimension:", 1.0);
    v37 = (void *)objc_opt_self(NSCollectionLayoutSize);
    v38 = objc_msgSend(v37, "sizeWithWidthDimension:heightDimension:", v35, v36);

    v39 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v38);
    v40 = objc_msgSend(v34, "fractionalWidthDimension:", 1.0);
    v41 = objc_msgSend(v34, "fractionalHeightDimension:", 0.2);
    v42 = objc_msgSend(v37, "sizeWithWidthDimension:heightDimension:", v40, v41);

    v43 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v44 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v45 = swift_allocObject(v44, 40, 7);
    *(_OWORD *)(v45 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v45 + 32) = v39;
    v64 = v45;
    specialized Array._endMutation()(v45);
    sub_10004F2F0(0, &qword_100646D10, NSCollectionLayoutItem_ptr);
    v46 = v39;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v48 = objc_msgSend(v43, "horizontalGroupWithLayoutSize:subitems:", v42, isa, swift_bridgeObjectRelease(v64).n128_f64[0]);

    objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v48);
    return;
  }
  sub_100064B54();
  v7 = (void **)&v68;
  v8 = (double *)v67;
  if ((v6 & 1) != 0)
    v8 = (double *)&v70;
  v9 = *v8;
  if ((v6 & 1) != 0)
    v7 = (void **)v71;
  v10 = *v7;
  if ((v6 & 1) != 0)
    v11 = (double *)&v69;
  else
    v11 = (double *)v66;
  v12 = *v11;
  v13 = v10;
  sub_100064B54();
  if ((v14 & 1) == 0)
    goto LABEL_14;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v15 = *(_QWORD *)(v2 + v5);
    if (*(_QWORD *)(v15 + 16) > a1)
    {
      if ((*(_BYTE *)(*(_QWORD *)(v15 + 40 * a1 + 64) + 24) & 1) == 0)
      {
        v52 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v53 = objc_msgSend(v52, "fractionalWidthDimension:", 1.0);
        v54 = objc_msgSend(v52, "fractionalHeightDimension:", 1.0);
        v55 = (void *)objc_opt_self(NSCollectionLayoutSize);
        v20 = objc_msgSend(v55, "sizeWithWidthDimension:heightDimension:", v53, v54);

        v56 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v20);
        v57 = objc_msgSend(v52, "absoluteDimension:", v12);
        v58 = objc_msgSend(v52, "absoluteDimension:", v9);
        v24 = objc_msgSend(v55, "sizeWithWidthDimension:heightDimension:", v57, v58);

        v59 = (void *)objc_opt_self(NSCollectionLayoutGroup);
        v60 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v61 = swift_allocObject(v60, 40, 7);
        *(_OWORD *)(v61 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v61 + 32) = v56;
        v65 = v61;
        specialized Array._endMutation()(v61);
        sub_10004F2F0(0, &qword_100646D10, NSCollectionLayoutItem_ptr);
        v28 = v56;
        v62 = Array._bridgeToObjectiveC()().super.isa;
        v30 = objc_msgSend(v59, "horizontalGroupWithLayoutSize:subitems:", v24, v62, swift_bridgeObjectRelease(v65).n128_f64[0]);

        v51 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v30);
        objc_msgSend(v13, "spacing");
        objc_msgSend(v51, "setInterGroupSpacing:");
        objc_msgSend(v51, "setOrthogonalScrollingBehavior:", 1, v65);
LABEL_21:

        objc_msgSend(v51, "setSupplementaryContentInsetsReference:", 1);
        objc_msgSend(v51, "setContentInsetsReference:", 2);
        objc_msgSend(v51, "setContentInsets:", v71[2], v71[3], v71[4], v71[5]);
        sub_10017F820(v51);

        sub_1001D0668((uint64_t)v66);
        return;
      }
LABEL_14:
      v16 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v17 = objc_msgSend(v16, "absoluteDimension:", v12);
      v18 = objc_msgSend(v16, "fractionalHeightDimension:", 1.0);
      v19 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v20 = objc_msgSend(v19, "sizeWithWidthDimension:heightDimension:", v17, v18);

      v21 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v20);
      v22 = objc_msgSend(v16, "fractionalWidthDimension:", 1.0);
      v23 = objc_msgSend(v16, "absoluteDimension:", v9);
      v24 = objc_msgSend(v19, "sizeWithWidthDimension:heightDimension:", v22, v23);

      v25 = (void *)objc_opt_self(NSCollectionLayoutGroup);
      v26 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v27 = swift_allocObject(v26, 40, 7);
      *(_OWORD *)(v27 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v27 + 32) = v21;
      v63 = v27;
      specialized Array._endMutation()(v27);
      sub_10004F2F0(0, &qword_100646D10, NSCollectionLayoutItem_ptr);
      v28 = v21;
      v29 = Array._bridgeToObjectiveC()().super.isa;
      v30 = objc_msgSend(v25, "horizontalGroupWithLayoutSize:subitems:", v24, v29, swift_bridgeObjectRelease(v63).n128_f64[0]);

      sub_100064B54();
      if ((v31 & 1) != 0)
      {
        v32 = (void *)objc_opt_self(NSCollectionLayoutSpacing);
        objc_msgSend(v13, "spacing");
        v33 = objc_msgSend(v32, "fixedSpacing:");
        objc_msgSend(v30, "setInterItemSpacing:", v33);

      }
      else
      {
        objc_msgSend(v30, "setInterItemSpacing:", v13);
      }
      v49 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v30);
      v50 = (void *)v67[1];
      v51 = v49;
      objc_msgSend(v50, "spacing");
      objc_msgSend(v51, "setInterGroupSpacing:");
      objc_msgSend(v51, "setOrthogonalScrollingBehavior:", 0, v63);
      goto LABEL_21;
    }
  }
  __break(1u);
}

void _s5Files31DOCItemCollectionViewControllerC5titleSSSgvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  Swift::String v3;
  void *object;

  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(0xE000000000000000);
  ObjectType = swift_getObjectType(v0, v1);
  v3._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100517320, "Files/DOCItemCollectionViewController.swift", 43, 2, 2284, 0);
  __break(1u);
}

unint64_t sub_1001BF81C()
{
  unint64_t result;

  result = qword_100646040;
  if (!qword_100646040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DOCUIPHorizontalInsetTrait, &type metadata for DOCUIPHorizontalInsetTrait);
    atomic_store(result, (unint64_t *)&qword_100646040);
  }
  return result;
}

uint64_t sub_1001BF860(uint64_t a1)
{
  sub_1000786EC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184));
  return a1;
}

char *sub_1001BF8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100186410(a1, a2, a3, a4, v4);
}

void sub_1001BF8D0(void *a1)
{
  uint64_t v1;

  sub_1001874E8(a1, v1);
}

uint64_t sub_1001BF8D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BF8FC()
{
  uint64_t v0;

  return sub_10018A030(*(char **)(v0 + 16), 1);
}

void sub_1001BF918()
{
  uint64_t v0;

  sub_100094F78((uint64_t)_swiftEmptyArrayStorage, 1, *(unsigned __int8 *)(v0 + 24));
}

void sub_1001BF94C()
{
  uint64_t v0;
  void *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  double v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  float64x2_t *v50;
  unint64_t v51;
  char *v52;
  uint64_t (*v53)(void);
  id v54;
  _BYTE v55[200];
  _BYTE v56[216];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "preparedCells");
    if (v3)
    {
      v4 = v3;
      v5 = sub_10004F2F0(0, (unint64_t *)&unk_1006428D0, UICollectionViewCell_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

      if ((unint64_t)v6 >> 62)
        goto LABEL_45;
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v7)
      {
        v46 = v2;
        v8 = v6 & 0xC000000000000001;
        v9 = 4;
        v47 = v6;
        v50 = (float64x2_t *)&v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
        v51 = v6 & 0xC000000000000001;
        v49 = v7;
        while (1)
        {
          v10 = v8
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6)
              : *(id *)(v6 + 8 * v9);
          v11 = v10;
          v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
            break;
          v13 = type metadata accessor for DOCItemCollectionCell();
          v14 = (char *)swift_dynamicCastClass(v11, v13);
          if (v14)
          {
            v15 = v14;
            v16 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v14) + 0x1F8);
            v17 = ((uint64_t (*)(char *))v16)(v14);
            if (!v17)
              goto LABEL_33;
            v18 = (char *)v17;
            v53 = v16;
            v19 = objc_msgSend(v52, "effectiveAppearance", v46);
            v20 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
            v21 = *(void **)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance];
            *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = v19;
            v54 = v19;
            if (v19)
            {
              if (!v21)
                goto LABEL_24;
              sub_10004F2F0(0, (unint64_t *)&qword_100648EF0, DOCAppearance_ptr);
              v22 = v21;
              v23 = v54;
              v24 = static NSObject.== infix(_:_:)(v23, v22);

              if ((v24 & 1) != 0)
              {

                v6 = v47;
                goto LABEL_30;
              }
              v6 = v47;
              if (*(_QWORD *)&v18[v20])
              {
LABEL_24:
                v48 = v21;
                v26 = *(void **)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
                *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

                v27 = &v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
                v28 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8];
                *(_QWORD *)v27 = 0;
                *((_QWORD *)v27 + 1) = 0;
                swift_bridgeObjectRelease(v28);
                sub_1000D07FC((uint64_t)v55);
                v29 = (uint64_t)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
                sub_100070EDC((uint64_t)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v56, (uint64_t *)&unk_100641310);
                sub_100070EDC((uint64_t)v55, v29, (uint64_t *)&unk_100641310);
                sub_1001BF860((uint64_t)v56);
                v30 = *(void **)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
                *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

                v31 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                v32 = *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
                if ((v32 & 1) == 0)
                {
                  v32 |= 1uLL;
                  *(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v32;
                }
                v7 = v49;
                if (*(_QWORD *)&v18[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount])
                {

                  v6 = v47;
                  goto LABEL_31;
                }
                v8 = v51;
                if (!sub_10007BAFC())
                {
                  *(_QWORD *)&v18[v31] = 0;
                  v44 = objc_autoreleasePoolPush();
                  sub_10006D2D4(v32, (uint64_t)v18);
                  v8 = v51;
                  objc_autoreleasePoolPop(v44);
                }

                v6 = v47;
LABEL_32:
                v16 = v53;
LABEL_33:
                v2 = v15;
                v33 = v16();
                if (v33)
                {
                  v2 = (char *)v33;
                  v34 = v50[2].f64[0];
                  v35 = v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
                  v37 = *v50;
                  v36 = v50[1];
                  v39 = *(float64x2_t *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics);
                  v38 = *(float64x2_t *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 16);
                  v40 = *(double *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
                  v41 = *(_BYTE *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
                  *(float64x2_t *)v35 = *v50;
                  *(float64x2_t *)(v35 + 16) = v36;
                  *(double *)(v35 + 32) = v34;
                  *(_BYTE *)(v35 + 40) = 0;
                  if ((v41 & 1) != 0
                    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v37, v39), (int32x4_t)vceqq_f64(v36, v38))), 0xFuLL))) & 1) == 0|| v34 != v40)
                  {
                    v42 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                    v43 = *(_QWORD *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
                    if ((v43 & 0x400) == 0)
                    {
                      v43 |= 0x400uLL;
                      *(_QWORD *)(v33 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v43;
                    }
                    if (!*(_QWORD *)(v33
                                    + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
                      && !sub_10007BAFC())
                    {
                      *(_QWORD *)&v2[v42] = 0;
                      v25 = objc_autoreleasePoolPush();
                      sub_10006D2D4(v43, (uint64_t)v2);
                      v8 = v51;
                      objc_autoreleasePoolPop(v25);
                    }
                  }

                }
                goto LABEL_8;
              }
LABEL_28:

            }
            else
            {
              if (v21)
                goto LABEL_28;

            }
LABEL_30:
            v7 = v49;
LABEL_31:
            v8 = v51;
            goto LABEL_32;
          }
LABEL_8:

          ++v9;
          if (v12 == v7)
          {

            swift_bridgeObjectRelease(v6);
            return;
          }
        }
        __break(1u);
LABEL_45:
        if (v6 < 0)
          v45 = v6;
        else
          v45 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v7 = _CocoaArrayWrapper.endIndex.getter(v45);
        swift_bridgeObjectRelease(v6);
      }

      swift_bridgeObjectRelease(v6);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001BFDFC(int a1)
{
  uint64_t v1;

  sub_100190308(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_1001BFE04()
{
  uint64_t v0;

  return sub_10005897C(*(void **)(v0 + 24), 0, 0, 1, 1);
}

void sub_1001BFE38(int a1)
{
  uint64_t v1;

  sub_100190218(a1, *(char **)(v1 + 16), *(id *)(v1 + 24));
}

void sub_1001BFE40()
{
  uint64_t v0;

  sub_1001B9574(*(_BYTE **)(v0 + 16));
}

uint64_t type metadata accessor for DOCItemCollectionViewController.SplitModeChangeTracker()
{
  return objc_opt_self(_TtCC5Files31DOCItemCollectionViewControllerP33_5F0EFF72AF8947E41D4A85D85870111822SplitModeChangeTracker);
}

uint64_t sub_1001BFE78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001BFE9C(int a1)
{
  uint64_t v1;

  sub_100190988(a1, *(id *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

double sub_1001BFEA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001909E8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1001BFEB0()
{
  unint64_t result;

  result = qword_100646108;
  if (!qword_100646108)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UITraitCollection.DOCTabBarBlurAvoidanceTrait, &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait);
    atomic_store(result, (unint64_t *)&qword_100646108);
  }
  return result;
}

uint64_t sub_1001BFEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  unsigned int v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  _OWORD v36[2];
  _BYTE v37[24];
  uint64_t v38;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter(v11) != 2)
    goto LABEL_6;
  result = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    return result;
  }
  if ((objc_msgSend((id)result, "isGathering") & 1) == 0
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
    && (sub_100195148(a1) & 1) != 0)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_8:
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_100642710);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    goto LABEL_8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  result = sub_10017A754((uint64_t)v10, 0);
  if (!result)
    goto LABEL_41;
  v13 = (void *)result;
  if (objc_msgSend((id)result, "isFolder") && objc_msgSend(v13, "isReadable"))
  {
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession);
    if (v14)
    {
      v15 = objc_msgSend((id)swift_unknownObjectRetain(*(_QWORD *)(v2+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession)), "items");
      v16 = sub_10004F2F0(0, (unint64_t *)&unk_100648460, UIDragItem_ptr);
      v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

      v30 = v14;
      if ((unint64_t)v17 >> 62)
        goto LABEL_35;
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v18)
      {
        v34 = v17 & 0xC000000000000001;
        v19 = 4;
        v31 = (char *)&type metadata for Any + 8;
        v32 = v18;
        v33 = v17;
        while (1)
        {
          v20 = v34
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, v17)
              : *(id *)(v17 + 8 * v19);
          v17 = (uint64_t)v20;
          v21 = v19 - 3;
          if (__OFADD__(v19 - 4, 1))
            break;
          v22 = objc_msgSend(v20, "localObject");
          if (v22)
          {
            v23 = v22;
            _bridgeAnyObjectToAny(_:)(v36, v22);
            swift_unknownObjectRelease(v23);
          }
          else
          {
            memset(v36, 0, sizeof(v36));
          }
          sub_100070EDC((uint64_t)v36, (uint64_t)v37, &qword_100642730);
          if (v38)
          {
            v24 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
            if ((swift_dynamicCast(&v35, v37, v31, v24, 6) & 1) != 0)
            {
              v25 = v35;
              v26 = objc_msgSend(v13, "isEqual:", v35);

              if (v26)
              {
                swift_bridgeObjectRelease(v33);
                swift_unknownObjectRelease(v13);
                v27 = swift_unknownObjectRelease(v30);
                (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v27);
                goto LABEL_31;
              }
            }
            else
            {

            }
          }
          else
          {

            sub_10000CB4C((uint64_t)v37, &qword_100642730);
          }
          ++v19;
          v17 = v33;
          if (v21 == v32)
            goto LABEL_39;
        }
        __break(1u);
LABEL_35:
        if (v17 < 0)
          v28 = v17;
        else
          v28 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v17);
        v18 = _CocoaArrayWrapper.endIndex.getter(v28);
        swift_bridgeObjectRelease(v17);
      }
LABEL_39:
      swift_bridgeObjectRelease(v17);
      swift_unknownObjectRelease(v13);
      v29 = swift_unknownObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v29);
      result = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_unknownObjectRelease(v13);
      result = 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_unknownObjectRelease(v13);
LABEL_31:
    result = 0;
  }
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading) = result;
  return result;
}

void sub_1001C0358(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, const void *a7)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  void *v25;
  id v26;
  void *v27;
  id v28;
  double v29;
  id v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  id v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  NSObject *v63;
  _QWORD *v64;
  _QWORD *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  void *v70;
  uint64_t *v71;
  uint64_t v72;
  void (**v73)(_QWORD, _QWORD, _QWORD);
  id v74;
  NSObject *v75;
  char *v76;
  NSObject *v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  NSObject *v83;
  void (**v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char v90;
  void *v91;
  id v92;
  double v93;
  void *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  id v109;
  uint64_t v110;
  NSObject *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  NSObject **v115;
  NSObject *v116;
  uint64_t v117;
  uint8_t *v118;
  const void *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  void *v123;
  void *v124;
  id v125;
  void (**v126)(_QWORD, _QWORD, _QWORD);
  NSObject *v127;
  void (**v128)(char *, uint64_t);
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE v133[16];
  NSObject *v134;
  uint64_t v135[3];
  char v136[24];
  char v137[32];

  v130 = a1;
  v13 = type metadata accessor for Logger(0);
  v14 = *(char **)(v13 - 8);
  __chkstk_darwin(v13);
  v128 = (void (**)(char *, uint64_t))((char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v127 = ((char *)&v120 - v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v120 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v120 - v22;
  a2 += 16;
  swift_beginAccess(a2, v137, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v25 = (void *)Strong;
    v124 = a6;
    v129 = v13;
    _Block_copy(a7);
    v126 = (void (**)(_QWORD, _QWORD, _QWORD))a7;
    _Block_copy(a7);
    v26 = objc_msgSend(v25, "view");
    if (v26)
    {
      v27 = v26;
      v28 = sub_100195294(v26);

      *(_QWORD *)&v29 = swift_beginAccess(a3 + 16, v136, 1, 0).n128_u64[0];
      *(_BYTE *)(a3 + 16) = 1;
      v30 = objc_msgSend(v28, "window", v29);

      v125 = v25;
      if (v30)
      {
        v123 = v28;
        v122 = a5 & 1;
        swift_beginAccess(a4 + 16, v135, 0, 0);
        v32 = *(_BYTE *)(a4 + 16);
        v34 = Logger.UI.unsafeMutableAddressor(v33);
        v35 = v14;
        v36 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v14 + 2);
        v37 = v129;
        if ((v32 & 1) != 0)
        {
          v36(v20, v34, v129);
          v38 = v130;
          v39 = Logger.logObject.getter(v38);
          v40 = static os_log_type_t.debug.getter(v39);
          if (os_log_type_enabled(v39, v40))
          {
            v41 = (uint8_t *)swift_slowAlloc(12, -1);
            v127 = swift_slowAlloc(32, -1);
            v134 = v127;
            *(_DWORD *)v41 = 136315138;
            v42 = (*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x1F8))();
            if (v42)
            {
              v43 = (void *)v42;
              v44 = (uint64_t *)(v42 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
              swift_beginAccess(v42 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v132, 0, 0);
              v45 = *v44;
              swift_unknownObjectRetain(*v44);

            }
            else
            {
              v45 = 0;
            }
            v131 = v45;
            v79 = sub_10006922C(&qword_100652EB0);
            v80 = String.init<A>(describing:)(&v131, v79);
            v82 = v81;
            v131 = sub_1000544FC(v80, v81, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);

            swift_bridgeObjectRelease(v82);
            _os_log_impl((void *)&_mh_execute_header, v39, v40, "Timed out (250ms) re-fetching thumbnail for %s", v41, 0xCu);
            v83 = v127;
            swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v83, -1, -1);
            swift_slowDealloc(v41, -1, -1);

            v75 = *((_QWORD *)v35 + 1);
            v76 = v20;
            v37 = v129;
          }
          else
          {

            v75 = *((_QWORD *)v35 + 1);
            v76 = v20;
          }
          v127 = v75;
          ((void (*)(char *, uint64_t))v75)(v76, v37);
          v84 = v128;
          v64 = v130;
        }
        else
        {
          v63 = v127;
          v36((char *)v127, v34, v129);
          v64 = v130;
          v65 = v130;
          v66 = Logger.logObject.getter(v65);
          v67 = static os_log_type_t.debug.getter(v66);
          if (os_log_type_enabled(v66, v67))
          {
            v68 = (uint8_t *)swift_slowAlloc(12, -1);
            v121 = swift_slowAlloc(32, -1);
            v134 = v121;
            *(_DWORD *)v68 = 136315138;
            v69 = (*(uint64_t (**)(void))((swift_isaMask & *v65) + 0x1F8))();
            if (v69)
            {
              v70 = (void *)v69;
              v71 = (uint64_t *)(v69 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
              swift_beginAccess(v69 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v132, 0, 0);
              v72 = *v71;
              swift_unknownObjectRetain(*v71);

            }
            else
            {
              v72 = 0;
            }
            v131 = v72;
            v85 = sub_10006922C(&qword_100652EB0);
            v86 = String.init<A>(describing:)(&v131, v85);
            v88 = v87;
            v131 = sub_1000544FC(v86, v87, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);

            swift_bridgeObjectRelease(v88);
            _os_log_impl((void *)&_mh_execute_header, v66, v67, "Updated thumbnail for %s", v68, 0xCu);
            v89 = v121;
            swift_arrayDestroy(v121, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v89, -1, -1);
            swift_slowDealloc(v68, -1, -1);

            v77 = *((_QWORD *)v35 + 1);
            v78 = v127;
            v37 = v129;
          }
          else
          {

            v77 = *((_QWORD *)v35 + 1);
            v78 = v63;
          }
          v127 = v77;
          ((void (*)(NSObject *, uint64_t))v77)(v78, v37);
          v84 = v128;
        }
        v90 = v122;
        v91 = *(void **)((char *)v64 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
        objc_msgSend(v91, "addDecoration");
        v92 = objc_msgSend(v91, "layoutIfNeeded");
        v93 = (*(double (**)(id))((swift_isaMask & *v64) + 0x100))(v92);
        v94 = v123;
        sub_100191C18(v64, v123, v90, v93, v95, v96, v97);
        objc_msgSend(v91, "_continuousCornerRadius");
        v99 = v98;
        objc_msgSend(v91, "bounds");
        v104 = v102;
        v105 = v103;
        if (v99 <= 0.0)
        {
          v109 = sub_1001BD5E0(v124, v102, v103);
        }
        else
        {
          v106 = v100;
          v107 = v101;
          objc_msgSend(v91, "_continuousCornerRadius");
          v109 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v106, v107, v104, v105, v108);
        }
        v130 = v109;
        v110 = Logger.UI.unsafeMutableAddressor(v109);
        v36((char *)v84, v110, v37);
        v111 = v64;
        v112 = Logger.logObject.getter(v111);
        v113 = static os_log_type_t.debug.getter(v112);
        if (os_log_type_enabled(v112, v113))
        {
          v114 = (uint8_t *)swift_slowAlloc(12, -1);
          v115 = (NSObject **)swift_slowAlloc(8, -1);
          *(_DWORD *)v114 = 138412290;
          v134 = v111;
          v116 = v111;
          v37 = v129;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135);
          *v115 = v111;

          v84 = v128;
          _os_log_impl((void *)&_mh_execute_header, v112, v113, "calling completion block with cell %@", v114, 0xCu);
          v117 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v115, 1, v117);
          swift_slowDealloc(v115, -1, -1);
          v118 = v114;
          v94 = v123;
          swift_slowDealloc(v118, -1, -1);
        }
        else
        {

          v112 = v111;
        }
        v73 = v126;

        ((void (*)(_QWORD, uint64_t))v127)(v84, v37);
        v74 = objc_msgSend(v91, "image");
        v51 = v130;
        ((void (**)(_QWORD, void *, id))v73)[2](v73, v91, v130);

      }
      else
      {
        v46 = Logger.UI.unsafeMutableAddressor(v31);
        v47 = v129;
        (*((void (**)(char *, uint64_t, uint64_t))v14 + 2))(v23, v46, v129);
        v48 = v130;
        v49 = v28;
        v50 = v48;
        v51 = v49;
        v52 = Logger.logObject.getter(v51);
        v53 = static os_log_type_t.error.getter(v52);
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc(32, -1);
          v130 = v51;
          v55 = v54;
          v56 = swift_slowAlloc(16, -1);
          v128 = (void (**)(char *, uint64_t))v14;
          v57 = (_QWORD *)v56;
          v127 = swift_slowAlloc(32, -1);
          v135[0] = (uint64_t)v127;
          *(_DWORD *)v55 = 136315650;
          v132 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, v135);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133);
          *(_WORD *)(v55 + 12) = 2112;
          v132 = (uint64_t)v50;
          v58 = v50;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133);
          *v57 = v50;

          *(_WORD *)(v55 + 22) = 2112;
          v132 = (uint64_t)v130;
          v59 = v130;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, v133);
          v57[1] = v130;

          _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v55, 0x20u);
          v60 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v57, 2, v60);
          swift_slowDealloc(v57, -1, -1);
          v61 = v127;
          swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v61, -1, -1);
          v62 = v55;
          v51 = v130;
          swift_slowDealloc(v62, -1, -1);

          v128[1](v23, v129);
        }
        else
        {

          (*((void (**)(char *, uint64_t))v14 + 1))(v23, v47);
        }
        v73 = v126;
        v126[2](v126, 0, 0);
        v74 = v125;
      }

      _Block_release(v73);
      _Block_release(v73);
    }
    else
    {
      v119 = v126;
      _Block_release(v126);
      _Block_release(v119);
      _Block_release(v119);
      __break(1u);
    }
  }
}

void sub_1001C0EA4(void *a1, char *a2, uint64_t a3, void **a4, int a5, int a6, const void *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  Class isa;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  char v54;
  void **v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  BOOL v63;
  uint64_t v64;
  uint8_t *v65;
  void **v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t object;
  Swift::String v76;
  char *v77;
  __n128 v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  void *v85;
  Swift::String v86;
  unint64_t v87;
  void **v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void **v96;
  void (**v97)(_QWORD, _QWORD, _QWORD);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  id v104;
  double v105;
  double v106;
  double v107;
  double v108;
  uint64_t v109;
  char *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  NSObject *v115;
  os_log_type_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  os_log_t v126;
  uint64_t v127;
  _QWORD *v128;
  void **v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void **v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *ObjectType;
  _QWORD *v150;
  void *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  void (*v159)(_QWORD *, _QWORD, uint64_t);
  uint64_t v160;
  char *v161;
  void (*v162)(_QWORD *, uint64_t);
  void (*v163)(char *, uint64_t);
  void (*v164)(char *, uint64_t);
  _QWORD *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  void **v179;
  os_log_t v180;
  char *v181;
  void **v182;
  __n128 v183;
  __n128 v184;
  uint64_t v185;
  __n128 v186;
  __n128 v187;
  const void *v188;
  void *v189;
  __n128 v190;
  const void *v191;
  void (*v192)(uint64_t, char *, uint64_t);
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v212;
  char *v213;
  int v214;
  uint64_t v215;
  char *v216;
  os_log_t v217;
  void **v218;
  void **v219;
  id v220;
  char *v221;
  uint64_t v222;
  void (**v223)(_QWORD, _QWORD, _QWORD);
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230[8];
  void **aBlock;
  unint64_t v232;
  uint64_t (*v233)(uint64_t);
  void *v234;
  uint64_t (*v235)();
  _QWORD *v236;

  v214 = a6;
  LODWORD(v217) = a5;
  v218 = a4;
  v221 = a2;
  v212 = type metadata accessor for DispatchTimeInterval(0);
  v208 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v211 = (void (**)(uint64_t, char *, uint64_t))((char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v210 = (void (**)(uint64_t, char *, uint64_t))((char *)&v192 - v12);
  v215 = type metadata accessor for DispatchTime(0);
  v207 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v206 = (char *)&v192 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v209 = (char *)&v192 - v15;
  v203 = type metadata accessor for DispatchWorkItemFlags(0);
  v202 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v192 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for DispatchQoS(0);
  v199 = *(_QWORD *)(v200 - 8);
  v17 = __chkstk_darwin(v200);
  v198 = (char *)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for OS_dispatch_source.TimerFlags(0, v17);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v195 = (char *)&v192 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for Logger(0);
  v227 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v226 = (char *)&v192 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v213 = (char *)&v192 - v22;
  __chkstk_darwin(v23);
  v216 = (char *)&v192 - v24;
  v25 = type metadata accessor for IndexPath(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v205 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v192 - v29;
  v220 = (id)sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v220);
  v32 = (char *)&v192 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v192 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v192 - v37;
  v39 = swift_allocObject(&unk_1005CD3A8, 24, 7);
  *(_QWORD *)(v39 + 16) = a7;
  v40 = swift_allocObject(&unk_1005CD3D0, 32, 7);
  *(_QWORD *)(v40 + 16) = sub_1001D25E0;
  *(_QWORD *)(v40 + 24) = v39;
  v225 = v40;
  _Block_copy(a7);
  _Block_copy(a7);
  _Block_copy(a7);
  swift_retain();
  v223 = (void (**)(_QWORD, _QWORD, _QWORD))a7;
  _Block_copy(a7);
  v222 = v39;
  v41 = a1;
  v42 = objc_msgSend(a1, "indexPathsForVisibleItems", swift_retain().n128_f64[0]);
  v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v25);

  v44 = v221;
  swift_unknownObjectRetain(a3);
  v221 = v44;
  v219 = (void **)a3;
  sub_100174744(v43, v44, a3, v38);
  v45 = v43;
  v46 = v38;
  v47 = v25;
  swift_bridgeObjectRelease(v45);
  sub_1000271D4((uint64_t)v46, (uint64_t)v35, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v35, 1, v25) == 1)
  {
    sub_10000CB4C((uint64_t)v35, (uint64_t *)&unk_100642710);
LABEL_11:
    aBlock = 0;
    v232 = 0xE000000000000000;
    _StringGuts.grow(_:)(102);
    v72._object = (void *)0x8000000100515CD0;
    v72._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v72);
    v73._countAndFlagsBits = 0xD000000000000019;
    v73._object = (void *)0x8000000100515CF0;
    String.append(_:)(v73);
    sub_1000271D4((uint64_t)v46, (uint64_t)v32, (uint64_t *)&unk_100642710);
    v74._countAndFlagsBits = String.init<A>(describing:)(v32, v220);
    object = (uint64_t)v74._object;
    String.append(_:)(v74);
    swift_bridgeObjectRelease(object);
    v76._countAndFlagsBits = 0xD00000000000002DLL;
    v76._object = (void *)0x8000000100515D10;
    String.append(_:)(v76);
    v77 = v221;
    objc_msgSend(v221, "loadViewIfNeeded");
    v79 = *(void **)&v77[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    v80 = v224;
    v55 = (void **)v227;
    if (v79)
    {
      v81 = objc_msgSend(v79, "indexPathsForVisibleItems");
      v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v81, v47);

      v83 = *(_QWORD *)(v82 + 16);
      swift_bridgeObjectRelease(v82);
      v229 = v83;
      v84._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v85 = v84._object;
      String.append(_:)(v84);
      swift_bridgeObjectRelease(v85);
      v86._countAndFlagsBits = 0xD00000000000001ALL;
      v86._object = (void *)0x8000000100515D40;
      String.append(_:)(v86);
      v88 = aBlock;
      v87 = v232;
      v89 = sub_10012B03C((uint64_t)aBlock, v232);
      v90 = Logger.UI.unsafeMutableAddressor(v89);
      v91 = v226;
      ((void (*)(char *, uint64_t, uint64_t))v55[2])(v226, v90, v80);
      v92 = swift_bridgeObjectRetain(v87);
      v93 = Logger.logObject.getter(v92);
      v94 = static os_log_type_t.error.getter(v93);
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc(12, -1);
        v96 = (void **)swift_slowAlloc(32, -1);
        aBlock = v96;
        *(_DWORD *)v95 = 136315138;
        swift_bridgeObjectRetain(v87);
        v229 = sub_1000544FC((uint64_t)v88, v87, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        swift_bridgeObjectRelease_n(v87, 3);
        _os_log_impl((void *)&_mh_execute_header, v93, v94, "%s", v95, 0xCu);
        swift_arrayDestroy(v96, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v96, -1, -1);
        swift_slowDealloc(v95, -1, -1);

        (*(void (**)(char *, uint64_t))(v227 + 8))(v226, v80);
      }
      else
      {

        swift_bridgeObjectRelease_n(v87, 2);
        ((void (*)(char *, uint64_t))v55[1])(v91, v80);
      }
      v97 = v223;
      v223[2](v223, 0, 0);
      sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100642710);
      v64 = v222;
      v98 = v222;
      object = v225;
LABEL_16:
      swift_release(v64);
      swift_release(v98);
      swift_release(object);
      _Block_release(v97);
      _Block_release(v97);
      _Block_release(v97);
      return;
    }
    swift_release_n(v222, 2, v78);
    v188 = v223;
    _Block_release(v223);
    _Block_release(v188);
    _Block_release(v188);
    _Block_release(v188);
    __break(1u);
    goto LABEL_32;
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v48(v30, v35, v25);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v50 = objc_msgSend(v41, "cellForItemAtIndexPath:", isa);

  if (!v50)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v47);
    goto LABEL_11;
  }
  v192 = (void (*)(uint64_t, char *, uint64_t))v48;
  v51 = type metadata accessor for DOCItemCollectionCell();
  v52 = (_QWORD *)swift_dynamicCastClass(v50, v51);
  if (!v52)
  {

    goto LABEL_10;
  }
  v53 = v52;
  v226 = v30;
  v194 = v26;
  v54 = v217 & 1;
  v55 = v218;
  v193 = v47;
  if (!v218)
  {
    LODWORD(v217) = v217 & 1;
    v218 = (void **)v41;
    v56 = Logger.UI.unsafeMutableAddressor(v52);
    v57 = v227;
    v58 = v216;
    v59 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v227 + 16))(v216, v56, v224);
    v60 = v50;
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.debug.getter(v61);
    v63 = os_log_type_enabled(v61, v62);
    v64 = v225;
    v220 = v60;
    if (v63)
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = (void **)swift_slowAlloc(32, -1);
      aBlock = v66;
      *(_DWORD *)v65 = 136315138;
      v67 = (*(uint64_t (**)(void))((swift_isaMask & *v53) + 0x1F8))();
      if (v67)
      {
        v68 = (void *)v67;
        v69 = v46;
        v70 = (uint64_t *)(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v229, 0, 0);
        v71 = *v70;
        swift_unknownObjectRetain(*v70);

      }
      else
      {
        v69 = v46;
        v71 = 0;
      }
      v130 = v216;
      v228 = v71;
      v131 = sub_10006922C(&qword_100652EB0);
      v132 = String.init<A>(describing:)(&v228, v131);
      v134 = v133;
      v228 = sub_1000544FC(v132, v133, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v228, &v229);
      v135 = v220;

      swift_bridgeObjectRelease(v134);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v65, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v227 + 8))(v130, v224);
      v46 = v69;
      v47 = v193;
      v64 = v225;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
    }
    v98 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v98 + 16) = 0;
    v136 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v136 + 16) = 0;
    v137 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v137 + 16);
    v138 = swift_allocObject(&unk_1005CD3F8, 72, 7);
    *(_QWORD *)(v138 + 16) = v137;
    *(_QWORD *)(v138 + 24) = v136;
    *(_QWORD *)(v138 + 32) = sub_1001D25F8;
    *(_QWORD *)(v138 + 40) = v64;
    *(_QWORD *)(v138 + 48) = v98;
    v139 = (char)v217;
    *(_BYTE *)(v138 + 56) = (_BYTE)v217;
    v140 = v219;
    v227 = v138;
    *(_QWORD *)(v138 + 64) = v219;
    if ((v214 & 1) != 0)
    {
      v224 = sub_10004F2F0(0, &qword_100646AD8, OS_dispatch_source_ptr);
      sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
      swift_unknownObjectRetain(v140);
      swift_retain();
      swift_retain();
      swift_retain();
      v142 = (void *)static OS_dispatch_queue.main.getter(v141);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v143 = sub_10005A360(&qword_100646AE0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
      v144 = sub_10006922C(&qword_100646AE8);
      v145 = sub_100062698((unint64_t *)&unk_100646AF0, &qword_100646AE8, (uint64_t)&protocol conformance descriptor for [A]);
      v217 = (os_log_t)v136;
      v146 = v195;
      v147 = v197;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v144, v145, v197, v143);
      v148 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v146, v142);

      (*(void (**)(char *, uint64_t))(v196 + 8))(v146, v147);
      ObjectType = (char *)swift_getObjectType(v148);
      v150 = (_QWORD *)swift_allocObject(&unk_1005CD420, 48, 7);
      v150[2] = v98;
      v150[3] = sub_1001CFA88;
      v150[4] = v227;
      v150[5] = v53;
      v235 = sub_1001CFA90;
      v236 = v150;
      aBlock = _NSConcreteStackBlock;
      v232 = 1107296256;
      v233 = sub_10004A82C;
      v234 = &unk_1005CD438;
      v151 = _Block_copy(&aBlock);
      v216 = (char *)v220;
      swift_retain();
      swift_retain();
      v152 = v198;
      static DispatchQoS.unspecified.getter(v153);
      v154 = v201;
      sub_100193FCC();
      v221 = ObjectType;
      v224 = v148;
      OS_dispatch_source.setEventHandler(qos:flags:handler:)(v152, v154, v151, ObjectType);
      _Block_release(v151);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v154, v203);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v152, v200);
      swift_release(v236);
      OS_dispatch_source.resume()();
      v155 = v206;
      static DispatchTime.now()(v156);
      v157 = v210;
      *v210 = 250;
      v220 = v53;
      v158 = v208;
      v159 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v208 + 104);
      v160 = v212;
      v159(v157, enum case for DispatchTimeInterval.milliseconds(_:), v212);
      v161 = v209;
      + infix(_:_:)(v155, v157);
      v162 = *(void (**)(_QWORD *, uint64_t))(v158 + 8);
      v162(v157, v160);
      v163 = *(void (**)(char *, uint64_t))(v207 + 8);
      v163(v155, v215);
      v164 = v163;
      v159(v157, enum case for DispatchTimeInterval.never(_:), v160);
      v165 = v211;
      *v211 = 0;
      v159(v165, enum case for DispatchTimeInterval.nanoseconds(_:), v160);
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v161, v157, v165, v221);
      v162(v165, v160);
      v162(v157, v160);
      v164(v161, v215);
      v215 = swift_getObjectType(v219);
      v166 = v194;
      v167 = v205;
      (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v205, v226, v47);
      v168 = *(unsigned __int8 *)(v166 + 80);
      v169 = (v168 + 24) & ~v168;
      v170 = (v204 + v169 + 7) & 0xFFFFFFFFFFFFFFF8;
      v171 = (v170 + 15) & 0xFFFFFFFFFFFFFFF8;
      v221 = v46;
      v172 = (v171 + 23) & 0xFFFFFFFFFFFFFFF8;
      v173 = (v172 + 15) & 0xFFFFFFFFFFFFFFF8;
      v174 = (v173 + 15) & 0xFFFFFFFFFFFFFFF8;
      v175 = swift_allocObject(&unk_1005CD470, v174 + 8, v168 | 7);
      *(_QWORD *)(v175 + 16) = v218;
      v192(v175 + v169, v167, v47);
      v176 = v224;
      *(_QWORD *)(v175 + v170) = v224;
      v177 = (_QWORD *)(v175 + v171);
      v178 = v227;
      *v177 = sub_1001CFA88;
      v177[1] = v178;
      v179 = v219;
      *(_QWORD *)(v175 + v172) = v220;
      *(_QWORD *)(v175 + v173) = v179;
      v180 = v217;
      *(_QWORD *)(v175 + v174) = v217;
      swift_unknownObjectRetain(v179);
      v181 = v216;
      swift_retain();
      swift_retain();
      v182 = v218;
      swift_unknownObjectRetain(v176);
      DOCNode.fpfs_fetchFPItem(completion:)(sub_1001CFA98, v175, v215);

      swift_release(v178);
      swift_unknownObjectRelease(v176);
      v183 = swift_release(v175);
      (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v226, v47, v183);
      sub_10000CB4C((uint64_t)v221, (uint64_t *)&unk_100642710);
      swift_release_n(v222, 2, v184);
      v64 = v225;
      object = (uint64_t)v180;
      v97 = v223;
    }
    else
    {
      v97 = v223;
      _Block_copy(v223);
      v185 = v222;
      swift_retain();
      swift_unknownObjectRetain(v140);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001C0358(v53, v137, v136, v98, v139, v140, v97);
      _Block_release(v97);

      swift_release(v137);
      swift_release(v227);
      v186 = swift_release(v185);
      (*(void (**)(char *, uint64_t, __n128))(v194 + 8))(v226, v193, v186);
      sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100642710);
      swift_release_n(v185, 2, v187);
      object = v136;
    }
    goto LABEL_16;
  }
  v220 = v52;
  v99 = v224;
  object = v225;
  v100 = v227;
  if (v218 == (void **)1)
  {
    v101 = sub_100195294(v41);
    v102 = objc_msgSend(v101, "window");

    v97 = v223;
    if (v102)
    {
      v104 = v220;
      objc_msgSend(v220, "bounds");
      sub_100191C18(v104, v101, v54, v105, v106, v107, v108);
      ((void (**)(_QWORD, id, _QWORD))v97)[2](v97, v104, 0);

      (*(void (**)(char *, uint64_t))(v194 + 8))(v226, v193);
      sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100642710);
      v64 = v222;
    }
    else
    {
      v109 = Logger.UI.unsafeMutableAddressor(v103);
      v110 = v213;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v213, v109, v99);
      v111 = v50;
      v112 = v101;
      v113 = v111;
      v114 = v112;
      v115 = Logger.logObject.getter(v114);
      v116 = static os_log_type_t.error.getter(v115);
      v117 = v116;
      if (os_log_type_enabled(v115, v116))
      {
        v118 = swift_slowAlloc(32, -1);
        v119 = swift_slowAlloc(16, -1);
        v221 = v46;
        v120 = (_QWORD *)v119;
        v219 = (void **)swift_slowAlloc(32, -1);
        aBlock = v219;
        *(_DWORD *)v118 = 136315650;
        v229 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        *(_WORD *)(v118 + 12) = 2112;
        v121 = v113;
        LODWORD(v218) = v117;
        v122 = v220;
        v229 = (uint64_t)v220;
        v123 = v113;
        v217 = v115;
        v124 = v123;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        *v120 = v122;

        *(_WORD *)(v118 + 22) = 2112;
        v229 = (uint64_t)v114;
        v125 = v114;
        object = v225;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        v120[1] = v114;

        v113 = v121;
        v126 = v217;
        _os_log_impl((void *)&_mh_execute_header, v217, (os_log_type_t)v218, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v118, 0x20u);
        v127 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v120, 2, v127);
        v128 = v120;
        v46 = v221;
        swift_slowDealloc(v128, -1, -1);
        v129 = v219;
        swift_arrayDestroy(v219, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v129, -1, -1);
        v97 = v223;
        swift_slowDealloc(v118, -1, -1);

        (*(void (**)(char *, uint64_t))(v227 + 8))(v213, v224);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v100 + 8))(v110, v99);
      }
      v64 = v222;
      v97[2](v97, 0, 0);

      (*(void (**)(char *, uint64_t))(v194 + 8))(v226, v193);
      sub_10000CB4C((uint64_t)v46, (uint64_t *)&unk_100642710);
    }
    v98 = v64;
    goto LABEL_16;
  }
LABEL_32:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  v234 = v189;
  swift_release_n(v222, 2, v190);
  swift_release(object);
  v191 = v223;
  _Block_release(v223);
  _Block_release(v191);
  aBlock = v55;
  _Block_release(v191);
  _Block_release(v191);
  doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(&aBlock);
  __break(1u);
}

void sub_1001C2374(void *a1, void **a2, int a3, char a4, char *a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  uint64_t (*v32)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  const void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  void *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void **v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  _BYTE v100[12];
  int v101;
  uint64_t v102;
  _QWORD *v103;
  void **v104;
  int v105;
  _BYTE *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t aBlock;
  unint64_t v113[4];
  uint64_t v114;
  uint64_t v115;
  _BYTE v116[24];

  v105 = a3;
  v104 = a2;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v106 = &v100[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v100[-v14];
  __chkstk_darwin(v16);
  v18 = &v100[-v17];
  v19 = swift_allocObject(&unk_1005CD308, 24, 7);
  *(_QWORD *)(v19 + 16) = a6;
  v20 = swift_allocObject(&unk_1005CD330, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1001CFDA0;
  *(_QWORD *)(v20 + 24) = v19;
  v110 = v20;
  v21 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v21)
  {
    _Block_copy(a6);
    swift_retain();
    _Block_copy(a6);
    v32 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))a6[2];
    v33 = swift_retain();
    v34 = v32(a6, 0, 0, v33);
    v35 = Logger.UI.unsafeMutableAddressor(v34);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v18, v35, v10);
    v36 = swift_unknownObjectRetain_n(a1, 2);
    v37 = Logger.logObject.getter(v36);
    v38 = v11;
    v39 = static os_log_type_t.error.getter(v37);
    if (!os_log_type_enabled(v37, v39))
    {

      swift_unknownObjectRelease_n(a1, 2);
      v51.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v38 + 8))(v18, v10);
      swift_release_n(v19, 2, v51);
      swift_release(v110);
      v52 = a6;
LABEL_35:
      _Block_release(v52);
      return;
    }
    v40 = swift_slowAlloc(22, -1);
    v109 = v38;
    v41 = v40;
    v107 = (id)swift_slowAlloc(64, -1);
    aBlock = v107;
    *(_DWORD *)v41 = 136315394;
    v115 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
    v108 = v10;
    *(_QWORD *)&v42 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116).n128_u64[0];
    *(_WORD *)(v41 + 12) = 2080;
    v106 = (_BYTE *)(v41 + 14);
    v43 = objc_msgSend(a1, "description", v42);
    v103 = a6;
    v44 = v43;
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v47 = v46;

    v115 = sub_1000544FC(v45, v47, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v37, v39, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v41, 0x16u);
    v48 = v107;
    swift_arrayDestroy(v107, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v41, -1, -1);

    v49.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t))(v109 + 8))(v18, v108);
    swift_release_n(v19, 2, v49);
    v50 = v110;
LABEL_34:
    swift_release(v50);
    v52 = v103;
    goto LABEL_35;
  }
  v108 = v10;
  v109 = v11;
  v102 = (uint64_t)a1;
  _Block_copy(a6);
  swift_retain();
  _Block_copy(a6);
  v22 = qword_100640F50;
  swift_retain();
  v107 = v21;
  if (v22 != -1)
    swift_once(&qword_100640F50, sub_1002A22DC);
  v23 = (void *)qword_100672B20;
  v24 = (uint64_t *)(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions, &v115, 0, 0);
  v25 = *v24;
  if (!((unint64_t)v25 >> 62))
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    v27 = v23;
    swift_bridgeObjectRetain(v25);
    if (v26)
      goto LABEL_6;
LABEL_16:

    v31 = swift_bridgeObjectRelease(v25).n128_u64[0];
    v30 = 0;
    goto LABEL_17;
  }
  if (v25 < 0)
    v53 = v25;
  else
    v53 = v25 & 0xFFFFFFFFFFFFFF8;
  v54 = v23;
  swift_bridgeObjectRetain(v25);
  if (!_CocoaArrayWrapper.endIndex.getter(v53))
    goto LABEL_16;
LABEL_6:
  if ((v25 & 0xC000000000000001) != 0)
  {
    v99 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
    swift_bridgeObjectRelease(v25);
    v30 = *(unsigned __int8 *)(v99 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    v31 = swift_unknownObjectRelease(v99).n128_u64[0];
  }
  else
  {
    if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v29 = *(_QWORD *)(v25 + 32);
    swift_retain();
    swift_bridgeObjectRelease(v25);
    v30 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    v31 = swift_release(v29).n128_u64[0];
  }
LABEL_17:
  LODWORD(v55) = a4 & 1;
  v56 = objc_msgSend(v107, "indexPathsForVisibleItems", *(double *)&v31);
  v57 = type metadata accessor for IndexPath(0);
  v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v57);

  v59 = *(_QWORD *)(v58 + 16);
  swift_bridgeObjectRelease(v58);
  v61 = v108;
  if (v59)
  {
    v62 = sub_10018C44C(1);
    v63 = v109;
    v64 = v106;
    if (!v30)
    {
      _Block_copy(a6);
      swift_retain();
      v65 = v107;
      sub_1001C0EA4(v107, a5, v102, v104, v55, v105 & 1, a6);
      _Block_release(a6);
      swift_release(v110);

      swift_release_n(v19, 3, v66);
      v52 = a6;
      goto LABEL_35;
    }
    goto LABEL_24;
  }
  v101 = v55;
  v67 = Logger.UI.unsafeMutableAddressor(v60);
  v63 = v109;
  v68 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v109 + 16))(v15, v67, v61);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = (id)swift_slowAlloc(32, -1);
    v103 = a6;
    v73 = v72;
    aBlock = v72;
    *(_DWORD *)v71 = 136315138;
    v111 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
    v61 = v108;
    v63 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, (uint64_t *)&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s collectionView has 0 visible items. Forcing a layout pass.", v71, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    v74 = v73;
    a6 = v103;
    swift_slowDealloc(v74, -1, -1);
    swift_slowDealloc(v71, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v15, v61);
  v75 = objc_msgSend(a5, "view");
  v64 = v106;
  LODWORD(v55) = v101;
  if (v75)
  {
    v76 = v75;
    objc_msgSend(v75, "layoutIfNeeded");

    v62 = sub_10018C44C(1);
LABEL_24:
    v103 = a6;
    v77 = Logger.UI.unsafeMutableAddressor(v62);
    v78 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v64, v77, v61);
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter(v79);
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v101 = v55;
      v55 = v81;
      v82 = swift_slowAlloc(64, -1);
      v111 = v82;
      *(_DWORD *)v55 = 136315394;
      aBlock = (id)sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v113);
      *(_WORD *)(v55 + 12) = 2080;
      aBlock = 0;
      v113[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease(v113[0]);
      aBlock = (id)0xD00000000000001BLL;
      v113[0] = 0x8000000100515CB0;
      if (v30)
        v83 = 1702195828;
      else
        v83 = 0x65736C6166;
      if (v30)
        v84 = 0xE400000000000000;
      else
        v84 = 0xE500000000000000;
      v85 = v84;
      String.append(_:)(*(Swift::String *)&v83);
      swift_bridgeObjectRelease(v84);
      v86 = v113[0];
      aBlock = (id)sub_1000544FC((uint64_t)aBlock, v113[0], &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v113);
      swift_bridgeObjectRelease(v86);
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy(v82, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v82, -1, -1);
      v87 = v55;
      LOBYTE(v55) = v101;
      swift_slowDealloc(v87, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v109 + 8))(v106, v108);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v64, v61);
    }
    v88 = (void *)objc_opt_self(DOCUISession);
    v89 = swift_allocObject(&unk_1005CD358, 66, 7);
    v90 = v107;
    *(_QWORD *)(v89 + 16) = v107;
    *(_QWORD *)(v89 + 24) = a5;
    v91 = v102;
    v92 = v104;
    *(_QWORD *)(v89 + 32) = v102;
    *(_QWORD *)(v89 + 40) = v92;
    v93 = v110;
    *(_QWORD *)(v89 + 48) = sub_1001CFDA8;
    *(_QWORD *)(v89 + 56) = v93;
    *(_BYTE *)(v89 + 64) = v55;
    *(_BYTE *)(v89 + 65) = v105 & 1;
    v113[3] = (unint64_t)sub_1001CFA70;
    v114 = v89;
    aBlock = _NSConcreteStackBlock;
    v113[0] = 1107296256;
    v113[1] = (unint64_t)sub_10004A82C;
    v113[2] = (unint64_t)&unk_1005CD370;
    v94 = _Block_copy(&aBlock);
    v95 = v114;
    v96 = v90;
    swift_unknownObjectRetain(v91);
    v97 = a5;
    swift_retain();
    objc_msgSend(v88, "performAfterCATransactionCommits:", v94, swift_release(v95).n128_f64[0]);

    _Block_release(v94);
    swift_release_n(v19, 2, v98);
    v50 = v93;
    goto LABEL_34;
  }
LABEL_38:
  swift_release_n(v19, 2, v28);
  _Block_release(a6);
  _Block_release(a6);
  __break(1u);
}

void sub_1001C2D7C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void (*a7)(double, double, double, double), uint64_t a8)
{
  void (**v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *Strong;
  NSObject *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  id v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (**v37)(char *, uint64_t);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(char *, uint64_t);
  uint64_t v51;
  NSObject *v52;
  id v53;
  NSObject *v54;
  NSObject *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject **v60;
  NSObject *v61;
  NSObject *v62;
  NSObject *v63;
  uint64_t v64;
  NSObject *v65;
  NSObject *v66;
  NSObject *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  void *v72;
  uint64_t *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  NSObject *v80;
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  NSObject *v87;
  id v88;
  double v89;
  void *v90;
  double v91;
  double v92;
  double v93;
  NSObject *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  id v112;
  void *v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  NSObject *v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  NSObject **v120;
  NSObject *v121;
  uint64_t v122;
  NSObject **v123;
  uint8_t *v124;
  void (*v125)(double, double, double, double);
  id v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  void *v129;
  NSObject *v130;
  void *v131;
  void (*v132)(double, double, double, double);
  uint64_t v133;
  NSObject *v134;
  void (**v135)(char *, uint64_t);
  NSObject *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE v140[16];
  NSObject *v141;
  uint64_t v142[3];
  char v143[24];
  char v144[32];

  v136 = a1;
  v137 = type metadata accessor for Logger(0);
  v15 = *(void (***)(char *, uint64_t))(v137 - 8);
  __chkstk_darwin(v137);
  v135 = (void (**)(char *, uint64_t))((char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v134 = ((char *)&v127 - v18);
  __chkstk_darwin(v19);
  v21 = ((char *)&v127 - v20);
  __chkstk_darwin(v22);
  v24 = (char *)&v127 - v23;
  a2 += 16;
  swift_beginAccess(a2, v144, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v26 = Strong;
    v131 = a6;
    v132 = a7;
    v133 = a8;
    v27 = -[NSObject view](Strong, "view");
    if (!v27)
    {
      swift_release(v133);
      __break(1u);
      return;
    }
    v28 = v27;
    v29 = sub_100195294(v27);

    *(_QWORD *)&v30 = swift_beginAccess(a3 + 16, v143, 1, 0).n128_u64[0];
    *(_BYTE *)(a3 + 16) = 1;
    v31 = objc_msgSend(v29, "window", v30);

    if (!v31)
    {
      v49 = Logger.UI.unsafeMutableAddressor(v32);
      v50 = v15;
      v51 = v137;
      ((void (*)(char *, uint64_t, uint64_t))v15[2])(v24, v49, v137);
      v52 = v136;
      v53 = v29;
      v54 = v52;
      v55 = v53;
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.error.getter(v56);
      v136 = v56;
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc(32, -1);
        v135 = v50;
        v59 = v58;
        v60 = (NSObject **)swift_slowAlloc(16, -1);
        v134 = swift_slowAlloc(32, -1);
        v142[0] = (uint64_t)v134;
        *(_DWORD *)v59 = 136315650;
        v130 = v26;
        v139 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, v142);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140);
        *(_WORD *)(v59 + 12) = 2112;
        v139 = (uint64_t)v54;
        v61 = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140);
        *v60 = v54;

        *(_WORD *)(v59 + 22) = 2112;
        v139 = (uint64_t)v55;
        v62 = v55;
        v26 = v130;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140);
        v60[1] = v55;

        v63 = v136;
        _os_log_impl((void *)&_mh_execute_header, v136, v57, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v59, 0x20u);
        v64 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v60, 2, v64);
        swift_slowDealloc(v60, -1, -1);
        v65 = v134;
        swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        v135[1](v24, v137);
      }
      else
      {

        v50[1](v24, v51);
      }
      v132(0.0, 0.0, 0.0, 0.0);
      goto LABEL_29;
    }
    v129 = v29;
    v33 = a5 & 1;
    swift_beginAccess(a4 + 16, v142, 0, 0);
    v34 = *(_BYTE *)(a4 + 16);
    v36 = Logger.UI.unsafeMutableAddressor(v35);
    v37 = v15;
    v38 = v15[2];
    v39 = v137;
    v130 = v26;
    v128 = v38;
    if ((v34 & 1) != 0)
    {
      ((void (*)(NSObject *, uint64_t, uint64_t))v38)(v21, v36, v137);
      v40 = v136;
      v41 = v136;
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.debug.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(12, -1);
        v134 = swift_slowAlloc(32, -1);
        v141 = v134;
        *(_DWORD *)v44 = 136315138;
        v45 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v41->isa) + 0x1F8))();
        if (v45)
        {
          v46 = (void *)v45;
          v47 = (uint64_t *)(v45 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess(v45 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v139, 0, 0);
          v48 = *v47;
          swift_unknownObjectRetain(v48);

        }
        else
        {
          v48 = 0;
        }
        v138 = v48;
        v76 = sub_10006922C(&qword_100652EB0);
        v77 = String.init<A>(describing:)(&v138, v76);
        v79 = v78;
        v138 = sub_1000544FC(v77, v78, (uint64_t *)&v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139);

        swift_bridgeObjectRelease(v79);
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Timed out (250ms) re-fetching thumbnail for %s", v44, 0xCu);
        v80 = v134;
        swift_arrayDestroy(v134, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v80, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        v75 = v37[1];
        v81 = v21;
LABEL_21:
        v39 = v137;
        v75((char *)v81, v137);
        v40 = v136;
        goto LABEL_22;
      }

      v75 = v37[1];
      v75((char *)v21, v39);
    }
    else
    {
      v66 = v134;
      ((void (*)(NSObject *, uint64_t, uint64_t))v38)(v134, v36, v137);
      v40 = v136;
      v67 = v136;
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.debug.getter(v68);
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc(12, -1);
        v127 = swift_slowAlloc(32, -1);
        v141 = v127;
        *(_DWORD *)v70 = 136315138;
        v71 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v67->isa) + 0x1F8))();
        if (v71)
        {
          v72 = (void *)v71;
          v73 = (uint64_t *)(v71 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess(v71 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v139, 0, 0);
          v74 = *v73;
          swift_unknownObjectRetain(*v73);

        }
        else
        {
          v74 = 0;
        }
        v138 = v74;
        v82 = sub_10006922C(&qword_100652EB0);
        v83 = String.init<A>(describing:)(&v138, v82);
        v85 = v84;
        v138 = sub_1000544FC(v83, v84, (uint64_t *)&v141);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139);

        swift_bridgeObjectRelease(v85);
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "Updated thumbnail for %s", v70, 0xCu);
        v86 = v127;
        swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v86, -1, -1);
        swift_slowDealloc(v70, -1, -1);

        v75 = v37[1];
        v81 = v134;
        goto LABEL_21;
      }

      v75 = v37[1];
      v75((char *)v66, v39);
    }
LABEL_22:
    v87 = *(NSObject **)((char *)&v40->isa + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    -[NSObject addDecoration](v87, "addDecoration");
    v88 = -[NSObject layoutIfNeeded](v87, "layoutIfNeeded");
    v89 = (*(double (**)(id))((swift_isaMask & (uint64_t)v40->isa) + 0x100))(v88);
    v90 = v129;
    sub_100191C18(v40, v129, v33, v89, v91, v92, v93);
    v136 = v94;
    v96 = v95;
    v98 = v97;
    v100 = v99;
    -[NSObject _continuousCornerRadius](v87, "_continuousCornerRadius");
    v102 = v101;
    -[NSObject bounds](v87, "bounds");
    v107 = v105;
    v108 = v106;
    if (v102 <= 0.0)
    {
      v112 = sub_1001BD5E0(v131, v105, v106);
    }
    else
    {
      v109 = v103;
      v110 = v104;
      -[NSObject _continuousCornerRadius](v87, "_continuousCornerRadius");
      v112 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v109, v110, v107, v108, v111);
    }
    v113 = v112;
    v114 = v128;
    v115 = Logger.UI.unsafeMutableAddressor(v112);
    ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t))v114)(v135, v115, v39);
    v116 = v40;
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.debug.getter(v117);
    if (os_log_type_enabled(v117, v118))
    {
      v134 = v87;
      v119 = (uint8_t *)swift_slowAlloc(12, -1);
      v120 = (NSObject **)swift_slowAlloc(8, -1);
      v131 = v113;
      *(_DWORD *)v119 = 138412290;
      v141 = v116;
      v121 = v116;
      v87 = v134;
      v113 = v131;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142);
      *v120 = v116;

      _os_log_impl((void *)&_mh_execute_header, v117, v118, "calling completion block with cell %@", v119, 0xCu);
      v122 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v120, 1, v122);
      v123 = v120;
      v39 = v137;
      swift_slowDealloc(v123, -1, -1);
      v124 = v119;
      v90 = v129;
      swift_slowDealloc(v124, -1, -1);
    }
    else
    {

      v117 = v116;
    }
    v125 = v132;

    v75((char *)v135, v39);
    v126 = -[NSObject image](v87, "image");
    v55 = v113;
    v125(*(double *)&v136, v96, v98, v100);

    v26 = v55;
LABEL_29:

  }
}

void sub_1001C3900(void *a1, char *a2, NSObject *a3, void **a4, int a5, int a6, void (*a7)(double, double, double, double), uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  Class isa;
  id v51;
  char *v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  char v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void **v61;
  NSObject *v62;
  os_log_type_t v63;
  BOOL v64;
  uint8_t *v65;
  void **v66;
  uint64_t v67;
  void *v68;
  uint64_t *v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  void *object;
  Swift::String v75;
  __n128 v76;
  void *v77;
  id v78;
  uint64_t v79;
  NSObject *v80;
  Swift::String v81;
  void *v82;
  Swift::String v83;
  unint64_t v84;
  void **v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void **v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  NSObject *v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  id v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  NSObject *v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  NSObject **v126;
  void *v127;
  NSObject *v128;
  id v129;
  NSObject *v130;
  os_log_t v131;
  uint64_t v132;
  void **v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  void **v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  os_log_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t ObjectType;
  _QWORD *v157;
  NSObject *v158;
  void *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  void (*v167)(_QWORD *, _QWORD, uint64_t);
  uint64_t v168;
  char *v169;
  void (*v170)(_QWORD *, uint64_t);
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  void (*v175)(char *, char *, void **);
  char *v176;
  void **v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  void *v186;
  void **v187;
  _QWORD *v188;
  uint64_t v189;
  os_log_t v190;
  void (*v191)(double, double, double, double);
  id v192;
  __n128 v193;
  uint64_t v194;
  __n128 v195;
  void *v196;
  __n128 v197;
  void *v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  char *v221;
  int v222;
  char *v223;
  uint64_t v224;
  void **v225;
  os_log_t v226;
  void **v227;
  void (*v228)(double, double, double, double);
  void **v229;
  uint64_t v230;
  NSObject *v231;
  uint64_t v232;
  NSObject *v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  NSObject *v237;
  char v238[8];
  void **aBlock;
  unint64_t v240;
  uint64_t (*v241)(uint64_t);
  void *v242;
  uint64_t (*v243)();
  _QWORD *v244;

  v222 = a6;
  LODWORD(v224) = a5;
  v225 = a4;
  v235 = a2;
  v220 = type metadata accessor for DispatchTimeInterval(0);
  v215 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v219 = (void **)((char *)&v198 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v218 = (void **)((char *)&v198 - v14);
  v217 = type metadata accessor for DispatchTime(0);
  v214 = *(_QWORD *)(v217 - 8);
  __chkstk_darwin(v217);
  v213 = (char *)&v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v216 = (char *)&v198 - v17;
  v210 = type metadata accessor for DispatchWorkItemFlags(0);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v208 = (char *)&v198 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for DispatchQoS(0);
  v206 = *(_QWORD *)(v207 - 8);
  v19 = __chkstk_darwin(v207);
  v205 = (char *)&v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for OS_dispatch_source.TimerFlags(0, v19);
  v203 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v202 = (char *)&v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for Logger(0);
  v234 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v233 = ((char *)&v198 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  v221 = (char *)&v198 - v24;
  __chkstk_darwin(v25);
  v223 = (char *)&v198 - v26;
  v27 = type metadata accessor for IndexPath(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v212 = (char *)&v198 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v198 - v31;
  v227 = (void **)sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v227);
  v34 = (char *)&v198 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v198 - v36;
  __chkstk_darwin(v38);
  v40 = (char *)&v198 - v39;
  v41 = swift_allocObject(&unk_1005CD178, 32, 7);
  v228 = a7;
  *(_QWORD *)(v41 + 16) = a7;
  *(_QWORD *)(v41 + 24) = a8;
  v230 = a8;
  v231 = v41;
  swift_retain_n(a8, 2);
  v42 = objc_msgSend(a1, "indexPathsForVisibleItems");
  v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v27);

  v44 = v235;
  swift_unknownObjectRetain(a3);
  v229 = v44;
  v226 = a3;
  sub_100174744(v43, v44, (uint64_t)a3, v40);
  v45 = v43;
  v46 = v28;
  swift_bridgeObjectRelease(v45);
  v235 = v40;
  v47 = (uint64_t)v40;
  v48 = (void **)v27;
  sub_1000271D4(v47, (uint64_t)v37, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v37, 1, v27) == 1)
  {
    sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_100642710);
    v49 = v232;
LABEL_11:
    aBlock = 0;
    v240 = 0xE000000000000000;
    _StringGuts.grow(_:)(102);
    v71._object = (void *)0x8000000100515CD0;
    v71._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v71);
    v72._countAndFlagsBits = 0xD000000000000019;
    v72._object = (void *)0x8000000100515CF0;
    String.append(_:)(v72);
    sub_1000271D4((uint64_t)v235, (uint64_t)v34, (uint64_t *)&unk_100642710);
    v73._countAndFlagsBits = String.init<A>(describing:)(v34, v227);
    object = v73._object;
    String.append(_:)(v73);
    swift_bridgeObjectRelease(object);
    v75._countAndFlagsBits = 0xD00000000000002DLL;
    v75._object = (void *)0x8000000100515D10;
    String.append(_:)(v75);
    v57 = v229;
    objc_msgSend(v229, "loadViewIfNeeded");
    v77 = *(void **)((char *)v57 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v77)
    {
      v78 = objc_msgSend(v77, "indexPathsForVisibleItems");
      v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v48);

      v80 = *(NSObject **)(v79 + 16);
      swift_bridgeObjectRelease(v79);
      v237 = v80;
      v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v82 = v81._object;
      String.append(_:)(v81);
      swift_bridgeObjectRelease(v82);
      v83._countAndFlagsBits = 0xD00000000000001ALL;
      v83._object = (void *)0x8000000100515D40;
      String.append(_:)(v83);
      v85 = aBlock;
      v84 = v240;
      v86 = sub_10012B03C((uint64_t)aBlock, v240);
      v87 = Logger.UI.unsafeMutableAddressor(v86);
      v88 = v233;
      v89 = v234;
      (*(void (**)(NSObject *, uint64_t, uint64_t))(v234 + 16))(v233, v87, v49);
      v90 = swift_bridgeObjectRetain(v84);
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.error.getter(v91);
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc(12, -1);
        v94 = (void **)swift_slowAlloc(32, -1);
        aBlock = v94;
        *(_DWORD *)v93 = 136315138;
        swift_bridgeObjectRetain(v84);
        v237 = sub_1000544FC((uint64_t)v85, v84, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v237, v238);
        swift_bridgeObjectRelease_n(v84, 3);
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s", v93, 0xCu);
        swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v94, -1, -1);
        swift_slowDealloc(v93, -1, -1);

        (*(void (**)(NSObject *, uint64_t))(v234 + 8))(v233, v49);
      }
      else
      {

        swift_bridgeObjectRelease_n(v84, 2);
        (*(void (**)(NSObject *, uint64_t))(v89 + 8))(v88, v49);
      }
      v95 = v230;
      a3 = v231;
      v228(0.0, 0.0, 0.0, 0.0);
LABEL_16:
      sub_10000CB4C((uint64_t)v235, (uint64_t *)&unk_100642710);
      v96 = v95;
      goto LABEL_17;
    }
    swift_release_n(v230, 2, v76);
    __break(1u);
    goto LABEL_34;
  }
  v201 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v201(v32, v37, v27);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  v52 = v32;
  v49 = v232;
  if (!v51)
  {
LABEL_10:
    (*(void (**)(char *, void **))(v46 + 8))(v52, v48);
    goto LABEL_11;
  }
  v53 = a1;
  v54 = type metadata accessor for DOCItemCollectionCell();
  v55 = swift_dynamicCastClass(v51, v54);
  if (!v55)
  {

    goto LABEL_10;
  }
  v56 = v224 & 1;
  v233 = v55;
  v57 = v225;
  if (!v225)
  {
    LODWORD(v225) = v224 & 1;
    v58 = Logger.UI.unsafeMutableAddressor(v55);
    v59 = v234;
    v60 = v223;
    (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v223, v58, v49);
    v61 = (void **)v51;
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.debug.getter(v62);
    v64 = os_log_type_enabled(v62, v63);
    v227 = v61;
    v200 = v46;
    v199 = v52;
    v198 = v53;
    if (v64)
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = (void **)swift_slowAlloc(32, -1);
      aBlock = v66;
      *(_DWORD *)v65 = 136315138;
      v67 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v233->isa) + 0x1F8))();
      if (v67)
      {
        v68 = (void *)v67;
        v69 = (uint64_t *)(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v237, 0, 0);
        v70 = *v69;
        swift_unknownObjectRetain(*v69);

      }
      else
      {
        v70 = 0;
      }
      v236 = v70;
      v135 = sub_10006922C(&qword_100652EB0);
      v136 = String.init<A>(describing:)(&v236, v135);
      v138 = v137;
      v236 = sub_1000544FC(v136, v137, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, &v237);
      v139 = v227;

      swift_bridgeObjectRelease(v138);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v65, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v234 + 8))(v223, v232);
      v114 = v231;
      v46 = v200;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v49);
      v114 = v231;
    }
    v140 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v140 + 16) = 0;
    v141 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v141 + 16) = 0;
    v142 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v142 + 16);
    v143 = swift_allocObject(&unk_1005CD1A0, 72, 7);
    *(_QWORD *)(v143 + 16) = v142;
    *(_QWORD *)(v143 + 24) = v141;
    *(_QWORD *)(v143 + 32) = sub_1001D26C4;
    *(_QWORD *)(v143 + 40) = v114;
    *(_QWORD *)(v143 + 48) = v140;
    v144 = (char)v225;
    *(_BYTE *)(v143 + 56) = (_BYTE)v225;
    v145 = v226;
    *(_QWORD *)(v143 + 64) = v226;
    if ((v222 & 1) == 0)
    {
      v194 = v230;
      swift_retain();
      swift_unknownObjectRetain(v145);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001C2D7C(v233, v142, v141, v140, v144, v145, v228, v194);

      swift_release(v142);
      swift_release(v143);
      v195 = swift_release(v194);
      (*(void (**)(char *, void **, __n128))(v46 + 8))(v199, v48, v195);
      sub_10000CB4C((uint64_t)v235, (uint64_t *)&unk_100642710);
      swift_release(v194);
      swift_release(v114);
      swift_release(v140);
      a3 = v141;
      goto LABEL_18;
    }
    sub_10004F2F0(0, &qword_100646AD8, OS_dispatch_source_ptr);
    v234 = v141;
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    swift_unknownObjectRetain(v145);
    swift_retain();
    swift_retain();
    swift_retain();
    v147 = (void *)static OS_dispatch_queue.main.getter(v146);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v148 = sub_10005A360(&qword_100646AE0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v149 = sub_10006922C(&qword_100646AE8);
    v150 = sub_100062698((unint64_t *)&unk_100646AF0, &qword_100646AE8, (uint64_t)&protocol conformance descriptor for [A]);
    v151 = v140;
    v152 = v202;
    v153 = v204;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v149, v150, v204, v148);
    v154 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v152, v147);
    v229 = v48;
    v155 = v154;

    (*(void (**)(char *, uint64_t))(v203 + 8))(v152, v153);
    ObjectType = swift_getObjectType(v155);
    v157 = (_QWORD *)swift_allocObject(&unk_1005CD1C8, 48, 7);
    v232 = v151;
    v157[2] = v151;
    v157[3] = sub_1001CFA88;
    v158 = v233;
    v157[4] = v143;
    v157[5] = v158;
    v243 = sub_1001CFA90;
    v244 = v157;
    aBlock = _NSConcreteStackBlock;
    v240 = 1107296256;
    v241 = sub_10004A82C;
    v242 = &unk_1005CD1E0;
    v159 = _Block_copy(&aBlock);
    v228 = v227;
    swift_retain();
    swift_retain();
    v160 = v205;
    static DispatchQoS.unspecified.getter(v161);
    v162 = v208;
    sub_100193FCC();
    v224 = ObjectType;
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v160, v162, v159, ObjectType);
    _Block_release(v159);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v162, v210);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v160, v207);
    swift_release(v244);
    v225 = (void **)v155;
    OS_dispatch_source.resume()();
    v163 = v213;
    static DispatchTime.now()(v164);
    v165 = v218;
    *v218 = 250;
    v166 = v215;
    v167 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v215 + 104);
    v168 = v220;
    v167(v165, enum case for DispatchTimeInterval.milliseconds(_:), v220);
    v169 = v216;
    + infix(_:_:)(v163, v165);
    v170 = *(void (**)(_QWORD *, uint64_t))(v166 + 8);
    v170(v165, v168);
    v171 = *(void (**)(char *, uint64_t))(v214 + 8);
    v172 = v217;
    v171(v163, v217);
    v167(v165, enum case for DispatchTimeInterval.never(_:), v168);
    v173 = v219;
    *v219 = 0;
    v167(v173, enum case for DispatchTimeInterval.nanoseconds(_:), v168);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v169, v165, v173, v224);
    v170(v173, v168);
    v170(v165, v168);
    v171(v169, v172);
    v227 = (void **)swift_getObjectType(v226);
    v174 = v200;
    v175 = *(void (**)(char *, char *, void **))(v200 + 16);
    v224 = v143;
    v176 = v212;
    v177 = v229;
    v175(v212, v199, v229);
    v178 = *(unsigned __int8 *)(v174 + 80);
    v179 = (v178 + 24) & ~v178;
    v180 = (v211 + v179 + 7) & 0xFFFFFFFFFFFFFFF8;
    v181 = (v180 + 15) & 0xFFFFFFFFFFFFFFF8;
    v182 = (v181 + 23) & 0xFFFFFFFFFFFFFFF8;
    v183 = (v182 + 15) & 0xFFFFFFFFFFFFFFF8;
    v184 = (v183 + 15) & 0xFFFFFFFFFFFFFFF8;
    v185 = swift_allocObject(&unk_1005CD218, v184 + 8, v178 | 7);
    v186 = v198;
    *(_QWORD *)(v185 + 16) = v198;
    v201((char *)(v185 + v179), v176, (uint64_t)v177);
    v187 = v225;
    *(_QWORD *)(v185 + v180) = v225;
    v188 = (_QWORD *)(v185 + v181);
    v189 = v224;
    *v188 = sub_1001CFA88;
    v188[1] = v189;
    a3 = v234;
    *(_QWORD *)(v185 + v182) = v233;
    v190 = v226;
    *(_QWORD *)(v185 + v183) = v226;
    *(_QWORD *)(v185 + v184) = a3;
    swift_unknownObjectRetain(v190);
    v191 = v228;
    swift_retain();
    swift_retain();
    v192 = v186;
    swift_unknownObjectRetain(v187);
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1001CFA98, v185, v227);

    swift_release(v189);
    swift_unknownObjectRelease(v187);
    v193 = swift_release(v185);
    (*(void (**)(char *, void **, __n128))(v200 + 8))(v199, v177, v193);
    sub_10000CB4C((uint64_t)v235, (uint64_t *)&unk_100642710);
    swift_release(v230);
    swift_release(v231);
    v96 = v232;
LABEL_17:
    swift_release(v96);
LABEL_18:
    swift_release(a3);
    return;
  }
  a3 = v231;
  if (v225 == (void **)1)
  {
    v97 = sub_100195294(v53);
    v98 = objc_msgSend(v97, "window");

    if (v98)
    {
      v100 = v233;
      -[NSObject bounds](v233, "bounds");
      sub_100191C18(v100, v97, v56, v101, v102, v103, v104);
      v106 = v105;
      v108 = v107;
      v110 = v109;
      v112 = v111;
      v113 = v51;
      v95 = v230;
      v228(v106, v108, v110, v112);

      (*(void (**)(char *, void **))(v46 + 8))(v52, v48);
    }
    else
    {
      v199 = v52;
      v200 = v46;
      v115 = Logger.UI.unsafeMutableAddressor(v99);
      v116 = v234;
      v117 = v221;
      v118 = v232;
      (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v221, v115, v232);
      v119 = v51;
      v120 = v97;
      v121 = v119;
      v122 = v120;
      v123 = Logger.logObject.getter(v122);
      v124 = static os_log_type_t.error.getter(v123);
      if (os_log_type_enabled(v123, v124))
      {
        v125 = swift_slowAlloc(32, -1);
        v126 = (NSObject **)swift_slowAlloc(16, -1);
        v227 = (void **)swift_slowAlloc(32, -1);
        aBlock = v227;
        *(_DWORD *)v125 = 136315650;
        v237 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v237, v238);
        *(_WORD *)(v125 + 12) = 2112;
        v229 = v48;
        v226 = v123;
        v127 = v121;
        v128 = v233;
        v237 = v233;
        v129 = v127;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v237, v238);
        *v126 = v128;
        v121 = v127;

        *(_WORD *)(v125 + 22) = 2112;
        v237 = v122;
        v130 = v122;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v237, v238);
        v126[1] = v122;

        v48 = v229;
        v131 = v226;
        _os_log_impl((void *)&_mh_execute_header, v226, v124, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v125, 0x20u);
        v132 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v126, 2, v132);
        swift_slowDealloc(v126, -1, -1);
        v133 = v227;
        swift_arrayDestroy(v227, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v133, -1, -1);
        v134 = v125;
        a3 = v231;
        swift_slowDealloc(v134, -1, -1);

        (*(void (**)(char *, uint64_t))(v234 + 8))(v221, v232);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
      }
      v95 = v230;
      v228(0.0, 0.0, 0.0, 0.0);

      (*(void (**)(char *, void **))(v200 + 8))(v199, v48);
    }
    goto LABEL_16;
  }
LABEL_34:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  v242 = v196;
  swift_release_n(v230, 2, v197);
  swift_release(a3);
  aBlock = v57;
  doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(&aBlock);
  __break(1u);
}

void sub_1001C4D94(NSObject *a1, void **a2, int a3, char a4, char *a5, uint64_t (*a6)(double, double, double, double), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint8_t *v74;
  id v75;
  void *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void *v91;
  NSObject *v92;
  void **v93;
  void *v94;
  uint64_t v95;
  id v96;
  char *v97;
  uint64_t v98;
  _BYTE v99[12];
  int v100;
  void *v101;
  NSObject *v102;
  void **v103;
  int v104;
  uint64_t v105;
  char *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *aBlock;
  unint64_t v112[4];
  uint64_t v113;
  uint64_t v114;
  _BYTE v115[24];

  v104 = a3;
  v103 = a2;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v107 = &v99[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v99[-v16];
  __chkstk_darwin(v18);
  v20 = &v99[-v19];
  v21 = swift_allocObject(&unk_1005CD100, 32, 7);
  v22 = v21;
  *(_QWORD *)(v21 + 16) = a6;
  *(_QWORD *)(v21 + 24) = a7;
  v106 = a5;
  v23 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
  {
    swift_retain_n(a7, 2);
    v35 = a6(0.0, 0.0, 0.0, 0.0);
    v36 = Logger.UI.unsafeMutableAddressor(v35);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v20, v36, v12);
    v37 = swift_unknownObjectRetain_n(a1, 2);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    v40 = v39;
    v41 = v12;
    if (os_log_type_enabled(v38, v39))
    {
      v42 = swift_slowAlloc(22, -1);
      v107 = (_BYTE *)swift_slowAlloc(64, -1);
      aBlock = v107;
      *(_DWORD *)v42 = 136315394;
      v108 = v41;
      v114 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
      *(_QWORD *)&v43 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115).n128_u64[0];
      *(_WORD *)(v42 + 12) = 2080;
      v44 = -[NSObject description](a1, "description", v43);
      v109 = a7;
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      LODWORD(v106) = v40;
      v47 = v46;
      v105 = v22;
      v49 = v48;

      v114 = sub_1000544FC(v47, v49, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v106, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v42, 0x16u);
      v50 = v107;
      swift_arrayDestroy(v107, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v20, v108);
      swift_release(v109);
      v51 = v105;
LABEL_36:
      swift_release(v51);
      return;
    }

    swift_unknownObjectRelease_n(a1, 2);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v20, v12);
LABEL_35:
    swift_release(a7);
    v51 = v22;
    goto LABEL_36;
  }
  v108 = v12;
  v102 = a1;
  v105 = v21;
  v24 = qword_100640F50;
  swift_retain_n(a7, 2);
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_100640F50, sub_1002A22DC);
  v109 = a7;
  v26 = (void *)qword_100672B20;
  v27 = (uint64_t *)(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions, &v114, 0, 0);
  v28 = *v27;
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    v30 = v26;
    swift_bridgeObjectRetain(v28);
    if (v29)
      goto LABEL_6;
LABEL_16:

    v34 = swift_bridgeObjectRelease(v28).n128_u64[0];
    v33 = 0;
LABEL_17:
    a7 = v109;
    goto LABEL_18;
  }
  if (v28 < 0)
    v52 = v28;
  else
    v52 = v28 & 0xFFFFFFFFFFFFFF8;
  v53 = v26;
  swift_bridgeObjectRetain(v28);
  if (!_CocoaArrayWrapper.endIndex.getter(v52))
    goto LABEL_16;
LABEL_6:
  if ((v28 & 0xC000000000000001) != 0)
  {
    v98 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
    swift_bridgeObjectRelease(v28);
    v33 = *(unsigned __int8 *)(v98 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    v34 = swift_unknownObjectRelease(v98).n128_u64[0];
    goto LABEL_17;
  }
  a7 = v109;
  if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_39;
  }
  v32 = *(_QWORD *)(v28 + 32);
  swift_retain();
  swift_bridgeObjectRelease(v28);
  v33 = *(unsigned __int8 *)(v32 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

  v34 = swift_release(v32).n128_u64[0];
LABEL_18:
  v54 = a4 & 1;
  v101 = v25;
  v55 = objc_msgSend(v25, "indexPathsForVisibleItems", *(double *)&v34);
  v56 = type metadata accessor for IndexPath(0);
  v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

  v58 = *(_QWORD *)(v57 + 16);
  swift_bridgeObjectRelease(v57);
  if (v58)
  {
    v60 = v106;
    v61 = sub_10018C44C(1);
    v62 = v108;
    v63 = v13;
    v64 = v60;
    if (!v33)
    {
      swift_retain();
      v65 = v101;
      sub_1001C3900(v101, v60, v102, v103, v54, v104 & 1, (void (*)(double, double, double, double))a6, a7);
      swift_release(v105);

      swift_release_n(a7, 2, v66);
      return;
    }
    goto LABEL_25;
  }
  v67 = Logger.UI.unsafeMutableAddressor(v59);
  v63 = v13;
  v62 = v108;
  v68 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v17, v67, v108);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = swift_slowAlloc(32, -1);
    aBlock = (_BYTE *)v72;
    *(_DWORD *)v71 = 136315138;
    v110 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &aBlock);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s collectionView has 0 visible items. Forcing a layout pass.", v71, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    v73 = v72;
    a7 = v109;
    swift_slowDealloc(v73, -1, -1);
    v74 = v71;
    v62 = v108;
    swift_slowDealloc(v74, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v17, v62);
  v64 = v106;
  v75 = objc_msgSend(v106, "view");
  if (v75)
  {
    v76 = v75;
    objc_msgSend(v75, "layoutIfNeeded");

    v61 = sub_10018C44C(1);
LABEL_25:
    v100 = v54;
    v77 = Logger.UI.unsafeMutableAddressor(v61);
    v78 = v107;
    v79 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v107, v77, v62);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.debug.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc(22, -1);
      v83 = swift_slowAlloc(64, -1);
      v110 = v83;
      *(_DWORD *)v82 = 136315394;
      aBlock = (_BYTE *)sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v112);
      *(_WORD *)(v82 + 12) = 2080;
      aBlock = 0;
      v112[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease(v112[0]);
      aBlock = (_BYTE *)0xD00000000000001BLL;
      v112[0] = 0x8000000100515CB0;
      if (v33)
        v84 = 1702195828;
      else
        v84 = 0x65736C6166;
      if (v33)
        v85 = 0xE400000000000000;
      else
        v85 = 0xE500000000000000;
      v86 = v85;
      String.append(_:)(*(Swift::String *)&v84);
      swift_bridgeObjectRelease(v85);
      v87 = v112[0];
      aBlock = (_BYTE *)sub_1000544FC((uint64_t)aBlock, v112[0], &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v112);
      swift_bridgeObjectRelease(v87);
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
      v88 = v83;
      a7 = v109;
      swift_slowDealloc(v88, -1, -1);
      swift_slowDealloc(v82, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v107, v108);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v78, v62);
    }
    v89 = (void *)objc_opt_self(DOCUISession);
    v90 = swift_allocObject(&unk_1005CD128, 66, 7);
    v91 = v101;
    v92 = v102;
    *(_QWORD *)(v90 + 16) = v101;
    *(_QWORD *)(v90 + 24) = v64;
    v93 = v103;
    *(_QWORD *)(v90 + 32) = v92;
    *(_QWORD *)(v90 + 40) = v93;
    v22 = v105;
    *(_QWORD *)(v90 + 48) = sub_1001CFA64;
    *(_QWORD *)(v90 + 56) = v22;
    *(_BYTE *)(v90 + 64) = v100;
    *(_BYTE *)(v90 + 65) = v104 & 1;
    v112[3] = (unint64_t)sub_1001CFA70;
    v113 = v90;
    aBlock = _NSConcreteStackBlock;
    v112[0] = 1107296256;
    v112[1] = (unint64_t)sub_10004A82C;
    v112[2] = (unint64_t)&unk_1005CD140;
    v94 = _Block_copy(&aBlock);
    v95 = v113;
    v96 = v91;
    swift_unknownObjectRetain(v92);
    v97 = v64;
    swift_retain();
    objc_msgSend(v89, "performAfterCATransactionCommits:", v94, swift_release(v95).n128_f64[0]);

    _Block_release(v94);
    goto LABEL_35;
  }
LABEL_39:
  swift_release_n(a7, 2, v31);
  __break(1u);
}

void sub_1001C571C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void (*a7)(id, NSObject *, double, double, double, double), uint64_t a8)
{
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *Strong;
  char *v26;
  id v27;
  void *v28;
  id v29;
  double v30;
  id v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void (**v48)(char *, uint64_t);
  uint64_t v49;
  NSObject *v50;
  id v51;
  NSObject *v52;
  NSObject *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject **v58;
  NSObject *v59;
  char *v60;
  NSObject *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  NSObject *v65;
  NSObject *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  void (**v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  void *v85;
  unint64_t v86;
  char *v87;
  double v88;
  NSObject *v89;
  void *v90;
  id v91;
  double v92;
  void *v93;
  double v94;
  double v95;
  double v96;
  char *v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  id v115;
  uint64_t v116;
  NSObject *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  NSObject **v121;
  NSObject *v122;
  uint64_t v123;
  NSObject **v124;
  uint8_t *v125;
  void (*v126)(id, NSObject *, double, double, double, double);
  id v127;
  void (*v128)(char *, uint64_t);
  int v129;
  void *v130;
  void *v131;
  char *v132;
  void (*v133)(id, NSObject *, double, double, double, double);
  uint64_t v134;
  char *v135;
  void (**v136)(char *, uint64_t);
  NSObject *v137;
  uint64_t v138;
  _BYTE v139[24];
  uint64_t v140;
  char *v141;
  _BYTE v142[16];
  uint64_t v143[3];
  char v144[24];
  char v145[32];

  v137 = a1;
  v138 = type metadata accessor for Logger(0);
  v15 = *(char **)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (void (**)(char *, uint64_t))((char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v135 = (char *)&v128 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v128 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v128 - v23;
  a2 += 16;
  swift_beginAccess(a2, v145, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v26 = Strong;
    v131 = a6;
    v133 = a7;
    v134 = a8;
    v27 = objc_msgSend(Strong, "view");
    if (v27)
    {
      v28 = v27;
      v29 = sub_100195294(v27);

      *(_QWORD *)&v30 = swift_beginAccess(a3 + 16, v144, 1, 0).n128_u64[0];
      *(_BYTE *)(a3 + 16) = 1;
      v31 = objc_msgSend(v29, "window", v30);

      if (v31)
      {
        v130 = v29;
        v129 = a5 & 1;
        swift_beginAccess(a4 + 16, v143, 0, 0);
        v33 = *(_BYTE *)(a4 + 16);
        v35 = Logger.UI.unsafeMutableAddressor(v34);
        v36 = v15;
        v37 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v15 + 2);
        v38 = v138;
        v132 = v26;
        if ((v33 & 1) != 0)
        {
          v37(v21, v35, v138);
          v39 = v137;
          v40 = Logger.logObject.getter(v39);
          v41 = static os_log_type_t.debug.getter(v40);
          if (os_log_type_enabled(v40, v41))
          {
            v42 = (uint8_t *)swift_slowAlloc(12, -1);
            v135 = (char *)swift_slowAlloc(32, -1);
            v141 = v135;
            *(_DWORD *)v42 = 136315138;
            v43 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v39->isa) + 0x1F8))();
            if (v43)
            {
              v44 = (void *)v43;
              v45 = (uint64_t *)(v43 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
              swift_beginAccess(v43 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v139, 0, 0);
              v46 = *v45;
              swift_unknownObjectRetain(v46);

            }
            else
            {
              v46 = 0;
            }
            v140 = v46;
            v74 = sub_10006922C(&qword_100652EB0);
            v75 = String.init<A>(describing:)(&v140, v74);
            v77 = v76;
            v140 = sub_1000544FC(v75, v76, (uint64_t *)&v141);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, &v141);

            swift_bridgeObjectRelease(v77);
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Timed out (250ms) re-fetching thumbnail for %s", v42, 0xCu);
            v78 = v135;
            swift_arrayDestroy(v135, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v78, -1, -1);
            swift_slowDealloc(v42, -1, -1);

            v38 = v138;
            v128 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
            v128(v21, v138);
            v26 = v132;
          }
          else
          {

            v128 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
            v128(v21, v38);
          }
          v79 = v136;
          v65 = v137;
        }
        else
        {
          v64 = v135;
          v37(v135, v35, v138);
          v65 = v137;
          v66 = v137;
          v67 = Logger.logObject.getter(v66);
          v68 = static os_log_type_t.debug.getter(v67);
          if (os_log_type_enabled(v67, v68))
          {
            v69 = (uint8_t *)swift_slowAlloc(12, -1);
            v128 = (void (*)(char *, uint64_t))swift_slowAlloc(32, -1);
            v141 = (char *)v128;
            *(_DWORD *)v69 = 136315138;
            v70 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v66->isa) + 0x1F8))();
            if (v70)
            {
              v71 = (void *)v70;
              v72 = (uint64_t *)(v70 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
              swift_beginAccess(v70 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v139, 0, 0);
              v73 = *v72;
              swift_unknownObjectRetain(*v72);

            }
            else
            {
              v73 = 0;
            }
            v140 = v73;
            v80 = sub_10006922C(&qword_100652EB0);
            v81 = String.init<A>(describing:)(&v140, v80);
            v83 = v82;
            v140 = sub_1000544FC(v81, v82, (uint64_t *)&v141);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, &v141);

            swift_bridgeObjectRelease(v83);
            _os_log_impl((void *)&_mh_execute_header, v67, v68, "Updated thumbnail for %s", v69, 0xCu);
            v84 = v128;
            swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v84, -1, -1);
            swift_slowDealloc(v69, -1, -1);

            v38 = v138;
            v128 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
            v128(v135, v138);
            v26 = v132;
          }
          else
          {

            v128 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
            v128(v64, v38);
          }
          v79 = v136;
        }
        v85 = *(Class *)((char *)&v65->isa + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
        v86 = objc_msgSend(v85, "addDecoration");
        v87 = &v26[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        *(_QWORD *)&v88 = swift_beginAccess(&v26[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], &v141, 0, 0).n128_u64[0];
        if ((unint64_t)(*(_QWORD *)v87 - 1) >= 2)
          v89 = v86;
        else
          v89 = (v86 | 2);
        v137 = v89;
        v90 = v85;
        v91 = objc_msgSend(v85, "layoutIfNeeded", v88);
        v92 = (*(double (**)(id))((swift_isaMask & (uint64_t)v65->isa) + 0x100))(v91);
        v93 = v130;
        sub_100191C18(v65, v130, v129, v92, v94, v95, v96);
        v135 = v97;
        v99 = v98;
        v101 = v100;
        v103 = v102;
        objc_msgSend(v90, "_continuousCornerRadius");
        v105 = v104;
        objc_msgSend(v90, "bounds");
        v110 = v108;
        v111 = v109;
        if (v105 <= 0.0)
        {
          v115 = sub_1001BD5E0(v131, v108, v109);
        }
        else
        {
          v112 = v106;
          v113 = v107;
          objc_msgSend(v90, "_continuousCornerRadius");
          v115 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v112, v113, v110, v111, v114);
        }
        v131 = v115;
        v116 = Logger.UI.unsafeMutableAddressor(v115);
        v37((char *)v79, v116, v38);
        v117 = v65;
        v118 = Logger.logObject.getter(v117);
        v119 = static os_log_type_t.debug.getter(v118);
        if (os_log_type_enabled(v118, v119))
        {
          v120 = (uint8_t *)swift_slowAlloc(12, -1);
          v121 = (NSObject **)swift_slowAlloc(8, -1);
          *(_DWORD *)v120 = 138412290;
          v140 = (uint64_t)v117;
          v122 = v117;
          v79 = v136;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, &v141);
          *v121 = v117;

          _os_log_impl((void *)&_mh_execute_header, v118, v119, "calling completion block with cell %@", v120, 0xCu);
          v123 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v121, 1, v123);
          v124 = v121;
          v38 = v138;
          swift_slowDealloc(v124, -1, -1);
          v125 = v120;
          v93 = v130;
          swift_slowDealloc(v125, -1, -1);
        }
        else
        {

          v118 = v117;
        }
        v126 = v133;

        v128((char *)v79, v38);
        v127 = objc_msgSend(v90, "image");
        v53 = v131;
        v126(v127, v137, *(double *)&v135, v99, v101, v103);

        v26 = (char *)v53;
      }
      else
      {
        v47 = Logger.UI.unsafeMutableAddressor(v32);
        v48 = (void (**)(char *, uint64_t))v15;
        v49 = v138;
        (*((void (**)(char *, uint64_t, uint64_t))v15 + 2))(v24, v47, v138);
        v50 = v137;
        v51 = v29;
        v52 = v50;
        v53 = v51;
        v54 = Logger.logObject.getter(v53);
        v55 = static os_log_type_t.error.getter(v54);
        v137 = v54;
        if (os_log_type_enabled(v54, v55))
        {
          v56 = swift_slowAlloc(32, -1);
          v136 = v48;
          v57 = v56;
          v58 = (NSObject **)swift_slowAlloc(16, -1);
          v135 = (char *)swift_slowAlloc(32, -1);
          v143[0] = (uint64_t)v135;
          *(_DWORD *)v57 = 136315650;
          v132 = v26;
          v141 = (char *)sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, v143);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142);
          *(_WORD *)(v57 + 12) = 2112;
          v141 = (char *)v52;
          v59 = v52;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142);
          *v58 = v52;

          *(_WORD *)(v57 + 22) = 2112;
          v141 = (char *)v53;
          v60 = v53;
          v26 = v132;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142);
          v58[1] = v53;

          v61 = v137;
          _os_log_impl((void *)&_mh_execute_header, v137, v55, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v57, 0x20u);
          v62 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v58, 2, v62);
          swift_slowDealloc(v58, -1, -1);
          v63 = v135;
          swift_arrayDestroy(v135, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v63, -1, -1);
          swift_slowDealloc(v57, -1, -1);

          v136[1](v24, v138);
        }
        else
        {

          v48[1](v24, v49);
        }
        v133(0, 0, 0.0, 0.0, 0.0, 0.0);
      }

    }
    else
    {
      swift_release(v134);
      __break(1u);
    }
  }
}

void sub_1001C6330(void *a1, char *a2, NSObject *a3, void **a4, int a5, int a6, void (*a7)(id, NSObject *, double, double, double, double), uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  Class isa;
  id v51;
  char *v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  char v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void **v61;
  NSObject *v62;
  os_log_type_t v63;
  BOOL v64;
  uint8_t *v65;
  void **v66;
  uint64_t v67;
  void *v68;
  uint64_t *v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  void *object;
  Swift::String v75;
  __n128 v76;
  void *v77;
  id v78;
  uint64_t v79;
  NSObject *v80;
  Swift::String v81;
  void *v82;
  Swift::String v83;
  unint64_t v84;
  void **v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void **v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  NSObject *v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  id v113;
  NSObject *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  NSObject *v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  NSObject **v126;
  NSObject *v127;
  id v128;
  id v129;
  id v130;
  NSObject *v131;
  os_log_t v132;
  uint64_t v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  void **v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  os_log_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t ObjectType;
  _QWORD *v158;
  NSObject *v159;
  void *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  void (*v168)(_QWORD *, _QWORD, uint64_t);
  uint64_t v169;
  char *v170;
  void (*v171)(_QWORD *, uint64_t);
  void (*v172)(char *, uint64_t);
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  void (*v176)(char *, char *, void **);
  char *v177;
  void **v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  void *v187;
  void **v188;
  _QWORD *v189;
  uint64_t v190;
  os_log_t v191;
  void (*v192)(id, NSObject *, double, double, double, double);
  id v193;
  __n128 v194;
  uint64_t v195;
  __n128 v196;
  void *v197;
  __n128 v198;
  void *v199;
  char *v200;
  uint64_t v201;
  void (*v202)(char *, char *, uint64_t);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  uint64_t v221;
  char *v222;
  int v223;
  char *v224;
  uint64_t v225;
  void **v226;
  os_log_t v227;
  void **v228;
  void (*v229)(id, NSObject *, double, double, double, double);
  void **v230;
  uint64_t v231;
  NSObject *v232;
  uint64_t v233;
  NSObject *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  NSObject *v238;
  char v239[8];
  void **aBlock;
  unint64_t v241;
  uint64_t (*v242)(uint64_t);
  void *v243;
  uint64_t (*v244)();
  _QWORD *v245;

  v223 = a6;
  LODWORD(v225) = a5;
  v226 = a4;
  v236 = a2;
  v221 = type metadata accessor for DispatchTimeInterval(0);
  v216 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v220 = (void **)((char *)&v199 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v219 = (void **)((char *)&v199 - v14);
  v218 = type metadata accessor for DispatchTime(0);
  v215 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v214 = (char *)&v199 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v217 = (char *)&v199 - v17;
  v211 = type metadata accessor for DispatchWorkItemFlags(0);
  v210 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v209 = (char *)&v199 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for DispatchQoS(0);
  v207 = *(_QWORD *)(v208 - 8);
  v19 = __chkstk_darwin(v208);
  v206 = (char *)&v199 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for OS_dispatch_source.TimerFlags(0, v19);
  v204 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v203 = (char *)&v199 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = type metadata accessor for Logger(0);
  v235 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v234 = ((char *)&v199 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  v222 = (char *)&v199 - v24;
  __chkstk_darwin(v25);
  v224 = (char *)&v199 - v26;
  v27 = type metadata accessor for IndexPath(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v213 = (char *)&v199 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v199 - v31;
  v228 = (void **)sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v228);
  v34 = (char *)&v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v199 - v36;
  __chkstk_darwin(v38);
  v40 = (char *)&v199 - v39;
  v41 = swift_allocObject(&unk_1005CCFC0, 32, 7);
  v229 = a7;
  *(_QWORD *)(v41 + 16) = a7;
  *(_QWORD *)(v41 + 24) = a8;
  v231 = a8;
  v232 = v41;
  v42 = objc_msgSend(a1, "indexPathsForVisibleItems", swift_retain_n(a8, 2).n128_f64[0]);
  v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v27);

  v44 = v236;
  swift_unknownObjectRetain(a3);
  v230 = v44;
  v227 = a3;
  sub_100174744(v43, v44, (uint64_t)a3, v40);
  v45 = v43;
  v46 = v28;
  swift_bridgeObjectRelease(v45);
  v236 = v40;
  v47 = (uint64_t)v40;
  v48 = (void **)v27;
  sub_1000271D4(v47, (uint64_t)v37, (uint64_t *)&unk_100642710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v37, 1, v27) == 1)
  {
    sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_100642710);
    v49 = v233;
LABEL_11:
    aBlock = 0;
    v241 = 0xE000000000000000;
    _StringGuts.grow(_:)(102);
    v71._object = (void *)0x8000000100515CD0;
    v71._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v71);
    v72._countAndFlagsBits = 0xD000000000000019;
    v72._object = (void *)0x8000000100515CF0;
    String.append(_:)(v72);
    sub_1000271D4((uint64_t)v236, (uint64_t)v34, (uint64_t *)&unk_100642710);
    v73._countAndFlagsBits = String.init<A>(describing:)(v34, v228);
    object = v73._object;
    String.append(_:)(v73);
    swift_bridgeObjectRelease(object);
    v75._countAndFlagsBits = 0xD00000000000002DLL;
    v75._object = (void *)0x8000000100515D10;
    String.append(_:)(v75);
    v57 = v230;
    objc_msgSend(v230, "loadViewIfNeeded");
    v77 = *(void **)((char *)v57 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v77)
    {
      v78 = objc_msgSend(v77, "indexPathsForVisibleItems");
      v79 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v48);

      v80 = *(NSObject **)(v79 + 16);
      swift_bridgeObjectRelease(v79);
      v238 = v80;
      v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v82 = v81._object;
      String.append(_:)(v81);
      swift_bridgeObjectRelease(v82);
      v83._countAndFlagsBits = 0xD00000000000001ALL;
      v83._object = (void *)0x8000000100515D40;
      String.append(_:)(v83);
      v85 = aBlock;
      v84 = v241;
      v86 = sub_10012B03C((uint64_t)aBlock, v241);
      v87 = Logger.UI.unsafeMutableAddressor(v86);
      v88 = v234;
      v89 = v235;
      (*(void (**)(NSObject *, uint64_t, uint64_t))(v235 + 16))(v234, v87, v49);
      v90 = swift_bridgeObjectRetain(v84);
      v91 = Logger.logObject.getter(v90);
      v92 = static os_log_type_t.error.getter(v91);
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc(12, -1);
        v94 = (void **)swift_slowAlloc(32, -1);
        aBlock = v94;
        *(_DWORD *)v93 = 136315138;
        swift_bridgeObjectRetain(v84);
        v238 = sub_1000544FC((uint64_t)v85, v84, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239);
        swift_bridgeObjectRelease_n(v84, 3);
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s", v93, 0xCu);
        swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v94, -1, -1);
        swift_slowDealloc(v93, -1, -1);

        (*(void (**)(NSObject *, uint64_t))(v235 + 8))(v234, v49);
      }
      else
      {

        swift_bridgeObjectRelease_n(v84, 2);
        (*(void (**)(NSObject *, uint64_t))(v89 + 8))(v88, v49);
      }
      v95 = v231;
      a3 = v232;
      v229(0, 0, 0.0, 0.0, 0.0, 0.0);
LABEL_16:
      sub_10000CB4C((uint64_t)v236, (uint64_t *)&unk_100642710);
      v96 = v95;
      goto LABEL_17;
    }
    swift_release_n(v231, 2, v76);
    __break(1u);
    goto LABEL_34;
  }
  v202 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v202(v32, v37, v27);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  v52 = v32;
  v49 = v233;
  if (!v51)
  {
LABEL_10:
    (*(void (**)(char *, void **))(v46 + 8))(v52, v48);
    goto LABEL_11;
  }
  v53 = a1;
  v54 = type metadata accessor for DOCItemCollectionCell();
  v55 = swift_dynamicCastClass(v51, v54);
  if (!v55)
  {

    goto LABEL_10;
  }
  v56 = v225 & 1;
  v234 = v55;
  v57 = v226;
  if (!v226)
  {
    LODWORD(v226) = v225 & 1;
    v58 = Logger.UI.unsafeMutableAddressor(v55);
    v59 = v235;
    v60 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v235 + 16))(v224, v58, v49);
    v61 = (void **)v51;
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.debug.getter(v62);
    v64 = os_log_type_enabled(v62, v63);
    v228 = v61;
    v201 = v46;
    v200 = v52;
    v199 = v53;
    if (v64)
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = (void **)swift_slowAlloc(32, -1);
      aBlock = v66;
      *(_DWORD *)v65 = 136315138;
      v67 = (*(uint64_t (**)(void))((swift_isaMask & (uint64_t)v234->isa) + 0x1F8))();
      if (v67)
      {
        v68 = (void *)v67;
        v69 = (uint64_t *)(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess(v67 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, &v238, 0, 0);
        v70 = *v69;
        swift_unknownObjectRetain(*v69);

      }
      else
      {
        v70 = 0;
      }
      v237 = v70;
      v136 = sub_10006922C(&qword_100652EB0);
      v137 = String.init<A>(describing:)(&v237, v136);
      v139 = v138;
      v237 = sub_1000544FC(v137, v138, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v237, &v238);
      v140 = v228;

      swift_bridgeObjectRelease(v139);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v65, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v66, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v235 + 8))(v224, v233);
      v114 = v232;
      v46 = v201;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v49);
      v114 = v232;
    }
    v141 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v141 + 16) = 0;
    v142 = swift_allocObject(&unk_1005CCE80, 17, 7);
    *(_BYTE *)(v142 + 16) = 0;
    v143 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v143 + 16);
    v144 = swift_allocObject(&unk_1005CCFE8, 72, 7);
    *(_QWORD *)(v144 + 16) = v143;
    *(_QWORD *)(v144 + 24) = v142;
    *(_QWORD *)(v144 + 32) = sub_1001D26C4;
    *(_QWORD *)(v144 + 40) = v114;
    *(_QWORD *)(v144 + 48) = v141;
    v145 = (char)v226;
    *(_BYTE *)(v144 + 56) = (_BYTE)v226;
    v146 = v227;
    *(_QWORD *)(v144 + 64) = v227;
    if ((v223 & 1) == 0)
    {
      v195 = v231;
      swift_retain();
      swift_unknownObjectRetain(v146);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1001C571C(v234, v143, v142, v141, v145, v146, v229, v195);

      swift_release(v143);
      swift_release(v144);
      v196 = swift_release(v195);
      (*(void (**)(char *, void **, __n128))(v46 + 8))(v200, v48, v196);
      sub_10000CB4C((uint64_t)v236, (uint64_t *)&unk_100642710);
      swift_release(v195);
      swift_release(v114);
      swift_release(v141);
      a3 = v142;
      goto LABEL_18;
    }
    sub_10004F2F0(0, &qword_100646AD8, OS_dispatch_source_ptr);
    v235 = v142;
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    swift_unknownObjectRetain(v146);
    swift_retain();
    swift_retain();
    swift_retain();
    v148 = (void *)static OS_dispatch_queue.main.getter(v147);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v149 = sub_10005A360(&qword_100646AE0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v150 = sub_10006922C(&qword_100646AE8);
    v151 = sub_100062698((unint64_t *)&unk_100646AF0, &qword_100646AE8, (uint64_t)&protocol conformance descriptor for [A]);
    v152 = v141;
    v153 = v203;
    v154 = v205;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v150, v151, v205, v149);
    v155 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v153, v148);
    v230 = v48;
    v156 = v155;

    (*(void (**)(char *, uint64_t))(v204 + 8))(v153, v154);
    ObjectType = swift_getObjectType(v156);
    v158 = (_QWORD *)swift_allocObject(&unk_1005CD010, 48, 7);
    v233 = v152;
    v158[2] = v152;
    v158[3] = sub_1001CFA88;
    v159 = v234;
    v158[4] = v144;
    v158[5] = v159;
    v244 = sub_1001CFA90;
    v245 = v158;
    aBlock = _NSConcreteStackBlock;
    v241 = 1107296256;
    v242 = sub_10004A82C;
    v243 = &unk_1005CD028;
    v160 = _Block_copy(&aBlock);
    v229 = v228;
    swift_retain();
    swift_retain();
    v161 = v206;
    static DispatchQoS.unspecified.getter(v162);
    v163 = v209;
    sub_100193FCC();
    v225 = ObjectType;
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v161, v163, v160, ObjectType);
    _Block_release(v160);
    (*(void (**)(char *, uint64_t))(v210 + 8))(v163, v211);
    (*(void (**)(char *, uint64_t))(v207 + 8))(v161, v208);
    swift_release(v245);
    v226 = (void **)v156;
    OS_dispatch_source.resume()();
    v164 = v214;
    static DispatchTime.now()(v165);
    v166 = v219;
    *v219 = 250;
    v167 = v216;
    v168 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v216 + 104);
    v169 = v221;
    v168(v166, enum case for DispatchTimeInterval.milliseconds(_:), v221);
    v170 = v217;
    + infix(_:_:)(v164, v166);
    v171 = *(void (**)(_QWORD *, uint64_t))(v167 + 8);
    v171(v166, v169);
    v172 = *(void (**)(char *, uint64_t))(v215 + 8);
    v173 = v218;
    v172(v164, v218);
    v168(v166, enum case for DispatchTimeInterval.never(_:), v169);
    v174 = v220;
    *v220 = 0;
    v168(v174, enum case for DispatchTimeInterval.nanoseconds(_:), v169);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v170, v166, v174, v225);
    v171(v174, v169);
    v171(v166, v169);
    v172(v170, v173);
    v228 = (void **)swift_getObjectType(v227);
    v175 = v201;
    v176 = *(void (**)(char *, char *, void **))(v201 + 16);
    v225 = v144;
    v177 = v213;
    v178 = v230;
    v176(v213, v200, v230);
    v179 = *(unsigned __int8 *)(v175 + 80);
    v180 = (v179 + 24) & ~v179;
    v181 = (v212 + v180 + 7) & 0xFFFFFFFFFFFFFFF8;
    v182 = (v181 + 15) & 0xFFFFFFFFFFFFFFF8;
    v183 = (v182 + 23) & 0xFFFFFFFFFFFFFFF8;
    v184 = (v183 + 15) & 0xFFFFFFFFFFFFFFF8;
    v185 = (v184 + 15) & 0xFFFFFFFFFFFFFFF8;
    v186 = swift_allocObject(&unk_1005CD060, v185 + 8, v179 | 7);
    v187 = v199;
    *(_QWORD *)(v186 + 16) = v199;
    v202((char *)(v186 + v180), v177, (uint64_t)v178);
    v188 = v226;
    *(_QWORD *)(v186 + v181) = v226;
    v189 = (_QWORD *)(v186 + v182);
    v190 = v225;
    *v189 = sub_1001CFA88;
    v189[1] = v190;
    a3 = v235;
    *(_QWORD *)(v186 + v183) = v234;
    v191 = v227;
    *(_QWORD *)(v186 + v184) = v227;
    *(_QWORD *)(v186 + v185) = a3;
    swift_unknownObjectRetain(v191);
    v192 = v229;
    swift_retain();
    swift_retain();
    v193 = v187;
    swift_unknownObjectRetain(v188);
    DOCNode.fpfs_fetchFPItem(completion:)(sub_1001CFA98, v186, v228);

    swift_release(v190);
    swift_unknownObjectRelease(v188);
    v194 = swift_release(v186);
    (*(void (**)(char *, void **, __n128))(v201 + 8))(v200, v178, v194);
    sub_10000CB4C((uint64_t)v236, (uint64_t *)&unk_100642710);
    swift_release(v231);
    swift_release(v232);
    v96 = v233;
LABEL_17:
    swift_release(v96);
LABEL_18:
    swift_release(a3);
    return;
  }
  a3 = v232;
  if (v226 == (void **)1)
  {
    v97 = sub_100195294(v53);
    v98 = objc_msgSend(v97, "window");

    if (v98)
    {
      v100 = v234;
      -[NSObject bounds](v234, "bounds");
      sub_100191C18(v100, v97, v56, v101, v102, v103, v104);
      v106 = v105;
      v108 = v107;
      v110 = v109;
      v112 = v111;
      v113 = v51;
      v95 = v231;
      v229(0, 0, v106, v108, v110, v112);

      (*(void (**)(char *, void **))(v46 + 8))(v52, v48);
    }
    else
    {
      v200 = v52;
      v201 = v46;
      v115 = Logger.UI.unsafeMutableAddressor(v99);
      v116 = v235;
      v117 = v222;
      v118 = v233;
      (*(void (**)(char *, uint64_t, uint64_t))(v235 + 16))(v222, v115, v233);
      v119 = v51;
      v120 = v97;
      v121 = v119;
      v122 = v120;
      v123 = Logger.logObject.getter(v122);
      v124 = static os_log_type_t.error.getter(v123);
      if (os_log_type_enabled(v123, v124))
      {
        v125 = swift_slowAlloc(32, -1);
        v126 = (NSObject **)swift_slowAlloc(16, -1);
        v228 = (void **)swift_slowAlloc(32, -1);
        aBlock = v228;
        *(_DWORD *)v125 = 136315650;
        v238 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100515CD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239);
        *(_WORD *)(v125 + 12) = 2112;
        v230 = v48;
        v127 = v234;
        v238 = v234;
        v128 = v121;
        v227 = v123;
        v129 = v121;
        v130 = v128;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239);
        *v126 = v127;

        *(_WORD *)(v125 + 22) = 2112;
        v238 = v122;
        v131 = v122;
        v121 = v129;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239);
        v126[1] = v122;

        v48 = v230;
        v132 = v227;
        _os_log_impl((void *)&_mh_execute_header, v227, v124, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v125, 0x20u);
        v133 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v126, 2, v133);
        swift_slowDealloc(v126, -1, -1);
        v134 = v228;
        swift_arrayDestroy(v228, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v134, -1, -1);
        v135 = v125;
        a3 = v232;
        swift_slowDealloc(v135, -1, -1);

        (*(void (**)(char *, uint64_t))(v235 + 8))(v222, v233);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
      }
      v95 = v231;
      v229(0, 0, 0.0, 0.0, 0.0, 0.0);

      (*(void (**)(char *, void **))(v201 + 8))(v200, v48);
    }
    goto LABEL_16;
  }
LABEL_34:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  v243 = v197;
  swift_release_n(v231, 2, v198);
  swift_release(a3);
  aBlock = v57;
  doc_fatalErrorUnrecognizedEnumValueEncountered(_:)(&aBlock);
  __break(1u);
}

void sub_1001C77DC(NSObject *a1, void **a2, int a3, char a4, char *a5, void (*a6)(id, NSObject *, double, double, double, double), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  int v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  id v76;
  void *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void *v92;
  NSObject *v93;
  void **v94;
  void *v95;
  uint64_t v96;
  id v97;
  char *v98;
  uint64_t v99;
  _BYTE v100[12];
  int v101;
  void *v102;
  NSObject *v103;
  void **v104;
  int v105;
  uint64_t v106;
  char *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *aBlock;
  unint64_t v113[4];
  uint64_t v114;
  uint64_t v115;
  _BYTE v116[24];

  v105 = a3;
  v104 = a2;
  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v108 = &v100[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v100[-v16];
  __chkstk_darwin(v18);
  v20 = &v100[-v19];
  v21 = swift_allocObject(&unk_1005CCE08, 32, 7);
  v22 = v21;
  *(_QWORD *)(v21 + 16) = a6;
  *(_QWORD *)(v21 + 24) = a7;
  v107 = a5;
  v23 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
  {
    swift_retain_n(a7, 2);
    v35 = ((uint64_t (*)(_QWORD, _QWORD, double, double, double, double))a6)(0, 0, 0.0, 0.0, 0.0, 0.0);
    v36 = Logger.UI.unsafeMutableAddressor(v35);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v20, v36, v12);
    v37 = swift_unknownObjectRetain_n(a1, 2);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    v40 = v39;
    v41 = v12;
    if (os_log_type_enabled(v38, v39))
    {
      v42 = swift_slowAlloc(22, -1);
      v108 = (_BYTE *)swift_slowAlloc(64, -1);
      aBlock = v108;
      *(_DWORD *)v42 = 136315394;
      v109 = v41;
      v115 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
      *(_QWORD *)&v43 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116).n128_u64[0];
      *(_WORD *)(v42 + 12) = 2080;
      v44 = -[NSObject description](a1, "description", v43);
      v110 = a7;
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      LODWORD(v107) = v40;
      v47 = v46;
      v106 = v22;
      v49 = v48;

      v115 = sub_1000544FC(v47, v49, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116);
      swift_unknownObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v107, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v42, 0x16u);
      v50 = v108;
      swift_arrayDestroy(v108, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v20, v109);
      swift_release(v110);
      v51 = v106;
LABEL_36:
      swift_release(v51);
      return;
    }

    swift_unknownObjectRelease_n(a1, 2);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v20, v12);
LABEL_35:
    swift_release(a7);
    v51 = v22;
    goto LABEL_36;
  }
  v109 = v12;
  v103 = a1;
  v106 = v21;
  v24 = qword_100640F50;
  swift_retain_n(a7, 2);
  v25 = v23;
  if (v24 != -1)
    swift_once(&qword_100640F50, sub_1002A22DC);
  v110 = a7;
  v26 = (void *)qword_100672B20;
  v27 = (uint64_t *)(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess(qword_100672B20 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions, &v115, 0, 0);
  v28 = *v27;
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    v30 = v26;
    swift_bridgeObjectRetain(v28);
    if (v29)
      goto LABEL_6;
LABEL_16:

    v34 = swift_bridgeObjectRelease(v28).n128_u64[0];
    v33 = 0;
LABEL_17:
    a7 = v110;
    goto LABEL_18;
  }
  if (v28 < 0)
    v52 = v28;
  else
    v52 = v28 & 0xFFFFFFFFFFFFFF8;
  v53 = v26;
  swift_bridgeObjectRetain(v28);
  if (!_CocoaArrayWrapper.endIndex.getter(v52))
    goto LABEL_16;
LABEL_6:
  if ((v28 & 0xC000000000000001) != 0)
  {
    v99 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
    swift_bridgeObjectRelease(v28);
    v33 = *(unsigned __int8 *)(v99 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    v34 = swift_unknownObjectRelease(v99).n128_u64[0];
    goto LABEL_17;
  }
  a7 = v110;
  if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_39;
  }
  v32 = *(_QWORD *)(v28 + 32);
  swift_retain();
  swift_bridgeObjectRelease(v28);
  v33 = *(unsigned __int8 *)(v32 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

  v34 = swift_release(v32).n128_u64[0];
LABEL_18:
  v54 = a4 & 1;
  v102 = v25;
  v55 = objc_msgSend(v25, "indexPathsForVisibleItems", *(double *)&v34);
  v56 = type metadata accessor for IndexPath(0);
  v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

  v58 = *(_QWORD *)(v57 + 16);
  swift_bridgeObjectRelease(v57);
  if (v58)
  {
    v60 = v107;
    v61 = sub_10018C44C(1);
    v62 = v109;
    v63 = v13;
    v64 = v60;
    if (!v33)
    {
      swift_retain();
      v65 = v102;
      sub_1001C6330(v102, v60, v103, v104, v54, v105 & 1, a6, a7);
      swift_release(v106);

      swift_release_n(a7, 2, v66);
      return;
    }
    goto LABEL_25;
  }
  v67 = Logger.UI.unsafeMutableAddressor(v59);
  v63 = v13;
  v62 = v109;
  v68 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v17, v67, v109);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = v54;
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v73 = swift_slowAlloc(32, -1);
    aBlock = (_BYTE *)v73;
    *(_DWORD *)v72 = 136315138;
    v111 = sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, (uint64_t *)&aBlock);
    v62 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &aBlock);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s collectionView has 0 visible items. Forcing a layout pass.", v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    v74 = v73;
    a7 = v110;
    swift_slowDealloc(v74, -1, -1);
    v75 = v72;
    v54 = v71;
    swift_slowDealloc(v75, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v17, v62);
  v64 = v107;
  v76 = objc_msgSend(v107, "view");
  if (v76)
  {
    v77 = v76;
    objc_msgSend(v76, "layoutIfNeeded");

    v61 = sub_10018C44C(1);
LABEL_25:
    v101 = v54;
    v78 = Logger.UI.unsafeMutableAddressor(v61);
    v79 = v108;
    v80 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v108, v78, v62);
    v81 = Logger.logObject.getter(v80);
    v82 = static os_log_type_t.debug.getter(v81);
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc(22, -1);
      v84 = swift_slowAlloc(64, -1);
      v111 = v84;
      *(_DWORD *)v83 = 136315394;
      aBlock = (_BYTE *)sub_1000544FC(0xD00000000000005CLL, 0x8000000100515C50, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v113);
      *(_WORD *)(v83 + 12) = 2080;
      aBlock = 0;
      v113[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease(v113[0]);
      aBlock = (_BYTE *)0xD00000000000001BLL;
      v113[0] = 0x8000000100515CB0;
      if (v33)
        v85 = 1702195828;
      else
        v85 = 0x65736C6166;
      if (v33)
        v86 = 0xE400000000000000;
      else
        v86 = 0xE500000000000000;
      v87 = v86;
      String.append(_:)(*(Swift::String *)&v85);
      swift_bridgeObjectRelease(v86);
      v88 = v113[0];
      aBlock = (_BYTE *)sub_1000544FC((uint64_t)aBlock, v113[0], &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v113);
      swift_bridgeObjectRelease(v88);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v83, 0x16u);
      swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
      v89 = v84;
      a7 = v110;
      swift_slowDealloc(v89, -1, -1);
      swift_slowDealloc(v83, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v108, v109);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v79, v62);
    }
    v90 = (void *)objc_opt_self(DOCUISession);
    v91 = swift_allocObject(&unk_1005CCE30, 66, 7);
    v92 = v102;
    v93 = v103;
    *(_QWORD *)(v91 + 16) = v102;
    *(_QWORD *)(v91 + 24) = v64;
    v94 = v104;
    *(_QWORD *)(v91 + 32) = v93;
    *(_QWORD *)(v91 + 40) = v94;
    v22 = v106;
    *(_QWORD *)(v91 + 48) = sub_1001CFA64;
    *(_QWORD *)(v91 + 56) = v22;
    *(_BYTE *)(v91 + 64) = v101;
    *(_BYTE *)(v91 + 65) = v105 & 1;
    v113[3] = (unint64_t)sub_1001CFA70;
    v114 = v91;
    aBlock = _NSConcreteStackBlock;
    v113[0] = 1107296256;
    v113[1] = (unint64_t)sub_10004A82C;
    v113[2] = (unint64_t)&unk_1005CCE48;
    v95 = _Block_copy(&aBlock);
    v96 = v114;
    v97 = v92;
    swift_unknownObjectRetain(v93);
    v98 = v64;
    swift_retain();
    objc_msgSend(v90, "performAfterCATransactionCommits:", v95, swift_release(v96).n128_f64[0]);

    _Block_release(v95);
    goto LABEL_35;
  }
LABEL_39:
  swift_release_n(a7, 2, v31);
  __break(1u);
}

void sub_1001C816C(void (*a1)(char *, uint64_t), char *a2, void *a3, char *a4, void **a5, char a6, uint64_t a7, uint64_t (*a8)(double, double, double, double), uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  char v25;
  uint64_t (*v26)(double, double, double, double);
  uint64_t v27;
  void *v28;
  id v29;
  Class isa;
  id v31;
  NSObject *v32;
  char v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  void *v40;
  id v41;
  Class v42;
  uint64_t v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  char v61;
  uint64_t v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  _QWORD aBlock[5];
  uint64_t v80;

  v78 = a1;
  v16 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  __chkstk_darwin(v16);
  v74 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v72 = *(_QWORD *)(v18 - 8);
  v73 = v18;
  __chkstk_darwin(v18);
  v71 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for DispatchTime(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v69 = (char *)&v62 - v22;
  v23 = swift_allocObject(&unk_1005CD088, 72, 7);
  *(_QWORD *)(v23 + 16) = a3;
  *(_QWORD *)(v23 + 24) = a4;
  v24 = a5;
  *(_QWORD *)(v23 + 32) = a5;
  v25 = a6;
  *(_BYTE *)(v23 + 40) = a6;
  *(_QWORD *)(v23 + 48) = a7;
  *(_QWORD *)(v23 + 56) = a8;
  v26 = a8;
  *(_QWORD *)(v23 + 64) = a9;
  v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v77 = a2;
  v28 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v28)
  {
    v35 = *(NSObject **)&a4[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
    swift_beginAccess(a7 + 16, aBlock, 0, 0);
    v36 = *(unsigned __int8 *)(a7 + 16);
    v37 = a3;
    v38 = a4;
    swift_retain();
    swift_retain();
    sub_1001C4D94(v35, v24, v25 & 1, v36, v37, v26, a9);
LABEL_10:
    v59 = v23;
LABEL_13:
    swift_release(v59);
    return;
  }
  v65 = a3;
  v64 = a4;
  swift_retain();
  v66 = a9;
  swift_retain();
  v29 = v28;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, "cellForItemAtIndexPath:", isa);

  if (v31)
  {
    objc_msgSend(v31, "frame");
    if ((objc_msgSend(v29, "_isRectFullyVisible:") & 1) != 0)
    {
      v32 = *(NSObject **)&v64[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
      swift_beginAccess(a7 + 16, aBlock, 0, 0);
      v33 = *(_BYTE *)(a7 + 16);
      v34 = v66;
      swift_retain();
      sub_1001C4D94(v32, v24, v25 & 1, v33, v65, v26, v34);
      swift_release(v23);

LABEL_12:
      v59 = v34;
      goto LABEL_13;
    }

  }
  if ((uint64_t)objc_msgSend(v29, "numberOfSections") < 1)
  {
    v60 = *(NSObject **)&v64[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
    swift_beginAccess(a7 + 16, aBlock, 0, 0);
    v61 = *(_BYTE *)(a7 + 16);
    v34 = v66;
    swift_retain();
    sub_1001C4D94(v60, v24, v25 & 1, v61, v65, v26, v34);
    swift_release(v23);
    goto LABEL_12;
  }
  v63 = v29;
  v39 = v77;
  objc_msgSend(v77, "loadViewIfNeeded");
  v40 = *(void **)&v39[v27];
  if (v40)
  {
    v41 = v40;
    v42 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v41, "scrollToItemAtIndexPath:atScrollPosition:animated:", v42, 0, 1);

    v43 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v44 = (void *)static OS_dispatch_queue.main.getter(v43);
    v45 = v67;
    static DispatchTime.now()(v44);
    v46 = v69;
    + infix(_:_:)(v45, 0.3);
    v78 = *(void (**)(char *, uint64_t))(v68 + 8);
    v47 = v70;
    v78(v45, v70);
    v48 = swift_allocObject(&unk_1005CD0B0, 32, 7);
    *(_QWORD *)(v48 + 16) = sub_1001CFD3C;
    *(_QWORD *)(v48 + 24) = v23;
    aBlock[4] = sub_10010DF60;
    v80 = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CD0C8;
    v49 = _Block_copy(aBlock);
    v50 = v80;
    swift_retain();
    swift_release(v50);
    v51 = v71;
    static DispatchQoS.unspecified.getter(v52);
    aBlock[0] = _swiftEmptyArrayStorage;
    v53 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v54 = sub_10006922C((uint64_t *)&unk_100647540);
    v55 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v56 = v74;
    v57 = v54;
    v58 = v76;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v57, v55, v76, v53);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v46, v51, v56, v49);
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v58);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v73);
    v78(v46, v47);
    goto LABEL_10;
  }
  swift_release(v66);
  swift_release(a7);

  __break(1u);
}

void _s5Files31DOCItemCollectionViewControllerC06scrollD17WillBeginDraggingyySo08UIScrollD0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(_QWORD);
  _BYTE v6[32];

  v1 = type metadata accessor for DOCItemCollectionViewController.ScrollDragSessionContext();
  v2 = swift_allocObject(v1, 32, 7);
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext) = v2;
  swift_release(v3);
  v5 = sub_1001793C8((uint64_t)v6);
  if (*v4 != 2)
    *v4 = 1;
  ((void (*)(_BYTE *, _QWORD))v5)(v6, 0);
  sub_1001786CC();
}

double _s5Files31DOCItemCollectionViewControllerC06scrollD18DidEndDeceleratingyySo08UIScrollD0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v1 = v0;
  sub_1001988C8();
  v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_scrollDragSessionContext);
  if (v3)
  {
    v4 = *(void (**)(uint64_t))(v3 + 16);
    if (v4)
    {
      v5 = *(_QWORD *)(v3 + 24);
      swift_retain();
      v6 = sub_10008BA00((uint64_t)v4, v5);
      v4(v6);
      sub_100087534((uint64_t)v4, v5);
      v7 = *(_QWORD *)(v3 + 16);
    }
    else
    {
      swift_retain();
      v7 = 0;
    }
    v9 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 0;
    sub_100087534(v7, v9);
    swift_release(v3);
    v8 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void sub_1001C8850(uint64_t a1)
{
  void *v1;
  id v3;
  char *v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;

  v3 = v1;
  v4 = sub_1001BAA04(a1, (uint64_t)v3);

  v5 = (char *)v3;
  v6 = sub_1001BA164((uint64_t)v4, (uint64_t)v5);
  swift_bridgeObjectRelease(v4);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v18 = v6;
    else
      v18 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v6);
    if (v19)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_21;
LABEL_3:
  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
  v20 = *(id *)(v7 + 24);
  v21 = v5;
  objc_msgSend(v20, "lock");
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v9 = v6;
    else
      v9 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v8)
      goto LABEL_16;
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v6);
    if (!v8)
    {
LABEL_16:
      objc_msgSend(v20, "unlock", swift_bridgeObjectRelease(v6).n128_f64[0]);
      swift_bridgeObjectRelease(v6);

      return;
    }
  }
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v6);
      }
      else
      {
        v11 = *(_QWORD *)(v6 + 8 * v10 + 32);
        swift_unknownObjectRetain(v11);
      }
      ++v10;
      v12 = v21;
      v13 = (void *)sub_100093940(v11, (uint64_t)sub_100015958, 0, v7, v12);
      v15 = v14;
      v17 = v16;

      sub_1000628C0(v13, v15, v17);
      swift_unknownObjectRelease(v11);
    }
    while (v8 != v10);
    goto LABEL_16;
  }
  __break(1u);
}

double sub_1001C8A70(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  double result;
  id v9;
  char *v10;
  id v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
  v5 = *(void **)(v4 + 24);
  objc_msgSend(v5, "lock");
  *(_QWORD *)&v6 = swift_beginAccess(v4 + 32, v15, 0, 0).n128_u64[0];
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 32) + 16);
  objc_msgSend(v5, "unlock", v6);
  if (v7)
  {
    v9 = v2;
    v10 = sub_1001BAA04(a1, (uint64_t)v9);

    v11 = v9;
    v12 = sub_1001BA164((uint64_t)v10, (uint64_t)v11);
    swift_bridgeObjectRelease(v10);

    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v14 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v12);
      if (!v14)
        goto LABEL_5;
    }
    else if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
      return result;
    }
    sub_100066A68(v12, (uint64_t)sub_100198DE4, 0);
    goto LABEL_5;
  }
  return result;
}

id _s5Files31DOCItemCollectionViewControllerC010collectionD0_030targetContentOffsetForProposedhI0So7CGPointVSo012UICollectionD0C_AGtF_0(void *a1)
{
  char *v1;
  id result;
  void *v4;
  id v5;
  id v6;
  CGRect v7;

  result = objc_msgSend(v1, "loadViewIfNeeded");
  v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "_effectiveContentInset");
    v6 = objc_msgSend(v5, "collectionViewLayout");
    objc_msgSend(v6, "collectionViewContentSize");

    objc_msgSend(v5, "bounds");
    CGRectGetHeight(v7);
    objc_msgSend(v5, "_effectiveContentInset");

    return objc_msgSend(a1, "contentOffset");
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C8C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  id v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v16;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5.n128_f64[0] = __chkstk_darwin(v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
    || (v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)) == 0
    || (Strong = swift_unknownObjectWeakLoadStrong(v8 + 72)) == 0
    || (v10 = (void *)Strong,
        v11 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView),
        v12 = v11,
        v10,
        !v11))
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
    goto LABEL_8;
  }
  v13 = objc_msgSend(v12, "isFirstResponder");

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  if ((v13 & 1) == 0)
  {
LABEL_8:
    v14 = sub_100191290((uint64_t)v7);
    goto LABEL_9;
  }
  v14 = 0;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14 & 1;
}

uint64_t sub_1001C8DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v24, 0, 0);
  if (*v6 != 2)
  {
    v8 = Logger.UI.unsafeMutableAddressor(v7);
    v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v23 = v13;
      *(_DWORD *)v12 = 136315138;
      v22 = sub_1000544FC(0xD000000000000020, 0x8000000100516B30, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s should never be called outside of column mode", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v14 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);
  if (Strong
    && (v16 = Strong,
        v17 = *(_QWORD *)(v14 + 8),
        ObjectType = swift_getObjectType(Strong),
        LOBYTE(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v1, ObjectType, v17),
        swift_unknownObjectRelease(v16),
        (v17 & 1) != 0))
  {
    v19 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) ^ 1;
  }
  else
  {
    v19 = 1;
  }
  return v19 & 1;
}

void sub_1001C8FEC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  uint64_t Strong;
  void *v54;
  id v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, __n128);
  os_log_type_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  void *v97;
  uint64_t ObjectType;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110[3];
  uint64_t v111;
  _BYTE v112[24];

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v106 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v104 = (char *)&v99 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v99 - v10;
  v12 = type metadata accessor for Logger(0);
  v108 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v99 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v99 - v19;
  v21 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v21);
  v105 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v99 - v24;
  v107 = a1;
  if ((sub_100195148(a1) & 1) != 0)
    return;
  v26 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled];
  *(_QWORD *)&v28 = swift_beginAccess(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled], v112, 0, 0).n128_u64[0];
  if (*v26 != 1)
  {
    v37 = Logger.UI.unsafeMutableAddressor(v27);
    v38 = v108;
    v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 16))(v14, v37, v12);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v110[0] = v43;
      *(_DWORD *)v42 = 136315138;
      v111 = sub_1000544FC(0xD000000000000022, 0x8000000100516C20, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, v112);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s called while isUserInteractionEnabled=false. Ignoring", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v12);
    return;
  }
  v103 = v4;
  objc_msgSend(v2, "loadViewIfNeeded", v28);
  v29 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v29)
  {
    __break(1u);
    goto LABEL_42;
  }
  v30 = v106;
  v31 = v103;
  v102 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
  v102(v25, v107, v103);
  v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  v101(v25, 0, 1, v31);
  v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState];
  v33 = v32 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess(v32 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem, v110, 33, 0);
  v34 = v29;
  swift_retain();
  sub_10008BB40((uint64_t)v25, v33, (uint64_t *)&unk_100642710);
  swift_endAccess(v110);

  if (objc_msgSend(v2, "isEditing", swift_release(v32).n128_f64[0]))
  {
    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v35 = objc_msgSend(v2, "viewIfLoaded");
    v36 = objc_msgSend(v35, "window");

    if (v36)
      sub_1000926C8();
    return;
  }
  v44 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v110, 0, 0);
  v45 = v103;
  if (*(_QWORD *)v44 != 2)
    return;
  v46 = v107;
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
  {
    v47 = (uint64_t)sub_100034068(0);
    v48 = v47;
    if ((unint64_t)v47 >> 62)
    {
      if (v47 >= 0)
        v47 &= 0xFFFFFFFFFFFFFF8uLL;
      v49 = _CocoaArrayWrapper.endIndex.getter(v47);
    }
    else
    {
      v49 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v48);
    if (v49 >= 1)
    {
      type metadata accessor for DOCConcreteSelectionLocation();
      v50 = sub_100034068(0);
      v51 = sub_1004950C4((uint64_t)v50);
      if (v51)
      {
        v52 = (void *)v51;
        Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting]);
        if (Strong)
        {
          v54 = (void *)Strong;
          v55 = objc_retain(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                     + 24]);
          objc_msgSend(v54, "didSelectLocation:atParentLocation:", v52, v55);

          swift_unknownObjectRelease(v54);
        }
        else
        {

        }
        return;
      }
    }
  }
  v56 = sub_1001C8DBC();
  v57 = v56;
  v58 = Logger.UI.unsafeMutableAddressor(v56);
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  if ((v57 & 1) == 0)
  {
    v59(v17, v58, v12);
    v78 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v6, v46, v45);
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter(v79);
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc(22, -1);
      v82 = swift_slowAlloc(64, -1);
      v100 = v12;
      v83 = v82;
      v111 = v82;
      *(_DWORD *)v81 = 136315394;
      v109 = sub_1000544FC(0xD000000000000022, 0x8000000100516C20, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
      *(_WORD *)(v81 + 12) = 2080;
      v84 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v85 = dispatch thunk of CustomStringConvertible.description.getter(v45, v84);
      v87 = v86;
      v109 = sub_1000544FC(v85, v86, &v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
      v88 = swift_bridgeObjectRelease(v87);
      (*(void (**)(char *, uint64_t, __n128))(v106 + 8))(v6, v45, v88);
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s %s performPrimaryAction will handle opening", (uint8_t *)v81, 0x16u);
      swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v81, -1, -1);

      (*(void (**)(char *, uint64_t))(v108 + 8))(v17, v100);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v106 + 8))(v6, v45);

      (*(void (**)(char *, uint64_t))(v108 + 8))(v17, v12);
    }
    return;
  }
  v60 = v12;
  v59(v20, v58, v12);
  v61 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v11, v46, v45);
  v62 = Logger.logObject.getter(v61);
  v63 = static os_log_type_t.debug.getter(v62);
  v64 = v45;
  if (os_log_type_enabled(v62, v63))
  {
    v65 = swift_slowAlloc(22, -1);
    v100 = v60;
    v66 = v65;
    v99 = swift_slowAlloc(64, -1);
    v111 = v99;
    *(_DWORD *)v66 = 136315394;
    v109 = sub_1000544FC(0xD000000000000022, 0x8000000100516C20, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
    *(_WORD *)(v66 + 12) = 2080;
    v67 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v68 = dispatch thunk of CustomStringConvertible.description.getter(v45, v67);
    v70 = v69;
    v109 = sub_1000544FC(v68, v69, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
    v71 = swift_bridgeObjectRelease(v70);
    v72 = v106;
    v73 = *(void (**)(char *, uint64_t, __n128))(v106 + 8);
    v73(v11, v64, v71);
    v74 = v63;
    v75 = (void (*)(char *, uint64_t))v73;
    _os_log_impl((void *)&_mh_execute_header, v62, v74, "%s %s navigation action, handling", (uint8_t *)v66, 0x16u);
    v76 = v99;
    swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1, -1);
    swift_slowDealloc(v66, -1, -1);

    v77 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v20, v100);
  }
  else
  {
    v72 = v106;
    v75 = *(void (**)(char *, uint64_t))(v106 + 8);
    v75(v11, v64);

    v77 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v20, v60);
  }
  v89 = (uint64_t)v105;
  v90 = v107;
  if (IndexPath.count.getter(v77) != 2)
    goto LABEL_30;
  v91 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v91)
  {
LABEL_42:
    __break(1u);
    return;
  }
  if ((objc_msgSend(v91, "isGathering") & 1) == 0
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148(v90) & 1) != 0)
  {
LABEL_30:
    v101((char *)v89, 1, 1, v103);
LABEL_33:
    sub_10000CB4C(v89, (uint64_t *)&unk_100642710);
    return;
  }
  v92 = v90;
  v93 = v103;
  v102((char *)v89, v92, v103);
  v101((char *)v89, 0, 1, v93);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v89, 1, v93) == 1)
    goto LABEL_33;
  v94 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v104, v89, v93);
  v95 = sub_10017A754(v94, 0);
  if (v95)
  {
    v97 = (void *)v95;
    ObjectType = swift_getObjectType(v95);
    sub_1001B66A4(v97, 0, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0, v2, ObjectType);
    v96 = swift_unknownObjectRelease(v97);
  }
  ((void (*)(uint64_t, uint64_t, __n128))v75)(v94, v103, v96);
}

void sub_1001C9A60(uint64_t a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t Strong;
  void *v10;
  id v11;
  char v12[24];

  v2 = v1;
  if ((sub_100195148(a1) & 1) == 0)
  {
    v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    v3 = objc_msgSend(v1, "viewIfLoaded");
    v4 = objc_msgSend(v3, "window");

    if (v4)
      sub_1000926C8();
    v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v12, 0, 0);
    if (*(_QWORD *)v5 == 2
      && v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
    {
      type metadata accessor for DOCConcreteSelectionLocation();
      v6 = sub_100034068(0);
      v7 = sub_1004950C4((uint64_t)v6);
      if (v7)
      {
        v8 = (void *)v7;
        if ((objc_msgSend(v2, "isEditing") & 1) != 0
          || (Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting])) == 0)
        {

        }
        else
        {
          v10 = (void *)Strong;
          v11 = objc_retain(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                     + 24]);
          objc_msgSend(v10, "didSelectLocation:atParentLocation:", v8, v11);

          swift_unknownObjectRelease(v10);
        }
      }
    }
  }
}

void *sub_1001C9BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *result;
  void *v12;
  unsigned int v13;
  __n128 v14;
  uint64_t v15;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter(v10) != 2)
    goto LABEL_6;
  result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if ((objc_msgSend(result, "isGathering") & 1) == 0
      && (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_100195148(a1) & 1) != 0)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_8:
      sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      goto LABEL_8;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    result = (void *)sub_10017A754((uint64_t)v9, 0);
    if (result)
    {
      v12 = result;
      v13 = objc_msgSend(result, "isPending");
      v14 = swift_unknownObjectRelease(v12);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v14);
      return (void *)(v13 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C9DA0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[24];

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __chkstk_darwin(v6);
  v9 = &v22[-v8 - 8];
  v10 = objc_msgSend(a1, "nextFocusedView", v7);
  if (v10
    && (v11 = v10,
        v12 = type metadata accessor for DOCItemCollectionCell(),
        v13 = swift_dynamicCastClass(v11, v12),
        v11,
        v13))
  {
    v14 = objc_msgSend(a1, "nextFocusedIndexPath");
    if (v14)
    {
      v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v16 = type metadata accessor for IndexPath(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 0, 1, v16);
    }
    else
    {
      v18 = type metadata accessor for IndexPath(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    }
    sub_100070EDC((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_100642710);
  }
  else
  {
    v17 = type metadata accessor for IndexPath(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  }
  v19 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath;
  swift_beginAccess(v19, v22, 33, 0);
  sub_10008BB40((uint64_t)v9, v19, (uint64_t *)&unk_100642710);
  return swift_endAccess(v22);
}

uint64_t _s5Files31DOCItemCollectionViewControllerC010collectionD0_22shouldSpringLoadItemAt4withSbSo012UICollectionD0C_10Foundation9IndexPathVSo32UISpringLoadedInteractionContext_ptF_0(void *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  double v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[5];
  _BYTE v15[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  *(_QWORD *)&v6 = swift_beginAccess(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, v15, 0, 0).n128_u64[0];
  if (!*v5)
    goto LABEL_5;
  if (*v5 != 2)
    goto LABEL_6;
  v7 = objc_msgSend(a1, "indexPathsForSelectedItems", v6);
  if (!v7)
    goto LABEL_6;
  v8 = v7;
  v9 = type metadata accessor for IndexPath(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  __chkstk_darwin(v11);
  v14[2] = a2;
  LOBYTE(v8) = sub_100173AD4((uint64_t (*)(char *))sub_1001CA4F8, (_BOOL8)v14, v10, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, (uint64_t *)&unk_100642710);
  swift_bridgeObjectRelease(v10);
  if ((v8 & 1) != 0)
LABEL_5:
    v12 = 0;
  else
LABEL_6:
    v12 = sub_1001BFEFC(a2);
  return v12 & 1;
}

void _s5Files31DOCItemCollectionViewControllerC010collectionD0_22willDisplayContextMenu8animatorySo012UICollectionD0C_So09UIContextJ13ConfigurationCSo0mJ20InteractionAnimating_pSgtF_0(void *a1, void *a2)
{
  char *v2;
  char *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t i;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  uint64_t ObjectType;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t);
  id v23;
  uint64_t v24;
  id v25;
  char v26[24];

  v3 = v2;
  v5 = objc_msgSend(a1, "contextMenuInteraction");
  v6 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = v5;

  v7 = type metadata accessor for DOCNodeContextMenuConfiguration();
  v8 = swift_dynamicCastClass(a2, v7);
  if (v8)
  {
    v9 = v8;
    v10 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = v8;
    v25 = a2;

    if (!objc_msgSend(v3, "isEditing"))
    {

      return;
    }
    v11 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v26, 0, 0);
    if (*(_QWORD *)v11)
    {

      return;
    }
    v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v24 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
      else
        v24 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v13 = _CocoaArrayWrapper.endIndex.getter(v24);
      v14 = v25;
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v9 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes));
      v14 = v25;
      if (v13)
      {
LABEL_8:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0)
          {
            v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
          }
          else
          {
            v16 = *(_QWORD *)(v12 + 8 * i + 32);
            swift_unknownObjectRetain(v16);
          }
          v17 = sub_100195350(v16);
          if (v17)
          {
            v18 = v17;
            ObjectType = swift_getObjectType(v17);
            v20 = type metadata accessor for DOCItemCollectionGridCell();
            v21 = (_QWORD *)sub_1001D0F7C((uint64_t)v18, ObjectType, v20, (uint64_t)&protocol descriptor for DOCItemCollectionGridCell_ConcreteSubclassProtocol);
            if (v21)
            {
              v22 = *(void (**)(uint64_t))((swift_isaMask & *v21) + 0x550);
              v23 = v18;
              v22(1);

            }
          }
          swift_unknownObjectRelease(v16);
        }
        v14 = v25;
      }
    }

    swift_bridgeObjectRelease(v12);
  }
}

void sub_1001CA2B4(void *a1, void *a2)
{
  char *v2;
  char *v5;
  void (*v6)(__n128);
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  char *v19;
  __n128 v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  v6 = *(void (**)(__n128))&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                    + 8];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  sub_10008BA00((uint64_t)v6, v7);
  sub_100087534((uint64_t)v6, v7);
  v8 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;

  v9 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;

  v10 = type metadata accessor for DOCNodeContextMenuConfiguration();
  v11 = swift_dynamicCastClass(a1, v10);
  if (!v11)
    goto LABEL_6;
  v12 = v11;
  v13 = swift_allocObject(&unk_1005CE460, 32, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v12;
  if (a2)
  {
    v14 = (_QWORD *)swift_allocObject(&unk_1005CE488, 48, 7);
    v14[2] = sub_1001D0F04;
    v14[3] = v13;
    v14[4] = v6;
    v14[5] = v7;
    aBlock[4] = sub_1001D0F40;
    v23 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CE4A0;
    v15 = _Block_copy(aBlock);
    v16 = v23;
    v17 = a1;
    sub_10008BA00((uint64_t)v6, v7);
    v18 = v17;
    v19 = v2;
    swift_unknownObjectRetain(a2);
    swift_retain();
    objc_msgSend(a2, "addCompletion:", v15, swift_release(v16).n128_f64[0]);
    swift_release(v13);

    sub_100087534((uint64_t)v6, v7);
    _Block_release(v15);
    swift_unknownObjectRelease(a2);
    return;
  }
  v21 = a1;
  sub_1001A0394((uint64_t)v2, v12);
  if (v6)
  {
    v20 = swift_retain();
    v6(v20);
    swift_release(v13);

    sub_100087534((uint64_t)v6, v7);
LABEL_6:
    sub_100087534((uint64_t)v6, v7);
    return;
  }
  swift_release(v13);

}

uint64_t sub_1001CA4F8(uint64_t a1)
{
  return sub_1001D171C(a1) & 1;
}

uint64_t sub_1001CA510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001CA58C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  Class isa;

  type metadata accessor for IndexPath(0);
  v1 = *(_BYTE **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "collectionView:performPrimaryActionForItemAtIndexPath:", v2, isa);

}

void sub_1001CA608(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  void (*v5)(__n128);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD v16[5];
  uint64_t v17;

  v2 = v1;
  v4 = (_QWORD *)(v1
                + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
  v5 = *(void (**)(__n128))(v1
                                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                 + 8);
  *v4 = 0;
  v4[1] = 0;
  sub_10008BA00((uint64_t)v5, v6);
  sub_100087534((uint64_t)v5, v6);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu) = 0;

  if (a1)
  {
    v8 = swift_allocObject(&unk_1005CE370, 32, 7);
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)(v8 + 24) = v6;
    v16[4] = sub_100146054;
    v17 = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10004A82C;
    v16[3] = &unk_1005CE388;
    v9 = _Block_copy(v16);
    v10 = v17;
    sub_10008BA00((uint64_t)v5, v6);
    swift_unknownObjectRetain(a1);
    objc_msgSend(a1, "addCompletion:", v9, swift_release(v10).n128_f64[0]);
    _Block_release(v9);
    swift_unknownObjectRelease(a1);
  }
  else if (v5)
  {
    v11 = swift_retain();
    v5(v11);
    sub_100087534((uint64_t)v5, v6);
  }
  v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v14, "removeFromSuperview");
    v15 = *(void **)(v2 + v12);
    *(_QWORD *)(v2 + v12) = 0;

    sub_100087534((uint64_t)v5, v6);
  }
  else
  {
    sub_100087534((uint64_t)v5, v6);
  }
}

void _s5Files31DOCItemCollectionViewControllerC22contextMenuInteraction_022previewForHighlightingG17WithConfigurationSo17UITargetedPreviewCSgSo09UIContextgH0C_So0pgM0CtF_0(void *a1)
{
  char *v1;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;

  if (!objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "browserViewContext"))
  {
    v3 = objc_msgSend(v1, "viewIfLoaded");
    objc_msgSend(a1, "locationInView:", v3);
    v5 = v4;
    v7 = v6;

    v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview;
    v9 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview];
    if (v9)
    {
      objc_msgSend(v9, "setFrame:", v5, v7, 0.0, 0.0);
    }
    else
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v5, v7, 0.0, 0.0);
      v11 = *(void **)&v1[v8];
      *(_QWORD *)&v1[v8] = v10;

      v12 = *(void **)&v1[v8];
      if (v12)
      {
        v13 = (void *)objc_opt_self(UIColor);
        v14 = v12;
        v15 = objc_msgSend(v13, "clearColor");
        objc_msgSend(v14, "setBackgroundColor:", v15);

      }
    }
    v16 = objc_msgSend(v1, "view");
    if (v16)
    {
      if (*(_QWORD *)&v1[v8])
      {
        v17 = v16;
        objc_msgSend(v16, "addSubview:");

        v18 = objc_msgSend(objc_allocWithZone((Class)UIPreviewParameters), "init");
        v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v18, "setBackgroundColor:", v19);

        v20 = *(void **)&v1[v8];
        if (v20)
        {
          v21 = objc_allocWithZone((Class)UITargetedPreview);
          v22 = v20;
          objc_msgSend(v21, "initWithView:parameters:", v22, v18);

          return;
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

void sub_1001CA9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A7B60(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1001CA9D8(void *a1, char *a2, void (*a3)(id, __n128), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(id, __n128);
  uint64_t v44;

  v39 = a5;
  v43 = a3;
  v44 = a4;
  v7 = type metadata accessor for Logger(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  __chkstk_darwin(v7);
  v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v11 = *v10;
  v12 = static os_log_type_t.debug.getter(v11);
  v13 = sub_10006922C((uint64_t *)&unk_100644560);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1004D9670;
  v15 = objc_msgSend(a1, "displayName");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  *(_QWORD *)(v14 + 56) = &type metadata for String;
  v19 = sub_10006A638();
  *(_QWORD *)(v14 + 64) = v19;
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  os_log(_:dso:log:type:_:)("Getting current collection for item %@", 38, 2, &_mh_execute_header, v11, v12, v14);

  swift_bridgeObjectRelease(v14);
  v20 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v20);
  v21 = sub_10006922C((uint64_t *)&unk_1006424B0);
  LOBYTE(v18) = Array<A>.contains(node:)(a1, v20, v21);
  swift_bridgeObjectRelease(v20);
  if ((v18 & 1) != 0)
  {
    sub_1001A7060(a1, a2, v43, v44, v39);
  }
  else
  {
    v22 = *v10;
    v23 = static os_log_type_t.debug.getter(v22);
    v24 = swift_allocObject(v13, 112, 7);
    *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v24 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v24 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v24 + 32) = a2;
    v25 = a2;
    v26 = objc_msgSend(a1, "displayName", v39);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    *(_QWORD *)(v24 + 96) = &type metadata for String;
    *(_QWORD *)(v24 + 104) = v19;
    *(_QWORD *)(v24 + 72) = v27;
    *(_QWORD *)(v24 + 80) = v29;
    os_log(_:dso:log:type:_:)("The current collection %@ doesn't contain item %@", 49, 2, &_mh_execute_header, v22, v23, v24);

    swift_bridgeObjectRelease(v24);
    v31 = Logger.UI.unsafeMutableAddressor(v30);
    v33 = v40;
    v32 = v41;
    v34 = v42;
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v31, v42);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Not enough information to get the transition controller", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    ((void (*)(_QWORD))v43)(0);
  }
}

void sub_1001CAD08(void *a1, char *a2, void (*a3)(void))
{
  id *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  objc_super v34;

  v5 = (id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v6 = *v5;
  v7 = static os_log_type_t.debug.getter(v6);
  v8 = sub_10006922C((uint64_t *)&unk_100644560);
  v9 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004D9670;
  v10 = objc_msgSend(a1, "displayName");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)(v9 + 56) = &type metadata for String;
  v14 = sub_10006A638();
  *(_QWORD *)(v9 + 64) = v14;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  os_log(_:dso:log:type:_:)("Getting current collection for item %@", 38, 2, &_mh_execute_header, v6, v7, v9);

  swift_bridgeObjectRelease(v9);
  v15 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v15);
  v16 = sub_10006922C((uint64_t *)&unk_1006424B0);
  LOBYTE(v13) = Array<A>.contains(node:)(a1, v15, v16);
  swift_bridgeObjectRelease(v15);
  if ((v13 & 1) != 0)
  {
    v17 = (objc_class *)type metadata accessor for DOCServiceItemPopoverTrackerController();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_itemCollection]);
    swift_unknownObjectWeakAssign(v19, a2);
    v20 = *(void **)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_configuration] = v20;
    *(_QWORD *)&v18[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node] = a1;
    v34.receiver = v18;
    v34.super_class = v17;
    swift_unknownObjectRetain_n(a1, 2);
    v21 = a2;
    v22 = v20;
    v23 = objc_msgSendSuper2(&v34, "init");
    a3();

    swift_unknownObjectRelease(a1);
  }
  else
  {
    v24 = *v5;
    v25 = static os_log_type_t.debug.getter(v24);
    v26 = swift_allocObject(v8, 112, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v26 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v26 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v26 + 32) = a2;
    v27 = a2;
    v28 = objc_msgSend(a1, "displayName");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    *(_QWORD *)(v26 + 96) = &type metadata for String;
    *(_QWORD *)(v26 + 104) = v14;
    *(_QWORD *)(v26 + 72) = v29;
    *(_QWORD *)(v26 + 80) = v31;
    os_log(_:dso:log:type:_:)("The current collection %@ doesn't contain item %@", 49, 2, &_mh_execute_header, v24, v25, v26);

    v32 = swift_bridgeObjectRelease(v26);
    ((void (*)(_QWORD, __n128))a3)(0, v32);
  }
}

void sub_1001CAFEC(void *a1, char *a2, char *a3, void *a4, char a5, _QWORD *aBlock)
{
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  char *v24;
  void **v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id *v34;
  char v38[24];

  _Block_copy(aBlock);
  v9 = _Block_copy(aBlock);
  v34 = (id *)DOCLog.UI.unsafeMutableAddressor(v9);
  v10 = *v34;
  v11 = static os_log_type_t.debug.getter(v10);
  v12 = sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  v14 = objc_msgSend(a1, "displayName");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *(_QWORD *)(v13 + 56) = &type metadata for String;
  v18 = sub_10006A638();
  *(_QWORD *)(v13 + 64) = v18;
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v17;
  os_log(_:dso:log:type:_:)("Getting current collection for item %@", 38, 2, &_mh_execute_header, v10, v11, v13);

  swift_bridgeObjectRelease(v13);
  v19 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v19);
  v20 = sub_10006922C((uint64_t *)&unk_1006424B0);
  LOBYTE(v13) = Array<A>.contains(node:)(a1, v19, v20);
  swift_bridgeObjectRelease(v19);
  if ((v13 & 1) != 0)
  {
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    v21 = a2;
    v22 = objc_msgSend(a3, "traitCollection");
    v23 = objc_msgSend(v22, "preferredContentSizeCategory");

    LOBYTE(v22) = UIContentSizeCategory.isAccessibilityCategory.getter(v23);
    v25 = 0;
    if ((v22 & 1) != 0)
    {
      v24 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess(&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v38, 0, 0);
      if (*(_QWORD *)v24)
        v25 = (void **)1;
    }
    _Block_copy(aBlock);
    sub_1001C2374(a4, v25, a5 & 1, 0, v21, aBlock);
    _Block_release(aBlock);

    _Block_release(aBlock);
  }
  else
  {
    v26 = *v34;
    v27 = static os_log_type_t.debug.getter(v26);
    v28 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v28 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v28 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v28 + 32) = a2;
    v29 = a2;
    v30 = objc_msgSend(a1, "displayName");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v18;
    *(_QWORD *)(v28 + 72) = v31;
    *(_QWORD *)(v28 + 80) = v33;
    os_log(_:dso:log:type:_:)("The current collection %@ doesn't contain item %@", 49, 2, &_mh_execute_header, v26, v27, v28);

    swift_bridgeObjectRelease(v28);
    _Block_copy(aBlock);
    sub_10012B03C(0xD00000000000002ELL, 0x8000000100515E80);
    ((void (*)(_QWORD *, _QWORD, _QWORD))aBlock[2])(aBlock, 0, 0);
  }
  _Block_release(aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_1001CB36C(void *a1, char *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  id *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  _BYTE *v30;

  v7 = (id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v8 = *v7;
  v9 = static os_log_type_t.debug.getter(v8);
  v10 = sub_10006922C((uint64_t *)&unk_100644560);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004D9670;
  v12 = objc_msgSend(a1, "displayName");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v16 = sub_10006A638();
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  os_log(_:dso:log:type:_:)("Getting current collection for item %@", 38, 2, &_mh_execute_header, v8, v9, v11);

  swift_bridgeObjectRelease(v11);
  v17 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  swift_bridgeObjectRetain(v17);
  v18 = sub_10006922C((uint64_t *)&unk_1006424B0);
  LOBYTE(v13) = Array<A>.contains(node:)(a1, v17, v18);
  swift_bridgeObjectRelease(v17);
  if ((v13 & 1) != 0)
  {
    v19 = a2;
    v30 = sub_100195350(a5);
    a3();

  }
  else
  {
    v20 = *v7;
    v21 = static os_log_type_t.debug.getter(v20);
    v22 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v22 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(_QWORD *)(v22 + 64) = sub_10005A360(&qword_1006460C0, type metadata accessor for DOCItemCollectionViewController, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v22 + 32) = a2;
    v23 = a2;
    v24 = objc_msgSend(a1, "displayName");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    *(_QWORD *)(v22 + 96) = &type metadata for String;
    *(_QWORD *)(v22 + 104) = v16;
    *(_QWORD *)(v22 + 72) = v25;
    *(_QWORD *)(v22 + 80) = v27;
    os_log(_:dso:log:type:_:)("The current collection %@ doesn't contain item %@", 49, 2, &_mh_execute_header, v20, v21, v22);

    v28 = swift_bridgeObjectRelease(v22);
    ((void (*)(_QWORD, __n128))a3)(0, v28);
  }
}

double sub_1001CB5F0(id a1, char *a2, void (*a3)(id, __n128), uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, void *);
  id *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  char v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSURL *v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  double result;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(void *, void *);
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  void (**v86)(void *, void *);
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  void (*v104)(void *, void *);
  uint8_t *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  id v109;
  void (*v110)(id, __n128);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *ObjectType;
  void (*v115)(void *, void *);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  char *v123;
  char v124[32];

  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v112 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v116 = v12;
  v117 = v13;
  __chkstk_darwin(v12);
  v113 = v14;
  ObjectType = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Logger(0);
  v119 = *(_QWORD *)(v15 - 8);
  v120 = v15;
  __chkstk_darwin(v15);
  v108 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v107 = (char *)&v106 - v18;
  __chkstk_darwin(v19);
  v118 = (char *)&v106 - v20;
  v21 = (void (*)(void *, void *))swift_allocObject(&unk_1005CD6F0, 40, 7);
  v110 = a3;
  v111 = a4;
  *((_QWORD *)v21 + 2) = a3;
  *((_QWORD *)v21 + 3) = a4;
  v115 = v21;
  *((_QWORD *)v21 + 4) = a5;
  swift_retain();
  v109 = a5;
  v22 = (id *)DOCLog.UI.unsafeMutableAddressor(v109);
  v23 = *v22;
  v24 = static os_log_type_t.debug.getter(v23);
  v25 = sub_10006922C((uint64_t *)&unk_100644560);
  v26 = swift_allocObject(v25, 72, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1004D9670;
  v121 = a1;
  URL._bridgeToObjectiveC()((NSURL *)&unk_1004D9000);
  v28 = v27;
  v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v26 + 56) = v29;
  v30 = sub_100083450((unint64_t *)&qword_100646B10, (unint64_t *)&qword_1006533E0, NSURL_ptr);
  *(_QWORD *)(v26 + 64) = v30;
  *(_QWORD *)(v26 + 32) = v28;
  os_log(_:dso:log:type:_:)("Getting current collection for url %@", 37, 2, &_mh_execute_header, v23, v24, v26);

  swift_bridgeObjectRelease(v26);
  v31 = &a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache], v124, 0, 0);
  v33 = *(_QWORD *)v31;
  if (!*(_QWORD *)(*(_QWORD *)v31 + 16))
  {
LABEL_6:
    v58 = Logger.UI.unsafeMutableAddressor(v32);
    v59 = v118;
    v60 = v119;
    v61 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v58, v120);
    v62 = a2;
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.debug.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v112 = (char *)swift_slowAlloc(32, -1);
      v123 = v112;
      *(_DWORD *)v65 = 136315138;
      v66 = *(_QWORD *)v31;
      swift_bridgeObjectRetain(v66);
      v67 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v68 = sub_10005A360(&qword_10064D980, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v69 = v116;
      v70 = Dictionary.description.getter(v66, v116, v67, v68);
      v72 = v71;
      swift_bridgeObjectRelease(v66);
      v122 = sub_1000544FC(v70, v72, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);

      v73 = v69;
      swift_bridgeObjectRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Failed to get the item from the cache: %s trying to get the item from the URL", v65, 0xCu);
      v74 = v112;
      swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
      v75 = v115;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
      v75 = v115;
      v73 = v116;
    }
    v76 = v121;
    v77 = v113;
    v121 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v78 = swift_allocObject(&unk_1005CBE18, 24, 7);
    swift_unknownObjectWeakInit(v78 + 16);
    v79 = v117;
    v80 = ObjectType;
    (*(void (**)(char *, id, uint64_t))(v117 + 16))(ObjectType, v76, v73);
    v81 = *(unsigned __int8 *)(v79 + 80);
    v82 = (v81 + 16) & ~v81;
    v83 = (v77 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = (v83 + 23) & 0xFFFFFFFFFFFFFFF8;
    v85 = swift_allocObject(&unk_1005CD718, v84 + 8, v81 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v85 + v82, v80, v73);
    v86 = (void (**)(void *, void *))(v85 + v83);
    *v86 = sub_1001D01AC;
    v86[1] = v75;
    *(_QWORD *)(v85 + v84) = v78;
    swift_retain();
    swift_retain();
    v87 = v76;
    v88 = v121;
    FPItemManager.doc_fetchItem(for:completionHandler:)(v87, sub_1001D0258, v85);
    swift_release(v75);
    swift_release(v78);
    swift_release(v85);

    return result;
  }
  swift_bridgeObjectRetain(*(_QWORD *)v31);
  v34 = v121;
  v35 = sub_100140624((uint64_t)v121);
  if ((v36 & 1) == 0)
  {
    swift_bridgeObjectRelease(v33);
    goto LABEL_6;
  }
  v37 = *(void **)(*(_QWORD *)(v33 + 56) + 8 * v35);
  swift_unknownObjectRetain(v37);
  swift_bridgeObjectRelease(v33);
  v38 = *v22;
  LODWORD(v113) = static os_log_type_t.debug.getter(v38);
  v39 = swift_allocObject(v25, 112, 7);
  v118 = a2;
  v40 = (_QWORD *)v39;
  *(_OWORD *)(v39 + 16) = xmmword_1004D4CE0;
  ObjectType = (char *)swift_getObjectType(v37);
  v41 = objc_msgSend(v37, "displayName");
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v43 = v117;
  v44 = v34;
  v46 = v45;

  v40[7] = &type metadata for String;
  v40[8] = sub_10006A638();
  v40[4] = v42;
  v40[5] = v46;
  v47 = v37;
  URL._bridgeToObjectiveC()(v48);
  v40[12] = v29;
  v40[13] = v30;
  v40[9] = v49;
  os_log(_:dso:log:type:_:)("Getting item from the cache item %@ url %@", 42, 2, &_mh_execute_header, v38, v113, v40);

  v50 = v118;
  v51 = swift_bridgeObjectRelease(v40);
  v52 = (uint64_t)v112;
  v53 = v116;
  (*(void (**)(char *, id, uint64_t, __n128))(v43 + 16))(v112, v44, v116, v51);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v52, 0, 1, v53);
  v54 = sub_1001B40D4((uint64_t)v37, v52, (uint64_t)v50);
  v55 = sub_10000CB4C(v52, &qword_100643470);
  if (v54)
  {
    v56 = (void *)swift_unknownObjectRetain(v54);
    sub_1001A7060(v56, v50, v110, v111, (uint64_t)v109);
    swift_release(v115);
    swift_unknownObjectRelease(v37);
    swift_unknownObjectRelease_n(v54, 2);
  }
  else
  {
    v89 = Logger.UI.unsafeMutableAddressor(v55);
    v90 = v119;
    v91 = v120;
    v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 16);
    v93 = v107;
    v94 = v92(v107, v89, v120);
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.error.getter(v95);
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v97 = 0;
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "Item is not part of the current collection", v97, 2u);
      swift_slowDealloc(v97, -1, -1);
    }

    v98 = *(void (**)(char *, uint64_t))(v90 + 8);
    v98(v93, v91);
    v99 = v108;
    v100 = v92(v108, v89, v91);
    v101 = Logger.logObject.getter(v100);
    v102 = static os_log_type_t.error.getter(v101);
    v103 = os_log_type_enabled(v101, v102);
    v104 = v115;
    if (v103)
    {
      v105 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v105 = 0;
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Not enough information to get the transition controller", v105, 2u);
      swift_slowDealloc(v105, -1, -1);
    }

    v98(v99, v91);
    ((void (*)(_QWORD))v110)(0);
    swift_release(v104);
    *(_QWORD *)&result = swift_unknownObjectRelease(v47).n128_u64[0];
  }
  return result;
}

void sub_1001CBE48(uint64_t a1, int a2, char *a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  dispatch_semaphore_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  char *v41;
  void *v42;
  const void *v43;
  _BYTE v44[4];
  int v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  char *v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v53 = a3;
  v45 = a2;
  v48 = a1;
  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v52 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DispatchTimeInterval(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for DispatchTime(0);
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  __chkstk_darwin(v11);
  v13 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v44[-v15];
  v17 = swift_allocBox(v5);
  v19 = v18;
  v20 = type metadata accessor for URL(0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v51 = v19;
  v21(v19, 1, 1, v20);
  v47 = a4;
  _Block_copy(a4);
  v22 = dispatch_semaphore_create(0);
  v23 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v24 = swift_allocObject(&unk_1005CD2B8, 32, 7);
  *(_QWORD *)(v24 + 16) = v17;
  *(_QWORD *)(v24 + 24) = v22;
  aBlock[4] = sub_1001CFD98;
  v55 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100175118;
  aBlock[3] = &unk_1005CD2D0;
  v25 = _Block_copy(aBlock);
  v26 = v55;
  v46 = v17;
  swift_retain();
  v27 = v22;
  v28 = v26;
  v29 = v48;
  objc_msgSend(v23, "fetchURLForItem:completionHandler:", v48, v25, swift_release(v28).n128_f64[0]);
  _Block_release(v25);

  static DispatchTime.now()(v30);
  *v10 = 100;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.milliseconds(_:), v7);
  + infix(_:_:)(v13, v10);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v31 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
  v32 = v13;
  v33 = v50;
  v31(v32, v50);
  v34 = OS_dispatch_semaphore.wait(timeout:)(v16) & 1;
  v31(v16, v33);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v34, 1) & 1) != 0)
    sub_10012B03C(0xD000000000000062, 0x8000000100515DA0);
  v35 = v51;
  swift_beginAccess(v51, aBlock, 0, 0);
  v36 = v52;
  sub_1000271D4(v35, (uint64_t)v52, &qword_100643470);
  v37 = v53;
  if (*(_QWORD *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    v38 = sub_10004FD50();
    __chkstk_darwin(v38);
    *(_QWORD *)&v44[-16] = v29;
    *(_QWORD *)&v44[-8] = v36;
    v39 = (void *)sub_100174BD4(sub_100146530, (uint64_t)&v44[-32], v38);
    swift_bridgeObjectRelease(v38);
    sub_10000CB4C((uint64_t)v36, &qword_100643470);
    if (v39)
    {
      v40 = v47;
      _Block_copy(v47);
      v41 = v37;
      v42 = (void *)swift_unknownObjectRetain(v39);
      sub_1001CAFEC(v42, v41, v41, v39, v45 & 1, v40);
      _Block_release(v40);
      swift_release(v46);

      swift_unknownObjectRelease_n(v39, 2);
    }
    else
    {
      sub_10012B03C(0xD00000000000003BLL, 0x8000000100515D60);
      v40 = v47;
      ((void (*)(_QWORD *, _QWORD, _QWORD))v47[2])(v47, 0, 0);
      swift_release(v46);

    }
    _Block_release(v40);
  }
  else
  {
    v43 = v47;
    _Block_release(v47);
    _Block_release(v43);
    __break(1u);
  }
}

uint64_t _s5Files31DOCItemCollectionViewControllerC14renameFinishedyySbF_0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t aBlock[5];
  uint64_t v46;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v42 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.Rename.unsafeMutableAddressor(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  v11 = v0;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v37 = v5;
    v38 = v1;
    v14 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    aBlock[0] = v36;
    *(_DWORD *)v14 = 136315394;
    v44 = sub_1000544FC(0xD000000000000012, 0x8000000100516B10, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, aBlock);
    *(_WORD *)(v14 + 12) = 2080;
    v15 = *(_QWORD *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
    if (v15)
    {
      v16 = *(_QWORD *)(v15 + 64);
      ObjectType = swift_getObjectType(v16);
      swift_unknownObjectRetain(v16);
      v18 = DOCNode.nodeDescription.getter(ObjectType);
      v20 = v19;
      swift_unknownObjectRelease(v16);
    }
    else
    {
      v20 = 0xE300000000000000;
      v18 = 4271950;
    }
    v44 = sub_1000544FC(v18, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, aBlock);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s node: %s", (uint8_t *)v14, 0x16u);
    v21 = v36;
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
    v1 = v38;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 1;
  v22 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_1005CE028, 24, 7);
  *(_QWORD *)(v24 + 16) = v11;
  aBlock[4] = (uint64_t)sub_1001D0AFC;
  v46 = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CE040;
  v25 = _Block_copy(aBlock);
  v26 = v46;
  v27 = v11;
  swift_release(v26);
  v28 = v39;
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v30 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_10006922C((uint64_t *)&unk_100647540);
  v32 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v1, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v33, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v41);
}

void sub_1001CC6E4(char *a1, void *a2, char *a3, NSObject *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  NSObject *v29;
  uint64_t v30;
  id v31;
  _BYTE *v32;
  void *v33;
  char *v34;
  void *v35;
  id v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  __n128 v60;
  os_log_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(os_log_t, id, uint64_t);
  os_log_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void (*v77)(os_log_t, id, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  __n128 v87;
  os_log_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  os_log_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  os_log_t v110;
  char *v111;
  char *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;

  v113 = a2;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = __chkstk_darwin(v15);
  v109 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v110 = (os_log_t)((char *)&v102 - v20);
  __chkstk_darwin(v19);
  v104 = (char *)&v102 - v21;
  v22 = type metadata accessor for Logger(0);
  v23 = *(_QWORD *)(v22 - 8);
  v114 = v22;
  v115 = v23;
  v24 = __chkstk_darwin(v22);
  v111 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v108 = (char *)&v102 - v26;
  v27 = (char *)swift_allocObject(&unk_1005CC980, 56, 7);
  *((_QWORD *)v27 + 2) = a4;
  *((_QWORD *)v27 + 3) = a5;
  v105 = a5;
  v106 = a4;
  v28 = v27;
  *((_QWORD *)v27 + 4) = a6;
  *((_QWORD *)v27 + 5) = a7;
  *((_QWORD *)v27 + 6) = a8;
  v29 = a4;
  v30 = a8;
  swift_unknownObjectRetain(v29);
  v107 = a6;
  swift_bridgeObjectRetain(a6);
  v31 = a7;
  swift_bridgeObjectRetain(v30);
  v112 = a3;
  v32 = sub_100195350((uint64_t)a1);
  if (v32)
  {
    v33 = v32;
    if ((sub_10017E610(a1) & 1) != 0)
    {
      v34 = v112;
      objc_msgSend(v112, "loadViewIfNeeded");
      v35 = *(void **)&v34[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v35)
      {
        swift_bridgeObjectRelease(v30);

        swift_bridgeObjectRelease(v107);
        swift_unknownObjectRelease(v106);
        __break(1u);
        return;
      }
      v36 = v35;
      objc_msgSend(v33, "frame");
      v37 = objc_msgSend(v36, "_isRectFullyVisible:");

      if ((v37 & 1) != 0)
      {
        v112 = v28;
        v39 = Logger.Rename.unsafeMutableAddressor(v38);
        v40 = v108;
        (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v108, v39, v114);
        v41 = v104;
        (*(void (**)(char *, id, uint64_t))(v16 + 16))(v104, v113, v15);
        v42 = swift_unknownObjectRetain_n(a1, 2);
        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.debug.getter();
        v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          v46 = swift_slowAlloc(32, -1);
          v103 = v16;
          v47 = v46;
          v111 = (char *)swift_slowAlloc(96, -1);
          v117 = v111;
          *(_DWORD *)v47 = 136315650;
          v110 = v43;
          v116 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, (uint64_t *)&v117);
          v113 = v31;
          *(_QWORD *)&v48 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117).n128_u64[0];
          v102 = v15;
          *(_WORD *)(v47 + 12) = 2080;
          v49 = v30;
          v50 = objc_msgSend(a1, "description", v48);
          v51 = v41;
          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          LODWORD(v109) = v45;
          v54 = v53;

          v30 = v49;
          v116 = sub_1000544FC(v52, v54, (uint64_t *)&v117);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
          swift_unknownObjectRelease_n(a1, 2);
          swift_bridgeObjectRelease(v54);
          *(_WORD *)(v47 + 22) = 2080;
          v55 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
          v56 = v102;
          v57 = dispatch thunk of CustomStringConvertible.description.getter(v102, v55);
          v59 = v58;
          v116 = sub_1000544FC(v57, v58, (uint64_t *)&v117);
          v31 = v113;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
          v60 = swift_bridgeObjectRelease(v59);
          (*(void (**)(char *, uint64_t, __n128))(v103 + 8))(v51, v56, v60);
          v61 = v110;
          _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v109, "%s: Immediately found cell for node: %s indexPath: %s", (uint8_t *)v47, 0x20u);
          v62 = v111;
          swift_arrayDestroy(v111, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          swift_slowDealloc(v47, -1, -1);

          (*(void (**)(char *, uint64_t))(v115 + 8))(v108, v114);
        }
        else
        {
          swift_unknownObjectRelease_n(a1, 2);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v41, v15);

          (*(void (**)(char *, uint64_t))(v115 + 8))(v40, v114);
        }
        v99 = v106;
        v98 = v107;
        v100 = v105;
        v101 = v33;
        sub_1001AEB58(v99, v101, v100, v98, v31, v30);
        swift_release(v112);

        return;
      }
    }

  }
  v63 = Logger.Rename.unsafeMutableAddressor(v32);
  v64 = v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v111, v63, v114);
  v65 = *(void (**)(os_log_t, id, uint64_t))(v16 + 16);
  v66 = v110;
  v65(v110, v113, v15);
  v67 = swift_unknownObjectRetain_n(a1, 2);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter(v68);
  v70 = v69;
  if (os_log_type_enabled(v68, v69))
  {
    v71 = swift_slowAlloc(32, -1);
    v108 = a1;
    v72 = v71;
    v107 = swift_slowAlloc(96, -1);
    v117 = (char *)v107;
    *(_DWORD *)v72 = 136315650;
    v106 = v68;
    v116 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, (uint64_t *)&v117);
    v103 = v16;
    *(_QWORD *)&v73 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117).n128_u64[0];
    *(_WORD *)(v72 + 12) = 2080;
    v74 = v15;
    v75 = objc_msgSend(v108, "description", v73);
    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    LODWORD(v105) = v70;
    v77 = v65;
    v78 = v76;
    v80 = v79;

    v15 = v74;
    v81 = v78;
    v65 = v77;
    v116 = sub_1000544FC(v81, v80, (uint64_t *)&v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    swift_unknownObjectRelease_n(v108, 2);
    swift_bridgeObjectRelease(v80);
    *(_WORD *)(v72 + 22) = 2080;
    v82 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v83 = v110;
    v84 = dispatch thunk of CustomStringConvertible.description.getter(v74, v82);
    v86 = v85;
    v116 = sub_1000544FC(v84, v85, (uint64_t *)&v117);
    v16 = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    v87 = swift_bridgeObjectRelease(v86);
    (*(void (**)(os_log_t, uint64_t, __n128))(v16 + 8))(v83, v74, v87);
    v88 = v106;
    _os_log_impl((void *)&_mh_execute_header, v106, (os_log_type_t)v105, "%s: Did not immediately find cell for node: %s indexPath: %s. Scrolling index path on screen", (uint8_t *)v72, 0x20u);
    v89 = v107;
    swift_arrayDestroy(v107, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v89, -1, -1);
    v90 = v72;
    a1 = v108;
    swift_slowDealloc(v90, -1, -1);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v114);
  }
  else
  {
    swift_unknownObjectRelease_n(a1, 2);
    (*(void (**)(os_log_t, uint64_t))(v16 + 8))(v66, v15);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v64, v114);
  }
  v91 = v109;
  v92 = (uint64_t)v113;
  v65((os_log_t)v109, v113, v15);
  v93 = *(unsigned __int8 *)(v16 + 80);
  v94 = (v93 + 48) & ~v93;
  v95 = (char *)swift_allocObject(&unk_1005CC9A8, v94 + v17, v93 | 7);
  v96 = v112;
  *((_QWORD *)v95 + 2) = v112;
  *((_QWORD *)v95 + 3) = a1;
  *((_QWORD *)v95 + 4) = sub_1001CF328;
  *((_QWORD *)v95 + 5) = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v95[v94], v91, v15);
  swift_unknownObjectRetain(a1);
  v97 = v96;
  swift_retain();
  sub_1001959B8(v92, (void (*)(void))sub_1001CF33C, (uint64_t)v95);
  swift_release(v28);
  swift_release(v95);
}

void sub_1001CCF24(id a1, uint64_t a2, _BYTE *a3, uint64_t a4, unint64_t a5, void *a6, void *a7)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  id v27;
  _BYTE *v28;
  void *v29;
  uint64_t v30;
  _BYTE *v31;
  void *v32;
  id v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  os_log_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  id v46;
  id v47;
  id v48;
  os_log_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  __n128 v59;
  os_log_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  id v73;
  uint64_t v74;
  void (*v75)(_BYTE *, uint64_t, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  __n128 v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  os_log_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  _BYTE *v98;
  unint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t ObjectType;
  id v103;
  _BYTE v104[12];
  int v105;
  uint64_t v106;
  os_log_t v107;
  uint64_t v108;
  void *v109;
  unint64_t v110;
  _BYTE *v111;
  os_log_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;

  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD **)(v14 - 8);
  v16 = v15[8];
  v17 = __chkstk_darwin(v14);
  v112 = (os_log_t)&v104[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v17);
  v113 = &v104[-v19];
  __chkstk_darwin(v18);
  v107 = (os_log_t)&v104[-v20];
  v21 = type metadata accessor for Logger(0);
  v116 = *(_QWORD *)(v21 - 8);
  v117 = v21;
  v22 = __chkstk_darwin(v21);
  v114 = &v104[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v111 = &v104[-v24];
  v25 = (_QWORD *)swift_allocObject(&unk_1005CCD68, 48, 7);
  v108 = a4;
  v25[2] = a4;
  v25[3] = a5;
  v25[4] = a6;
  v25[5] = a7;
  v26 = v25;
  v110 = a5;
  swift_bridgeObjectRetain(a5);
  v27 = a6;
  v109 = a7;
  swift_unknownObjectRetain(a7);
  v115 = a3;
  v28 = sub_100195350((uint64_t)a1);
  if (v28)
  {
    v29 = v28;
    v30 = a2;
    if ((sub_10017E610(a1) & 1) != 0)
    {
      v31 = v115;
      objc_msgSend(v115, "loadViewIfNeeded");
      v32 = *(void **)&v31[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v32)
      {
        swift_unknownObjectRelease(v109);

        swift_bridgeObjectRelease(v110);
        __break(1u);
        return;
      }
      v33 = v32;
      objc_msgSend(v29, "frame");
      v34 = objc_msgSend(v33, "_isRectFullyVisible:");

      if ((v34 & 1) != 0)
      {
        v115 = v27;
        v36 = Logger.Rename.unsafeMutableAddressor(v35);
        v37 = v111;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v116 + 16))(v111, v36, v117);
        v38 = v107;
        ((void (*)(os_log_t, uint64_t, uint64_t))v15[2])(v107, v30, v14);
        v39 = swift_unknownObjectRetain_n(a1, 2);
        v40 = Logger.logObject.getter(v39);
        v41 = static os_log_type_t.debug.getter();
        v42 = v41;
        if (os_log_type_enabled(v40, v41))
        {
          v43 = swift_slowAlloc(32, -1);
          v106 = v14;
          v44 = v43;
          v113 = (_BYTE *)swift_slowAlloc(96, -1);
          v119 = v113;
          *(_DWORD *)v44 = 136315650;
          v112 = v40;
          v118 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, (uint64_t *)&v119);
          v114 = v29;
          *(_QWORD *)&v45 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119).n128_u64[0];
          *(_WORD *)(v44 + 12) = 2080;
          v46 = objc_msgSend(a1, "description", v45);
          v105 = v42;
          v47 = a1;
          v48 = v46;
          v49 = v38;
          v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
          v51 = v15;
          v53 = v52;

          v118 = sub_1000544FC(v50, v53, (uint64_t *)&v119);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
          swift_unknownObjectRelease_n(v47, 2);
          swift_bridgeObjectRelease(v53);
          *(_WORD *)(v44 + 22) = 2080;
          v54 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
          v55 = v106;
          v56 = dispatch thunk of CustomStringConvertible.description.getter(v106, v54);
          v58 = v57;
          v118 = sub_1000544FC(v56, v57, (uint64_t *)&v119);
          v29 = v114;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
          v59 = swift_bridgeObjectRelease(v58);
          ((void (*)(os_log_t, uint64_t, __n128))v51[1])(v49, v55, v59);
          v60 = v112;
          _os_log_impl((void *)&_mh_execute_header, v112, (os_log_type_t)v105, "%s: Immediately found cell for node: %s indexPath: %s", (uint8_t *)v44, 0x20u);
          v61 = v113;
          swift_arrayDestroy(v113, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v61, -1, -1);
          swift_slowDealloc(v44, -1, -1);

          (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v111, v117);
        }
        else
        {
          swift_unknownObjectRelease_n(a1, 2);
          ((void (*)(os_log_t, uint64_t))v15[1])(v38, v14);

          (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v37, v117);
        }
        v100 = v109;
        v99 = v110;
        v101 = v108;
        ObjectType = swift_getObjectType(v109, v62);
        v103 = v29;
        sub_1001B9120(v100, v103, v101, v99, v115, ObjectType);
        swift_release(v26);

        return;
      }
    }

    a2 = v30;
  }
  v63 = Logger.Rename.unsafeMutableAddressor(v28);
  v64 = v114;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v116 + 16))(v114, v63, v117);
  v65 = (void (*)(_BYTE *, uint64_t, uint64_t))v15[2];
  v66 = v113;
  v65(v113, a2, v14);
  v67 = swift_unknownObjectRetain_n(a1, 2);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter(v68);
  LODWORD(v110) = v69;
  if (os_log_type_enabled(v68, v69))
  {
    v70 = swift_slowAlloc(32, -1);
    v111 = a1;
    v71 = v70;
    v108 = swift_slowAlloc(96, -1);
    v119 = (_BYTE *)v108;
    *(_DWORD *)v71 = 136315650;
    v107 = v68;
    v118 = sub_1000544FC(0xD000000000000032, 0x8000000100515460, (uint64_t *)&v119);
    v109 = v15;
    *(_QWORD *)&v72 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119).n128_u64[0];
    *(_WORD *)(v71 + 12) = 2080;
    v106 = v71 + 14;
    v73 = objc_msgSend(v111, "description", v72);
    v74 = v16;
    v75 = v65;
    v76 = a2;
    v77 = v26;
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
    v79 = v14;
    v81 = v80;

    v82 = v78;
    v26 = v77;
    a2 = v76;
    v65 = v75;
    v16 = v74;
    v118 = sub_1000544FC(v82, v81, (uint64_t *)&v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
    swift_unknownObjectRelease_n(v111, 2);
    v83 = v81;
    v14 = v79;
    swift_bridgeObjectRelease(v83);
    *(_WORD *)(v71 + 22) = 2080;
    v84 = sub_10005A360(qword_100645550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v85 = v113;
    v86 = dispatch thunk of CustomStringConvertible.description.getter(v14, v84);
    v88 = v87;
    v118 = sub_1000544FC(v86, v87, (uint64_t *)&v119);
    v15 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
    v89 = swift_bridgeObjectRelease(v88);
    ((void (*)(_BYTE *, uint64_t, __n128))v15[1])(v85, v14, v89);
    v90 = v107;
    _os_log_impl((void *)&_mh_execute_header, v107, (os_log_type_t)v110, "%s: Did not immediately find cell for node: %s indexPath: %s. Scrolling index path on screen", (uint8_t *)v71, 0x20u);
    v91 = v108;
    swift_arrayDestroy(v108, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    v92 = v71;
    a1 = v111;
    swift_slowDealloc(v92, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v114, v117);
  }
  else
  {
    swift_unknownObjectRelease_n(a1, 2);
    ((void (*)(_BYTE *, uint64_t))v15[1])(v66, v14);

    (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v64, v117);
  }
  v93 = v112;
  v65(v112, a2, v14);
  v94 = *((unsigned __int8 *)v15 + 80);
  v95 = (v94 + 48) & ~v94;
  v96 = (char *)swift_allocObject(&unk_1005CCD90, v95 + v16, v94 | 7);
  v97 = v115;
  *((_QWORD *)v96 + 2) = v115;
  *((_QWORD *)v96 + 3) = a1;
  *((_QWORD *)v96 + 4) = sub_1001CF8B4;
  *((_QWORD *)v96 + 5) = v26;
  ((void (*)(char *, os_log_t, uint64_t))v15[4])(&v96[v95], v93, v14);
  swift_unknownObjectRetain(a1);
  v98 = v97;
  swift_retain();
  sub_1001959B8(a2, (void (*)(void))sub_1001CF33C, (uint64_t)v96);
  swift_release(v26);
  swift_release(v96);
}

uint64_t sub_1001CD76C(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  char v9;
  uint64_t v11;
  _BYTE v12[40];
  _BYTE v13[24];

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1F8))();
  if (v3
    && (v4 = (void *)v3,
        v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node),
        swift_beginAccess(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node, v13, 0, 0),
        v6 = *v5,
        swift_unknownObjectRetain(v6),
        v4,
        v6))
  {
    v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v7, v12);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v6;
    v11 = inited;
    specialized Array._endMutation()(inited);
    swift_unknownObjectRetain(v6);
    v9 = sub_1003598CC(a2, v11);
    swift_bridgeObjectRelease(v11);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

void *sub_1001CD860(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *result;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  uint64_t v19;

  v3 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v19 - v12;
  objc_msgSend(v1, "loadViewIfNeeded", v11);
  result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    v15 = objc_msgSend(result, "indexPathForCell:", a1);
    if (v15)
    {
      v16 = v15;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v15);

      v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v17(v5, v9, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v17(v13, v5, v6);
        v18 = sub_1001BFEFC((uint64_t)v13);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        return (void *)(v18 & 1);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_10000CB4C((uint64_t)v5, (uint64_t *)&unk_100642710);
    v18 = 0;
    return (void *)(v18 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CDA1C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  void *v31;
  uint64_t ObjectType;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v34;

  v2 = v1;
  v4 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v34 - v19;
  result = (uint64_t)objc_msgSend(v2, "isEditing", v18);
  if ((result & 1) != 0)
    return result;
  objc_msgSend(v2, "loadViewIfNeeded");
  result = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_21;
  }
  v22 = objc_msgSend((id)result, "indexPathForCell:", a1);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_12;
  }
  v23 = v22;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

  v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v24(v9, v16, v10);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v25(v9, 0, 1, v10);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v26(v9, 1, v10) == 1)
  {
LABEL_12:
    v28 = (uint64_t)v9;
    return sub_10000CB4C(v28, (uint64_t *)&unk_100642710);
  }
  v27 = ((uint64_t (*)(char *, char *, uint64_t))v24)(v20, v9, v10);
  if (IndexPath.count.getter(v27) != 2)
  {
LABEL_10:
    v25(v6, 1, 1, v10);
LABEL_14:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    v28 = (uint64_t)v6;
    return sub_10000CB4C(v28, (uint64_t *)&unk_100642710);
  }
  result = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if ((objc_msgSend((id)result, "isGathering") & 1) == 0
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_100195148((uint64_t)v20) & 1) != 0)
  {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v20, v10);
  v25(v6, 0, 1, v10);
  if (v26(v6, 1, v10) == 1)
    goto LABEL_14;
  v24(v13, v6, v10);
  v29 = sub_10017A754((uint64_t)v13, 0);
  if (v29)
  {
    v31 = (void *)v29;
    ObjectType = swift_getObjectType(v29);
    sub_1001B66A4(v31, 0, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0, v2, ObjectType);
    v30 = swift_unknownObjectRelease(v31);
  }
  v33 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v33(v13, v10, v30);
  return ((uint64_t (*)(char *, uint64_t))v33)(v20, v10);
}

id sub_1001CDD48()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  id v4;
  char v5;

  v1 = v0;
  result = objc_msgSend(v0, "loadViewIfNeeded");
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    v4 = v3;
    v5 = UIScrollView.doc_isMoving.getter();

    if ((v5 & 1) != 0)
      return 0;
    else
      return (id)(objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration], "isPickerUI") ^ 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s5Files31DOCItemCollectionViewControllerC25adaptivePresentationStyle3for05traitC0So07UIModalgH0VSo014UIPresentationE0C_So07UITraitC0CtF_0(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t Strong;
  void *v4;
  id v5;
  char v6;

  v2 = objc_msgSend(a1, "presentedViewController");
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_presentedCollaborationViewController);
  v4 = (void *)Strong;
  if (v2)
  {
    if (Strong)
    {
      sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
      v5 = v2;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

      if ((v6 & 1) == 0)
        return -2;
      return -1;
    }
    v4 = v2;
  }
  else if (!Strong)
  {
    return -1;
  }

  return -2;
}

uint64_t sub_1001CDE80()
{
  return type metadata accessor for DOCItemCollectionViewController(0);
}

uint64_t sub_1001CDE88()
{
  return type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(0);
}

uint64_t type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100646458, (uint64_t)&nominal type descriptor for DOCItemCollectionViewController.PendingNodeContext);
}

void sub_1001CDEA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = "\b";
  sub_1000B1D24(319, (unint64_t *)&qword_100643A30, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for () + 64;
    v4 = type metadata accessor for UUID(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_1004DC3C0;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 80);
    }
  }
}

uint64_t type metadata accessor for DOCItemCollectionViewController.ScrollDragSessionContext()
{
  return objc_opt_self(_TtCC5Files31DOCItemCollectionViewController24ScrollDragSessionContext);
}

uint64_t initializeWithCopy for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.RestorableConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.RestorableConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.RestorableConfiguration()
{
  return &type metadata for DOCItemCollectionViewController.RestorableConfiguration;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[40])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics()
{
  return &type metadata for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[32])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext()
{
  return &type metadata for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.NextReloadPendingValues(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.NextReloadPendingValues(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001CE34C + 4 * byte_1004DC21D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001CE380 + 4 * byte_1004DC218[v4]))();
}

uint64_t sub_1001CE380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CE388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CE390);
  return result;
}

uint64_t sub_1001CE39C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CE3A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001CE3A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CE3B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.NextReloadPendingValues()
{
  return &type metadata for DOCItemCollectionViewController.NextReloadPendingValues;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.DOCMultiSelectActionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001CE418 + 4 * byte_1004DC227[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001CE44C + 4 * byte_1004DC222[v4]))();
}

uint64_t sub_1001CE44C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CE454(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CE45CLL);
  return result;
}

uint64_t sub_1001CE468(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CE470);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001CE474(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CE47C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.DOCMultiSelectActionStatus()
{
  return &type metadata for DOCItemCollectionViewController.DOCMultiSelectActionStatus;
}

_QWORD *sub_1001CE498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for IndexPath(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_unknownObjectRetain(v4);
    v13(v10, v11, v12);
    *(_QWORD *)((char *)v7 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
    v14 = *(int *)(a3 + 24);
    *((_BYTE *)v7 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v15 = *(_QWORD *)((char *)a2 + v14);
    *(_QWORD *)((char *)v7 + v14) = v15;
    swift_bridgeObjectRetain(v15);
  }
  return v7;
}

double sub_1001CE578(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  double result;

  swift_unknownObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) + 20);
  v5 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24))).n128_u64[0];
  return result;
}

_QWORD *sub_1001CE5DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *a1 = *a2;
  v7 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_unknownObjectRetain(v6);
  v12(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
  v13 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v14 = *(_QWORD *)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  return a1;
}

_QWORD *sub_1001CE694(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v9 = *(int *)(v8 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v13 = *(int *)(a3 + 24);
  v14 = *(_QWORD *)((char *)a2 + v13);
  v15 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

_QWORD *sub_1001CE750(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  v11 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  return a1;
}

_QWORD *sub_1001CE7E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v6);
  v7 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
  v12 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  v13 = *(_QWORD *)((char *)a1 + v12);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t sub_1001CE890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001CE90C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t *sub_1001CE984(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for IndexPath(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_unknownObjectRetain(v4);
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_1001CEA38(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_unknownObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for IndexPath(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_1001CEA80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_unknownObjectRetain(v6);
  v11(v8, v9, v10);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_1001CEB0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1001CEB94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_1001CEC0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001CEC8C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for IndexPath(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

char *sub_1001CED08(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for IndexPath(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

unint64_t sub_1001CED80()
{
  unint64_t result;

  result = qword_1006469F0;
  if (!qword_1006469F0)
  {
    result = swift_getWitnessTable(&unk_1004DC860, &type metadata for DOCItemCollectionViewController.DOCMultiSelectActionStatus);
    atomic_store(result, (unint64_t *)&qword_1006469F0);
  }
  return result;
}

uint64_t sub_1001CEDC4()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1001CEDD0()
{
  return sub_1001D0C64(40);
}

uint64_t sub_1001CEDD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100646A1C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100118844;
  return sub_10017B91C(a1, v4, v5, v6);
}

uint64_t sub_1001CEE44()
{
  return sub_1001D0C64(41);
}

uint64_t sub_1001CEE4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_100646A2C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100118844;
  return sub_10017C398(a1, v4, v5, v6, v7);
}

uint64_t sub_1001CEEC8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001CEEEC(uint64_t a1)
{
  uint64_t v1;

  sub_1001117AC(a1, v1);
}

uint64_t sub_1001CEEF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CEF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100646A3C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100118844;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100646A38 + dword_100646A38))(a1, v4);
}

uint64_t sub_1001CEF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_1001CEFB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1001CEFDC()
{
  uint64_t v0;

  sub_1002EC424(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1001CEFF0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001CF024()
{
  uint64_t v0;

  return sub_100189184(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1001CF030()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_unknownObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001CF074(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_100646A94);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1000EA854;
  return sub_1001A95C0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1001CF108()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001CF13C(char a1)
{
  uint64_t v1;

  sub_1001AA018(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1001CF148(uint64_t a1)
{
  uint64_t v1;

  sub_1001ACBCC(a1, v1);
}

void sub_1001CF150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001ABB28(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1001CF158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  return swift_deallocObject(v0, v8 + 8, v2 | 7);
}

uint64_t sub_1001CF21C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001ABC70(v0 + v2, *(char **)(v0 + v3), *(char **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001CF26C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001CF2A8(uint64_t a1)
{
  return sub_10010C810(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001B0D40);
}

uint64_t sub_1001CF2B4()
{
  return sub_1001CF7E0((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

void sub_1001CF2C0(uint64_t a1)
{
  uint64_t *v1;

  sub_1001857F4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001CF2CC()
{
  return sub_1001CF7E0((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1001CF2D8(void *a1)
{
  uint64_t v1;

  sub_100185900(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, __n128))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1001CF2E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100185FBC(a1, *(uint64_t (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001CF2EC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001CF328(void *a1)
{
  uint64_t v1;

  sub_1001B0304(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1001CF340()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001CF384()
{
  uint64_t v0;

  return sub_1001AEE0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56));
}

void sub_1001CF394(void *a1)
{
  uint64_t v1;

  sub_100195DB0(a1, v1);
}

void sub_1001CF39C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100196134(a1, a2, v2);
}

uint64_t sub_1001CF3AC()
{
  return sub_1001D0C64(40);
}

uint64_t sub_1001CF3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001976F4(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, __n128))(v2 + 24));
}

_QWORD *sub_1001CF3C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = (void *)a1[6];
  v7 = (void *)a1[8];
  swift_unknownObjectRetain(*a1);
  sub_10008BA00(v2, v3);
  sub_10008BA00(v4, v5);
  v8 = v6;
  v9 = v7;
  return a1;
}

uint64_t sub_1001CF438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  v7 = v0 + v6;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v6 + 8))
    swift_release(*(_QWORD *)(v7 + 16));
  if (*(_QWORD *)(v7 + 24))
    swift_release(*(_QWORD *)(v7 + 32));

  return swift_deallocObject(v0, v6 + 73, v3 | 7);
}

void sub_1001CF524()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100196764(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v2, *(void **)(v0 + v3), (__int128 *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 72));
}

uint64_t sub_1001CF590()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v0 + 64))
    swift_release(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

void sub_1001CF60C(char a1)
{
  uint64_t v1;

  sub_100196AB0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), (__int128 *)(v1 + 40), *(void **)(v1 + 112), *(_BYTE *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_1001CF644()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v0 + 64))
    swift_release(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 144));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1001CF6C0()
{
  uint64_t v0;

  return sub_100196C2C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + 40, *(_QWORD *)(v0 + 112), *(void **)(v0 + 120), *(unsigned __int8 *)(v0 + 128), *(uint64_t (**)(void))(v0 + 136));
}

void sub_1001CF6F8()
{
  uint64_t v0;

  sub_100197694(v0);
}

uint64_t sub_1001CF700()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001CF74C()
{
  uint64_t v0;

  return sub_1001AF324(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1001CF760()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1001CF7A4(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001AF68C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_1001CF7B8()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001B00C0);
}

uint64_t sub_1001CF7C8(uint64_t a1)
{
  return sub_10010C810(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001AFDC8);
}

uint64_t sub_1001CF7D4()
{
  return sub_1001CF7E0((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001CF7E0(void (*a1)(_QWORD))
{
  _QWORD *v1;

  swift_release(v1[2]);
  a1(v1[3]);
  swift_release(v1[5]);
  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001CF824()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001CF860()
{
  uint64_t v0;

  return sub_1001B8CFC(*(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE **)(v0 + 32));
}

uint64_t sub_1001CF874()
{
  uint64_t v0;

  return sub_1001B0B08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001CF880()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001CF8B4(void *a1)
{
  uint64_t v1;

  sub_1001B0840(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1001CF8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001CF948()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1001ADBC0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_1001CF980()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1001CF9B4(uint64_t a1)
{
  uint64_t v1;

  sub_1001AA69C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1001CF9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10006922C(&qword_100646AD0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001CFA24(void *a1)
{
  sub_10006922C(&qword_100646AD0);
  return sub_1001AA7CC(a1);
}

uint64_t sub_1001CFA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100222188(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1001CFA74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1001CFAA0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100194258(a1, a2, *(void **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001CFB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v12 + 8, v13);
}

void sub_1001CFC54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100194454(*(void **)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(uint64_t (**)(uint64_t))(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + v5), *(void **)(v0 + v6), *(void **)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001CFD00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

double sub_1001CFD3C()
{
  uint64_t v0;

  return sub_1002220E4(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_QWORD *)(v0 + 48), *(uint64_t (**)(double, double, double, double))(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1001CFD64()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CFD8C()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

Swift::Int sub_1001CFD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001A7980(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001CFDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10037D138(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001CFDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(a3, a4);
}

uint64_t sub_1001CFDD4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 66, 7);
}

void sub_1001CFE10()
{
  uint64_t v0;

  sub_100192008(*(void **)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void ****)(v0 + 40), *(void (**)(id, id, void *, void *, double, double, double, double))(v0 + 48), *(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_1001CFE2C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_unknownObjectRelease(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1001CFE70(void *a1)
{
  uint64_t v1;

  sub_100193400(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id, id, void *, void *, double, double, double, double))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1001CFE8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001CFEC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  _BYTE v5[24];

  v1 = v0[2];
  v2 = (uint64_t (*)(uint64_t))v0[3];
  v3 = v0[5];
  swift_beginAccess(v1 + 16, v5, 1, 0);
  *(_BYTE *)(v1 + 16) = 1;
  return v2(v3);
}

uint64_t sub_1001CFF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v11 = v3 | 7;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6 + 8));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v11);
}

void sub_1001D000C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100194080(a1, *(void **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(void **)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001D00A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100643470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1001D00F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A7500(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001D00FC()
{
  return sub_1001D1384((void (*)(_QWORD))&_swift_release, 48);
}

double sub_1001D010C()
{
  _QWORD *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void (*v4)(void);
  double result;

  v1 = (char *)v0[2];
  v2 = (void *)v0[3];
  v4 = (void (*)(void))v0[4];
  v3 = v0[5];
  swift_retain();
  sub_1001CAD08(v2, v1, v4);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_1001D0158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A6CD0(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001D0164()
{
  return sub_1001D1384((void (*)(_QWORD))&_swift_release, 48);
}

void sub_1001D0174()
{
  uint64_t v0;

  sub_1001A6FF4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(id, __n128))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001D0180()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001D01AC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001A7060(a1, a2, *(void (**)(id, __n128))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1001D01C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1001D0258(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001A438C(a1, a2, (void *)(v2 + v6), *(_QWORD *)(v2 + v7), *(char **)(v2 + v7 + 8), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001D02C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

uint64_t sub_1001D02F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001D0324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A4BE8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001D0330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + v7));

  swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v2 | 7);
}

uint64_t sub_1001D0408()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001A4D60(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(void *, char *, __n128))(v0+ ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001D0468()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001D049C(uint64_t a1)
{
  uint64_t v1;

  sub_1001A53E8(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(_QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1001D04B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001D04E4(uint64_t a1)
{
  uint64_t v1;

  sub_1001A6350(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1001D04F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001D0528()
{
  uint64_t v0;

  return sub_1001A6218(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1001D0538()
{
  return sub_1001D06C4((void (*)(_QWORD))&_swift_release, 32);
}

uint64_t sub_1001D0548()
{
  uint64_t v0;

  return sub_10018A944(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D0550(_QWORD *a1)
{
  uint64_t v1;

  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1001D058C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001D05C8()
{
  uint64_t v0;

  return sub_1001A6434(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1001D05DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1001D0600(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A3D54(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001D0608(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

void *sub_1001D0614(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease(a2);
  }
  return result;
}

void sub_1001D0640()
{
  uint64_t v0;

  sub_100194A10(v0);
}

uint64_t sub_1001D0648()
{
  return sub_1001D06C4((void (*)(_QWORD))&_swift_unknownObjectRelease, 40);
}

uint64_t sub_1001D0658()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D0668(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);

  return a1;
}

void sub_1001D06A4(uint64_t a1)
{
  uint64_t v1;

  sub_100190EAC(a1, v1);
}

BOOL sub_1001D06AC(uint64_t a1, objc_class *a2)
{
  uint64_t v2;

  return sub_100190F1C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1001D06B4()
{
  return sub_1001D06C4((void (*)(_QWORD))&_swift_bridgeObjectRelease, 32);
}

uint64_t sub_1001D06C4(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16));
  a1(*(_QWORD *)(v2 + 24));
  return swift_deallocObject(v2, a2, 7);
}

void sub_1001D0708()
{
  uint64_t v0;

  sub_10018E994(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1001D0710()
{
  sub_1001808B8(1);
}

uint64_t sub_1001D0734(uint64_t *a1)
{
  uint64_t v1;

  return sub_1000E12B8(a1, *(uint64_t **)(v1 + 16)) & 1;
}

void sub_1001D0750(uint64_t a1, void **a2)
{
  uint64_t v2;

  sub_10018D148(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1001D0758(uint64_t a1, void **a2)
{
  uint64_t v2;

  return sub_10018D00C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1001D0760(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1001D0788(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D07CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 48);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001D07F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  void *v11;

  v2 = *(void **)(a1 + 136);
  v11 = *(void **)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v10 = *(_OWORD *)(a1 + 192);
  sub_10007B580(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72));
  sub_10007B580(v11, v2, v3, v4, v5, v6, v7, v8, v10, *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_1001D08D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_unknownObjectRetain(a3);
  }
  return result;
}

void sub_1001D0908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001804BC(a1, a2, v2);
}

id sub_1001D0910@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "itemsOrigin");
  *a2 = result;
  return result;
}

void sub_1001D0940(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001803A4(a1, a2, v2);
}

uint64_t sub_1001D0948()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1001D0954()
{
  uint64_t v0;

  sub_100180458(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001D095C(uint64_t a1)
{
  uint64_t v1;

  sub_10017FBF4(a1, v1);
}

id sub_1001D0964(uint64_t a1)
{
  uint64_t v1;

  return sub_10017EC34(a1, v1);
}

void sub_1001D096C()
{
  uint64_t v0;

  sub_10017F758(v0);
}

void sub_1001D0974()
{
  uint64_t v0;

  sub_10017F7B0(v0);
}

double sub_1001D097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10017F660(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1001D0984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10017F568(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1001D098C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_1001D09B0()
{
  uint64_t v0;

  return sub_100424224(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1001D09BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D09CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_release(a5);
  }
  return result;
}

uint64_t sub_1001D0A08(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

id sub_1001D0A30()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setSearchController:", *(_QWORD *)(v0 + 24));
}

id sub_1001D0A40()
{
  uint64_t v0;

  return sub_1001763F4(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1001D0A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100646C74);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100646C70 + dword_100646C70))(a1, v4);
}

void sub_1001D0AB8(void *a1)
{
  uint64_t v1;

  sub_1001A0064(a1, v1);
}

uint64_t sub_1001D0AC0()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1001D0ACC()
{
  uint64_t v0;

  sub_1001A0128(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001D0AD4()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_1001D0AE0()
{
  uint64_t v0;

  sub_10019F0EC(*(_BYTE **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001D0AE8()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_1001D0AF4()
{
  uint64_t v0;

  sub_10019F974(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

void sub_1001D0AFC()
{
  uint64_t v0;

  sub_1001A87E8(*(char **)(v0 + 16));
}

uint64_t sub_1001D0B04(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001A90E8(a1, a2, v2);
}

uint64_t sub_1001D0B0C()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001D0B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001A8DC8(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001D0B20()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

double sub_1001D0B2C()
{
  uint64_t v0;

  return sub_1001A9060(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D0B34()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1001D0B40()
{
  uint64_t v0;

  sub_1001A9308(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001D0B4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));

  return swift_deallocObject(v0, 137, 7);
}

void sub_1001D0BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  char *v7;
  void (*v8)(void);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 v12;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(void **)(v2 + 24);
  v7 = *(char **)(v2 + 32);
  v8 = *(void (**)(void))(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v11 = v2 + 64;
  v12 = *(_BYTE *)(v2 + 136);
  swift_getObjectType(v6);
  sub_1001B87B8(a1, a2, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1001D0C5C()
{
  return sub_1001D0C64(40);
}

uint64_t sub_1001D0C64(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001D0CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = v0 + v5;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v5 + 8))
    swift_release(*(_QWORD *)(v6 + 16));
  if (*(_QWORD *)(v6 + 24))
    swift_release(*(_QWORD *)(v6 + 32));

  return swift_deallocObject(v0, v5 + 73, v3 | 7);
}

void sub_1001D0D7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_10019634C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), v0 + v2, v3, *(_BYTE *)(v3 + 72));
}

void sub_1001D0DDC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming) = 0;
  sub_100097F64();
}

uint64_t sub_1001D0E08()
{
  return sub_1001D1384((void (*)(_QWORD))&_swift_release, 48);
}

double sub_1001D0E18()
{
  uint64_t v0;

  return sub_1001A7E84(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001D0E24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D0E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001D0EC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1001B1468(*(char **)(v0 + 16), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

void sub_1001D0F04()
{
  uint64_t v0;

  sub_1001A0394(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D0F0C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D0F40()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1)
    return v1(result);
  return result;
}

uint64_t sub_1001D0F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = swift_dynamicCastMetatype(a2, a3);
  if (result)
  {
    if (swift_conformsToProtocol2(a2, a4))
      return a1;
    else
      return 0;
  }
  return result;
}

_QWORD *sub_1001D0FDC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_1001D1010()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D1020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001D1094()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_10019D840(*(void ***)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1001D10CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001D1150(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_10019D588(a1, a2, *(_QWORD *)(v2 + 16), *(void ***)(v2 + 24), *(void **)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void **)(v2 + 48), v2 + ((v5 + 56) & ~v5));
}

uint64_t sub_1001D11AC()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

void sub_1001D11B8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100199BF8(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001D11C0()
{
  return sub_10001EBA4((void (*)(_QWORD))&_swift_release);
}

void sub_1001D11CC()
{
  uint64_t v0;

  sub_100199F08(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001D11D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001D1248()
{
  uint64_t v0;
  void *v1;
  Class isa;

  type metadata accessor for IndexPath(0);
  v1 = *(void **)(v0 + 16);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "deselectItemAtIndexPath:animated:", isa, 1);

}

uint64_t sub_1001D12AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001D1320()
{
  uint64_t v0;

  type metadata accessor for IndexPath(0);
  sub_10019DA84(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001D1354()
{
  uint64_t v0;

  sub_100198C04(*(void **)(v0 + 16));
}

void sub_1001D135C()
{
  uint64_t v0;

  sub_100198D3C(*(void **)(v0 + 16));
}

uint64_t sub_1001D1364()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D1374()
{
  return sub_1001D1384((void (*)(_QWORD))&_swift_bridgeObjectRelease, 56);
}

uint64_t sub_1001D1384(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 24));
  a1(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1001D13D0()
{
  return sub_10010D7A0(sub_1001AD698);
}

_QWORD *sub_1001D13DC(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

_QWORD *sub_1001D1404(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1001D142C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D143C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D1470()
{
  uint64_t v0;

  return sub_1001905E0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1001D147C()
{
  uint64_t v0;

  sub_100189EDC(v0);
}

uint64_t sub_1001D1484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_unknownObjectRelease(a3);
  }
  return result;
}

uint64_t sub_1001D14B4()
{
  uint64_t v0;

  return sub_10018A030(*(char **)(v0 + 16), 0);
}

void sub_1001D14D0(uint64_t a1)
{
  uint64_t v1;

  sub_10017A438(a1, v1);
}

uint64_t sub_1001D14D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Notification(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_1001D154C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Notification(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1001878C4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1001D158C()
{
  uint64_t v0;

  sub_10009BC94(*(void **)(v0 + 16), *(char **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void *sub_1001D1598(void *result, uint64_t a2)
{
  id v3;

  if (result)
  {
    v3 = result;
    return (void *)swift_unknownObjectRetain(a2);
  }
  return result;
}

uint64_t sub_1001D15C4()
{
  return sub_10007DBE8((void (*)(_QWORD))&_swift_release);
}

void sub_1001D15D0()
{
  uint64_t v0;

  sub_10018759C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D15D8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for DOCFileEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v7 = v0 + v4;
  v8 = type metadata accessor for FileEntityIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5]));
  swift_release(*(_QWORD *)(v7 + v1[6]));

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D1688(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DOCFileEntity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100658E9C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_100118844;
  return sub_1004BD410(a1, v5, v6, v7, v8);
}

uint64_t sub_1001D171C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for IndexPath(0);
  v5 = sub_10005A360((unint64_t *)&qword_100649150, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

uint64_t sub_1001D1790@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10017A754(a1, *(_QWORD *)(v2 + 24));
  *a2 = result;
  return result;
}

void sub_1001D17CC(uint64_t a1)
{
  uint64_t v1;

  sub_1001ACD10(a1, v1);
}

uint64_t sub_1001D17D4(__int128 *a1, int64_t a2)
{
  return sub_100180DD8(a1, a2);
}

id sub_1001D17DC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  objc_msgSend(v1, "setAlpha:", 0.0);
  return objc_msgSend(v1, "layoutBelowIfNeeded");
}

uint64_t sub_1001D1824()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D1834()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D1844(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_10019E96C(a1, a2, v2);
}

uint64_t sub_1001D184C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D185C(char *a1)
{
  uint64_t v1;

  sub_10019E898(a1, v1);
}

uint64_t destroy for DOCItemCollectionViewController.UpdatedLayoutInfo(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t initializeWithCopy for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.UpdatedLayoutInfo()
{
  return &type metadata for DOCItemCollectionViewController.UpdatedLayoutInfo;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileProviderSourceType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSourceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001D1B64(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1001D1B6C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

_QWORD *sub_1001D1B78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)v7 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for IndexPath(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_unknownObjectRetain(v4);
    v13(v10, v11, v12);
    *(_QWORD *)((char *)v7 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
    v14 = type metadata accessor for ScrollPositionInfo(0);
    *((_BYTE *)v7 + *(int *)(v14 + 20)) = *((_BYTE *)a2 + *(int *)(v14 + 20));
    v15 = *(int *)(v14 + 24);
    v16 = *(_QWORD *)((char *)a2 + v15);
    *(_QWORD *)((char *)v7 + v15) = v16;
    v17 = *(int *)(a3 + 20);
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain(v16);
    if (v20)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      v23 = *((_OWORD *)v19 + 1);
      *((_OWORD *)v18 + 1) = v23;
      swift_bridgeObjectRetain(v20);
      swift_unknownObjectRetain(v23);
    }
    else
    {
      v21 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v21;
    }
  }
  return v7;
}

double sub_1001D1CB4(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  char *v8;
  uint64_t v9;

  swift_unknownObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) + 20);
  v5 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for ScrollPositionInfo(0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(v6 + 24))).n128_u64[0];
  v8 = (char *)a1 + *(int *)(a2 + 20);
  v9 = *((_QWORD *)v8 + 1);
  if (v9)
  {
    swift_bridgeObjectRelease(v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(*((_QWORD *)v8 + 2)).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1001D1D4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v22;

  v6 = *a2;
  *a1 = *a2;
  v7 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_unknownObjectRetain(v6);
  v12(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
  v13 = type metadata accessor for ScrollPositionInfo(0);
  *((_BYTE *)a1 + *(int *)(v13 + 20)) = *((_BYTE *)a2 + *(int *)(v13 + 20));
  v14 = *(int *)(v13 + 24);
  v15 = *(_QWORD *)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain(v15);
  if (v19)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v22 = *((_OWORD *)v18 + 1);
    *((_OWORD *)v17 + 1) = v22;
    swift_bridgeObjectRetain(v19);
    swift_unknownObjectRetain(v22);
  }
  else
  {
    v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
  }
  return a1;
}

_QWORD *sub_1001D1E60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v30;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v9 = *(int *)(v8 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(v8 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 24));
  v13 = type metadata accessor for ScrollPositionInfo(0);
  *((_BYTE *)a1 + *(int *)(v13 + 20)) = *((_BYTE *)a2 + *(int *)(v13 + 20));
  v14 = *(int *)(v13 + 24);
  v15 = *(_QWORD *)((char *)a2 + v14);
  v16 = *(_QWORD *)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = *(int *)(a3 + 20);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a1 + v17 + 8);
  v21 = v19[1];
  if (v20)
  {
    if (v21)
    {
      *v18 = *v19;
      v22 = v19[1];
      v18[1] = v22;
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRelease(v20);
      v23 = v19[2];
      v24 = v19[3];
      v25 = v18[2];
      v18[2] = v23;
      swift_unknownObjectRetain(v23);
      swift_unknownObjectRelease(v25);
      v18[3] = v24;
    }
    else
    {
      sub_1001D1FD4((uint64_t)v18);
      v27 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v27;
    }
  }
  else if (v21)
  {
    *v18 = *v19;
    v26 = v19[1];
    v18[1] = v26;
    v30 = *((_OWORD *)v19 + 1);
    *((_OWORD *)v18 + 1) = v30;
    swift_bridgeObjectRetain(v26);
    swift_unknownObjectRetain(v30);
  }
  else
  {
    v28 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v28;
  }
  return a1;
}

uint64_t sub_1001D1FD4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
  return a1;
}

_QWORD *sub_1001D2004(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v7 = *(int *)(v6 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 24));
  v11 = type metadata accessor for ScrollPositionInfo(0);
  *((_BYTE *)a1 + *(int *)(v11 + 20)) = *((_BYTE *)a2 + *(int *)(v11 + 20));
  *(_QWORD *)((char *)a1 + *(int *)(v11 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 24));
  v12 = *(int *)(a3 + 20);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  return a1;
}

_QWORD *sub_1001D20BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v6 = *a1;
  *a1 = *a2;
  swift_unknownObjectRelease(v6);
  v7 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  v8 = *(int *)(v7 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 24));
  v12 = type metadata accessor for ScrollPositionInfo(0);
  *((_BYTE *)a1 + *(int *)(v12 + 20)) = *((_BYTE *)a2 + *(int *)(v12 + 20));
  v13 = *(int *)(v12 + 24);
  v14 = *(_QWORD *)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(int *)(a3 + 20);
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a1 + v15 + 8);
  if (!v18)
    goto LABEL_5;
  v19 = *((_QWORD *)v17 + 1);
  if (!v19)
  {
    sub_1001D1FD4(v16);
LABEL_5:
    v23 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v23;
    return a1;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v19;
  swift_bridgeObjectRelease(v18);
  v20 = *((_QWORD *)v17 + 2);
  v21 = *((_QWORD *)v17 + 3);
  v22 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v16 + 16) = v20;
  swift_unknownObjectRelease(v22);
  *(_QWORD *)(v16 + 24) = v21;
  return a1;
}

uint64_t sub_1001D21C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for ScrollPositionInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1001D224C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ScrollPositionInfo(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t destroy for RestorableSearchInfo(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for RestorableSearchInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for RestorableSearchInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[3] = v7;
  return a1;
}

_QWORD *assignWithTake for RestorableSearchInfo(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease(v5);
  a1[3] = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for RestorableSearchInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RestorableSearchInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RestorableSearchInfo()
{
  return &type metadata for RestorableSearchInfo;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionRowColumn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001D24DC + 4 * byte_1004DC231[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001D2510 + 4 * byte_1004DC22C[v4]))();
}

uint64_t sub_1001D2510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D2518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D2520);
  return result;
}

uint64_t sub_1001D252C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D2534);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001D2538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D2540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1001D2550()
{
  unint64_t result;

  result = qword_100646DC0;
  if (!qword_100646DC0)
  {
    result = swift_getWitnessTable(&unk_1004DCA6C, &type metadata for DOCItemCollectionRowColumn);
    atomic_store(result, (unint64_t *)&qword_100646DC0);
  }
  return result;
}

unint64_t sub_1001D2598()
{
  unint64_t result;

  result = qword_100646DC8;
  if (!qword_100646DC8)
  {
    result = swift_getWitnessTable(&unk_1004DCABC, &type metadata for DOCItemCollectionViewController.RestorableSettingsCacheKey);
    atomic_store(result, (unint64_t *)&qword_100646DC8);
  }
  return result;
}

void sub_1001D2A14()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  objc_super v6;

  if ((v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] & 1) != 0)
    v1 = 1;
  else
    v1 = v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink];
  objc_msgSend(v0, "setUserInteractionEnabled:", v1);
  v2 = sub_1001D2B94();
  objc_msgSend(v0, "addGestureRecognizer:", v2);

  if (v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] == 1)
  {
    v4 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter(v3);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "_doc_safeTintColor:", v4);

  }
  else
  {
    v5 = *(id *)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText];
  }
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  objc_msgSendSuper2(&v6, "setTextColor:", v5);

}

id sub_1001D2B94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleTapWithSender:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1001D2CB8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText + 8];
  if (v1)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
    v3 = v1;
  }
  else
  {
    v4 = objc_msgSend(v0, "text");
    if (!v4)
      return;
    v5 = v4;
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v3 = v6;

    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  if (String.count.getter(v2, v3) < 1)
  {
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    objc_msgSend(v7, "setString:", v8);

  }
}

char *sub_1001D2E04()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  _BYTE *v4;
  char *v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction];
  }
  else
  {
    v4 = objc_allocWithZone((Class)type metadata accessor for DOCViewEditMenuInteraction());
    v5 = v0;
    v6 = sub_1001D336C(v5, v5, v4);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1001D2E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2, v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (uint64_t *)(Strong + OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText);
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText + 8);
    if (v7)
    {
      v8 = *v6;
      v9 = v7;
    }
    else
    {
      v10 = objc_msgSend(v5, "text");
      if (!v10)
      {

        return;
      }
      v11 = v10;
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v9 = v12;

      v7 = 0;
    }
    swift_bridgeObjectRetain(v7);
    if (String.count.getter(v8, v9) < 1)
    {

      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v13 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
      objc_msgSend(v13, "setString:", v14);

    }
  }
}

id sub_1001D3070(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  objc_super v15;

  v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 0;
  v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] = 0;
  v9 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "labelColor");
  v12 = &v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  return objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1001D3198(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  objc_super v10;

  v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 0;
  v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] = 0;
  v3 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "labelColor");
  v6 = &v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

id sub_1001D32B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCCopyableLabel()
{
  return objc_opt_self(_TtC5Files16DOCCopyableLabel);
}

char *sub_1001D336C(void *a1, void *a2, _BYTE *a3)
{
  char *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  objc_super v17;

  a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = 0;
  v6 = &a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_targetView];
  swift_unknownObjectWeakInit(&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_targetView]);
  v7 = &a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture] = 0;
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction] = 0;
  v8 = &a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[24] = 0;
  *((_QWORD *)v8 + 2) = 0;
  swift_unknownObjectWeakAssign(v6, a1);
  *((_QWORD *)v7 + 1) = &off_1005CEF98;
  swift_unknownObjectWeakAssign(v7, a2);
  v17.receiver = a3;
  v17.super_class = (Class)type metadata accessor for DOCViewEditMenuInteraction();
  v9 = objc_msgSendSuper2(&v17, "init");
  v10 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "initWithTarget:action:", v11, "longPressGesture:");
  v13 = *(void **)&v11[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture];
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture] = v12;

  v14 = objc_msgSend(objc_allocWithZone((Class)UIEditMenuInteraction), "initWithDelegate:", v11);
  v15 = *(void **)&v11[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction];
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction] = v14;

  return v11;
}

uint64_t sub_1001D34F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = a1
     + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason;
  v3 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason);
  v4 = *(void **)(v2 + 8);
  swift_bridgeObjectRetain(v4);
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0xD000000000000017;
  v7._object = (void *)0x8000000100518800;
  String.append(_:)(v7);
  return swift_bridgeObjectRelease(0x8000000100518800);
}

void *sub_1001D35AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_100140784();
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a2 + 56) + 24 * v3;
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(id *)(v5 + 16);
  v9 = v6;
  swift_bridgeObjectRetain(v7);
  return v6;
}

void *sub_1001D3620(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v11;
  void *v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_100140DE8((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v7);
        v9 = v6;
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v11 = v4;
  v5 = sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
  swift_unknownObjectRetain(v4);
  swift_dynamicCast(&v12, &v11, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v12;
  swift_unknownObjectRelease(v4);
  return v6;
}

uint64_t DOCHierarchyController.reset(with:animated:completionHandler:)(void *a1, int a2, void (*a3)(void), uint64_t a4)
{
  return sub_1001D4F4C(a1, a1, a2, 1, 0, a3, a4);
}

uint64_t sub_1001D3710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v14[-v5];
  v7 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v15, 0, 0);
  sub_1000271D4(v7, (uint64_t)v3, (uint64_t *)&unk_1006443D0);
  v8 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v8) == 1)
  {
    v11 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(v11, v14, 0, 0);
    sub_1000271D4(v11, (uint64_t)v6, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v3, (uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  if (v10(v6, 1, v8) == 1)
  {
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_1006443D0);
    return 0;
  }
  else
  {
    v12 = v6[*(int *)(v8 + 24)];
    sub_10007C720((uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  return v12;
}

uint64_t sub_1001D38B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  void *v8;
  id v9;
  char v10;
  char v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v13, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v12 = *v1;
    else
      v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = (void *)_CocoaArrayWrapper.endIndex.getter(v12);
    if (!v3)
      goto LABEL_7;
  }
  else
  {
    v3 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (!v3)
      goto LABEL_7;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
  }
  else
  {
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v4 = *(id *)(v2 + 32);
  }
  v3 = v4;
LABEL_7:
  swift_bridgeObjectRelease(v2);
  v5 = (uint64_t)sub_1001D5A88();
  v0 = v5;
  if (!((unint64_t)v5 >> 62))
  {
    result = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_9;
LABEL_25:
    swift_bridgeObjectRelease(v0);
    if (v3)
    {
LABEL_26:

      goto LABEL_27;
    }
LABEL_28:
    v11 = 0;
    return v11 & 1;
  }
  if (v5 >= 0)
    v5 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v5);
  if (!result)
    goto LABEL_25;
LABEL_9:
  if ((v0 & 0xC000000000000001) != 0)
  {
LABEL_32:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v0 + 32);
LABEL_12:
    v8 = v7;
    swift_bridgeObjectRelease(v0);
    if (v3)
    {
      if (v8)
      {
        sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        v9 = v3;
        v10 = static NSObject.== infix(_:_:)(v9, v8);

        v11 = v10 ^ 1;
        return v11 & 1;
      }
      goto LABEL_26;
    }
    if (v8)
    {

LABEL_27:
      v11 = 1;
      return v11 & 1;
    }
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

void sub_1001D3A64(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t KeyPath;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  void *v49;
  _QWORD *v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD aBlock[5];
  _QWORD *v59;
  char v60[24];
  char v61[24];
  char v62[24];

  v3 = v2;
  v6 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - v10;
  v12 = (uint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v62, 0, 0);
  sub_1000271D4(v12, (uint64_t)v8, (uint64_t *)&unk_1006443D0);
  v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v8, 1, v13) == 1)
  {
    v16 = (uint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v61, 0, 0);
    sub_1000271D4(v16, (uint64_t)v11, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v8, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v8, (uint64_t)v11, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  if (v15(v11, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    v17 = v11[*(int *)(v13 + 24)];
    sub_10007C720((uint64_t)v11, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    if ((v17 & 1) != 0)
      return;
  }
  v18 = sub_100038378();
  if (v18)
  {
    v19 = (void *)v18;
    v20 = (uint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v60, 0, 0);
    v21 = *(_QWORD *)v20;
    swift_bridgeObjectRetain(*(_QWORD *)v20);
    v22 = sub_100174624((uint64_t)v19, v21);
    v24 = v23;
    swift_bridgeObjectRelease(v21);
    if ((v24 & 1) != 0)
    {
LABEL_26:

      return;
    }
    v25 = sub_100037A40(0xD00000000000002BLL, 0x8000000100518860);
    aBlock[0] = v3;
    KeyPath = swift_getKeyPath(&unk_1004DCC18);
    v27 = &protocol witness table for NSObject;
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
    v28 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = 0;

    aBlock[0] = v3;
    v29 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v29, &protocol witness table for NSObject);
    if (v22 < 0)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess(v20, aBlock, 32, 0);
      v20 = *(_QWORD *)v20;
      v27 = (void *)((unint64_t)v20 >> 62);
      if (!((unint64_t)v20 >> 62))
      {
        v30 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_12;
      }
    }
    if (v20 < 0)
      v53 = v20;
    else
      v53 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v54 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v20);
    if (v54 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v20);
    v30 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v20);
LABEL_12:
    v57 = v25;
    if (v30 < v22)
    {
      __break(1u);
    }
    else
    {
      v56 = a1;
      if ((v20 & 0xC000000000000001) != 0 && v22)
      {
        sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        v31 = 0;
        do
        {
          v32 = v31 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v31);
          v31 = v32;
        }
        while (v22 != v32);
      }
      v33 = a2;
      if (v27)
      {
        if (v20 < 0)
          v38 = v20;
        else
          v38 = v20 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v20);
        v34 = _CocoaArrayWrapper.subscript.getter(0, v22, v38);
        v35 = v39;
        v37 = v40;
        v36 = v41;
        swift_bridgeObjectRelease(v20);
      }
      else
      {
        v34 = v20 & 0xFFFFFFFFFFFFFF8;
        v35 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
        v36 = (2 * v22) | 1;
        swift_bridgeObjectRetain(v20);
        v37 = 0;
      }
      v55 = v19;
      swift_endAccess(aBlock);
      if (v37 != v36 >> 1)
      {
        if (v37 < (uint64_t)(v36 >> 1))
        {
          v42 = v34;
          v43 = *(void **)(v35 + 8 * v37);
          v44 = (_QWORD *)swift_allocObject(&unk_1005D0FE0, 80, 7);
          v45 = v56;
          v46 = v57;
          v44[2] = v3;
          v44[3] = v46;
          v44[4] = v45;
          v44[5] = v33;
          v44[6] = v42;
          v44[7] = v35;
          v44[8] = v37;
          v44[9] = v36;
          v47 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          v48 = (_QWORD *)swift_allocObject(&unk_1005D1008, 40, 7);
          v48[2] = sub_1001F637C;
          v48[3] = v44;
          v48[4] = v43;
          aBlock[4] = sub_1001F6B30;
          v59 = v48;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10002E508;
          aBlock[3] = &unk_1005D1020;
          v49 = _Block_copy(aBlock);
          v50 = v59;
          v51 = v43;
          v52 = v3;
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain(v42);
          swift_retain();
          objc_msgSend(v47, "retrieveAllSourcesCompletionBlock:", v49, swift_release(v50).n128_f64[0]);
          _Block_release(v49);

          swift_release(v44);
          swift_release(v46);
          swift_unknownObjectRelease(v42);
          v19 = v55;
          goto LABEL_26;
        }
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
}

void sub_1001D3F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v1 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation, v24, 0, 0);
  sub_1000271D4(v8, (uint64_t)v3, (uint64_t *)&unk_1006443D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_1006443D0);
    goto LABEL_5;
  }
  sub_1001D0788((uint64_t)v3, (uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  if ((v7[*(int *)(v4 + 20)] & 1) != 0)
  {
    sub_10007C720((uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_5:
    v9 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_6;
LABEL_19:
    if (v9 < 0)
      v15 = v9;
    else
      v15 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v9);
    if (v16)
      goto LABEL_9;
    goto LABEL_7;
  }
  v9 = *(_QWORD *)&v7[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain(v9);
  sub_10007C720((uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  if ((unint64_t)v9 >> 62)
    goto LABEL_19;
LABEL_6:
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_9;
LABEL_7:
  v10 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation, v22, 0, 0);
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(v10, 1, updated))
  {
    v12 = *(_QWORD *)(v10 + *(int *)(updated + 20));
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRelease(v9);
    v9 = v12;
  }
LABEL_9:
  if (!((unint64_t)v9 >> 62))
  {
    if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v9 < 0)
    v17 = v9;
  else
    v17 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v18 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v9);
  if (!v18)
  {
LABEL_11:
    swift_bridgeObjectRelease(v9);
    v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v23, 0, 0);
    v9 = *v13;
    swift_bridgeObjectRetain(v9);
  }
LABEL_12:
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v19 = v9;
    else
      v19 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v9);
    if (!v20)
      goto LABEL_17;
  }
  else if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
    goto LABEL_17;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(id *)(v9 + 32);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1001D4288(uint64_t a1, void *a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t (**v10)(uint64_t (*)(uint64_t), uint64_t, uint64_t);
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t updated;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, int *);
  int *v42;
  int v43;
  char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  Swift::String v68;
  void *object;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  id v101;
  char *v102;
  id v103;
  uint64_t (**v104)(uint64_t (*)(uint64_t), uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  void (*v116)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  char *v125;
  id v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  char v137[24];
  char v138[32];

  v128 = (char *)a7;
  v121 = a5;
  v120 = a4;
  v122 = a3;
  v126 = a2;
  v9 = type metadata accessor for Logger(0);
  v10 = *(uint64_t (***)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t (*)(uint64_t))((char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v14 = *((_QWORD *)v13 - 1);
  v131 = v13;
  v132 = v14;
  __chkstk_darwin(v13);
  v123 = (uint64_t)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (char *)sub_10006922C((uint64_t *)&unk_1006475B0);
  __chkstk_darwin(v16);
  v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v116 - v20;
  v22 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  v25 = (uint64_t)&v116 - v24;
  __chkstk_darwin(v26);
  v30 = (char *)&v116 - v29;
  v133 = a1;
  v127 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_57;
  v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v32 = v132;
  if (!v31)
  {
LABEL_60:
    v111 = Logger.UI.unsafeMutableAddressor(v27);
    v112 = v10[2](v12, v111, v9);
    v113 = Logger.logObject.getter(v112);
    v114 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v115 = 0;
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "Unexpected: got call to applyUpdate() with empty locations array", v115, 2u);
      swift_slowDealloc(v115, -1, -1);
    }

    ((void (*)(uint64_t (*)(uint64_t), uint64_t))v10[1])(v12, v9);
    return;
  }
  while (1)
  {
    v118 = v31;
    v119 = v28;
    v125 = (char *)swift_allocBox(v16);
    v34 = v33;
    updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
    v36 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(updated - 8) + 56);
    v117 = v34;
    v116 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v36;
    v36(v34, 1, 1, updated);
    v129 = swift_allocObject(&unk_1005D07E8, 24, 7);
    *(_QWORD *)(v129 + 16) = 0;
    v37 = v130;
    v38 = &v130[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
    v39 = *(_QWORD *)&v130[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
    if (v130[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8])
      v39 = 0;
    *(_QWORD *)v38 = v39;
    v38[8] = 0;
    v40 = (uint64_t)&v37[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
    swift_beginAccess(&v37[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v138, 0, 0);
    sub_1000271D4(v40, v25, (uint64_t *)&unk_1006443D0);
    v41 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v32 + 48);
    v42 = v131;
    v43 = v41(v25, 1, v131);
    v124 = (uint64_t (*)(uint64_t))a6;
    if (v43 == 1)
    {
      v44 = &v37[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
      swift_beginAccess(&v37[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v137, 0, 0);
      v45 = (uint64_t)v44;
      v42 = v131;
      sub_1000271D4(v45, (uint64_t)v30, (uint64_t *)&unk_1006443D0);
      a6 = (uint64_t)v124;
      sub_10000CB4C(v25, (uint64_t *)&unk_1006443D0);
    }
    else
    {
      sub_1001D0788(v25, (uint64_t)v30, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v32 + 56))(v30, 0, 1, v42);
    }
    v46 = v41((uint64_t)v30, 1, v42);
    v25 = v133;
    if (v46 == 1)
    {
      sub_10000CB4C((uint64_t)v30, (uint64_t *)&unk_1006443D0);
      v47 = 1;
    }
    else
    {
      v47 = v30[v42[6]];
      sub_10007C720((uint64_t)v30, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    }
    if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v47, sub_1001DD868, 0, 0, 0) & 1) == 0)
    {
      v52 = v129;
      v53 = (uint64_t)v125;
      sub_1001F11C4((uint64_t)v37, v129, (uint64_t)v125, (uint64_t (*)(uint64_t))a6);
      swift_release(v53);
      swift_release(v52);
      return;
    }
    v48 = swift_bridgeObjectRetain(v25);
    UUID.init()(v48);
    *(_QWORD *)&v21[*(int *)(updated + 20)] = v25;
    sub_10007C6DC((uint64_t)v21, (uint64_t)v18, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    v49 = v116;
    v116(v18, 0, 1, updated);
    v50 = (uint64_t)&v37[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation];
    swift_beginAccess(&v37[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation], &v135, 33, 0);
    sub_1001F58C0((uint64_t)v18, v50);
    swift_endAccess(&v135);
    v49(v21, 0, 1, updated);
    sub_1001F58C0((uint64_t)v21, v117);
    v135 = 0;
    v136 = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease(v136);
    v135 = 0xD00000000000001ALL;
    v136 = 0x8000000100518570;
    if (v127)
    {
      if (v25 < 0)
        v54 = v25;
      else
        v54 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v51 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v51 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v55 = _swiftEmptyArrayStorage;
    v56 = v129;
    if (v51)
    {
      v134 = _swiftEmptyArrayStorage;
      sub_100081774(0, v51 & ~(v51 >> 63), 0);
      if (v51 < 0)
        goto LABEL_67;
      v57 = 0;
      v55 = v134;
      v58 = v25 & 0xC000000000000001;
      do
      {
        if (v58)
          v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v25);
        else
          v59 = *(id *)(v25 + 8 * v57 + 32);
        v60 = v59;
        v61 = objc_msgSend(v59, "shortDescription");
        v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
        v64 = v63;

        v134 = v55;
        v66 = v55[2];
        v65 = v55[3];
        if (v66 >= v65 >> 1)
        {
          sub_100081774(v65 > 1, v66 + 1, 1);
          v55 = v134;
        }
        ++v57;
        v55[2] = v66 + 1;
        v67 = &v55[2 * v66];
        v67[4] = v62;
        v67[5] = v64;
        v25 = v133;
      }
      while (v51 != v57);
      v56 = v129;
      v37 = v130;
    }
    v68._countAndFlagsBits = Array.description.getter(v55, &type metadata for String);
    object = v68._object;
    String.append(_:)(v68);
    swift_bridgeObjectRelease(v55);
    swift_bridgeObjectRelease(object);
    v70._countAndFlagsBits = 41;
    v70._object = (void *)0xE100000000000000;
    String.append(_:)(v70);
    v71 = v136;
    v72 = sub_100037A40(v135, v136);
    swift_bridgeObjectRelease(v71);
    v73 = *(_QWORD *)(v56 + 16);
    *(_QWORD *)(v56 + 16) = v72;
    swift_release(v73);
    v74 = v131;
    v75 = swift_allocBox(v131);
    v77 = v76;
    v78 = swift_bridgeObjectRetain(v25);
    UUID.init()(v78);
    v79 = v74[5];
    v80 = v74[6];
    *(_QWORD *)(v77 + v74[7]) = v25;
    *(_BYTE *)(v77 + v79) = 0;
    *(_BYTE *)(v77 + v80) = (v122 & 1) == 0;
    v81 = v119;
    sub_10007C6DC(v77, v119, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v132 + 56))(v81, 0, 1, v74);
    sub_1001D6804(v81, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    sub_10007C6DC(v77, v123, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v82 = v118 - 1;
    if (__OFSUB__(v118, 1))
    {
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain(v25);
      v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v25);
      swift_bridgeObjectRelease(v25);
      goto LABEL_34;
    }
    v131 = (int *)(v25 & 0xC000000000000001);
    if ((v25 & 0xC000000000000001) != 0)
      goto LABEL_64;
    if ((v82 & 0x8000000000000000) != 0)
      break;
    if (v82 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_66;
    v83 = *(id *)(v25 + 8 * v82 + 32);
LABEL_34:
    v84 = v123;
    sub_1001DD884(v123, v83, 0);

    sub_10007C720(v84, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    a6 = swift_allocObject(&unk_1005D0A68, 89, 7);
    *(_QWORD *)(a6 + 16) = v37;
    *(_QWORD *)(a6 + 24) = v75;
    v12 = v124;
    v85 = (uint64_t)v125;
    *(_QWORD *)(a6 + 32) = v56;
    *(_QWORD *)(a6 + 40) = v85;
    v86 = v56;
    v87 = v75;
    v88 = (uint64_t)v128;
    *(_QWORD *)(a6 + 48) = v12;
    *(_QWORD *)(a6 + 56) = v88;
    v89 = v126;
    *(_QWORD *)(a6 + 64) = v126;
    LODWORD(v132) = v120 & 1;
    *(_BYTE *)(a6 + 72) = v120 & 1;
    *(_QWORD *)(a6 + 80) = v25;
    LODWORD(v123) = v121 & 1;
    *(_BYTE *)(a6 + 88) = v121 & 1;
    v135 = v25;
    v90 = swift_allocObject(&unk_1005D04A0, 24, 7);
    *(_QWORD *)(v90 + 16) = _swiftEmptyArrayStorage;
    v133 = v90;
    if (!v51)
    {
      swift_bridgeObjectRetain(v25);
      v96 = v37;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v12, v88);
      v130 = (char *)v89;
      swift_bridgeObjectRetain(v25);
      v131 = v96;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v12, v88);
      v97 = v130;
      sub_1001DDBC0(_swiftEmptyArrayStorage, (uint64_t)v131, v87, v86, v85, v12, v88, v89, v132, v25, v123);
      swift_release(a6);
      swift_release(v133);
      v98 = v97;
      v18 = (char *)v88;
      v99 = v37;
LABEL_51:
      swift_release(v85);
      swift_release(v86);
      swift_release(v87);

      sub_100087534((uint64_t)v12, (uint64_t)v18);
      swift_release(v85);
      swift_release(v86);
      swift_release(v87);
      swift_bridgeObjectRelease(v25);
      return;
    }
    v132 = v87;
    if (v127)
    {
      if (v25 < 0)
        v100 = v25;
      else
        v100 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v25, 2);
      v16 = v130;
      v9 = v132;
      swift_retain();
      v12 = (uint64_t (*)(uint64_t))v129;
      swift_retain();
      v30 = v125;
      swift_retain();
      a1 = (uint64_t)v124;
      v18 = v128;
      sub_10008BA00((uint64_t)v124, (uint64_t)v128);
      v101 = v126;
      swift_bridgeObjectRetain(v25);
      v102 = v16;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10008BA00(a1, (uint64_t)v18);
      v103 = v101;
      if (!_CocoaArrayWrapper.endIndex.getter(v100))
        goto LABEL_69;
      swift_bridgeObjectRetain(v25);
      v21 = (char *)_CocoaArrayWrapper.endIndex.getter(v100);
      swift_bridgeObjectRelease(v25);
      if (!v21)
        goto LABEL_70;
    }
    else
    {
      v91 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v25);
      v18 = v128;
      v92 = v130;
      v30 = v125;
      v93 = v126;
      if (!v91)
        goto LABEL_68;
      swift_bridgeObjectRetain(v25);
      v21 = v92;
      v9 = v132;
      swift_retain();
      swift_retain();
      swift_retain();
      a1 = (uint64_t)v124;
      sub_10008BA00((uint64_t)v124, (uint64_t)v18);
      v16 = (char *)v93;
      swift_bridgeObjectRetain(v25);
      v94 = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10008BA00(a1, (uint64_t)v18);
      v95 = v16;
    }
    if (v131)
    {
      v104 = (uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
    }
    else
    {
      if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_71;
      v104 = (uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))*(id *)(v25 + 32);
    }
    v10 = v104;
    if (v127)
    {
      if (v25 < 0)
        v109 = v25;
      else
        v109 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v21 = (char *)_CocoaArrayWrapper.endIndex.getter(v109);
      swift_bridgeObjectRelease(v25);
      if (v21)
      {
LABEL_50:
        sub_10045C054(0, 1);
        v105 = v135;
        v106 = swift_allocObject(&unk_1005D0A90, 64, 7);
        v107 = v133;
        v99 = v130;
        *(_QWORD *)(v106 + 16) = v133;
        *(_QWORD *)(v106 + 24) = v99;
        *(_QWORD *)(v106 + 32) = v105;
        *(_BYTE *)(v106 + 40) = 1;
        *(_QWORD *)(v106 + 48) = sub_1001F5BE8;
        *(_QWORD *)(v106 + 56) = a6;
        v108 = v99;
        swift_retain();
        swift_retain();
        sub_10003E148(v10, 1, v108, sub_1001F59C0, v106);
        swift_release(a6);
        swift_release(v107);

        swift_release(v106);
        v12 = v124;
        v85 = (uint64_t)v125;
        v86 = v129;
        v87 = v132;
        v98 = (char *)v126;
        goto LABEL_51;
      }
    }
    else if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_50;
    }
    __break(1u);
LABEL_57:
    v110 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v110 = a1;
    v129 = v110;
    v119 = v28;
    swift_bridgeObjectRetain(a1);
    v118 = _CocoaArrayWrapper.endIndex.getter(v129);
    swift_bridgeObjectRelease(a1);
    v31 = v118;
    v28 = v119;
    v32 = v132;
    if (!v118)
      goto LABEL_60;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

uint64_t sub_1001D4F4C(void *a1, void *a2, int a3, int a4, int a5, void (*a6)(void), uint64_t a7)
{
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void (*v28)(void);
  void *v29;
  char v30;
  uint64_t v31;
  void *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void (*v44)(void);
  uint64_t v45;
  void *v46;
  int v47;
  int v48;
  int v49;
  _QWORD *v50;
  _QWORD aBlock[5];
  uint64_t v52;
  char v53[24];
  char v54[32];

  v44 = a6;
  v45 = a7;
  v48 = a4;
  v49 = a5;
  v47 = a3;
  v46 = a2;
  v43 = a1;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  v20 = (uint64_t)&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v54, 0, 0);
  sub_1000271D4(v20, (uint64_t)v17, (uint64_t *)&unk_1006443D0);
  v21 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v17, 1, v21);
  v42 = v9;
  if (v24 == 1)
  {
    v25 = (uint64_t)&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v53, 0, 0);
    sub_1000271D4(v25, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v17, (uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v27 = v45;
  v26 = v46;
  if (v23(v19, 1, v21) == 1)
  {
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
    v29 = v43;
    v28 = v44;
  }
  else
  {
    v30 = v19[*(int *)(v21 + 24)];
    sub_10007C720((uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v29 = v43;
    v28 = v44;
    if ((v30 & 1) != 0)
    {
LABEL_8:
      v31 = swift_allocObject(&unk_1005D10A8, 64, 7);
      *(_QWORD *)(v31 + 16) = v7;
      *(_QWORD *)(v31 + 24) = v29;
      *(_QWORD *)(v31 + 32) = v28;
      *(_QWORD *)(v31 + 40) = v27;
      *(_BYTE *)(v31 + 48) = v47 & 1;
      *(_BYTE *)(v31 + 49) = v48 & 1;
      *(_BYTE *)(v31 + 50) = v49 & 1;
      *(_QWORD *)(v31 + 56) = v26;
      aBlock[4] = sub_1001F64B0;
      v52 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D10C0;
      v32 = _Block_copy(aBlock);
      v33 = v7;
      v34 = v29;
      sub_10008BA00((uint64_t)v28, v27);
      static DispatchQoS.unspecified.getter(v26);
      v50 = _swiftEmptyArrayStorage;
      v35 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v36 = sub_10006922C((uint64_t *)&unk_100647540);
      v37 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v36, v37, v8, v35);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v11, v32);
      _Block_release(v32);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
      return swift_release(v52);
    }
  }
  if ((v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_shouldForceChangeInPreparationQueue] & 1) != 0)
    goto LABEL_8;
  return sub_1001D89F4(v7, v29, v28, v27, v47 & 1, v48 & 1, v49 & 1, v26);
}

unint64_t sub_1001D535C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v14;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    do
    {
      while (__OFSUB__(v7--, 1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        if (a3 < 0)
          v12 = a3;
        else
          v12 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        v7 = _CocoaArrayWrapper.endIndex.getter(v12);
        swift_bridgeObjectRelease(a3);
        if (!v7)
          return v7;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a3);
        goto LABEL_9;
      }
      if ((v7 & 0x8000000000000000) != 0)
        goto LABEL_15;
      if (v7 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_16;
      v9 = *(id *)(a3 + 32 + 8 * v7);
LABEL_9:
      v10 = v9;
      v14 = v9;
      v11 = a1(&v14);

    }
    while (!v4 && (v11 & 1) == 0 && v7);
  }
  return v7;
}

BOOL sub_1001D5488(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1001D54A0()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  int *v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void *v31;
  Swift::String v32;
  _QWORD *v33;
  _QWORD v34[2];

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(81);
  v1._countAndFlagsBits = 0xD000000000000017;
  v1._object = (void *)0x8000000100517CD0;
  String.append(_:)(v1);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_10005A360(&qword_100646B30, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0x7974202020200A2CLL;
  v6._object = (void *)0xEB000000003A6570;
  String.append(_:)(v6);
  v7 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  LOBYTE(v33) = *(_BYTE *)(v0 + v7[5]);
  _print_unlocked<A, B>(_:_:)(&v33, v34, &type metadata for DOCHierarchyController.DOCHierarchyOperationType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8._countAndFlagsBits = 0xD000000000000015;
  v8._object = (void *)0x8000000100517CF0;
  String.append(_:)(v8);
  if (*(_BYTE *)(v0 + v7[6]))
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v7[6]))
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease(v10);
  v12._object = (void *)0x8000000100517D10;
  v12._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v12);
  v13 = *(_QWORD *)(v0 + v7[7]);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v14)
      goto LABEL_9;
LABEL_25:
    swift_bridgeObjectRelease(v13);
    v17 = _swiftEmptyArrayStorage;
LABEL_26:
    v29 = sub_10006922C(&qword_100648C80);
    v30._countAndFlagsBits = Array.description.getter(v17, v29);
    v31 = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v31);
    v32._countAndFlagsBits = 10506;
    v32._object = (void *)0xE200000000000000;
    String.append(_:)(v32);
    return v34[0];
  }
  if (v13 < 0)
    v28 = *(_QWORD *)(v0 + v7[7]);
  else
    v28 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v14)
    goto LABEL_25;
LABEL_9:
  v33 = _swiftEmptyArrayStorage;
  result = sub_100154DB0(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    v17 = v33;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
      else
        v18 = *(id *)(v13 + 8 * v16 + 32);
      v19 = v18;
      v20 = objc_msgSend(v18, "displayName");
      if (v20)
      {
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v24 = v23;

      }
      else
      {

        v22 = 0;
        v24 = 0;
      }
      v33 = v17;
      v26 = v17[2];
      v25 = v17[3];
      if (v26 >= v25 >> 1)
      {
        sub_100154DB0(v25 > 1, v26 + 1, 1);
        v17 = v33;
      }
      ++v16;
      v17[2] = v26 + 1;
      v27 = &v17[2 * v26];
      v27[4] = v22;
      v27[5] = v24;
    }
    while (v14 != v16);
    swift_bridgeObjectRelease(v13);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t DOCHierarchyController.locations.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_1001D58C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t sub_1001D5914(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_bridgeObjectRetain(*a1);
  return DOCHierarchyController.locations.setter(v1);
}

uint64_t sub_1001D593C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100038378();
  *a1 = result;
  return result;
}

void (*DOCHierarchyController.locations.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v3, 0, 0);
  v5 = *v4;
  v3[3] = *v4;
  swift_bridgeObjectRetain(v5);
  return sub_1001D59D8;
}

void sub_1001D59D8(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v2 = *a1;
  v4 = (uint64_t *)((char *)*a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = swift_bridgeObjectRetain(v3);
    DOCHierarchyController.locations.setter(v5);
    swift_bridgeObjectRelease(*v4);
  }
  else
  {
    DOCHierarchyController.locations.setter(v3);
  }
  free(v2);
}

_QWORD *sub_1001D5A88()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v27[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v27, 0, 0);
  v2 = (_QWORD *)*v1;
  swift_bridgeObjectRetain(*v1);
  v3 = sub_100038378();
  if (!v3)
    return v2;
  v4 = (void *)v3;
  v5 = *v1;
  swift_bridgeObjectRetain(*v1);
  v6 = sub_100174624((uint64_t)v4, v5);
  v8 = v7;
  swift_bridgeObjectRelease(v5);
  if ((v8 & 1) != 0)
  {

    return v2;
  }
  v9 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v9 < 0)
      v17 = *v1;
    else
      v17 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v11)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease(v2);
    goto LABEL_17;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = swift_bridgeObjectRetain(*v1);
  if (!v10)
    goto LABEL_16;
LABEL_5:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
  }
  else
  {
    if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v12 = *(id *)(v9 + 32);
  }
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v14 = v4;
  v15 = v13;
  v16 = static NSObject.== infix(_:_:)(v15, v14);

  if ((v16 & 1) != 0)
  {

    return v2;
  }
  v9 = (uint64_t)v2;
LABEL_17:
  swift_bridgeObjectRelease(v9);
  v18 = *v1;
  swift_bridgeObjectRetain(*v1);
  v9 = sub_1001F0F08(v6, v18, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v2 = v19;
  v1 = v20;
  v6 = v21;
  swift_bridgeObjectRelease(v18);
  if ((v6 & 1) == 0)
  {
LABEL_18:
    v2 = sub_10028F730(v9, (uint64_t)v2, (uint64_t)v1, v6);

    swift_unknownObjectRelease(v9);
    return v2;
  }
  v22 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v23 = swift_unknownObjectRetain_n(v9, 2);
  v24 = (_QWORD *)swift_dynamicCastClass(v23, v22);
  if (!v24)
  {
    swift_unknownObjectRelease(v9);
    v24 = _swiftEmptyArrayStorage;
  }
  v25 = v24[2];
  v11 = swift_release(v24);
  if (__OFSUB__(v6 >> 1, v1))
    goto LABEL_28;
  v11 = v9;
  if (v25 != (v6 >> 1) - (_QWORD)v1)
  {
LABEL_29:
    swift_unknownObjectRelease(v11);
    goto LABEL_18;
  }
  v2 = (_QWORD *)swift_dynamicCastClass(v9, v22);

  swift_unknownObjectRelease(v9);
  if (!v2)
  {
    swift_unknownObjectRelease(v9);
    return _swiftEmptyArrayStorage;
  }
  return v2;
}

uint64_t sub_1001D5D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t updated;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  char v37[24];

  v35 = a1;
  v2 = sub_10006922C((uint64_t *)&unk_1006475B0);
  __chkstk_darwin(v2);
  v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_1006495B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10006922C((uint64_t *)&unk_1006475C0);
  v11 = __chkstk_darwin(v10);
  v34 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v30 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v30 - v16;
  v18 = v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation, v37, 0, 0);
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  v32 = *(_QWORD *)(updated - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v18, 1, updated))
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 1, 1, v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v35, v4);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v21(v17, v18, v4);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 0, 1, v4);
    v21(v15, v35, v4);
  }
  v20(v15, 0, 1, v4);
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000271D4((uint64_t)v17, (uint64_t)v9, (uint64_t *)&unk_1006475C0);
  sub_1000271D4((uint64_t)v15, v22, (uint64_t *)&unk_1006475C0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v9, 1, v4) != 1)
  {
    v24 = v34;
    sub_1000271D4((uint64_t)v9, v34, (uint64_t *)&unk_1006475C0);
    if (v23(v22, 1, v4) != 1)
    {
      v26 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v22, v4);
      v27 = sub_10005A360((unint64_t *)&qword_100655BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      LODWORD(v35) = dispatch thunk of static Equatable.== infix(_:_:)(v24, v26, v4, v27);
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
      sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_1006475C0);
      v28((char *)v24, v4);
      result = sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_1006475C0);
      if ((v35 & 1) == 0)
        return result;
      goto LABEL_11;
    }
    sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
    sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_1006475C0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    return sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_1006495B0);
  }
  sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006475C0);
  sub_10000CB4C((uint64_t)v17, (uint64_t *)&unk_1006475C0);
  if (v23(v22, 1, v4) != 1)
    return sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_1006495B0);
  sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_1006475C0);
LABEL_11:
  v29 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, updated);
  swift_beginAccess(v18, v36, 33, 0);
  sub_1001F58C0(v29, v18);
  return swift_endAccess(v36);
}

void sub_1001D6274(uint64_t a1, int a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint8_t *v17;
  NSObject **v18;
  NSObject *v19;
  NSObject **v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint8_t *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  NSObject *v37;
  uint64_t v38;

  v36 = a2;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_wasTimeoutAutoDeactivated;
  v9 = OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active;
  v10 = DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(*(unsigned __int8 *)(a1+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active), sub_1001F6420, a1, *(unsigned __int8 *)(a1+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_wasTimeoutAutoDeactivated), *(unsigned __int8 *)(a1+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_wasTimeoutAutoDeactivated));
  if ((v10 & 1) != 0)
  {
    v35 = v9;
    v11 = Logger.UI.unsafeMutableAddressor(v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
    v12 = v2;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.debug.getter();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc(12, -1);
      v32 = v15;
      v17 = (uint8_t *)v16;
      v18 = (NSObject **)swift_slowAlloc(8, -1);
      v33 = v8;
      v34 = v5;
      *(_DWORD *)v17 = 138412290;
      v30[1] = v17 + 4;
      v31 = v17;
      v37 = v12;
      v19 = v12;
      v8 = v33;
      v5 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      *v18 = v12;
      v20 = v18;

      v21 = v31;
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v32, "Resuming work (locationChangePreparationQueue) in hierarchy controller %@", v31, 0xCu);
      v22 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v20, 1, v22);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {

      v13 = v12;
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_BYTE *)(a1 + v35) = 0;
    *(_BYTE *)(a1 + v8) = v36 & 1;
    v23 = (uint64_t *)((char *)v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions);
    swift_beginAccess((char *)v12 + OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions, &v37, 33, 0);
    swift_retain();
    v24 = sub_1001EE08C(v23, a1);
    swift_release(a1);
    v25 = *v23;
    if ((unint64_t)*v23 >> 62)
    {
      v27 = v12;
      if (v25 < 0)
        v28 = *v23;
      else
        v28 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v23);
      v29 = v28;
      v12 = v27;
      v26 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v25);
      if (v26 >= v24)
        goto LABEL_7;
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v26 >= v24)
      {
LABEL_7:
        sub_100088F2C(v24, v26);
        swift_endAccess(&v37);
        dispatch_resume(*(dispatch_object_t *)((char *)&v12->isa
                                             + OBJC_IVAR____TtC5Files22DOCHierarchyController_locationChangePreparationQueue));
        return;
      }
    }
    __break(1u);
  }
}

void sub_1001D654C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t Strong;
  void *v16;
  id v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  id v26;
  uint64_t v27;

  if (!a1)
  {
    sub_1001D6274(a3, 0);
    a4(0);
    return;
  }
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate);
  if (Strong)
  {
    v16 = (void *)Strong;
    if ((a9 & 1) != 0)
    {
      v20 = type metadata accessor for __ContiguousArrayStorageBase(0);
      swift_unknownObjectRetain_n(a6, 3);
      v21 = a1;
      v27 = v20;
      v22 = (_QWORD *)swift_dynamicCastClass(a6, v20);
      if (!v22)
      {
        swift_unknownObjectRelease(a6);
        v22 = _swiftEmptyArrayStorage;
      }
      v23 = v22[2];
      swift_release(v22);
      if (__OFSUB__(a9 >> 1, a8))
      {
        __break(1u);
      }
      else
      {
        v24 = a6;
        if (v23 == (a9 >> 1) - a8)
        {
          v18 = (_QWORD *)swift_dynamicCastClass(a6, v27);
          if (!v18)
          {
            swift_unknownObjectRelease(a6);
            v18 = _swiftEmptyArrayStorage;
          }
          goto LABEL_14;
        }
      }
      swift_unknownObjectRelease(v24);
    }
    else
    {
      v17 = a1;
      swift_unknownObjectRetain(a6);
    }
    v18 = sub_10028F730(a6, a7, a8, a9);
LABEL_14:
    swift_unknownObjectRelease(a6);
    sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release(v18);
    v26 = a1;
    objc_msgSend(v16, "hierarchyController:didReveal:source:", a2, isa, v26);

    swift_unknownObjectRelease(v16);
    goto LABEL_15;
  }
  v19 = a1;
LABEL_15:
  sub_1001D6274(a3, 0);
  a4(1);

}

uint64_t sub_1001D67F8(uint64_t a1)
{
  return sub_1001D6804(a1, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
}

uint64_t sub_1001D6804(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v5 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v23 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v23 - v15;
  v17 = v2 + *a2;
  swift_beginAccess(v17, v26, 0, 0);
  sub_1000271D4(v17, (uint64_t)v16, (uint64_t *)&unk_1006443D0);
  swift_beginAccess(v17, v25, 33, 0);
  v24 = a1;
  sub_1001F5694(a1, v17);
  swift_endAccess(v25);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000271D4((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1006443D0);
  sub_1000271D4(v17, v18, (uint64_t *)&unk_1006443D0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v19((uint64_t)v10, 1, v5) == 1)
  {
    if (v19(v18, 1, v5) == 1)
      v20 = (uint64_t *)&unk_1006443D0;
    else
      v20 = (uint64_t *)&unk_100647580;
  }
  else
  {
    sub_1000271D4((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1006443D0);
    if (v19(v18, 1, v5) == 1)
    {
      sub_10007C720((uint64_t)v14, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v20 = (uint64_t *)&unk_100647580;
    }
    else
    {
      v21 = v23;
      sub_1001D0788(v18, v23, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      static UUID.== infix(_:_:)(v14, v21);
      sub_10007C720(v21, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      sub_10007C720((uint64_t)v14, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v20 = (uint64_t *)&unk_1006443D0;
    }
  }
  sub_10000CB4C((uint64_t)v10, v20);
  sub_10000CB4C(v24, (uint64_t *)&unk_1006443D0);
  return sub_10000CB4C((uint64_t)v16, (uint64_t *)&unk_1006443D0);
}

uint64_t sub_1001D6AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  char v13;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v15[-v5];
  v7 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v16, 0, 0);
  sub_1000271D4(v7, (uint64_t)v3, (uint64_t *)&unk_1006443D0);
  v8 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v8) == 1)
  {
    v11 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(v11, v15, 0, 0);
    sub_1000271D4(v11, (uint64_t)v6, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v3, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v3, (uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  if (v10(v6, 1, v8) == 1)
  {
    sub_10000CB4C((uint64_t)v6, (uint64_t *)&unk_1006443D0);
    v12 = 0;
  }
  else
  {
    v13 = v6[*(int *)(v8 + 24)];
    sub_10007C720((uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v12 = v13 ^ 1;
  }
  return v12 & 1;
}

uint64_t sub_1001D6DE4(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;

  _StringGuts.grow(_:)(52);
  v2._object = (void *)0x8000000100518890;
  v2._countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v2);
  sub_1001D34F0(a1);
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  return 0;
}

void sub_1001D6E64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char v7;
  char v8;
  _QWORD v9[7];
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = ~*(_BYTE *)(a2
                   + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active);
    __chkstk_darwin(Strong);
    v9[2] = a2;
    v9[3] = 0xD000000000000011;
    v9[4] = 0x8000000100518320;
    DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)((v8 & 1) == 0, sub_1001F6B2C, v9, 1, 1);
    if ((v7 & 1) == 0)
      sub_1001D6274(a2, 1);

  }
}

uint64_t sub_1001D6F40(uint64_t a1, uint64_t a2, void *a3)
{
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;

  _StringGuts.grow(_:)(64);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  String.append(_:)(v6);
  sub_1001D34F0(a1);
  v7._object = (void *)0x80000001005188D0;
  v7._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v7);
  v8._countAndFlagsBits = a2;
  v8._object = a3;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0xD000000000000026;
  v9._object = (void *)0x80000001005188F0;
  String.append(_:)(v9);
  return 0;
}

unint64_t sub_1001D7004()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason);
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason
                + 8);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000017;
}

uint64_t sub_1001D70AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001D7110(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a2+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid, *a1+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid);
}

unint64_t sub_1001D712C()
{
  return sub_1001D7004();
}

id DOCHierarchyController.sourceObserver.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
}

uint64_t sub_1001D715C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent);
  }
  else
  {
    v3 = _s27UserDefaultsObservedContentCMa();
    v2 = swift_allocObject(v3, 65, 7);
    v4 = swift_unknownObjectWeakInit(v2 + 16);
    *(_QWORD *)(v2 + 24) = _swiftEmptyArrayStorage;
    *(_BYTE *)(v2 + 32) = 1;
    *(_QWORD *)(v2 + 48) = 0;
    *(_QWORD *)(v2 + 56) = 0;
    *(_QWORD *)(v2 + 40) = 0;
    *(_BYTE *)(v2 + 64) = 0;
    swift_unknownObjectWeakAssign(v4, v0);
    v5 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release(v5);
  }
  swift_retain();
  return v2;
}

char *DOCHierarchyController.__allocating_init(configuration:sourceObserver:minParentLocations:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  _QWORD *v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  uint64_t ObjectType;

  v7 = objc_allocWithZone(v3);
  v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v9 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v10 = objc_allocWithZone(v3);
  v11 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, v8, v9);
  ObjectType = swift_getObjectType(v7);
  swift_deallocPartialClassInstance(v7, ObjectType, *(unsigned int *)((swift_isaMask & *v7) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v7) + 0x34));
  return v11;
}

char *DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:)(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  objc_class *ObjectType;
  id v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v10 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v11 = objc_allocWithZone(ObjectType);
  v12 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, v9, v10);
  v13 = swift_getObjectType(v4);
  swift_deallocPartialClassInstance(v4, v13, *(unsigned int *)((swift_isaMask & *v4) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v4) + 0x34));
  return v12;
}

char *DOCHierarchyController.__allocating_init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for DOCHierarchyController.UpdateExpectation(uint64_t a1)
{
  return sub_10006BDA4(a1, qword_100647508, (uint64_t)&nominal type descriptor for DOCHierarchyController.UpdateExpectation);
}

uint64_t sub_1001D7498()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id DOCHierarchyController.__deallocating_deinit()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  id v11;
  _QWORD v12[6];
  objc_class *ObjectType;
  objc_super v14;
  char v15[24];

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions], v15, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v10 = v2;
    else
      v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v10);
    v3 = (uint64_t)result;
    if (!result)
      goto LABEL_15;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n(v2, 2);
    if (!v3)
      goto LABEL_15;
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      v7 = v6;
    }
    else
    {
      v7 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_retain();
    }
    v8 = ~*(_BYTE *)(v7
                   + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active);
    __chkstk_darwin(v6);
    v12[2] = v7;
    v12[3] = 0x696E696564206E69;
    v12[4] = 0xE900000000000074;
    DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)((v9 & 1) == 0, sub_1001D76D8, v12, 1, 1);
    if ((v8 & 1) == 0)
      sub_1001D6274(v7, 1);
    swift_release(v7);
  }
LABEL_15:
  swift_bridgeObjectRelease_n(v2, 2);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserverContext])
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver], "removeSubscriberForToken:");
  v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v11, "removeObserver:", v0);

  v14.receiver = v0;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, "dealloc");
}

uint64_t sub_1001D76D8()
{
  uint64_t v0;

  return sub_1001D6F40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

id DOCHierarchyController.lastUsedOpenSaveLocation.getter()
{
  uint64_t v0;

  if (objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "isPickerUI"))return sub_1001ECAF8();
  else
    return 0;
}

void sub_1001D78D8(void *a1, id a2, void *a3, void *a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  NSObject **v24;
  NSObject **v25;
  uint64_t v26;
  NSObject **v27;
  NSObject **v28;
  id v29;
  NSObject **v30;
  uint64_t v31;
  id v32;
  NSObject **v33;
  NSObject *v34;
  NSObject **v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  NSObject **v42;
  NSObject *v43;
  NSObject *v44;
  NSObject **v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  NSObject *v53;
  uint64_t v54;
  NSObject *v55;
  NSObject **v56;
  uint64_t v57;
  uint8_t *v58;
  _BYTE v59[12];
  int v60;
  NSObject **v61;
  int v62;
  uint64_t v63;
  _BYTE *v64;
  NSObject *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE v68[40];

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v64 = &v59[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v66 = &v59[-v14];
  if (a1)
    v15 = a1;
  else
    v15 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "defaultLocation");
  v16 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v16, v68);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v15;
  v67 = inited;
  specialized Array._endMutation()(inited);
  v18 = v67;
  v19 = v15;
  v20 = a1;
  v21 = sub_10015F878(v18, 0);
  v23 = v22;
  v25 = v24;
  v26 = v18;
  v27 = (NSObject **)v21;
  swift_bridgeObjectRelease(v26);
  if (v27)
  {

    if (v25)
      v28 = v25;
    else
      v28 = v27;
    v29 = objc_msgSend(v28, "effectiveTabSwitcherTab");
    v65 = v27;
    if (v29 == a2
      && (v29 = objc_msgSend(v27, "canBeRestored"), (_DWORD)v29)
      && (v29 = objc_msgSend(a3, "allowsDisplaying:", v27), (v29 & 1) != 0))
    {
      v30 = v27;
      v31 = Logger.UI.unsafeMutableAddressor(v30);
      v63 = v11;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v64, v31, v10);
      v32 = a4;
      v33 = v30;
      v34 = v32;
      v35 = v33;
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.debug.getter();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v39 = swift_slowAlloc(22, -1);
        v60 = v38;
        v40 = v39;
        v41 = v34;
        v42 = (NSObject **)swift_slowAlloc(16, -1);
        *(_DWORD *)v40 = 138412546;
        v62 = a5;
        v61 = v25;
        v67 = (uint64_t)v41;
        v43 = v41;
        v66 = (_BYTE *)v10;
        v44 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68);
        *v42 = v41;

        *(_WORD *)(v40 + 12) = 2112;
        v67 = (uint64_t)v35;
        v45 = v35;
        LOBYTE(a5) = v62;
        v25 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68);
        v42[1] = v65;

        v10 = (uint64_t)v66;
        _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v60, "2.2.2 Will use getSaveLocation's suggested location (browser: %@, location: %@)", (uint8_t *)v40, 0x16u);
        v46 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v42, 2, v46);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v40, -1, -1);
      }
      else
      {

        v36 = v34;
      }

      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v64, v10);
      sub_1001D4F4C(v35, 0, a5 & 1, 0, 1, 0, 0);
      swift_bridgeObjectRelease(v23);

    }
    else
    {
      v47 = Logger.UI.unsafeMutableAddressor(v29);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v66, v47, v10);
      v48 = a4;
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v49, v50))
      {
        v62 = a5;
        v51 = swift_slowAlloc(12, -1);
        v64 = v23;
        v52 = (uint8_t *)v51;
        v61 = (NSObject **)swift_slowAlloc(8, -1);
        *(_DWORD *)v52 = 138412290;
        v67 = (uint64_t)v48;
        v53 = v48;
        v63 = v11;
        v54 = v10;
        v55 = v53;
        LOBYTE(a5) = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68);
        v56 = v61;
        *v61 = v48;

        v10 = v54;
        v11 = v63;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "2.2.1 Location from getSaveLocation isn't appropriate, falling back to standard restore (browse: %@)", v52, 0xCu);
        v57 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v56, 1, v57);
        swift_slowDealloc(v56, -1, -1);
        v58 = v52;
        v23 = v64;
        swift_slowDealloc(v58, -1, -1);
      }
      else
      {

        v49 = v48;
      }

      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v66, v10);
      sub_1001D7DFC(a5 & 1);
      swift_bridgeObjectRelease(v23);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001D7DFC(int a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD v51[2];
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v51 - v8;
  v10 = sub_1001D8314();
  if (v10)
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    v16 = Logger.UI.unsafeMutableAddressor(objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration], "setRestoreLastVisitedLocation:", 0));
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v16, v3);
    v17 = v15;
    v18 = v1;
    v19 = v13;
    swift_bridgeObjectRetain_n(v14, 2);
    v20 = v17;
    v21 = v18;
    v22 = v19;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc(22, -1);
      v57 = v15;
      v27 = v26;
      v53 = swift_slowAlloc(8, -1);
      v54 = v9;
      v28 = (_QWORD *)v53;
      v55 = swift_slowAlloc(32, -1);
      v60 = (uint64_t)v21;
      v61 = v55;
      *(_DWORD *)v27 = 138412546;
      v56 = v20;
      v59 = v3;
      v52 = v25;
      v29 = v21;
      v58 = v4;
      v30 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      *v28 = v21;

      *(_WORD *)(v27 + 12) = 2080;
      v51[1] = v27 + 14;
      v31 = v22;
      swift_bridgeObjectRetain(v14);
      v32 = v56;
      v33 = sub_10015EBFC(v31, v14, v57);
      v34 = v23;
      v36 = v35;

      swift_bridgeObjectRelease(v14);
      v60 = sub_1000544FC(v33, v36, (uint64_t *)&v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);

      swift_bridgeObjectRelease_n(v14, 2);
      v20 = v56;
      swift_bridgeObjectRelease(v36);
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v52, "3. Using last visited information to perform restoration (browser:%@, restoreState: %s)", (uint8_t *)v27, 0x16u);
      v37 = sub_10006922C(&qword_100643AB0);
      v38 = v53;
      swift_arrayDestroy(v53, 1, v37);
      swift_slowDealloc(v38, -1, -1);
      v39 = v55;
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      v40 = v27;
      v15 = v57;
      swift_slowDealloc(v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v59);
    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
    sub_10015E0F4((uint64_t)v21, 0, v22, v14, v15);

    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v41 = Logger.UI.unsafeMutableAddressor(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v41, v3);
    v42 = v1;
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v58 = v4;
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(8, -1);
      v59 = v3;
      v47 = (_QWORD *)v46;
      LODWORD(v57) = a1;
      *(_DWORD *)v45 = 138412290;
      v61 = v42;
      v48 = v42;
      LOBYTE(a1) = (_BYTE)v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
      *v47 = v42;

      v4 = v58;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "4. Will use emptyLocation as initially selected location since no other cases are valid (browser:%@)", v45, 0xCu);
      v49 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v47, 1, v49);
      v50 = v47;
      v3 = v59;
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }
    else
    {

      v43 = v42;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v22 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "emptyLocation");
    sub_1001D4F4C(v22, 0, a1 & 1, 1, 1, 0, 0);
  }

}

void *sub_1001D8314()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  char v4;
  char v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  char v28;
  _BYTE v30[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  v2 = objc_msgSend(v1, "defaultEffectiveTabIdentifierForLocationRestore");
  v3 = (void *)sub_100152104((uint64_t)v2);
  v5 = v4;

  if ((v5 & 1) != 0)
    v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  if (!objc_msgSend(v1, "restoreLastVisitedLocation"))
    goto LABEL_13;
  sub_1001EC28C(v3);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_1001EC1AC(v6, v8, v10, v3, v0);
  v14 = v13;
  v16 = v15;
  sub_1001ECE60(v7, v9, v11);
  if (!v12)
  {
LABEL_13:
    v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
    swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab, v30, 32, 0);
    v18 = sub_1001D35AC((uint64_t)v3, *v17);
    v20 = v19;
    v22 = v21;
    swift_endAccess(v30);
    v12 = sub_1001EC1AC(v18, v20, v22, v3, v0);
    v14 = v23;
    v16 = v24;
    sub_1001ECE60(v18, v20, v22);
    if (!v12)
    {
      v12 = sub_1001E9E24((uint64_t)v3);
      v14 = v25;
      v16 = v26;
    }
  }
  if ((objc_msgSend(v1, "allowsDisplaying:", v12) & 1) == 0
    || (v27 = objc_msgSend((id)objc_opt_self(DOCAppProtectionManager), "sharedManager"),
        v28 = sub_1001EBCB8(v12),
        v27,
        (v28 & 1) == 0))
  {
    swift_bridgeObjectRelease(v14);

    return 0;
  }
  return v12;
}

uint64_t DOCHierarchyController.reset(with:effectiveRootLocation:animated:completionHandler:)(void *a1, void *a2, int a3, void (*a4)(void), uint64_t a5)
{
  return sub_1001D4F4C(a1, a2, a3, 1, 0, a4, a5);
}

void sub_1001D86A8(void *a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)();
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;

  v5 = v4;
  v10 = sub_1000ABE80();
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 152))(v10);
  *(_QWORD *)&v12 = swift_release(v10).n128_u64[0];
  if ((v11 & 1) != 0)
  {
    v13 = swift_allocObject(&unk_1005CEFC0, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16);
    v14 = swift_allocObject(&unk_1005D0EC8, 56, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    *(_BYTE *)(v14 + 32) = a2 & 1;
    *(_QWORD *)(v14 + 40) = a3;
    *(_QWORD *)(v14 + 48) = a4;
    v15 = (void (**)())(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock + 8);
    *v15 = sub_1001F62F4;
    v15[1] = (void (*)())v14;
    v18 = a1;
    sub_10008BA00((uint64_t)a3, a4);
    sub_100087534(v16, v17);
  }
  else
  {
    v19 = objc_msgSend(a1, "fileProviderItem", v12);
    if (v19)
    {
      v20 = v19;
      v21 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v22 = (void *)DOCNode.sourceIdentifier.getter(v21);

      v24 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v22, 0);
      sub_1001D4F4C(a1, v24, a2 & 1, 1, 0, a3, a4);

    }
    else
    {
      v23 = objc_msgSend(a1, "fileProviderItem");

      if (!v23)
        sub_1001D4F4C(a1, a1, a2 & 1, 1, 0, a3, a4);
    }
  }
}

void sub_1001D88B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _BYTE v12[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_1001D86A8(a2, a3 & 1, a4, a5);

  }
}

uint64_t sub_1001D89F4(char *a1, void *a2, void (*a3)(void), uint64_t a4, int a5, int a6, int a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_BYTE *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  int v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void);
  _BYTE v54[4];
  int v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(void);
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  char v65[24];
  char v66[24];

  v56 = a8;
  LODWORD(v58) = a7;
  v55 = a6;
  LODWORD(v57) = a5;
  v61 = a3;
  v11 = type metadata accessor for Logger(0);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v62 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v14 = __chkstk_darwin(v13);
  v16 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v54[-v18];
  __chkstk_darwin(v17);
  v21 = &v54[-v20];
  v22 = (uint64_t)&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v66, 0, 0);
  sub_1000271D4(v22, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
  v23 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v19, 1, v23) == 1)
  {
    v26 = (uint64_t)&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v65, 0, 0);
    sub_1000271D4(v26, (uint64_t)v21, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v19, (uint64_t)v21, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  if (v25(v21, 1, v23) == 1)
    v27 = sub_10000CB4C((uint64_t)v21, (uint64_t *)&unk_1006443D0);
  else
    v27 = sub_10007C720((uint64_t)v21, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  __chkstk_darwin(v27);
  *(_QWORD *)&v54[-16] = a2;
  *(_QWORD *)&v54[-8] = a1;
  DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v28 & 1, sub_1001F64CC, &v54[-32], 1, 1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v16, 1, 1, v23);
  sub_1001D6804((uint64_t)v16, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v63 = 0x203A7465736572;
  v64 = 0xE700000000000000;
  v29 = objc_msgSend(a2, "shortDescription");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v32);
  v34 = v64;
  v35 = sub_100037A40(v63, v64);
  swift_bridgeObjectRelease(v34);
  v36 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration], "allowsDisplaying:", a2);
  if ((v36 & 1) != 0)
  {
    v37 = swift_allocObject(&unk_1005D10F8, 64, 7);
    v38 = v56;
    *(_QWORD *)(v37 + 16) = v56;
    *(_QWORD *)(v37 + 24) = a1;
    v39 = v55 & 1;
    *(_BYTE *)(v37 + 32) = v39;
    v40 = (uint64_t)v61;
    *(_QWORD *)(v37 + 40) = v35;
    *(_QWORD *)(v37 + 48) = v40;
    *(_QWORD *)(v37 + 56) = a4;
    v41 = v38;
    a1;
    swift_retain();
    sub_10008BA00(v40, a4);
    sub_100039B88(a2, v57 & 1, v39, v58 & 1, (uint64_t)sub_1001F6518, v37);
    swift_release(v35);
    v35 = v37;
  }
  else
  {
    v42 = Logger.UI.unsafeMutableAddressor(v36);
    v44 = v59;
    v43 = v60;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v59 + 16))(v62, v42, v60);
    v45 = a2;
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = swift_slowAlloc(8, -1);
      v58 = a4;
      *(_DWORD *)v48 = 138412290;
      v63 = (uint64_t)v45;
      v49 = v45;
      v44 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);
      v50 = v57;
      *(_QWORD *)v57 = v45;

      v43 = v60;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Tried to reset with location %@, which is not allowed by the configuration", v48, 0xCu);
      v51 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v50, 1, v51);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {

      v46 = v45;
    }
    v52 = v61;

    (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v62, v43);
    sub_1001D6274(v35, 0);
    if (v52)
      v52();
  }
  return swift_release(v35);
}

uint64_t sub_1001D8F30(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  Swift::String v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v4 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v28 - v8;
  v31 = 0;
  v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(103);
  v33 = v31;
  v34 = v32;
  v10._countAndFlagsBits = 0xD00000000000004DLL;
  v10._object = (void *)0x8000000100518920;
  String.append(_:)(v10);
  v11 = objc_msgSend(a1, "description");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._object = (void *)0x8000000100518970;
  v16._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v16);
  v17 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, &v31, 0, 0);
  sub_1000271D4(v17, (uint64_t)v7, (uint64_t *)&unk_1006443D0);
  v18 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v7, 1, v18) == 1)
  {
    v21 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(v21, v30, 0, 0);
    sub_1000271D4(v21, (uint64_t)v9, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v7, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v7, (uint64_t)v9, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v18);
  }
  if (v20(v9, 1, v18) == 1)
  {
    sub_10000CB4C((uint64_t)v9, (uint64_t *)&unk_1006443D0);
    v22 = 0;
  }
  else
  {
    v22 = *(_QWORD *)&v9[*(int *)(v18 + 28)];
    swift_bridgeObjectRetain(v22);
    sub_10007C720((uint64_t)v9, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  v29 = v22;
  v23 = sub_10006922C(&qword_100647608);
  v24._countAndFlagsBits = String.init<A>(describing:)(&v29, v23);
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(object);
  v26._countAndFlagsBits = 41;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  return v33;
}

uint64_t sub_1001D91C8(char a1, void *a2, char *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t KeyPath;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *Strong;
  void *v43;
  id v44;
  id v45;
  _QWORD *v46;
  void *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  char v53[24];
  _QWORD aBlock[5];
  _QWORD *v55;
  char v56[24];

  if (!a2)
  {
    if ((a1 & 1) == 0)
      goto LABEL_12;
    v16 = (uint64_t *)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v53, 0, 0);
    v17 = *v16;
    if ((unint64_t)v17 >> 62)
      goto LABEL_36;
    v18 = *(void **)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v17);
    if (!v18)
      goto LABEL_10;
    goto LABEL_6;
  }
  aBlock[0] = a3;
  KeyPath = swift_getKeyPath(&unk_1004DCC18);
  v12 = a2;
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  v13 = *(void **)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
  *(_QWORD *)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = a2;
  v14 = v12;

  aBlock[0] = a3;
  v15 = swift_getKeyPath(&unk_1004DCC18);
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v15, &protocol witness table for NSObject);

  while (1)
  {

LABEL_12:
    v24 = (uint64_t *)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v56, 0, 0);
    v17 = *v24;
    if ((unint64_t)v17 >> 62)
      break;
    v25 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v17);
    if (!v25)
      goto LABEL_27;
LABEL_14:
    v26 = v25 - 1;
    if (__OFSUB__(v25, 1))
    {
      __break(1u);
LABEL_33:
      v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v17);
LABEL_19:
      v28 = v27;
      swift_bridgeObjectRelease(v17);
      if ((a4 & 1) != 0)
      {

        goto LABEL_28;
      }
      v30 = *(void **)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
      v31 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v32 = swift_allocObject(v31, 40, 7);
      *(_OWORD *)(v32 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v32 + 32) = v28;
      aBlock[0] = v32;
      specialized Array._endMutation()(v32);
      v33 = aBlock[0];
      v34 = v30;
      v35 = v28;
      v36 = (void *)sub_10015F878(v33, v30);
      v38 = v37;
      v40 = v39;
      result = swift_bridgeObjectRelease(v33);
      if (v36)
      {

        sub_1001D9640(v36, v38, v40);
        swift_bridgeObjectRelease(v38);

        goto LABEL_28;
      }
LABEL_43:
      __break(1u);
      return result;
    }
    if ((v17 & 0xC000000000000001) != 0)
      goto LABEL_33;
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v26 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v27 = *(id *)(v17 + 8 * v26 + 32);
      goto LABEL_19;
    }
    __break(1u);
LABEL_36:
    if (v17 < 0)
      v50 = v17;
    else
      v50 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    result = _CocoaArrayWrapper.endIndex.getter(v50);
    v18 = (void *)result;
    if (result)
    {
LABEL_6:
      if ((v17 & 0xC000000000000001) != 0)
      {
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
      }
      else
      {
        if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_43;
        }
        v20 = *(id *)(v17 + 32);
      }
      v18 = v20;
    }
LABEL_10:
    swift_bridgeObjectRelease(v17);
    aBlock[0] = a3;
    v21 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(v21, &protocol witness table for NSObject);
    v22 = *(void **)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(_QWORD *)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = v18;
    v14 = v18;

    aBlock[0] = a3;
    v23 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v23, &protocol witness table for NSObject);
  }
  if (v17 < 0)
    v41 = v17;
  else
    v41 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v25 = _CocoaArrayWrapper.endIndex.getter(v41);
  if (v25)
    goto LABEL_14;
LABEL_27:
  swift_bridgeObjectRelease(v17);
LABEL_28:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v29);
  if (!Strong
    || (v43 = Strong,
        v44 = objc_msgSend(Strong, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v43),
        !v44))
  {
    v45 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v44 = objc_msgSend(v45, "_definiteTransitionCoordinator");

  }
  v46 = (_QWORD *)swift_allocObject(&unk_1005D11E8, 48, 7);
  v46[2] = a3;
  v46[3] = a5;
  v46[4] = a6;
  v46[5] = a7;
  aBlock[4] = sub_1001F55F0;
  v55 = v46;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100018CC0;
  aBlock[3] = &unk_1005D1200;
  v47 = _Block_copy(aBlock);
  v48 = v55;
  v49 = a3;
  swift_retain();
  sub_10008BA00(a6, a7);
  swift_release(v48);
  objc_msgSend(v44, "animateAlongsideTransition:completion:", 0, v47);
  _Block_release(v47);
  return swift_unknownObjectRelease(v44);
}

void sub_1001D9640(id a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t Strong;
  void *v29;
  uint64_t v30;
  Class isa;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v4 = v3;
  if (a3)
    v8 = objc_msgSend(a3, "effectiveTabSwitcherTab");
  else
    v8 = objc_msgSend(a1, "effectiveTabSwitcherTab");
  v9 = (uint64_t)v8;
  v10 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab, v35, 33, 0);
  v11 = a1;
  swift_bridgeObjectRetain(a2);
  v12 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v34 = *v10;
  *v10 = 0x8000000000000000;
  sub_1003572B8((uint64_t)v11, a2, (uint64_t)a3, v9, isUniquelyReferenced_nonNull_native);
  v14 = *v10;
  *v10 = v34;
  swift_bridgeObjectRelease(v14);
  swift_endAccess(v35);
  v15 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v35, 0, 0);
  v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v15);
    if (v17)
      goto LABEL_6;
LABEL_20:
    swift_bridgeObjectRelease(v16);
    return;
  }
  if (v16 < 0)
    v33 = *v15;
  else
    v33 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v15);
  v17 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v17)
    goto LABEL_20;
LABEL_6:
  v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
    goto LABEL_11;
  }
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v18 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v19 = *(id *)(v16 + 8 * v18 + 32);
LABEL_11:
  v20 = v19;
  swift_bridgeObjectRelease(v16);
  v21 = objc_msgSend(v20, "sourceIdentifier");

  v22 = *(void **)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v26 = objc_msgSend(v22, "sourceForIdentifier:", v25);

  if (v26)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate, v27);
    if (Strong)
    {
      v29 = (void *)Strong;
      v30 = *v15;
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      swift_bridgeObjectRetain(v30);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v30);
      v32 = (void *)sub_100038378();
      objc_msgSend(v29, "hierarchyController:didUpdateLastDisplayedLocationPath:anchorLocation:source:", v4, isa, v32, v26);

      swift_unknownObjectRelease(v29);
    }
    else
    {

    }
  }

}

void sub_1001D9900(void *a1, int a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  void *v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v61;
  uint64_t v62;
  char v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  void (*v83)(__n128);
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  _BYTE v90[24];
  _BYTE v91[24];
  _BYTE v92[32];

  v83 = (void (*)(__n128))a3;
  v84 = a4;
  v7 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v7);
  v9 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v81 = (uint64_t)&v80 - v12;
  v13 = objc_msgSend(a1, "fileProviderItem", v11);
  v85 = a1;
  v82 = a2;
  if (v13)
  {
    v14 = v13;
    v88 = objc_msgSend(v13, "parentItemID");

  }
  else
  {
    v88 = 0;
  }
  v86 = v4;
  v15 = (uint64_t)sub_1001D5A88();
  if ((unint64_t)v15 >> 62)
    goto LABEL_24;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  v17 = v88;
  v18 = v88;
  swift_bridgeObjectRetain(v15);
  for (; v16; v16 = _CocoaArrayWrapper.endIndex.getter(v30))
  {
    v80 = v9;
    v9 = 4;
    while (1)
    {
      v19 = (v15 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v15)
          : *(id *)(v15 + 8 * v9);
      v20 = v19;
      v21 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      v22 = objc_msgSend(v19, "fileProviderItem");
      if (v22
        && (v23 = v22, v24 = objc_msgSend(v22, "itemID"), v23, v24))
      {
        if (v17)
        {
          v87 = sub_10004F2F0(0, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
          v25 = v17;
          v26 = v24;
          v27 = static NSObject.== infix(_:_:)(v26, v25);

          if ((v27 & 1) != 0)
          {

LABEL_22:
            swift_bridgeObjectRelease_n(v15, 2);
            v29 = v85;
            v28 = v86;
            v9 = v80;
            goto LABEL_46;
          }
          v24 = v20;
          v17 = v88;
        }
        else
        {

        }
      }
      else
      {
        if (!v17)
          goto LABEL_22;
        v24 = v20;
      }

      ++v9;
      if (v21 == v16)
      {

        swift_bridgeObjectRelease(v15);
        v9 = v80;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_24:
    if (v15 < 0)
      v30 = v15;
    else
      v30 = v15 & 0xFFFFFFFFFFFFFF8;
    v17 = v88;
    v31 = v88;
    swift_bridgeObjectRetain(v15);
  }
  swift_bridgeObjectRelease(v15);

LABEL_29:
  swift_bridgeObjectRelease(v15);
  v28 = v86;
  v32 = (uint64_t)sub_1001D5A88();
  v33 = v32;
  if (!((unint64_t)v32 >> 62))
  {
    v29 = v85;
    if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_31;
LABEL_44:
    swift_bridgeObjectRelease(v33);
    goto LABEL_45;
  }
  if (v32 >= 0)
    v32 &= 0xFFFFFFFFFFFFFF8uLL;
  v48 = _CocoaArrayWrapper.endIndex.getter(v32);
  v29 = v85;
  if (!v48)
    goto LABEL_44;
LABEL_31:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v34 = v9;
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    goto LABEL_34;
  }
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v34 = v9;
    v35 = *(id *)(v33 + 32);
LABEL_34:
    v20 = v35;
    v36 = objc_msgSend(v35, "sourceIdentifier", swift_bridgeObjectRelease(v33).n128_f64[0]);
    v37 = DOCDocumentSourceIdentifierSharedItems;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v40 = v39;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v43 = v41;
    if (v38 == v42 && v40 == v41)
    {

      swift_bridgeObjectRelease_n(v40, 2);
      v9 = v34;
    }
    else
    {
      v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);

      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v43);
      v9 = v34;
      if ((v44 & 1) == 0)
      {
LABEL_40:

LABEL_45:
        v20 = 0;
        goto LABEL_46;
      }
    }
    v45 = objc_msgSend(v29, "fileProviderItem", v80);
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, "isTopLevelSharedItem");

      if ((v47 & 1) != 0)
      {
LABEL_46:
        v49 = (uint64_t *)(v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
        swift_beginAccess(v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v92, 0, 0);
        v50 = *v49;
        if (!((unint64_t)*v49 >> 62)
          || (v50 < 0 ? (v78 = *v49) : (v78 = v50 & 0xFFFFFFFFFFFFFF8),
              swift_bridgeObjectRetain(v50),
              v79 = _CocoaArrayWrapper.endIndex.getter(v78),
              swift_bridgeObjectRelease(v50),
              v79 >= 0))
        {
          if (v20)
          {
            v51 = v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
            swift_beginAccess(v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v91, 0, 0);
            sub_1000271D4(v51, v9, (uint64_t *)&unk_1006443D0);
            v52 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
            v53 = *(_QWORD *)(v52 - 8);
            v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
            if (v54(v9, 1, v52) == 1)
            {
              v55 = v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
              swift_beginAccess(v28 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation, v90, 0, 0);
              v56 = v55;
              v57 = v81;
              sub_1000271D4(v56, v81, (uint64_t *)&unk_1006443D0);
              v58 = v20;
              sub_10000CB4C(v9, (uint64_t *)&unk_1006443D0);
            }
            else
            {
              v59 = v81;
              sub_1001D0788(v9, v81, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
              v60 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56);
              v57 = v59;
              v60(v59, 0, 1, v52);
              v61 = v20;
            }
            if (v54(v57, 1, v52) == 1)
            {
              sub_10000CB4C(v57, (uint64_t *)&unk_1006443D0);
              goto LABEL_56;
            }
            v62 = v57;
            v63 = *(_BYTE *)(v57 + *(int *)(v52 + 24));
            sub_10007C720(v62, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
            if ((v63 & 1) == 0)
            {
LABEL_56:
              v64 = objc_msgSend(v20, "fileProviderItem", v80);
              if (v64)
              {
                v65 = v64;
                v66 = objc_msgSend(v64, "itemID");

              }
              else
              {
                v66 = 0;
              }
              v67 = objc_msgSend(v29, "fileProviderItem");
              if (v67)
              {
                v68 = v67;
                v69 = objc_msgSend(v67, "itemID");

                if (v66)
                {
                  if (v69)
                  {
                    sub_10004F2F0(0, (unint64_t *)&unk_1006428C0, FPItemID_ptr);
                    v70 = v66;
                    v71 = static NSObject.== infix(_:_:)(v70, v69);

                    if ((v71 & 1) != 0)
                      goto LABEL_69;
                    goto LABEL_68;
                  }
                  goto LABEL_65;
                }
                if (v69)
                  goto LABEL_67;
              }
              else if (v66)
              {
LABEL_65:
                v69 = v66;
LABEL_67:

LABEL_68:
                v72 = sub_10006922C((uint64_t *)&unk_1006441A0);
                v73 = swift_allocObject(v72, 40, 7);
                *(_OWORD *)(v73 + 16) = xmmword_1004D9B40;
                *(_QWORD *)(v73 + 32) = v29;
                v89 = v73;
                specialized Array._endMutation()(v73);
                v74 = v89;
                v75 = v20;
                v76 = v29;
                sub_1001DA02C(v74, v20, 0, 1, 1, 0, v83, v84);
                swift_bridgeObjectRelease(v74);

                goto LABEL_70;
              }
LABEL_69:
              sub_1001D86A8(v29, v82 & 1, (void (*)(void))v83, v84);

              goto LABEL_70;
            }

          }
        }
        sub_1001D86A8(v29, v82 & 1, (void (*)(void))v83, v84);
LABEL_70:
        v77 = v88;

        return;
      }
    }
    goto LABEL_40;
  }
  __break(1u);
}

void sub_1001DA02C(uint64_t a1, void *a2, int a3, int a4, uint64_t a5, int a6, void (*a7)(__n128), uint64_t a8)
{
  char *v8;
  char *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(__n128);
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void (*v27)(__n128);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  void *object;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  id v73;
  char *v74;
  uint64_t v75;
  id v76;
  void (*v77)(__n128);
  uint64_t v78;
  int v79;
  int v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  id v88;
  char *v89;
  char *v90;
  char *v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  id v98;
  char *v99;
  NSObject *i;
  NSObject *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  int *v112;
  unint64_t v113;
  int v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t *v118;
  void (*v119)(__n128);
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[3];
  uint64_t v125;
  uint64_t v126;
  char v127[24];
  char v128[32];

  v9 = v8;
  v120 = a2;
  v121 = a8;
  v119 = a7;
  v114 = a4;
  v115 = a6;
  v116 = a3;
  v12 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v12);
  v117 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v110 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v110 - v18;
  v20 = swift_allocObject(&unk_1005D07E8, 24, 7);
  *(_QWORD *)(v20 + 16) = 0;
  v118 = (uint64_t *)(v20 + 16);
  v21 = &v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(_QWORD *)v21 = a5;
  v21[8] = 0;
  v22 = (uint64_t)&v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v128, 0, 0);
  sub_1000271D4(v22, (uint64_t)v16, (uint64_t *)&unk_1006443D0);
  v23 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v24 = *(void (**)(__n128))(v23 - 8);
  v25 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v24 + 6);
  v26 = v25(v16, 1, v23);
  v123 = a1;
  v27 = v24;
  if (v26 == 1)
  {
    v28 = &v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v127, 0, 0);
    v29 = (uint64_t)v28;
    v24 = v27;
    sub_1000271D4(v29, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
    a1 = v123;
    sub_10000CB4C((uint64_t)v16, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v16, (uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v24 + 7))(v19, 0, 1, v23);
  }
  v30 = v20;
  if (v25(v19, 1, v23) == 1)
  {
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
    v31 = 0;
  }
  else
  {
    v31 = v19[*(int *)(v23 + 24)];
    sub_10007C720((uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v31 ^ 1u, sub_1001DC5E8, 0, 0, 0) & 1) == 0)
  {
    *(_QWORD *)v21 = 0;
    v21[8] = 1;
    v45 = v118;
    v46 = swift_beginAccess(v118, &v125, 0, 0);
    v47 = *v45;
    if (v47)
    {
      swift_retain();
      sub_1001D6274(v48, 0);
      v46 = swift_release(v47);
    }
    if (v119)
      v119(v46);
    goto LABEL_61;
  }
  v125 = 0;
  v126 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease(v126);
  v125 = 0xD00000000000001DLL;
  v126 = 0x8000000100518500;
  v113 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v66 = a1;
    else
      v66 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v32 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v33 = _swiftEmptyArrayStorage;
  v111 = v9;
  v112 = (int *)v23;
  v122 = v32;
  if (v32)
  {
    v124[0] = _swiftEmptyArrayStorage;
    sub_100081774(0, v32 & ~(v32 >> 63), 0);
    if (v32 < 0)
      goto LABEL_67;
    v110 = v20;
    v34 = 0;
    v33 = (_QWORD *)v124[0];
    v35 = a1 & 0xC000000000000001;
    do
    {
      if (v35)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, a1);
      else
        v36 = *(id *)(a1 + 8 * v34 + 32);
      v37 = v36;
      v38 = objc_msgSend(v36, "shortDescription", v110);
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

      v124[0] = v33;
      v43 = v33[2];
      v42 = v33[3];
      if (v43 >= v42 >> 1)
      {
        sub_100081774(v42 > 1, v43 + 1, 1);
        v33 = (_QWORD *)v124[0];
      }
      ++v34;
      v33[2] = v43 + 1;
      v44 = &v33[2 * v43];
      v44[4] = v39;
      v44[5] = v41;
      a1 = v123;
    }
    while (v122 != v34);
    v24 = v27;
    v9 = v111;
    v30 = v110;
  }
  v49._countAndFlagsBits = Array.description.getter(v33, &type metadata for String);
  object = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(object);
  v51._countAndFlagsBits = 41;
  v51._object = (void *)0xE100000000000000;
  String.append(_:)(v51);
  v52 = v126;
  v53 = sub_100037A40(v125, v126);
  swift_bridgeObjectRelease(v52);
  v54 = *v118;
  *v118 = v53;
  swift_release(v54);
  v55 = v112;
  v33 = (_QWORD *)swift_allocBox(v112);
  v57 = v56;
  v58 = swift_bridgeObjectRetain(a1);
  UUID.init()(v58);
  v59 = v55[5];
  v60 = v55[6];
  *(_QWORD *)(v57 + v55[7]) = a1;
  *(_BYTE *)(v57 + v59) = 1;
  *(_BYTE *)(v57 + v60) = (v116 & 1) == 0;
  v61 = v117;
  sub_10007C6DC(v57, v117, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  (*((void (**)(uint64_t, _QWORD, uint64_t, int *))v24 + 7))(v61, 0, 1, v55);
  sub_1001D6804(v61, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v32 = (uint64_t)&v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v9[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v125, 0, 0);
  v63 = *(_QWORD *)v32;
  if (*(_QWORD *)v32 >> 62)
  {
    if (v63 < 0)
      v67 = *(_QWORD *)v32;
    else
      v67 = v63 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v32);
    v68 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(v63);
    if (v68 < 2)
      goto LABEL_26;
LABEL_35:
    v69 = *(_QWORD *)v32;
    if (*(_QWORD *)v32 >> 62)
      goto LABEL_70;
    v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    v71 = v70 - 2;
    if (__OFSUB__(v70, 2))
      goto LABEL_75;
    goto LABEL_37;
  }
  if (*(uint64_t *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
    goto LABEL_35;
LABEL_26:
  LOBYTE(v64) = 0;
  v65 = v114;
  while (1)
  {
    v32 = swift_allocObject(&unk_1005D0810, 72, 7);
    *(_QWORD *)(v32 + 16) = v9;
    *(_QWORD *)(v32 + 24) = v33;
    v74 = v9;
    v75 = v30;
    v77 = v119;
    v76 = v120;
    *(_QWORD *)(v32 + 32) = v30;
    *(_QWORD *)(v32 + 40) = v77;
    v78 = v121;
    *(_QWORD *)(v32 + 48) = v121;
    v79 = v65 & 1;
    *(_BYTE *)(v32 + 56) = v79;
    v80 = v64 & 1;
    *(_BYTE *)(v32 + 57) = v80;
    v81 = v115 & 1;
    *(_BYTE *)(v32 + 58) = v115 & 1;
    *(_QWORD *)(v32 + 64) = v76;
    v124[0] = v123;
    v82 = swift_allocObject(&unk_1005D04A0, 24, 7);
    *(_QWORD *)(v82 + 16) = _swiftEmptyArrayStorage;
    v118 = (uint64_t *)v82;
    if (!v122)
    {
      v123 = (uint64_t)v76;
      v90 = v74;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v77, v78);
      v123 = (uint64_t)(id)v123;
      v91 = v90;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v77, v78);
      sub_1001DC604((uint64_t)_swiftEmptyArrayStorage, v91, (uint64_t)v33, v75, v77, v78, v79, v80, v81, v76);
      swift_release(v32);
      swift_release(v118);
      v92 = (id)v123;
      v93 = v78;
      v27 = v77;
      v9 = v111;
      v30 = v75;
      goto LABEL_60;
    }
    v83 = v33;
    v84 = v75;
    v85 = v74;
    if (v113)
    {
      a1 = v123;
      if (v123 < 0)
        v94 = v123;
      else
        v94 = v123 & 0xFFFFFFFFFFFFFF8;
      v95 = v120;
      v9 = v74;
      v96 = v74;
      v33 = v83;
      swift_retain();
      v30 = v84;
      swift_retain();
      v27 = v119;
      v97 = v121;
      sub_10008BA00((uint64_t)v119, v121);
      swift_bridgeObjectRetain(a1);
      v98 = v95;
      v99 = v96;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v27, v97);
      if (!_CocoaArrayWrapper.endIndex.getter(v94))
        goto LABEL_80;
      swift_bridgeObjectRetain(a1);
      v69 = _CocoaArrayWrapper.endIndex.getter(v94);
      swift_bridgeObjectRelease(a1);
      if (!v69)
        goto LABEL_81;
    }
    else
    {
      a1 = v123;
      v86 = v121;
      v27 = v119;
      if (!*(_QWORD *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_79;
      v9 = v85;
      v69 = (uint64_t)v120;
      v87 = v85;
      v33 = v83;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v27, v86);
      swift_bridgeObjectRetain(a1);
      v88 = (id)v69;
      v89 = v87;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v27, v86);
      v30 = v84;
    }
    if ((a1 & 0xC000000000000001) != 0)
      goto LABEL_68;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    __break(1u);
LABEL_70:
    if (v69 < 0)
      v108 = v69;
    else
      v108 = v69 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v69);
    v109 = _CocoaArrayWrapper.endIndex.getter(v108);
    swift_bridgeObjectRelease(v69);
    v71 = v109 - 2;
    if (__OFSUB__(v109, 2))
    {
LABEL_75:
      __break(1u);
LABEL_76:
      v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v62);
      v64 = v120;
      goto LABEL_41;
    }
LABEL_37:
    swift_beginAccess(v32, v124, 32, 0);
    v62 = *(_QWORD *)v32;
    if ((*(_QWORD *)v32 & 0xC000000000000001) != 0)
      goto LABEL_76;
    v64 = v120;
    if ((v71 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      return;
    }
    if (v71 >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_78;
    v72 = *(id *)(v62 + 8 * v71 + 32);
LABEL_41:
    swift_endAccess(v124);
    if (v64)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v73 = v64;
      LOBYTE(v64) = static NSObject.== infix(_:_:)(v73, v72);

    }
    v65 = v114;

  }
  for (i = *(id *)(a1 + 32);
        ;
        i = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1))
  {
    v101 = i;
    if (v113)
      break;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_59;
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    ;
  }
  if (a1 < 0)
    v106 = a1;
  else
    v106 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v107 = _CocoaArrayWrapper.endIndex.getter(v106);
  swift_bridgeObjectRelease(a1);
  if (!v107)
    goto LABEL_66;
LABEL_59:
  sub_10045C054(0, 1);
  v102 = v124[0];
  v103 = swift_allocObject(&unk_1005D0838, 64, 7);
  v104 = v118;
  *(_QWORD *)(v103 + 16) = v118;
  *(_QWORD *)(v103 + 24) = v9;
  *(_QWORD *)(v103 + 32) = v102;
  *(_BYTE *)(v103 + 40) = 1;
  *(_QWORD *)(v103 + 48) = sub_1001F597C;
  *(_QWORD *)(v103 + 56) = v32;
  v105 = v9;
  swift_retain();
  swift_retain();
  sub_10003E148(v101, 1, v105, sub_1001F59C0, v103);
  swift_release(v32);
  swift_release(v104);

  swift_release(v103);
  v92 = v120;
  v93 = v121;
LABEL_60:
  swift_release(v30);
  swift_release(v33);

  sub_100087534((uint64_t)v27, v93);
  swift_release(v33);

LABEL_61:
  swift_release(v30);
}

uint64_t sub_1001DAB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t KeyPath;
  void *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1001D6804((uint64_t)v4, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v11 = v1;
  KeyPath = swift_getKeyPath(&unk_1004DCC18);
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate) = 0;

  v11 = v1;
  v8 = swift_getKeyPath(&unk_1004DCC18);
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v8, &protocol witness table for NSObject);
  return sub_10004C720((uint64_t)_swiftEmptyArrayStorage, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

unint64_t sub_1001DACB4()
{
  return 0xD000000000000018;
}

void sub_1001DACD0(void *a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  SEL *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  id v67;
  uint64_t v68;
  char v69[24];

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate, v13);
  if (Strong)
  {
    v15 = Strong;
    objc_msgSend(Strong, "hierarchyController:willAppend:animated:", v4, a2, a3 & 1);
    swift_unknownObjectRelease(v15);
  }
  LODWORD(v65) = a3;
  v16 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v69, 0, 0);
  v17 = *v16;
  if ((unint64_t)*v16 >> 62)
  {
    if (v17 < 0)
      v30 = *v16;
    else
      v30 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v16);
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (v18)
    {
LABEL_5:
      v19 = v18 - 1;
      if (__OFSUB__(v18, 1))
      {
        __break(1u);
      }
      else
      {
        v66 = v11;
        if ((v17 & 0xC000000000000001) == 0)
        {
          if ((v19 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v19 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v20 = *(id *)(v17 + 8 * v19 + 32);
LABEL_10:
            v21 = v20;
            swift_bridgeObjectRelease(v17);
            sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
            v22 = static NSObject.== infix(_:_:)(v21, a1);
            if ((v22 & 1) != 0)
            {
              v63 = *(id *)DOCLog.UI.unsafeMutableAddressor(v22);
              HIDWORD(v62) = static os_log_type_t.fault.getter();
              v23 = sub_10006922C((uint64_t *)&unk_100644560);
              v24 = swift_allocObject(v23, 112, 7);
              v64 = v8;
              v25 = (_QWORD *)v24;
              *(_OWORD *)(v24 + 16) = xmmword_1004D4CE0;
              *(_QWORD *)(v24 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
              v25[8] = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
              v25[4] = a1;
              v26 = *v16;
              v25[12] = sub_10006922C(&qword_100647590);
              v25[13] = sub_100062698(&qword_100647598, &qword_100647590, (uint64_t)&protocol conformance descriptor for [A]);
              v25[9] = v26;
              v27 = a1;
              swift_bridgeObjectRetain(v26);
              v28 = v63;
              os_log(_:dso:log:type:_:)("Likely performance/correctness bug: appending a location %@ which is already the currently shown location. Currently shown locations: %@", 136, 2, &_mh_execute_header, v63, HIDWORD(v62), v25);

              v29 = v25;
              v8 = v64;
              swift_bridgeObjectRelease(v29);
            }
            else
            {

            }
            v11 = v66;
            goto LABEL_19;
          }
          __break(1u);
          return;
        }
      }
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      goto LABEL_10;
    }
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v16);
    if (v18)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease(v17);
LABEL_19:
  v68 = *v16;
  v31 = v68;
  v32 = a1;
  v33 = swift_bridgeObjectRetain(v31);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
  specialized Array._endMutation()(v36);
  DOCHierarchyController.locations.setter(v68);
  v38 = (void *)swift_unknownObjectWeakLoadStrong(v12, v37);
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v38, "hierarchyController:didAppend:animated:", v4, a2, v65 & 1);
    swift_unknownObjectRelease(v39);
  }
  v40 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v40)
  {
    v41 = Logger.UI.unsafeMutableAddressor(v40);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v41, v8);
    v42 = v32;
    v43 = a2;
    v44 = v42;
    v45 = v43;
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.debug.getter();
    v48 = (SEL *)&off_10061F000;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc(32, -1);
      v65 = v9;
      v50 = v49;
      v51 = (_QWORD *)swift_slowAlloc(8, -1);
      v63 = (id)swift_slowAlloc(64, -1);
      v68 = (uint64_t)v63;
      *(_DWORD *)v50 = 136315650;
      v67 = (id)sub_1000544FC(0xD00000000000002DLL, 0x80000001005181B0, &v68);
      *(_QWORD *)&v52 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68).n128_u64[0];
      *(_WORD *)(v50 + 12) = 2080;
      v67 = objc_msgSend(v44, "node", v52);
      v53 = sub_10006922C(&qword_100652EB0);
      v54 = String.init<A>(describing:)(&v67, v53);
      v64 = v8;
      v56 = v55;
      v57 = sub_1000544FC(v54, v55, &v68);
      v66 = v11;
      v67 = (id)v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);

      swift_bridgeObjectRelease(v56);
      *(_WORD *)(v50 + 22) = 2112;
      v67 = v45;
      v58 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      *v51 = v45;

      v48 = (SEL *)&off_10061F000;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[PROTECTED APPS] %s start authentication for node: %s viewController: %@", (uint8_t *)v50, 0x20u);
      v59 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v51, 1, v59);
      swift_slowDealloc(v51, -1, -1);
      v60 = v63;
      swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      swift_slowDealloc(v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v64);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    v61 = objc_msgSend(v44, v48[494]);
    sub_1001F1728((uint64_t)v61, v45);
    swift_unknownObjectRelease(v61);
  }
}

unint64_t sub_1001DB2F4()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_1001DB310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(__n128))
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  Class isa;
  __n128 v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[24];
  uint64_t v31;

  v13 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v13);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1001D6804((uint64_t)v15, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v30, 0, 0);
  v31 = *v17;
  swift_bridgeObjectRetain(v31);
  sub_1001DB5C0(a2, (uint64_t (*)(void))sub_10045C054, v18);
  DOCHierarchyController.locations.setter(v31);
  v31 = *v17;
  v19 = v31;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(v19);
  sub_10008862C(a3);
  DOCHierarchyController.locations.setter(v31);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate);
  if (Strong)
  {
    v21 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "hierarchyController:didReplaceTrailingLocations:with:animated:", a1, a2, isa, a5 & 1);

    swift_unknownObjectRelease(v21);
  }
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return a7(v23);
  if (!((unint64_t)a6 >> 62))
  {
    v24 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a6);
    if (v24)
      goto LABEL_6;
LABEL_16:
    v23 = swift_bridgeObjectRelease(a6);
    return a7(v23);
  }
  if (a6 < 0)
    v28 = a6;
  else
    v28 = a6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a6);
  result = _CocoaArrayWrapper.endIndex.getter(v28);
  v24 = result;
  if (!result)
    goto LABEL_16;
LABEL_6:
  if (v24 >= 1)
  {
    v26 = 0;
    do
    {
      if ((a6 & 0xC000000000000001) != 0)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v26, a6);
      }
      else
      {
        v27 = *(_QWORD *)(a6 + 8 * v26 + 32);
        swift_retain();
      }
      ++v26;
      v31 = v27;
      sub_1001F3508(&v31, 0xD00000000000003ALL, 0x8000000100518100);
      swift_release(v27);
    }
    while (v24 != v26);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DB5B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_1001DB5C0(a1, (uint64_t (*)(void))sub_10045C0C8, a3);
}

uint64_t sub_1001DB5C0(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t (*v11)(void);

  if (result)
  {
    v5 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      a3 = a2;
      v4 = *v3;
      if (!((unint64_t)*v3 >> 62))
      {
        v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        v7 = -v6;
        if (!__OFSUB__(0, v6))
          goto LABEL_5;
        goto LABEL_20;
      }
    }
    if (v4 < 0)
      v10 = v4;
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    v11 = a3;
    swift_bridgeObjectRetain(v4);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    result = swift_bridgeObjectRelease(v4);
    a3 = v11;
    v7 = -v6;
    if (!__OFSUB__(0, v6))
    {
LABEL_5:
      v8 = -v5;
      if (v7 <= 0 && v7 > v8)
        goto LABEL_23;
      result = v6 - v5;
      if (!__OFADD__(v6, v8))
      {
        if (v6 >= result)
          return a3();
        goto LABEL_22;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

void sub_1001DB698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  void *Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v4 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v19, 0, 0);
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0)
      v16 = *v7;
    else
      v16 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v7);
    v17 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v8);
    v10 = v17 - 1;
    if (!__OFSUB__(v17, 1))
      goto LABEL_3;
LABEL_14:
    __break(1u);
    return;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
    goto LABEL_14;
LABEL_3:
  if (v10 < a2)
    a2 = v10;
  if (a2 >= 1)
  {
    v11 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
    sub_1001D6804((uint64_t)v6, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    v18 = *v7;
    swift_bridgeObjectRetain(v18);
    sub_1001DB5C0(a2, (uint64_t (*)(void))sub_10045C054, v12);
    DOCHierarchyController.locations.setter(v18);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate, v13);
    if (Strong)
    {
      v15 = Strong;
      objc_msgSend(Strong, "hierarchyController:didPopLocations:animated:", a1, a2, 0);
      swift_unknownObjectRelease(v15);
    }
  }
  sub_1000AC1A8();
  sub_1001DB830();
}

void sub_1001DB830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  id v44;
  _BYTE v45[24];

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v42 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v42 - v9;
  v11 = (void *)sub_100038378();
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v45, 0, 0);
  v13 = *v12;
  v14 = swift_bridgeObjectRetain(*v12);
  v44 = v11;
  v15 = (void *)sub_10015F878(v14, v11);
  v17 = v16;
  v19 = v18;
  v20 = swift_bridgeObjectRelease(v13);
  if (v15)
  {
    v21 = v19;
    v22 = v15;
    swift_bridgeObjectRetain(v17);
    sub_1001D9640(v22, v17, v19);
    v23 = objc_msgSend(v22, "canBeRestored");
    if ((_DWORD)v23)
    {
      v24 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "saveLastVisitedLocation");
      if ((_DWORD)v24)
      {
        sub_1001EA200(v22, v17, v19, 1);

        swift_bridgeObjectRelease(v17);
        sub_1001ECE60(v15, v17, v19);

      }
      else
      {
        v36 = Logger.DocumentManager.unsafeMutableAddressor(v24);
        v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v10, v36, v1);
        v38 = Logger.logObject.getter(v37);
        v39 = static os_log_type_t.default.getter(v38);
        if (os_log_type_enabled(v38, v39))
        {
          v40 = (uint8_t *)swift_slowAlloc(2, -1);
          v43 = v21;
          v41 = v40;
          *(_WORD *)v40 = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "Not storing last visited location: opted out.", v40, 2u);
          swift_slowDealloc(v41, -1, -1);

          swift_bridgeObjectRelease(v17);
          sub_1001ECE60(v15, v17, v19);
        }
        else
        {
          sub_1001ECE60(v15, v17, v19);

          swift_bridgeObjectRelease(v17);
        }
        (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
      }
    }
    else
    {
      v30 = Logger.DocumentManager.unsafeMutableAddressor(v23);
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v30, v1);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(2, -1);
        v43 = v21;
        v35 = v34;
        *(_WORD *)v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Not storing last visited location: not available, or cannot be restored.", v34, 2u);
        swift_slowDealloc(v35, -1, -1);

        swift_bridgeObjectRelease(v17);
        sub_1001ECE60(v15, v17, v19);
      }
      else
      {
        sub_1001ECE60(v15, v17, v19);

        swift_bridgeObjectRelease(v17);
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
    }
  }
  else
  {
    v25 = Logger.DocumentManager.unsafeMutableAddressor(v20);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v25, v1);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Not storing last visited location: invalid browsedState", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

uint64_t sub_1001DBC98(void *a1, int a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  id v22;
  NSObject *v23;
  int v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char v56;
  void *v57;
  void *v58;
  Swift::String v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t Strong;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  int v76;
  os_log_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  __int128 aBlock;
  uint64_t (*v87)(uint64_t);
  void *v88;
  uint64_t (*v89)();
  uint64_t v90;
  char v91[32];

  v82 = a4;
  v84 = a3;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v74 - v12;
  v81 = v4;
  v14 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v91, 0, 0);
  v15 = *v14;
  swift_bridgeObjectRetain(*v14);
  v16 = sub_100174624((uint64_t)a1, v15);
  v18 = v17;
  v19 = swift_bridgeObjectRelease(v15);
  v20 = Logger.UI.unsafeMutableAddressor(v19);
  v83 = v8;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  if ((v18 & 1) == 0)
  {
    v80 = v16;
    v21(v13, v20, v7);
    v22 = a1;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v76 = v24;
      v77 = v23;
      v78 = v7;
      v79 = a2;
      v25 = swift_slowAlloc(32, -1);
      v75 = swift_slowAlloc(96, -1);
      v85 = v75;
      *(_DWORD *)v25 = 136315650;
      *(_QWORD *)&aBlock = sub_1000544FC(0xD000000000000022, 0x8000000100518600, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);
      *(_WORD *)(v25 + 12) = 2080;
      v74 = v22;
      v26 = v22;
      v27 = objc_msgSend(v26, "description");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      *(_QWORD *)&aBlock = sub_1000544FC(v28, v30, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);

      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v25 + 22) = 2080;
      v31 = objc_msgSend(v26, "node");
      v32 = (uint64_t)v31;
      if (v31)
      {
        v33 = objc_msgSend(v31, "displayName");
        swift_unknownObjectRelease(v32);
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v35 = v34;

      }
      else
      {
        v35 = 0;
      }
      *(_QWORD *)&aBlock = v32;
      *((_QWORD *)&aBlock + 1) = v35;
      v43 = sub_10006922C(&qword_100648C80);
      v44 = String.init<A>(describing:)(&aBlock, v43);
      v46 = v45;
      *(_QWORD *)&aBlock = sub_1000544FC(v44, v45, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);

      swift_bridgeObjectRelease(v46);
      v47 = v77;
      _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v76, "[PROTECTED APPS] %s Location needs auth location: %s node: %s", (uint8_t *)v25, 0x20u);
      v48 = v75;
      swift_arrayDestroy(v75, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v13, v78);
      v41 = v82;
      v42 = (uint64_t)v84;
      LOBYTE(a2) = v79;
      v22 = v74;
    }
    else
    {

      result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v13, v7);
      v41 = v82;
      v42 = (uint64_t)v84;
    }
    v49 = *v14;
    if ((unint64_t)*v14 >> 62)
    {
      if (v49 < 0)
        v73 = *v14;
      else
        v73 = v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v14);
      v50 = _CocoaArrayWrapper.endIndex.getter(v73);
      result = swift_bridgeObjectRelease(v49);
    }
    else
    {
      v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v51 = v81;
    v52 = v80 + 1;
    if (__OFADD__(v80, 1))
    {
      __break(1u);
    }
    else
    {
      v53 = v50 - v52;
      if (!__OFSUB__(v50, v52))
      {
        *(_QWORD *)&aBlock = 0;
        *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
        strcpy((char *)&aBlock, "remove(after: ");
        HIBYTE(aBlock) = -18;
        v54 = objc_msgSend(v22, "shortDescription");
        v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
        v56 = a2;
        v58 = v57;

        v59._countAndFlagsBits = v55;
        v59._object = v58;
        String.append(_:)(v59);
        swift_bridgeObjectRelease(v58);
        v60._countAndFlagsBits = 41;
        v60._object = (void *)0xE100000000000000;
        String.append(_:)(v60);
        v61 = *((_QWORD *)&aBlock + 1);
        v62 = sub_100037A40(aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease(v61);
        v63 = swift_allocObject(&unk_1005D0BF8, 64, 7);
        *(_QWORD *)(v63 + 16) = v51;
        *(_QWORD *)(v63 + 24) = v53;
        v64 = v56 & 1;
        *(_BYTE *)(v63 + 32) = v64;
        *(_QWORD *)(v63 + 40) = v62;
        *(_QWORD *)(v63 + 48) = v42;
        *(_QWORD *)(v63 + 56) = v41;
        Strong = swift_unknownObjectWeakLoadStrong(&v51[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v65);
        if (Strong)
        {
          v67 = (void *)Strong;
          v68 = swift_allocObject(&unk_1005D0C20, 32, 7);
          *(_QWORD *)(v68 + 16) = sub_1001F5F74;
          *(_QWORD *)(v68 + 24) = v63;
          v89 = sub_10010DF60;
          v90 = v68;
          *(_QWORD *)&aBlock = _NSConcreteStackBlock;
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v87 = sub_10004A82C;
          v88 = &unk_1005D0C38;
          v69 = _Block_copy(&aBlock);
          v70 = v90;
          sub_10008BA00(v42, v41);
          v71 = v51;
          swift_retain();
          swift_retain();
          swift_release(v70);
          objc_msgSend(v67, "hierarchyController:willPopLocations:animated:completion:", v71, v53, v64, v69);
          _Block_release(v69);
          swift_release(v62);
          swift_release(v63);
          return swift_unknownObjectRelease(v67);
        }
        else
        {
          sub_10008BA00(v42, v41);
          v72 = v51;
          swift_retain();
          sub_1001DC378(v72, v53, v64, v62, v42, v41);
          swift_release(v62);
          return swift_release(v63);
        }
      }
    }
    __break(1u);
    return result;
  }
  v36 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v11, v20, v7);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Cannot remove the location after a location that is not in the locations array", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v11, v7);
  if (v84)
    return v84(result);
  return result;
}

uint64_t sub_1001DC378(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  void *Strong;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  _QWORD *v26;
  void *v27;
  _QWORD *v28;
  char *v29;
  char v32[24];
  uint64_t aBlock[5];
  _QWORD *v34;

  v12 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v12);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a2 >= 1)
  {
    v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    sub_1001D6804((uint64_t)v14, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    v16 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v32, 0, 0);
    aBlock[0] = *v16;
    swift_bridgeObjectRetain(aBlock[0]);
    sub_1001DB5C0(a2, (uint64_t (*)(void))sub_10045C054, v17);
    DOCHierarchyController.locations.setter(aBlock[0]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v18);
    if (Strong)
    {
      v20 = Strong;
      objc_msgSend(Strong, "hierarchyController:didPopLocations:animated:", a1, a2, a3 & 1);
      swift_unknownObjectRelease(v20);
    }
  }
  sub_1001DB830();
  v22 = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v21);
  if (!v22
    || (v23 = v22,
        v24 = objc_msgSend(v22, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v23),
        !v24))
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v24 = objc_msgSend(v25, "_definiteTransitionCoordinator");

  }
  v26 = (_QWORD *)swift_allocObject(&unk_1005D0C70, 48, 7);
  v26[2] = a1;
  v26[3] = a4;
  v26[4] = a5;
  v26[5] = a6;
  aBlock[4] = (uint64_t)sub_1001F55F0;
  v34 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100018CC0;
  aBlock[3] = (uint64_t)&unk_1005D0C88;
  v27 = _Block_copy(aBlock);
  v28 = v34;
  v29 = a1;
  swift_retain();
  sub_10008BA00(a5, a6);
  swift_release(v28);
  objc_msgSend(v24, "animateAlongsideTransition:completion:", 0, v27);
  _Block_release(v27);
  return swift_unknownObjectRelease(v24);
}

unint64_t sub_1001DC5E8()
{
  return 0xD000000000000040;
}

void sub_1001DC604(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void (*a5)(__n128), uint64_t a6, int a7, int a8, char a9, void *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(__n128);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  void (*v86)(__n128);
  char *v87;
  uint64_t v88;
  char v89[24];
  _BYTE v90[24];
  _BYTE v91[24];
  char v92[24];
  char v93[24];
  char v94[8];

  v74 = a8;
  v77 = a7;
  v81 = a6;
  v86 = a5;
  v84 = a4;
  v76 = a1;
  v12 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v78 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v88);
  v80 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v72 - v17;
  v19 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v19);
  v72 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v73 = (uint64_t)&v72 - v22;
  __chkstk_darwin(v23);
  v87 = (char *)&v72 - v24;
  __chkstk_darwin(v25);
  v83 = (uint64_t)&v72 - v26;
  __chkstk_darwin(v27);
  v79 = (uint64_t)&v72 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v72 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v72 - v33;
  __chkstk_darwin(v35);
  v37 = (char *)&v72 - v36;
  v75 = a3;
  v38 = swift_projectBox(a3);
  v39 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v94, 0, 0);
  sub_1000271D4(v39, (uint64_t)v34, (uint64_t *)&unk_1006443D0);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v41 = v40(v34, 1, v12);
  v85 = a2;
  if (v41 == 1)
  {
    v42 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(v42, v93, 0, 0);
    sub_1000271D4(v42, (uint64_t)v37, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v34, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v34, (uint64_t)v37, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v37, 0, 1, v12);
  }
  v43 = (uint64_t)v87;
  swift_beginAccess(v38, v92, 0, 0);
  sub_10007C6DC(v38, (uint64_t)v31, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v82(v31, 0, 1, v12);
  v44 = (uint64_t)&v18[*(int *)(v88 + 48)];
  sub_1000271D4((uint64_t)v37, (uint64_t)v18, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v31, v44, (uint64_t *)&unk_1006443D0);
  if (v40(v18, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v31, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_1006443D0);
    v45 = v40((char *)v44, 1, v12);
    v46 = v86;
    if (v45 == 1)
    {
      sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006443D0);
      v47 = v85;
      v48 = v84;
LABEL_17:
      swift_beginAccess(v38, v91, 1, 0);
      *(_BYTE *)(v38 + *(int *)(v12 + 24)) = 0;
      v57 = &v47[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
      swift_beginAccess(&v47[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v90, 0, 0);
      v58 = *(_QWORD *)v57;
      v59 = swift_bridgeObjectRetain(v58);
      v60 = sub_1001EE92C(v59);
      swift_bridgeObjectRelease(v58);
      v61 = swift_allocObject(&unk_1005D08B0, 80, 7);
      v62 = v76;
      *(_QWORD *)(v61 + 16) = v76;
      *(_QWORD *)(v61 + 24) = v47;
      *(_QWORD *)(v61 + 32) = v75;
      *(_QWORD *)(v61 + 40) = v48;
      v63 = v81;
      *(_QWORD *)(v61 + 48) = v46;
      *(_QWORD *)(v61 + 56) = v63;
      *(_BYTE *)(v61 + 64) = v74 & 1;
      *(_BYTE *)(v61 + 65) = a9 & 1;
      *(_QWORD *)(v61 + 72) = a10;
      swift_bridgeObjectRetain(v62);
      v47;
      swift_retain();
      swift_retain();
      sub_10008BA00((uint64_t)v46, v63);
      v64 = a10;
      sub_1001DD6EC(v62, v77 & 1, v60 & 1, (uint64_t)sub_1001F5A58, v61);
      swift_release(v61);
      return;
    }
    goto LABEL_9;
  }
  v49 = v79;
  sub_1000271D4((uint64_t)v18, v79, (uint64_t *)&unk_1006443D0);
  if (v40((char *)v44, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v31, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v49, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v46 = v86;
LABEL_9:
    sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100647580);
    v47 = v85;
    v48 = v84;
    goto LABEL_10;
  }
  v55 = v78;
  sub_1001D0788(v44, v78, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v56 = static UUID.== infix(_:_:)(v49, v55);
  sub_10007C720(v55, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v31, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v49, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v43 = (uint64_t)v87;
  sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006443D0);
  v46 = v86;
  v47 = v85;
  v48 = v84;
  if ((v56 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v50 = (uint64_t)&v47[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
  swift_beginAccess(&v47[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v91, 0, 0);
  v51 = v83;
  sub_1000271D4(v50, v83, (uint64_t *)&unk_1006443D0);
  swift_beginAccess(v38, v90, 0, 0);
  sub_10007C6DC(v38, v43, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v82((char *)v43, 0, 1, v12);
  v52 = v80;
  v53 = v80 + *(int *)(v88 + 48);
  sub_1000271D4(v51, v80, (uint64_t *)&unk_1006443D0);
  sub_1000271D4(v43, v53, (uint64_t *)&unk_1006443D0);
  if (v40((char *)v52, 1, v12) == 1)
  {
    sub_10000CB4C(v43, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C(v51, (uint64_t *)&unk_1006443D0);
    if (v40((char *)v53, 1, v12) == 1)
    {
      sub_10000CB4C(v52, (uint64_t *)&unk_1006443D0);
LABEL_19:
      v67 = (uint64_t)v72;
      v82(v72, 1, 1, v12);
      sub_1001D6804(v67, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  v54 = v73;
  sub_1000271D4(v52, v73, (uint64_t *)&unk_1006443D0);
  if (v40((char *)v53, 1, v12) == 1)
  {
    sub_10000CB4C(v43, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C(v83, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v54, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_15:
    sub_10000CB4C(v52, (uint64_t *)&unk_100647580);
    goto LABEL_20;
  }
  v65 = v78;
  sub_1001D0788(v53, v78, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v66 = static UUID.== infix(_:_:)(v54, v65);
  sub_10007C720(v65, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C(v43, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C(v83, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v54, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C(v52, (uint64_t *)&unk_1006443D0);
  if ((v66 & 1) != 0)
    goto LABEL_19;
LABEL_20:
  v68 = &v47[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(_QWORD *)v68 = 0;
  v68[8] = 1;
  v69 = swift_beginAccess(v48 + 16, v89, 0, 0);
  v70 = *(_QWORD *)(v48 + 16);
  if (v70)
  {
    swift_retain();
    sub_1001D6274(v71, 0);
    v69 = swift_release(v70);
  }
  if (v46)
    v46(v69);
}

void sub_1001DCEDC(_QWORD *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(__n128), uint64_t a7, int a8, char a9, void *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void **v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(__n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(__n128);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81[24];
  char v82[24];
  char v83[24];
  _QWORD *v84;

  v71 = a8;
  v73 = a1;
  v74 = a5;
  v80 = a3;
  v14 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v15 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  v79 = v15;
  __chkstk_darwin(v14);
  v68 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v77);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v19);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v72 = (uint64_t)&v68 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  v33 = swift_projectBox(a4);
  v34 = *(_QWORD *)(a2 + 16);
  v35 = _swiftEmptyArrayStorage;
  v75 = a6;
  v70 = v21;
  v76 = v33;
  if (v34)
  {
    v69 = a7;
    v84 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v34);
    v36 = (void **)(a2 + 32);
    do
    {
      v37 = *v36;
      v36 += 2;
      v38 = v37;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v39 = v84[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
      v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v38);
      specialized ContiguousArray._endMutation()(v40);
      --v34;
    }
    while (v34);
    v35 = v84;
    a7 = v69;
  }
  v41 = v80;
  v73 = sub_100017EEC((uint64_t)v35, (uint64_t)v73);
  swift_bridgeObjectRelease(v35);
  v42 = (uint64_t)&v41[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v41[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], &v84, 0, 0);
  sub_1000271D4(v42, (uint64_t)v29, (uint64_t *)&unk_1006443D0);
  v44 = v78;
  v43 = v79;
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  if (v45(v29, 1, v78) == 1)
  {
    v46 = (uint64_t)&v41[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v41[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v83, 0, 0);
    v47 = v46;
    v43 = v79;
    sub_1000271D4(v47, (uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v29, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v29, (uint64_t)v32, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v32, 0, 1, v44);
  }
  v48 = v76;
  swift_beginAccess(v76, v82, 0, 0);
  sub_10007C6DC(v48, (uint64_t)v26, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v49(v26, 0, 1, v44);
  v50 = (uint64_t)&v18[*(int *)(v77 + 48)];
  sub_1000271D4((uint64_t)v32, (uint64_t)v18, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v26, v50, (uint64_t *)&unk_1006443D0);
  if (v45(v18, 1, v44) == 1)
  {
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    if (v45((char *)v50, 1, v44) == 1)
    {
      sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006443D0);
      v51 = v75;
LABEL_19:
      v61 = (_QWORD *)swift_allocObject(&unk_1005D08D8, 48, 7);
      v62 = v80;
      v63 = v74;
      v61[2] = v80;
      v61[3] = v63;
      v61[4] = v51;
      v61[5] = a7;
      v64 = (uint64_t)v70;
      v49(v70, 1, 1, v78);
      v65 = v62;
      swift_retain();
      sub_10008BA00((uint64_t)v51, a7);
      sub_1001D6804(v64, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      swift_retain();
      v66 = v73;
      if ((v71 & 1) != 0)
        sub_1001F2C30(1, (uint64_t)v73, a9 & 1, v65, (void (*)(void))sub_1001F5AA8, (uint64_t)v61);
      else
        sub_1001F1F2C(a10, (uint64_t)v73, a9 & 1, v65, (void (*)(void))sub_1001F5AA8, (uint64_t)v61);
      v67 = swift_bridgeObjectRelease(v66);
      swift_release_n(v61, 2, v67);
      return;
    }
    goto LABEL_13;
  }
  v52 = v72;
  sub_1000271D4((uint64_t)v18, v72, (uint64_t *)&unk_1006443D0);
  if (v45((char *)v50, 1, v44) == 1)
  {
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v52, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_13:
    sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_100647580);
    v51 = v75;
    goto LABEL_14;
  }
  v59 = v68;
  sub_1001D0788(v50, v68, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v60 = static UUID.== infix(_:_:)(v52, v59);
  sub_10007C720(v59, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v52, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v18, (uint64_t *)&unk_1006443D0);
  v51 = v75;
  if ((v60 & 1) != 0)
    goto LABEL_19;
LABEL_14:
  swift_bridgeObjectRelease(v73);
  v53 = v74;
  v54 = v74 + 16;
  v55 = &v80[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(_QWORD *)v55 = 0;
  v55[8] = 1;
  v56 = swift_beginAccess(v54, v81, 0, 0);
  v57 = *(_QWORD *)(v53 + 16);
  if (v57)
  {
    swift_retain();
    sub_1001D6274(v58, 0);
    v56 = swift_release(v57);
  }
  if (v51)
    v51(v56);
}

double sub_1001DD4F0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *Strong;
  void *v9;
  id v10;
  id v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  char *v15;
  double result;
  _QWORD v17[5];
  _QWORD *v18;

  sub_1001DB830();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  if (!Strong
    || (v9 = Strong,
        v10 = objc_msgSend(Strong, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v9),
        !v10))
  {
    v11 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v10 = objc_msgSend(v11, "_definiteTransitionCoordinator");

  }
  v12 = (_QWORD *)swift_allocObject(&unk_1005D0A18, 48, 7);
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v17[4] = sub_1001F5B80;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100018CC0;
  v17[3] = &unk_1005D0A30;
  v13 = _Block_copy(v17);
  v14 = v18;
  v15 = a1;
  swift_retain();
  sub_10008BA00(a3, a4);
  objc_msgSend(v10, "animateAlongsideTransition:completion:", 0, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  return result;
}

void sub_1001DD65C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128))
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = swift_beginAccess(a3 + 16, v10, 0, 0);
  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    swift_retain();
    sub_1001D6274(v9, 0);
    v7 = swift_release(v8);
  }
  if (a4)
    a4(v7);
}

uint64_t sub_1001DD6EC(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v11 = type metadata accessor for DOCHierarchyController.BatchedLocationViewControllerDriver();
  v12 = swift_allocObject(v11, 72, 7);
  *(_QWORD *)(v12 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v12 + 64) = 0;
  *(_QWORD *)(v12 + 16) = v5;
  *(_QWORD *)(v12 + 24) = a1;
  *(_BYTE *)(v12 + 32) = a2;
  *(_BYTE *)(v12 + 33) = a3;
  v13 = swift_allocObject(&unk_1005D0158, 24, 7);
  swift_weakInit(v13 + 16, v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1005D0180, 40, 7);
  v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  v15 = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v12 + 64) = v12;
  v16 = v5;
  swift_bridgeObjectRetain(a1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRelease(v15);
  v17 = swift_allocObject(&unk_1005D0158, 24, 7);
  swift_weakInit(v17 + 16, v12);
  v18 = (_QWORD *)swift_allocObject(&unk_1005D01A8, 40, 7);
  v18[2] = sub_1001F5574;
  v18[3] = v14;
  v18[4] = v17;
  v19 = *(_QWORD *)(v12 + 48);
  *(_QWORD *)(v12 + 40) = sub_1001F55AC;
  *(_QWORD *)(v12 + 48) = v18;
  swift_retain();
  swift_release(v19);
  sub_1001ED168();
  swift_release(v12);
  swift_release(v13);
  return swift_release(v14);
}

unint64_t sub_1001DD868()
{
  return 0xD00000000000003DLL;
}

uint64_t sub_1001DD884(uint64_t a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  _BYTE v41[24];
  _BYTE v42[24];

  v7 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  result = swift_beginAccess(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v42, 0, 0);
  v13 = *v11;
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v35 = v13;
    else
      v35 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    result = swift_bridgeObjectRelease(v13);
    if (v36)
      return result;
  }
  else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  v37 = a1;
  v38 = a3;
  v14 = swift_allocObject(&unk_1005CF1E0, 17, 7);
  v40 = 1;
  *(_BYTE *)(v14 + 16) = 1;
  v39 = v14 + 16;
  v15 = objc_msgSend(a2, "placeholderLocation");
  v16 = objc_msgSend(a2, "sourceIdentifier");
  v17 = DOCDocumentSourceIdentifierTrashedItems;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v20 = v19;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v23 = v21;
  if (v18 != v22 || v20 != v21)
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);

  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v23);
  v24 = swift_allocObject(&unk_1005CEFC0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  sub_10007C6DC(v37, (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v25 = *(unsigned __int8 *)(v8 + 80);
  v26 = (v25 + 24) & ~v25;
  v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1005D0B80, v28 + 9, v25 | 7);
  *(_QWORD *)(v29 + 16) = v24;
  sub_1001D0788((uint64_t)v10, v29 + v26, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  *(_QWORD *)(v29 + v27) = v14;
  v30 = v29 + v28;
  *(_QWORD *)v30 = v15;
  *(_BYTE *)(v30 + 8) = v38 & 1;
  v31 = sub_10006922C(&qword_100644A30);
  v32 = swift_allocObject(v31, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v32 + 32) = v15;
  *(_QWORD *)(v32 + 40) = 0;
  v33 = swift_allocObject(&unk_1005D0BA8, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_1001F5E5C;
  *(_QWORD *)(v33 + 24) = v29;
  v34 = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1001DD6EC(v32, 0, v40 & 1, (uint64_t)sub_1001F6B34, v33);
  swift_release(v24);
  swift_release(v29);

  swift_bridgeObjectRelease(v32);
  swift_release(v33);
  swift_beginAccess(v39, v41, 1, 0);
  *(_BYTE *)(v14 + 16) = 0;
  return swift_release(v14);
}

uint64_t sub_1001DDBC0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, void *a8, unsigned __int8 a9, uint64_t a10, char a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _QWORD *v77;
  uint64_t v78;
  void *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char v105[24];
  _BYTE v106[24];
  char v107[24];
  char v108[24];
  char v109[16];

  v97 = a8;
  v98 = a7;
  v100 = a5;
  v101 = a6;
  v99 = a4;
  v91 = a1;
  v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v92 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v104);
  v95 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v88 - v18;
  v20 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v20);
  v88 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v89 = (uint64_t)&v88 - v23;
  __chkstk_darwin(v24);
  v102 = (char *)&v88 - v25;
  __chkstk_darwin(v26);
  v94 = (uint64_t)&v88 - v27;
  __chkstk_darwin(v28);
  v93 = (uint64_t)&v88 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v88 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v88 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v88 - v37;
  v90 = a3;
  v39 = swift_projectBox(a3);
  v40 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess(a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v109, 0, 0);
  sub_1000271D4(v40, (uint64_t)v35, (uint64_t *)&unk_1006443D0);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v42 = v41(v35, 1, v13);
  v103 = a2;
  if (v42 == 1)
  {
    v43 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(v43, v108, 0, 0);
    sub_1000271D4(v43, (uint64_t)v38, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v35, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v35, (uint64_t)v38, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
  }
  swift_beginAccess(v39, v107, 0, 0);
  sub_10007C6DC(v39, (uint64_t)v32, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v96(v32, 0, 1, v13);
  v44 = (unint64_t)&v19[*(int *)(v104 + 48)];
  sub_1000271D4((uint64_t)v38, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v32, v44, (uint64_t *)&unk_1006443D0);
  if (v41(v19, 1, v13) == 1)
  {
    v45 = (uint64_t (*)(uint64_t))&unk_1006443D0;
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
    v46 = v41((char *)v44, 1, v13);
    v47 = (uint64_t)v102;
    v48 = v103;
    if (v46 == 1)
    {
      sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v49 = v93;
  sub_1000271D4((uint64_t)v19, v93, (uint64_t *)&unk_1006443D0);
  if (v41((char *)v44, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v49, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v47 = (uint64_t)v102;
    v48 = v103;
LABEL_9:
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_100647580);
    goto LABEL_25;
  }
  v50 = v92;
  sub_1001D0788(v44, v92, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v44 = static UUID.== infix(_:_:)(v49, v50);
  v51 = v50;
  v45 = type metadata accessor for DOCHierarchyController.FetchingOperationToken;
  sub_10007C720(v51, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v49, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
  v47 = (uint64_t)v102;
  v48 = v103;
  if ((v44 & 1) == 0)
  {
LABEL_25:
    v68 = v48 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(v48 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation, v106, 0, 0);
    v69 = v94;
    sub_1000271D4(v68, v94, (uint64_t *)&unk_1006443D0);
    swift_beginAccess(v39, v105, 0, 0);
    sub_10007C6DC(v39, v47, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v96((char *)v47, 0, 1, v13);
    v70 = v95;
    v71 = v95 + *(int *)(v104 + 48);
    sub_1000271D4(v69, v95, (uint64_t *)&unk_1006443D0);
    sub_1000271D4(v47, v71, (uint64_t *)&unk_1006443D0);
    if (v41((char *)v70, 1, v13) == 1)
    {
      sub_10000CB4C(v47, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C(v69, (uint64_t *)&unk_1006443D0);
      if (v41((char *)v71, 1, v13) == 1)
      {
        sub_10000CB4C(v70, (uint64_t *)&unk_1006443D0);
LABEL_32:
        v75 = (uint64_t)v88;
        v96(v88, 1, 1, v13);
        sub_1001D6804(v75, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
        return sub_1001F11C4(v48, v99, v100, v101);
      }
    }
    else
    {
      v72 = v89;
      sub_1000271D4(v70, v89, (uint64_t *)&unk_1006443D0);
      if (v41((char *)v71, 1, v13) != 1)
      {
        v73 = v92;
        sub_1001D0788(v71, v92, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        v74 = static UUID.== infix(_:_:)(v72, v73);
        sub_10007C720(v73, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        sub_10000CB4C(v47, (uint64_t *)&unk_1006443D0);
        sub_10000CB4C(v69, (uint64_t *)&unk_1006443D0);
        sub_10007C720(v72, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        sub_10000CB4C(v70, (uint64_t *)&unk_1006443D0);
        if ((v74 & 1) != 0)
          goto LABEL_32;
        return sub_1001F11C4(v48, v99, v100, v101);
      }
      sub_10000CB4C(v47, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C(v69, (uint64_t *)&unk_1006443D0);
      sub_10007C720(v72, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    }
    sub_10000CB4C(v70, (uint64_t *)&unk_100647580);
    return sub_1001F11C4(v48, v99, v100, v101);
  }
LABEL_11:
  swift_beginAccess(v39, v106, 1, 0);
  *(_BYTE *)(v39 + *(int *)(v13 + 24)) = 0;
  v52 = v91;
  if (v97)
  {
    v53 = v97;
    v54 = sub_1001F10F8((uint64_t)v52, (uint64_t)v53);
    if ((v55 & 1) == 0)
    {
      v56 = v54;
      if ((v54 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v44 = v52[2];
        v38 = (char *)(v44 - v54);
        if (v44 >= v54)
        {
          v32 = (char *)(v52 + 4);
          v45 = (uint64_t (*)(uint64_t))type metadata accessor for __ContiguousArrayStorageBase(0);
          v57 = swift_bridgeObjectRetain(v52);
          v58 = swift_unknownObjectRetain_n(v57, 2);
          v59 = (_QWORD *)swift_dynamicCastClass(v58, v45);
          if (!v59)
          {
            swift_bridgeObjectRelease(v52);
            v59 = _swiftEmptyArrayStorage;
          }
          v60 = v59[2];
          swift_release(v59);
          if (v60 == v56)
          {
            v61 = (_QWORD *)swift_dynamicCastClass(v52, v45);
            if (!v61)
            {
              swift_bridgeObjectRelease(v52);
              v61 = _swiftEmptyArrayStorage;
            }
            goto LABEL_20;
          }
LABEL_42:
          swift_bridgeObjectRelease(v52);
          v61 = sub_10028F5C0((uint64_t)v52, (uint64_t)v32, 0, (2 * v56) | 1);
LABEL_20:
          v62 = v61;
          swift_bridgeObjectRelease(v52);
          v63 = swift_bridgeObjectRetain(v52);
          v64 = swift_unknownObjectRetain_n(v63, 2);
          v65 = (_QWORD *)swift_dynamicCastClass(v64, v45);
          if (!v65)
          {
            swift_bridgeObjectRelease(v52);
            v65 = _swiftEmptyArrayStorage;
          }
          v66 = (char *)v65[2];
          swift_release(v65);
          if (v66 == v38)
          {
            v67 = swift_dynamicCastClass(v52, v45);

            swift_bridgeObjectRelease(v52);
            if (v67)
            {
              v52 = (_QWORD *)v67;
            }
            else
            {
              swift_bridgeObjectRelease(v52);
              v52 = _swiftEmptyArrayStorage;
            }
          }
          else
          {
            swift_bridgeObjectRelease(v52);
            v87 = sub_10028F5C0((uint64_t)v52, (uint64_t)v32, v56, (2 * v44) | 1);

            swift_bridgeObjectRelease(v52);
            v52 = v87;
          }
          v77 = v62;
          goto LABEL_38;
        }
      }
      __break(1u);
      goto LABEL_42;
    }

  }
  swift_bridgeObjectRetain(v52);
  v77 = _swiftEmptyArrayStorage;
LABEL_38:
  LODWORD(v104) = a9;
  LODWORD(v102) = sub_1001EE92C(a10);
  v78 = swift_allocObject(&unk_1005D0AB8, 96, 7);
  *(_QWORD *)(v78 + 16) = v52;
  *(_QWORD *)(v78 + 24) = v48;
  v79 = (void *)v48;
  v80 = v52;
  v81 = v99;
  *(_QWORD *)(v78 + 32) = v90;
  *(_QWORD *)(v78 + 40) = v81;
  v82 = v101;
  *(_QWORD *)(v78 + 48) = v100;
  *(_QWORD *)(v78 + 56) = v82;
  v83 = v98;
  v84 = v97;
  *(_QWORD *)(v78 + 64) = v98;
  *(_QWORD *)(v78 + 72) = v84;
  *(_BYTE *)(v78 + 80) = a11 & 1;
  *(_QWORD *)(v78 + 88) = v77;
  v85 = v84;
  v79;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10008BA00((uint64_t)v82, v83);
  v86 = swift_bridgeObjectRetain(v80);
  sub_1001DD6EC(v86, v104 & 1, v102 & 1, (uint64_t)sub_1001F5CE4, v78);
  swift_bridgeObjectRelease(v80);
  return swift_release(v78);
}

void sub_1001DE5E0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t KeyPath;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char v80[24];
  char v81[24];
  char v82[32];

  v73 = a7;
  v74 = a8;
  v77 = a5;
  v78 = a6;
  v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v70 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v76);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v20);
  v69 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v71 = (uint64_t)&v68 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v68 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v68 - v31;
  v33 = swift_projectBox(a4);
  v75 = sub_1001DEC78(a2, a1);
  v34 = (uint64_t)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v82, 0, 0);
  sub_1000271D4(v34, (uint64_t)v29, (uint64_t *)&unk_1006443D0);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v36 = v35(v29, 1, v15);
  v72 = a3;
  if (v36 == 1)
  {
    v37 = (uint64_t)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(v37, v81, 0, 0);
    sub_1000271D4(v37, (uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v29, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v29, (uint64_t)v32, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v15);
  }
  swift_beginAccess(v33, v80, 0, 0);
  sub_10007C6DC(v33, (uint64_t)v26, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v38(v26, 0, 1, v15);
  v39 = (uint64_t)&v19[*(int *)(v76 + 48)];
  sub_1000271D4((uint64_t)v32, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v26, v39, (uint64_t *)&unk_1006443D0);
  if (v35(v19, 1, v15) == 1)
  {
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    v40 = v35((char *)v39, 1, v15);
    v41 = v74;
    v42 = (uint64_t)v75;
    v43 = v73;
    if (v40 == 1)
    {
      sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
      v44 = v72;
      goto LABEL_11;
    }
LABEL_9:
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_100647580);
    v44 = v72;
    goto LABEL_22;
  }
  v45 = v71;
  sub_1000271D4((uint64_t)v19, v71, (uint64_t *)&unk_1006443D0);
  if (v35((char *)v39, 1, v15) == 1)
  {
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v45, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v42 = (uint64_t)v75;
    v43 = v73;
    goto LABEL_9;
  }
  v46 = v70;
  sub_1001D0788(v39, v70, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v47 = static UUID.== infix(_:_:)(v45, v46);
  sub_10007C720(v46, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v32, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v45, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
  v41 = v74;
  v42 = (uint64_t)v75;
  v44 = v72;
  v43 = v73;
  if ((v47 & 1) == 0)
    goto LABEL_22;
LABEL_11:
  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0)
      v65 = v42;
    else
      v65 = v42 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v42);
    v66 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(v42);
    if (v66)
      goto LABEL_13;
LABEL_22:
    swift_bridgeObjectRelease(v42);
    sub_1001F11C4((uint64_t)v44, v77, v78, v43);
    return;
  }
  if (!*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_22;
LABEL_13:
  v76 = a9;
  v48 = (_QWORD *)swift_allocObject(&unk_1005D0AE0, 56, 7);
  v50 = v77;
  v49 = v78;
  v48[2] = v44;
  v48[3] = v50;
  v48[4] = v49;
  v48[5] = v43;
  v48[6] = v41;
  v51 = (uint64_t)v69;
  v38(v69, 1, 1, v15);
  v52 = v44;
  swift_retain();
  swift_retain();
  sub_10008BA00((uint64_t)v43, v41);
  sub_1001D6804(v51, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v53 = (void *)v76;
  v54 = (id)v76;
  if (v76)
  {
LABEL_17:
    LODWORD(v78) = a10;
    LODWORD(v77) = v53 == 0;
    v79 = v52;
    KeyPath = swift_getKeyPath(&unk_1004DCC18);
    v57 = v42;
    v58 = v54;
    v59 = v53;
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
    v60 = *(void **)&v52[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(_QWORD *)&v52[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = v54;
    v61 = v58;

    v79 = v52;
    v62 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v62, &protocol witness table for NSObject);

    v63 = swift_allocObject(&unk_1005D0B08, 49, 7);
    *(_QWORD *)(v63 + 16) = a11;
    *(_QWORD *)(v63 + 24) = v52;
    *(_QWORD *)(v63 + 32) = sub_1001F5D28;
    *(_QWORD *)(v63 + 40) = v48;
    *(_BYTE *)(v63 + 48) = v77;
    v64 = v52;
    swift_retain();
    swift_bridgeObjectRetain(a11);
    sub_10004C720(v57, v78 & 1, (uint64_t)sub_1001F5D3C, v63);
    swift_bridgeObjectRelease(v57);
    swift_release(v63);
    swift_release(v48);

    return;
  }
  if ((v42 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v42);
    v67 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v42);
    swift_bridgeObjectRelease(v42);
    v54 = *(id *)(v67 + 16);
    swift_unknownObjectRelease(v67);
    goto LABEL_17;
  }
  if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v54 = *(id *)(*(_QWORD *)(v42 + 32) + 16);
    v55 = v54;
    goto LABEL_17;
  }
  __break(1u);
}

_QWORD *sub_1001DEC78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void **v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v5 = (void **)(a1 + 32);
    do
    {
      v6 = *v5;
      v5 += 2;
      v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      --v3;
    }
    while (v3);
  }
  v10 = sub_100017EEC((uint64_t)_swiftEmptyArrayStorage, a2);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v10;
}

double sub_1001DED3C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *Strong;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  char *v17;
  double result;
  _QWORD v19[5];
  _QWORD *v20;

  sub_1001DB830();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  if (!Strong
    || (v11 = Strong,
        v12 = objc_msgSend(Strong, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v11),
        !v12))
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v12 = objc_msgSend(v13, "_definiteTransitionCoordinator");

  }
  v14 = (_QWORD *)swift_allocObject(&unk_1005D0B30, 56, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a5;
  v19[4] = sub_1001F5D90;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100018CC0;
  v19[3] = &unk_1005D0B48;
  v15 = _Block_copy(v19);
  v16 = v20;
  v17 = a1;
  swift_retain();
  swift_retain();
  sub_10008BA00(a4, a5);
  swift_release(v16);
  objc_msgSend(v12, "animateAlongsideTransition:completion:", 0, v15);
  _Block_release(v15);
  *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  return result;
}

uint64_t sub_1001DEEB8(uint64_t a1, char *a2, uint64_t (*a3)(void), uint64_t a4, char a5)
{
  unint64_t v6;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  void **v11;
  void *v12;
  void *v13;
  void *Strong;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t KeyPath;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  char v42[24];

  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    goto LABEL_20;
  v8 = &a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate];
  v9 = (uint64_t *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_bridgeObjectRetain(a1);
  v40 = v9;
  swift_beginAccess(v9, v42, 1, 0);
  v10 = v6 - 1;
  v35 = a1;
  v11 = (void **)(a1 + 16 * v6 + 24);
  v38 = v6;
  v39 = v8;
  while (1)
  {
    v12 = *(v11 - 1);
    v13 = *v11;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
    v15 = v13;
    if (Strong)
    {
      objc_msgSend(Strong, "hierarchyController:willPrepend:source:", a2, v12, v15, v35);
      swift_unknownObjectRelease(Strong);
    }
    else
    {
      v16 = v12;
    }
    v17 = *v40;
    v41 = *v40;
    if ((unint64_t)*v40 >> 62)
      break;
    v18 = v12;
    swift_bridgeObjectRetain(v17);
LABEL_10:
    sub_100459504(0, 0, (uint64_t)v12);
    KeyPath = swift_getKeyPath(&unk_1004DCBD8);
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
    v20 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(v20, &protocol witness table for NSObject);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "willChangeValueForKey:", v21);

    v22 = *v40;
    *v40 = v41;
    swift_bridgeObjectRelease(v22);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "didChangeValueForKey:", v23);

    v24 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v24, &protocol witness table for NSObject);
    v25 = swift_getKeyPath(&unk_1004DCBD8);
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v25, &protocol witness table for NSObject);
    v8 = v39;
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v39);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "hierarchyController:didPrepend:source:", a2, v12, v15);

      swift_unknownObjectRelease(v27);
      if (!v10)
        goto LABEL_19;
    }
    else
    {

      if (!v10)
        goto LABEL_19;
    }
    --v10;
    v11 -= 2;
    if (v10 >= v38)
      goto LABEL_18;
  }
  if (v17 < 0)
    v28 = *v40;
  else
    v28 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v17, 2);
  v29 = v12;
  v30 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v17);
  if ((v30 & 0x8000000000000000) == 0)
    goto LABEL_10;
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease(v35);
LABEL_20:
  result = a3();
  if ((a5 & 1) != 0)
  {
    v32 = swift_getKeyPath(&unk_1004DCC18);
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)(v32, &protocol witness table for NSObject);
    v33 = *(void **)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(_QWORD *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = 0;

    v34 = swift_getKeyPath(&unk_1004DCC18);
    return _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v34, &protocol witness table for NSObject);
  }
  return result;
}

void sub_1001DF1F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t);
  void *v31;
  uint64_t v32;
  char v33;
  char v34;
  __n128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __n128 v39;
  _BYTE *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  Swift::Int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  BOOL v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  _BYTE v67[12];
  int v68;
  uint64_t v69;
  uint64_t (*v70)(_BYTE *, uint64_t, uint64_t, __n128);
  _BYTE *v71;
  _QWORD *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];

  v5 = v4;
  v73 = (void *)a1;
  v74 = a4;
  v68 = a2;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v71 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v67[-v11];
  v14 = Logger.UI.unsafeMutableAddressor(v13);
  v15 = *(uint64_t (**)(_QWORD))(v8 + 16);
  v69 = v14;
  v70 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t, __n128))v15;
  v16 = v15(v12);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v72 = (_QWORD *)a3;
    v21 = v20;
    v76[0] = v20;
    *(_DWORD *)v19 = 136315138;
    v75 = sub_1000544FC(0xD00000000000002FLL, 0x80000001005185D0, v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[PROTECTED APPS] BTBT: %s", v19, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    v22 = v21;
    a3 = (uint64_t)v72;
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }

  v23 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v23(v12, v7);
  v24 = (uint64_t)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(_QWORD *)v24 = 2;
  *(_BYTE *)(v24 + 8) = 0;
  v25 = (_QWORD *)swift_allocObject(&unk_1005D0BD0, 40, 7);
  v25[2] = v5;
  v25[3] = a3;
  v26 = v74;
  v72 = v25;
  v25[4] = v74;
  v27 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v76, 0, 0);
  v28 = *v27;
  v29 = v5;
  swift_bridgeObjectRetain(v28);
  v30 = (void (*)(uint64_t))a3;
  sub_10008BA00(a3, v26);
  v31 = v73;
  v32 = sub_100174624((uint64_t)v73, v28);
  v34 = v33;
  v35 = swift_bridgeObjectRelease(v28);
  if ((v34 & 1) != 0)
  {
    v40 = v71;
    v41 = v70(v71, v69, v7, v35);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Cannot pop to a location not present in the locations array", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    v45 = ((uint64_t (*)(_BYTE *, uint64_t))v23)(v40, v7);
    *(_QWORD *)v24 = 0;
    *(_BYTE *)(v24 + 8) = 1;
    if (v30)
      v30(v45);
    swift_release(v72);
    return;
  }
  v36 = (uint64_t)sub_1001D5A88();
  v37 = sub_10008979C((uint64_t)v31, v36);
  swift_bridgeObjectRelease(v36);
  if ((v37 & 1) != 0)
  {
    v38 = (uint64_t)v72;
    swift_retain();
    sub_1001DBC98(v31, v68 & 1, (uint64_t (*)(uint64_t))sub_1001F5EF8, v38);
    swift_release_n(v38, 2, v39);
    return;
  }
  v46 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v46 < 0)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    if (v7 < 0)
      v63 = v7;
    else
      v63 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    if (_CocoaArrayWrapper.endIndex.getter(v63) < 0)
    {
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain(v7);
    v64 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_bridgeObjectRelease(v7);
    if (v64 >= v46)
      goto LABEL_15;
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v7 = *v27;
  v36 = (unint64_t)*v27 >> 62;
  if (v36)
    goto LABEL_44;
  v47 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (v47 < v46)
    goto LABEL_49;
LABEL_15:
  if ((v7 & 0xC000000000000001) != 0 && v32 != -1)
  {
    sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    v48 = 0;
    do
    {
      v49 = v48 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v48);
      v48 = v49;
    }
    while (v46 != v49);
  }
  if (v36)
  {
    if (v7 < 0)
      v50 = v7;
    else
      v50 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v36 = _CocoaArrayWrapper.subscript.getter(0, v32 + 1, v50);
    v32 = v51;
    v24 = v52;
    v46 = v53;
    swift_bridgeObjectRelease_n(v7, 2);
    if ((v46 & 1) == 0)
      goto LABEL_26;
  }
  else
  {
    v24 = 0;
    v36 = v7 & 0xFFFFFFFFFFFFFF8;
    v32 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
    v46 = (2 * v46) | 1;
    if ((v46 & 1) == 0)
      goto LABEL_26;
  }
  v54 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v55 = swift_unknownObjectRetain_n(v36, 2);
  v56 = (_QWORD *)swift_dynamicCastClass(v55, v54);
  if (!v56)
  {
    swift_unknownObjectRelease(v36);
    v56 = _swiftEmptyArrayStorage;
  }
  v57 = v56[2];
  swift_release(v56);
  if (__OFSUB__((unint64_t)v46 >> 1, v24))
    goto LABEL_58;
  v58 = v36;
  if (v57 != ((unint64_t)v46 >> 1) - v24)
    goto LABEL_59;
  v46 = swift_dynamicCastClass(v36, v54);
  if (!v46)
  {
    swift_unknownObjectRelease(v36);
    v46 = (uint64_t)_swiftEmptyArrayStorage;
  }
  while (1)
  {
    swift_unknownObjectRelease(v36);
    if (v46 < 0 || (v46 & 0x4000000000000000) != 0)
      break;
    v59 = *(_QWORD *)(v46 + 16);
    if (!v59)
      goto LABEL_51;
LABEL_36:
    v60 = __OFSUB__(v59, 1);
    v58 = v59 - 1;
    if (v60)
    {
      __break(1u);
LABEL_55:
      v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v46);
LABEL_41:
      v62 = v61;
      goto LABEL_52;
    }
    if ((v46 & 0xC000000000000001) != 0)
      goto LABEL_55;
    if ((v58 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v58 < *(_QWORD *)(v46 + 16))
    {
      v61 = *(id *)(v46 + 8 * v58 + 32);
      goto LABEL_41;
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_unknownObjectRelease(v58);
LABEL_26:
    v46 = (uint64_t)sub_10028F730(v36, v32, v24, v46);
  }
LABEL_50:
  v59 = _CocoaArrayWrapper.endIndex.getter(v46);
  if (v59)
    goto LABEL_36;
LABEL_51:
  v62 = 0;
LABEL_52:
  v65 = (uint64_t)v72;
  swift_retain();
  sub_1001D4288(v46, v62, 1, 1, v68 & 1, (uint64_t)sub_1001F5EF8, v65);
  v66 = swift_release(v46);
  swift_release_n(v65, 2, v66);

}

void sub_1001DF804(uint64_t a1, void (*a2)(id))
{
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v9))
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:

          goto LABEL_22;
        }
        v6 = *(id *)(a1 + 32);
      }
      v10 = v6;
      swift_bridgeObjectRelease(a1);
      if (v4)
      {
        if (a1 < 0)
          v8 = a1;
        else
          v8 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v7 = _CocoaArrayWrapper.endIndex.getter(v8);
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v7 == 1)
      {
        a2(v10);

        return;
      }
      goto LABEL_21;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v5)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(a1);
LABEL_22:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ALL, 0x80000001005180D0, "Files/DOCHierarchyController.swift", 34, 2, 1094, 0);
  __break(1u);
}

uint64_t sub_1001DF968(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    swift_beginAccess(result + 56, &v8, 0, 0);
    v6 = *(_QWORD *)(v5 + 56);
    v7 = swift_bridgeObjectRetain(v6);
    a2(v7);
    swift_release(v5);
    return swift_bridgeObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1001DF9F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  double Current;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  int v41;
  id v42;
  char *v43;
  NSObject *v44;
  char *v45;
  os_log_type_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  double v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  void (*v82)(char *, uint64_t);
  char *v83;
  double v84;
  uint64_t v85[2];

  v73 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v73 - 8);
  v10 = __chkstk_darwin(v73);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v68 = (char *)&v64 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v64 - v15;
  v74 = a1;
  if ((unint64_t)a2 >> 62)
    goto LABEL_35;
  v17 = *(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v18 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_39;
LABEL_3:
  if (v17 == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    while (objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    {
      v78 = v18;
      v83 = v12;
      v66 = a5;
      Current = CFAbsoluteTimeGetCurrent();
      v21 = Logger.UI.unsafeMutableAddressor(v20);
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v80 = v21;
      v81 = v22;
      v23 = v73;
      ((void (*)(char *))v22)(v16);
      v24 = swift_bridgeObjectRetain(a2);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.debug.getter();
      v27 = os_log_type_enabled(v25, v26);
      v12 = (char *)&type metadata for Any;
      v79 = a2;
      v67 = a4;
      v65 = *(double *)&v17;
      if (v27)
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(32, -1);
        v85[0] = v29;
        *(_DWORD *)v28 = 136315394;
        v84 = COERCE_DOUBLE(sub_1000544FC(0xD00000000000004ALL, 0x8000000100518630, v85));
        a2 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
        *(_WORD *)(v28 + 12) = 2048;
        v84 = *(double *)&v17;
        v12 = (char *)&type metadata for Any;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
        swift_bridgeObjectRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "[PROTECTED APPS] %s Checking if %ld locations need auth authentication.", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease(a2);
      }
      v82 = *(void (**)(char *, uint64_t))(v9 + 8);
      v82(v16, v23);
      v9 = v23;
      v30 = v74;
      v31 = v83;
      if (v78)
      {
        if (v74 < 0)
          v33 = v74;
        else
          v33 = v74 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v74);
        v34 = v33;
        v30 = v74;
        v32 = _CocoaArrayWrapper.endIndex.getter(v34);
        if (!v32)
        {
LABEL_28:
          swift_bridgeObjectRelease(v30);
          v53 = CFAbsoluteTimeGetCurrent();
          v54 = v68;
          v81(v68, v80, v9);
          v55 = swift_bridgeObjectRetain(a2);
          v56 = Logger.logObject.getter(v55);
          v57 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = swift_slowAlloc(32, -1);
            v59 = swift_slowAlloc(32, -1);
            v85[0] = v59;
            *(_DWORD *)v58 = 136315650;
            v84 = COERCE_DOUBLE(sub_1000544FC(0xD00000000000004ALL, 0x8000000100518630, v85));
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
            *(_WORD *)(v58 + 12) = 2048;
            v84 = v53 - Current;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
            *(_WORD *)(v58 + 22) = 2048;
            v84 = v65;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
            swift_bridgeObjectRelease(a2);
            _os_log_impl((void *)&_mh_execute_header, v56, v57, "[PROTECTED APPS] %s check took %f sec for %ld locations", (uint8_t *)v58, 0x20u);
            swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v59, -1, -1);
            swift_slowDealloc(v58, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease(a2);
          }
          v82(v54, v9);
          a4 = v67;
          return ((uint64_t (*)(uint64_t))a4)(v74);
        }
      }
      else
      {
        v32 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v74);
        if (!v32)
          goto LABEL_28;
      }
      v75 = (id)objc_opt_self(DOCAppProtectionManager);
      v77 = a2 & 0xC000000000000001;
      v78 = v30 & 0xC000000000000001;
      v69 = a2 & 0xFFFFFFFFFFFFFF8;
      a4 = 4;
      *(_QWORD *)&v35 = 136315906;
      v72 = v35;
      v70 = (char *)&type metadata for Any + 8;
      v71 = 0x8000000100518630;
      v76 = v32;
      while (1)
      {
        a5 = a4 - 4;
        v36 = v78
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a4 - 4, v30)
            : (char *)*(id *)(v30 + 8 * a4);
        v16 = v36;
        if (__OFADD__(a5, 1))
          break;
        v83 = (char *)(a4 - 3);
        if (v77)
        {
          v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a4 - 4, a2);
        }
        else
        {
          if (a5 >= *(_QWORD *)(v69 + 16))
            goto LABEL_34;
          v37 = *(id *)(a2 + 8 * a4);
        }
        v38 = v37;
        v39 = objc_msgSend(v75, "sharedManager");
        v40 = objc_msgSend(v38, "node");
        v41 = objc_msgSend(v39, "nodeRequiresAuthentication_Sync:", v40);

        swift_unknownObjectRelease(v40);
        sub_1001F3E18(v16, v41);
        v81(v31, v80, v9);
        v42 = v38;
        v43 = v16;
        v44 = Logger.logObject.getter(v43);
        v45 = v31;
        v46 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v44, v46))
        {
          v47 = swift_slowAlloc(38, -1);
          v48 = (_QWORD *)swift_slowAlloc(16, -1);
          v49 = swift_slowAlloc(32, -1);
          v85[0] = v49;
          *(_DWORD *)v47 = v72;
          *(_QWORD *)(v47 + 4) = sub_1000544FC(0xD00000000000004ALL, v71, v85);
          *(_WORD *)(v47 + 12) = 1024;
          *(_DWORD *)(v47 + 14) = v41;
          *(_WORD *)(v47 + 18) = 2112;
          *(_QWORD *)(v47 + 20) = v42;
          *(_WORD *)(v47 + 28) = 2112;
          *(_QWORD *)(v47 + 30) = v43;
          *v48 = v42;
          v48[1] = v43;
          _os_log_impl((void *)&_mh_execute_header, v44, v46, "[PROTECTED APPS] %s requiresAuthentication: %{BOOL}d location: %@ viewController: %@", (uint8_t *)v47, 0x26u);
          v50 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v48, 2, v50);
          v51 = v48;
          v9 = v73;
          swift_slowDealloc(v51, -1, -1);
          swift_arrayDestroy(v49, 1, v70);
          v52 = v49;
          v30 = v74;
          swift_slowDealloc(v52, -1, -1);
          swift_slowDealloc(v47, -1, -1);

        }
        else
        {

        }
        v82(v45, v9);
        v31 = v45;
        ++a4;
        a2 = v79;
        v12 = (char *)&type metadata for Any;
        if (v83 == (char *)v76)
          goto LABEL_28;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      if (a2 < 0)
        v61 = a2;
      else
        v61 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      a1 = v74;
      *(double *)&v17 = COERCE_DOUBLE(_CocoaArrayWrapper.endIndex.getter(v61));
      swift_bridgeObjectRelease(a2);
      v18 = a1 >> 62;
      if (!(a1 >> 62))
        goto LABEL_3;
LABEL_39:
      if ((a1 & 0x8000000000000000) != 0)
        v62 = a1;
      else
        v62 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v63 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(a1);
      if (v17 != v63)
        goto LABEL_43;
    }
    return ((uint64_t (*)(uint64_t))a4)(v74);
  }
  else
  {
LABEL_43:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ALL, 0x80000001005180D0, "Files/DOCHierarchyController.swift", 34, 2, 1182, 0);
    __break(1u);
  }
  return result;
}

void sub_1001E024C(void *a1, void *a2, char a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _BYTE v58[24];
  uint64_t v59;
  uint64_t v60;

  v8 = v7;
  v55 = a6;
  v56 = a7;
  v53 = a4;
  v54 = a5;
  v57 = a2;
  v11 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = 0;
  v60 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v60).n128_u64[0];
  v59 = 0xD000000000000011;
  v60 = 0x8000000100517D30;
  v15 = objc_msgSend(a1, "shortDescription", v14);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21 = v60;
  v22 = sub_100037A40(v59, v60);
  swift_bridgeObjectRelease(v21);
  v23 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v24 = swift_allocBox(v23);
  v26 = v25;
  v27 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v28 = swift_allocObject(v27, 40, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v28 + 32) = a1;
  v59 = v28;
  specialized Array._endMutation()(v28);
  v29 = v59;
  v30 = a1;
  UUID.init()(v30);
  v31 = v23[5];
  v32 = v23[6];
  *(_QWORD *)(v26 + v23[7]) = v29;
  *(_BYTE *)(v26 + v31) = 1;
  *(_BYTE *)(v26 + v32) = a3 ^ 1;
  sub_10007C6DC(v26, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v23 - 1) + 56))(v13, 0, 1, v23);
  sub_1001D6804((uint64_t)v13, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v33 = (uint64_t *)&v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v59, 0, 0);
  v35 = *v33;
  if ((unint64_t)*v33 >> 62)
  {
    if (v35 < 0)
      v38 = *v33;
    else
      v38 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v33);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v35);
    if (v39 < 2)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_3:
    v36 = 0;
    v37 = v57;
LABEL_18:
    v45 = swift_allocObject(&unk_1005CF0A0, 72, 7);
    *(_QWORD *)(v45 + 16) = v8;
    *(_QWORD *)(v45 + 24) = v24;
    v47 = v55;
    v46 = v56;
    *(_QWORD *)(v45 + 32) = v22;
    *(_QWORD *)(v45 + 40) = v47;
    *(_QWORD *)(v45 + 48) = v46;
    *(_BYTE *)(v45 + 56) = v53 & 1;
    *(_BYTE *)(v45 + 57) = v36 & 1;
    *(_BYTE *)(v45 + 58) = v54 & 1;
    *(_QWORD *)(v45 + 64) = v37;
    v48 = v37;
    swift_retain();
    v49 = v8;
    swift_retain();
    swift_retain();
    sub_10008BA00(v47, v46);
    sub_10003E148(v30, 1, v49, sub_1001EDF30, v45);
    swift_release(v22);
    swift_release(v24);
    swift_release_n(v45, 2, v50);
    return;
  }
  v40 = *v33;
  if (!((unint64_t)*v33 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    v42 = v41 - 2;
    if (!__OFSUB__(v41, 2))
      goto LABEL_10;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v40 < 0)
    v51 = *v33;
  else
    v51 = v40 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v33);
  v52 = _CocoaArrayWrapper.endIndex.getter(v51);
  swift_bridgeObjectRelease(v40);
  v42 = v52 - 2;
  if (__OFSUB__(v52, 2))
    goto LABEL_24;
LABEL_10:
  swift_beginAccess(v33, v58, 32, 0);
  v34 = *v33;
  if ((*v33 & 0xC000000000000001) != 0)
  {
LABEL_25:
    v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v34);
    v37 = v57;
    goto LABEL_14;
  }
  v37 = v57;
  if ((v42 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v42 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v43 = *(id *)(v34 + 8 * v42 + 32);
LABEL_14:
    swift_endAccess(v58);
    if (v37)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v44 = v37;
      v36 = static NSObject.== infix(_:_:)(v44, v43);

    }
    else
    {
      v36 = 0;
    }

    goto LABEL_18;
  }
  __break(1u);
}

void sub_1001E0674(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, int a8, char a9, char a10, void *a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_BYTE *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  char *v72;
  id v73;
  id v74;
  _BYTE *v75;
  char v76;
  uint64_t v77;
  _BYTE v78[12];
  int v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  void *v83;
  int v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  char *v91;
  id v92;
  uint64_t v93;
  void (*v94)(void);
  uint64_t v95;
  _BYTE v96[24];
  _BYTE v97[24];
  char v98[24];
  char v99[24];
  char v100[28];

  v84 = a8;
  v90 = a7;
  v93 = a5;
  v94 = a6;
  v83 = a2;
  v92 = a1;
  v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v85 = &v78[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v95 = sub_10006922C((uint64_t *)&unk_100647580);
  v16 = __chkstk_darwin(v95);
  v89 = &v78[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v19 = &v78[-v18];
  v20 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v21 = __chkstk_darwin(v20);
  v80 = &v78[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __chkstk_darwin(v21);
  v81 = &v78[-v24];
  v25 = __chkstk_darwin(v23);
  v87 = &v78[-v26];
  v27 = __chkstk_darwin(v25);
  v88 = &v78[-v28];
  v29 = __chkstk_darwin(v27);
  v86 = &v78[-v30];
  v31 = __chkstk_darwin(v29);
  v33 = &v78[-v32];
  v34 = __chkstk_darwin(v31);
  v36 = &v78[-v35];
  __chkstk_darwin(v34);
  v38 = &v78[-v37];
  v82 = a4;
  v39 = swift_projectBox(a4);
  v40 = (uint64_t)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v100, 0, 0);
  sub_1000271D4(v40, (uint64_t)v36, (uint64_t *)&unk_1006443D0);
  v41 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v42 = v41(v36, 1, v13);
  v91 = a3;
  if (v42 == 1)
  {
    v43 = (uint64_t)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v99, 0, 0);
    sub_1000271D4(v43, (uint64_t)v38, (uint64_t *)&unk_1006443D0);
    v44 = v92;
    v45 = v92;
    sub_10000CB4C((uint64_t)v36, (uint64_t *)&unk_1006443D0);
    v46 = v44;
  }
  else
  {
    sub_1001D0788((uint64_t)v36, (uint64_t)v38, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
    v46 = v92;
    v47 = v92;
  }
  swift_beginAccess(v39, v98, 0, 0);
  sub_10007C6DC(v39, (uint64_t)v33, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v92 = *(id *)(v14 + 56);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v92)(v33, 0, 1, v13);
  v48 = (uint64_t)&v19[*(int *)(v95 + 48)];
  sub_1000271D4((uint64_t)v38, (uint64_t)v19, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v33, v48, (uint64_t *)&unk_1006443D0);
  if (v41(v19, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
    if (v41((_BYTE *)v48, 1, v13) == 1)
    {
      sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
      v49 = v91;
LABEL_17:
      v92 = a11;
      swift_beginAccess(v39, v97, 1, 0);
      *(_BYTE *)(v39 + *(int *)(v13 + 24)) = 0;
      v60 = &v49[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
      swift_beginAccess(&v49[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v96, 0, 0);
      v61 = *(_QWORD *)v60;
      v62 = swift_bridgeObjectRetain(v61);
      LODWORD(v95) = sub_1001EE92C(v62);
      swift_bridgeObjectRelease(v61);
      v63 = swift_allocObject(&unk_1005D0108, 80, 7);
      v64 = v82;
      *(_QWORD *)(v63 + 16) = v49;
      *(_QWORD *)(v63 + 24) = v64;
      *(_QWORD *)(v63 + 32) = v46;
      v65 = (uint64_t)v94;
      *(_QWORD *)(v63 + 40) = v93;
      *(_QWORD *)(v63 + 48) = v65;
      v66 = v90;
      *(_QWORD *)(v63 + 56) = v90;
      *(_BYTE *)(v63 + 64) = a9 & 1;
      *(_BYTE *)(v63 + 65) = a10 & 1;
      *(_QWORD *)(v63 + 72) = a11;
      v67 = sub_10006922C(&qword_100644A30);
      v68 = swift_allocObject(v67, 48, 7);
      *(_OWORD *)(v68 + 16) = xmmword_1004D9670;
      v69 = v83;
      *(_QWORD *)(v68 + 32) = v46;
      *(_QWORD *)(v68 + 40) = v69;
      v70 = swift_allocObject(&unk_1005D0130, 32, 7);
      *(_QWORD *)(v70 + 16) = sub_1001F5538;
      *(_QWORD *)(v70 + 24) = v63;
      v71 = v46;
      v72 = v49;
      swift_retain();
      swift_retain();
      sub_10008BA00(v65, v66);
      v73 = v69;
      swift_retain();
      v74 = v92;
      sub_1001DD6EC(v68, v84 & 1, v95 & 1, (uint64_t)sub_1001F5544, v70);

      swift_release(v63);
      swift_bridgeObjectRelease(v68);
      swift_release(v70);
      return;
    }
    goto LABEL_9;
  }
  v50 = v86;
  sub_1000271D4((uint64_t)v19, (uint64_t)v86, (uint64_t *)&unk_1006443D0);
  if (v41((_BYTE *)v48, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
    sub_10007C720((uint64_t)v50, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_9:
    sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_100647580);
    v49 = v91;
    goto LABEL_10;
  }
  v58 = (uint64_t)v50;
  v59 = v85;
  sub_1001D0788(v48, (uint64_t)v85, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v79 = static UUID.== infix(_:_:)(v58, v59);
  sub_10007C720((uint64_t)v59, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v33, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v38, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v58, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v19, (uint64_t *)&unk_1006443D0);
  v49 = v91;
  if ((v79 & 1) != 0)
    goto LABEL_17;
LABEL_10:
  v51 = (uint64_t)&v49[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
  swift_beginAccess(&v49[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v97, 0, 0);
  v52 = v88;
  sub_1000271D4(v51, (uint64_t)v88, (uint64_t *)&unk_1006443D0);
  swift_beginAccess(v39, v96, 0, 0);
  v53 = v39;
  v54 = v87;
  sub_10007C6DC(v53, (uint64_t)v87, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v92)(v54, 0, 1, v13);
  v55 = v89;
  v56 = (uint64_t)&v89[*(int *)(v95 + 48)];
  sub_1000271D4((uint64_t)v52, (uint64_t)v89, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v54, v56, (uint64_t *)&unk_1006443D0);
  if (v41(v55, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v54, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v52, (uint64_t *)&unk_1006443D0);
    if (v41((_BYTE *)v56, 1, v13) == 1)
    {
      sub_10000CB4C((uint64_t)v55, (uint64_t *)&unk_1006443D0);
LABEL_19:
      v77 = (uint64_t)v80;
      ((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v92)(v80, 1, 1, v13);
      sub_1001D6804(v77, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  v57 = v81;
  sub_1000271D4((uint64_t)v55, (uint64_t)v81, (uint64_t *)&unk_1006443D0);
  if (v41((_BYTE *)v56, 1, v13) == 1)
  {
    sub_10000CB4C((uint64_t)v54, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v52, (uint64_t *)&unk_1006443D0);
    sub_10007C720((uint64_t)v57, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_15:
    sub_10000CB4C((uint64_t)v55, (uint64_t *)&unk_100647580);
    goto LABEL_20;
  }
  v75 = v85;
  sub_1001D0788(v56, (uint64_t)v85, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v76 = static UUID.== infix(_:_:)(v57, v75);
  sub_10007C720((uint64_t)v75, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v54, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v52, (uint64_t *)&unk_1006443D0);
  sub_10007C720((uint64_t)v57, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v55, (uint64_t *)&unk_1006443D0);
  if ((v76 & 1) != 0)
    goto LABEL_19;
LABEL_20:
  sub_1001D6274(v93, 0);
  if (v94)
    v94();

}

void sub_1001E0F64(void *a1, char *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7, int a8, char a9, void *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t inited;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  void *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void (*v71)(void);
  uint64_t v72;
  __int128 v73;
  char v74[40];
  uint64_t v75;
  char v76[40];
  char v77[24];
  char v78[24];
  char v79[8];

  v66 = a8;
  v68 = a7;
  v71 = a6;
  v70 = a5;
  v64 = a4;
  v65 = a1;
  v12 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v62 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v72);
  *(_QWORD *)&v73 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v17 = __chkstk_darwin(v16);
  v63 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v67 = (uint64_t)&v61 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v61 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v61 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v61 - v27;
  v29 = swift_projectBox(a3);
  v30 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v79, 0, 0);
  sub_1000271D4(v30, (uint64_t)v26, (uint64_t *)&unk_1006443D0);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v32 = v31(v26, 1, v12);
  v69 = a2;
  if (v32 == 1)
  {
    v33 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v78, 0, 0);
    sub_1000271D4(v33, (uint64_t)v28, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v26, (uint64_t)v28, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v12);
  }
  v34 = v12;
  swift_beginAccess(v29, v77, 0, 0);
  sub_10007C6DC(v29, (uint64_t)v23, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v35)(v23, 0, 1, v12);
  v36 = v73;
  v37 = v73 + *(int *)(v72 + 48);
  sub_1000271D4((uint64_t)v28, v73, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v23, v37, (uint64_t *)&unk_1006443D0);
  if (v31((char *)v36, 1, v34) == 1)
  {
    sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
    if (v31((char *)v37, 1, v34) == 1)
    {
      sub_10000CB4C(v36, (uint64_t *)&unk_1006443D0);
      v38 = v69;
LABEL_13:
      v43 = sub_10006922C((uint64_t *)&unk_1006441A0);
      inited = swift_initStackObject(v43, v76);
      v73 = xmmword_1004D9B40;
      *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
      v45 = v64;
      *(_QWORD *)(inited + 32) = v64;
      v75 = inited;
      specialized Array._endMutation()(inited);
      v46 = v75;
      v47 = swift_initStackObject(v43, v74);
      *(_OWORD *)(v47 + 16) = v73;
      v48 = v65;
      *(_QWORD *)(v47 + 32) = v65;
      v75 = v47;
      specialized Array._endMutation()(v47);
      v49 = v75;
      v50 = v45;
      v51 = v48;
      v52 = sub_100017EEC(v46, v49);
      swift_bridgeObjectRelease(v49);
      v53 = swift_bridgeObjectRelease(v46);
      v54 = (uint64_t)v63;
      v35(v63, 1, 1, v34, v53);
      sub_1001D6804(v54, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      v55 = (_QWORD *)swift_allocObject(&unk_1005D01D0, 48, 7);
      v56 = v70;
      v55[2] = v38;
      v55[3] = v56;
      v57 = (uint64_t)v71;
      v58 = v68;
      v55[4] = v71;
      v55[5] = v58;
      swift_retain();
      v59 = v38;
      swift_retain();
      sub_10008BA00(v57, v58);
      if ((v66 & 1) != 0)
        sub_1001F309C(1, (uint64_t)v52, a9 & 1, v59, (void (*)(void))sub_1001F55BC, (uint64_t)v55);
      else
        sub_1001F27E4(a10, (uint64_t)v52, a9 & 1, v59, (void (*)(void))sub_1001F55BC, (uint64_t)v55);
      v60 = swift_bridgeObjectRelease(v52);
      swift_release_n(v55, 2, v60);
      return;
    }
    goto LABEL_9;
  }
  v39 = v67;
  sub_1000271D4(v36, v67, (uint64_t *)&unk_1006443D0);
  if (v31((char *)v37, 1, v34) == 1)
  {
    sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v39, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_9:
    sub_10000CB4C(v36, (uint64_t *)&unk_100647580);
    goto LABEL_10;
  }
  v40 = v39;
  v41 = v62;
  sub_1001D0788(v37, v62, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v42 = static UUID.== infix(_:_:)(v40, v41);
  sub_10007C720(v41, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v40, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C(v36, (uint64_t *)&unk_1006443D0);
  v38 = v69;
  if ((v42 & 1) != 0)
    goto LABEL_13;
LABEL_10:
  sub_1001D6274(v70, 0);
  if (v71)
    v71();
}

double sub_1001E15A4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  id v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  char *v16;
  double result;
  _QWORD v18[5];
  _QWORD *v19;

  sub_1001DB830();
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v8);
  if (!Strong
    || (v10 = Strong,
        v11 = objc_msgSend(Strong, "hierarchyChangeTransitionCoordinator"),
        swift_unknownObjectRelease(v10),
        !v11))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    v11 = objc_msgSend(v12, "_definiteTransitionCoordinator");

  }
  v13 = (_QWORD *)swift_allocObject(&unk_1005D0360, 48, 7);
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v18[4] = sub_1001F55F0;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100018CC0;
  v18[3] = &unk_1005D0378;
  v14 = _Block_copy(v18);
  v15 = v19;
  v16 = a1;
  swift_retain();
  sub_10008BA00(a3, a4);
  swift_release(v15);
  objc_msgSend(v11, "animateAlongsideTransition:completion:", 0, v14);
  _Block_release(v14);
  *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_1001E1710(void *a1, void *a2, char *a3, void (*a4)(char *, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD), uint64_t a6, int a7, int a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  Swift::Int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::Int v64;
  unint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  int v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  char *v109;
  id v110;
  uint64_t v111;
  id v112;
  char *v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  void *v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t (**v127)();
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  int v136;
  void (*v137)(_QWORD);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  void (*v158)(_QWORD);
  int v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t, uint64_t, uint64_t);
  void *v169;
  char v170[24];
  char v171[24];
  char v172[8];
  char v173[8];
  char v174[8];
  char v175[8];

  v159 = a7;
  v164 = a2;
  v169 = a1;
  v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v167 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v154 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_10006922C((uint64_t *)&unk_100647580);
  v15 = __chkstk_darwin(v160);
  v153 = (uint64_t)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v163 = (uint64_t)&v145 - v18;
  __chkstk_darwin(v17);
  v147 = (uint64_t)&v145 - v19;
  v20 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v21 = __chkstk_darwin(v20);
  v146 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v151 = (uint64_t)&v145 - v24;
  v25 = __chkstk_darwin(v23);
  v152 = (uint64_t)&v145 - v26;
  v27 = __chkstk_darwin(v25);
  v155 = (uint64_t)&v145 - v28;
  v29 = __chkstk_darwin(v27);
  v31 = (uint64_t)&v145 - v30;
  v32 = __chkstk_darwin(v29);
  v34 = (char *)&v145 - v33;
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v145 - v36;
  v38 = __chkstk_darwin(v35);
  v148 = (char *)&v145 - v39;
  v40 = __chkstk_darwin(v38);
  v145 = (uint64_t)&v145 - v41;
  v42 = __chkstk_darwin(v40);
  v157 = (char *)&v145 - v43;
  __chkstk_darwin(v42);
  v150 = (uint64_t)&v145 - v44;
  v168 = a4;
  v156 = swift_projectBox(a4);
  v166 = a3;
  v45 = (uint64_t)&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v175, 0, 0);
  v46 = *(_QWORD *)v45;
  if (*(_QWORD *)v45 >> 62)
  {
    if (v46 < 0)
      v95 = *(_QWORD *)v45;
    else
      v95 = v46 & 0xFFFFFFFFFFFFFF8;
    v96 = v169;
    swift_bridgeObjectRetain(v46);
    v47 = _CocoaArrayWrapper.endIndex.getter(v95);
    swift_bridgeObjectRelease(v46);
  }
  else
  {
    v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v48 = v169;
  }
  v165 = a6;
  v161 = v37;
  v162 = v31;
  v158 = a5;
  if (v47 >= 2)
  {
    v31 = *(_QWORD *)v45;
    a5 = (void (*)(_QWORD))(*(_QWORD *)v45 >> 62);
    if (a5)
      goto LABEL_106;
    v50 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)v45);
    v51 = -v50;
    if (!__OFSUB__(0, v50))
      goto LABEL_7;
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    return;
  }
  v49 = 0;
  while (1)
  {
    v76 = (uint64_t)v34;
    v45 = *(_QWORD *)v45;
    v34 = v157;
    if ((unint64_t)v45 >> 62)
      break;
    v77 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v45);
    if (!v77)
      goto LABEL_77;
LABEL_51:
    v78 = v77 - 1;
    if (__OFSUB__(v77, 1))
    {
      __break(1u);
LABEL_103:
      v80 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v78, v45);
      v79 = v166;
LABEL_56:
      swift_bridgeObjectRelease(v45);
      sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
      if ((static NSObject.== infix(_:_:)(v169, v80) & 1) == 0)
      {

        goto LABEL_78;
      }
      v81 = v164;
      if ((v49 & 1) != 0)
      {

        goto LABEL_79;
      }
      v82 = (uint64_t)&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
      swift_beginAccess(&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v174, 0, 0);
      v83 = v150;
      sub_1000271D4(v82, v150, (uint64_t *)&unk_1006443D0);
      v84 = v156;
      swift_beginAccess(v156, v173, 0, 0);
      sub_10007C6DC(v84, (uint64_t)v34, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v85 = v167;
      v86 = v13;
      v87 = v83;
      v168 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v167 + 56);
      v168(v34, 0, 1, v86);
      v88 = v147;
      v89 = v147 + *(int *)(v160 + 48);
      sub_1000271D4(v87, v147, (uint64_t *)&unk_1006443D0);
      sub_1000271D4((uint64_t)v34, v89, (uint64_t *)&unk_1006443D0);
      v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
      if (v90(v88, 1, v86) == 1)
      {
        sub_10000CB4C((uint64_t)v34, (uint64_t *)&unk_1006443D0);
        sub_10000CB4C(v87, (uint64_t *)&unk_1006443D0);
        if (v90(v89, 1, v86) == 1)
        {
          sub_10000CB4C(v88, (uint64_t *)&unk_1006443D0);
LABEL_67:
          v94 = (uint64_t)v148;
          v168(v148, 1, 1, v86);
          sub_1001D6804(v94, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
          goto LABEL_68;
        }
      }
      else
      {
        v91 = v145;
        sub_1000271D4(v88, v145, (uint64_t *)&unk_1006443D0);
        if (v90(v89, 1, v86) != 1)
        {
          v92 = v154;
          sub_1001D0788(v89, v154, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v93 = static UUID.== infix(_:_:)(v91, v92);
          sub_10007C720(v92, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          sub_10000CB4C((uint64_t)v157, (uint64_t *)&unk_1006443D0);
          sub_10000CB4C(v150, (uint64_t *)&unk_1006443D0);
          sub_10007C720(v91, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          sub_10000CB4C(v88, (uint64_t *)&unk_1006443D0);
          if ((v93 & 1) != 0)
            goto LABEL_67;
LABEL_68:
          a5(1);

          return;
        }
        sub_10000CB4C((uint64_t)v157, (uint64_t *)&unk_1006443D0);
        sub_10000CB4C(v150, (uint64_t *)&unk_1006443D0);
        sub_10007C720(v91, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      }
      sub_10000CB4C(v88, (uint64_t *)&unk_100647580);
      goto LABEL_68;
    }
    if ((v45 & 0xC000000000000001) != 0)
      goto LABEL_103;
    v79 = v166;
    if ((v78 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v78 < *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v80 = *(id *)(v45 + 8 * v78 + 32);
      goto LABEL_56;
    }
    __break(1u);
LABEL_106:
    if (v31 < 0)
      v144 = v31;
    else
      v144 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v31, 2);
    v50 = _CocoaArrayWrapper.endIndex.getter(v144);
    swift_bridgeObjectRelease(v31);
    v51 = -v50;
    if (__OFSUB__(0, v50))
      goto LABEL_111;
LABEL_7:
    if ((unint64_t)(v51 + 1) >= 2)
    {
      v52 = v50 - 2;
      if (__OFSUB__(v50, 2))
        goto LABEL_117;
      if (v50 < v52)
        goto LABEL_118;
      if (!a5)
      {
LABEL_10:
        v53 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_18;
      }
    }
    else
    {
      if (v50 < 0)
        goto LABEL_116;
      v52 = 0;
      if (!a5)
        goto LABEL_10;
    }
    if (v31 < 0)
      v54 = v31;
    else
      v54 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v53 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease(v31);
LABEL_18:
    if (v53 < v52)
      goto LABEL_112;
    if (v52 < 0)
      goto LABEL_113;
    if (a5)
    {
      if (v31 < 0)
        v56 = v31;
      else
        v56 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
      v55 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(v31);
    }
    else
    {
      v55 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v55 < v50)
      goto LABEL_114;
    if (v50 < 0)
      goto LABEL_115;
    if ((v31 & 0xC000000000000001) != 0 && v52 != v50)
    {
      if (v52 >= (unint64_t)v50)
        goto LABEL_119;
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v57 = v52;
      do
      {
        v58 = v57 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v57);
        v57 = v58;
      }
      while (v50 != v58);
    }
    if (a5)
    {
      if (v31 < 0)
        v62 = v31;
      else
        v62 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
      v59 = _CocoaArrayWrapper.subscript.getter(v52, v50, v62);
      v60 = v63;
      v52 = v64;
      v61 = v65;
      swift_bridgeObjectRelease_n(v31, 2);
    }
    else
    {
      v59 = v31 & 0xFFFFFFFFFFFFFF8;
      v60 = (v31 & 0xFFFFFFFFFFFFFF8) + 32;
      v61 = (2 * v50) | 1;
    }
    a6 = v165;
    if (v52 == v61 >> 1)
    {
      swift_unknownObjectRelease(v59);
      v49 = 0;
      a5 = v158;
    }
    else
    {
      if (v52 >= (uint64_t)(v61 >> 1))
        goto LABEL_120;
      v66 = *(id *)(v60 + 8 * v52);
      swift_unknownObjectRelease(v59);
      v31 = (uint64_t)objc_msgSend(v66, "sourceIdentifier");
      v67 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v70 = v69;
      v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
      v73 = v72;
      if (v68 == v71 && v70 == v72)
        v49 = 1;
      else
        v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v68, v70, v71, v72, 0);
      v75 = v67;

      swift_bridgeObjectRelease(v70);
      swift_bridgeObjectRelease(v73);
      a5 = v158;
      a6 = v165;
    }
  }
  if (v45 < 0)
    v97 = v45;
  else
    v97 = v45 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v45);
  v77 = _CocoaArrayWrapper.endIndex.getter(v97);
  if (v77)
    goto LABEL_51;
LABEL_77:
  swift_bridgeObjectRelease(v45);
  v79 = v166;
LABEL_78:
  v81 = v164;
LABEL_79:
  v98 = swift_allocObject(&unk_1005D1148, 74, 7);
  *(_QWORD *)(v98 + 16) = v168;
  *(_QWORD *)(v98 + 24) = v79;
  v99 = v169;
  *(_QWORD *)(v98 + 32) = v169;
  *(_QWORD *)(v98 + 40) = v81;
  *(_QWORD *)(v98 + 48) = v99;
  *(_QWORD *)(v98 + 56) = a5;
  *(_QWORD *)(v98 + 64) = a6;
  *(_BYTE *)(v98 + 72) = v159 & 1;
  *(_BYTE *)(v98 + 73) = a8 & 1;
  v100 = (uint64_t)&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v174, 0, 0);
  sub_1000271D4(v100, v76, (uint64_t *)&unk_1006443D0);
  v101 = v167;
  v102 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
  v103 = v102(v76, 1, v13);
  v149 = a8;
  if (v103 == 1)
  {
    v104 = &v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v173, 0, 0);
    v105 = (uint64_t)v104;
    v101 = v167;
    v106 = v76;
    v107 = (uint64_t)v161;
    sub_1000271D4(v105, (uint64_t)v161, (uint64_t *)&unk_1006443D0);
    v108 = v81;
    v109 = v79;
    swift_retain();
    swift_retain();
    v110 = v169;
    sub_10000CB4C(v106, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    v111 = v76;
    v107 = (uint64_t)v161;
    sub_1001D0788(v111, (uint64_t)v161, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v107, 0, 1, v13);
    v112 = v81;
    v113 = v79;
    swift_retain();
    swift_retain();
    v114 = v169;
  }
  v115 = v156;
  swift_beginAccess(v156, v172, 0, 0);
  v116 = v115;
  v117 = v162;
  sub_10007C6DC(v115, v162, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v167 = *(_QWORD *)(v101 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v167)(v117, 0, 1, v13);
  v118 = v163;
  v119 = v163 + *(int *)(v160 + 48);
  sub_1000271D4(v107, v163, (uint64_t *)&unk_1006443D0);
  sub_1000271D4(v117, v119, (uint64_t *)&unk_1006443D0);
  if (v102(v118, 1, v13) == 1)
  {
    sub_10000CB4C(v117, (uint64_t *)&unk_1006443D0);
    v118 = v163;
    sub_10000CB4C(v107, (uint64_t *)&unk_1006443D0);
    if (v102(v119, 1, v13) == 1)
    {
      sub_10000CB4C(v118, (uint64_t *)&unk_1006443D0);
      goto LABEL_89;
    }
LABEL_87:
    sub_10000CB4C(v118, (uint64_t *)&unk_100647580);
    goto LABEL_90;
  }
  v120 = v155;
  sub_1000271D4(v118, v155, (uint64_t *)&unk_1006443D0);
  if (v102(v119, 1, v13) == 1)
  {
    sub_10000CB4C(v162, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v161, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v120, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    goto LABEL_87;
  }
  v121 = v154;
  sub_1001D0788(v119, v154, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v122 = static UUID.== infix(_:_:)(v120, v121);
  sub_10007C720(v121, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_10000CB4C(v162, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v161, (uint64_t *)&unk_1006443D0);
  sub_10007C720(v120, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v79 = v166;
  sub_10000CB4C(v118, (uint64_t *)&unk_1006443D0);
  if ((v122 & 1) != 0)
  {
LABEL_89:
    v123 = v169;
    sub_1001E27CC((uint64_t)v168, v79, v169, v164, v169, (uint64_t)v158, v165, v159 & 1, v149 & 1);

    goto LABEL_101;
  }
LABEL_90:
  v124 = sub_1000ABE80();
  v125 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v124 + 152))(v124);
  swift_release(v124);
  if ((v125 & 1) != 0)
  {

    v126 = swift_allocObject(&unk_1005D1170, 32, 7);
    *(_QWORD *)(v126 + 16) = sub_1001F65C0;
    *(_QWORD *)(v126 + 24) = v98;
    v127 = (uint64_t (**)())&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock];
    v129 = *(_QWORD *)&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock];
    v128 = *(_QWORD *)&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock + 8];
    *v127 = sub_10010DF60;
    v127[1] = (uint64_t (*)())v126;
    sub_100087534(v129, v128);
    return;
  }
  v130 = (uint64_t)&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
  swift_beginAccess(&v79[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v171, 0, 0);
  v131 = v152;
  sub_1000271D4(v130, v152, (uint64_t *)&unk_1006443D0);
  swift_beginAccess(v116, v170, 0, 0);
  v132 = v151;
  sub_10007C6DC(v116, v151, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v133 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v167;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v167)(v132, 0, 1, v13);
  v134 = v153;
  v135 = v153 + *(int *)(v160 + 48);
  sub_1000271D4(v131, v153, (uint64_t *)&unk_1006443D0);
  sub_1000271D4(v132, v135, (uint64_t *)&unk_1006443D0);
  if (v102(v134, 1, v13) == 1)
  {
    sub_10000CB4C(v132, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C(v131, (uint64_t *)&unk_1006443D0);
    v136 = v102(v135, 1, v13);
    v137 = v158;
    if (v136 == 1)
    {
      sub_10000CB4C(v134, (uint64_t *)&unk_1006443D0);
      goto LABEL_99;
    }
LABEL_97:
    sub_10000CB4C(v134, (uint64_t *)&unk_100647580);
  }
  else
  {
    v138 = v146;
    sub_1000271D4(v134, v146, (uint64_t *)&unk_1006443D0);
    if (v102(v135, 1, v13) == 1)
    {
      sub_10000CB4C(v132, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C(v131, (uint64_t *)&unk_1006443D0);
      sub_10007C720(v138, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v137 = v158;
      goto LABEL_97;
    }
    v139 = v138;
    v140 = v131;
    v141 = v154;
    sub_1001D0788(v135, v154, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v142 = static UUID.== infix(_:_:)(v139, v141);
    sub_10007C720(v141, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    sub_10000CB4C(v132, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C(v140, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v139, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    sub_10000CB4C(v134, (uint64_t *)&unk_1006443D0);
    v137 = v158;
    if ((v142 & 1) != 0)
    {
LABEL_99:
      v143 = (uint64_t)v148;
      v133(v148, 1, 1, v13);
      sub_1001D6804(v143, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    }
  }
  v137(0);

LABEL_101:
  swift_release(v98);
}

uint64_t sub_1001E27CC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  char v36;
  _BYTE v37[24];

  v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v16 = swift_projectBox(a1);
  v36 = 1;
  swift_beginAccess(v16, v37, 1, 0);
  *(_BYTE *)(v16 + *(int *)(v15 + 24)) = 0;
  v17 = objc_msgSend(a5, "sourceIdentifier");
  v18 = DOCDocumentSourceIdentifierTrashedItems;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v24 = v23;
  if (v19 != v22 || v21 != v23)
    v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);

  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  v26 = swift_allocObject(&unk_1005D1198, 58, 7);
  *(_QWORD *)(v26 + 16) = a5;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = a1;
  *(_QWORD *)(v26 + 40) = a6;
  *(_QWORD *)(v26 + 48) = a7;
  *(_BYTE *)(v26 + 56) = a8 & 1;
  *(_BYTE *)(v26 + 57) = a9 & 1;
  v27 = sub_10006922C(&qword_100644A30);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v28 + 32) = a3;
  *(_QWORD *)(v28 + 40) = a4;
  v29 = swift_allocObject(&unk_1005D11C0, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_1001F6634;
  *(_QWORD *)(v29 + 24) = v26;
  v30 = a4;
  swift_retain();
  v31 = a5;
  a2;
  swift_retain();
  swift_retain();
  v32 = a3;
  sub_1001DD6EC(v28, 0, v36 & 1, (uint64_t)sub_1001F6B34, v29);
  swift_release(v26);
  swift_bridgeObjectRelease(v28);
  return swift_release(v29);
}

uint64_t sub_1001E29E0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, int a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  _QWORD *v75;
  uint64_t (*v76)(uint64_t);
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99[40];
  char v100[24];
  char v101[24];
  char v102[24];
  _QWORD v103[6];

  v84 = a7;
  v85 = a8;
  v92 = a6;
  v93 = a5;
  v90 = a1;
  v11 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v82 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v88 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v88);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v17 = __chkstk_darwin(v16);
  v83 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v86 = (uint64_t)&v77 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v77 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v77 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v77 - v27;
  v87 = swift_projectBox(a4);
  v89 = a2;
  v29 = objc_msgSend(a2, "fileProviderItem");
  v91 = a3;
  if (v29)
  {
    v30 = v29;
    v81 = v12;
    v31 = *(void **)(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    v32 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v32, &v96);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = v30;
    v103[0] = inited;
    specialized Array._endMutation()(inited);
    v34 = v103[0];
    v80 = v31;
    v35 = v30;
    v79 = DOCAnalyticsActionEvent.FileProvider.init(items:)(v34);
    v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v37 = objc_msgSend(v36, "bundleIdentifier");

    if (v37)
    {
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

    }
    else
    {
      v38 = 0;
      v40 = 0;
    }
    v41 = DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)(objc_msgSend(v89, "sourceIdentifier"));
    v42 = type metadata accessor for DOCBrowserContainerController();
    v43 = swift_dynamicCastClass(v90, v42);
    if (v43)
    {
      v78 = v38;
      v44 = v35;
      v45 = (uint64_t *)(v43 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess(v43 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController, &v95, 0, 0);
      v46 = *v45;
      if (v46
        && (v47 = type metadata accessor for DOCItemCollectionViewController(0),
            (v48 = swift_dynamicCastClass(v46, v47)) != 0))
      {
        v49 = (_QWORD *)(v48 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess(v48 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode, &v94, 0, 0);
        if (*v49 >= 3uLL)
        {
          v103[0] = *v49;
          result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DOCDisplayMode, v103, &type metadata for DOCDisplayMode, &type metadata for Int);
          __break(1u);
          return result;
        }
        v50 = *v49 + 1;
      }
      else
      {
        v50 = 0;
      }
      v35 = v44;
      v51 = v80;
      v52 = v79;
      v38 = v78;
    }
    else
    {
      v50 = 0;
      v51 = v80;
      v52 = v79;
    }
    v53 = DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)(v103, 4, v51, v52, v38, v40, v41, v50);
    v54 = *(id *)DOCAnalyticsManager.shared.unsafeMutableAddressor(v53);
    DOCAnalyticsManager.sendActionEvent(_:)(v103);

    sub_1000B3334((uint64_t)v103);
    a3 = v91;
    v12 = v81;
  }
  v55 = a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v102, 0, 0);
  sub_1000271D4(v55, (uint64_t)v26, (uint64_t *)&unk_1006443D0);
  v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v56(v26, 1, v11) == 1)
  {
    v57 = a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation, v101, 0, 0);
    sub_1000271D4(v57, (uint64_t)v28, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v26, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v26, (uint64_t)v28, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  v58 = v87;
  swift_beginAccess(v87, v100, 0, 0);
  sub_10007C6DC(v58, (uint64_t)v23, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v59(v23, 0, 1, v11);
  v60 = (uint64_t)&v15[*(int *)(v88 + 48)];
  sub_1000271D4((uint64_t)v28, (uint64_t)v15, (uint64_t *)&unk_1006443D0);
  sub_1000271D4((uint64_t)v23, v60, (uint64_t *)&unk_1006443D0);
  if (v56(v15, 1, v11) != 1)
  {
    v61 = v86;
    sub_1000271D4((uint64_t)v15, v86, (uint64_t *)&unk_1006443D0);
    if (v56((char *)v60, 1, v11) != 1)
    {
      v63 = v82;
      sub_1001D0788(v60, v82, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v64 = static UUID.== infix(_:_:)(v61, v63);
      sub_10007C720(v63, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
      sub_10007C720(v61, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006443D0);
      if ((v64 & 1) != 0)
        goto LABEL_25;
      return v93(0);
    }
    sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
    sub_10007C720(v61, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_22:
    sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_100647580);
    return v93(0);
  }
  sub_10000CB4C((uint64_t)v23, (uint64_t *)&unk_1006443D0);
  sub_10000CB4C((uint64_t)v28, (uint64_t *)&unk_1006443D0);
  if (v56((char *)v60, 1, v11) != 1)
    goto LABEL_22;
  sub_10000CB4C((uint64_t)v15, (uint64_t *)&unk_1006443D0);
LABEL_25:
  v65 = (uint64_t)v83;
  v59(v83, 1, 1, v11);
  sub_1001D6804(v65, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  v66 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v67 = swift_initStackObject(v66, v99);
  v88 = xmmword_1004D9B40;
  *(_OWORD *)(v67 + 16) = xmmword_1004D9B40;
  v68 = v89;
  *(_QWORD *)(v67 + 32) = v89;
  v98 = v67;
  specialized Array._endMutation()(v67);
  v69 = v98;
  v70 = swift_initStackObject(v66, &v97);
  *(_OWORD *)(v70 + 16) = v88;
  v71 = v90;
  *(_QWORD *)(v70 + 32) = v90;
  v98 = v70;
  specialized Array._endMutation()(v70);
  v72 = v98;
  v73 = v68;
  v74 = v71;
  v75 = sub_100017EEC(v69, v72);
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(v69);
  sub_10004C720((uint64_t)v75, v84 & 1, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  swift_bridgeObjectRelease(v75);
  v76 = v93;
  if ((v85 & 1) != 0)
    sub_1001DB830();
  sub_1000AC1A8();
  return v76(1);
}

uint64_t sub_1001E3144(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t (*v97)(__n128);
  __n128 v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint8_t *v130;
  uint64_t v131;
  uint64_t inited;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  id v138;
  id v139;
  _QWORD *v140;
  id v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void *v146;
  void *v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  __int128 v161;
  char v162[40];
  char v163[40];
  char *v164;
  char v165[8];
  uint64_t v166;
  char *v167;
  char v168[8];
  char v169[8];
  char v170[8];

  v148 = a6;
  v146 = a5;
  v145 = a4;
  v159 = (char *)a3;
  v147 = a1;
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)&v161 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v154 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v158 = (char *)&v143 - v11;
  v12 = __chkstk_darwin(v10);
  v155 = (char *)&v143 - v13;
  __chkstk_darwin(v12);
  v143 = (char *)&v143 - v14;
  v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v153 = (uint64_t)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v152 = (uint64_t)&v143 - v20;
  v21 = __chkstk_darwin(v19);
  v149 = (uint64_t)&v143 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v143 - v23;
  v25 = sub_10006922C((uint64_t *)&unk_100647580);
  __chkstk_darwin(v25);
  v27 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v28 = __chkstk_darwin(v151);
  v150 = (uint64_t)&v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v156 = (uint64_t)&v143 - v31;
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v143 - v33;
  v35 = __chkstk_darwin(v32);
  v37 = (char *)&v143 - v36;
  __chkstk_darwin(v35);
  v39 = (char *)&v143 - v38;
  a2 += 16;
  swift_beginAccess(a2, v170, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2, v40);
  if (result)
  {
    v144 = v24;
    v157 = v7;
    v42 = result + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
    v43 = (char *)result;
    swift_beginAccess(result + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation, v169, 0, 0);
    sub_1000271D4(v42, (uint64_t)v37, (uint64_t *)&unk_1006443D0);
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v45 = v44(v37, 1, v15);
    v160 = v43;
    if (v45 == 1)
    {
      v46 = &v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
      swift_beginAccess(&v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v168, 0, 0);
      v47 = (uint64_t)v46;
      v48 = (uint64_t)v39;
      sub_1000271D4(v47, (uint64_t)v39, (uint64_t *)&unk_1006443D0);
      sub_10000CB4C((uint64_t)v37, (uint64_t *)&unk_1006443D0);
    }
    else
    {
      v48 = (uint64_t)v39;
      sub_1001D0788((uint64_t)v37, (uint64_t)v39, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v39, 0, 1, v15);
    }
    v49 = (uint64_t)v159;
    sub_10007C6DC((uint64_t)v159, (uint64_t)v34, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
    v50 = (uint64_t)&v27[*(int *)(v25 + 48)];
    sub_1000271D4(v48, (uint64_t)v27, (uint64_t *)&unk_1006443D0);
    sub_1000271D4((uint64_t)v34, v50, (uint64_t *)&unk_1006443D0);
    if (v44(v27, 1, v15) == 1)
    {
      sub_10000CB4C((uint64_t)v34, (uint64_t *)&unk_1006443D0);
      v51 = v44((char *)v50, 1, v15);
      v52 = v157;
      v53 = v161;
      if (v51 == 1)
      {
        sub_10000CB4C((uint64_t)v27, (uint64_t *)&unk_1006443D0);
LABEL_12:
        v60 = (uint64_t *)&v160[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
        v61 = swift_beginAccess(&v160[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v167, 0, 0);
        v62 = *v60;
        if ((unint64_t)*v60 >> 62)
        {
          if (v62 < 0)
            v142 = *v60;
          else
            v142 = v62 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v60);
          v63 = _CocoaArrayWrapper.endIndex.getter(v142);
          v61 = swift_bridgeObjectRelease(v62);
        }
        else
        {
          v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v56 = v155;
        if (!v63)
        {
          v123 = (_BYTE *)(v145 + 16);
          v124 = swift_beginAccess(v145 + 16, &v164, 0, 0);
          if ((*v123 & 1) == 0)
          {
            v125 = Logger.UI.unsafeMutableAddressor(v124);
            v126 = v143;
            v127 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 16))(v143, v125, v52);
            v128 = Logger.logObject.getter(v127);
            v129 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v128, v129))
            {
              v130 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v130 = 0;
              _os_log_impl((void *)&_mh_execute_header, v128, v129, "Unexpected: got placeholder results async", v130, 2u);
              swift_slowDealloc(v130, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v53 + 8))(v126, v52);
          }
          v131 = sub_10006922C((uint64_t *)&unk_1006441A0);
          inited = swift_initStackObject(v131, v163);
          v161 = xmmword_1004D9B40;
          *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
          v133 = v146;
          *(_QWORD *)(inited + 32) = v146;
          v166 = inited;
          specialized Array._endMutation()(inited);
          v134 = v166;
          v135 = swift_initStackObject(v131, v162);
          *(_OWORD *)(v135 + 16) = v161;
          v136 = v147;
          *(_QWORD *)(v135 + 32) = v147;
          v166 = v135;
          specialized Array._endMutation()(v135);
          v137 = v166;
          v138 = v133;
          v139 = v136;
          v140 = sub_100017EEC(v134, v137);
          swift_bridgeObjectRelease(v137);
          swift_bridgeObjectRelease(v134);
          v141 = v160;
          sub_10004C720((uint64_t)v140, v148 & 1, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);

          swift_bridgeObjectRelease(v140);
          goto LABEL_32;
        }
        v64 = Logger.UI.unsafeMutableAddressor(v61);
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v56, v64, v52);
        v65 = v49;
        v66 = v149;
        sub_10007C6DC(v65, v149, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        v67 = v160;
        v68 = Logger.logObject.getter(v67);
        v69 = static os_log_type_t.fault.getter();
        v70 = v69;
        if (os_log_type_enabled(v68, v69))
        {
          v71 = swift_slowAlloc(22, -1);
          v160 = (char *)swift_slowAlloc(64, -1);
          v164 = v160;
          *(_DWORD *)v71 = 136315394;
          LODWORD(v158) = v70;
          v72 = (uint64_t)v144;
          sub_10007C6DC(v66, (uint64_t)v144, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v73 = sub_1001D54A0();
          v159 = (char *)v48;
          v75 = v74;
          sub_10007C720(v72, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v166 = sub_1000544FC(v73, v75, (uint64_t *)&v164);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);
          swift_bridgeObjectRelease(v75);
          sub_10007C720(v66, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          *(_WORD *)(v71 + 12) = 2080;
          v76 = *v60;
          v77 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
          v78 = swift_bridgeObjectRetain(v76);
          v79 = Array.description.getter(v78, v77);
          v81 = v80;
          swift_bridgeObjectRelease(v76);
          v166 = sub_1000544FC(v79, v81, (uint64_t *)&v164);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);

          swift_bridgeObjectRelease(v81);
          _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v158, "Unexpected: ignoring placeholder results for: %s - There are now real locations present: %s", (uint8_t *)v71, 0x16u);
          v82 = v160;
          swift_arrayDestroy(v160, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v82, -1, -1);
          swift_slowDealloc(v71, -1, -1);

          (*(void (**)(char *, uint64_t))(v161 + 8))(v155, v157);
LABEL_22:
          v104 = (uint64_t)v159;
          return sub_10000CB4C(v104, (uint64_t *)&unk_1006443D0);
        }

        sub_10007C720(v66, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        goto LABEL_31;
      }
    }
    else
    {
      v54 = v156;
      sub_1000271D4((uint64_t)v27, v156, (uint64_t *)&unk_1006443D0);
      v55 = v44((char *)v50, 1, v15);
      v53 = v161;
      if (v55 != 1)
      {
        v57 = v54;
        v58 = (uint64_t)v144;
        sub_1001D0788(v50, (uint64_t)v144, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        v59 = static UUID.== infix(_:_:)(v57, v58);
        sub_10007C720(v58, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        sub_10000CB4C((uint64_t)v34, (uint64_t *)&unk_1006443D0);
        sub_10007C720(v57, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        v49 = (uint64_t)v159;
        sub_10000CB4C((uint64_t)v27, (uint64_t *)&unk_1006443D0);
        v52 = v157;
        v56 = v158;
        if ((v59 & 1) != 0)
          goto LABEL_12;
LABEL_17:
        v83 = sub_1000ABE80();
        v84 = (*(uint64_t (**)(void))(*(_QWORD *)v83 + 152))();
        if ((v84 & 1) == 0)
        {
          v105 = v150;
          sub_1000271D4(v48, v150, (uint64_t *)&unk_1006443D0);
          v106 = String.init<A>(describing:)(v105, v151);
          v108 = v107;
          v109 = Logger.UI.unsafeMutableAddressor(v106);
          v110 = v154;
          (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v154, v109, v52);
          v111 = v49;
          v112 = v153;
          sub_10007C6DC(v111, v153, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v113 = swift_bridgeObjectRetain(v108);
          v114 = Logger.logObject.getter(v113);
          v115 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v114, v115))
          {
            v116 = swift_slowAlloc(22, -1);
            v156 = v106;
            v117 = v116;
            v158 = (char *)swift_slowAlloc(64, -1);
            v167 = v158;
            *(_DWORD *)v117 = 136315394;
            v155 = (char *)(v117 + 4);
            v159 = (char *)v48;
            v118 = (uint64_t)v144;
            sub_10007C6DC(v112, (uint64_t)v144, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
            v119 = sub_1001D54A0();
            v121 = v120;
            sub_10007C720(v118, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
            v164 = (char *)sub_1000544FC(v119, v121, (uint64_t *)&v167);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165);
            swift_bridgeObjectRelease(v121);
            sub_10007C720(v112, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
            *(_WORD *)(v117 + 12) = 2080;
            swift_bridgeObjectRetain(v108);
            v164 = (char *)sub_1000544FC(v156, v108, (uint64_t *)&v167);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165);
            swift_bridgeObjectRelease_n(v108, 3);
            _os_log_impl((void *)&_mh_execute_header, v114, v115, "Unexpected: ignoring placeholder results for: %s - new operation is now active: %s", (uint8_t *)v117, 0x16u);
            v122 = v158;
            swift_arrayDestroy(v158, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v122, -1, -1);
            swift_slowDealloc(v117, -1, -1);
            swift_release(v83);

            (*(void (**)(char *, uint64_t))(v161 + 8))(v154, v157);
            goto LABEL_22;
          }
          swift_bridgeObjectRelease_n(v108, 2);
          swift_release(v83);

          sub_10007C720(v112, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v110, v52);
LABEL_32:
          v104 = v48;
          return sub_10000CB4C(v104, (uint64_t *)&unk_1006443D0);
        }
        v85 = Logger.UI.unsafeMutableAddressor(v84);
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v56, v85, v52);
        v86 = v49;
        v87 = v152;
        sub_10007C6DC(v86, v152, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        v88 = swift_retain_n(v83, 2);
        v89 = Logger.logObject.getter(v88);
        v90 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v89, v90))
        {
          v92 = swift_slowAlloc(22, -1);
          v159 = (char *)swift_slowAlloc(64, -1);
          v167 = v159;
          *(_DWORD *)v92 = 136315394;
          v93 = (uint64_t)v144;
          sub_10007C6DC(v87, (uint64_t)v144, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v94 = sub_1001D54A0();
          v96 = v95;
          sub_10007C720(v93, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          v164 = (char *)sub_1000544FC(v94, v96, (uint64_t *)&v167);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165);
          swift_bridgeObjectRelease(v96);
          sub_10007C720(v87, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
          *(_WORD *)(v92 + 12) = 2080;
          v97 = *(uint64_t (**)(__n128))(*(_QWORD *)v83 + 168);
          v98 = swift_retain();
          v99 = v97(v98);
          v101 = v100;
          swift_release(v83);
          v164 = (char *)sub_1000544FC(v99, v101, (uint64_t *)&v167);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165);
          swift_release_n(v83, 2, v102);
          swift_bridgeObjectRelease(v101);
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "Unexpected: ignoring placeholder results for: %s - loadingDisabledAssertions: %s", (uint8_t *)v92, 0x16u);
          v103 = (uint64_t)v159;
          swift_arrayDestroy(v159, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v103, -1, -1);
          swift_slowDealloc(v92, -1, -1);
          swift_release(v83);

          (*(void (**)(char *, uint64_t))(v161 + 8))(v158, v157);
          v104 = v48;
          return sub_10000CB4C(v104, (uint64_t *)&unk_1006443D0);
        }
        swift_release_n(v83, 2, v91);

        sub_10007C720(v87, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        swift_release(v83);
LABEL_31:
        (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v52);
        goto LABEL_32;
      }
      sub_10000CB4C((uint64_t)v34, (uint64_t *)&unk_1006443D0);
      sub_10007C720(v54, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      v52 = v157;
    }
    sub_10000CB4C((uint64_t)v27, (uint64_t *)&unk_100647580);
    v56 = v158;
    goto LABEL_17;
  }
  return result;
}

void sub_1001E40AC(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6, void (*a7)(uint64_t), uint64_t a8)
{
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  int v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;
  _BYTE v40[24];

  v14 = (_QWORD *)(a3 + 16);
  swift_beginAccess(a3 + 16, v40, 33, 0);
  v15 = *(_QWORD **)(a3 + 16);
  v16 = a2;
  v17 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
  *(_QWORD *)(a3 + 16) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_100153D20(0, v15[2] + 1, 1, v15);
    *v14 = v15;
  }
  v20 = v15[2];
  v19 = v15[3];
  if (v20 >= v19 >> 1)
  {
    v15 = sub_100153D20((_QWORD *)(v19 > 1), v20 + 1, 1, v15);
    *v14 = v15;
  }
  v15[2] = v20 + 1;
  v21 = &v15[2 * v20];
  v21[4] = v17;
  v21[5] = a2;
  swift_endAccess(v40);
  v22 = (_QWORD *)swift_allocObject(&unk_1005D0860, 40, 7);
  v22[2] = a3;
  v22[3] = a7;
  v22[4] = a8;
  v39 = a5;
  v23 = swift_allocObject(&unk_1005D04A0, 24, 7);
  *(_QWORD *)(v23 + 16) = _swiftEmptyArrayStorage;
  v24 = (unint64_t)a5 >> 62;
  if (!((unint64_t)a5 >> 62))
  {
    v25 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a3, 2);
    swift_retain_n(a8, 2);
    swift_bridgeObjectRetain(a5);
    if (v25)
      goto LABEL_7;
    goto LABEL_19;
  }
  if (a5 < 0)
    v31 = a5;
  else
    v31 = a5 & 0xFFFFFFFFFFFFFF8;
  swift_retain_n(a3, 2);
  swift_retain_n(a8, 2);
  swift_bridgeObjectRetain(a5);
  if (!_CocoaArrayWrapper.endIndex.getter(v31))
    goto LABEL_19;
  swift_bridgeObjectRetain(a5);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(a5);
  if (v32)
  {
    swift_bridgeObjectRetain(a5);
    a7 = (void (*)(uint64_t))_CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(a5);
    if (a7)
    {
LABEL_7:
      if ((a5 & 0xC000000000000001) != 0)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a5);
        if (!v24)
        {
LABEL_10:
          if (*(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_11:
            sub_10045C054(0, 1);
            v27 = swift_allocObject(&unk_1005D0888, 64, 7);
            *(_QWORD *)(v27 + 16) = v23;
            *(_QWORD *)(v27 + 24) = a4;
            *(_QWORD *)(v27 + 32) = v39;
            v28 = a6 & 1;
            *(_BYTE *)(v27 + 40) = v28;
            *(_QWORD *)(v27 + 48) = sub_1001F59F4;
            *(_QWORD *)(v27 + 56) = v22;
            swift_retain();
            swift_retain();
            v29 = a4;
            swift_retain();
            sub_10003E148(v26, v28, v29, sub_1001F59C0, v27);
            swift_release(v22);
            swift_release(v23);

            swift_release_n(v27, 2, v30);
LABEL_20:
            swift_release(a8);
            swift_release(a3);
            return;
          }
          goto LABEL_26;
        }
      }
      else
      {
        if (!*(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        v26 = *(id *)(a5 + 32);
        if (!v24)
          goto LABEL_10;
      }
      if (a5 < 0)
        v35 = a5;
      else
        v35 = a5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a5);
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(a5);
      if (v36)
        goto LABEL_11;
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease(a5);
    swift_beginAccess(v14, v40, 33, 0);
    sub_100130494((uint64_t)_swiftEmptyArrayStorage);
    swift_endAccess(v40);
    swift_beginAccess(v14, v40, 0, 0);
    v33 = *v14;
    v34 = swift_bridgeObjectRetain(*v14);
    a7(v34);
    swift_release(v22);
    swift_release(v23);
    swift_bridgeObjectRelease(v33);
    goto LABEL_20;
  }
LABEL_28:
  __break(1u);
}

double sub_1001E4454(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 33, 0);
  v7 = swift_bridgeObjectRetain(a1);
  sub_100130494(v7);
  swift_endAccess(v11);
  swift_beginAccess(v6, v11, 0, 0);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = swift_bridgeObjectRetain(v8);
  a3(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1001E44F4(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  void *v27;
  void *v28;

  v6 = v5;
  v27 = a2;
  v28 = a3;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = Logger.UI.unsafeMutableAddressor(v12);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Obtaining default save location...", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v20 = objc_msgSend(a1, "hostIdentifier");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = (_QWORD *)swift_allocObject(&unk_1005CF438, 64, 7);
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = v21;
  v24[5] = v23;
  v24[6] = a1;
  v24[7] = v6;
  swift_retain();
  v25 = a1;
  sub_1000AD3F0(v25, v27, v28, (uint64_t)sub_1001F0BD8, (uint64_t)v24);
  return swift_release(v24);
}

id sub_1001E468C(const char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.UI.unsafeMutableAddressor(v4);
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a1, v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "emptyLocation");
}

void sub_1001E47A8(char a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  *v11 = static OS_dispatch_queue.main.getter(v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  v13 = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) != 0)
  {
    swift_beginAccess(a2 + 16, v15, 1, 0);
    *(_BYTE *)(a2 + 16) = a1 & 1;
    swift_beginAccess(a3 + 16, v14, 1, 0);
    *(_BYTE *)(a3 + 16) = 1;
    dispatch_group_leave(a4);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001E48D0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id *v17;
  uint64_t v18;
  void (*v19)(char *, id, uint64_t);
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  void *v33;
  char *v34;
  id v35;
  char *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  void *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  _QWORD *v70;
  char *v71;
  id v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void (*v80)(char *, id, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t aBlock[5];
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;

  v77 = a4;
  v78 = a5;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v75 = (char *)&v73 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v73 - v15;
  v17 = (id *)(a2 + 16);
  v18 = Logger.Enumeration.unsafeMutableAddressor(v14);
  v19 = *(void (**)(char *, id, uint64_t))(v9 + 16);
  v79 = (id)v18;
  v80 = v19;
  ((void (*)(char *))v19)(v16);
  v20 = a1;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  v23 = os_log_type_enabled(v21, v22);
  v81 = v8;
  v82 = v20;
  if (v23)
  {
    v76 = (uint64_t)a3;
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    aBlock[0] = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = *(void **)&v20[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v26)
    {
      v27 = objc_msgSend(v26, "identifier");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

    }
    else
    {
      v30 = 0xE300000000000000;
      v28 = 4271950;
    }
    v87 = sub_1000544FC(v28, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);
    v20 = v82;

    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Building FINode from domain (%s", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v8 = v81;
    v31(v16, v81);
    a3 = (void *)v76;
  }
  else
  {

    v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v31(v16, v8);
  }
  swift_beginAccess(v17, &v87, 0, 0);
  v32 = *v17;
  v33 = *(void **)&v20[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  v34 = v83;
  if (v33)
  {
    type metadata accessor for DOCRootNode(0);
    v35 = v32;
    v36 = v33;
    v37 = static DOCRootNode.rootNode(for:)();
    if (v37)
    {
      v38 = (void *)v37;
      v83 = v36;
      v39 = v75;
      v80(v75, v79, v8);
      swift_unknownObjectRetain_n(a3, 2);
      v40 = a3;
      v41 = v38;
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc(22, -1);
        v74 = (_QWORD *)swift_slowAlloc(8, -1);
        v76 = swift_slowAlloc(32, -1);
        aBlock[0] = v76;
        *(_DWORD *)v44 = 136315394;
        v80 = (void (*)(char *, id, uint64_t))v31;
        v45 = objc_msgSend(v40, "displayName");
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
        v79 = v35;
        v47 = v46;
        v49 = v48;

        v84 = sub_1000544FC(v47, v49, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, aBlock);
        swift_unknownObjectRelease_n(v40, 2);
        swift_bridgeObjectRelease(v49);
        *(_WORD *)(v44 + 12) = 2112;
        v84 = (uint64_t)v41;
        v50 = v41;
        v20 = v82;
        v35 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, aBlock);
        v51 = v74;
        *v74 = v38;

        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Resolved Node (%s to (%@", (uint8_t *)v44, 0x16u);
        v52 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v51, 1, v52);
        swift_slowDealloc(v51, -1, -1);
        v53 = v76;
        swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v53, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        ((void (*)(char *, uint64_t))v80)(v75, v81);
      }
      else
      {

        swift_unknownObjectRelease_n(v40, 2);
        v31(v39, v8);
      }
      v65 = v78;
      v66 = objc_msgSend(v20, "identifier");
      v32 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v66, v41);

      goto LABEL_19;
    }

  }
  else
  {
    v54 = v32;
  }
  v80(v34, v79, v8);
  v55 = swift_unknownObjectRetain_n(a3, 2);
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = swift_slowAlloc(32, -1);
    aBlock[0] = v59;
    v80 = (void (*)(char *, id, uint64_t))v31;
    *(_DWORD *)v58 = 136315138;
    v60 = objc_msgSend(a3, "displayName");
    v76 = (uint64_t)a3;
    v61 = v60;
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v64 = v63;

    v84 = sub_1000544FC(v62, v64, aBlock);
    v20 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, aBlock);
    swift_unknownObjectRelease_n(v76, 2);
    swift_bridgeObjectRelease(v64);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Couldn't resolve Node (%s to an FINode", v58, 0xCu);
    swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v58, -1, -1);

    ((void (*)(char *, uint64_t))v80)(v83, v81);
  }
  else
  {

    swift_unknownObjectRelease_n(a3, 2);
    v31(v34, v8);
  }
  v65 = v78;
LABEL_19:
  v67 = v77;
  v68 = (_QWORD *)swift_allocObject(&unk_1005CF938, 48, 7);
  v68[2] = v67;
  v68[3] = v65;
  v68[4] = v32;
  v68[5] = v20;
  aBlock[4] = (uint64_t)sub_1001F5074;
  v86 = v68;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CF950;
  v69 = _Block_copy(aBlock);
  v70 = v86;
  v71 = v20;
  swift_retain();
  v72 = v32;
  swift_release(v70);
  DOCRunInMainThread(v69);

  _Block_release(v69);
}

double sub_1001E5048(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  double result;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD aBlock[5];
  _QWORD *v42;
  _BYTE v43[24];

  v36 = a7;
  v15 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v18 - 8);
  v38 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v23 = (void *)Strong;
    v35 = *(id *)(Strong + OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue);

    v24 = (_QWORD *)swift_allocObject(&unk_1005CF988, 72, 7);
    v24[2] = a4;
    v24[3] = a1;
    v24[4] = a5;
    v24[5] = a6;
    v25 = v36;
    v24[6] = a2;
    v24[7] = v25;
    v24[8] = a8;
    aBlock[4] = sub_1001F50C4;
    v42 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CF9A0;
    v26 = _Block_copy(aBlock);
    swift_retain();
    v27 = a1;
    v28 = a5;
    swift_unknownObjectRetain(a6);
    swift_errorRetain(a2);
    swift_retain();
    static DispatchQoS.unspecified.getter(v29);
    v40 = _swiftEmptyArrayStorage;
    v30 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = sub_10006922C((uint64_t *)&unk_100647540);
    v32 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v31, v32, v15, v30);
    v33 = v35;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v17, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v15);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
    *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  }
  return result;
}

void sub_1001E52C0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  int v47;
  _QWORD v48[3];
  char v49[8];
  uint64_t v50;
  uint64_t aBlock[5];
  _QWORD *v52;
  char v53[32];

  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v53, 0, 0);
  v18 = *(void **)(a1 + 16);
  if (a2)
  {
    v19 = v18;
    v20 = a2;
    v21 = objc_msgSend(a3, "identifier");
    v22 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v21, v20);

  }
  else
  {
    v22 = v18;
    v23 = Logger.Enumeration.unsafeMutableAddressor(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v23, v14);
    swift_unknownObjectRetain(a4);
    swift_errorRetain(a5);
    swift_unknownObjectRetain(a4);
    v24 = swift_errorRetain(a5);
    v25 = Logger.logObject.getter(v24);
    v47 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, (os_log_type_t)v47))
    {
      v43 = v25;
      v44 = a6;
      v45 = a7;
      v46 = a3;
      v26 = swift_slowAlloc(22, -1);
      v42 = swift_slowAlloc(64, -1);
      aBlock[0] = v42;
      *(_DWORD *)v26 = 136315394;
      v27 = objc_msgSend(a4, "displayName", v26 + 4);
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v50 = sub_1000544FC(v28, v30, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, aBlock);
      swift_unknownObjectRelease_n(a4, 2);
      swift_bridgeObjectRelease(v30);
      *(_WORD *)(v26 + 12) = 2080;
      if (a5)
      {
        swift_getErrorValue(a5, v49, v48);
        v31 = Error.localizedDescription.getter(v48[1], v48[2]);
        v33 = v32;
      }
      else
      {
        v33 = 0xE300000000000000;
        v31 = 4271950;
      }
      v50 = sub_1000544FC(v31, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, aBlock);
      swift_bridgeObjectRelease(v33);
      swift_errorRelease(a5);
      swift_errorRelease(a5);
      v34 = v43;
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v47, "Failed to create FINode for node (%s), error: %s", (uint8_t *)v26, 0x16u);
      v35 = v42;
      swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      a7 = v45;
      a3 = v46;
      a6 = v44;
    }
    else
    {
      swift_unknownObjectRelease_n(a4, 2);
      swift_errorRelease(a5);
      swift_errorRelease(a5);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  v36 = (_QWORD *)swift_allocObject(&unk_1005CF9D8, 48, 7);
  v36[2] = a6;
  v36[3] = a7;
  v36[4] = v22;
  v36[5] = a3;
  aBlock[4] = (uint64_t)sub_1001F5074;
  v52 = v36;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CF9F0;
  v37 = _Block_copy(aBlock);
  v38 = v52;
  swift_retain();
  v39 = a3;
  v40 = v22;
  swift_release(v38);
  DOCRunInMainThread(v37);

  _Block_release(v37);
}

double sub_1001E56AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  double result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD aBlock[5];
  uint64_t v61;
  char v62[32];

  v55 = a6;
  v56 = a8;
  v51 = a7;
  v52 = a4;
  v53 = a5;
  v54 = a2;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v57 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10006922C(&qword_100643470);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v62, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v22 = (void *)Strong;
    v49 = *(id *)(Strong + OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue);

    sub_1000271D4(a1, (uint64_t)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100643470);
    v23 = *(unsigned __int8 *)(v17 + 80);
    v24 = (v23 + 24) & ~v23;
    v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = v14;
    v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    v47 = v10;
    v48 = v11;
    v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v46 = v13;
    v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    v30 = swift_allocObject(&unk_1005CFA28, v29 + 16, v23 | 7);
    *(_QWORD *)(v30 + 16) = v52;
    sub_100070EDC((uint64_t)v19, v30 + v24, &qword_100643470);
    v31 = v53;
    v32 = v54;
    *(_QWORD *)(v30 + v25) = v53;
    *(_QWORD *)(v30 + v26) = a3;
    v33 = v55;
    *(_QWORD *)(v30 + v27) = v55;
    *(_QWORD *)(v30 + v28) = v32;
    v34 = (_QWORD *)(v30 + v29);
    v35 = v56;
    *v34 = v51;
    v34[1] = v35;
    aBlock[4] = sub_1001F51D4;
    v61 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005CFA40;
    v36 = _Block_copy(aBlock);
    swift_retain();
    swift_unknownObjectRetain(v31);
    swift_retain();
    v37 = v33;
    swift_errorRetain(v32);
    swift_retain();
    v38 = v57;
    static DispatchQoS.unspecified.getter(v39);
    v59 = _swiftEmptyArrayStorage;
    v40 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v41 = sub_10006922C((uint64_t *)&unk_100647540);
    v42 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
    v43 = v46;
    v44 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v41, v42, v47, v40);
    v45 = v49;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v38, v43, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v50);
    *(_QWORD *)&result = swift_release(v61).n128_u64[0];
  }
  return result;
}

void sub_1001E5A0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  NSObject *v60;
  __n128 v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  void *v87;
  uint64_t v88;
  uint64_t Strong;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  char *v96;
  NSObject *v97;
  uint64_t v98;
  os_log_type_t v99;
  BOOL v100;
  uint64_t v101;
  char *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  __n128 v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  void *v124;
  _QWORD *v125;
  id v126;
  id v127;
  _QWORD v128[2];
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  id v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE v149[16];
  _QWORD v150[3];
  char v151[8];
  uint64_t aBlock[5];
  _QWORD *v153;
  char v154[8];

  v142 = a8;
  v141 = a7;
  v138 = a6;
  v140 = a5;
  v137 = a4;
  v146 = a3;
  v144 = (id)a2;
  v147 = type metadata accessor for Logger(0);
  v145 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v10 = (char *)v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v139 = (char *)v128 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)v128 - v14;
  v16 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v16);
  v18 = (char *)v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v128 - v20;
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v143 = (char *)v128 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)v128 - v29;
  swift_beginAccess(a1 + 16, v154, 0, 0);
  v31 = *(void **)(a1 + 16);
  sub_1000271D4((uint64_t)v144, (uint64_t)v21, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    v134 = v18;
    v138 = v25;
    v135 = v10;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v30, v21, v22);
    v32 = v31;
    v53 = Logger.Enumeration.unsafeMutableAddressor(v32);
    v54 = v145;
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 16);
    v56 = v139;
    v130 = v53;
    v57 = v147;
    v131 = v55;
    ((void (*)(char *))v55)(v139);
    v58 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v136 = v30;
    v133 = v58;
    v58(v143, v30, v22);
    v59 = swift_unknownObjectRetain_n(v146, 2);
    v60 = Logger.logObject.getter(v59);
    v62 = static os_log_type_t.info.getter(v61);
    if (os_log_type_enabled(v60, v62))
    {
      v63 = swift_slowAlloc(22, -1);
      v132 = v22;
      v64 = v63;
      v129 = swift_slowAlloc(64, -1);
      aBlock[0] = v129;
      *(_DWORD *)v64 = 136315394;
      v128[1] = v64 + 4;
      v65 = v146;
      v66 = objc_msgSend(v146, "displayName");
      v144 = v32;
      v67 = v66;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v70 = v69;

      v148 = sub_1000544FC(v68, v70, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
      swift_unknownObjectRelease_n(v65, 2);
      swift_bridgeObjectRelease(v70);
      *(_WORD *)(v64 + 12) = 2080;
      v71 = v143;
      v73 = URL.absoluteString.getter(v72);
      v75 = v74;
      v148 = sub_1000544FC(v73, v74, aBlock);
      v32 = v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
      v76 = swift_bridgeObjectRelease(v75);
      v77 = v23;
      v78 = *(char **)(v23 + 8);
      v79 = v132;
      v143 = v78;
      ((void (*)(char *, uint64_t, __n128))v78)(v71, v132, v76);
      _os_log_impl((void *)&_mh_execute_header, v60, v62, "Building FINode for node (%s) with URL: %s.", (uint8_t *)v64, 0x16u);
      v80 = v129;
      swift_arrayDestroy(v129, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1, -1);
      swift_slowDealloc(v64, -1, -1);

      v145 = *(_QWORD *)(v54 + 8);
      ((void (*)(char *, uint64_t))v145)(v56, v147);
    }
    else
    {
      swift_unknownObjectRelease_n(v146, 2);
      v77 = v23;
      v81 = v143;
      v143 = *(char **)(v23 + 8);
      ((void (*)(char *, uint64_t))v143)(v81, v22);

      v145 = *(_QWORD *)(v54 + 8);
      ((void (*)(char *, uint64_t))v145)(v56, v57);
      v79 = v22;
    }
    v82 = v135;
    v83 = v138;
    v84 = (uint64_t)v134;
    sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    v85 = v136;
    v86 = v133;
    v133((char *)v84, v136, v79);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v84, 0, 1, v79);
    v87 = (void *)static FINode.docNode(from:)(v84);
    sub_10000CB4C(v84, &qword_100643470);
    if (!v87)
    {

      v93 = v147;
      v131(v82, v130, v147);
      v86(v83, v85, v79);
      v94 = v146;
      v95 = swift_unknownObjectRetain_n(v146, 2);
      v96 = v83;
      v97 = Logger.logObject.getter(v95);
      v98 = v79;
      v99 = static os_log_type_t.error.getter(v97);
      v100 = os_log_type_enabled(v97, v99);
      v92 = v140;
      if (v100)
      {
        v101 = swift_slowAlloc(22, -1);
        v139 = (char *)swift_slowAlloc(64, -1);
        aBlock[0] = (uint64_t)v139;
        *(_DWORD *)v101 = 136315394;
        v132 = v98;
        v102 = v96;
        v103 = objc_msgSend(v94, "displayName");
        v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
        v144 = v32;
        v105 = v104;
        v107 = v106;

        v148 = sub_1000544FC(v105, v107, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
        swift_unknownObjectRelease_n(v94, 2);
        swift_bridgeObjectRelease(v107);
        *(_WORD *)(v101 + 12) = 2080;
        v109 = URL.absoluteString.getter(v108);
        v111 = v110;
        v148 = sub_1000544FC(v109, v110, aBlock);
        v32 = v144;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
        v112 = swift_bridgeObjectRelease(v111);
        v113 = v102;
        v114 = v132;
        v115 = v143;
        ((void (*)(char *, uint64_t, __n128))v143)(v113, v132, v112);
        _os_log_impl((void *)&_mh_execute_header, v97, v99, "Failed to create FINode for node (%s) with URL: %s. Does the node exist on disk? It should.", (uint8_t *)v101, 0x16u);
        v116 = v139;
        swift_arrayDestroy(v139, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v116, -1, -1);
        swift_slowDealloc(v101, -1, -1);

        ((void (*)(char *, uint64_t))v145)(v135, v147);
        ((void (*)(char *, uint64_t))v115)(v136, v114);
      }
      else
      {

        v122 = v143;
        ((void (*)(char *, uint64_t))v143)(v96, v98);
        swift_unknownObjectRelease_n(v94, 2);
        ((void (*)(char *, uint64_t))v145)(v82, v93);
        ((void (*)(char *, uint64_t))v122)(v85, v98);
      }
      goto LABEL_19;
    }
    v88 = v137 + 16;
    swift_beginAccess(v137 + 16, &v148, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v88);
    if (!Strong)
    {

      v92 = v140;
      v117 = objc_msgSend(v140, "identifier");
      v118 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v117, v87);

      ((void (*)(char *, uint64_t))v143)(v85, v79);
      v32 = v118;
      goto LABEL_19;
    }
    v90 = (void *)Strong;
    v91 = sub_1001EE604(v87, v32);

    ((void (*)(char *, uint64_t))v143)(v85, v79);
    v32 = v91;
LABEL_12:
    v92 = v140;
LABEL_19:
    v120 = v142;
    v121 = v141;
    goto LABEL_20;
  }
  v32 = v31;
  v33 = sub_10000CB4C((uint64_t)v21, &qword_100643470);
  v34 = Logger.Enumeration.unsafeMutableAddressor(v33);
  v35 = v145;
  v36 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v15, v34, v147);
  v37 = v146;
  swift_unknownObjectRetain(v146);
  v38 = v138;
  swift_errorRetain(v138);
  swift_unknownObjectRetain(v37);
  v39 = swift_errorRetain(v38);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (!os_log_type_enabled(v40, v41))
  {
    swift_unknownObjectRelease_n(v37, 2);
    swift_errorRelease(v38);
    swift_errorRelease(v38);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
    goto LABEL_12;
  }
  v143 = v15;
  v144 = v32;
  v42 = swift_slowAlloc(22, -1);
  v43 = swift_slowAlloc(64, -1);
  aBlock[0] = v43;
  *(_DWORD *)v42 = 136315394;
  v44 = v37;
  v45 = objc_msgSend(v37, "displayName");
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v47 = v38;
  v49 = v48;

  v148 = sub_1000544FC(v46, v49, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
  swift_unknownObjectRelease_n(v44, 2);
  swift_bridgeObjectRelease(v49);
  *(_WORD *)(v42 + 12) = 2080;
  if (v47)
  {
    swift_getErrorValue(v47, v151, v150);
    v50 = Error.localizedDescription.getter(v150[1], v150[2]);
    v52 = v51;
  }
  else
  {
    v52 = 0xE300000000000000;
    v50 = 4271950;
  }
  v119 = v147;
  v148 = sub_1000544FC(v50, v52, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
  swift_bridgeObjectRelease(v52);
  swift_errorRelease(v47);
  swift_errorRelease(v47);
  _os_log_impl((void *)&_mh_execute_header, v40, v41, "Couldn't get URL to resolve node (%s, error: %s", (uint8_t *)v42, 0x16u);
  swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v43, -1, -1);
  swift_slowDealloc(v42, -1, -1);

  (*(void (**)(char *, uint64_t))(v145 + 8))(v143, v119);
  v92 = v140;
  v120 = v142;
  v121 = v141;
  v32 = v144;
LABEL_20:
  v123 = (_QWORD *)swift_allocObject(&unk_1005CFA78, 48, 7);
  v123[2] = v121;
  v123[3] = v120;
  v123[4] = v32;
  v123[5] = v92;
  aBlock[4] = (uint64_t)sub_1001F5074;
  v153 = v123;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005CFA90;
  v124 = _Block_copy(aBlock);
  v125 = v153;
  swift_retain();
  v126 = v92;
  v127 = v32;
  swift_release(v125);
  DOCRunInMainThread(v124);

  _Block_release(v124);
}

void sub_1001E65A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void **v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  _QWORD *v28;

  v10 = sub_10001B0BC((uint64_t)a4);
  if (v10)
  {
    v12 = (void *)v10;
    v13 = v11;
    v14 = (_QWORD *)swift_allocObject(&unk_1005D05E0, 72, 7);
    v14[2] = a1;
    v14[3] = v12;
    v14[4] = v13;
    v14[5] = a2;
    v14[6] = a3;
    v14[7] = a4;
    v14[8] = a5;
    v27 = sub_1001F5838;
    v28 = v14;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10004A82C;
    v26 = &unk_1005D05F8;
    v15 = _Block_copy(&v23);
    v16 = v28;
    swift_bridgeObjectRetain(a1);
    v17 = v12;
    v18 = v13;
    swift_retain();
    v19 = a4;
    swift_retain();
    swift_release(v16);
    DOCRunInMainThread(v15);
    _Block_release(v15);

  }
  else
  {
    v20 = swift_allocObject(&unk_1005D0590, 32, 7);
    *(_QWORD *)(v20 + 16) = a2;
    *(_QWORD *)(v20 + 24) = a3;
    v27 = sub_10010DF60;
    v28 = (_QWORD *)v20;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_10004A82C;
    v26 = &unk_1005D05A8;
    v21 = _Block_copy(&v23);
    v22 = v28;
    swift_retain();
    swift_release(v22);
    DOCRunInMainThread(v21);
    _Block_release(v21);
  }
}

void sub_1001E673C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  _QWORD *v51;
  char *v52;
  id v53;
  id v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void **aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  uint64_t v75;

  if (!a1)
  {
    v28 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v29 = static os_log_type_t.error.getter(v28);
    v30 = sub_10006922C((uint64_t *)&unk_100644560);
    v31 = swift_allocObject(v30, 72, 7);
    *(_OWORD *)(v31 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v31 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v31 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v31 + 32) = a3;
    v32 = a3;
    os_log(_:dso:log:type:_:)("Error fetching the parent of item %@ [nil results]", 50, 2, &_mh_execute_header, v28, v29, v31);

    swift_bridgeObjectRelease(v31);
    v33 = swift_allocObject(&unk_1005D0630, 32, 7);
    *(_QWORD *)(v33 + 16) = a4;
    *(_QWORD *)(v33 + 24) = a5;
    v74 = sub_10010DF60;
    v75 = v33;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v34 = &unk_1005D0648;
LABEL_25:
    v72 = sub_10004A82C;
    v73 = v34;
    v64 = _Block_copy(&aBlock);
    v65 = v75;
    swift_retain();
    swift_release(v65);
    DOCRunInMainThread(v64);
    _Block_release(v64);
    return;
  }
  v14 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v56 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v56 = a1;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v56))
      goto LABEL_4;
    goto LABEL_24;
  }
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v15)
  {
LABEL_24:
    v57 = swift_bridgeObjectRelease(a1);
    v58 = *(id *)DOCLog.UI.unsafeMutableAddressor(v57);
    v59 = static os_log_type_t.error.getter(v58);
    v60 = sub_10006922C((uint64_t *)&unk_100644560);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v61 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v61 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v61 + 32) = a3;
    v62 = a3;
    os_log(_:dso:log:type:_:)("Error fetching parents of item %@ [no results]", 46, 2, &_mh_execute_header, v58, v59, v61);

    swift_bridgeObjectRelease(v61);
    v63 = swift_allocObject(&unk_1005D06F8, 32, 7);
    *(_QWORD *)(v63 + 16) = a4;
    *(_QWORD *)(v63 + 24) = a5;
    v74 = sub_10010DF60;
    v75 = v63;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v34 = &unk_1005D0710;
    goto LABEL_25;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_7:
    v17 = v16;
    v18 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    if ((static NSObject.== infix(_:_:)(a3, v17) & 1) != 0)
    {
      v19 = swift_bridgeObjectRelease(a1);
      v20 = *(id *)DOCLog.UI.unsafeMutableAddressor(v19);
      v21 = static os_log_type_t.debug.getter();
      v22 = sub_10006922C((uint64_t *)&unk_100644560);
      v23 = swift_allocObject(v22, 72, 7);
      *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v23 + 56) = v18;
      *(_QWORD *)(v23 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      *(_QWORD *)(v23 + 32) = a3;
      v24 = a3;
      os_log(_:dso:log:type:_:)("Error prepending to item %@ [item was already the parent]", 57, 2, &_mh_execute_header, v20, v21, v23);

      swift_bridgeObjectRelease(v23);
      v25 = swift_allocObject(&unk_1005D06A8, 32, 7);
      *(_QWORD *)(v25 + 16) = a4;
      *(_QWORD *)(v25 + 24) = a5;
      v74 = sub_10010DF60;
      v75 = v25;
      aBlock = _NSConcreteStackBlock;
      v71 = 1107296256;
      v72 = sub_10004A82C;
      v73 = &unk_1005D06C0;
      v26 = _Block_copy(&aBlock);
      v27 = v75;
      swift_retain();
      swift_release(v27);
      DOCRunInMainThread(v26);
      _Block_release(v26);

      return;
    }
    v67 = a2;
    v68 = a7;
    v69 = a4;
    v35 = objc_msgSend(v17, "itemIdentifier");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSFileProviderTrashContainerItemIdentifier);
    v41 = v39;
    if (v36 == v40 && v38 == v39)
      v42 = 1;
    else
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);

    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v41);
    v66 = v17;
    if ((objc_msgSend(a3, "isTrashed") & 1) != 0)
    {
      if (((v42 | objc_msgSend(v17, "isRootItem", v17)) & 1) == 0)
      {
LABEL_16:
        v43 = (void *)DOCNode.sourceIdentifier.getter(v18);
        v44 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v43, v17);

LABEL_19:
        v46 = *(id *)DOCLog.UI.unsafeMutableAddressor(v45);
        v47 = static os_log_type_t.debug.getter();
        v48 = sub_10006922C((uint64_t *)&unk_100644560);
        v49 = swift_allocObject(v48, 72, 7);
        *(_OWORD *)(v49 + 16) = xmmword_1004D9670;
        *(_QWORD *)(v49 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        *(_QWORD *)(v49 + 64) = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        *(_QWORD *)(v49 + 32) = v44;
        v50 = v44;
        os_log(_:dso:log:type:_:)("Parent fetched. Inserting a new location %@", 43, 2, &_mh_execute_header, v46, v47, v49);

        swift_bridgeObjectRelease(v49);
        v51 = (_QWORD *)swift_allocObject(&unk_1005D0680, 72, 7);
        v51[2] = a6;
        v51[3] = v67;
        v51[4] = a3;
        v51[5] = v69;
        v51[6] = a5;
        v51[7] = v68;
        v51[8] = a1;
        swift_retain();
        v52 = a6;
        v53 = v67;
        v54 = a3;
        swift_retain();
        swift_retain();
        sub_10003E148(v50, 0, v52, sub_1001F5890, (uint64_t)v51);

        swift_release_n(v51, 2, v55);
        return;
      }
    }
    else if ((v42 & 1) == 0)
    {
      goto LABEL_16;
    }
    v45 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "trashedItemsLocation");
    v44 = v45;
    goto LABEL_19;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v16 = *(id *)(a1 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1001E6E18(id a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v9;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  char v67[24];

  v17 = (uint64_t *)(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v67, 0, 0);
  v18 = *v17;
  if (!((unint64_t)v18 >> 62))
  {
    v19 = *(id *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    v20 = a2;
    swift_bridgeObjectRetain(v18);
    v21 = a1;
    if (v19)
      goto LABEL_3;
LABEL_38:
    v28 = swift_bridgeObjectRelease(v18);
    goto LABEL_39;
  }
  if (v18 < 0)
    v45 = v18;
  else
    v45 = v18 & 0xFFFFFFFFFFFFFF8;
  v46 = a2;
  swift_bridgeObjectRetain(v18);
  v47 = a1;
  v19 = (id)_CocoaArrayWrapper.endIndex.getter(v45);
  if (!v19)
    goto LABEL_38;
LABEL_3:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    v22 = *(id *)(v18 + 32);
  }
  v23 = v22;
  swift_bridgeObjectRelease(v18);
  v24 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v25 = a4;
  v26 = v23;
  v27 = static NSObject.== infix(_:_:)(v26, v25);

  if ((v27 & 1) == 0)
  {
LABEL_39:
    v48 = *(id *)DOCLog.UI.unsafeMutableAddressor(v28);
    v49 = static os_log_type_t.debug.getter();
    v50 = sub_10006922C((uint64_t *)&unk_100644560);
    v51 = swift_allocObject(v50, 72, 7);
    *(_OWORD *)(v51 + 16) = xmmword_1004D9670;
    *(_QWORD *)(v51 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    *(_QWORD *)(v51 + 64) = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    *(_QWORD *)(v51 + 32) = a1;
    v19 = a1;
    os_log(_:dso:log:type:_:)("The first location changed. We should not load the parent anymore", 65, 2, &_mh_execute_header, v48, v49, v51);

    swift_bridgeObjectRelease(v51);
    v52 = swift_allocObject(&unk_1005D0748, 32, 7);
    *(_QWORD *)(v52 + 16) = a6;
    *(_QWORD *)(v52 + 24) = a7;
    v65 = sub_10010DF60;
    v66 = v52;
    aBlock = _NSConcreteStackBlock;
    v62 = 1107296256;
    v63 = sub_10004A82C;
    v64 = &unk_1005D0760;
    v53 = _Block_copy(&aBlock);
    v54 = v66;
    swift_retain();
    swift_release(v54);
    DOCRunInMainThread(v53);
    _Block_release(v53);
    a1 = a2;
    goto LABEL_40;
  }
  v60 = a6;
  v9 = a9;
  v59 = a8;
  swift_beginAccess(a8 + 16, &aBlock, 33, 0);
  v19 = a2;
  a1 = a1;
  sub_100459518(0, 0, (uint64_t)a1, (uint64_t)a2);
  swift_endAccess(&aBlock);
  a2 = (void *)(a9 >> 62);
  if (!(a9 >> 62))
  {
    v29 = *(_QWORD *)((a9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v29 >= 1)
      v30 = 1;
    else
      v30 = *(_QWORD *)((a9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a9);
    if (v29 >= (unint64_t)v30)
    {
LABEL_12:
      if ((v9 & 0xC000000000000001) != 0 && (unint64_t)v29 >= 2)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v31 = v30;
        do
        {
          v32 = v31 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v31);
          v31 = v32;
        }
        while (v29 != v32);
      }
      if (a2)
      {
        if (v9 < 0)
          v36 = v9;
        else
          v36 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v33 = _CocoaArrayWrapper.subscript.getter(v30, v29, v36);
        v34 = v37;
        v30 = v38;
        v35 = v39;
        swift_bridgeObjectRelease_n(v9, 2);
        if ((v35 & 1) == 0)
          goto LABEL_23;
      }
      else
      {
        v33 = v9 & 0xFFFFFFFFFFFFFF8;
        v34 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
        v35 = (2 * v29) | 1;
        if ((v35 & 1) == 0)
          goto LABEL_23;
      }
      v40 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v41 = swift_unknownObjectRetain_n(v33, 2);
      v42 = (_QWORD *)swift_dynamicCastClass(v41, v40);
      if (!v42)
      {
        swift_unknownObjectRelease(v33);
        v42 = _swiftEmptyArrayStorage;
      }
      v43 = v42[2];
      v44 = swift_release(v42);
      if (__OFSUB__(v35 >> 1, v30))
      {
        __break(1u);
      }
      else
      {
        v44 = v33;
        if (v43 == (v35 >> 1) - v30)
        {
          v30 = swift_dynamicCastClass(v33, v40);
          if (!v30)
          {
            swift_unknownObjectRelease(v33);
            v30 = (uint64_t)_swiftEmptyArrayStorage;
          }
LABEL_30:
          swift_unknownObjectRelease(v33);
          v24 = v59;
          a6 = v60;
          if ((v30 & 0x8000000000000000) == 0 && (v30 & 0x4000000000000000) == 0)
          {
            if (*(_QWORD *)(v30 + 16))
            {
LABEL_33:
              sub_1001E65A0(v30, a6, a7, a3, v24);
              swift_release(v30);
LABEL_40:

              return;
            }
LABEL_55:
            swift_release(v30);
            v56 = swift_allocObject(&unk_1005D0798, 32, 7);
            *(_QWORD *)(v56 + 16) = a6;
            *(_QWORD *)(v56 + 24) = a7;
            v65 = sub_10010DF60;
            v66 = v56;
            aBlock = _NSConcreteStackBlock;
            v62 = 1107296256;
            v63 = sub_10004A82C;
            v64 = &unk_1005D07B0;
            v57 = _Block_copy(&aBlock);
            v58 = v66;
            swift_retain();
            swift_release(v58);
            DOCRunInMainThread(v57);
            _Block_release(v57);
            goto LABEL_40;
          }
LABEL_54:
          if (_CocoaArrayWrapper.endIndex.getter(v30))
            goto LABEL_33;
          goto LABEL_55;
        }
      }
      swift_unknownObjectRelease(v44);
LABEL_23:
      v30 = (uint64_t)sub_10028F8F0(v33, v34, v30, v35);
      goto LABEL_30;
    }
    goto LABEL_53;
  }
LABEL_43:
  if (v9 < 0)
    a6 = v9;
  else
    a6 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v55 = _CocoaArrayWrapper.endIndex.getter(a6);
  if ((v55 & 0x8000000000000000) == 0)
  {
    v29 = v55;
    if (v55 >= 1)
      v30 = 1;
    else
      v30 = v55;
    swift_bridgeObjectRetain(v9);
    v24 = _CocoaArrayWrapper.endIndex.getter(a6);
    swift_bridgeObjectRelease(v9);
    if (v24 >= v30)
    {
      swift_bridgeObjectRetain(v9);
      v24 = _CocoaArrayWrapper.endIndex.getter(a6);
      swift_bridgeObjectRelease(v9);
      if (v24 >= v29)
        goto LABEL_12;
      __break(1u);
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  __break(1u);
}

void sub_1001E73D8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[5];
  _QWORD *v19;

  v12 = (_QWORD *)swift_allocObject(&unk_1005D0518, 64, 7);
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v12[7] = a1;
  v18[4] = sub_1001F57D4;
  v19 = v12;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10004A82C;
  v18[3] = &unk_1005D0530;
  v13 = _Block_copy(v18);
  v14 = v19;
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a1);
  v15 = a3;
  v16 = a4;
  v17 = a5;
  swift_retain();
  swift_release(v14);
  DOCRunInMainThread(v13);
  _Block_release(v13);
}

uint64_t sub_1001E74CC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v18;

  if (a1)
  {
    v8 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
    v9 = static os_log_type_t.error.getter(v8);
    v10 = sub_10006922C((uint64_t *)&unk_100644560);
    v11 = swift_allocObject(v10, 112, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v11 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v11 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v11 + 32) = a3;
    v12 = a3;
    v13 = _convertErrorToNSError(_:)(a1);
    *(_QWORD *)(v11 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v11 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v11 + 72) = v13;
    os_log(_:dso:log:type:_:)("Error fetching the parent of item %@ error %@", 45, 2, &_mh_execute_header, v8, v9, v11);

    return swift_bridgeObjectRelease(v11);
  }
  else
  {
    v18 = swift_allocObject(&unk_1005D0568, 32, 7);
    *(_QWORD *)(v18 + 16) = a5;
    *(_QWORD *)(v18 + 24) = a4;
    swift_retain();
    sub_1001E65A0(a6, (uint64_t)sub_1001F57E4, v18, a4, a5);
    return swift_release(v18);
  }
}

uint64_t sub_1001E7674(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t updated;
  void (**v8)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  void **v31;
  void *v32;
  void *v33;
  void *Strong;
  void (**v35)(char *, _QWORD, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  NSString v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (**v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[3];
  char v64[24];
  uint64_t v65;
  char v66[24];

  v4 = sub_10006922C((uint64_t *)&unk_1006475B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  v8 = *(void (***)(char *, _QWORD, uint64_t, uint64_t))(updated - 8);
  __chkstk_darwin(updated);
  v57 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a1 + 16);
  result = swift_beginAccess(a1 + 16, v66, 0, 0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v59 = v8;
    v14 = (uint64_t *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v64, 1, 0);
    v60 = v14;
    v65 = *v14;
    v63[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v65);
    swift_bridgeObjectRetain(v12);
    specialized ContiguousArray.reserveCapacity(_:)(v13);
    v15 = 32;
    do
    {
      v16 = *(id *)(v12 + v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      v17 = *(_QWORD *)(v63[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
      specialized ContiguousArray._endMutation()(v18);
      v15 += 16;
      --v13;
    }
    while (v13);
    v19 = v63[0];
    swift_bridgeObjectRelease(v12);
    sub_100459698(0, 0, v19);
    v20 = v65;
    v21 = swift_bridgeObjectRetain(v65);
    v22 = v57;
    UUID.init()(v21);
    v23 = *(int *)(updated + 20);
    v56 = v20;
    *(_QWORD *)(v22 + v23) = v20;
    sub_10007C6DC(v22, (uint64_t)v6, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    v59[7](v6, 0, 1, updated);
    v24 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation];
    swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation], v63, 33, 0);
    sub_1001F58C0((uint64_t)v6, v24);
    swift_endAccess(v63);
    swift_beginAccess(v10, v63, 0, 0);
    v25 = *v10;
    v26 = *(_QWORD *)(v25 + 16);
    v58 = v25;
    if (v26)
    {
      v27 = OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate;
      swift_bridgeObjectRetain_n(v25, 2);
      v29 = v26 - 1;
      if ((unint64_t)(v26 - 1) < *(_QWORD *)(v25 + 16))
      {
        v30 = &a2[v27];
        v31 = (void **)(v25 + 16 * v26 + 24);
        do
        {
          v33 = *(v31 - 1);
          v32 = *v31;
          Strong = (void *)swift_unknownObjectWeakLoadStrong(v30, v28);
          v35 = v32;
          if (Strong)
          {
            objc_msgSend(Strong, "hierarchyController:willPrepend:source:", a2, v33, v35);
            swift_unknownObjectRelease(Strong);
          }
          else
          {
            v36 = v33;
          }
          v37 = *v60;
          v62 = v37;
          if ((unint64_t)v37 >> 62)
          {
            if (v37 < 0)
              v51 = v37;
            else
              v51 = v37 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(v37, 2);
            v52 = v33;
            v53 = _CocoaArrayWrapper.endIndex.getter(v51);
            swift_bridgeObjectRelease(v37);
            if (v53 < 0)
            {
              __break(1u);
              break;
            }
          }
          else
          {
            v38 = v33;
            swift_bridgeObjectRetain(v37);
          }
          v59 = v35;
          sub_100459504(0, 0, (uint64_t)v33);
          v39 = v62;
          v61 = a2;
          KeyPath = swift_getKeyPath(&unk_1004DCBD8);
          _KeyValueCodingAndObserving.willChangeValue<A>(for:)(KeyPath, &protocol witness table for NSObject);
          v61 = a2;
          v41 = swift_getKeyPath(&unk_1004DCC18);
          _KeyValueCodingAndObserving.willChangeValue<A>(for:)(v41, &protocol witness table for NSObject);
          v42 = String._bridgeToObjectiveC()();
          objc_msgSend(a2, "willChangeValueForKey:", v42);

          v43 = *v60;
          *v60 = v39;
          swift_bridgeObjectRelease(v43);
          v44 = String._bridgeToObjectiveC()();
          objc_msgSend(a2, "didChangeValueForKey:", v44);

          v61 = a2;
          v45 = swift_getKeyPath(&unk_1004DCC18);
          _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v45, &protocol witness table for NSObject);
          v61 = a2;
          v46 = swift_getKeyPath(&unk_1004DCBD8);
          _KeyValueCodingAndObserving.didChangeValue<A>(for:)(v46, &protocol witness table for NSObject);
          v48 = (void *)swift_unknownObjectWeakLoadStrong(v30, v47);
          if (v48)
          {
            v49 = v48;
            v50 = v59;
            objc_msgSend(v48, "hierarchyController:didPrepend:source:", a2, v33, v59);

            swift_unknownObjectRelease(v49);
            if (!v29)
              goto LABEL_23;
          }
          else
          {

            if (!v29)
              goto LABEL_23;
          }
          --v29;
          v31 -= 2;
        }
        while (v29 < *(_QWORD *)(v58 + 16));
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease_n(v58, 2);
    }
    v54 = v57;
    sub_1001D5D30(v57);
    sub_10007C720(v54, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    return swift_bridgeObjectRelease(v56);
  }
  return result;
}

void sub_1001E7B54(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v17[5];
  _QWORD *v18;

  v12 = (_QWORD *)swift_allocObject(&unk_1005CFD70, 64, 7);
  v12[2] = a1;
  v12[3] = a3;
  v12[4] = a2;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  v17[4] = sub_1000AC7E0;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10004A82C;
  v17[3] = &unk_1005CFD88;
  v13 = _Block_copy(v17);
  v14 = v18;
  swift_unknownObjectRetain(a1);
  v15 = a3;
  swift_errorRetain(a2);
  v16 = a4;
  swift_retain();
  swift_release(v14);
  DOCRunInMainThread(v13);
  _Block_release(v13);
}

void sub_1001E7C44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;
  _QWORD v11[5];
  _QWORD *v12;

  v7 = (_QWORD *)swift_allocObject(&unk_1005CF7A8, 40, 7);
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a1;
  v11[4] = sub_1001F4FFC;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004A82C;
  v11[3] = &unk_1005CF7C0;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = a1;
  swift_retain();
  swift_release(v9);
  DOCRunInMainThread(v8);
  _Block_release(v8);
}

void DOCHierarchyController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCHierarchyController", 28, "init()", 6, 0);
  __break(1u);
}

double sub_1001E7DE4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v7);
  v11 = (void *)static OS_dispatch_queue.global(qos:)(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_allocObject(&unk_1005D0D10, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_1001F61E4;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D0D28;
  v13 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_10006922C((uint64_t *)&unk_100647540);
  v16 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v3, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

void sub_1001E8058(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *__ptr32 *v36;
  unint64_t v37;
  uint64_t v38;
  id *v39;
  id *v40;
  id *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  dispatch_group_t v45;
  SEL *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  id *v50;
  NSObject *v51;
  id v52;
  void *v53;
  _QWORD *v54;
  id *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  id v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  dispatch_group_t v99;
  uint64_t *v100;
  __int128 v101;
  id v102;
  id *v103;
  void **aBlock;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  char v110[24];
  char v111[8];

  ObjectType = swift_getObjectType(a1);
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DispatchTime(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v87 = (char *)&v83 - v9;
  v103 = (id *)DOCLog.UI.unsafeMutableAddressor(v10);
  v11 = *v103;
  v12 = static os_log_type_t.debug.getter(v11);
  v102 = (id)sub_10006922C((uint64_t *)&unk_100644560);
  v13 = swift_allocObject(v102, 72, 7);
  v101 = xmmword_1004D9670;
  *(_OWORD *)(v13 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v13 + 56) = ObjectType;
  *(_QWORD *)(v13 + 64) = sub_10005A360((unint64_t *)&unk_1006475E0, type metadata accessor for DOCHierarchyController, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v13 + 32) = a1;
  v14 = a1;
  os_log(_:dso:log:type:_:)("Locations were invalidated. Re-evaluating locations in hierarchy controller '%@'. Current locations:", 100, 2, &_mh_execute_header, v11, v12, v13);

  swift_bridgeObjectRelease(v13);
  v98 = v14;
  v15 = &v14[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(v15, v111, 0, 0);
  v16 = *(_QWORD *)v15;
  v17 = *(_QWORD *)v15 >> 62;
  v85 = v3;
  v84 = v4;
  v83 = v6;
  v100 = (uint64_t *)v15;
  if (v17)
  {
    if (v16 < 0)
      v15 = (char *)v16;
    else
      v15 = (char *)(v16 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain_n(v16, 2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v16, 2);
    if (v18)
    {
LABEL_3:
      if (v18 < 1)
      {
        __break(1u);
        goto LABEL_52;
      }
      v20 = 0;
      do
      {
        if ((v16 & 0xC000000000000001) != 0)
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v16);
        else
          v21 = *(id *)(v16 + 8 * v20 + 32);
        v22 = v21;
        ++v20;
        v23 = *v103;
        v24 = static os_log_type_t.debug.getter(v23);
        v25 = swift_allocObject(v102, 72, 7);
        *(_OWORD *)(v25 + 16) = v101;
        *(_QWORD *)(v25 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        *(_QWORD *)(v25 + 64) = sub_100083450((unint64_t *)&qword_100647578, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        *(_QWORD *)(v25 + 32) = v22;
        v26 = v22;
        os_log(_:dso:log:type:_:)("- %@", 4, 2, &_mh_execute_header, v23, v24, v25);

        swift_bridgeObjectRelease(v25);
      }
      while (v18 != v20);
    }
  }
  swift_bridgeObjectRelease_n(v16, 2);
  v99 = dispatch_group_create();
  v16 = (uint64_t)v100;
  v27 = *v100;
  if ((unint64_t)*v100 >> 62)
    goto LABEL_38;
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v15 = (char *)&off_10061F000;
    if (v28 <= 1)
      goto LABEL_21;
    swift_beginAccess(v16, &aBlock, 32, 0);
    v19 = *(_QWORD *)v16;
    if ((*(_QWORD *)v16 & 0xC000000000000001) == 0)
      break;
LABEL_52:
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v19);
LABEL_19:
    v30 = v29;
    swift_endAccess(&aBlock);
    v31 = objc_msgSend(v30, *((SEL *)v15 + 319));

    if (v31)
    {
      v103 = (id *)objc_msgSend(v31, "parentItemIdentifier");

      goto LABEL_22;
    }
LABEL_21:
    v103 = NSFileProviderRootContainerItemIdentifier;
LABEL_22:
    v97 = swift_allocObject(&unk_1005D0D60, 24, 7);
    *(_QWORD *)(v97 + 16) = 0;
    v96 = swift_allocObject(&unk_1005D0D88, 24, 7);
    *(_QWORD *)(v96 + 16) = 0x7FFFFFFFFFFFFFFFLL;
    v32 = swift_allocObject(&unk_1005D0D88, 24, 7);
    v95 = v32;
    *(_QWORD *)(v32 + 16) = 0;
    v33 = (_QWORD *)(v32 + 16);
    v34 = *(_QWORD *)v16;
    if (*(_QWORD *)v16 >> 62)
    {
      if (v34 < 0)
        v61 = *(_QWORD *)v16;
      else
        v61 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)v16);
      v35 = _CocoaArrayWrapper.endIndex.getter(v61);
      v36 = &off_1004D4000;
      if (!v35)
      {
LABEL_46:
        swift_bridgeObjectRelease(v34);
        v62 = v86;
        static DispatchTime.now()(v63);
        v64 = v87;
        + infix(_:_:)(v62, 3.0);
        v65 = *(void (**)(char *, uint64_t))(v88 + 8);
        v66 = v89;
        v65(v62, v89);
        v67 = OS_dispatch_group.wait(timeout:)(v64) & 1;
        v65(v64, v66);
        v68 = static DispatchTimeoutResult.== infix(_:_:)(v67, 1);
        if ((v68 & 1) != 0)
        {
          v69 = Logger.UI.unsafeMutableAddressor(v68);
          v70 = v84;
          v71 = v83;
          v72 = v85;
          v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, v69, v85);
          v74 = Logger.logObject.getter(v73);
          v75 = static os_log_type_t.error.getter(v74);
          if (os_log_type_enabled(v74, v75))
          {
            v76 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v76 = 0;
            _os_log_impl((void *)&_mh_execute_header, v74, v75, "Time-out occurred for validating locations. Continuing manually...", v76, 2u);
            swift_slowDealloc(v76, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
        }
        v77 = swift_allocObject(&unk_1005D0DB0, 32, 7);
        v78 = v97;
        v79 = v98;
        *(_QWORD *)(v77 + 16) = v97;
        *(_QWORD *)(v77 + 24) = v79;
        v108 = sub_1001F6200;
        v109 = v77;
        aBlock = _NSConcreteStackBlock;
        v105 = 1107296256;
        v106 = sub_10004A82C;
        v107 = &unk_1005D0DC8;
        v80 = _Block_copy(&aBlock);
        v81 = v109;
        v82 = v79;
        swift_retain();
        swift_release(v81);
        DOCRunInMainThread(v80);
        _Block_release(v80);
        swift_release(v78);
        swift_release(v96);
        swift_release(v95);

        return;
      }
    }
    else
    {
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)v16);
      v36 = &off_1004D4000;
      if (!v35)
        goto LABEL_46;
    }
    v93 = OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager;
    v37 = v34 & 0xC000000000000001;
    swift_beginAccess(v33, v110, 1, 0);
    v16 = 4;
    v38 = *((_QWORD *)v36 + 409);
    v92 = v34;
    v94 = v33;
    v91 = v35;
    v90 = v34 & 0xC000000000000001;
    while (1)
    {
      v27 = v16 - 4;
      v41 = v37
          ? (id *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v34)
          : (id *)*(id *)(v34 + 8 * v16);
      v40 = v41;
      v42 = v16 - 3;
      if (__OFADD__(v27, 1))
        break;
      v43 = (uint64_t *)objc_msgSend(v41, *((SEL *)v15 + 319));
      if (v43)
      {
        v44 = v43;
        if ((objc_msgSend(v40, "isRoot") & 1) == 0)
        {
          v100 = v44;
          v45 = v99;
          dispatch_group_enter(v99);
          v46 = (SEL *)v15;
          v47 = v95;
          v102 = *(id *)(v95 + 16);
          v48 = (_QWORD *)swift_allocObject(&unk_1005D0E00, 56, 7);
          v48[2] = v40;
          v48[3] = v45;
          v49 = v96;
          v48[4] = v47;
          v48[5] = v49;
          v48[6] = v97;
          v50 = v103;
          *(_QWORD *)&v101 = v40;
          v51 = v45;
          swift_retain();
          swift_retain();
          v52 = objc_msgSend((id)v101, v46[319], swift_retain().n128_f64[0]);
          if (!v52)
            goto LABEL_54;
          v53 = v52;
          v54 = (_QWORD *)swift_allocObject(&unk_1005D0E28, 48, 7);
          v54[2] = sub_1001F624C;
          v54[3] = v48;
          v54[4] = v102;
          v54[5] = v50;
          v102 = *(id *)&v98[v93];
          v55 = v50;
          v27 = (uint64_t)objc_msgSend(v53, "itemID", swift_retain().n128_f64[0]);
          v56 = swift_allocObject(&unk_1005D0E50, 32, 7);
          *(_QWORD *)(v56 + 16) = sub_1001F6288;
          *(_QWORD *)(v56 + 24) = v54;
          v108 = sub_10010DF60;
          v109 = v56;
          aBlock = _NSConcreteStackBlock;
          v105 = v38;
          v106 = sub_100083540;
          v107 = &unk_1005D0E68;
          v57 = _Block_copy(&aBlock);
          v58 = v109;
          swift_retain();
          *(_QWORD *)&v59 = swift_release(v58).n128_u64[0];
          objc_msgSend(v102, "fetchItemForItemID:completionHandler:", v27, v57, v59);
          _Block_release(v57);

          swift_release(v48);
          swift_release(v54);

          if (__OFADD__(*v94, 1))
          {
            __break(1u);
            break;
          }
          ++*v94;
          v15 = (char *)&off_10061F000;
          v34 = v92;
          v35 = v91;
          v37 = v90;
          v44 = v100;
        }
        v39 = (id *)objc_msgSend(v44, "itemIdentifier", v83, v84, v85);

        v40 = v103;
        v103 = v39;
      }

      ++v16;
      if (v42 == v35)
        goto LABEL_46;
    }
    __break(1u);
LABEL_38:
    if (v27 < 0)
      v60 = v27;
    else
      v60 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v27);
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v29 = *(id *)(v19 + 40);
    goto LABEL_19;
  }
  __break(1u);
LABEL_54:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002ELL, 0x8000000100518740, "Files/DOCHierarchyController.swift", 34, 2, 2042, 0);
  __break(1u);
}

void sub_1001E8A84(uint64_t a1, uint64_t a2, void *a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v28;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];

  v11 = a1;
  v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(a1);
  v13 = static os_log_type_t.debug.getter(v12);
  v14 = sub_10006922C((uint64_t *)&unk_100644560);
  v15 = swift_allocObject(v14, 152, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004D9880;
  v28 = a3;
  v16 = objc_msgSend(a3, "shortDescription");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v20 = sub_10006A638();
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  *(_QWORD *)(v15 + 96) = &type metadata for Int;
  *(_QWORD *)(v15 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 72) = a2;
  v21 = 28494;
  if ((v11 & 1) != 0)
    v21 = 7562585;
  v22 = 0xE200000000000000;
  if ((v11 & 1) != 0)
    v22 = 0xE300000000000000;
  *(_QWORD *)(v15 + 136) = &type metadata for String;
  *(_QWORD *)(v15 + 144) = v20;
  *(_QWORD *)(v15 + 112) = v21;
  *(_QWORD *)(v15 + 120) = v22;
  os_log(_:dso:log:type:_:)("Location '%@' at depth %d is valid: %@", 38, 2, &_mh_execute_header, v12, v13, v15);

  swift_bridgeObjectRelease(v15);
  if ((v11 & 1) != 0)
  {
    dispatch_group_leave(a4);
  }
  else
  {
    v23 = (_QWORD *)(a6 + 16);
    swift_beginAccess(a5 + 16, v33, 0, 0);
    v24 = *(_QWORD *)(a5 + 16);
    swift_beginAccess(a6 + 16, v32, 0, 0);
    if (v24 < *(_QWORD *)(a6 + 16))
    {
      swift_beginAccess(v23, v31, 1, 0);
      *v23 = v24;
      swift_beginAccess(a7 + 16, v30, 1, 0);
      v25 = *(void **)(a7 + 16);
      *(_QWORD *)(a7 + 16) = v28;

      v26 = v28;
    }
    dispatch_group_leave(a4);
  }
}

void sub_1001E8C90(uint64_t a1, char *a2)
{
  uint64_t ObjectType;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21[24];

  ObjectType = swift_getObjectType(a2);
  swift_beginAccess(a1 + 16, v21, 0, 0);
  v5 = *(void **)(a1 + 16);
  if (v5)
  {
    v6 = (uint64_t *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess(&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v20, 0, 0);
    v7 = *v6;
    v8 = v5;
    swift_bridgeObjectRetain(v7);
    v9 = sub_10008979C((uint64_t)v8, v7);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
    {
      v11 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
      v12 = static os_log_type_t.debug.getter(v11);
      v13 = sub_10006922C((uint64_t *)&unk_100644560);
      v14 = swift_allocObject(v13, 112, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1004D4CE0;
      v15 = objc_msgSend(v8, "shortDescription");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      *(_QWORD *)(v14 + 56) = &type metadata for String;
      *(_QWORD *)(v14 + 64) = sub_10006A638();
      *(_QWORD *)(v14 + 32) = v16;
      *(_QWORD *)(v14 + 40) = v18;
      *(_QWORD *)(v14 + 96) = ObjectType;
      *(_QWORD *)(v14 + 104) = sub_10005A360((unint64_t *)&unk_1006475E0, type metadata accessor for DOCHierarchyController, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v14 + 72) = a2;
      v19 = a2;
      os_log(_:dso:log:type:_:)("Will drop everything starting with and including location '%@' in hierarchy controller '%@'", 91, 2, &_mh_execute_header, v11, v12, v14);

      swift_bridgeObjectRelease(v14);
      sub_1001F3B88((uint64_t)v8);
    }

  }
}

uint64_t sub_1001E8E78(void *a1, uint64_t a2, uint64_t (*a3)(id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;

  v8 = 0;
  if (!a2 && a1)
  {
    v10 = a1;
    v11 = objc_msgSend(v10, "effectiveParentItemIdentifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a6);
    if (v12 == v15 && v14 == v16)
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    else
    {
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);

      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) == 0 && !objc_msgSend(v10, "isAppContainer"))
        goto LABEL_13;
    }
    if (objc_msgSend(v10, "isActionable"))
    {
      v8 = objc_msgSend(v10, "isReadable");
LABEL_14:

      return a3(v8, a5);
    }
LABEL_13:
    v8 = 0;
    goto LABEL_14;
  }
  return a3(v8, a5);
}

void sub_1001E8FA4(char *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  char *v27;
  id v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  char *v32;
  id v33;
  void **aBlock;
  uint64_t v35;
  void (*v36)(uint64_t, void *, void *);
  void *v37;
  void *v38;
  _QWORD *v39;

  if (!a1 || (v9 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain]) == 0)
  {
    a2(0);
    return;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
  if (v13 == a4 && v14 == a5)
  {
    v21 = a1;
    v22 = v9;
    swift_bridgeObjectRelease(a5);
    goto LABEL_11;
  }
  v16 = v14;
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a4, a5, v13, v14, 0);
  v18 = a1;
  v19 = v9;
  swift_bridgeObjectRelease(v16);
  if ((v17 & 1) != 0)
  {
LABEL_11:
    v33 = 0;
    goto LABEL_12;
  }
  v20 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain(a5);
  v33 = sub_100086818(a4, a5, 0);
LABEL_12:
  if (objc_msgSend(a6, "isPickerUI") && (sub_1001F427C(v33, a6) & 1) == 0)
  {
    v28 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v29 = (_QWORD *)swift_allocObject(&unk_1005CF690, 56, 7);
    v29[2] = a1;
    v29[3] = a4;
    v29[4] = a5;
    v29[5] = a2;
    v29[6] = a3;
    v38 = sub_1001F4FE4;
    v39 = v29;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100083540;
    v37 = &unk_1005CF6A8;
    v30 = _Block_copy(&aBlock);
    v31 = v39;
    v32 = a1;
    swift_bridgeObjectRetain(a5);
    swift_retain();
    swift_release(v31);
    objc_msgSend(v28, "doc_fetchRootItemForProviderDomain:completionHandler:", v9, v30);

    _Block_release(v30);
  }
  else
  {
    v23 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v24 = (_QWORD *)swift_allocObject(&unk_1005CF640, 40, 7);
    v24[2] = a1;
    v24[3] = a2;
    v24[4] = a3;
    v38 = sub_1001F0EE8;
    v39 = v24;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100083540;
    v37 = &unk_1005CF658;
    v25 = _Block_copy(&aBlock);
    v26 = v39;
    v27 = a1;
    swift_retain();
    swift_release(v26);
    objc_msgSend(v23, "fetchDefaultLocationForApplicationRecord:defaultProviderDomain:completionHandler:", v33, v9, v25);
    _Block_release(v25);

  }
}

void sub_1001E92A4(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock;
  _QWORD v54[4];
  _QWORD *v55;

  v50 = a6;
  v51 = a7;
  v49 = a5;
  v47 = a4;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v14 = swift_errorRetain(a2);
    v48 = *(id *)DOCLog.UI.unsafeMutableAddressor(v14);
    LODWORD(v46) = static os_log_type_t.error.getter(v48);
    v15 = sub_10006922C((uint64_t *)&unk_100644560);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1004D9670;
    v17 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v16 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v16 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v16 + 32) = v17;
    v18 = v48;
    os_log(_:dso:log:type:_:)("getDefaultSaveLocation: Error from File Provider when fetchDefaultLocation: %@", 78, 2, &_mh_execute_header, v48, v46, v16);

    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a2);
  }
  v19 = objc_msgSend(a3, "identifier");
  v48 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v19, a1);

  v21 = Logger.UI.unsafeMutableAddressor(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
  v22 = v49;
  swift_bridgeObjectRetain_n(v49, 2);
  v23 = a1;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v44 = v13;
    v46 = v11;
    v26 = swift_slowAlloc(22, -1);
    v27 = v22;
    v28 = swift_slowAlloc(64, -1);
    v52 = v28;
    *(_DWORD *)v26 = 136315394;
    swift_bridgeObjectRetain(v27);
    aBlock = sub_1000544FC(v47, v27, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v54);
    swift_bridgeObjectRelease_n(v27, 3);
    *(_WORD *)(v26 + 12) = 2080;
    v45 = v10;
    if (a1)
    {
      v29 = objc_msgSend(v23, "displayName");
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v32 = v31;

    }
    else
    {
      v30 = 0;
      v32 = 0;
    }
    aBlock = v30;
    v54[0] = v32;
    v33 = sub_10006922C(&qword_100648C80);
    v34 = String.init<A>(describing:)(&aBlock, v33);
    v36 = v35;
    aBlock = sub_1000544FC(v34, v35, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v54);

    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Obtained default location for a picker that presented from an app that supports open in place: %s. Location: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
  }
  else
  {

    swift_bridgeObjectRelease_n(v22, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v37 = (_QWORD *)swift_allocObject(&unk_1005CF6E0, 40, 7);
  v38 = v51;
  v37[2] = v50;
  v37[3] = v38;
  v39 = v48;
  v37[4] = v48;
  v54[3] = sub_1000AD138;
  v55 = v37;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v54[0] = 1107296256;
  v54[1] = sub_10004A82C;
  v54[2] = &unk_1005CF6F8;
  v40 = _Block_copy(&aBlock);
  v41 = v55;
  swift_retain();
  v42 = v39;
  swift_release(v41);
  DOCRunInMainThread(v40);
  _Block_release(v40);

}

void sub_1001E96FC(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  if (a2)
  {
    v10 = swift_errorRetain(a2);
    v23 = a1;
    v11 = a4;
    v12 = *(id *)DOCLog.UI.unsafeMutableAddressor(v10);
    v13 = static os_log_type_t.error.getter(v12);
    v14 = sub_10006922C((uint64_t *)&unk_100644560);
    v15 = swift_allocObject(v14, 72, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1004D9670;
    v16 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(v15 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v15 + 64) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v15 + 32) = v16;
    os_log(_:dso:log:type:_:)("getDefaultSaveLocation: Error from File Provider when fetchDefaultLocation: %@", 78, 2, &_mh_execute_header, v12, v13, v15);

    a4 = v11;
    a1 = v23;
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a2);
  }
  v17 = objc_msgSend(a3, "identifier");
  v18 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v17, a1);

  v19 = (_QWORD *)swift_allocObject(&unk_1005CF730, 40, 7);
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = v18;
  aBlock[4] = sub_1000AD138;
  v25 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005CF748;
  v20 = _Block_copy(aBlock);
  v21 = v25;
  swift_retain();
  v22 = v18;
  swift_release(v21);
  DOCRunInMainThread(v20);
  _Block_release(v20);

}

uint64_t sub_1001E9908(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1001E9928(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  os_log_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  os_log_t v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(FPProviderDomain);
  v42 = 0;
  v9 = a1;
  v10 = objc_msgSend(v8, "providerDomainForItem:cachePolicy:error:", v9, 3, &v42);
  v11 = v42;
  if (v10)
  {
    v12 = v10;
    v13 = v42;

    v14 = sub_100087190(v12, a2);
  }
  else
  {
    v15 = v42;
    v16 = _convertNSErrorToError(_:)(v11);

    swift_willThrow(v17);
    v19 = Logger.DocumentManager.unsafeMutableAddressor(v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
    v20 = v9;
    swift_errorRetain(v16);
    v21 = v20;
    v22 = swift_errorRetain(v16);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v38 = (uint64_t *)swift_slowAlloc(8, -1);
      v39 = (void *)swift_slowAlloc(32, -1);
      v42 = v39;
      *(_DWORD *)v25 = 136315394;
      v26 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v37 = v23;
      v27 = DOCNode.nodeDescription.getter(v26);
      v29 = v28;
      v40 = sub_1000544FC(v27, v28, (uint64_t *)&v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);

      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v25 + 12) = 2112;
      swift_errorRetain(v16);
      v30 = _swift_stdlib_bridgeErrorToNSError(v16);
      v40 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      v31 = v38;
      *v38 = v30;
      swift_errorRelease(v16);
      swift_errorRelease(v16);
      v32 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, v24, "Could not fetch provider domain for %s: %@", (uint8_t *)v25, 0x16u);
      v33 = sub_10006922C(&qword_100643AB0);
      v14 = 1;
      swift_arrayDestroy(v31, 1, v33);
      swift_slowDealloc(v31, -1, -1);
      v34 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      swift_errorRelease(v16);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      swift_errorRelease(v16);

      swift_errorRelease(v16);
      swift_errorRelease(v16);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v14 = 1;
    }
  }
  return v14 & 1;
}

void sub_1001E9CA8(char a1, char a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  char v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  _BYTE v25[24];

  v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  v6 = objc_msgSend(v5, "defaultEffectiveTabIdentifierForLocationRestore");
  v7 = sub_100152104((uint64_t)v6);
  v9 = v8;

  if ((v9 & 1) != 0)
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  v10 = sub_1001E9E24(v7);
  v13 = v10;
  v14 = v11;
  v24 = v12;
  if ((a1 & 1) != 0)
    sub_1001EA200(v10, v11, v12, 0);
  if ((a2 & 1) != 0)
  {
    v15 = objc_msgSend(v5, "defaultEffectiveTabIdentifierForLocationRestore");
    v16 = sub_100152104((uint64_t)v15);
    v18 = v17;

    if ((v18 & 1) != 0)
      v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
    swift_beginAccess(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab, v25, 33, 0);
    v19 = (void *)sub_100443FE8(v16);
    v21 = v20;
    v23 = v22;
    swift_endAccess(v25);
    swift_bridgeObjectRelease(v14);

    sub_1001ECE60(v19, v21, v23);
  }
  else
  {
    swift_bridgeObjectRelease(v14);

  }
}

id sub_1001E9E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v41 - v8;
  if (a1 != 2)
  {
    if (a1 == 1)
    {
      v10 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "sharedItemsLocation");
LABEL_12:
      v26 = v10;
      v27 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v28 = swift_allocObject(v27, 40, 7);
      *(_OWORD *)(v28 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v28 + 32) = v26;
      v42 = v28;
      specialized Array._endMutation()(v28);
      return v26;
    }
    goto LABEL_10;
  }
  v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  v12 = objc_msgSend(v11, "defaultLocation");
  if (!v12)
    goto LABEL_14;
  v13 = v12;
  v14 = objc_msgSend(v11, "allowsDisplaying:", v12);
  if (!(_DWORD)v14)
  {

LABEL_14:
    v29 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "defaultLocation");
    v30 = Logger.DocumentManager.unsafeMutableAddressor(objc_msgSend(v29, "setNeedsToResolveHierarchy:", 1));
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v30, v3);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Returning the default defaultLocation as the lastVisitedFullBrowseLocation.", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v35 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v36 = swift_allocObject(v35, 40, 7);
    *(_OWORD *)(v36 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v36 + 32) = v29;
    v42 = v36;
    specialized Array._endMutation()(v36);
    v37 = v42;
    v23 = v29;
    v24 = sub_10015F878(v37, 0);
    a1 = v38;
    swift_bridgeObjectRelease(v37);
    if (!v24)
    {
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:

    return (id)v24;
  }
  v15 = Logger.DocumentManager.unsafeMutableAddressor(v14);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v15, v3);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Returning the configuration specified defaultLocation as the lastVisitedFullBrowseLocation.", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v20 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v21 + 32) = v13;
  v42 = v21;
  specialized Array._endMutation()(v21);
  v22 = v42;
  v23 = v13;
  v24 = sub_10015F878(v22, 0);
  a1 = v25;
  swift_bridgeObjectRelease(v22);
  if (v24)
    goto LABEL_17;
  __break(1u);
LABEL_10:
  if (!a1)
  {
    v10 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
    goto LABEL_12;
  }
LABEL_20:
  type metadata accessor for DOCTab(0);
  v42 = a1;
  result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v40, &v42, v40, &type metadata for UInt);
  __break(1u);
  return result;
}

uint64_t sub_1001EA200(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_lastVisitedLocationSavingQueue);
  v16 = swift_allocObject(&unk_1005CEFC0, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = swift_allocObject(&unk_1005D03B0, 49, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a1;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  *(_BYTE *)(v17 + 48) = a4;
  aBlock[4] = sub_1001F5630;
  v32 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D03C8;
  v18 = _Block_copy(aBlock);
  v19 = a3;
  swift_retain();
  v20 = a1;
  v21 = swift_bridgeObjectRetain(a2);
  static DispatchQoS.unspecified.getter(v21);
  v30 = _swiftEmptyArrayStorage;
  v22 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_10006922C((uint64_t *)&unk_100647540);
  v24 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v23, v24, v10, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  v25 = v32;
  swift_release(v16);
  return swift_release(v25);
}

void sub_1001EA450(uint64_t a1, void *a2, uint64_t a3, void *a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *Strong;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  NSObject *v40;
  uint64_t v41;
  uint8_t *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  Swift::String v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  void *v98;
  id v99;
  id v100;
  int v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t *v104;
  void *v105;
  id v106;
  id v107;
  unint64_t v108;
  id v109;
  char *v110;
  id v111;
  id v112;
  NSObject *v113;
  os_log_type_t v114;
  int v115;
  _BOOL4 v116;
  uint64_t v117;
  char *v118;
  id v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  id v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  void *v130;
  id v131;
  id v132;
  void *v133;
  char *v134;
  uint64_t v135;
  id v136;
  id v137;
  id v138;
  id v139;
  unint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  int v144;
  uint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  id v157;
  void *v158;
  uint64_t i;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  void *v164;
  char *v165;
  id v166;
  char v167;
  Class isa;
  unint64_t v169;
  void *v170;
  char *v171;
  id v172;
  char v173;
  void *v174;
  char *v175;
  id v176;
  char v177;
  char v178;
  id v179;
  uint64_t v180;
  uint64_t j;
  uint64_t v182;
  id v183;
  void *v184;
  id v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  id v198;
  uint64_t v199;
  uint64_t *v200;
  id v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  id v206;
  uint64_t v207;
  void *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  id v214;
  void *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  unint64_t v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  char v225[32];

  LODWORD(v214) = a5;
  v9 = type metadata accessor for Logger(0);
  v219 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v213 = (char *)&v197 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v197 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v197 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v197 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v197 - v24;
  a1 += 16;
  swift_beginAccess(a1, v225, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1, v26);
  if (!Strong)
    return;
  v211 = v20;
  v212 = v17;
  v210 = v12;
  v217 = Strong;
  v218 = v9;
  v28 = OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration;
  v29 = *(id *)&Strong[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  v30 = a2;
  v215 = a4;
  v216 = a3;
  v52 = sub_10015E3D0(v29, a2, a3, a4);
  v54 = v53;
  v207 = v28;
  v208 = v55;
  v209 = v56;

  if (!v54)
  {
    v31 = Logger.DocumentManager.unsafeMutableAddressor(v57);
    v32 = v218;
    v33 = v219;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v25, v31, v218);
    v34 = v215;
    v35 = v215;
    v36 = v30;
    v37 = v216;
    swift_bridgeObjectRetain_n(v216, 2);
    v38 = v35;
    v39 = v36;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v214 = (id)swift_slowAlloc(32, -1);
      v220 = (uint64_t)v214;
      *(_DWORD *)v42 = 136315138;
      v213 = (char *)(v42 + 4);
      v43 = v39;
      swift_bridgeObjectRetain(v37);
      v44 = v38;
      v45 = sub_10015EBFC(v43, v37, v34);
      v47 = v46;

      swift_bridgeObjectRelease(v37);
      v223 = sub_1000544FC(v45, v47, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);

      swift_bridgeObjectRelease_n(v37, 2);
      swift_bridgeObjectRelease(v47);
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v41, "Not persisting (cannot be restored): %s", v42, 0xCu);
      v48 = v214;
      swift_arrayDestroy(v214, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v219 + 8))(v25, v218);
      return;
    }

    swift_bridgeObjectRelease_n(v37, 2);
    v49 = *(void (**)(char *, uint64_t))(v33 + 8);
    v50 = v25;
    v51 = v32;
    goto LABEL_6;
  }
  v220 = 0;
  v221 = 0xE000000000000000;
  v58 = v208;
  v59 = v54;
  v60 = v209;
  swift_bridgeObjectRetain(v209);
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v221);
  v220 = 0xD000000000000012;
  v221 = 0x80000001005182D0;
  v202 = v30;
  if (v52)
  {
    if (v52 == (id)1)
    {
      v61 = 0xE600000000000000;
      v62 = 0x646572616853;
    }
    else if (v52 == (id)2)
    {
      v61 = 0xE600000000000000;
      v62 = 0x6573776F7242;
    }
    else
    {
      v61 = 0xE500000000000000;
      v62 = 0x3F3F3F3F3FLL;
    }
  }
  else
  {
    v61 = 0xE700000000000000;
    v62 = 0x73746E65636552;
  }
  v63 = v61;
  String.append(_:)(*(Swift::String *)&v62);
  swift_bridgeObjectRelease(v61);
  v64._countAndFlagsBits = 41;
  v64._object = (void *)0xE100000000000000;
  String.append(_:)(v64);
  v65 = v221;
  v204 = v220;
  v203 = OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore;
  v66 = v207;
  v67 = objc_msgSend(*(id *)&v217[OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore], "interfaceStateForConfiguration:", *(_QWORD *)&v217[v207]);
  v206 = v67;
  if (!v67)
  {
    v80 = Logger.DocumentManager.unsafeMutableAddressor(0);
    v81 = v219;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v23, v80, v218);
    v82 = v59;
    swift_bridgeObjectRetain_n(v60, 2);
    v83 = v58;
    v84 = v82;
    v85 = v60;
    v86 = v83;
    v87 = swift_bridgeObjectRetain(v65);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.default.getter(v88);
    v90 = v89;
    if (os_log_type_enabled(v88, v89))
    {
      v91 = swift_slowAlloc(22, -1);
      LODWORD(v216) = v90;
      v92 = v91;
      v215 = (void *)swift_slowAlloc(64, -1);
      v220 = (uint64_t)v215;
      *(_DWORD *)v92 = 136315394;
      swift_bridgeObjectRetain(v65);
      v223 = sub_1000544FC(v204, v65, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
      swift_bridgeObjectRelease_n(v65, 3);
      *(_WORD *)(v92 + 12) = 2080;
      v93 = v84;
      swift_bridgeObjectRetain(v85);
      v94 = v86;
      v95 = sub_10015EBFC(v93, v85, v208);
      v97 = v96;

      swift_bridgeObjectRelease(v85);
      v223 = sub_1000544FC(v95, v97, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);

      swift_bridgeObjectRelease_n(v85, 2);
      swift_bridgeObjectRelease(v97);
      _os_log_impl((void *)&_mh_execute_header, v88, (os_log_type_t)v216, "[%s] Not persisting (store is nil): %s", (uint8_t *)v92, 0x16u);
      v98 = v215;
      swift_arrayDestroy(v215, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v92, -1, -1);

      swift_bridgeObjectRelease_n(v85, 2);
      v49 = *(void (**)(char *, uint64_t))(v219 + 8);
    }
    else
    {

      swift_bridgeObjectRelease_n(v65, 2);
      swift_bridgeObjectRelease_n(v85, 4);

      v49 = *(void (**)(char *, uint64_t))(v81 + 8);
    }
    v50 = v23;
    v51 = v218;
LABEL_6:
    v49(v50, v51);
    return;
  }
  v201 = v58;
  v205 = v65;
  if ((v214 & 1) != 0)
  {
    v68 = Logger.DocumentManager.unsafeMutableAddressor(v67);
    v69 = v218;
    v70 = v219;
    v71 = v211;
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v211, v68, v218);
    v72 = v205;
    v73 = swift_bridgeObjectRetain_n(v205, 2);
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.default.getter(v74);
    if (os_log_type_enabled(v74, v75))
    {
      v76 = swift_slowAlloc(22, -1);
      v214 = (id)swift_slowAlloc(64, -1);
      v220 = (uint64_t)v214;
      *(_DWORD *)v76 = 136315394;
      swift_bridgeObjectRetain(v72);
      v223 = sub_1000544FC(v204, v72, &v220);
      v200 = &v224;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
      swift_bridgeObjectRelease_n(v72, 3);
      *(_WORD *)(v76 + 12) = 2080;
      if (v52)
      {
        v77 = v206;
        if (v52 == (id)2)
        {
          v78 = 0xE600000000000000;
          v79 = 0x6573776F7242;
        }
        else if (v52 == (id)1)
        {
          v78 = 0xE600000000000000;
          v79 = 0x646572616853;
        }
        else
        {
          v78 = 0xE500000000000000;
          v79 = 0x3F3F3F3F3FLL;
        }
      }
      else
      {
        v78 = 0xE700000000000000;
        v77 = v206;
        v79 = 0x73746E65636552;
      }
      v223 = sub_1000544FC(v79, v78, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, v200);
      swift_bridgeObjectRelease(v78);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "[%s] Persisting selected tab %s", (uint8_t *)v76, 0x16u);
      v99 = v214;
      swift_arrayDestroy(v214, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v99, -1, -1);
      swift_slowDealloc(v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v219 + 8))(v211, v218);
    }
    else
    {

      swift_bridgeObjectRelease_n(v72, 2);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);
      v77 = v206;
    }
    objc_msgSend(v77, "updateMostRecentlyVisitedBrowseSourceToTab:", v52);
    v66 = v207;
  }
  v100 = objc_msgSend(*(id *)&v217[v66], "saveLastVisitedLocation");
  v101 = (int)v100;
  v102 = Logger.DocumentManager.unsafeMutableAddressor(v100);
  v103 = v219;
  v104 = *(uint64_t **)(v219 + 16);
  if (v101)
  {
    v198 = v52;
    v199 = v102;
    v200 = v104;
    ((void (*)(char *))v104)(v212);
    v105 = v215;
    v106 = v59;
    swift_bridgeObjectRetain_n(v60, 2);
    v107 = v201;
    v108 = v205;
    swift_bridgeObjectRetain_n(v205, 2);
    v109 = v202;
    swift_bridgeObjectRetain_n(v216, 2);
    v213 = v105;
    v110 = (char *)v106;
    v111 = v107;
    v112 = v109;
    v113 = Logger.logObject.getter(v112);
    v114 = static os_log_type_t.default.getter(v113);
    v115 = v114;
    v116 = os_log_type_enabled(v113, v114);
    v211 = v110;
    v214 = v111;
    if (v116)
    {
      v117 = swift_slowAlloc(32, -1);
      v202 = (id)swift_slowAlloc(96, -1);
      v220 = (uint64_t)v202;
      *(_DWORD *)v117 = 136315650;
      v197 = v112;
      swift_bridgeObjectRetain(v108);
      v223 = sub_1000544FC(v204, v108, &v220);
      LODWORD(v201) = v115;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
      swift_bridgeObjectRelease_n(v108, 3);
      *(_WORD *)(v117 + 12) = 2080;
      v118 = v110;
      swift_bridgeObjectRetain(v60);
      v119 = v111;
      v120 = sub_10015EBFC(v118, v209, v208);
      v122 = v121;

      swift_bridgeObjectRelease(v209);
      v223 = sub_1000544FC(v120, v122, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);

      swift_bridgeObjectRelease_n(v209, 2);
      swift_bridgeObjectRelease(v122);
      *(_WORD *)(v117 + 22) = 2080;
      v123 = v197;
      v124 = v216;
      swift_bridgeObjectRetain(v216);
      v125 = v213;
      v126 = sub_10015EBFC(v123, v124, v215);
      v128 = v127;

      swift_bridgeObjectRelease(v124);
      v129 = v126;
      v130 = v206;
      v223 = sub_1000544FC(v129, v128, &v220);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);

      v60 = v209;
      swift_bridgeObjectRelease_n(v124, 2);

      v110 = v211;
      swift_bridgeObjectRelease(v128);
      _os_log_impl((void *)&_mh_execute_header, v113, (os_log_type_t)v201, "[%s] Persisting: %s\n ...for runtime state: %s", (uint8_t *)v117, 0x20u);
      v131 = v202;
      swift_arrayDestroy(v202, 3, (char *)&type metadata for Any + 8);
      v132 = v131;
      v133 = v208;
      swift_slowDealloc(v132, -1, -1);
      swift_slowDealloc(v117, -1, -1);

      (*(void (**)(char *, uint64_t))(v219 + 8))(v212, v218);
    }
    else
    {

      v153 = v213;
      swift_bridgeObjectRelease_n(v216, 2);

      swift_bridgeObjectRelease_n(v60, 2);
      swift_bridgeObjectRelease_n(v108, 2);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v212, v218);
      v133 = v208;
      v130 = v206;
    }
    v154 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v154, *(unsigned int *)(v154 + 48), *(unsigned __int16 *)(v154 + 52));
    v155 = JSONEncoder.init()();
    v220 = (uint64_t)v110;
    v221 = v60;
    v222 = v133;
    v156 = sub_1001F563C();
    i = dispatch thunk of JSONEncoder.encode<A>(_:)(&v220, &_s12BrowsedStateVN, v156);
    v161 = v160;
    swift_bridgeObjectRelease(v205);
    swift_release(v155);
    v162 = (uint64_t)v198;
    if (v198 == (id)2)
    {
      sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v170 = (void *)objc_opt_self(DOCConcreteLocation);
      v171 = v110;
      v172 = objc_msgSend(v170, "defaultLocation");
      v173 = static NSObject.== infix(_:_:)(v171, v172);

      v163 = v217;
      if ((v173 & 1) != 0)
      {
        isa = 0;
        v162 = 0;
        v169 = 0xF000000000000000;
      }
      else
      {
        sub_10012F5E0(i, v161);
        isa = Data._bridgeToObjectiveC()().super.isa;
        v162 = i;
        v169 = v161;
      }
      sub_1000D4C00(i, v161);
      objc_msgSend(v130, "setMostRecentlyVisitedBrowsedState_FullBrowser:", isa);
    }
    else
    {
      v163 = v217;
      if (v198 == (id)1)
      {
        sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        v164 = (void *)objc_opt_self(DOCConcreteLocation);
        v165 = v110;
        v166 = objc_msgSend(v164, "sharedItemsLocation");
        v167 = static NSObject.== infix(_:_:)(v165, v166);

        if ((v167 & 1) != 0)
        {
          isa = 0;
          v162 = 0;
          v169 = 0xF000000000000000;
        }
        else
        {
          sub_10012F5E0(i, v161);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v162 = i;
          v169 = v161;
        }
        sub_1000D4C00(i, v161);
        objc_msgSend(v130, "setMostRecentlyVisitedBrowsedState_Shared:", isa);
      }
      else
      {
        if (v198)
        {
LABEL_89:
          sub_1000D4C00(i, v161);
          type metadata accessor for DOCTab(0);
          v220 = v162;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v196, &v220, v196, &type metadata for UInt);
          __break(1u);
          return;
        }
        sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
        v174 = (void *)objc_opt_self(DOCConcreteLocation);
        v175 = v110;
        v176 = objc_msgSend(v174, "recentDocumentsLocation");
        v177 = static NSObject.== infix(_:_:)(v175, v176);

        if ((v177 & 1) != 0)
        {
          isa = 0;
          v162 = 0;
          v169 = 0xF000000000000000;
        }
        else
        {
          sub_10012F5E0(i, v161);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v162 = i;
          v169 = v161;
        }
        sub_1000D4C00(i, v161);
        objc_msgSend(v130, "setMostRecentlyVisitedBrowsedState_Recents:", isa);
      }
    }

    if (v169 >> 60 == 15)
    {
LABEL_82:
      objc_msgSend(*(id *)&v163[v203], "updateInterfaceState:forConfiguration:", v130, *(_QWORD *)&v163[v207]);

      v192 = v214;
      swift_bridgeObjectRelease_n(v60, 2);

      return;
    }
    v161 = sub_1001D715C();
    v220 = v60;
    swift_bridgeObjectRetain(v60);
    if (v208)
    {
      swift_bridgeObjectRetain(v60);
      i = (uint64_t)v214;
      v178 = sub_10008979C(i, v60);
      swift_bridgeObjectRelease(v60);
      if ((v178 & 1) == 0)
      {
        if ((unint64_t)v60 >> 62)
          goto LABEL_84;
        v179 = (id)i;
        goto LABEL_64;
      }

    }
    for (i = v60; ; i = v220)
    {
      v219 = v169;
      v220 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)i >> 62)
      {
        if (i < 0)
          v189 = i;
        else
          v189 = i & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(i);
        v180 = _CocoaArrayWrapper.endIndex.getter(v189);
        v169 = v162;
        if (!v180)
          goto LABEL_81;
      }
      else
      {
        v180 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(i);
        v169 = v162;
        if (!v180)
          goto LABEL_81;
      }
      if (v180 >= 1)
      {
        for (j = 0; j != v180; ++j)
        {
          if ((i & 0xC000000000000001) != 0)
            v183 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, i);
          else
            v183 = *(id *)(i + 8 * j + 32);
          v184 = v183;
          v185 = objc_msgSend(v183, "node");

          if (v185)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v186);
            v188 = *(_QWORD *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v187 = *(_QWORD *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v188 >= v187 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v187 > 1, v188 + 1, 1);
            v182 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v188, v185);
            specialized Array._endMutation()(v182);
            v130 = v206;
          }
          v163 = v217;
        }
LABEL_81:
        swift_bridgeObjectRelease(i);
        v190 = v220;
        swift_bridgeObjectRelease(i);
        v191 = *(_QWORD *)(v161 + 24);
        *(_QWORD *)(v161 + 24) = v190;
        swift_bridgeObjectRelease(v191);
        sub_100263594();
        sub_1001F5680(v169, v219);
        swift_release(v161);
        v60 = v209;
        v110 = v211;
        goto LABEL_82;
      }
      __break(1u);
LABEL_84:
      v193 = v60 >= 0 ? v60 & 0xFFFFFFFFFFFFFF8 : v60;
      swift_bridgeObjectRetain(v60);
      v194 = (id)i;
      v195 = _CocoaArrayWrapper.endIndex.getter(v193);
      swift_bridgeObjectRelease(v60);
      if (v195 < 0)
        break;
LABEL_64:
      sub_100459504(0, 0, i);

    }
    __break(1u);
    goto LABEL_89;
  }
  v134 = v213;
  v135 = v218;
  ((void (*)(char *, uint64_t, uint64_t))v104)(v213, v102, v218);
  v136 = v59;
  swift_bridgeObjectRetain_n(v60, 2);
  v137 = v201;
  v138 = v136;
  v139 = v137;
  v140 = v205;
  v141 = swift_bridgeObjectRetain(v205);
  v142 = Logger.logObject.getter(v141);
  v143 = static os_log_type_t.default.getter(v142);
  v144 = v143;
  if (os_log_type_enabled(v142, v143))
  {
    v145 = swift_slowAlloc(22, -1);
    v216 = swift_slowAlloc(64, -1);
    v220 = v216;
    *(_DWORD *)v145 = 136315394;
    swift_bridgeObjectRetain(v140);
    v223 = sub_1000544FC(v204, v140, &v220);
    LODWORD(v215) = v144;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
    swift_bridgeObjectRelease_n(v140, 3);
    *(_WORD *)(v145 + 12) = 2080;
    v214 = (id)(v145 + 14);
    v146 = v138;
    swift_bridgeObjectRetain(v209);
    v147 = v139;
    v148 = sub_10015EBFC(v146, v209, v208);
    v150 = v149;

    swift_bridgeObjectRelease(v209);
    v223 = sub_1000544FC(v148, v150, &v220);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);

    swift_bridgeObjectRelease_n(v209, 2);
    v60 = v209;
    swift_bridgeObjectRelease(v150);
    _os_log_impl((void *)&_mh_execute_header, v142, (os_log_type_t)v215, "[%s] Not persisting (opted out): %s", (uint8_t *)v145, 0x16u);
    v151 = v216;
    swift_arrayDestroy(v216, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v151, -1, -1);
    v152 = v145;
    v66 = v207;
    swift_slowDealloc(v152, -1, -1);

    (*(void (**)(char *, uint64_t))(v219 + 8))(v134, v218);
  }
  else
  {

    swift_bridgeObjectRelease_n(v60, 2);
    swift_bridgeObjectRelease_n(v140, 2);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v134, v135);
  }
  v157 = v217;
  v158 = v206;
  objc_msgSend(*(id *)&v217[v203], "updateInterfaceState:forConfiguration:", v206, *(_QWORD *)&v217[v66]);

  swift_bridgeObjectRelease_n(v60, 2);
}

uint64_t sub_1001EBCB8(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  _BOOL8 v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return 1;
  v7 = objc_msgSend(a1, "node");
  v8 = v7;
  if (v7)
  {
    v9 = objc_msgSend(v7, "fpfs_fpItem");
    *(_QWORD *)&v10 = swift_unknownObjectRelease(v8).n128_u64[0];
    if (v9)
    {
      v8 = objc_msgSend(v9, "cachedDomain", v10);

      if (v8)
      {
        v7 = objc_msgSend(v1, "hostAppCanNavigateToFileProviderDomain:", v8);
        v11 = v7 == 0;
        goto LABEL_9;
      }
    }
    else
    {
      v8 = 0;
    }
  }
  v11 = 1;
LABEL_9:
  v12 = Logger.UI.unsafeMutableAddressor(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  v13 = a1;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(28, -1);
    v28 = v8;
    v17 = v16;
    v24 = (_QWORD *)swift_slowAlloc(8, -1);
    v25 = swift_slowAlloc(32, -1);
    v30 = v25;
    *(_DWORD *)v17 = 136315650;
    v29 = sub_1000544FC(0xD000000000000017, 0x8000000100518820, &v30);
    v26 = v4;
    v27 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(v29) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 4);
    *(_WORD *)(v17 + 18) = 2112;
    v29 = (uint64_t)v13;
    v18 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    v19 = v24;
    *v24 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[PROTECTED APPS] %s canNavigate: %{BOOL}d to: %@", (uint8_t *)v17, 0x1Cu);
    v20 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v19, 1, v20);
    swift_slowDealloc(v19, -1, -1);
    v21 = v25;
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11;
}

void DOCHierarchyController.restoreLastBrowsedState(forTab:)(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab, v27, 32, 0);
  v4 = sub_1001D35AC((uint64_t)a1, *v3);
  if (v4)
  {
    v7 = v4;
    v8 = v5;
    v9 = v6;
    swift_endAccess(v27);
  }
  else
  {
    swift_endAccess(v27);
    sub_1001EC28C(a1);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v7 = sub_1001EC1AC(v10, v12, v14, a1, v1);
    v8 = v16;
    v9 = v17;
    sub_1001ECE60(v11, v13, v15);
    if (!v7)
    {
      swift_beginAccess(v3, v27, 32, 0);
      v18 = sub_1001D35AC((uint64_t)a1, *v3);
      v20 = v19;
      v22 = v21;
      swift_endAccess(v27);
      v7 = sub_1001EC1AC(v18, v20, v22, a1, v1);
      v8 = v23;
      v9 = v24;
      sub_1001ECE60(v18, v20, v22);
      if (!v7)
      {
        v7 = sub_1001E9E24((uint64_t)a1);
        v8 = v25;
        v9 = v26;
      }
    }
  }
  sub_10015E0F4(v1, 0, v7, v8, v9);
  swift_bridgeObjectRelease(v8);

}

void *sub_1001EC1AC(void *a1, uint64_t a2, void *a3, id a4, uint64_t a5)
{
  void *v7;
  void *v9;
  id v10;
  id v11;

  v7 = a1;
  if (a1)
  {
    v9 = *(void **)(a5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    if (a3)
    {
      v10 = a1;
      swift_bridgeObjectRetain(a2);
      v11 = a3;
    }
    else
    {
      v11 = a1;
      swift_bridgeObjectRetain(a2);
    }
    if (objc_msgSend(v11, "effectiveTabSwitcherTab") != a4
      || !objc_msgSend(v7, "canBeRestored")
      || (objc_msgSend(v9, "allowsDisplaying:", v7) & 1) == 0)
    {
      swift_bridgeObjectRelease(a2);

      return 0;
    }
  }
  return v7;
}

void sub_1001EC28C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char v33;
  id v34;
  id v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  id v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v80 - v9;
  v11 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore), "interfaceStateForConfiguration:", *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration));
  v12 = sub_1001F1388();
  if (v12)
  {
    v13 = v12;
    v14 = v11;
    v15 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v16 = swift_allocObject(v15, 40, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v16 + 32) = v13;
    v84 = (void *)v16;
    specialized Array._endMutation()(v16);
    v17 = (uint64_t)v84;
    v18 = v13;
    v19 = (void *)sub_10015F878(v17, 0);
    v21 = v20;
    v23 = v22;
    swift_bridgeObjectRelease(v17);
    if (v19)
    {
      sub_1001ECEA8(v19, v21, v23, a1);

      swift_bridgeObjectRelease(v21);
      return;
    }
    __break(1u);
    goto LABEL_32;
  }
  v82 = v10;
  if ((unint64_t)a1 > 2)
  {
LABEL_32:
    __break(1u);
    return;
  }
  v24 = *(void **)*(&off_1005D12B8 + (_QWORD)a1);
  v25 = DOCTabIdentifierRecents;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v28 = v27;
  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v31 = v26 == v29 && v28 == v30;
  v83 = v24;
  if (v31)
  {
    v45 = v24;
    v35 = (id)swift_bridgeObjectRelease_n(v28, 2);
LABEL_14:
    v46 = v11;
    v44 = v5;
    if (v11)
    {
      v47 = objc_msgSend(v11, "mostRecentlyVisitedBrowsedState_Recents", v36);
      goto LABEL_26;
    }
    goto LABEL_28;
  }
  v32 = v30;
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v29, v30, 0);
  v34 = v24;
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v32).n128_u64[0];
  if ((v33 & 1) != 0)
    goto LABEL_14;
  v37 = DOCTabIdentifierShared;
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
  v40 = v39;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v43 = v41;
  v44 = v5;
  if (v38 == v42 && v40 == v41)
  {
    v35 = (id)swift_bridgeObjectRelease_n(v40, 2);
  }
  else
  {
    v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v43);
    if ((v48 & 1) == 0)
    {
      v49 = DOCTabIdentifierBrowse;
      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
      v52 = v51;
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v55 = v53;
      if (v50 == v54 && v52 == v53)
      {
        v35 = (id)swift_bridgeObjectRelease_n(v52, 2);
        v46 = v11;
        if (!v11)
          goto LABEL_28;
      }
      else
      {
        v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, v54, v53, 0);
        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v55);
        v46 = v11;
        if ((v56 & 1) == 0 || !v11)
          goto LABEL_28;
      }
      v47 = objc_msgSend(v46, "mostRecentlyVisitedBrowsedState_FullBrowser");
LABEL_26:
      v35 = v47;
      v57 = v35;
      if (v35)
      {
        v58 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v60 = v59;

        v61 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
        v62 = sub_10012F5E0(v58, v60);
        v63 = JSONDecoder.init()(v62);
        v64 = sub_1001F63DC();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v84, &_s12BrowsedStateVN, v58, v60, &_s12BrowsedStateVN, v64);
        swift_release(v63);
        v81 = v46;
        v76 = v84;
        v77 = v85;
        v78 = v60;
        v79 = v86;
        sub_1001ECEA8(v84, v85, v86, a1);
        sub_1001F5680(v58, v78);
        swift_bridgeObjectRelease(v77);

        sub_1000D4C00(v58, v78);
        return;
      }
      goto LABEL_28;
    }
  }
  v46 = v11;
  if (v11)
  {
    v47 = objc_msgSend(v11, "mostRecentlyVisitedBrowsedState_Shared");
    goto LABEL_26;
  }
LABEL_28:
  v65 = Logger.DocumentManager.unsafeMutableAddressor(v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v8, v65, v4);
  v66 = v83;
  v67 = v83;
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter(v68);
  if (os_log_type_enabled(v68, v69))
  {
    v82 = (char *)v4;
    v70 = (uint8_t *)swift_slowAlloc(12, -1);
    v71 = (void *)swift_slowAlloc(32, -1);
    v81 = v46;
    v72 = v71;
    v84 = v71;
    *(_DWORD *)v70 = 136315138;
    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v75 = v74;
    v87 = sub_1000544FC(v73, v74, (uint64_t *)&v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);

    swift_bridgeObjectRelease(v75);
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "Failed to locate unarchivable BrowsedState for %s", v70, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v70, -1, -1);

    (*(void (**)(char *, char *))(v44 + 8))(v8, v82);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v4);
  }
}

id sub_1001ECAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  __chkstk_darwin(v2);
  v3 = sub_1001F1388();
  if (!v3)
  {
    v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore), "interfaceStateForConfiguration:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration));
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "lastUsedOpenSaveLocation");
      if (!v10)
      {

        return 0;
      }
      v11 = v10;
      v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

      sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
      v15 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
      v16 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v15, v12, v14, v15);
      v17 = v16;
      if (v16)
      {
        v18 = objc_msgSend(v16, "effectiveTabSwitcherTab");
        *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = v18;
        v6 = sub_1001F1618(v17, v18);

        sub_1000D4C00(v12, v14);
        return v6;
      }

      sub_1000D4C00(v12, v14);
    }
    return 0;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "effectiveTabSwitcherTab");
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = v5;
  v6 = sub_1001F1618(v4, v5);

  return v6;
}

void sub_1001ECE60(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {

    swift_bridgeObjectRelease(a2);
  }
}

uint64_t sub_1001ECEA0()
{
  return type metadata accessor for DOCHierarchyController.PreventChangeAssertion(0);
}

void sub_1001ECEA8(void *a1, uint64_t a2, void *a3, id a4)
{
  uint64_t v4;
  uint64_t v5;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  unsigned __int8 v24;
  uint64_t v25;

  v5 = v4;
  v9 = a1;
  v10 = sub_1001F1618(v9, objc_msgSend(v9, "effectiveTabSwitcherTab"));
  if (!v10)
  {

    return;
  }
  v11 = v10;
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  v12 = v9;
  v13 = v11;
  v14 = static NSObject.== infix(_:_:)(v13, v12);

  if ((v14 & 1) != 0)
  {
    v15 = a3;
    v16 = v12;
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    v17 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v18 + 32) = v13;
    v25 = v18;
    specialized Array._endMutation()(v18);
    v19 = v13;
    v16 = (id)sub_10015F878(v25, 0);
    a2 = v20;
    a3 = v21;
    swift_bridgeObjectRelease(v25);
    if (!v16)
    {
      __break(1u);
      return;
    }

  }
  v22 = *(void **)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  if (a3)
    v23 = objc_msgSend(a3, "effectiveTabSwitcherTab");
  else
    v23 = objc_msgSend(v16, "effectiveTabSwitcherTab");
  if (v23 == a4 && objc_msgSend(v16, "canBeRestored"))
  {
    v24 = objc_msgSend(v22, "allowsDisplaying:", v16);

    if ((v24 & 1) != 0)
      return;
    swift_bridgeObjectRelease(a2);
    v12 = v16;
  }
  else
  {
    swift_bridgeObjectRelease(a2);

  }
}

unint64_t sub_1001ED0EC()
{
  return 0xD000000000000028;
}

uint64_t sub_1001ED108(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  a1();
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = *(_QWORD *)(result + 64);
    *(_QWORD *)(result + 64) = 0;
    swift_release(result);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_1001ED168()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  id v13;
  void **v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  void (*v20)(__n128);
  uint64_t v21;
  __n128 v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t Strong;
  void *v47;
  id v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  Class isa;
  _QWORD *v53;
  void *v54;
  _QWORD *v55;
  char *v56;
  id v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  _QWORD aBlock[5];
  _QWORD *v62;
  char v63[24];

  v4 = v0;
  v5 = (unint64_t)(v0 + 3);
  swift_beginAccess(v0 + 3, v63, 0, 0);
  if (!*(_QWORD *)(v0[3] + 16))
  {
    v20 = (void (*)(__n128))v0[5];
    v21 = v0[6];
    v22 = swift_retain();
    v20(v22);
    swift_release(v21);
    return;
  }
  swift_beginAccess(v0 + 3, aBlock, 33, 0);
  v6 = *(_QWORD *)v5;
  if (!*(_QWORD *)(*(_QWORD *)v5 + 16))
  {
    __break(1u);
    goto LABEL_33;
  }
  v7 = *(void **)(v6 + 32);
  v8 = *(void **)(v6 + 40);
  v9 = v8;
  v10 = v7;
  sub_10045BC0C(0, 1);
  swift_endAccess(aBlock);
  v59 = v0 + 3;
  v60 = v10;
  v1 = v0[3];
  v11 = *(_QWORD **)(v1 + 16);
  if (!v11)
  {
    v23 = v10;
    v24 = v9;
    swift_bridgeObjectRetain(v1);
    v5 = 0;
    v2 = v10;
    goto LABEL_15;
  }
  v58 = v0;
  v12 = v10;
  v57 = v9;
  v13 = v9;
  swift_bridgeObjectRetain(v1);
  v5 = 0;
  v14 = (void **)(v1 + 40);
  do
  {
    v15 = *v14;
    if (*v14)
    {
      if (!v8)
        goto LABEL_14;
      v16 = *(v14 - 1);
      sub_10004F2F0(0, &qword_100643AC0, DOCDocumentSource_ptr);
      v3 = v13;
      v17 = v16;
      v18 = v15;
      v19 = static NSObject.== infix(_:_:)(v18, v3);

      if ((v19 & 1) == 0)
        goto LABEL_14;
    }
    else if (v8)
    {
      goto LABEL_14;
    }
    v14 += 2;
    ++v5;
  }
  while (v11 != (_QWORD *)v5);
  v5 = (unint64_t)v11;
LABEL_14:
  v9 = v57;
  v4 = v58;
  v2 = v60;
  if (*(_QWORD *)(v1 + 16) < v5)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease(v1);
    v29 = sub_10028F5C0(v1, v1 + 32, 0, (2 * v5) | 1);
    goto LABEL_20;
  }
LABEL_15:

  v25 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v26 = swift_unknownObjectRetain_n(v1, 2);
  v27 = (_QWORD *)swift_dynamicCastClass(v26, v25);
  if (!v27)
  {
    swift_bridgeObjectRelease(v1);
    v27 = _swiftEmptyArrayStorage;
  }
  v3 = v9;
  v28 = (_QWORD *)v27[2];
  swift_release(v27);
  if (v28 != (_QWORD *)v5)
    goto LABEL_34;
  v29 = (_QWORD *)swift_dynamicCastClass(v1, v25);
  if (!v29)
  {
    swift_bridgeObjectRelease(v1);
    v29 = _swiftEmptyArrayStorage;
  }
LABEL_20:
  swift_bridgeObjectRelease(v1);
  v30 = v29[2];
  swift_beginAccess(v59, aBlock, 33, 0);
  if (v30)
  {
    if (*(_QWORD *)(*v59 + 16) < v30)
    {
      __break(1u);
      return;
    }
    sub_10045BC0C(0, v30);
  }
  swift_endAccess(aBlock);
  v31 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v32 = swift_allocObject(v31, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v32 + 32) = v2;
  aBlock[0] = v32;
  specialized Array._endMutation()(v32);
  v33 = aBlock[0];
  if (v30)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v34 = v2;
    specialized ContiguousArray.reserveCapacity(_:)(v30);
    v35 = 4;
    do
    {
      v36 = (id)v29[v35];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v37 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v36);
      specialized ContiguousArray._endMutation()(v38);
      v35 += 2;
      --v30;
    }
    while (v30);
    v39 = (_QWORD *)aBlock[0];
    swift_release(v29);
  }
  else
  {
    v40 = v2;
    swift_release(v29);
    v39 = _swiftEmptyArrayStorage;
  }
  aBlock[0] = v33;
  sub_10008862C((uint64_t)v39);
  v41 = aBlock[0];
  v42 = (char *)v4[2];
  v43 = *((unsigned __int8 *)v4 + 32);
  v44 = *((unsigned __int8 *)v4 + 33);
  Strong = swift_unknownObjectWeakLoadStrong(&v42[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v45);
  if (Strong)
  {
    v47 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
    v48 = v3;
    v49 = v42;
    v50 = v4;
    v51 = v49;
    swift_retain();
    isa = Array._bridgeToObjectiveC()().super.isa;
    v53 = (_QWORD *)swift_allocObject(&unk_1005D0CC0, 48, 7);
    v53[2] = v41;
    v53[3] = v51;
    v53[4] = sub_1001F5F8C;
    v53[5] = v50;
    aBlock[4] = sub_1001F5FDC;
    v62 = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000039CC;
    aBlock[3] = &unk_1005D0CD8;
    v54 = _Block_copy(aBlock);
    v55 = v62;
    v56 = v51;
    swift_bridgeObjectRetain(v41);
    swift_retain();
    swift_release(v55);
    objc_msgSend(v47, "hierarchyController:prepareControllersFor::isUserInteraction:isBrowsingTrash:completion:", v56, isa, v48, v43, v44, v54);
    swift_unknownObjectRelease(v47);
    _Block_release(v54);

    swift_bridgeObjectRelease(v41);
    swift_release(v50);

  }
  else
  {

    swift_bridgeObjectRelease(v41);
  }
}

uint64_t sub_1001ED660(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(a2 + 56, v6, 33, 0);
  v3 = swift_bridgeObjectRetain(a1);
  sub_1001305E4(v3);
  v4 = swift_endAccess(v6);
  return sub_1001ED168(v4);
}

uint64_t sub_1001ED6C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for DOCHierarchyController.BatchedLocationViewControllerDriver()
{
  return objc_opt_self(_TtCFC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0218prepareControllersFT24forResolvedLocationInfosGSaVS0_P33_6DDE472ADD076946F61E7AD97D4F5D0220ResolvedLocationInfo_17isUserInteractionSb15isBrowsingTrashSb10completionFGSaCSo16UIViewController_T__T_L_35BatchedLocationViewControllerDriver);
}

uint64_t assignWithCopy for DOCLocationChange(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for DOCLocationChange(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCLocationChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCLocationChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCHierarchyController.ResolvedLocationInfo()
{
  return &type metadata for DOCHierarchyController.ResolvedLocationInfo;
}

_QWORD *sub_1001ED850(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[7];
    v10 = *(_QWORD *)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v10;
    swift_bridgeObjectRetain(v10);
  }
  return a1;
}

uint64_t sub_1001ED8F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_1001ED974(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001ED9E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = *(_QWORD *)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_1001EDA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001EDAD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t *sub_1001EDB50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

uint64_t sub_1001EDBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_1001EDC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_1001EDC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_1001EDCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001EDD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t sub_1001EDDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EDDB8);
}

uint64_t sub_1001EDDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001EDE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EDE40);
}

uint64_t sub_1001EDE40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1001EDEB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_1001EDF30(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001E0674(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(void))(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(_BYTE *)(v2 + 57), *(_BYTE *)(v2 + 58), *(void **)(v2 + 64));
}

uint64_t sub_1001EDF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    v5 = 0;
    if (!v4)
      return v5;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = 0;
    if (!v4)
      return v5;
  }
  a2 += OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }
    else
    {
      v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }
    v7 = static UUID.== infix(_:_:)(a2, v6+ OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid);
    swift_release(v6);
    if ((v7 & 1) != 0)
      return v5;
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4)
      return 0;
  }
}

unint64_t sub_1001EE08C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void **p_vtable;
  unint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *a1;
  v6 = swift_bridgeObjectRetain(*a1);
  v7 = sub_1001EDF74(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if (!v2)
  {
    if ((v9 & 1) != 0)
    {
      v28 = *a1;
      if ((unint64_t)v28 >> 62)
      {
        if (v28 < 0)
          v32 = v28;
        else
          v32 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v28);
        v7 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease(v28);
      }
      else
      {
        return *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_57;
      v9 = *a1;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_58:
        if ((v9 & 0x8000000000000000) != 0)
          v30 = v9;
        else
          v30 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v31 = _CocoaArrayWrapper.endIndex.getter(v30);
        swift_bridgeObjectRelease(v9);
        if (v10 != v31)
          goto LABEL_6;
      }
      else if (v10 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        p_vtable = &OBJC_METACLASS____TtC5Files16DOCCopyableLabel.vtable;
        a2 += OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
        for (i = v7 + 5; ; ++i)
        {
          v9 = i - 4;
          v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v13);
          }
          else
          {
            if ((v9 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
            if (v9 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_48;
            v14 = *(_QWORD *)(v13 + 8 * i);
            swift_retain();
          }
          v10 = static UUID.== infix(_:_:)(a2, (char *)p_vtable[26] + v14);
          swift_release(v14);
          if ((v10 & 1) == 0)
            break;
LABEL_32:
          v10 = i - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_49;
          v25 = *a1;
          if ((unint64_t)*a1 >> 62)
          {
            if (v25 < 0)
              v27 = *a1;
            else
              v27 = v25 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(*a1);
            v26 = _CocoaArrayWrapper.endIndex.getter(v27);
            swift_bridgeObjectRelease(v25);
          }
          else
          {
            v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v10 == v26)
            return v7;
        }
        if (v9 == v7)
        {
LABEL_31:
          if (__OFADD__(v7++, 1))
            goto LABEL_50;
          goto LABEL_32;
        }
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
          v10 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v9 & 0x8000000000000000) != 0)
              goto LABEL_53;
            if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_54;
            v16 = *(_QWORD *)(v10 + 8 * i);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_51;
          if (v7 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_52;
          v15 = *(_QWORD *)(v10 + 8 * v7 + 32);
          swift_retain();
          if ((v10 & 0xC000000000000001) == 0)
            goto LABEL_17;
        }
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v10);
        v10 = *a1;
LABEL_20:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
        *a1 = v10;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
        {
          v10 = sub_1000818A0(v10);
          *a1 = v10;
        }
        v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v16;
        v19 = swift_release(v18);
        specialized Array._endMutation()(v19);
        v10 = *a1;
        v20 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
        *a1 = v10;
        if (!v20 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
        {
          v10 = sub_1000818A0(v10);
          *a1 = v10;
        }
        p_vtable = (void **)(&OBJC_METACLASS____TtC5Files16DOCCopyableLabel + 24);
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_55;
        v21 = v10 & 0xFFFFFFFFFFFFFF8;
        if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_56;
        v22 = *(_QWORD *)(v21 + 8 * i);
        *(_QWORD *)(v21 + 8 * i) = v15;
        v23 = swift_release(v22);
        specialized Array._endMutation()(v23);
        goto LABEL_31;
      }
    }
  }
  return v7;
}

uint64_t sub_1001EE3C4(uint64_t a1, unint64_t a2)
{
  return sub_1001F0F08(a1, a2, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
}

_QWORD *sub_1001EE3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[4];
  _QWORD *v33;

  v3 = v2;
  v33 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v30 = v3;
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_20;
        v10 = type metadata accessor for DOCFileProviderSource();
        v11 = swift_dynamicCastClass(v8, v10);
        if (v11)
        {
          v12 = (void *)v11;
          v13 = *(void **)(v11 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (v13)
          {
            v14 = v8;
            v15 = v13;
            v16 = sub_10003C0D0(a2);

            if ((v16 & 1) != 0)
            {

LABEL_16:
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
              v3 = v33[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3);
              v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v8);
              specialized ContiguousArray._endMutation()(v27);
              goto LABEL_5;
            }
          }
          else
          {
            v18 = v8;
          }
          v19 = objc_msgSend(v12, "identifier", v30);
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
          v22 = v21;

          v32[2] = v20;
          v32[3] = v22;
          v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
          v3 = v24;
          v32[0] = v23;
          v32[1] = v24;
          v25 = sub_10010BEE8();
          v26 = sub_10010BF2C();
          LOBYTE(v20) = BidirectionalCollection<>.starts<A>(with:)(v32, &type metadata for String, &type metadata for String, v25, v26);
          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v3);

          if ((v20 & 1) != 0)
            goto LABEL_16;
        }

LABEL_5:
        ++v6;
        if (v9 == v5)
          return v33;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v29 = a1;
      else
        v29 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v29);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_1001EE604(void *a1, void *a2)
{
  id v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v25;
  char v26;
  id v27;
  id v28;
  id v29;

  v4 = objc_msgSend((id)objc_opt_self(DOCFeature), "dsEnumerationLocal");
  v5 = objc_msgSend(v4, "isEnabled");

  if (!v5)
    goto LABEL_14;
  v6 = objc_msgSend(a2, "sourceIdentifier");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCLocalStorageFileProviderIdentifier);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
      goto LABEL_14;
  }
  v15 = objc_opt_self(FIDSNode);
  v16 = swift_dynamicCastObjCClass(a1, v15);
  if (!v16)
  {
LABEL_14:
    v21 = objc_msgSend(a2, "sourceIdentifier");
    v22 = objc_msgSend(a1, "presentationNode");
    v23 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v21, v22);
    goto LABEL_15;
  }
  v17 = (void *)v16;
  sub_10004F2F0(0, &qword_100647568, FILocalStorageNode_ptr);
  v18 = a1;
  v19 = static FILocalStorageNode.sharedInstance(for:)(0);
  if (!v19)
  {
LABEL_13:

    goto LABEL_14;
  }
  v20 = (void *)v19;
  sub_10004F2F0(0, &qword_100647570, FIDSNode_ptr);
  if ((static NSObject.== infix(_:_:)(v17, v20) & 1) != 0)
  {

    v18 = v20;
    goto LABEL_13;
  }
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v25 = objc_msgSend(v20, "storageNode");
  v26 = static NSObject.== infix(_:_:)(v25, v17);

  if ((v26 & 1) != 0)
  {
    v27 = v20;
  }
  else
  {
    v28 = objc_msgSend((id)objc_opt_self(FILocalAppContainerCollection), "sharedInstance");
    if ((objc_msgSend(v28, "isPopulated") & 1) == 0)
      objc_msgSend(v28, "synchronizeWithOptions:async:", 0, 0);
    v29 = v18;
    v27 = objc_msgSend(v17, "presentationNode");

  }
  v21 = objc_msgSend(a2, "sourceIdentifier");
  v22 = objc_msgSend(v27, "presentationNode");
  v23 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v21, v22);

LABEL_15:
  return v23;
}

uint64_t sub_1001EE92C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v3 = DOCDocumentSourceIdentifierTrashedItems;
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "sourceIdentifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      if (v9 == v12 && v11 == v13)
      {

        swift_bridgeObjectRelease_n(v11, 2);
        v16 = 1;
        goto LABEL_22;
      }
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);

      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) == 0)
      {
        ++v4;
        if (v7 != v2)
          continue;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  v16 = 0;
LABEL_22:
  swift_bridgeObjectRelease(a1);
  return v16 & 1;
}

void sub_1001EEAB0(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  char *v46;
  void *v47;
  uint64_t v48;
  char *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  void **v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint8_t *v68;
  id v69;
  __n128 v70;
  __n128 v71;
  id v72;
  void **v73;
  void *v74;
  uint64_t v75;
  uint64_t ObjectType;
  uint64_t v77;
  void *v78;
  void **v79;
  id v80;
  id v81;
  uint64_t v82;
  void **v83;
  void **v84;
  _BYTE *v85;
  _QWORD *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  void **v91;
  id v92;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  NSString v102;
  id v103;
  uint64_t v104;
  NSString v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  void **v112;
  _QWORD *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  void **v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  void **v125;
  _BYTE *v126;
  uint64_t v127;
  void **v128;
  _BYTE *v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  void **v134;
  id v135;
  void *v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  _BYTE *v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  unint64_t v146;
  _BYTE *v147;
  unint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  void **v159;
  void *v160;
  id v161;
  __n128 v162;
  char v163;
  uint64_t v164;
  _BYTE *v165;
  id v166;
  NSObject *v167;
  os_log_type_t v168;
  uint64_t v169;
  uint64_t v170;
  void **v171;
  void *v172;
  id v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  id v178;
  NSObject *v179;
  os_log_type_t v180;
  uint64_t v181;
  void **v182;
  void *v183;
  id v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  int v188;
  int v189;
  _UNKNOWN **v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  _BYTE *v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  uint8_t *v202;
  void **v203;
  id v204;
  void (*v205)(void);
  id v206;
  void *v207;
  id v208;
  id v209;
  void *v210;
  _BYTE *v211;
  uint64_t v212;
  NSObject *v213;
  os_log_type_t v214;
  _BOOL4 v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  void **v222;
  uint64_t v223;
  _BYTE *v224;
  _BYTE *v225;
  uint64_t v226;
  void *v227;
  _QWORD *v228;
  id v229;
  uint64_t v230;
  void *v231;
  id v232;
  _BYTE *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  void *v242;
  id v243;
  uint64_t v244;
  NSObject *v245;
  os_log_type_t v246;
  uint64_t v247;
  _QWORD *v248;
  id v249;
  uint64_t v250;
  unint64_t v251;
  unint64_t v252;
  id v253;
  uint64_t v254;
  void **v255;
  _BYTE *v256;
  _QWORD *v257;
  id v258;
  void *v259;
  uint64_t v260;
  _QWORD *v261;
  id v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  _QWORD *v267;
  id v268;
  id v269;
  id v270;
  uint64_t v271;
  id v272;
  _QWORD *v273;
  uint64_t v274;
  id v275;
  uint64_t v276;
  void *v277;
  _QWORD *v278;
  id v279;
  id v280;
  _BYTE v281[12];
  int v282;
  id v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  id v288;
  _BYTE *v289;
  _BYTE *v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  _BYTE *v296;
  _BYTE *v297;
  _BYTE *v298;
  _BYTE *v299;
  _BYTE *v300;
  _BYTE *v301;
  _BYTE *v302;
  void **v303;
  void **v304;
  void *v305;
  void **v306;
  id v307;
  _QWORD *v308;
  void **aBlock;
  uint64_t v310;
  void *v311;
  void *v312;
  uint64_t (*v313)();
  _QWORD *v314;
  uint64_t v315;
  char v316[8];
  _QWORD *v317;
  char v318[8];
  char v319[8];
  char v320[8];

  v305 = a5;
  v303 = a4;
  v295 = type metadata accessor for DispatchWorkItemFlags(0);
  v294 = *(_QWORD *)(v295 - 8);
  __chkstk_darwin(v295);
  v293 = &v281[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v292 = type metadata accessor for DispatchQoS(0);
  v291 = *(_QWORD *)(v292 - 8);
  __chkstk_darwin(v292);
  v290 = &v281[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10006922C(&qword_100643470);
  v15 = __chkstk_darwin(v14);
  v17 = &v281[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v15);
  v296 = &v281[-v19];
  v20 = __chkstk_darwin(v18);
  v22 = &v281[-v21];
  __chkstk_darwin(v20);
  v289 = &v281[-v23];
  v308 = (_QWORD *)type metadata accessor for Logger(0);
  v306 = (void **)*(v308 - 1);
  v24 = __chkstk_darwin(v308);
  v26 = &v281[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v24);
  v301 = &v281[-v28];
  v29 = __chkstk_darwin(v27);
  v304 = (void **)&v281[-v30];
  v31 = __chkstk_darwin(v29);
  v298 = &v281[-v32];
  v33 = __chkstk_darwin(v31);
  v299 = &v281[-v34];
  v35 = __chkstk_darwin(v33);
  v302 = &v281[-v36];
  v37 = __chkstk_darwin(v35);
  v300 = &v281[-v38];
  v39 = __chkstk_darwin(v37);
  v297 = &v281[-v40];
  __chkstk_darwin(v39);
  v42 = &v281[-v41];
  v43 = swift_allocObject(&unk_1005CF7F8, 32, 7);
  v307 = a6;
  *(_QWORD *)(v43 + 16) = a6;
  *(_QWORD *)(v43 + 24) = a7;
  a1 += 16;
  swift_beginAccess(a1, v320, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1, v44);
  if (!Strong)
  {
    swift_retain();
    swift_release(v43);
    return;
  }
  v46 = (char *)Strong;
  swift_beginAccess(a2 + 16, v319, 0, 0);
  v47 = *(void **)(a2 + 16);
  if (!v47
    || (v48 = type metadata accessor for DOCFileProviderSource(), (v49 = (char *)swift_dynamicCastClass(v47, v48)) == 0))
  {
    v58 = swift_retain_n(a7, 2);
    goto LABEL_9;
  }
  v288 = v47;
  v285 = v43;
  v50 = *(void **)&v46[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  v51 = *(void **)&v46[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
  v287 = v49;
  v52 = swift_dynamicCastClass(v49, v48);
  v286 = v46;
  v284 = a7;
  if (v52 && (v53 = *(void **)(v52 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
  {
    v283 = v51;
    v54 = v53;
    swift_retain_n(a7, 2);
    v55 = v288;
    v56 = v50;
    v57 = sub_100087190(v54, (uint64_t)v51);

    v46 = v286;
    v43 = v285;
    if ((v57 & 1) == 0)
    {

      a7 = v284;
LABEL_9:
      v60 = v307;
      v59 = v308;
      v61 = v306;
      v62 = Logger.UI.unsafeMutableAddressor(v58);
      v63 = ((uint64_t (*)(_BYTE *, uint64_t, _QWORD *))v61[2])(v26, v62, v59);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = v43;
        v67 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v67 = 0;
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "About to resolve the empty location.", v67, 2u);
        v68 = v67;
        v43 = v66;
        swift_slowDealloc(v68, -1, -1);
      }

      ((void (*)(_BYTE *, _QWORD *))v61[1])(v26, v59);
      v69 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "defaultLocation");
      v70 = swift_retain();
      sub_10003E148(v69, 0, v46, v60, a7, v70);
      swift_release(v43);

      swift_release_n(a7, 2, v71);
      return;
    }
  }
  else
  {
    swift_retain_n(a7, 2);
    v72 = v288;
  }
  swift_beginAccess(a3 + 16, v318, 0, 0);
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    v283 = (id)swift_allocObject(&unk_1005CF820, 24, 7);
    v73 = v303;
    *((_QWORD *)v283 + 2) = v303;
    v74 = v305;
    ObjectType = swift_getObjectType(v305, v75);
    v282 = DOCNode.isFINode.getter(ObjectType);
    if ((v282 & 1) != 0)
    {
      v77 = objc_opt_self(FINode);
      v78 = (void *)swift_dynamicCastObjCClassUnconditional(v74, v77, 0, 0, 0);
      v79 = v73;
      swift_unknownObjectRetain(v74);
      v80 = sub_1001EE604(v78, v79);
      *((_QWORD *)v283 + 2) = v80;

      v81 = *(id *)&v287[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v81)
      {
        v81 = objc_msgSend(v81, "isUsingFPFS");
        if ((v81 & 1) != 0)
        {
          v82 = Logger.Enumeration.unsafeMutableAddressor(v81);
          v83 = v306;
          v84 = (void **)v306[2];
          v85 = v297;
          v86 = v308;
          ((void (*)(_BYTE *, uint64_t, _QWORD *))v84)(v297, v82, v308);
          v87 = swift_unknownObjectRetain_n(v74, 2);
          v88 = Logger.logObject.getter(v87);
          v89 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v88, v89))
          {
            v303 = v84;
            v90 = swift_slowAlloc(22, -1);
            v91 = (void **)swift_slowAlloc(64, -1);
            aBlock = v91;
            *(_DWORD *)v90 = 136315394;
            v315 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
            *(_WORD *)(v90 + 12) = 2080;
            v92 = objc_msgSend(v78, "fileURL");
            if (v92)
            {
              v93 = v92;
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v92);

              v94 = type metadata accessor for URL(0);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v22, 0, 1, v94);
            }
            else
            {
              v94 = type metadata accessor for URL(0);
              (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v22, 1, 1, v94);
            }
            v154 = v289;
            sub_100070EDC((uint64_t)v22, (uint64_t)v289, &qword_100643470);
            type metadata accessor for URL(0);
            v155 = *(_QWORD *)(v94 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v155 + 48))(v154, 1, v94) == 1)
            {
              v156 = 4271950;
              sub_10000CB4C((uint64_t)v154, &qword_100643470);
              v157 = 0xE300000000000000;
            }
            else
            {
              v156 = URL.absoluteString.getter();
              v157 = v158;
              (*(void (**)(_BYTE *, uint64_t))(v155 + 8))(v154, v94);
            }
            v140 = v284;
            v315 = sub_1000544FC(v156, v157, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
            swift_unknownObjectRelease_n(v74, 2);
            swift_bridgeObjectRelease(v157);
            _os_log_impl((void *)&_mh_execute_header, v88, v89, "%s: FPFS Location has an FINode with URL: %s.", (uint8_t *)v90, 0x16u);
            swift_arrayDestroy(v91, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v91, -1, -1);
            swift_slowDealloc(v90, -1, -1);
            swift_unknownObjectRelease(v74);

            v126 = v306[1];
            v113 = v308;
            v139 = ((uint64_t (*)(_BYTE *, _QWORD *))v126)(v297, v308);
            v141 = v287;
LABEL_44:
            v84 = v303;
            goto LABEL_45;
          }

          swift_unknownObjectRelease_n(v74, 3);
          v126 = v83[1];
          v139 = ((uint64_t (*)(_BYTE *, _QWORD *))v126)(v85, v86);
          v140 = v284;
          v141 = v287;
          v113 = v86;
LABEL_45:
          v159 = v304;
          v306 = (void **)OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
          v160 = *(void **)&v141[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
          if (v160
            && (v161 = v160,
                v163 = FPProviderDomain.shouldUseDSEnumeration.getter(v162),
                v161,
                (v163 & 1) != 0))
          {
            v164 = Logger.Enumeration.unsafeMutableAddressor(v139);
            v165 = v300;
            ((void (*)(_BYTE *, uint64_t, _QWORD *))v84)(v300, v164, v113);
            v166 = v288;
            v167 = Logger.logObject.getter(v166);
            v168 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v167, v168))
            {

              ((void (*)(_BYTE *, _QWORD *))v126)(v165, v113);
              v188 = 0;
              goto LABEL_60;
            }
            v301 = v126;
            v303 = v84;
            v169 = v140;
            v170 = swift_slowAlloc(22, -1);
            v171 = (void **)swift_slowAlloc(64, -1);
            aBlock = v171;
            *(_DWORD *)v170 = 136315394;
            v315 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
            *(_WORD *)(v170 + 12) = 2080;
            v172 = *(void **)((char *)v306 + (_QWORD)v287);
            if (v172)
            {
              v173 = objc_msgSend(v172, "identifier");
              v174 = static String._unconditionallyBridgeFromObjectiveC(_:)(v173);
              v176 = v175;

            }
            else
            {
              v174 = 4271950;
              v176 = 0xE300000000000000;
            }
            v315 = sub_1000544FC(v174, v176, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);

            swift_bridgeObjectRelease(v176);
            _os_log_impl((void *)&_mh_execute_header, v167, v168, "%s: Domain supports DS enumeration: %s.", (uint8_t *)v170, 0x16u);
            swift_arrayDestroy(v171, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v171, -1, -1);
            swift_slowDealloc(v170, -1, -1);

            v113 = v308;
            v126 = v301;
            ((void (*)(_BYTE *, _QWORD *))v301)(v300, v308);
            v188 = 0;
          }
          else
          {
            v177 = Logger.Enumeration.unsafeMutableAddressor(v139);
            ((void (*)(void **, uint64_t, _QWORD *))v84)(v159, v177, v113);
            v178 = v288;
            v179 = Logger.logObject.getter(v178);
            v180 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v179, v180))
            {

              ((void (*)(void **, _QWORD *))v126)(v159, v113);
              v188 = 1;
              goto LABEL_60;
            }
            v301 = v126;
            v303 = v84;
            v169 = v140;
            v181 = swift_slowAlloc(22, -1);
            v182 = (void **)swift_slowAlloc(64, -1);
            aBlock = v182;
            *(_DWORD *)v181 = 136315394;
            v315 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
            *(_WORD *)(v181 + 12) = 2080;
            v183 = *(void **)((char *)v306 + (_QWORD)v287);
            if (v183)
            {
              v184 = objc_msgSend(v183, "identifier");
              v185 = static String._unconditionallyBridgeFromObjectiveC(_:)(v184);
              v187 = v186;

            }
            else
            {
              v185 = 4271950;
              v187 = 0xE300000000000000;
            }
            v315 = sub_1000544FC(v185, v187, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);

            swift_bridgeObjectRelease(v187);
            _os_log_impl((void *)&_mh_execute_header, v179, v180, "%s: Domain does NOT support DS enumeration: %s.", (uint8_t *)v181, 0x16u);
            swift_arrayDestroy(v182, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v182, -1, -1);
            swift_slowDealloc(v181, -1, -1);

            v113 = v308;
            v126 = v301;
            ((void (*)(void **, _QWORD *))v301)(v304, v308);
            v188 = 1;
          }
          v74 = v305;
          v140 = v169;
          v84 = v303;
LABEL_60:
          v189 = v282;
          v190 = DSConflictStrategy_ptr;
          v191 = objc_opt_self(FPItem);
          v192 = swift_dynamicCastObjCClass(v74, v191);
          if (v192)
          {
            v192 = (uint64_t)objc_msgSend((id)v192, "isTrashed");
            if (((v189 | v188) & 1) != 0 || (v192 & 1) != 0)
              goto LABEL_66;
          }
          else if (((v189 | v188) & 1) != 0)
          {
LABEL_66:
            v197 = Logger.Enumeration.unsafeMutableAddressor(v192);
            v198 = v302;
            v199 = ((uint64_t (*)(_BYTE *, uint64_t, _QWORD *))v84)(v302, v197, v113);
            v200 = Logger.logObject.getter(v199);
            v201 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v200, v201))
            {
              v202 = (uint8_t *)swift_slowAlloc(12, -1);
              v203 = (void **)swift_slowAlloc(32, -1);
              aBlock = v203;
              *(_DWORD *)v202 = 136315138;
              v317 = (_QWORD *)sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318);
              _os_log_impl((void *)&_mh_execute_header, v200, v201, "%s: NOT trying to resolve to Node, (either location already has a Node, or Domain needs FPItemCollection, see logs above)", v202, 0xCu);
              swift_arrayDestroy(v203, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v203, -1, -1);
              swift_slowDealloc(v202, -1, -1);
            }

            ((void (*)(_BYTE *, _QWORD *))v126)(v198, v113);
            v204 = v286;
            v205 = (void (*)(void))v307;
            v206 = v283;
            v207 = (void *)*((_QWORD *)v283 + 2);
            v208 = v288;
            v209 = v207;
            v205();
            swift_release(v140);
            swift_release(v285);
            swift_release(v206);

            return;
          }
          v193 = &v286[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
          swift_beginAccess(&v286[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], &v315, 0, 0);
          v194 = *(_QWORD *)v193;
          v195 = swift_bridgeObjectRetain(v194);
          v196 = sub_1001EE92C(v195);
          v192 = swift_bridgeObjectRelease(v194);
          if ((v196 & 1) == 0)
          {
            v210 = (void *)Logger.Enumeration.unsafeMutableAddressor(v192);
            v211 = v299;
            v307 = v210;
            ((void (*)(_BYTE *))v84)(v299);
            v212 = swift_unknownObjectRetain_n(v74, 2);
            v213 = Logger.logObject.getter(v212);
            v214 = static os_log_type_t.info.getter();
            v215 = os_log_type_enabled(v213, v214);
            v303 = v84;
            if (v215)
            {
              v216 = swift_slowAlloc(22, -1);
              v304 = (void **)swift_slowAlloc(64, -1);
              aBlock = v304;
              *(_DWORD *)v216 = 136315394;
              v301 = v126;
              v317 = (_QWORD *)sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318);
              *(_WORD *)(v216 + 12) = 2080;
              v217 = objc_msgSend(v74, "displayName");
              v218 = static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
              v220 = v219;

              v113 = v308;
              v221 = v218;
              v74 = v305;
              v317 = (_QWORD *)sub_1000544FC(v221, v220, (uint64_t *)&aBlock);
              v126 = v301;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318);
              swift_unknownObjectRelease_n(v74, 2);
              swift_bridgeObjectRelease(v220);
              _os_log_impl((void *)&_mh_execute_header, v213, v214, "%s: Location needs to be resolved to FINode : Node (%s.", (uint8_t *)v216, 0x16u);
              v222 = v304;
              swift_arrayDestroy(v304, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v222, -1, -1);
              v223 = v216;
              v190 = DSConflictStrategy_ptr;
              swift_slowDealloc(v223, -1, -1);

              v224 = v299;
            }
            else
            {

              swift_unknownObjectRelease_n(v74, 2);
              v224 = v211;
            }
            ((void (*)(_BYTE *, _QWORD *))v126)(v224, v113);
            v225 = v298;
            v226 = objc_opt_self(v190[21]);
            v227 = (void *)swift_dynamicCastObjCClassUnconditional(v74, v226, 0, 0, 0);
            swift_unknownObjectRetain(v74);
            if (objc_msgSend(v227, "isRootItem"))
            {
              v308 = *(_QWORD **)&v286[OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue];
              v228 = (_QWORD *)swift_allocObject(&unk_1005CF8E8, 56, 7);
              v229 = v283;
              v228[2] = v287;
              v228[3] = v229;
              v228[4] = v74;
              v228[5] = sub_1001F6B24;
              v230 = v285;
              v228[6] = v285;
              v313 = sub_1001F5064;
              v314 = v228;
              aBlock = _NSConcreteStackBlock;
              v310 = 1107296256;
              v311 = sub_10004A82C;
              v312 = &unk_1005CF900;
              v231 = _Block_copy(&aBlock);
              v232 = v288;
              swift_unknownObjectRetain(v74);
              swift_retain();
              swift_retain();
              v233 = v290;
              static DispatchQoS.unspecified.getter(v234);
              v317 = _swiftEmptyArrayStorage;
              v235 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
              v236 = sub_10006922C((uint64_t *)&unk_100647540);
              v237 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
              v238 = v293;
              v239 = v236;
              v240 = v295;
              dispatch thunk of SetAlgebra.init<A>(_:)(&v317, v239, v237, v295, v235);
              OS_dispatch_queue.async(group:qos:flags:execute:)(0, v233, v238, v231);
              _Block_release(v231);

              swift_unknownObjectRelease(v74);
              (*(void (**)(_BYTE *, uint64_t))(v294 + 8))(v238, v240);
              (*(void (**)(_BYTE *, uint64_t))(v291 + 8))(v233, v292);

              v241 = v314;
              swift_release(v284);
              swift_release(v230);
              swift_release(v229);
              swift_release(v241);
              return;
            }
            v242 = *(void **)((char *)v306 + (_QWORD)v287);
            if (v242)
            {
              v243 = v242;
              if ((FPProviderDomain.shouldResolveDSNodeAsFPv2.getter() & 1) != 0)
              {
                v301 = v126;
                v244 = v140;
                ((void (*)(_BYTE *, id, _QWORD *))v303)(v225, v307, v113);
                swift_unknownObjectRetain_n(v74, 2);
                v307 = v243;
                v245 = Logger.logObject.getter(v307);
                v246 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v245, v246))
                {
                  v247 = swift_slowAlloc(22, -1);
                  v248 = (_QWORD *)swift_slowAlloc(8, -1);
                  v306 = (void **)swift_slowAlloc(32, -1);
                  aBlock = v306;
                  *(_DWORD *)v247 = 136315394;
                  v249 = objc_msgSend(v74, "displayName");
                  v250 = static String._unconditionallyBridgeFromObjectiveC(_:)(v249);
                  v252 = v251;

                  v317 = (_QWORD *)sub_1000544FC(v250, v252, (uint64_t *)&aBlock);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318);
                  swift_unknownObjectRelease_n(v305, 2);
                  swift_bridgeObjectRelease(v252);
                  *(_WORD *)(v247 + 12) = 2112;
                  v317 = v307;
                  v253 = v307;
                  v74 = v305;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v317, v318);
                  *v248 = v242;

                  v244 = v284;
                  _os_log_impl((void *)&_mh_execute_header, v245, v246, "Building FINode from FPv2 node: (%s) with domain (%@)", (uint8_t *)v247, 0x16u);
                  v254 = sub_10006922C(&qword_100643AB0);
                  swift_arrayDestroy(v248, 1, v254);
                  swift_slowDealloc(v248, -1, -1);
                  v255 = v306;
                  swift_arrayDestroy(v306, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v255, -1, -1);
                  swift_slowDealloc(v247, -1, -1);

                  v256 = v298;
                  v257 = v308;
                }
                else
                {

                  v270 = v307;
                  swift_unknownObjectRelease_n(v74, 2);
                  v256 = v225;
                  v257 = v113;
                }
                ((void (*)(_BYTE *, _QWORD *))v301)(v256, v257);
                v308 = (_QWORD *)objc_opt_self(FINode);
                v271 = swift_allocObject(&unk_1005CEFC0, 24, 7);
                v272 = v286;
                swift_unknownObjectWeakInit(v271 + 16);
                v273 = (_QWORD *)swift_allocObject(&unk_1005CF898, 64, 7);
                v274 = v244;
                v275 = v283;
                v273[2] = v271;
                v273[3] = v275;
                v273[4] = v287;
                v273[5] = v74;
                v276 = v285;
                v273[6] = sub_1001F6B24;
                v273[7] = v276;
                v313 = sub_1001F505C;
                v314 = v273;
                aBlock = _NSConcreteStackBlock;
                v310 = 1107296256;
                v311 = sub_100083540;
                v312 = &unk_1005CF8B0;
                v277 = _Block_copy(&aBlock);
                v278 = v314;
                v279 = v288;
                swift_unknownObjectRetain(v74);
                swift_retain();
                swift_retain();
                v280 = v307;
                swift_release(v278);
                objc_msgSend(v308, "fiNodeFromItem:inFPv2Domain:completion:", v227, v280, v277);
                _Block_release(v277);
                swift_release(v274);
                swift_release(v276);

                swift_release(v275);
                swift_unknownObjectRelease(v74);

                return;
              }

            }
            v258 = v286;
            v259 = *(void **)&v286[OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager];
            v260 = swift_allocObject(&unk_1005CEFC0, 24, 7);
            swift_unknownObjectWeakInit(v260 + 16);
            v261 = (_QWORD *)swift_allocObject(&unk_1005CF848, 64, 7);
            v262 = v283;
            v261[2] = v260;
            v261[3] = v262;
            v263 = v287;
            v261[4] = v74;
            v261[5] = v263;
            v264 = v140;
            v265 = v285;
            v261[6] = sub_1001F6B24;
            v261[7] = v265;
            v313 = sub_1001F5054;
            v314 = v261;
            aBlock = _NSConcreteStackBlock;
            v310 = 1107296256;
            v311 = sub_100175118;
            v312 = &unk_1005CF860;
            v266 = _Block_copy(&aBlock);
            v267 = v314;
            v268 = v288;
            swift_unknownObjectRetain(v74);
            swift_retain();
            swift_retain();
            v269 = v259;
            swift_release(v267);
            objc_msgSend(v269, "fetchURLForItem:completionHandler:", v227, v266);

            _Block_release(v266);
            swift_release(v264);
            swift_release(v265);
            swift_release(v262);
            swift_unknownObjectRelease(v74);

            return;
          }
          goto LABEL_66;
        }
      }
      v127 = Logger.Enumeration.unsafeMutableAddressor(v81);
      v128 = v306;
      v84 = (void **)v306[2];
      v129 = v301;
      v113 = v308;
      ((void (*)(_BYTE *, uint64_t, _QWORD *))v84)(v301, v127, v308);
      v130 = swift_unknownObjectRetain_n(v74, 4);
      v131 = Logger.logObject.getter(v130);
      v132 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v131, v132))
      {
        v133 = swift_slowAlloc(32, -1);
        v134 = (void **)swift_slowAlloc(96, -1);
        aBlock = v134;
        *(_DWORD *)v133 = 136315650;
        v315 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
        *(_WORD *)(v133 + 12) = 2080;
        v135 = objc_msgSend(v78, "fileURL");
        if (v135)
        {
          v136 = v135;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v135);

          v137 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v17, 0, 1, v137);
        }
        else
        {
          v137 = type metadata accessor for URL(0);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v17, 1, 1, v137);
        }
        v142 = v296;
        sub_100070EDC((uint64_t)v17, (uint64_t)v296, &qword_100643470);
        type metadata accessor for URL(0);
        v143 = *(_QWORD *)(v137 - 8);
        v144 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v143 + 48))(v142, 1, v137);
        v303 = v84;
        if (v144 == 1)
        {
          v145 = 4271950;
          sub_10000CB4C((uint64_t)v142, &qword_100643470);
          v146 = 0xE300000000000000;
        }
        else
        {
          v147 = v142;
          v145 = URL.absoluteString.getter();
          v146 = v148;
          (*(void (**)(_BYTE *, uint64_t))(v143 + 8))(v147, v137);
        }
        v315 = sub_1000544FC(v145, v146, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
        v74 = v305;
        swift_unknownObjectRelease_n(v305, 2);
        swift_bridgeObjectRelease(v146);
        *(_WORD *)(v133 + 22) = 2080;
        v149 = objc_msgSend(v78, "fpItem");
        v315 = (uint64_t)v149;
        v150 = sub_10006922C(&qword_100647560);
        v151 = Optional.debugDescription.getter(v150);
        v153 = v152;

        v315 = sub_1000544FC(v151, v153, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
        swift_unknownObjectRelease_n(v74, 2);
        swift_bridgeObjectRelease(v153);
        _os_log_impl((void *)&_mh_execute_header, v131, v132, "%s: FPv2 Location has an FINode with URL: %s and FPItem: %s.", (uint8_t *)v133, 0x20u);
        swift_arrayDestroy(v134, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v134, -1, -1);
        swift_slowDealloc(v133, -1, -1);
        swift_unknownObjectRelease(v74);

        v126 = v306[1];
        v113 = v308;
        v139 = ((uint64_t (*)(_BYTE *, _QWORD *))v126)(v301, v308);
        v141 = v287;
        v140 = v284;
        goto LABEL_44;
      }

      swift_unknownObjectRelease_n(v74, 5);
      v126 = v128[1];
      v138 = v129;
    }
    else
    {
      v111 = Logger.Enumeration.unsafeMutableAddressor(v73);
      v112 = v306;
      v84 = (void **)v306[2];
      v113 = v308;
      ((void (*)(_BYTE *, uint64_t, _QWORD *))v84)(v42, v111, v308);
      v114 = swift_unknownObjectRetain_n(v74, 2);
      v115 = Logger.logObject.getter(v114);
      v116 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v115, v116))
      {
        v117 = swift_slowAlloc(22, -1);
        v303 = (void **)swift_slowAlloc(64, -1);
        aBlock = v303;
        *(_DWORD *)v117 = 136315394;
        v315 = sub_1000544FC(0xD00000000000004ALL, 0x8000000100517FD0, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
        *(_WORD *)(v117 + 12) = 2080;
        v118 = objc_msgSend(v74, "displayName");
        v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
        v120 = v84;
        v122 = v121;

        v113 = v308;
        v123 = v119;
        v74 = v305;
        v315 = sub_1000544FC(v123, v122, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v315, v316);
        swift_unknownObjectRelease_n(v74, 2);
        v124 = v122;
        v84 = v120;
        swift_bridgeObjectRelease(v124);
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "%s: Location has an FPItem : %s.", (uint8_t *)v117, 0x16u);
        v125 = v303;
        swift_arrayDestroy(v303, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v125, -1, -1);
        swift_slowDealloc(v117, -1, -1);

        v126 = v306[1];
      }
      else
      {

        swift_unknownObjectRelease_n(v74, 2);
        v126 = v112[1];
      }
      v138 = v42;
    }
    v139 = ((uint64_t (*)(_BYTE *, _QWORD *))v126)(v138, v113);
    v140 = v284;
    v141 = v287;
    goto LABEL_45;
  }
  v95 = v288;
  v96 = v287;
  v97 = objc_msgSend(v287, "identifier");
  v98 = objc_msgSend(v96, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v100 = v99;

  v101 = objc_allocWithZone((Class)DOCConcreteLocation);
  v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v100);
  v103 = objc_msgSend(v101, "initWithSourceIdentifier:title:", v97, v102);

  v104 = objc_opt_self(DOCPickerSource);
  objc_msgSend(v103, "setIsFPV2:", swift_dynamicCastObjCClass(v96, v104) == 0);
  v105 = objc_msgSend(v96, "promptText");
  if (!v105)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v107 = v106;
    v105 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v107);
  }
  objc_msgSend(v103, "setPromptText:", v105);

  v108 = v95;
  v109 = v103;
  v110 = v284;
  ((void (*)(void))v307)();
  swift_release(v110);
  swift_release(v285);

}

uint64_t sub_1001F0AFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F0B30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001F0B4C()
{
  return sub_1000ABB28((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100022A04);
}

void sub_1001F0B5C(char a1)
{
  uint64_t v1;

  sub_1001E47A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

void sub_1001F0B68(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001E7C44(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1001F0B78(void *a1)
{
  uint64_t v1;

  sub_1000ABD54(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), "resolving .defaultSaveLocation: location is nil, using empty location instead.");
}

uint64_t sub_1001F0BA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

void sub_1001F0BD8(char *a1)
{
  uint64_t v1;

  sub_1001E8FA4(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1001F0BE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F0C24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

void *sub_1001F0C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v29;

  if ((unint64_t)a1 >> 62)
    goto LABEL_26;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v27))
  {
    v3 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v6 = v5;
      v7 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
      if (v9 == v12 && v11 == v13)
      {
        swift_bridgeObjectRelease(a1);

        swift_bridgeObjectRelease(v11);
        goto LABEL_23;
      }
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);

      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v16 & 1) != 0)
        goto LABEL_21;
      v17 = type metadata accessor for DOCFileProviderSource();
      v18 = swift_dynamicCastClass(v6, v17);
      if (v18 && (v19 = *(void **)(v18 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
      {
        v20 = v19;
        v4 = v6;
        if (DOCProviderDomainIsSharedServerDomain(v20))
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
          v29 = v21;
          v22 = objc_msgSend(v4, "identifier");
          v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v25 = v24;

          v26._countAndFlagsBits = v23;
          v26._object = v25;
          LOBYTE(v22) = String.hasPrefix(_:)(v26);
          swift_bridgeObjectRelease(v29);
          swift_bridgeObjectRelease(v25);

          if ((v22 & 1) != 0)
          {
LABEL_21:
            v11 = a1;
LABEL_23:
            swift_bridgeObjectRelease(v11);
            return v6;
          }
        }
        else
        {

          v4 = v20;
        }
      }
      else
      {
        v4 = v6;
      }

      ++v3;
      if (v7 == v2)
        goto LABEL_30;
    }
    __break(1u);
LABEL_26:
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_30:
  swift_bridgeObjectRelease(a1);
  return 0;
}

void sub_1001F0EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001E96FC(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1001F0EF4(uint64_t a1, unint64_t a2)
{
  return sub_1001F0F08(a1, a2, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
}

uint64_t sub_1001F0F08(uint64_t result, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v7 = a3;
    v4 = a2;
    v5 = result;
    v8 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v4 < 0)
    v20 = v4;
  else
    v20 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v9 = _CocoaArrayWrapper.endIndex.getter(v20);
  result = swift_bridgeObjectRelease(v4);
LABEL_4:
  if (v9 >= v5)
    v10 = v5;
  else
    v10 = v9;
  if (v9 < 0)
    v10 = v5;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  if (v9 < v11)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v8)
  {
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v12 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = swift_bridgeObjectRelease(v4);
  }
  else
  {
    v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 < v11)
    goto LABEL_46;
  if (v11 < 0)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v8)
  {
    if (v4 < 0)
      v15 = v4;
    else
      v15 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v14 = _CocoaArrayWrapper.endIndex.getter(v15);
    result = swift_bridgeObjectRelease(v4);
  }
  else
  {
    v14 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 < v9)
    goto LABEL_48;
  if ((v4 & 0xC000000000000001) == 0 || v11 == v9)
    goto LABEL_33;
  if (v11 >= (unint64_t)v9)
  {
LABEL_49:
    __break(1u);
    return result;
  }
  sub_10004F2F0(0, v7, v6);
  v16 = v11;
  do
  {
    v17 = v16 + 1;
    _ArrayBuffer._typeCheckSlowPath(_:)(v16);
    v16 = v17;
  }
  while (v9 != v17);
LABEL_33:
  if (v8)
  {
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v18 = _CocoaArrayWrapper.subscript.getter(v11, v9, v19);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
  }
  return v18;
}

uint64_t sub_1001F10F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id *i;
  void *v7;
  id v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  sub_10004F2F0(0, (unint64_t *)&qword_100642430, NSObject_ptr);
  v5 = 0;
  for (i = (id *)(a1 + 40); ; i += 2)
  {
    v7 = *(i - 1);
    v8 = *i;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, a2);

    if ((v7 & 1) != 0)
      break;
    if (v2 == ++v5)
      return 0;
  }
  return v5;
}

uint64_t sub_1001F11C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[24];
  _BYTE v22[24];

  v8 = sub_10006922C((uint64_t *)&unk_1006475B0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  v12 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (uint64_t *)(a2 + 16);
  v16 = swift_projectBox(a3);
  v17 = a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8) & 1) == 0
    && !*(_QWORD *)v17)
  {
    *(_QWORD *)v17 = 0;
    *(_BYTE *)(v17 + 8) = 1;
  }
  swift_beginAccess(v15, v22, 0, 0);
  v18 = *v15;
  if (v18)
  {
    swift_retain();
    sub_1001D6274(v19, 0);
    swift_release(v18);
  }
  swift_beginAccess(v16, v21, 0, 0);
  sub_1000271D4(v16, (uint64_t)v10, (uint64_t *)&unk_1006475B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, updated) != 1)
  {
    sub_1001D0788((uint64_t)v10, (uint64_t)v14, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    sub_1001D5D30((uint64_t)v14);
    result = sub_10007C720((uint64_t)v14, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    if (!a4)
      return result;
    return a4(result);
  }
  result = sub_10000CB4C((uint64_t)v10, (uint64_t *)&unk_1006475B0);
  if (a4)
    return a4(result);
  return result;
}

id sub_1001F1388()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v13;
  unsigned int v14;
  void *v15;
  id v16;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;

  static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDefaultsSuiteName);
  v1 = v0;
  v2 = objc_allocWithZone((Class)NSUserDefaults);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithSuiteName:", v3, swift_bridgeObjectRelease(v1).n128_f64[0]);

  if (!v4)
  {
    v18 = 0u;
    v19 = 0u;
LABEL_11:
    v8 = sub_10000CB4C((uint64_t)&v18, &qword_100642730);
    goto LABEL_12;
  }
  v5 = objc_msgSend(v4, "objectForKey:", DOCTestUserDefaultsKeyBrowseTabSelected);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v17, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_100070EDC((uint64_t)v17, (uint64_t)&v18, &qword_100642730);
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_11;
  v7 = sub_10004F2F0(0, &qword_10064C3A0, NSNumber_ptr);
  v8 = swift_dynamicCast(v17, &v18, (char *)&type metadata for Any + 8, v7, 6);
  if ((v8 & 1) == 0)
  {
LABEL_12:
    static DOCTabSwitcherStyleTrait.defaultValue.getter(v8);
    goto LABEL_13;
  }
  v9 = *(void **)&v17[0];
  v10 = static DOCTabSwitcherStyleTrait.defaultValue.getter(v8);
  if (!v9)
  {
LABEL_13:

    return 0;
  }
  if (v10)
  {

    goto LABEL_13;
  }
  v13 = v9;
  v14 = objc_msgSend(v13, "BOOLValue");
  v15 = (void *)objc_opt_self(DOCConcreteLocation);
  if (v14)
    v16 = objc_msgSend(v15, "iCloudDriveLocation");
  else
    v16 = objc_msgSend(v15, "recentDocumentsLocation");
  v11 = v16;

  return v11;
}

BOOL sub_1001F1558(void *a1, unint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::Bool v8;
  id v9;

  v3 = objc_msgSend(a1, "sourceIdentifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierICloudFPv2);
  object = v6._object;
  v8 = String.hasPrefix(_:)(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(object);
  if (v8 && a2 >= 2)
    v9 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "iCloudDriveLocation");
  return v8;
}

id sub_1001F1618(void *a1, id a2)
{
  id v4;
  id v5;
  id v6;
  BOOL v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  unsigned __int8 v12;

  v4 = sub_1001F1388();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    v7 = sub_1001F1558(a1, (unint64_t)a2);
    v6 = v8;
    if (v7)
    {
      if (!v8)
        return v6;
    }
    else
    {

      v6 = a1;
    }
  }
  v9 = objc_msgSend(v6, "fileProviderItem");
  if (v9
    && (v10 = v9,
        v11 = objc_msgSend((id)objc_opt_self(DOCManagedPermission), "defaultPermission"),
        v12 = objc_msgSend(v11, "canHostAppPerformAction:targetNode:", 0, v10),
        v11,
        v10,
        (v12 & 1) == 0)
    || objc_msgSend(v6, "effectiveTabSwitcherTab") != a2
    || !v5 && (objc_msgSend(v6, "canBeRestored") & 1) == 0)
  {

    return 0;
  }
  return v6;
}

void sub_1001F1728(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v34[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34[-1] - v9;
  v11 = objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled");
  if ((_DWORD)v11)
  {
    if (a1)
    {
      v12 = type metadata accessor for DOCBrowserContainerController();
      v13 = (char *)swift_dynamicCastClass(a2, v12);
      v14 = v13;
      if (v13)
      {
        v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess(&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v34, 0, 0);
        v16 = *v15;
        if (v16)
        {
          v17 = type metadata accessor for DOCItemCollectionViewController(0);
          v18 = swift_dynamicCastClass(v16, v17);
          v13 = a2;
          if (v18)
          {
            v19 = v13;
            v20 = v16;
            sub_1003DF7A0();

            return;
          }
        }
        else
        {
          v13 = a2;
        }
      }
      v27 = Logger.UI.unsafeMutableAddressor(v13);
      v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v27, v4);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        v32 = swift_slowAlloc(32, -1);
        v36 = v32;
        *(_DWORD *)v31 = 136315138;
        v35 = sub_1000544FC(0xD000000000000030, 0x8000000100518140, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "[PROTECTED APPS] %s authenticateLocationWithNoUI nil view controller", v31, 0xCu);
        swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v32, -1, -1);
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    else
    {
      v21 = Logger.UI.unsafeMutableAddressor(v11);
      v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v21, v4);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, (os_log_type_t)v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v34[0] = v26;
        *(_DWORD *)v25 = 136315138;
        v36 = sub_1000544FC(0xD000000000000030, 0x8000000100518140, v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
        _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v24, "[PROTECTED APPS] %s authenticateLocationWithNoUI nil node", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

void sub_1001F1AC0(uint64_t a1, uint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t Strong;
  void *v45;
  Class isa;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _QWORD aBlock[5];
  uint64_t v57;
  char v58[24];

  v12 = swift_allocObject(&unk_1005D09A0, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v58, 0, 0);
  v14 = *v13;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v52 = v14;
    else
      v52 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v15 >= a1, sub_1001DB2F4, 0, 0, 0) & 1) == 0)
  {
    a5();
    swift_release(v12);
    return;
  }
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v53 = a2;
    else
      v53 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v16 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v16 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    if (v16 < 0)
    {
      __break(1u);
      return;
    }
    v54 = a3;
    v55 = a1;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v18 = 0;
      do
      {
        v19 = v18 + 1;
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a2);
        v21 = *(id *)(v20 + 16);
        swift_unknownObjectRelease(v20);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v23 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
        v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized ContiguousArray._endMutation()(v24);
        v18 = v19;
      }
      while (v16 != v19);
    }
    else
    {
      v26 = (uint64_t *)(a2 + 32);
      v27 = v16;
      do
      {
        v28 = *v26++;
        v29 = *(id *)(v28 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v30 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
        v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v29);
        specialized ContiguousArray._endMutation()(v31);
        --v27;
      }
      while (v27);
    }
    v25 = (_QWORD *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    if ((a2 & 0xC000000000000001) != 0)
    {
      v32 = 0;
      do
      {
        v33 = v32 + 1;
        v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, a2);
        v35 = *(id *)(v34 + 24);
        swift_unknownObjectRelease(v34);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
        v37 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
        v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
        specialized ContiguousArray._endMutation()(v38);
        v32 = v33;
      }
      while (v16 != v33);
    }
    else
    {
      v39 = (uint64_t *)(a2 + 32);
      do
      {
        v40 = *v39++;
        v41 = *(id *)(v40 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v42 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v42);
        v43 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v41);
        specialized ContiguousArray._endMutation()(v43);
        --v16;
      }
      while (v16);
    }
    a1 = v55;
    v17 = (_QWORD *)aBlock[0];
    a3 = v54;
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  if (Strong)
  {
    v45 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v47 = swift_allocObject(&unk_1005D09C8, 80, 7);
    *(_QWORD *)(v47 + 16) = a4;
    *(_QWORD *)(v47 + 24) = a1;
    *(_QWORD *)(v47 + 32) = v25;
    *(_QWORD *)(v47 + 40) = v17;
    v48 = a3 & 1;
    *(_BYTE *)(v47 + 48) = v48;
    *(_QWORD *)(v47 + 56) = a2;
    *(_QWORD *)(v47 + 64) = sub_10010DF60;
    *(_QWORD *)(v47 + 72) = v12;
    aBlock[4] = sub_1001F55CC;
    v57 = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D09E0;
    v49 = _Block_copy(aBlock);
    v50 = v57;
    swift_bridgeObjectRetain(a2);
    v51 = a4;
    swift_retain();
    objc_msgSend(v45, "hierarchyController:willReplaceTrailingLocations:with:animated:completion:", v51, a1, isa, v48, v49, swift_release(v50).n128_f64[0]);
    swift_unknownObjectRelease(v45);
    _Block_release(v49);
    swift_release(v12);

  }
  else
  {
    swift_release(v12);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v25);
  }
}

void sub_1001F1F2C(void *a1, uint64_t a2, int a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void **p_vtable;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  _QWORD v38[5];
  unsigned int v39;
  char *v40;
  char v41[24];
  _QWORD v42[3];

  LODWORD(v9) = a3;
  v12 = swift_allocObject(&unk_1005D0978, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v31 = a2;
    else
      v31 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a6, 2);
    swift_bridgeObjectRetain(a2);
    v14 = (id)_CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = *(id *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a6, 2);
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)((uint64_t)v14 > 0, sub_1001DACB4, 0, 0, 0) & 1) == 0)
    goto LABEL_32;
  p_vtable = &OBJC_METACLASS____TtC5Files16DOCCopyableLabel.vtable;
  if (!a1)
  {
LABEL_12:
    if (v14 != (id)1)
    {
      v23 = 0;
      goto LABEL_20;
    }
    if (v13)
    {
      if (a2 < 0)
        v27 = a2;
      else
        v27 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v24 = _CocoaArrayWrapper.endIndex.getter(v27);
    }
    else
    {
      v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
    }
    if (v24)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
        swift_bridgeObjectRelease(a2);
        v29 = *(id *)(v36 + 16);
        swift_unknownObjectRelease(v36);
        swift_bridgeObjectRetain(a2);
        v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
        swift_bridgeObjectRelease(a2);
        goto LABEL_31;
      }
      if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v28 = *(_QWORD *)(a2 + 32);
        swift_retain();
        swift_bridgeObjectRelease(a2);
        v29 = *(id *)(v28 + 16);
LABEL_31:
        v30 = *(id *)(v28 + 24);
        swift_release(v28);
        sub_1001DACD0(v29, v30, v9 & 1);

LABEL_32:
        a5();
        swift_release(a6);
        swift_release(v12);
        return;
      }
      __break(1u);
    }
    v37 = swift_bridgeObjectRelease(a2);
    swift_release_n(a6, 2, v37);
    __break(1u);
    return;
  }
  v39 = v9;
  v40 = a4;
  v16 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v41, 0, 0);
  v17 = *v16;
  v42[0] = a1;
  __chkstk_darwin(v18);
  v38[2] = v42;
  swift_bridgeObjectRetain(v17);
  v14 = a1;
  v19 = sub_1001D535C((uint64_t (*)(id *))sub_1001F55D0, (uint64_t)v38, v17);
  v13 = v20;
  swift_bridgeObjectRelease(v17);
  v9 = *v16;
  v21 = (unint64_t)*v16 >> 62;
  if ((v13 & 1) == 0)
  {
    if (v21)
    {
      if (v9 < 0)
        v13 = *v16;
      else
        v13 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v16);
      v22 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v22 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    a4 = v40;

    p_vtable = (void **)(v22 - v19);
    v9 = v39;
    if (!__OFSUB__(v22, v19))
    {
      v23 = (uint64_t)p_vtable - 1;
      if (!__OFSUB__(p_vtable, 1))
        goto LABEL_18;
      __break(1u);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_48;
  }
  if (v21)
  {
LABEL_48:
    if (v9 < 0)
      v35 = v9;
    else
      v35 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v9);
    goto LABEL_17;
  }
  v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  a4 = v40;

  LOBYTE(v9) = v39;
LABEL_18:
  p_vtable = (void **)(&OBJC_METACLASS____TtC5Files16DOCCopyableLabel + 24);
LABEL_20:
  v25 = (uint64_t *)((char *)p_vtable[2] + (_QWORD)a4);
  swift_beginAccess(v25, v42, 0, 0);
  v26 = *v25;
  if ((unint64_t)*v25 >> 62)
  {
    if (v26 < 0)
      v32 = *v25;
    else
      v32 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v26);
    if (v23 == v33)
      goto LABEL_22;
  }
  else if (v23 == *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    sub_10004C720(a2, v9 & 1, (uint64_t)sub_10010DF60, v12);
    swift_release(a6);
    swift_release(v12);
    return;
  }
  swift_retain();
  sub_1001F1AC0(v23, a2, v9 & 1, a4, a5, a6);
  v34 = swift_release(v12);
  swift_release_n(a6, 2, v34);
}

void sub_1001F2378(uint64_t a1, uint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  void *v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD aBlock[5];
  uint64_t v58;
  char v59[24];

  v12 = swift_allocObject(&unk_1005D02E8, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v59, 0, 0);
  v14 = *v13;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v53 = v14;
    else
      v53 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v15 >= a1, sub_1001DB2F4, 0, 0, 0) & 1) == 0)
  {
    a5();
    swift_release(v12);
    return;
  }
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v54 = a2;
    else
      v54 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v17 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v17);
    if (v17 < 0)
    {
      __break(1u);
      return;
    }
    v55 = a3;
    v56 = a1;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v19 = 0;
      do
      {
        v20 = v19 + 1;
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a2);
        v22 = *(id *)(v21 + 16);
        swift_unknownObjectRelease(v21);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v24 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
        v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized ContiguousArray._endMutation()(v25);
        v19 = v20;
      }
      while (v17 != v20);
    }
    else
    {
      v27 = (uint64_t *)(a2 + 32);
      v28 = v17;
      do
      {
        v29 = *v27++;
        v30 = *(id *)(v29 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v31 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
        v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v30);
        specialized ContiguousArray._endMutation()(v32);
        --v28;
      }
      while (v28);
    }
    v26 = (_QWORD *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v17);
    if ((a2 & 0xC000000000000001) != 0)
    {
      v33 = 0;
      do
      {
        v34 = v33 + 1;
        v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a2);
        v36 = *(id *)(v35 + 24);
        swift_unknownObjectRelease(v35);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
        v38 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
        v39 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
        specialized ContiguousArray._endMutation()(v39);
        v33 = v34;
      }
      while (v17 != v34);
    }
    else
    {
      v40 = (uint64_t *)(a2 + 32);
      do
      {
        v41 = *v40++;
        v42 = *(id *)(v41 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
        v43 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
        v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v42);
        specialized ContiguousArray._endMutation()(v44);
        --v17;
      }
      while (v17);
    }
    a1 = v56;
    v18 = (_QWORD *)aBlock[0];
    a3 = v55;
  }
  else
  {
    v26 = _swiftEmptyArrayStorage;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v16);
  if (Strong)
  {
    v46 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v48 = swift_allocObject(&unk_1005D0310, 80, 7);
    *(_QWORD *)(v48 + 16) = a4;
    *(_QWORD *)(v48 + 24) = a1;
    *(_QWORD *)(v48 + 32) = v26;
    *(_QWORD *)(v48 + 40) = v18;
    v49 = a3 & 1;
    *(_BYTE *)(v48 + 48) = v49;
    *(_QWORD *)(v48 + 56) = a2;
    *(_QWORD *)(v48 + 64) = sub_10010DF60;
    *(_QWORD *)(v48 + 72) = v12;
    aBlock[4] = sub_1001F55CC;
    v58 = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D0328;
    v50 = _Block_copy(aBlock);
    v51 = v58;
    swift_bridgeObjectRetain(a2);
    v52 = a4;
    swift_retain();
    swift_release(v51);
    objc_msgSend(v46, "hierarchyController:willReplaceTrailingLocations:with:animated:completion:", v52, a1, isa, v49, v50);
    swift_unknownObjectRelease(v46);
    _Block_release(v50);
    swift_release(v12);

  }
  else
  {
    swift_release(v12);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v26);
  }
}

uint64_t sub_1001F27E4(void *a1, uint64_t a2, int a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void **p_vtable;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  _QWORD v39[5];
  unsigned int v40;
  char *v41;
  char v42[24];
  _QWORD v43[3];

  LODWORD(v9) = a3;
  v12 = swift_allocObject(&unk_1005D0270, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v32 = a2;
    else
      v32 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_retain_n(a6, 2);
    swift_bridgeObjectRetain(a2);
    v14 = (id)_CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = *(id *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n(a6, 2);
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)((uint64_t)v14 > 0, sub_1001DACB4, 0, 0, 0) & 1) == 0)
    goto LABEL_32;
  p_vtable = &OBJC_METACLASS____TtC5Files16DOCCopyableLabel.vtable;
  if (!a1)
  {
LABEL_12:
    if (v14 != (id)1)
    {
      v23 = 0;
      goto LABEL_20;
    }
    if (v13)
    {
      if (a2 < 0)
        v28 = a2;
      else
        v28 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v24 = _CocoaArrayWrapper.endIndex.getter(v28);
    }
    else
    {
      v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
    }
    if (v24)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
        swift_bridgeObjectRelease(a2);
        v30 = *(id *)(v37 + 16);
        swift_unknownObjectRelease(v37);
        swift_bridgeObjectRetain(a2);
        v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
        swift_bridgeObjectRelease(a2);
        goto LABEL_31;
      }
      if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v29 = *(_QWORD *)(a2 + 32);
        swift_retain();
        swift_bridgeObjectRelease(a2);
        v30 = *(id *)(v29 + 16);
LABEL_31:
        v31 = *(id *)(v29 + 24);
        swift_release(v29);
        sub_1001DACD0(v30, v31, v9 & 1);

LABEL_32:
        a5();
        swift_release(a6);
        return swift_release(v12);
      }
      __break(1u);
    }
    v38 = swift_bridgeObjectRelease(a2);
    result = swift_release_n(a6, 2, v38);
    __break(1u);
    return result;
  }
  v40 = v9;
  v41 = a4;
  v16 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v42, 0, 0);
  v17 = *v16;
  v43[0] = a1;
  __chkstk_darwin(v18);
  v39[2] = v43;
  swift_bridgeObjectRetain(v17);
  v14 = a1;
  v19 = sub_1001D535C((uint64_t (*)(id *))sub_1001F55D0, (uint64_t)v39, v17);
  v13 = v20;
  swift_bridgeObjectRelease(v17);
  v9 = *v16;
  v21 = (unint64_t)*v16 >> 62;
  if ((v13 & 1) == 0)
  {
    if (v21)
    {
      if (v9 < 0)
        v13 = *v16;
      else
        v13 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v16);
      v22 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v22 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    a4 = v41;

    p_vtable = (void **)(v22 - v19);
    v9 = v40;
    if (!__OFSUB__(v22, v19))
    {
      v23 = (uint64_t)p_vtable - 1;
      if (!__OFSUB__(p_vtable, 1))
        goto LABEL_18;
      __break(1u);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_48;
  }
  if (v21)
  {
LABEL_48:
    if (v9 < 0)
      v36 = v9;
    else
      v36 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v9);
    goto LABEL_17;
  }
  v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  a4 = v41;

  LOBYTE(v9) = v40;
LABEL_18:
  p_vtable = (void **)(&OBJC_METACLASS____TtC5Files16DOCCopyableLabel + 24);
LABEL_20:
  v25 = (uint64_t *)((char *)p_vtable[2] + (_QWORD)a4);
  swift_beginAccess(v25, v43, 0, 0);
  v26 = *v25;
  if ((unint64_t)*v25 >> 62)
  {
    if (v26 < 0)
      v33 = *v25;
    else
      v33 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v26);
    if (v23 == v34)
      goto LABEL_22;
  }
  else if (v23 == *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    sub_10004C720(a2, v9 & 1, (uint64_t)sub_10010DF60, v12);
    swift_release(a6);
    return swift_release(v12);
  }
  swift_retain();
  sub_1001F2378(v23, a2, v9 & 1, a4, a5, a6);
  swift_release(v12);
  return swift_release_n(a6, 2, v35);
}

void sub_1001F2C30(uint64_t a1, uint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t Strong;
  void *v45;
  Class isa;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _QWORD aBlock[5];
  uint64_t v57;
  char v58[24];

  v12 = swift_allocObject(&unk_1005D0900, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v58, 0, 0);
  v14 = *v13;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v52 = v14;
    else
      v52 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v15 >= a1, sub_1001DB2F4, 0, 0, 0) & 1) == 0)
  {
    a5();
    swift_release(v12);
    return;
  }
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v53 = a2;
    else
      v53 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v16 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v16 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    if (v16 < 0)
    {
      __break(1u);
      return;
    }
    v54 = a3;
    v55 = a1;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v18 = 0;
      do
      {
        v19 = v18 + 1;
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a2);
        v21 = *(id *)(v20 + 16);
        swift_unknownObjectRelease(v20);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v23 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
        v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
        specialized ContiguousArray._endMutation()(v24);
        v18 = v19;
      }
      while (v16 != v19);
    }
    else
    {
      v26 = (uint64_t *)(a2 + 32);
      v27 = v16;
      do
      {
        v28 = *v26++;
        v29 = *(id *)(v28 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v30 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
        v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v29);
        specialized ContiguousArray._endMutation()(v31);
        --v27;
      }
      while (v27);
    }
    v25 = (_QWORD *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    if ((a2 & 0xC000000000000001) != 0)
    {
      v32 = 0;
      do
      {
        v33 = v32 + 1;
        v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, a2);
        v35 = *(id *)(v34 + 24);
        swift_unknownObjectRelease(v34);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
        v37 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
        v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
        specialized ContiguousArray._endMutation()(v38);
        v32 = v33;
      }
      while (v16 != v33);
    }
    else
    {
      v39 = (uint64_t *)(a2 + 32);
      do
      {
        v40 = *v39++;
        v41 = *(id *)(v40 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v42 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v42);
        v43 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v41);
        specialized ContiguousArray._endMutation()(v43);
        --v16;
      }
      while (v16);
    }
    a1 = v55;
    v17 = (_QWORD *)aBlock[0];
    a3 = v54;
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate]);
  if (Strong)
  {
    v45 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v47 = swift_allocObject(&unk_1005D0928, 80, 7);
    *(_QWORD *)(v47 + 16) = a4;
    *(_QWORD *)(v47 + 24) = a1;
    *(_QWORD *)(v47 + 32) = v25;
    *(_QWORD *)(v47 + 40) = v17;
    v48 = a3 & 1;
    *(_BYTE *)(v47 + 48) = v48;
    *(_QWORD *)(v47 + 56) = a2;
    *(_QWORD *)(v47 + 64) = sub_100066584;
    *(_QWORD *)(v47 + 72) = v12;
    aBlock[4] = sub_1001F55CC;
    v57 = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D0940;
    v49 = _Block_copy(aBlock);
    v50 = v57;
    swift_bridgeObjectRetain(a2);
    v51 = a4;
    swift_retain();
    objc_msgSend(v45, "hierarchyController:willReplaceTrailingLocations:with:animated:completion:", v51, a1, isa, v48, v49, swift_release(v50).n128_f64[0]);
    swift_unknownObjectRelease(v45);
    _Block_release(v49);
    swift_release(v12);

  }
  else
  {
    swift_release(v12);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v25);
  }
}

void sub_1001F309C(uint64_t a1, uint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Strong;
  void *v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  _QWORD aBlock[5];
  uint64_t v58;
  char v59[24];

  v12 = swift_allocObject(&unk_1005D01F8, 32, 7);
  *(_QWORD *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = a6;
  v13 = (uint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations], v59, 0, 0);
  v14 = *v13;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v53 = v14;
    else
      v53 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)(v15 >= a1, sub_1001DB2F4, 0, 0, 0) & 1) == 0)
  {
    a5();
    swift_release(v12);
    return;
  }
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v54 = a2;
    else
      v54 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v17 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = _swiftEmptyArrayStorage;
  if (v17)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v17);
    if (v17 < 0)
    {
      __break(1u);
      return;
    }
    v55 = a3;
    v56 = a1;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v19 = 0;
      do
      {
        v20 = v19 + 1;
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a2);
        v22 = *(id *)(v21 + 16);
        swift_unknownObjectRelease(v21);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v24 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
        v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized ContiguousArray._endMutation()(v25);
        v19 = v20;
      }
      while (v17 != v20);
    }
    else
    {
      v27 = (uint64_t *)(a2 + 32);
      v28 = v17;
      do
      {
        v29 = *v27++;
        v30 = *(id *)(v29 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v31 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
        v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v30);
        specialized ContiguousArray._endMutation()(v32);
        --v28;
      }
      while (v28);
    }
    v26 = (_QWORD *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v17);
    if ((a2 & 0xC000000000000001) != 0)
    {
      v33 = 0;
      do
      {
        v34 = v33 + 1;
        v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a2);
        v36 = *(id *)(v35 + 24);
        swift_unknownObjectRelease(v35);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v37);
        v38 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v38);
        v39 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
        specialized ContiguousArray._endMutation()(v39);
        v33 = v34;
      }
      while (v17 != v34);
    }
    else
    {
      v40 = (uint64_t *)(a2 + 32);
      do
      {
        v41 = *v40++;
        v42 = *(id *)(v41 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
        v43 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
        v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v42);
        specialized ContiguousArray._endMutation()(v44);
        --v17;
      }
      while (v17);
    }
    a1 = v56;
    v18 = (_QWORD *)aBlock[0];
    a3 = v55;
  }
  else
  {
    v26 = _swiftEmptyArrayStorage;
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate], v16);
  if (Strong)
  {
    v46 = (void *)Strong;
    sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v48 = swift_allocObject(&unk_1005D0220, 80, 7);
    *(_QWORD *)(v48 + 16) = a4;
    *(_QWORD *)(v48 + 24) = a1;
    *(_QWORD *)(v48 + 32) = v26;
    *(_QWORD *)(v48 + 40) = v18;
    v49 = a3 & 1;
    *(_BYTE *)(v48 + 48) = v49;
    *(_QWORD *)(v48 + 56) = a2;
    *(_QWORD *)(v48 + 64) = sub_10010DF60;
    *(_QWORD *)(v48 + 72) = v12;
    aBlock[4] = sub_1001F55CC;
    v58 = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D0238;
    v50 = _Block_copy(aBlock);
    v51 = v58;
    swift_bridgeObjectRetain(a2);
    v52 = a4;
    swift_retain();
    swift_release(v51);
    objc_msgSend(v46, "hierarchyController:willReplaceTrailingLocations:with:animated:completion:", v52, a1, isa, v49, v50);
    swift_unknownObjectRelease(v46);
    _Block_release(v50);
    swift_release(v12);

  }
  else
  {
    swift_release(v12);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v26);
  }
}

uint64_t sub_1001F3508(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  SEL *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  void *v24;
  id v25;
  _QWORD *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  id v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = Logger.UI.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v12, v6);
  v13 = swift_retain_n(v11, 4);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter();
  v37 = v15;
  v16 = (SEL *)&off_10061F000;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(32, -1);
    v36 = v6;
    v18 = v17;
    v34 = (_QWORD *)swift_slowAlloc(8, -1);
    v35 = swift_slowAlloc(64, -1);
    v40 = v35;
    *(_DWORD *)v18 = 136315650;
    v38 = (id)sub_1000544FC(a2, a3, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    *(_WORD *)(v18 + 12) = 2080;
    v38 = objc_msgSend(*(id *)(v11 + 16), "node");
    v19 = sub_10006922C(&qword_100652EB0);
    v20 = String.init<A>(describing:)(&v38, v19);
    v22 = v21;
    v38 = (id)sub_1000544FC(v20, v21, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    swift_release_n(v11, 2, v23);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 22) = 2112;
    v33 = v7;
    v24 = *(void **)(v11 + 24);
    v38 = v24;
    v25 = v24;
    v16 = (SEL *)&off_10061F000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    v26 = v34;
    *v34 = v24;
    swift_release_n(v11, 2, v27);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v37, "[PROTECTED APPS] %s start authentication for node: %s viewController: %@", (uint8_t *)v18, 0x20u);
    v28 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v26, 1, v28);
    swift_slowDealloc(v26, -1, -1);
    v29 = v35;
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v36);
  }
  else
  {

    swift_release_n(v11, 4, v30);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v31 = objc_msgSend(*(id *)(v11 + 16), v16[494]);
  sub_1001F1728((uint64_t)v31, *(void **)(v11 + 24));
  return swift_unknownObjectRelease(v31);
}

void sub_1001F3814(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD aBlock[5];
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v30 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C((uint64_t *)&unk_1006443D0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v26 - v12;
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation], v35, 0, 0);
  sub_1000271D4(v14, (uint64_t)v11, (uint64_t *)&unk_1006443D0);
  v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v11, 1, v15) == 1)
  {
    v18 = (uint64_t)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation], v34, 0, 0);
    sub_1000271D4(v18, (uint64_t)v13, (uint64_t *)&unk_1006443D0);
    sub_10000CB4C((uint64_t)v11, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    sub_1001D0788((uint64_t)v11, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  if (v17(v13, 1, v15) == 1)
  {
    sub_10000CB4C((uint64_t)v13, (uint64_t *)&unk_1006443D0);
  }
  else
  {
    v19 = v13[*(int *)(v15 + 24)];
    sub_10007C720((uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    if ((v19 & 1) != 0)
    {
      v20 = swift_allocObject(&unk_1005D0450, 32, 7);
      v21 = v30;
      *(_QWORD *)(v20 + 16) = v1;
      *(_QWORD *)(v20 + 24) = v21;
      aBlock[4] = sub_1001F5714;
      v33 = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D0468;
      v22 = _Block_copy(aBlock);
      static DispatchQoS.unspecified.getter(v1);
      v31 = _swiftEmptyArrayStorage;
      v23 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v24 = sub_10006922C((uint64_t *)&unk_100647540);
      v25 = sub_100062698((unint64_t *)&qword_100641270, (uint64_t *)&unk_100647540, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v24, v25, v2, v23);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
      swift_release(v33);
      return;
    }
  }
  sub_1001DB698((uint64_t)v1, v30);
}

void sub_1001F3B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  void *Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10006922C((uint64_t *)&unk_1006443D0);
  __chkstk_darwin(v8);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v33, 0, 0);
  v12 = *v11;
  swift_bridgeObjectRetain(*v11);
  v13 = sub_100174624(a1, v12);
  v15 = v14;
  swift_bridgeObjectRelease(v12);
  if ((v15 & 1) == 0)
  {
    v17 = *v11;
    if ((unint64_t)*v11 >> 62)
    {
      if (v17 < 0)
        v30 = *v11;
      else
        v30 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v11);
      v31 = _CocoaArrayWrapper.endIndex.getter(v30);
      swift_bridgeObjectRelease(v17);
      v19 = __OFSUB__(v31, v13);
      v20 = v31 - v13;
      if (!v19)
        goto LABEL_4;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = __OFSUB__(v18, v13);
      v20 = v18 - v13;
      if (!v19)
      {
LABEL_4:
        if (v20 >= 1)
        {
          v21 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
          sub_1001D6804((uint64_t)v10, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
          v32 = *v11;
          swift_bridgeObjectRetain(v32);
          sub_1001DB5C0(v20, (uint64_t (*)(void))sub_10045C054, v22);
          DOCHierarchyController.locations.setter(v32);
          Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delegate);
          if (Strong)
          {
            v24 = Strong;
            objc_msgSend(Strong, "hierarchyController:didPopLocations:animated:", v2, v20, 0);
            swift_unknownObjectRelease(v24);
          }
        }
        return;
      }
    }
    __break(1u);
    return;
  }
  v25 = Logger.UI.unsafeMutableAddressor(v16);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v25, v4);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Cannot remove the location after a location that is not in the locations array", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1001F3E18(void *a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void **v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t *v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_t v42;
  uint64_t *v43;
  int v44;
  uint64_t v45;
  int v46;
  id v47;
  char v48[24];
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v41 - v9;
  if (!objc_msgSend((id)objc_opt_self(DOCFeature), "protectedAppsEnabled"))
    return;
  v11 = type metadata accessor for DOCBrowserContainerController();
  v12 = (char *)swift_dynamicCastClass(a1, v11);
  v13 = v12;
  if (v12)
  {
    v14 = (void **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess(&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v48, 0, 0);
    v15 = *v14;
    if (*v14)
    {
      v16 = type metadata accessor for DOCItemCollectionViewController(0);
      v17 = swift_dynamicCastClass(v15, v16);
      if (v17)
      {
        v18 = v17;
        v19 = v15;
        v20 = a1;
        v21 = v19;
        v22 = Logger.UI.unsafeMutableAddressor(v21);
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v22, v4);
        v23 = v21;
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.debug.getter();
        v26 = v25;
        if (os_log_type_enabled(v24, v25))
        {
          v27 = swift_slowAlloc(22, -1);
          v44 = v26;
          v28 = v27;
          v43 = (uint64_t *)swift_slowAlloc(8, -1);
          v45 = swift_slowAlloc(32, -1);
          v50 = v45;
          *(_DWORD *)v28 = 136315394;
          v49 = sub_1000544FC(0xD000000000000040, 0x8000000100518680, &v50);
          v46 = a2;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
          *(_WORD *)(v28 + 12) = 2112;
          v42 = v24;
          v49 = v18;
          v29 = v23;
          v47 = v20;
          v30 = v29;
          LOBYTE(a2) = v46;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
          v31 = v43;
          *v43 = v18;

          v20 = v47;
          v32 = v42;
          _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v44, "[PROTECTED APPS] %s collectionViewController: %@", (uint8_t *)v28, 0x16u);
          v33 = sub_10006922C(&qword_100643AB0);
          swift_arrayDestroy(v31, 1, v33);
          swift_slowDealloc(v31, -1, -1);
          v34 = v45;
          swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v34, -1, -1);
          swift_slowDealloc(v28, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        sub_1003DF398(a2 & 1);

        return;
      }
    }
    v12 = a1;
  }
  v35 = Logger.UI.unsafeMutableAddressor(v12);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v35, v4);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v50 = v40;
    *(_DWORD *)v39 = 136315138;
    v49 = sub_1000544FC(0xD000000000000040, 0x8000000100518680, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "[PROTECTED APPS] %s collectionViewController: is nil!", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1001F427C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  char v67;
  uint64_t v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  id v77;
  id v79;
  id v80;
  int v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char *v107;
  id v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char v124[64];
  uint64_t v125;
  uint64_t v126;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v118 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v118 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v118 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v118 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v118 - v21;
  v23 = objc_msgSend(a2, "isPickerUI");
  if (!(_DWORD)v23)
  {
    v45 = Logger.UI.unsafeMutableAddressor(v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v45, v4);
    v46 = a2;
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc(22, -1);
      v121 = (id)swift_slowAlloc(64, -1);
      v126 = (uint64_t)v121;
      *(_DWORD *)v49 = 136315394;
      v122 = v4;
      v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *(_WORD *)(v49 + 12) = 2080;
      v50 = objc_msgSend(v46, "hostIdentifier");
      v123 = v5;
      v51 = v50;
      v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v54 = v53;

      v125 = sub_1000544FC(v52, v54, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s not a picker: %s", (uint8_t *)v49, 0x16u);
      v55 = v121;
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v8, v122);
      return 0;
    }

    v65 = *(void (**)(char *, uint64_t))(v5 + 8);
    v66 = v8;
LABEL_16:
    v65(v66, v4);
    return 0;
  }
  v120 = v17;
  v121 = a1;
  v118 = v22;
  v119 = v20;
  v122 = v4;
  v123 = v5;
  v24 = sub_10006922C(&qword_100643CC0);
  inited = swift_initStackObject(v24, v124);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCSaveToFilesExtensionIdentifier);
  *(_QWORD *)(inited + 40) = v26;
  v27 = DOCDocumentsAppBundleIdentifier;
  *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentsAppBundleIdentifier);
  *(_QWORD *)(inited + 56) = v28;
  v29 = objc_msgSend(a2, "hostIdentifier");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  LOBYTE(v30) = sub_1000DFDD0(v30, v32, (_QWORD *)inited);
  swift_bridgeObjectRelease(v32);
  swift_setDeallocating(inited);
  v33 = swift_arrayDestroy(inited + 32, 2, &type metadata for String);
  if ((v30 & 1) != 0)
  {
    v34 = Logger.UI.unsafeMutableAddressor(v33);
    v4 = v122;
    v35 = v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v11, v34, v122);
    v36 = a2;
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc(22, -1);
      v121 = (id)swift_slowAlloc(64, -1);
      v126 = (uint64_t)v121;
      *(_DWORD *)v39 = 136315394;
      v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *(_WORD *)(v39 + 12) = 2080;
      v40 = objc_msgSend(v36, "hostIdentifier");
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      v125 = sub_1000544FC(v41, v43, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s is excldued identifier: %s", (uint8_t *)v39, 0x16u);
      v44 = v121;
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v11, v122);
      return 0;
    }

    v65 = *(void (**)(char *, uint64_t))(v35 + 8);
    v66 = v11;
    goto LABEL_16;
  }
  v56 = objc_msgSend(a2, "hostIdentifier");
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v59 = v58;

  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v62 = v60;
  if (v57 == v61 && v59 == v60)
  {
    v63 = swift_bridgeObjectRelease_n(v59, 2);
    v64 = v123;
LABEL_13:
    v68 = Logger.UI.unsafeMutableAddressor(v63);
    v4 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v14, v68, v122);
    v69 = a2;
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc(22, -1);
      v121 = (id)swift_slowAlloc(64, -1);
      v126 = (uint64_t)v121;
      *(_DWORD *)v72 = 136315394;
      v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *(_WORD *)(v72 + 12) = 2080;
      v73 = objc_msgSend(v69, "hostIdentifier");
      v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
      v76 = v75;

      v125 = sub_1000544FC(v74, v76, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

      swift_bridgeObjectRelease(v76);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s is Files app: %s", (uint8_t *)v72, 0x16u);
      v77 = v121;
      swift_arrayDestroy(v121, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v72, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v14, v122);
      return 0;
    }

    v65 = *(void (**)(char *, uint64_t))(v64 + 8);
    v66 = v14;
    goto LABEL_16;
  }
  v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v61, v60, 0);
  swift_bridgeObjectRelease(v59);
  v63 = swift_bridgeObjectRelease(v62);
  v64 = v123;
  if ((v67 & 1) != 0)
    goto LABEL_13;
  if (!v121)
  {
    v96 = Logger.UI.unsafeMutableAddressor(v63);
    v97 = v120;
    v4 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v120, v96, v122);
    v98 = a2;
    v99 = Logger.logObject.getter(v98);
    v100 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v99, v100))
    {
      v101 = swift_slowAlloc(22, -1);
      v102 = swift_slowAlloc(64, -1);
      v126 = v102;
      *(_DWORD *)v101 = 136315394;
      v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *(_WORD *)(v101 + 12) = 2080;
      v103 = objc_msgSend(v98, "hostIdentifier");
      v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
      v106 = v105;

      v125 = sub_1000544FC(v104, v106, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

      swift_bridgeObjectRelease(v106);
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "%s nil app record: %s", (uint8_t *)v101, 0x16u);
      swift_arrayDestroy(v102, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v102, -1, -1);
      swift_slowDealloc(v101, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v120, v122);
      return 0;
    }

    v65 = *(void (**)(char *, uint64_t))(v64 + 8);
    v66 = v97;
    goto LABEL_16;
  }
  v79 = v121;
  v80 = objc_msgSend(v79, "supportsOpenInPlace");
  v81 = (int)v80;
  v82 = Logger.UI.unsafeMutableAddressor(v80);
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  if (!v81)
  {
    v107 = v119;
    v4 = v122;
    v83(v119, v82, v122);
    v108 = a2;
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v109, v110))
    {
      v111 = swift_slowAlloc(22, -1);
      v112 = swift_slowAlloc(64, -1);
      v121 = v79;
      v113 = v112;
      v126 = v112;
      *(_DWORD *)v111 = 136315394;
      v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
      *(_WORD *)(v111 + 12) = 2080;
      v114 = objc_msgSend(v108, "hostIdentifier");
      v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
      v117 = v116;

      v125 = sub_1000544FC(v115, v117, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

      swift_bridgeObjectRelease(v117);
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "%s !supportsOpenInPlace: %s", (uint8_t *)v111, 0x16u);
      swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v111, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v119, v122);
      return 0;
    }

    v65 = *(void (**)(char *, uint64_t))(v64 + 8);
    v66 = v107;
    goto LABEL_16;
  }
  v84 = v118;
  v85 = v122;
  v83(v118, v82, v122);
  v86 = a2;
  v87 = Logger.logObject.getter(v86);
  v88 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = swift_slowAlloc(22, -1);
    v90 = swift_slowAlloc(64, -1);
    v121 = v79;
    v91 = v90;
    v126 = v90;
    *(_DWORD *)v89 = 136315394;
    v125 = sub_1000544FC(0xD000000000000037, 0x8000000100517F90, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);
    *(_WORD *)(v89 + 12) = 2080;
    v92 = objc_msgSend(v86, "hostIdentifier");
    v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
    v95 = v94;

    v125 = sub_1000544FC(v93, v95, &v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126);

    swift_bridgeObjectRelease(v95);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "%s true! : %s", (uint8_t *)v89, 0x16u);
    swift_arrayDestroy(v91, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v89, -1, -1);

    (*(void (**)(char *, uint64_t))(v123 + 8))(v118, v122);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v64 + 8))(v84, v85);
  }
  return 1;
}

uint64_t sub_1001F4FB0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F4FE4(uint64_t a1, uint64_t a2)
{
  return sub_1000AD148(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E92A4);
}

uint64_t sub_1001F4FFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(BOOL))(v0 + 16))(*(_QWORD *)(v0 + 32) != 0);
}

uint64_t sub_1001F502C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F5064()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E48D0);
}

uint64_t sub_1001F5078()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_errorRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001F50C4()
{
  return sub_1000ABB28((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E52C0);
}

uint64_t sub_1001F50D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));

  swift_errorRelease(*(_QWORD *)(v0 + v10));
  swift_release(*(_QWORD *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v2 | 7);
}

void sub_1001F51D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1001E5A0C(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + v4), *(void **)(v0 + v5), *(char **)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001F5254()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001F5280()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double sub_1001F52C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001E56AC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1001F52D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double sub_1001F531C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001E5048(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1001F5330()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F536C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001F53A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001E7B54(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001F53B4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_errorRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001F53F8()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F5444()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001F5484()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001F54E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001F5538(uint64_t a1)
{
  return sub_1001F5A64(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char, _QWORD))sub_1001E0F64);
}

void sub_1001F5544(uint64_t a1)
{
  uint64_t v1;

  sub_1001DF804(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1001F554C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F5574()
{
  uint64_t v0;

  return sub_1001DF968(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1001F5580()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001F55AC()
{
  uint64_t v0;

  return sub_1001ED108(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_1001F55BC()
{
  uint64_t v0;

  return sub_1001E15A4(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001F55D0(uint64_t *a1)
{
  return sub_1001F5AB8(a1) & 1;
}

uint64_t sub_1001F55F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1001F5630()
{
  return sub_10010C3CC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001EA450);
}

unint64_t sub_1001F563C()
{
  unint64_t result;

  result = qword_1006475A0;
  if (!qword_1006475A0)
  {
    result = swift_getWitnessTable(&unk_1004DB898, &_s12BrowsedStateVN);
    atomic_store(result, (unint64_t *)&qword_1006475A0);
  }
  return result;
}

uint64_t sub_1001F5680(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000D4C00(result, a2);
  return result;
}

uint64_t sub_1001F5694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_1006443D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F56DC()
{
  return sub_1001F6434((void (*)(_QWORD))&_swift_release);
}

void sub_1001F56E8()
{
  uint64_t v0;

  sub_1001D6E64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001F56F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001F5714()
{
  uint64_t v0;

  sub_1001DB698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001F571C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F5740()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001F577C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001E73D8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001F5788()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001F57D4()
{
  return sub_1000AC7CC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E74CC);
}

uint64_t sub_1001F57E4()
{
  uint64_t v0;

  return sub_1001E7674(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1001F57EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001F5838()
{
  return sub_1000ABB28((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E673C);
}

uint64_t sub_1001F5844()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1001F5890(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001E6E18(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1001F58C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C((uint64_t *)&unk_1006475B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F5908()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F5930()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 72, 7);
}

void sub_1001F597C(uint64_t a1)
{
  uint64_t v1;

  sub_1001DC604(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(__n128))(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(_BYTE *)(v1 + 58), *(void **)(v1 + 64));
}

uint64_t sub_1001F59C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001F59F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E4454(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1001F5A04()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001F5A58(uint64_t a1)
{
  return sub_1001F5A64(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char, _QWORD))sub_1001DCEDC);
}

uint64_t sub_1001F5A64(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char, _QWORD))
{
  uint64_t v2;
  char v4;

  v4 = *(_BYTE *)(v2 + 65);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), v4, *(_QWORD *)(v2 + 72));
}

double sub_1001F5AA8()
{
  uint64_t v0;

  return sub_1001DD4F0(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001F5AB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(uint64_t **)(v1 + 16);
  v3 = *a1;
  v4 = *v2;
  sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  return static NSObject.== infix(_:_:)(v3, v4) & 1;
}

uint64_t sub_1001F5B20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001F5B64()
{
  uint64_t v0;

  return sub_1001DB310(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t (**)(__n128))(v0 + 64));
}

void sub_1001F5B80(uint64_t a1)
{
  uint64_t v1;

  sub_1001DD65C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(__n128))(v1 + 32));
}

uint64_t sub_1001F5B8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 89, 7);
}

uint64_t sub_1001F5BE8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001DDBC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64), *(_BYTE *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
}

uint64_t sub_1001F5C30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1001F5C6C(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001E40AC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(void (**)(uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1001F5C80()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

void sub_1001F5CE4(uint64_t a1)
{
  uint64_t v1;

  sub_1001DE5E0(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1001F5D28()
{
  return sub_10010D7A0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001DED3C);
}

uint64_t sub_1001F5D34()
{
  return sub_1001F5F9C(49);
}

uint64_t sub_1001F5D3C()
{
  return sub_10010C3CC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001DEEB8);
}

uint64_t sub_1001F5D4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F5D90()
{
  uint64_t v0;

  return sub_1001F11C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1001F5DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v8 = v0 + v4;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v1 + 28)));
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 9, v5);
}

uint64_t sub_1001F5E5C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for DOCHierarchyController.FetchingOperationToken(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001E3144(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001F5EC4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001F5EF8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1001F5F38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001F5F74()
{
  uint64_t v0;

  return sub_1001DC378(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1001F5F8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001ED660(a1, v1);
}

uint64_t sub_1001F5F94()
{
  return sub_1001F5F9C(48);
}

uint64_t sub_1001F5F9C(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));

  swift_release(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001F5FDC(unint64_t a1)
{
  uint64_t v1;

  return sub_1001DF9F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1001F5FE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations, v19, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v18 = v2;
  else
    v18 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v3)
    goto LABEL_18;
LABEL_3:
  v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(id *)(v2 + 8 * v4 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
LABEL_8:
  v6 = v5;
  v7 = objc_msgSend(v5, "representedTag", swift_bridgeObjectRelease(v2).n128_f64[0]);

  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
    v9 = objc_msgSend(v8, "userTags");

    if ((objc_msgSend(v9, "containsObject:", v7) & 1) == 0)
    {
      v10 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration), "defaultEffectiveTabIdentifierForLocationRestore");
      v11 = sub_100152104((uint64_t)v10);
      v13 = v12;

      if ((v13 & 1) != 0)
        v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
      v14 = sub_1001E9E24(v11);
      v16 = v15;
      swift_bridgeObjectRelease(v17);

      sub_1001D4F4C(v14, 0, 0, 1, 0, 0, 0);
    }

  }
}

void sub_1001F61E4()
{
  uint64_t v0;

  sub_1001E8058(*(void **)(v0 + 16));
}

uint64_t sub_1001F61EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F6200()
{
  uint64_t v0;

  sub_1001E8C90(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1001F6208()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001F624C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001E8A84(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1001F625C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001F6288(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001E8E78(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1001F6294()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F62B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1001F62F4()
{
  uint64_t v0;

  sub_1001D88B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1001F6304()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

void sub_1001F6330(void *a1)
{
  uint64_t v1;

  sub_1001D78D8(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1001F6340()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1001F637C(void *a1)
{
  uint64_t v1;

  sub_1001D654C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1001F63B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_1001F63DC()
{
  unint64_t result;

  result = qword_1006475F8;
  if (!qword_1006475F8)
  {
    result = swift_getWitnessTable(&unk_1004DB870, &_s12BrowsedStateVN);
    atomic_store(result, (unint64_t *)&qword_1006475F8);
  }
  return result;
}

uint64_t sub_1001F6420()
{
  uint64_t v0;

  return sub_1001D6DE4(v0);
}

uint64_t sub_1001F6428()
{
  return sub_1001F6434((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001F6434(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1001F646C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001F64B0()
{
  uint64_t v0;

  return sub_1001D89F4(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned __int8 *)(v0 + 49), *(unsigned __int8 *)(v0 + 50), *(void **)(v0 + 56));
}

uint64_t sub_1001F64CC()
{
  uint64_t v0;

  return sub_1001D8F30(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001F64D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001F6518(char a1)
{
  uint64_t v1;

  return sub_1001D91C8(a1, *(void **)(v1 + 16), *(char **)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1001F652C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 50, 7);
}

void sub_1001F6560(void *a1, void *a2)
{
  uint64_t v2;

  sub_1001E1710(a1, a2, *(char **)(v2 + 16), *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 24), *(void (**)(_QWORD))(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(unsigned __int8 *)(v2 + 49));
}

uint64_t sub_1001F6574()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 74, 7);
}

uint64_t sub_1001F65C0()
{
  uint64_t v0;

  return sub_1001E27CC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72), *(_BYTE *)(v0 + 73));
}

uint64_t sub_1001F65F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 58, 7);
}

uint64_t sub_1001F6634(void *a1)
{
  uint64_t v1;

  return sub_1001E29E0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57));
}

uint64_t sub_1001F6650()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001F668C()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 32);
  sub_1001D6274(*(_QWORD *)(v0 + 24), 0);
  if (v1)
    v1();
}

uint64_t getEnumTagSinglePayload for DOCHierarchyController.DOCHierarchyOperationType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCHierarchyController.DOCHierarchyOperationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F67A8 + 4 * byte_1004DCBC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F67DC + 4 * byte_1004DCBC0[v4]))();
}

uint64_t sub_1001F67DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F67E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F67ECLL);
  return result;
}

uint64_t sub_1001F67F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F6800);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F6804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F680C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1001F6818(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCHierarchyController.DOCHierarchyOperationType()
{
  return &type metadata for DOCHierarchyController.DOCHierarchyOperationType;
}

unint64_t sub_1001F6838()
{
  unint64_t result;

  result = qword_100647610;
  if (!qword_100647610)
  {
    result = swift_getWitnessTable(&unk_1004DCF3C, &type metadata for DOCHierarchyController.DOCHierarchyOperationType);
    atomic_store(result, (unint64_t *)&qword_100647610);
  }
  return result;
}

id sub_1001F6B38()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
}

id DOCBrowserContainedViewController.configuration.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
}

uint64_t (*sub_1001F6B5C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001F6BA0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode);
}

uint64_t sub_1001F6BB0(uint64_t a1, void *a2, void *a3)
{
  void *v3;
  void *v4;
  id v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18[2];
  uint64_t (*v19)(uint64_t, uint64_t);
  void *v20;
  uint64_t (*v21)(void *);
  uint64_t v22;

  v4 = v3;
  if (a3)
    v8 = a3;
  else
    v8 = objc_msgSend(v4, "_definiteTransitionCoordinator");
  strcpy((char *)v18, "transition (");
  BYTE5(v18[1]) = 0;
  HIWORD(v18[1]) = -5120;
  swift_unknownObjectRetain(a3);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11 = sub_1001F6D68(v18[0], (void *)v18[1]);
  swift_bridgeObjectRelease(v18[1]);
  v21 = (uint64_t (*)(void *))DOCSplitBrowserViewController.didCommitPreview(of:);
  v22 = 0;
  v18[0] = (uint64_t)_NSConcreteStackBlock;
  v18[1] = 1107296256;
  v19 = sub_100018CC0;
  v20 = &unk_1005D1368;
  v12 = _Block_copy(v18);
  v13 = swift_allocObject(&unk_1005D13A0, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1001F7F68;
  *(_QWORD *)(v13 + 24) = v11;
  v21 = sub_1001F7F98;
  v22 = v13;
  v18[0] = (uint64_t)_NSConcreteStackBlock;
  v18[1] = 1107296256;
  v19 = sub_100018CC0;
  v20 = &unk_1005D13B8;
  v14 = _Block_copy(v18);
  v15 = v22;
  swift_retain_n(v11, 2);
  swift_release(v15);
  objc_msgSend(v8, "animateAlongsideTransition:completion:", v12, v14);
  _Block_release(v14);
  _Block_release(v12);
  v16 = swift_unknownObjectRelease(v8);
  return swift_release_n(v11, 2, v16);
}

uint64_t sub_1001F6D68(uint64_t a1, void *a2)
{
  uint64_t v4;
  char v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10002DA34();
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 152))(v4);
  swift_release(v4);
  if ((v5 & 1) == 0)
    sub_1000926C8();
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  v7 = type metadata accessor for DOCAssertion(0);
  swift_allocObject(v7, 48, 7);
  v8 = DOCAssertion.init(traceInfo:)(0xD00000000000001BLL, 0x8000000100518C80);
  v9 = sub_10002DA34();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v9 + 136))(v8, 0x4014000000000000, 0);
  swift_release(v9);
  return v8;
}

uint64_t DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed, v3, 0, 0);
  return *v1;
}

void DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.setter(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;
  _BYTE v6[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed, v6, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
    sub_1001F6FD4(0);
}

void (*DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1001F6F90;
}

void sub_1001F6F90(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
    sub_1001F6FD4(0);
  free(v1);
}

void sub_1001F6FD4(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  void *v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  char v23[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground];
  v6 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
  *(_QWORD *)&v7 = swift_beginAccess(&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed], v23, 0, 0).n128_u64[0];
  if (*v6 == 1)
  {
    v8 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    v9 = objc_msgSend(v8, "isInUIPDocumentLanding", v7);
    if ((((v5 != 0) ^ v9) & 1) == 0)
      return;
    if (v9)
    {
      v10 = a1;
      if (!a1)
        v10 = objc_msgSend(v2, "effectiveAppearance");
      v11 = qword_100641070;
      v12 = v8;
      v13 = a1;
      if (v11 != -1)
        swift_once(&qword_100641070, sub_100379F44);
      v14 = (void *)qword_100672C98;
      objc_allocWithZone((Class)type metadata accessor for DOCSystemMaterialBackgroundView());
      v15 = v10;
      v16 = v14;
      v17 = sub_10037A004(v12, v14, v10);
      v18 = *(void **)&v2[v4];
      *(_QWORD *)&v2[v4] = v17;
      v19 = v17;

      v20 = objc_msgSend(v2, "view");
      if (!v20)
      {
        __break(1u);
        return;
      }
      v21 = v20;
      objc_msgSend(v19, "setAutoresizingMask:", 18);
      objc_msgSend(v21, "bounds");
      objc_msgSend(v19, "setFrame:");
      objc_msgSend(v21, "insertSubview:atIndex:", v19, 0);

      goto LABEL_13;
    }
  }
  else if (!v5)
  {
    return;
  }
  v22 = *(void **)&v2[v4];
  if (!v22)
    return;
  v19 = v22;
  objc_msgSend(v19, "removeFromSuperview");
  v21 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = 0;
LABEL_13:

}

id DOCBrowserContainedViewController.actionManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager);
}

void sub_1001F730C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  char v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_10002DA34();
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 152))(v5);
    swift_release(v5);
    if ((v6 & 1) == 0)
    {
      if (objc_msgSend(v4, "doc_hasAppearedOrIsAppearing"))
        sub_1000926C8();
    }

  }
}

uint64_t sub_1001F73A4(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v24;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, "isCancelled"))
    return a2();
  v14 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  aBlock[4] = a2;
  v24 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D13E0;
  v16 = _Block_copy(aBlock);
  v17 = v24;
  swift_retain();
  v18 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10008BAAC();
  v20 = sub_10006922C((uint64_t *)&unk_100647540);
  v21 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

Class sub_1001F75AC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  Class isa;

  v3 = *(_QWORD *)(a1 + *a3);
  sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  swift_bridgeObjectRetain(v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  return isa;
}

void sub_1001F7614(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  id v13;
  char *v14;

  v7 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v7);
  v9 = *a4;
  v10 = *(_QWORD *)&a1[*a4];
  *(_QWORD *)&a1[v9] = v8;
  v14 = a1;
  *(_QWORD *)&v11 = swift_bridgeObjectRelease(v10).n128_u64[0];
  v14[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  v12 = objc_msgSend(v14, "viewIfLoaded", v11);
  v13 = objc_msgSend(v12, "window");

  if (v13)
    sub_1000926C8();

}

void DOCBrowserContainedViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  objc_msgSendSuper2(&v5, "effectiveAppearanceDidChange:", a1);
  *((_BYTE *)v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  v3 = objc_msgSend(v1, "viewIfLoaded");
  v4 = objc_msgSend(v3, "window");

  if (v4)
    sub_1000926C8();
  if (objc_msgSend(v1, "isViewLoaded"))
    sub_1001F6FD4(a1);
}

id DOCBrowserContainedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void DOCBrowserContainedViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCBrowserContainedViewController", 39, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id DOCBrowserContainedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Void __swiftcall DOCBrowserContainedViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  _BOOL8 v5;
  _BOOL8 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  v5 = _;
  v6 = animated;
  objc_msgSendSuper2(&v10, "setEditing:animated:", v5, v6);
  v7 = sub_10004F2F0(0, &qword_100648590, &off_1005BCED8);
  v8 = (void *)UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)(v7, 1, v7);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setEditing:animated:", v5, v6);

  }
}

void sub_1001F7950(unint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v8;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  _BYTE *v35;
  _BYTE *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void *v48;
  objc_super v49;

  v5 = *(void **)((char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (v5)
  {
    v6 = v4;
    v8 = a2;
    if ((a4 & 1) == 0)
    {
      v24 = v5;
      v18 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_44;
    }
    v10 = (char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate, a2);
    if (Strong)
    {
      v13 = Strong;
      v14 = *((_QWORD *)v10 + 1);
      ObjectType = swift_getObjectType(Strong, v12);
      v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 48);
      v17 = v5;
      v18 = v16(ObjectType, v14);
      swift_unknownObjectRelease(v13);
      if (!((unint64_t)v18 >> 62))
        goto LABEL_5;
    }
    else
    {
      v25 = v5;
      v18 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
LABEL_5:
        v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v18, 2);
        if (v19)
        {
LABEL_6:
          if ((v18 & 0xC000000000000001) != 0)
          {
            v20 = 0;
            while (1)
            {
              v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
              v22 = v20 + 1;
              if (__OFADD__(v20, 1))
                break;
              v23 = *(_BYTE *)(v21 + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction);
              swift_unknownObjectRelease(v21);
              if ((v23 & 1) != 0)
                goto LABEL_24;
              ++v20;
              if (v22 == v19)
                goto LABEL_23;
            }
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          v27 = 0;
          while (1)
          {
            v28 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_49;
            if ((*(_BYTE *)(*(_QWORD *)(v18 + 32 + 8 * v27)
                           + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction) & 1) != 0)
              break;
            ++v27;
            if (v28 == v19)
              goto LABEL_23;
          }
LABEL_24:
          v29 = 1;
          goto LABEL_25;
        }
LABEL_23:
        v29 = 0;
LABEL_25:
        swift_bridgeObjectRelease_n(v18, 2);
        v30 = objc_msgSend(v6, "enclosedInUIPDocumentLanding");
        if ((v29 & 1) == 0 && v30)
        {
          swift_bridgeObjectRelease(v18);
          v18 = (uint64_t)_swiftEmptyArrayStorage;
        }
        if ((unint64_t)v18 >> 62)
        {
          if (v18 < 0)
            v43 = v18;
          else
            v43 = v18 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v18);
          v31 = _CocoaArrayWrapper.endIndex.getter(v43);
          swift_bridgeObjectRelease(v18);
          if (v31)
            goto LABEL_30;
        }
        else
        {
          v31 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v31)
          {
LABEL_30:
            v45 = a1;
            v46 = v8;
            v47 = a3;
            v48 = v5;
            if (v31 < 1)
            {
              __break(1u);
              return;
            }
            swift_bridgeObjectRetain_n(v18, 3);
            v32 = 0;
            while (1)
            {
              if ((v18 & 0xC000000000000001) != 0)
                v35 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v18);
              else
                v35 = *(id *)(v18 + 8 * v32 + 32);
              v36 = v35;
              if (objc_msgSend(v6, "isEditing", v45, v46, v47, v48))
              {
                v37 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x168))();
                v36[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable] = v37 & 1;
                if ((v37 & 1) == 0)
                {
                  v33 = 0;
                  goto LABEL_34;
                }
              }
              else
              {
                v36[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable] = 1;
              }
              v33 = v36[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction];
LABEL_34:
              ++v32;
              v34 = (objc_class *)type metadata accessor for DOCHistoryNavigationButtonItem();
              v49.receiver = v36;
              v49.super_class = v34;
              objc_msgSendSuper2(&v49, "setEnabled:", v33);

              if (v31 == v32)
              {
                swift_bridgeObjectRelease_n(v18, 3);
                a3 = v47;
                v5 = v48;
                a1 = v45;
                v8 = v46;
                if (!((unint64_t)v18 >> 62))
                  goto LABEL_42;
LABEL_59:
                if (v18 < 0)
                  v44 = v18;
                else
                  v44 = v18 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v18);
                v38 = _CocoaArrayWrapper.endIndex.getter(v44);
                swift_bridgeObjectRelease(v18);
                goto LABEL_43;
              }
            }
          }
        }
        swift_bridgeObjectRelease(v18);
        v18 = (uint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
          goto LABEL_59;
LABEL_42:
        v38 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_43:
        objc_msgSend(v5, "setLeftItemsSupplementBackButton:", v38 == 0);
LABEL_44:
        objc_msgSend(v5, "setHidesBackButton:", objc_msgSend(v6, "hidesNavigationBackButton"));
        if (!((unint64_t)v18 >> 62))
        {
          v39 = swift_bridgeObjectRetain(v18);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v39);
          sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
          swift_bridgeObjectRelease(v18);
          v40 = v18;
LABEL_46:
          sub_100459FBC(a1, v40);
          swift_bridgeObjectRelease(v18);
          sub_10045B6DC(v8, a3);

          return;
        }
LABEL_50:
        if (v18 < 0)
          v41 = v18;
        else
          v41 = v18 & 0xFFFFFFFFFFFFFF8;
        v42 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
        swift_bridgeObjectRetain(v18);
        v40 = _bridgeCocoaArray<A>(_:)(v41, v42);
        swift_bridgeObjectRelease_n(v18, 2);
        v18 = v40;
        goto LABEL_46;
      }
    }
    if (v18 < 0)
      v26 = v18;
    else
      v26 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v18, 2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v26);
    if (v19)
      goto LABEL_6;
    goto LABEL_23;
  }
}

void sub_1001F7DBC()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;

  v1 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionReporting], 0);
  v3 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCBrowserContainedViewController.swift", 45, 2, 136, 0);
  __break(1u);
}

uint64_t sub_1001F7EFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F7F20()
{
  uint64_t v0;

  sub_1001F730C(v0);
}

uint64_t sub_1001F7F28(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10006922C(&qword_1006508F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F7F68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1001F7F74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F7F98(void *a1)
{
  uint64_t v1;

  return sub_1001F73A4(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void *sub_1001F7FA8(void *a1, uint64_t a2, _BOOL4 a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  _BYTE *v14;
  _QWORD *v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  void *object;
  NSString v35;
  objc_class *v36;
  Class isa;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  objc_class *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  uint64_t ObjectType;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  __n128 v51;
  char *v52;
  void *v53;
  void *v54;
  uint64_t v56;
  char *v57;
  id v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _BOOL4 v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  objc_super v67;
  _QWORD aBlock[5];
  uint64_t v69;
  objc_super v70;

  v63 = a3;
  v66 = type metadata accessor for Date(0);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100643900);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_node] = a1;
  v13 = (objc_class *)_s16FolderMenuHeaderC22IconDeliveryControllerCMa();
  v14 = objc_allocWithZone(v13);
  v14[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered] = 0;
  v15 = &v14[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion];
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail] = a2;
  v70.receiver = v14;
  v70.super_class = v13;
  v16 = v3;
  swift_unknownObjectRetain(a1);
  v61 = a2;
  swift_unknownObjectRetain(a2);
  v17 = (char *)objc_msgSendSuper2(&v70, "init");
  objc_msgSend(*(id *)&v17[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail], "addListener:", v17);
  *(_QWORD *)&v16[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_iconDelivery] = v17;
  v18 = v17;
  v65 = v16;

  v19 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v20 = sub_10004F2F0(0, (unint64_t *)&qword_10064E0C0, UIImage_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = swift_allocObject(&unk_1005D1468, 24, 7);
  v60 = v18;
  swift_unknownObjectWeakInit(v22 + 16);
  aBlock[4] = sub_1001F8CC8;
  v69 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F866C;
  aBlock[3] = &unk_1005D1480;
  v23 = _Block_copy(aBlock);
  swift_release(v69);
  objc_msgSend(v19, "registerObjectOfClass:visibility:loadHandler:", ObjCClassFromMetadata, 3, v23);
  _Block_release(v23);
  v24 = objc_msgSend(objc_allocWithZone((Class)LPImageProperties), "init");
  objc_msgSend(v24, "setType:", 5);
  v25 = objc_msgSend(objc_allocWithZone((Class)LPFileMetadata), "init");
  v26 = objc_allocWithZone((Class)LPImage);
  v58 = v24;
  v59 = v19;
  v27 = objc_msgSend(v26, "initWithItemProvider:properties:placeholderImage:", v19, v24, 0);
  objc_msgSend(v25, "setThumbnail:", v27);

  v29 = static UTType.folder.getter(v28);
  UTType.identifier.getter(v29);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v62);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  objc_msgSend(v25, "setType:", v32);

  swift_getObjectType(a1, v33);
  object = DOCNode.displayName(withHiddenPathExtension:)(v63)._object;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v25, "setName:", v35);

  v36 = (objc_class *)objc_msgSend(a1, "doc_creationDate");
  isa = v36;
  if (v36)
  {
    v38 = v57;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v39 = v64;
    v40 = v66;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v9, v38, v66);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v9, 1, v40) == 1)
    {
      isa = 0;
    }
    else
    {
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v9, 1, 1, v66);
  }
  objc_msgSend(v25, "setCreationDate:", isa);

  v41 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  objc_msgSend(v41, "setSpecialization:", v25);
  v42 = (objc_class *)_s16FolderMenuHeaderCMa();
  v67.receiver = v65;
  v67.super_class = v42;
  v43 = (char *)objc_msgSendSuper2(&v67, "initWithMetadata:", v41);
  v45 = v43;
  if (v43[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad] == 1)
  {
    v43[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad] = 0;
    ObjectType = swift_getObjectType(*(_QWORD *)&v43[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_node], v44);
    v47 = swift_allocObject(&unk_1005D14B8, 24, 7);
    swift_unknownObjectWeakInit(v47 + 16);
    sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v48 = v45;
    swift_retain();
    v50 = (void *)static OS_dispatch_queue.main.getter(v49);
    DOCNode.performFolderSizingIfSupported(handlerQueue:_:)(v50, sub_1001F8CD0, v47, ObjectType);
    swift_unknownObjectRelease(a1);
    swift_unknownObjectRelease(v61);
    swift_release_n(v47, 2, v51);

  }
  else
  {
    v52 = v43;
    swift_unknownObjectRelease(a1);
    swift_unknownObjectRelease(v61);
  }
  v53 = v59;
  v54 = v58;

  return v45;
}

uint64_t sub_1001F8574(void (*a1)(_QWORD, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  _QWORD aBlock[5];
  _QWORD *v15;
  char v16[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = (_QWORD *)swift_allocObject(&unk_1005D1508, 40, 7);
    v9[2] = v8;
    v9[3] = a1;
    v9[4] = a2;
    aBlock[4] = sub_1001F8D3C;
    v15 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D1520;
    v10 = _Block_copy(aBlock);
    v11 = v15;
    v12 = v8;
    swift_retain();
    swift_release(v11);
    DOCRunInMainThread(v10);
    _Block_release(v10);

  }
  else
  {
    a1(0, 0);
  }
  return 0;
}

id sub_1001F866C(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  uint64_t (*v3)(void (*)(uint64_t, uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(void (*)(uint64_t, uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1005D14E0, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain();
  v7 = (void *)v3(sub_1001F8D08, v5, v6);
  swift_release(v2);
  swift_release(v5);
  return v7;
}

void sub_1001F86E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_1001F8740(uint64_t a1, char a2, uint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  _BYTE v15[24];

  if ((a4 & 0x100) == 0 && (a2 & 1) == 0 && a1 >= 1)
  {
    v6 = a5 + 16;
    swift_beginAccess(a5 + 16, v15, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v6, v7);
    if (Strong)
    {
      v9 = Strong;
      v10 = objc_msgSend(Strong, "metadata");
      v11 = objc_msgSend(v10, "specialization");

      if (v11)
      {
        v12 = objc_opt_self(LPFileMetadata);
        v13 = (void *)swift_dynamicCastObjCClassUnconditional(v11, v12, 0, 0, 0);
        objc_msgSend(v13, "setSize:", a1);
        v14 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
        objc_msgSend(v14, "setSpecialization:", v13);
        objc_msgSend(v9, "setMetadata:", v14);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

id sub_1001F8864()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail], "removeListener:", v0);
  v2.receiver = v0;
  v2.super_class = (Class)_s16FolderMenuHeaderC22IconDeliveryControllerCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_BYTE *sub_1001F894C(_BYTE *result)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  void (*v4)(id, _QWORD);
  uint64_t v5;
  id v6;
  id v7;

  v1 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered;
  if ((result[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered] & 1) == 0)
  {
    v2 = result;
    v3 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail;
    result = objc_msgSend(*(id *)&result[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail], "isLoading");
    if (!(_DWORD)result)
    {
      v4 = *(void (**)(id, _QWORD))&v2[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion];
      if (v4)
      {
        v5 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion
                          + 8];
        v2[v1] = 1;
        objc_msgSend(*(id *)&v2[v3], "removeListener:", v2, swift_retain().n128_f64[0]);
        v6 = objc_msgSend(*(id *)&v2[v3], "thumbnail");
        v7 = v6;
        v4(v6, 0);

        return (_BYTE *)sub_100087534((uint64_t)v4, v5);
      }
    }
  }
  return result;
}

id sub_1001F8BD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s16FolderMenuHeaderCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s16FolderMenuHeaderCMa()
{
  return objc_opt_self(_TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader);
}

uint64_t _s16FolderMenuHeaderC22IconDeliveryControllerCMa()
{
  return objc_opt_self(_TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController);
}

uint64_t sub_1001F8C78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_BYTE *sub_1001F8C9C()
{
  uint64_t v0;

  return sub_1001F894C(*(_BYTE **)(v0 + 16));
}

uint64_t sub_1001F8CA4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F8CC8(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;

  return sub_1001F8574(a1, a2, v2);
}

void sub_1001F8CD0(uint64_t a1, char a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;

  sub_1001F8740(a1, a2, a3, a4 & 0x1FF, v4);
}

uint64_t sub_1001F8CE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F8D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001F86E8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001F8D10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001F8D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_retain();
  sub_1001F8F74(v1, v2);
  return swift_release(v2);
}

id sub_1001F8D80(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  id v14;
  _QWORD v16[23];

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (v4)
  {
    swift_retain();
    sub_10006B5D4((uint64_t)v16);
    swift_release(v4);
    v5 = objc_msgSend(v2, "traitCollection");
    v6 = (id)sub_100362340(a1, (uint64_t)v16, v5, 1);
    sub_10002A0C4((uint64_t)v16);
  }
  else
  {
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = (unint64_t)objc_msgSend(v7, "userInterfaceStyle");

    if (v8 >= 3)
    {
      type metadata accessor for UIUserInterfaceStyle(0);
      v16[3] = v10;
      v16[0] = v8;
      doc_warnUnrecognizedEnumValueEncountered(_:)(v16);
      sub_100068588(v16);
      v9 = 1;
    }
    else
    {
      v9 = qword_1004DD060[v8];
    }
    v11 = objc_msgSend(v2, "traitCollection");
    objc_msgSend(v11, "displayScale");
    v13 = v12;

    v5 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:scale:style:isFolded:isInteractive:isFolder:", v9, 0, 1, objc_msgSend(a1, "isFolder"), 128.0, 128.0, v13);
    v14 = objc_msgSend((id)objc_opt_self(DOCThumbnailGenerator), "sharedGenerator");
    v6 = objc_msgSend(v14, "iconForNode:descriptor:", a1, v5);

  }
  return v6;
}

id sub_1001F8F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(id, _QWORD);
  uint64_t v10;
  id v11;
  id v12;

  v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion);
  v4 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion);
  v5 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion
                 + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_10008BA00(a1, a2);
  result = (id)sub_100087534(v4, v5);
  v7 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered;
  if ((*(_BYTE *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered) & 1) == 0)
  {
    v8 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail;
    result = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail), "isLoading");
    if (!(_DWORD)result)
    {
      v9 = (void (*)(id, _QWORD))*v3;
      if (*v3)
      {
        v10 = v3[1];
        *(_BYTE *)(v2 + v7) = 1;
        objc_msgSend(*(id *)(v2 + v8), "removeListener:", v2, swift_retain().n128_f64[0]);
        v11 = objc_msgSend(*(id *)(v2 + v8), "thumbnail");
        v12 = v11;
        v9(v11, 0);

        return (id)sub_100087534((uint64_t)v9, v10);
      }
    }
  }
  return result;
}

double DOCImageContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop, v3, 0, 0);
  return *(double *)v1;
}

uint64_t DOCImageContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t DOCImageContainerFittingView.isShadowHidden.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden, v3, 0, 0);
  return *v1;
}

void DOCImageContainerFittingView.isShadowHidden.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden, v4, 1, 0);
  *v3 = a1;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void (*DOCImageContainerFittingView.isShadowHidden.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden, a1, 33, 0);
  return sub_1001F9294;
}

void sub_1001F9294(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void sub_1001F92C4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  char *v10;
  char *v11;
  double v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  id v18;
  double v19;
  _QWORD *v20;
  id v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  double v27;
  _QWORD *v28;
  uint64_t v29;
  void **v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  char *v36;
  _BYTE v37[24];
  objc_super v38;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  v9 = 3;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;
  v38.receiver = v4;
  v38.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  v10 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  v35 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics;
  v36 = &v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  v34 = v10;
  v11 = v10;
  do
  {
    v12 = *(double *)&v34[v35];
    v13 = objc_msgSend(objc_allocWithZone((Class)DOCFittingImageView), "init");
    v14 = objc_msgSend(v13, "layer");
    objc_msgSend(v14, "setBorderWidth:", 1.0);

    v15 = objc_msgSend(v13, "layer");
    objc_msgSend(v15, "setCornerRadius:", v12);

    objc_msgSend(v13, "setContentMode:", 1);
    objc_msgSend(v13, "setClipsToBounds:", 1);
    v16 = *(double *)&v34[v35];
    v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v17, "setClipsToBounds:", 0);
    v18 = objc_msgSend(v17, "layer");
    objc_msgSend(v18, "setMasksToBounds:", 0);
    objc_msgSend(v18, "setBorderWidth:", 0.0);
    objc_msgSend(v18, "setCornerRadius:", v16);
    objc_msgSend(v18, "setShadowOffset:", 0.0, 4.0);
    LODWORD(v19) = 1036831949;
    objc_msgSend(v18, "setShadowOpacity:", v19);

    objc_msgSend(v13, "setDelegate:", v11);
    objc_msgSend(v13, "frame");
    objc_msgSend(v17, "setFrame:");
    objc_msgSend(v13, "setClipsToBounds:", 1);
    swift_beginAccess(v36, v37, 33, 0);
    v20 = *(_QWORD **)v36;
    v21 = v13;
    v22 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
    *(_QWORD *)v36 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1001541A0(0, v20[2] + 1, 1, v20);
      *(_QWORD *)v36 = v20;
    }
    v25 = v20[2];
    v24 = v20[3];
    if (v25 >= v24 >> 1)
    {
      v20 = sub_1001541A0((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
      *(_QWORD *)v36 = v20;
    }
    v20[2] = v25 + 1;
    v26 = &v20[2 * v25];
    v26[4] = v21;
    v26[5] = v22;
    swift_endAccess(v37);

    --v9;
  }
  while (v9);
  v28 = *(_QWORD **)v36;
  v29 = *(_QWORD *)(*(_QWORD *)v36 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain(*(_QWORD *)v36);
    v30 = (void **)&v28[2 * v29 + 3];
    while (v29 <= v28[2])
    {
      --v29;
      v31 = *v30;
      v32 = *(v30 - 1);
      v33 = v31;
      objc_msgSend(v11, "addSubview:", v33);
      objc_msgSend(v11, "addSubview:", v32);

      v30 -= 2;
      if (!v29)
      {
        *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    objc_msgSend(v11, "setClipsToBounds:", 0, v27, v34);
    sub_1001FA7D0();

  }
}

double DOCImageContainerFittingView.fittingSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs, v3, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return 0.0;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 32), "fittingSize");
  return result;
}

id DOCImageContainerFittingView.fittingSize.setter(double a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10[24];

  v5 = &v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v10, 0, 0);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(v6);
    v8 = 32;
    do
    {
      objc_msgSend(*(id *)(v6 + v8), "setFittingSize:", a1, a2);
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease(v6);
  }
  return objc_msgSend(v2, "invalidateIntrinsicContentSize");
}

void (*DOCImageContainerFittingView.fittingSize.modify(_QWORD *a1))(double **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  *(_QWORD *)&v6 = swift_beginAccess(v5, v3, 0, 0).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)v5 + 16))
  {
    objc_msgSend(*(id *)(*(_QWORD *)v5 + 32), "fittingSize", v6);
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v3[3] = v7;
  v3[4] = v8;
  return sub_1001F98E0;
}

void sub_1001F98E0(double **a1, char a2)
{
  double *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  void **v9;
  void *v10;
  double v11;
  double v12;
  void **v13;
  void *v14;

  v2 = *a1;
  v3 = (char *)*((_QWORD *)*a1 + 5);
  v4 = *((_QWORD *)v2 + 6);
  v5 = *(_QWORD *)&v3[v4];
  v6 = *(_QWORD *)(v5 + 16);
  if ((a2 & 1) != 0)
  {
    if (v6)
    {
      v8 = v2[3];
      v7 = v2[4];
      v9 = (void **)(v5 + 32);
      swift_bridgeObjectRetain(*(_QWORD *)&v3[v4]);
      do
      {
        v10 = *v9;
        v9 += 2;
        objc_msgSend(v10, "setFittingSize:", v8, v7);
        --v6;
      }
      while (v6);
LABEL_9:
      swift_bridgeObjectRelease(v5);
      v3 = (char *)*((_QWORD *)v2 + 5);
    }
  }
  else if (v6)
  {
    v12 = v2[3];
    v11 = v2[4];
    v13 = (void **)(v5 + 32);
    swift_bridgeObjectRetain(*(_QWORD *)&v3[v4]);
    do
    {
      v14 = *v13;
      v13 += 2;
      objc_msgSend(v14, "setFittingSize:", v12, v11);
      --v6;
    }
    while (v6);
    goto LABEL_9;
  }
  objc_msgSend(v3, "invalidateIntrinsicContentSize");
  free(v2);
}

void *DOCImageContainerFittingView.firstThumbnailView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs, v5, 0, 0);
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return 0;
  v2 = *(void **)(*(_QWORD *)v1 + 32);
  v3 = v2;
  return v2;
}

id sub_1001F9A0C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void **v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char **v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  double v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  char *v60;
  char *v61;
  _QWORD v62[4];
  char v63[24];
  char v64[24];
  char v65[32];

  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
  swift_beginAccess(v1, v65, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  sub_1000875F4(3, v2);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  i = v9;
  swift_bridgeObjectRelease(v2);
  if ((i & 1) != 0)
  {
    v12 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v13 = swift_unknownObjectRetain_n(v4, 2);
    v14 = (_QWORD *)swift_dynamicCastClass(v13, v12);
    if (!v14)
    {
      swift_unknownObjectRelease(v4);
      v14 = _swiftEmptyArrayStorage;
    }
    v15 = v14[2];
    swift_release(v14);
    if (__OFSUB__(i >> 1, v8))
      goto LABEL_51;
    v16 = (uint64_t)v4;
    if (v15 != (i >> 1) - v8)
      goto LABEL_52;
    v11 = (_QWORD *)swift_dynamicCastClass(v4, v12);
    if (!v11)
    {
      swift_unknownObjectRelease(v4);
      v11 = _swiftEmptyArrayStorage;
    }
    goto LABEL_9;
  }
  while (1)
  {
    v11 = sub_10028F34C((uint64_t)v4, v6, v8, i);
LABEL_9:
    swift_unknownObjectRelease(v4);
    v17 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes;
    v18 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes];
    *(_QWORD *)&v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = v11;
    swift_bridgeObjectRelease(v18);
    v4 = (uint64_t *)&v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails];
    swift_beginAccess(&v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails], v64, 1, 0);
    v6 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v6 < 0)
        v20 = *v4;
      else
        v20 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*v4, 2);
      v16 = _CocoaArrayWrapper.endIndex.getter(v20);
      v8 = v16;
      if (!v16)
        goto LABEL_21;
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      v16 = swift_bridgeObjectRetain_n(*v4, 2);
      if (!v8)
        goto LABEL_21;
    }
    if (v8 >= 1)
      break;
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_unknownObjectRelease(v16);
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
    }
    else
    {
      v19 = *(void **)(v6 + 8 * i + 32);
      swift_unknownObjectRetain(v19);
    }
    objc_msgSend(v19, "removeListener:", v61, v56, v57);
    swift_unknownObjectRelease(v19);
  }
LABEL_21:
  swift_bridgeObjectRelease_n(v6, 2);
  v21 = *v4;
  *v4 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v21);
  v22 = &v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v61[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v63, 0, 0);
  v60 = v22;
  v23 = *(_QWORD *)v22;
  v6 = *(_QWORD *)(*(_QWORD *)v22 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v23);
    v24 = (void **)(v23 + 40);
    do
    {
      v25 = *v24;
      i = *(v24 - 1);
      v26 = v25;
      objc_msgSend((id)i, "setHidden:", 1);
      objc_msgSend(v26, "setHidden:", 1);

      v24 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v23);
  }
  v27 = *(_QWORD *)&v61[v17];
  if ((unint64_t)v27 >> 62)
  {
    while (1)
    {
      v54 = v27 < 0 ? v27 : v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v27);
      v8 = _CocoaArrayWrapper.endIndex.getter(v54);
      if (!v8)
        break;
LABEL_27:
      v16 = objc_opt_self(DOCThumbnailGenerator);
      v58 = (id)v16;
      if (v8 < 1)
        goto LABEL_50;
      v6 = 0;
      v28 = 0;
      v59 = v27 & 0xC000000000000001;
      v29 = &selRef_objectForKey_ofClass_;
      v56 = v8;
      v57 = v27;
      while (1)
      {
        if (v59)
        {
          v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v27);
        }
        else
        {
          v30 = *(void **)(v27 + 8 * v28 + 32);
          swift_unknownObjectRetain(v30);
        }
        if (v28 >= *(_QWORD *)(*(_QWORD *)v60 + 16))
          break;
        v31 = *(_QWORD *)v60 + v6;
        v32 = *(void **)(v31 + 40);
        v33 = *(id *)(v31 + 32);
        v34 = v32;
        v35 = objc_msgSend(v61, v29[368]);
        v36 = (unint64_t)objc_msgSend(v35, "userInterfaceStyle");

        if (v36 >= 3)
        {
          type metadata accessor for UIUserInterfaceStyle(0);
          v62[3] = v38;
          v62[0] = v36;
          doc_warnUnrecognizedEnumValueEncountered(_:)(v62);
          sub_100068588(v62);
          v37 = 1;
        }
        else
        {
          v37 = qword_1004DD120[v36];
        }
        if (*(_QWORD *)(*(_QWORD *)v60 + 16))
        {
          objc_msgSend(*(id *)(*(_QWORD *)v60 + 32), "fittingSize");
          v40 = v39;
          v42 = v41;
        }
        else
        {
          v42 = 0.0;
          v40 = 0.0;
        }
        v43 = objc_msgSend(v61, v29[368], v56, v57);
        objc_msgSend(v43, "displayScale");
        v45 = v44;

        v46 = objc_msgSend(objc_allocWithZone((Class)DOCThumbnailDescriptor), "initWithSize:scale:style:isFolded:isInteractive:isFolder:", v37, 0, 1, objc_msgSend(v30, "isFolder"), v40, v42, v45);
        v47 = objc_msgSend(v58, "sharedGenerator");
        i = (unint64_t)objc_msgSend(v47, "thumbnailForNode:descriptor:forceFetch:", v30, v46, 1);

        objc_msgSend((id)i, "addListener:", v61);
        swift_beginAccess(v4, v62, 33, 0);
        v48 = swift_unknownObjectRetain(i);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
        v50 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v49 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v50 >= v49 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
        ++v28;
        v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, i);
        specialized Array._endMutation()(v51);
        swift_endAccess(v62);
        objc_msgSend(v33, "setHidden:", 0);
        objc_msgSend(v34, "setHidden:", 0);
        v52 = v33;
        v53 = objc_msgSend((id)i, "thumbnail");
        objc_msgSend(v52, "setImage:", v53);
        swift_unknownObjectRelease(v30);

        swift_unknownObjectRelease(i);
        v6 += 16;
        v27 = v57;
        v29 = &selRef_objectForKey_ofClass_;
        if (v56 == v28)
          goto LABEL_48;
      }
      __break(1u);
    }
  }
  else
  {
    v8 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v61[v17]);
    if (v8)
      goto LABEL_27;
  }
LABEL_48:
  swift_bridgeObjectRelease(v27);
  sub_1001FA7D0();
  objc_msgSend(v61, "invalidateIntrinsicContentSize");
  return objc_msgSend(v61, "setNeedsLayout");
}

uint64_t DOCImageContainerFittingView.nodes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

id DOCImageContainerFittingView.nodes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_bridgeObjectRelease(v4);
  return sub_1001F9A0C();
}

id (*DOCImageContainerFittingView.nodes.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes, a1, 33, 0);
  return sub_1001FA15C;
}

id sub_1001FA15C(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_1001F9A0C();
  return result;
}

double DOCImageContainerFittingView.systemLayoutSizeFitting(_:)(double a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  double v7;
  void **v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double height;
  uint64_t v32;
  CGAffineTransform v33;
  char v34[32];
  CGRect v35;
  CGRect v36;

  v5 = &v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v34, 0, 0);
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v6)
  {
    v7 = 0.0;
    v32 = swift_bridgeObjectRetain(*(_QWORD *)v5);
    v8 = (void **)(v32 + 40);
    do
    {
      v9 = *v8;
      v10 = *(v8 - 1);
      v11 = v9;
      v12 = objc_msgSend(v10, "image");
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v12, "size");
        v15 = v14;
        v17 = v16;
        v18 = objc_msgSend(v2, "window");
        if (v18)
        {
          v19 = v18;
          v20 = objc_msgSend(v18, "screen");

          objc_msgSend(v20, "scale");
          v22 = v21;

        }
        else
        {
          v22 = 2.0;
        }
        v23 = DOCAdaptSizeToRect(0, 0.0, 0.0, a1, a2, v15, v17, v22);
        v25 = v24;
        v27 = v26;
        v29 = v28;
        objc_msgSend(v10, "transform");
        v35.origin.x = v23;
        v35.origin.y = v25;
        v35.size.width = v27;
        v35.size.height = v29;
        v36 = CGRectApplyAffineTransform(v35, &v33);
        height = v36.size.height;

        if (v7 <= height)
          v7 = height;
      }
      else
      {

      }
      v8 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v32);
  }
  return a1;
}

id DOCImageContainerFittingView.intrinsicContentSize.getter()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  char v5[24];

  v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v5, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    objc_msgSend(*(id *)(*(_QWORD *)v1 + 32), "fittingSize");
  }
  else
  {
    v3 = 0.0;
    v2 = 0.0;
  }
  return objc_msgSend(v0, "systemLayoutSizeFittingSize:", v2, v3);
}

Swift::Void __swiftcall DOCImageContainerFittingView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  DOCImageContainerFittingView.updateContentFrame()();
  objc_msgSend(v0, "setContentOffsetFromTop:", 0.0);
}

Swift::Void __swiftcall DOCImageContainerFittingView.updateContentFrame()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char *v8;
  uint64_t v9;
  void **v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  double MidX;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  uint64_t v35;
  double v36;
  char v37[24];
  CGRect v38;
  CGRect v39;

  objc_msgSend(v0, "bounds");
  v36 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v37, 0, 0);
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 16);
  if (v9)
  {
    v35 = swift_bridgeObjectRetain(*(_QWORD *)v8);
    v10 = (void **)(v35 + 40);
    do
    {
      v25 = *v10;
      v26 = *(v10 - 1);
      v27 = v25;
      v28 = v26;
      v29 = v27;
      objc_msgSend(v28, "intrinsicContentSize");
      v31 = v30;
      v33 = v32;
      v34 = objc_msgSend(v0, "window");
      if (v34)
      {
        v11 = v34;
        v12 = objc_msgSend(v34, "screen");

        objc_msgSend(v12, "scale");
        v14 = v13;

      }
      else
      {
        v14 = 2.0;
      }
      v15 = DOCAdaptSizeToRect(0, v36, v3, v5, v7, v31, v33, v14);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v22 = v28;
      v38.origin.x = v15;
      v38.origin.y = v17;
      v38.size.width = v19;
      v38.size.height = v21;
      MidX = CGRectGetMidX(v38);
      v39.origin.x = v15;
      v39.origin.y = v17;
      v39.size.width = v19;
      v39.size.height = v21;
      objc_msgSend(v22, "setCenter:", MidX, CGRectGetMidY(v39));

      v24 = v22;
      objc_msgSend(v24, "bounds");
      objc_msgSend(v24, "setBounds:");

      objc_msgSend(v24, "center");
      objc_msgSend(v29, "setCenter:");
      objc_msgSend(v24, "bounds");
      objc_msgSend(v29, "bounds");
      objc_msgSend(v29, "setBounds:");

      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v35);
  }
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void sub_1001FA7D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  CGFloat tx;
  CGFloat ty;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  double v15;
  CGFloat a;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  uint64_t v32;
  CGFloat d;
  CGFloat c;
  CGFloat b;
  CGAffineTransform v36;
  CGAffineTransform t2;
  CGAffineTransform t1;
  _BYTE v39[24];
  _BYTE v40[32];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs, v40, 0, 0);
  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
    swift_bridgeObjectRetain(v2);
    swift_beginAccess(v4, v39, 0, 0);
    v5 = 0;
    b = CGAffineTransformIdentity.b;
    tx = CGAffineTransformIdentity.tx;
    d = CGAffineTransformIdentity.d;
    c = CGAffineTransformIdentity.c;
    ty = CGAffineTransformIdentity.ty;
    while (v5 < *(_QWORD *)(v2 + 16))
    {
      v9 = v2 + 32 + 16 * v5;
      v10 = *(void **)v9;
      v11 = *(void **)(v9 + 8);
      if (v5)
      {
        t1.a = 0.0;
        v12 = v10;
        v13 = v11;
        while (1)
        {
          swift_stdlib_random(&t1, 8);
          if ((unint64_t)(0x20000000000001 * *(_QWORD *)&t1.a) >= 0x1FFFFFFFFFF801)
            break;
          t1.a = 0.0;
        }
        v14 = (*(unint64_t *)&t1.a * (unsigned __int128)0x20000000000001uLL) >> 64;
        v15 = (double)v14 * 1.11022302e-16 * 4.0 + 3.0;
        if (v14 == 0x20000000000000)
          v15 = 7.0;
        if ((v5 & 1) == 0)
          v15 = -v15;
        CGAffineTransformMakeRotation(&t1, v15 * 3.14159265 / 180.0);
        a = t1.a;
        v17 = t1.b;
        v18 = t1.c;
        v19 = t1.d;
        v20 = t1.tx;
        v21 = t1.ty;
      }
      else
      {
        v22 = v10;
        v23 = v11;
        v17 = b;
        a = CGAffineTransformIdentity.a;
        v19 = d;
        v18 = c;
        v20 = tx;
        v21 = ty;
      }
      v24 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v24 < 0)
          v32 = *v4;
        else
          v32 = v24 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v4);
        v25 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease(v24);
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v27 = b;
      v26 = CGAffineTransformIdentity.a;
      v29 = d;
      v28 = c;
      v30 = tx;
      v31 = ty;
      if (v25 >= 2)
      {
        CGAffineTransformMakeScale(&t1, 0.95, 0.95);
        v26 = t1.a;
        v27 = t1.b;
        v28 = t1.c;
        v29 = t1.d;
        v30 = t1.tx;
        v31 = t1.ty;
      }
      ++v5;
      t1.a = a;
      t1.b = v17;
      t1.c = v18;
      t1.d = v19;
      t1.tx = v20;
      t1.ty = v21;
      t2.a = v26;
      t2.b = v27;
      t2.c = v28;
      t2.d = v29;
      t2.tx = v30;
      t2.ty = v31;
      CGAffineTransformConcat(&v36, &t1, &t2);
      t1 = v36;
      objc_msgSend(v10, "setTransform:", &t1);
      objc_msgSend(v10, "transform");
      objc_msgSend(v11, "setTransform:", &t1);
      v8 = objc_msgSend(v10, "layer");
      objc_msgSend(v8, "setAllowsEdgeAntialiasing:", 1);

      if (v5 == v3)
      {
        swift_bridgeObjectRelease(v2);
        return;
      }
    }
    __break(1u);
  }
}

void _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  char **v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t ObjectType;
  unsigned int v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  CGFloat a;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  CGAffineTransform v38;
  _BYTE v39[24];
  _BYTE v40[32];

  v35 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes);
  if ((unint64_t)v1 >> 62)
    goto LABEL_28;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v37 = (id)objc_opt_self(UIColor);
    v3 = (unsigned __int8 *)(v36 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
    v34 = v36 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
    swift_beginAccess(v36 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs, v40, 0, 0);
    v33 = v3;
    swift_beginAccess(v3, v39, 0, 0);
    v4 = 0;
    v5 = 0;
    v32 = v2;
    while (1)
    {
      v13 = *(_QWORD *)(v36 + v35);
      if ((v13 & 0xC000000000000001) == 0)
        break;
      swift_bridgeObjectRetain(*(_QWORD *)(v36 + v35));
      v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v13);
      swift_bridgeObjectRelease(v13);
LABEL_12:
      ObjectType = swift_getObjectType(v1);
      if ((DOCNode.areDiskPropertiesSupported.getter(ObjectType) & 1) != 0)
        v15 = 2;
      else
        v15 = objc_msgSend((id)v1, "isFolder");
      swift_unknownObjectRelease(v1);
      if (v5 >= *(_QWORD *)(*(_QWORD *)v34 + 16))
        goto LABEL_27;
      v16 = *(_QWORD *)v34 + v4;
      v17 = *(void **)(v16 + 32);
      v18 = *(id *)(v16 + 40);
      v19 = v17;
      v20 = objc_msgSend(v19, "layer");
      if (v15)
      {
        v21 = objc_msgSend(v37, "clearColor");
        a = COERCE_DOUBLE(objc_msgSend(v21, "CGColor"));

      }
      else
      {
        type metadata accessor for CGColor(0);
        _CGColorInitTrampoline.init(_colorLiteralRed:green:blue:alpha:)(&v38, 0.0, 0.0, 0.0, 0.12);
        a = v38.a;
      }
      objc_msgSend(v20, "setBorderColor:", *(_QWORD *)&a, v32);

      objc_msgSend(v18, "setHidden:", *v33);
      v23 = objc_msgSend(v18, "layer");
      if (v15 == 1)
      {
        objc_msgSend(v18, "bounds");
        v25 = v24;
        v27 = v26;
        sub_1001FC248();
        v28 = (void *)static UIBezierPath.folder.getter();
        v29 = v28;
        if (v25 > 0.0 && v27 > 0.0)
        {
          objc_msgSend(v28, "bounds");
          CGAffineTransformMakeScale(&v38, v25 / v30, v25 / v30);
          objc_msgSend(v29, "applyTransform:", &v38);
          CGAffineTransformMakeTranslation(&v38, 0.0, 0.0);
          objc_msgSend(v29, "applyTransform:", &v38);
        }
        v6 = objc_msgSend(v29, "CGPath");

      }
      else
      {
        v6 = 0;
      }
      ++v5;
      objc_msgSend(v23, "setShadowPath:", v6);

      v7 = objc_msgSend(v18, "layer");
      v8 = &selRef_systemBackgroundColor;
      if (v15)
        v8 = &selRef_clearColor;
      v9 = objc_msgSend(v37, *v8);
      v10 = objc_msgSend(v9, "CGColor");

      objc_msgSend(v7, "setBackgroundColor:", v10);
      v1 = (uint64_t)objc_msgSend(v18, "layer");
      v11 = objc_msgSend(v37, "blackColor");
      v12 = objc_msgSend(v11, "CGColor");

      objc_msgSend((id)v1, "setShadowColor:", v12);
      v4 += 16;
      if (v32 == v5)
        return;
    }
    if (v5 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v1 = *(_QWORD *)(v13 + 8 * v5 + 32);
      swift_unknownObjectRetain(v1);
      goto LABEL_12;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v1 < 0)
      v31 = v1;
    else
      v31 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v1);
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
  }
}

void DOCImageContainerFittingView.thumbnailLoaded(_:)(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  _BYTE v9[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails, v9, 0, 0);
  v4 = *v3;
  swift_unknownObjectRetain(a1);
  v5 = swift_bridgeObjectRetain(v4);
  v6 = sub_1001FBF28(v5, a1);
  v8 = v7;
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(a1);
  if ((v8 & 1) == 0)
    sub_1001FB0E8(a1, v6);
}

void sub_1001FB0E8(void *a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  char **v5;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v8 = &v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v13, 0, 0);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(*(_QWORD *)v8 + 16) <= a2)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    if (v4 < 0)
      v11 = v4;
    else
      v11 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v4);
    if (v12 > 1)
      goto LABEL_7;
    goto LABEL_5;
  }
  a2 = (unint64_t)*(id *)(*(_QWORD *)v8 + 16 * a2 + 32);
  v8 = (char *)objc_msgSend((id)a2, "image");
  v5 = &selRef_showTips;
  v3 = (char *)objc_msgSend(a1, "thumbnail");
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes];
  if ((unint64_t)v4 >> 62)
    goto LABEL_11;
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
  {
LABEL_7:

    goto LABEL_8;
  }
LABEL_5:
  if (v8)
  {
    v8 = v8;
    objc_msgSend(v8, "size");
    objc_msgSend(v8, "size");
    objc_msgSend(v3, "size");
    objc_msgSend(v3, "size");

    v3 = v8;
    goto LABEL_7;
  }
LABEL_8:

  v9 = (id)a2;
  v10 = objc_msgSend(a1, v5[114]);
  objc_msgSend(v9, "setImage:", v10);

  DOCImageContainerFittingView.updateContentFrame()();
  objc_msgSend(v2, "setNeedsLayout");

}

id DOCImageContainerFittingView.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCImageContainerFittingView);
}

double DOCContainerFittingView.intrinsicContentSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize, v3, 0, 0);
  return *(double *)v1;
}

id DOCContainerFittingView.fittingSize.setter(double a1, double a2)
{
  char *v2;
  double *v5;
  _BYTE v7[24];

  v5 = (double *)&v2[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize], v7, 1, 0);
  *v5 = a1;
  v5[1] = a2;
  return objc_msgSend(v2, "invalidateIntrinsicContentSize");
}

id (*DOCContainerFittingView.fittingSize.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize, a1, 33, 0);
  return sub_1001FB444;
}

id sub_1001FB444(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), "invalidateIntrinsicContentSize");
  return result;
}

double DOCContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop, v3, 0, 0);
  return *(double *)v1;
}

uint64_t DOCContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop, v5, 1, 0);
  *v3 = a1;
  return result;
}

char *DOCContainerFittingView.__allocating_init(containedViewController:)(void *a1)
{
  objc_class *v1;
  _BYTE *v3;
  _QWORD *v4;
  id v5;
  char *v6;
  char *result;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  objc_super v13;

  v3 = objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  *v4 = 0;
  v4[1] = 0;
  v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController] = a1;
  v13.receiver = v3;
  v13.super_class = v1;
  v5 = a1;
  v6 = (char *)objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = (char *)objc_msgSend(v5, "view");
  if (result)
  {
    v8 = result;
    objc_msgSend(v6, "addSubview:", result);

    KeyPath = swift_getKeyPath(&unk_1004DD098);
    v10 = swift_allocObject(&unk_1005D1560, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 3, sub_1001FC1AC, v10, &protocol witness table for NSObject);

    swift_release(v10);
    swift_release(KeyPath);

    v12 = *(void **)&v6[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext];
    *(_QWORD *)&v6[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = v11;

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *DOCContainerFittingView.init(containedViewController:)(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  char *v5;
  char *result;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController] = a1;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  v4 = a1;
  v5 = (char *)objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = (char *)objc_msgSend(v4, "view");
  if (result)
  {
    v7 = result;
    objc_msgSend(v5, "addSubview:", result);

    KeyPath = swift_getKeyPath(&unk_1004DD098);
    v9 = swift_allocObject(&unk_1005D1560, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 3, sub_1001FC1AC, v9, &protocol witness table for NSObject);

    swift_release(v9);
    swift_release(KeyPath);

    v11 = *(void **)&v5[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext];
    *(_QWORD *)&v5[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = v10;

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001FB8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  double v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  _QWORD v12[2];
  char v13;
  double v14[2];
  char v15;

  v4 = sub_10006922C(&qword_100647928);
  NSKeyValueObservedChange.oldValue.getter(v12);
  v5 = *(double *)v12;
  v6 = *(double *)&v12[1];
  v7 = v13;
  NSKeyValueObservedChange.newValue.getter(v14, v4);
  if ((v7 & 1) != 0)
  {
    if ((v15 & 1) != 0)
      return;
    goto LABEL_9;
  }
  if ((v15 & 1) != 0 || (v5 == v14[0] ? (v8 = v6 == v14[1]) : (v8 = 0), !v8))
  {
LABEL_9:
    v9 = a3 + 16;
    swift_beginAccess(v9, v12, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
    if (Strong)
    {
      v11 = Strong;
      objc_msgSend(Strong, "invalidateIntrinsicContentSize");
      objc_msgSend(v11, "setNeedsLayout");
      objc_msgSend(v11, "layoutIfNeeded");
      *((_BYTE *)v11 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates) = 0;

    }
  }
}

Swift::Void __swiftcall DOCContainerFittingView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double MaxY;
  double Height;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  objc_super v36;
  CGRect v37;
  CGRect v38;

  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  objc_msgSendSuper2(&v36, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController];
  objc_msgSend(v9, "preferredContentSize");
  v11 = v10;
  v13 = v12;
  v14 = objc_msgSend(v0, "window");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "screen");

    objc_msgSend(v16, "scale");
    v18 = v17;

  }
  else
  {
    v18 = 2.0;
  }
  v19 = DOCAdaptSizeToRect(0, v2, v4, v6, v8, v11, v13, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v37.origin.x = v2;
  v37.origin.y = v4;
  v37.size.width = v6;
  v37.size.height = v8;
  MaxY = CGRectGetMaxY(v37);
  v38.origin.x = v19;
  v38.origin.y = v21;
  v38.size.width = v23;
  v38.size.height = v25;
  Height = CGRectGetHeight(v38);
  v28 = objc_msgSend(v9, "view");
  if (!v28)
  {
    __break(1u);
    goto LABEL_10;
  }
  v29 = v28;
  objc_msgSend(v28, "setFrame:", v19, MaxY - Height, v23, v25);

  if ((v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] & 1) != 0)
    return;
  objc_msgSend(v0, "frame");
  v31 = v30;
  v32 = objc_msgSend(v9, "view");
  if (!v32)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v33 = v32;
  objc_msgSend(v32, "frame");
  v35 = v34;

  objc_msgSend(v0, "setContentOffsetFromTop:", v31 - v35);
}

id DOCInlineRenameOverlayView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void DOCContainerFittingView.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;

  v1 = &v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Files/DOCContainerFittingView.swift", 35, 2, 383, 0);
  __break(1u);
}

id DOCInlineRenameOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void DOCContainerFittingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Files.DOCContainerFittingView", 29, "init(frame:)", 12, 0);
  __break(1u);
}

id DOCContainerFittingView.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCContainerFittingView);
}

unint64_t sub_1001FBEA0(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FBF28(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a1);
  if (!v4)
    return 0;
LABEL_3:
  for (i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    }
    else
    {
      v6 = *(void **)(a1 + 8 * i + 32);
      swift_unknownObjectRetain(v6);
    }
    v7 = objc_msgSend(v6, "hash");
    v8 = objc_msgSend(a2, "hash");
    swift_unknownObjectRelease(v6);
    if (v7 == v8)
      break;
    v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v9 == v4)
      return 0;
  }
  return i;
}

void _s5Files28DOCImageContainerFittingViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010050DA60, "Files/DOCContainerFittingView.swift", 35, 2, 104, 0);
  __break(1u);
}

uint64_t type metadata accessor for DOCImageContainerFittingView()
{
  return objc_opt_self(_TtC5Files28DOCImageContainerFittingView);
}

const char *sub_1001FC138()
{
  return "preferredContentSize";
}

id sub_1001FC144@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "preferredContentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1001FC174(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setPreferredContentSize:", *a1, a1[1]);
}

uint64_t sub_1001FC188()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001FC1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001FB8B0(a1, a2, v2);
}

uint64_t type metadata accessor for DOCContainerFittingView()
{
  return objc_opt_self(_TtC5Files23DOCContainerFittingView);
}

uint64_t assignWithCopy for DOCImageContainerFittingView.ViewPair(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.ViewPair()
{
  return &type metadata for DOCImageContainerFittingView.ViewPair;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.Metrics()
{
  return &type metadata for DOCImageContainerFittingView.Metrics;
}

unint64_t sub_1001FC248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100646B00;
  if (!qword_100646B00)
  {
    v1 = objc_opt_self(UIBezierPath);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646B00);
  }
  return result;
}

unint64_t sub_1001FC28C()
{
  unint64_t result;

  result = qword_100647930;
  if (!qword_100647930)
  {
    result = swift_getWitnessTable(&unk_1004DD188, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_100647930);
  }
  return result;
}

uint64_t sub_1001FC2D0()
{
  return sub_10005A360((unint64_t *)&unk_100643D60, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAFD8);
}

uint64_t sub_1001FC2FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_1006479A8);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_1006479B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001FCCB8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for OpenFileIntent, v6);
  v7._object = (void *)0x80000001005190C0;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004DD2F8);
  v9 = sub_10006922C(&qword_1006479B8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for OpenFileIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for OpenFileIntent, v6);
}

uint64_t sub_1001FC474(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2[15] = a1;
  v2[16] = a2;
  v3 = type metadata accessor for OpenURLIntent(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v2[19] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100643470);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10006922C(&qword_100647988);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URLComponents(0);
  v2[22] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[23] = v8;
  v2[24] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v2[25] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[26] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[27] = swift_task_alloc(v11);
  v2[28] = swift_task_alloc(v11);
  v2[29] = swift_task_alloc(v11);
  v2[30] = swift_task_alloc(v11);
  v12 = type metadata accessor for DOCFileEntity(0);
  v2[31] = v12;
  v2[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001FC5B8, 0, 0);
}

uint64_t sub_1001FC5B8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = v0;
  v2 = v0 + 2;
  v4 = v1[31];
  v3 = (_QWORD *)v1[32];
  v5 = v1[29];
  IntentParameter.wrappedValue.getter(v3);
  v6 = *(void **)((char *)v3 + *(int *)(v4 + 28));
  v1[33] = v6;
  v7 = v6;
  sub_1000EACF8((uint64_t)v3);
  v8 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v1[34] = v8;
  v1[7] = v5;
  v1[2] = v1;
  v1[3] = sub_1001FC6B4;
  v9 = swift_continuation_init(v2, 1);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_10012D8FC;
  v1[3] = &unk_1005D1648;
  v1[4] = v9;
  objc_msgSend(v8, "fetchURLForItem:completionHandler:", v7, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_1001FC6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 280) = v1;
  if (v1)
    v2 = sub_1001FCAE4;
  else
    v2 = sub_1001FC714;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FC714()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = (void *)v0[34];
  v2 = v0[30];
  v3 = v0[22];
  v4 = v0[23];
  v5 = v0[21];
  v6 = *(void (**)(_QWORD))(v0[26] + 32);
  ((void (*)(uint64_t, _QWORD, _QWORD))v6)(v2, v0[29], v0[25]);

  URLComponents.init(url:resolvingAgainstBaseURL:)(v2, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    v7 = (void *)v0[33];
    v8 = v0[30];
    v9 = v0[25];
    v10 = v0[26];
    sub_10000CB4C(v0[21], &qword_100647988);
    v11 = sub_1001FD164();
    v12 = swift_allocError(&type metadata for DeepLinkError, v11, 0, 0);
    swift_willThrow(v12);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    v13 = v0[25];
    v14 = v0[26];
    v15 = v0[20];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[23] + 32))(v0[24], v0[21], v0[22]);
    URLComponents.scheme.setter(0x6F64646572616873, 0xEF73746E656D7563);
    v16 = sub_10006922C(&qword_100647998);
    v17 = type metadata accessor for URLQueryItem(0);
    v18 = swift_allocObject(v16, ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) | 7);
    *(_OWORD *)(v18 + 16) = xmmword_1004D9670;
    URLQueryItem.init(name:value:)(1852141679, 0xE400000000000000, 1702195828, 0xE400000000000000);
    v19 = URLComponents.queryItems.setter(v18);
    URLComponents.url.getter(v19);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
    v21 = (void *)v0[33];
    if (v20 != 1)
    {
      v52 = v0[30];
      v53 = v0[32];
      v38 = v0[28];
      v39 = v0[26];
      v40 = v0[27];
      v41 = v0[25];
      v48 = v14;
      v49 = v0[23];
      v50 = v0[22];
      v51 = v0[24];
      v56 = v0[21];
      v54 = v0[29];
      v55 = v0[20];
      v42 = v0[19];
      v47 = v0[18];
      v43 = v0[17];
      v6(v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v38, v41);
      OpenURLIntent.init(_:)(v40);
      v44 = sub_10005A360(&qword_1006479A0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLIntent, (uint64_t)&protocol conformance descriptor for OpenURLIntent);
      static IntentResult.result<A>(opensIntent:)(v42, v43, v44);

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v43);
      v45 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v45(v38, v41);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
      v45(v52, v41);
      swift_task_dealloc(v53);
      swift_task_dealloc(v52);
      swift_task_dealloc(v54);
      swift_task_dealloc(v38);
      swift_task_dealloc(v40);
      swift_task_dealloc(v51);
      swift_task_dealloc(v56);
      swift_task_dealloc(v55);
      swift_task_dealloc(v42);
      v37 = (uint64_t (*)(void))v0[1];
      return v37();
    }
    v22 = v0[30];
    v24 = v0[24];
    v23 = v0[25];
    v25 = v0[22];
    v26 = v0[23];
    sub_10000CB4C(v0[20], &qword_100643470);
    v27 = sub_1001FD164();
    v28 = swift_allocError(&type metadata for DeepLinkError, v27, 0, 0);
    swift_willThrow(v28);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v23);
  }
  v30 = v0[29];
  v29 = v0[30];
  v32 = v0[27];
  v31 = v0[28];
  v33 = v0[24];
  v35 = v0[20];
  v34 = v0[21];
  v36 = v0[19];
  swift_task_dealloc(v0[32]);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_1001FCAE4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 272);
  v2 = *(void **)(v0 + 264);
  swift_willThrow();

  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_1001FCBA0@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001FCBC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for DOCFileEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EACB4(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_1000EACF8(a1);
}

void (*sub_1001FCC3C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1001FCC84;
}

void sub_1001FCC84(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_1001FCCB8()
{
  unint64_t result;

  result = qword_100647938;
  if (!qword_100647938)
  {
    result = swift_getWitnessTable(&unk_1004DD1B0, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_100647938);
  }
  return result;
}

unint64_t sub_1001FCD00()
{
  unint64_t result;

  result = qword_100647940;
  if (!qword_100647940)
  {
    result = swift_getWitnessTable(&unk_1004DD240, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_100647940);
  }
  return result;
}

unint64_t sub_1001FCD48()
{
  unint64_t result;

  result = qword_100647948;
  if (!qword_100647948)
  {
    result = swift_getWitnessTable(&unk_1004DD268, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_100647948);
  }
  return result;
}

uint64_t sub_1001FCD8C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100567004, 1) + 8);
}

uint64_t sub_1001FCDB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100566FDC, 1);
}

uint64_t sub_1001FCDC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001FD1D0();
  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1001FCE00(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100647984);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return sub_1001FC474(a1, v4);
}

uint64_t sub_1001FCE58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t *v24;

  v24 = a1;
  v1 = type metadata accessor for InputConnectionBehavior(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_10006922C((uint64_t *)&unk_1006438C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006922C((uint64_t *)&unk_1006438D0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = type metadata accessor for DOCFileEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
  v19 = type metadata accessor for IntentDialog(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v10, 1, 1, v19);
  v20(v7, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for InputConnectionBehavior.default(_:), v1);
  v21 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
  result = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v16, v13, v10, v7, v4, v21);
  *v24 = result;
  return result;
}

uint64_t sub_1001FD08C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001FCCB8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1001FD0B8()
{
  unint64_t result;

  result = qword_100647958;
  if (!qword_100647958)
  {
    result = swift_getWitnessTable(&unk_1004DD2B4, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_100647958);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenFileIntent()
{
  return &type metadata for OpenFileIntent;
}

uint64_t sub_1001FD10C()
{
  return sub_100062698(&qword_100647960, &qword_100647968, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1001FD138()
{
  return sub_100062698(&qword_100647970, &qword_100647978, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_1001FD164()
{
  unint64_t result;

  result = qword_100647990;
  if (!qword_100647990)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeepLinkError, &type metadata for DeepLinkError);
    atomic_store(result, (unint64_t *)&qword_100647990);
  }
  return result;
}

uint64_t sub_1001FD1A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001FD1D0()
{
  unint64_t result;

  result = qword_1006479C0;
  if (!qword_1006479C0)
  {
    result = swift_getWitnessTable(&unk_1004DD284, &type metadata for OpenFileIntent);
    atomic_store(result, (unint64_t *)&qword_1006479C0);
  }
  return result;
}

uint64_t sub_1001FD214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v37 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v37 - v10;
  v12 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
  v13 = objc_msgSend(v12, "interfaceStateForConfiguration:", a1);

  if (!v13)
  {
    v18 = Logger.StateStore.unsafeMutableAddressor();
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v18, v2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v23 = swift_slowAlloc(32, -1);
      v40 = v23;
      *(_DWORD *)v22 = 136315394;
      v39 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519110, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *(_WORD *)(v22 + 12) = 2048;
      v39 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s state store was nil, returning default sizeSetting: %ld", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 1;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  v14 = objc_msgSend(v13, "sizeSetting");
  if (!v14)
  {
    v24 = Logger.StateStore.unsafeMutableAddressor();
    v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v24, v2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(32, -1);
      v40 = v29;
      *(_DWORD *)v28 = 136315394;
      v39 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519110, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *(_WORD *)(v28 + 12) = 2048;
      v39 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s sizeSetting property is nil, returning default sizeSetting: %ld", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return 1;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    return 1;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "integerValue");

  if (!v16)
  {

    return 1;
  }
  if (v16 != (id)-1)
  {
    v30 = Logger.StateStore.unsafeMutableAddressor();
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v11, v30, v2);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(32, -1);
      v38 = swift_slowAlloc(32, -1);
      v40 = v38;
      *(_DWORD *)v34 = 136315650;
      v39 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519110, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *(_WORD *)(v34 + 12) = 2048;
      v39 = (uint64_t)v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *(_WORD *)(v34 + 22) = 2048;
      v39 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s could not initialize SizeSetting from the provided raw value: %ld, returning default sizeSetting: %ld", (uint8_t *)v34, 0x20u);
      v17 = 1;
      v35 = v38;
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      return v17;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    return 1;
  }

  return 0;
}

uint64_t sub_1001FD7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSNumber v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  objc_class *v22;
  objc_class **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  char *v34;
  objc_class **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  v10.super.super.isa = Int._bridgeToObjectiveC()().super.super.isa;
  v11 = (void *)objc_opt_self(DOCUserInterfaceStateStore);
  v12 = objc_msgSend(v11, "sharedStore");
  v13 = objc_msgSend(v12, "interfaceStateForConfiguration:", a2);

  if (v13)
  {
    objc_msgSend(v13, "setSizeSetting:", v10.super.super.isa);
    v15 = objc_msgSend(v11, "sharedStore");
    objc_msgSend(v15, "updateInterfaceState:forConfiguration:", v13, a2);

    v17 = Logger.StateStore.unsafeMutableAddressor(v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v17, v3);
    v18 = v10.super.super.isa;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.debug.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v35 = (objc_class **)swift_slowAlloc(8, -1);
      v37 = swift_slowAlloc(32, -1);
      v40 = v37;
      *(_DWORD *)v21 = 136315394;
      v38 = v4;
      v39 = sub_1000544FC(0xD000000000000028, 0x80000001005190E0, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      *(_WORD *)(v21 + 12) = 2112;
      v36 = v3;
      v39 = (uint64_t)v18;
      v22 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      v23 = v35;
      *v35 = v18;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s saving new size setting with raw value: %@ to defaults", (uint8_t *)v21, 0x16u);
      v24 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v23, 1, v24);
      swift_slowDealloc(v23, -1, -1);
      v25 = v37;
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v36);
    }

    v33 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    v34 = v9;
  }
  else
  {
    v27 = Logger.StateStore.unsafeMutableAddressor(v14);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v27, v3);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v40 = v32;
      *(_DWORD *)v31 = 136315138;
      v39 = sub_1000544FC(0xD000000000000028, 0x80000001005190E0, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s - failed to save default size setting, state store was nil", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

    }
    v33 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    v34 = v6;
  }
  return v33(v34, v3);
}

uint64_t sub_1001FDBF8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v1 = type metadata accessor for DOCDebugInfoManager.OutputKind(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100640D88 != -1)
    swift_once(&qword_100640D88, sub_1001593F8);
  v4 = qword_100672698;
  v5 = qword_100640D80;
  v6 = v0;
  if (v5 != -1)
    swift_once(&qword_100640D80, sub_1001593C0);
  v7 = objc_msgSend(v6, "internalNavigationController");
  v8 = objc_msgSend(v7, "navigationBar");

  *v3 = v6;
  v3[1] = v8;
  swift_storeEnumTagMultiPayload(v3, v1, 0);
  v9 = v6;
  sub_1001594D0(v4, v9, (uint64_t)v3, (void (*)(_QWORD))sub_1001FDD48, 0);

  return sub_10015B7C0((uint64_t)v3);
}

uint64_t sub_1001FDD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Logger.UI.unsafeMutableAddressor(v2);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v5, v0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Did complete debug info gathering", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1001FDE74()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  Swift::String v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v1 = (uint64_t)v0;
  v2 = objc_msgSend(v0, "internalNavigationController");
  v3 = type metadata accessor for DOCFullDocumentManagerNavigationController();
  v23 = objc_msgSend((id)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0), "navigationBar");

  v4 = objc_msgSend(v23, "viewWithTag:", 3292022);
  if (v4)
    goto LABEL_2;
  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "stringForKey:", v6);

  if (v7)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

  }
  else
  {
    v10 = 0xE600000000000000;
    v8 = 0x2A454E4F4E2ALL;
  }
  if (!*(_QWORD *)"tory")
    goto LABEL_11;
  if (*(_QWORD *)"clearHistory" != v8 || *(_QWORD *)"tory" != v10)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)"clearHistory", *(_QWORD *)"tory", v8, v10, 0) & 1) != 0)
    {
      v22 = (void *)v1;
      v21 = *(_QWORD *)"clearHistory";
      goto LABEL_13;
    }
LABEL_11:
    swift_bridgeObjectRelease(v10);

LABEL_2:
    return;
  }
  v22 = (void *)v1;
  v21 = v8;
LABEL_13:
  swift_bridgeObjectRetain(*(_QWORD *)"tory");
  swift_bridgeObjectRetain(*(_QWORD *)"story");
  swift_retain();
  sub_10008BA00(0, 0);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRetain(*(_QWORD *)"tory");
  swift_bridgeObjectRetain(*(_QWORD *)"story");
  swift_retain();
  sub_10008BA00(0, 0);
  swift_bridgeObjectRetain(*(_QWORD *)"story");
  v11._countAndFlagsBits = 0x6948207261656C43;
  v11._object = *(void **)"story";
  String.append(_:)(v11);
  swift_bridgeObjectRelease(*(_QWORD *)"story");
  v12._countAndFlagsBits = 10;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE200000000000000);
  v15 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, v14, 1);

  v16 = swift_allocObject(&unk_1005D1780, 112, 7);
  *(_QWORD *)(v16 + 16) = v21;
  *(_QWORD *)(v16 + 24) = *(_QWORD *)"tory";
  strcpy((char *)(v16 + 32), "Clear History");
  *(_WORD *)(v16 + 46) = unk_1005BFADE;
  *(_OWORD *)(v16 + 48) = xmmword_1005BFAE0;
  *(_QWORD *)(v16 + 64) = sub_1001FE798;
  *(_QWORD *)(v16 + 72) = 0;
  *(_OWORD *)(v16 + 80) = xmmword_1005BFB00;
  *(_QWORD *)(v16 + 96) = v22;
  *(_QWORD *)(v16 + 104) = v15;
  aBlock[4] = sub_1001FEE50;
  v25 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D1798;
  v17 = _Block_copy(aBlock);
  v18 = v25;
  swift_bridgeObjectRetain(*(_QWORD *)"tory");
  swift_bridgeObjectRetain(*(_QWORD *)"story");
  swift_retain();
  sub_10008BA00(0, 0);
  v19 = v22;
  v20 = v15;
  objc_msgSend(v19, "presentViewController:animated:completion:", v20, 1, v17, swift_release(v18).n128_f64[0]);
  swift_release(0);
  swift_bridgeObjectRelease(*(_QWORD *)"story");
  swift_bridgeObjectRelease(*(_QWORD *)"tory");
  sub_100087534(0, 0);

  _Block_release(v17);
  swift_release(0);
  swift_bridgeObjectRelease(*(_QWORD *)"story");
  swift_bridgeObjectRelease(*(_QWORD *)"tory");

  sub_100087534(0, 0);
}

double sub_1001FE45C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;
  void *v13;
  NSString v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void (*v23)(_QWORD *__return_ptr, __int128 *);
  uint64_t v24;
  double result;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[10];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  swift_retain();
  specialized ContiguousArray.reserveCapacity(_:)(2);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v3 = 0;
  v4 = 0;
  do
  {
    v18 = v3;
    v19 = &off_1005BFB60 + 10 * v4;
    v20 = v19[6];
    v21 = v19[4];
    v35 = v19[5];
    v36 = v20;
    v22 = v19[2];
    v33 = v19[3];
    v34 = v21;
    v32 = v22;
    v24 = *((_QWORD *)&v20 + 1);
    v23 = (void (*)(_QWORD *__return_ptr, __int128 *))v20;
    v30 = v18;
    if ((_QWORD)v20)
    {
      sub_1001FEFB8(&v32);
      sub_10008BA00((uint64_t)v23, v24);
      v23(v31, &v32);
      sub_100087534((uint64_t)v23, v24);
      v23 = (void (*)(_QWORD *__return_ptr, __int128 *))v31[8];
      v24 = v31[9];
      v5 = v31[7];
      v6 = v31[4];
      v28 = v31[6];
      v29 = v31[5];
      v7 = v31[2];
      v8 = v31[3];
      v10 = v31[0];
      v9 = v31[1];
    }
    else
    {
      v5 = *((_QWORD *)&v35 + 1);
      v28 = v35;
      v29 = *((_QWORD *)&v34 + 1);
      v6 = v34;
      v8 = *((_QWORD *)&v33 + 1);
      v7 = v33;
      v9 = *((_QWORD *)&v32 + 1);
      v10 = v32;
      sub_1001FEFB8(&v32);
      sub_1001FEFB8(&v32);
    }
    v11 = (_QWORD *)swift_allocObject(&unk_1005D1870, 104, 7);
    v11[2] = a3;
    v11[3] = v10;
    v11[4] = v9;
    v11[5] = v7;
    v11[6] = v8;
    v11[7] = v6;
    v11[8] = v29;
    v11[9] = v28;
    v11[10] = v5;
    v11[11] = v23;
    v11[12] = v24;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v8);
    swift_retain();
    swift_retain();
    sub_10008BA00((uint64_t)v23, v24);
    v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v12, 0, 0, 0, sub_1001FF064, v11);
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setTitle:", v14);

    objc_msgSend(v13, "setState:", v6);
    objc_msgSend(v13, "setAttributes:", v29);
    swift_release(v5);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);
    sub_100087534((uint64_t)v23, v24);
    v15 = sub_1001FF070(&v32);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v16 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
    v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
    specialized ContiguousArray._endMutation()(v17);
    v3 = 1;
    v4 = 1;
  }
  while ((v30 & 1) == 0);
  swift_release(a3);
  swift_arrayDestroy(&unk_1005BFB80, 2, &_s15DebugMenuActionVN);
  a1(_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_release(_swiftEmptyArrayStorage).n128_u64[0];
  return result;
}

void sub_1001FE738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    (*(void (**)(void))(a3 + 48))();

  }
}

void sub_1001FE798(void *a1)
{
  char *v1;
  id v2;

  v1 = (char *)objc_msgSend(a1, "dataSource");
  v2 = *(id *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  sub_10001A27C(0, (uint64_t)sub_10043D6A8, 0);
}

void sub_1001FE808()
{
  byte_1006479D0 = (byte_1006479D0 & 1) == 0;
}

__n128 sub_1001FE820@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 result;
  __n128 v14;
  unint64_t v15;
  __int128 v16;

  v4 = byte_1006479D0;
  if (byte_1006479D0)
    v5 = 695095080;
  else
    v5 = 0x2966664F28;
  if (byte_1006479D0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v16 = *(_OWORD *)(a1 + 16);
  v15 = v10;
  v14 = *(__n128 *)(a1 + 48);
  v12 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  sub_1001FEFB8((_QWORD *)a1);
  swift_bridgeObjectRelease(v6);
  sub_1001D0A08((uint64_t)&v16);
  a2->n128_u64[0] = v7;
  a2->n128_u64[1] = v8;
  a2[1].n128_u64[0] = 0x20656C706D617845;
  a2[1].n128_u64[1] = 0xEF20656C67676F54;
  a2[2].n128_u64[0] = v4;
  a2[2].n128_u64[1] = v9;
  result = v14;
  a2[3] = v14;
  a2[4].n128_u64[0] = v15;
  a2[4].n128_u64[1] = v11;
  return result;
}

Class sub_1001FE920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  Swift::String v13;
  UIMenu v14;
  Swift::String v15;
  Swift::OpaquePointer aBlock[5];
  uint64_t v18;
  _BYTE v19[24];
  UIImage_optional v20;
  UIImage_optional v21;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong
    && (v4 = (void *)Strong,
        v5 = (void *)swift_unknownObjectWeakLoadStrong(Strong+ OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_target), v4, v5))
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
    v8 = (void *)objc_opt_self(UIDeferredMenuElement);
    v9 = swift_allocObject(&unk_1005D1820, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    aBlock[4]._rawValue = sub_1001FEFB0;
    v18 = v9;
    aBlock[0]._rawValue = _NSConcreteStackBlock;
    aBlock[1]._rawValue = (void *)1107296256;
    aBlock[2]._rawValue = sub_100458078;
    aBlock[3]._rawValue = &unk_1005D1838;
    v10 = _Block_copy(aBlock);
    v11 = objc_msgSend(v8, "elementWithUncachedProvider:", v10, swift_release(v18).n128_f64[0]);
    _Block_release(v10);
    *(_QWORD *)(v7 + 32) = v11;
    aBlock[0]._rawValue = (void *)v7;
    specialized Array._endMutation()(v12);
    v13._countAndFlagsBits = 0x704F206775626544;
    v13._object = (void *)0xED0000736E6F6974;
    v20.value.super.isa = 0;
    v20.is_nil = 0;
    v14.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v20, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock[0]._rawValue, aBlock[0]).super.super.isa;

  }
  else
  {
    sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v21.value.super.isa = 0;
    v21.is_nil = 0;
    return (Class)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, aBlock[0]);
  }
  return v14.super.super.isa;
}

uint64_t sub_1001FEC1C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction));
  return swift_unknownObjectWeakDestroy(v0+ OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_target);
}

id sub_1001FEC48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s18DOCDebugMenuButtonCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s18DOCDebugMenuButtonCMa()
{
  return objc_opt_self(_TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton);
}

char *sub_1001FECD4(void *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  id v7;
  void *v8;
  id v9;

  v4 = _s18DOCDebugMenuButtonCMa();
  v5 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  objc_msgSend(v5, "setTag:", 3292022);
  swift_unknownObjectWeakAssign(&v5[OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_target], a2);
  v6 = v5;
  objc_msgSend(a1, "center");
  objc_msgSend(v6, "setFrame:");

  objc_msgSend(a1, "addSubview:", v6);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v6);
  v8 = *(void **)&v6[OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction];
  *(_QWORD *)&v6[OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction] = v7;
  v9 = v7;

  objc_msgSend(v6, "addInteraction:", v9);
  objc_msgSend(v6, "center");
  objc_msgSend(v9, "_presentMenuAtLocation:");

  return v6;
}

uint64_t sub_1001FEDFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 72));
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 112, 7);
}

id sub_1001FEE50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);
  (*(void (**)(_QWORD))(v0 + 64))(*(_QWORD *)(v0 + 96));
  return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
}

id sub_1001FEE88()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v6[5];
  uint64_t v7;

  v0 = swift_allocObject(&unk_1005D17D0, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  v1 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v6[4] = sub_1001FEFA8;
  v7 = v0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1001B1644;
  v6[3] = &unk_1005D17E8;
  v2 = _Block_copy(v6);
  v3 = v7;
  swift_retain_n(v0, 2);
  v4 = objc_msgSend(v1, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v2, swift_release(v3).n128_f64[0]);
  swift_release(v0);
  _Block_release(v2);
  swift_release(v0);
  return v4;
}

uint64_t sub_1001FEF84()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

Class sub_1001FEFA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FE920(a1, v1);
}

double sub_1001FEFB0(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_1001FE45C(a1, a2, v2);
}

_QWORD *sub_1001FEFB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[8];
  v4 = a1[9];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_retain();
  sub_10008BA00(v3, v4);
  return a1;
}

uint64_t sub_1001FF018()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[10]);
  if (v0[11])
    swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

void sub_1001FF064(uint64_t a1)
{
  uint64_t v1;

  sub_1001FE738(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

_QWORD *sub_1001FF070(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[8];
  v5 = a1[9];
  swift_release(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  sub_100087534(v4, v5);
  return a1;
}

uint64_t _s15DebugMenuActionVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  result = swift_release(a1[7]);
  if (a1[8])
    return swift_release(a1[9]);
  return result;
}

uint64_t _s15DebugMenuActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v8 = (_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v8;
  }
  return a1;
}

_QWORD *_s15DebugMenuActionVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  v8 = a2[7];
  v9 = a1[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[8];
  if (!a1[8])
  {
    if (v10)
    {
      v13 = a2[9];
      a1[8] = v10;
      a1[9] = v13;
      swift_retain(v13);
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v10)
  {
    swift_release(a1[9]);
    goto LABEL_7;
  }
  v11 = a2[9];
  v12 = a1[9];
  a1[8] = v10;
  a1[9] = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

__n128 _s8SettingsVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s15DebugMenuActionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  swift_release(v8);
  v10 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v10)
    {
      v13 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v10;
      *(_QWORD *)(a1 + 72) = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  swift_release(v12);
  return a1;
}

uint64_t _s15DebugMenuActionVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s15DebugMenuActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s15DebugMenuActionVMa()
{
  return &_s15DebugMenuActionVN;
}

void sub_1001FF41C()
{
  qword_1006729C0 = 0x4034000000000000;
}

void sub_1001FF42C()
{
  qword_1006729C8 = 0x4050800000000000;
}

void sub_1001FF440()
{
  qword_1006729D0 = 0x4055000000000000;
}

void sub_1001FF450()
{
  qword_1006729D8 = 0x4056800000000000;
}

void sub_1001FF464()
{
  qword_1006729E0 = 0x4060000000000000;
}

void sub_1001FF474()
{
  qword_1006729E8 = 0x4060E00000000000;
}

void sub_1001FF488()
{
  qword_1006729F0 = 0x4065400000000000;
}

void sub_1001FF49C()
{
  qword_1006729F8 = 0x406C400000000000;
}

void sub_1001FF4B0()
{
  qword_100672A00 = 0x4074000000000000;
}

Swift::Int sub_1001FF4C0()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1001FF508(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v2;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001FF54C(double a1, double a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_10006922C(&qword_100644960);
  result = swift_initStackObject(v4, &v11);
  *(_OWORD *)(result + 32) = xmmword_1004DD360;
  *(_OWORD *)(result + 16) = xmmword_1004DD350;
  *(_OWORD *)(result + 48) = xmmword_1004DD370;
  *(_OWORD *)(result + 64) = xmmword_1004DD380;
  *(_OWORD *)(result + 80) = xmmword_1004DD390;
  *(_OWORD *)(result + 96) = xmmword_1004DD3A0;
  *(_OWORD *)(result + 112) = xmmword_1004DD3B0;
  *(_OWORD *)(result + 128) = xmmword_1004DD3C0;
  if (fabs(a1 + -84.0) >= a2)
  {
    v6 = 0;
    v7 = 84.0;
    v8 = 6;
    v9 = 13;
    while (1)
    {
      if (v7 < a1)
        v6 = v8 + 1;
      else
        v9 = v8 - 1;
      if (v9 < v6)
      {
        swift_bridgeObjectRelease(result);
        return 0;
      }
      v10 = v6 + v9;
      if (__OFADD__(v6, v9))
        break;
      if ((unint64_t)(v10 - 28) < 0xFFFFFFFFFFFFFFE3)
        goto LABEL_14;
      v8 = ((unint64_t)(char)(v10 + ((v10 & 0x80) >> 7)) >> 1);
      v7 = *(double *)(result + 32 + 8 * v8);
      if (vabdd_f64(a1, v7) < a2)
      {
        swift_bridgeObjectRelease(result);
        return *(_QWORD *)&v7;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(result);
    return 0x4055000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCellIconWidth()
{
  return &type metadata for DOCItemCellIconWidth;
}

unint64_t sub_1001FF6A8()
{
  unint64_t result;

  result = qword_100647A10;
  if (!qword_100647A10)
  {
    result = swift_getWitnessTable(&unk_1004DD428, &type metadata for DOCItemCellIconWidth);
    atomic_store(result, (unint64_t *)&qword_100647A10);
  }
  return result;
}

void sub_1001FF6EC()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16[40];
  _BYTE v17[48];
  char v18[24];
  objc_super v19;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v19.receiver = v1;
  v19.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v19, "layoutAttributesForSupplementaryViewOfKind:atIndexPath:", v3, isa);

  if (!v5)
    return;
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout], v18, 0, 0);
  sub_1000423F8(v6, (uint64_t)v17, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v7 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v7, v16);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = v5;
  v15 = inited;
  specialized Array._endMutation()(inited);
  v9 = v5;
  sub_100066164(v15);
  v11 = v10;
  swift_bridgeObjectRelease(v15);
  if (!v11)
  {
LABEL_15:

    goto LABEL_16;
  }
  if ((unint64_t)v11 >> 62)
  {
    if (v11 >= 0)
      v13 = v11 & 0xFFFFFFFFFFFFFF8;
    else
      v13 = v11;
    swift_bridgeObjectRetain(v11);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v11);
    if (v14)
      goto LABEL_5;
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease(v11);
    goto LABEL_15;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_8:
    swift_bridgeObjectRelease(v11);

LABEL_16:
    sub_1000423BC((uint64_t)v17);
    return;
  }
  __break(1u);
}

id sub_1001FFB1C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  double v14;
  id v15;
  objc_super v17;
  void **aBlock;
  uint64_t v19;
  id (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  v9 = &v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  v10 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)v9 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v9 + 1) = v10;
  v11 = (uint64_t)&v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  LOBYTE(aBlock) = 0;
  v23 = 0;
  v20 = 0;
  v21 = 0;
  v19 = 0;
  swift_unknownObjectWeakInit(&v22);
  sub_1000423F8((uint64_t)&aBlock, v11, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v22 = a1;
  v23 = a2;
  aBlock = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100033024;
  v21 = &unk_1005D1A58;
  v12 = _Block_copy(&aBlock);
  v13 = v23;
  swift_retain();
  *(_QWORD *)&v14 = swift_release(v13).n128_u64[0];
  v17.receiver = v4;
  v17.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v17, "initWithSectionProvider:configuration:", v12, a3, v14);
  swift_release(a2);

  _Block_release(v12);
  return v15;
}

id sub_1001FFCC0(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  objc_super v9;
  char v10[8];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  v5 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)v4 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v4 + 1) = v5;
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  v10[0] = 0;
  v14[1] = 0;
  v12 = 0;
  v13 = 0;
  v11 = 0;
  swift_unknownObjectWeakInit(v14);
  sub_1000423F8((uint64_t)v10, v6, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

uint64_t assignWithCopy for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectWeakCopyAssign(a1 + 32, a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t initializeWithTake for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008EFF0(a1, a2, a3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
}

uint64_t assignWithTake for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectWeakTakeAssign(a1 + 32, a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 40) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)(a1 + 32) & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionCoreFooterAwareLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      *(_QWORD *)(result + 40) = 1;
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCoreFooterAwareLayout()
{
  return &type metadata for DOCItemCollectionCoreFooterAwareLayout;
}

BOOL sub_1001FFF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _QWORD v11[6];
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];
  double v16;
  double v17;
  _BYTE v18[16];
  double v19;
  double v20;

  sub_1000423F8(v1, (uint64_t)v18, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  sub_10020007C(a1, (uint64_t)v15);
  if (v17 == 0.0)
  {
    sub_10000CB4C((uint64_t)v15, &qword_100646B40);
    goto LABEL_9;
  }
  v3 = sub_10006922C(&qword_100647A70);
  if ((swift_dynamicCast(v12, v15, v3, &type metadata for DOCItemCollectionCoreFooterAwareLayout, 6) & 1) == 0)
  {
LABEL_9:
    memset(v12, 0, sizeof(v12));
    v13 = 0;
    v14 = 1;
LABEL_10:
    sub_1000423BC((uint64_t)v18);
    sub_10000CB4C((uint64_t)v12, &qword_100647A68);
    return 1;
  }
  if (!v13 && v14 == 1)
    goto LABEL_10;
  sub_1000423F8((uint64_t)v12, (uint64_t)v15, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v5 = v19;
  v4 = v20;
  v7 = v16;
  v6 = v17;
  sub_1000423F8((uint64_t)v18, (uint64_t)v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  sub_1000423F8((uint64_t)v15, (uint64_t)v11, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  if (v5 == v7 && v4 == v6)
  {
    v8 = *((double *)v12 + 1);
    sub_1000423BC((uint64_t)v12);
    v9 = *(double *)&v11[1];
    sub_1000423BC((uint64_t)v11);
    return v8 != v9;
  }
  sub_1000423BC((uint64_t)v11);
  sub_1000423BC((uint64_t)v12);
  return 1;
}

uint64_t sub_10020007C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10006922C(&qword_100646B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002000C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1002000F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  __asm { BR              X10 }
}

uint64_t sub_100200130()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_10020014C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  double v13;

  v7 = a2;
  if (objc_msgSend(v7, "status") == (id)1
    && (sub_1003DBE60(),
        v10 = v9,
        v11 = objc_msgSend(v7, "identifier"),
        v12 = sub_100028BE0((uint64_t)v11, v10),
        v11,
        *(_QWORD *)&v13 = swift_bridgeObjectRelease(v10).n128_u64[0],
        (v12 & 1) == 0)
    && objc_msgSend(v7, "status", v13))
  {
    objc_msgSend(v7, "status");
    sub_1000E4FD0(a2, a3, a4, 1);
  }
  else
  {
    sub_1000E4FD0(a2, a3, a4, 1);
  }
  return sub_100200130();
}

BOOL DOCDocumentSource.isEnabled.getter()
{
  void *v0;

  return ((unint64_t)objc_msgSend(v0, "status") & 0xFFFFFFFFFFFFFFFDLL) == 0;
}

id sub_100200284()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "identifier");
  v2 = objc_msgSend(v0, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v4 = v3;

  v5 = objc_allocWithZone((Class)DOCConcreteLocation);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend(v5, "initWithSourceIdentifier:title:", v1, v6);

  v8 = objc_opt_self(DOCPickerSource);
  objc_msgSend(v7, "setIsFPV2:", swift_dynamicCastObjCClass(v0, v8) == 0);
  v9 = objc_msgSend(v0, "promptText");
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v11 = v10;
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }
  objc_msgSend(v7, "setPromptText:", v9);

  return v7;
}

void sub_1002003C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100200400()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(v2, "displayName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

  sub_1000E4FD0(v2, v1, v0, 0);
  return v4;
}

void sub_100200624(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_10020066C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;

  v3 = v2;
  v4 = objc_msgSend(v3, "itemID");
  v5 = objc_msgSend(v4, "providerID");

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = 3092271;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  v11 = v6;
  v10 = v8;
  v12 = objc_msgSend(v3, "itemID", swift_bridgeObjectRelease(v8).n128_f64[0]);
  v13 = objc_msgSend(v12, "domainIdentifier");

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  swift_bridgeObjectRetain(v10);
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRetain(v10);
  v18._countAndFlagsBits = 3092271;
  v18._object = (void *)0xE300000000000000;
  String.append(_:)(v18);
  v19 = objc_msgSend(v3, "itemID", swift_bridgeObjectRelease(v10).n128_f64[0]);
  v20 = objc_msgSend(v19, "identifier");

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  swift_bridgeObjectRetain(v10);
  v24._countAndFlagsBits = v21;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v23);
  sub_1000E4FD0(v2, v1, v0, 0);
  return v11;
}

BOOL sub_100200B6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  _BOOL8 result;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  if (a5 == 3)
    return 1;
  if (a5 != 1)
    return a5 == 0;
  v10 = a2;
  v11 = objc_msgSend(v10, "identifier");
  v12 = DOCDocumentSourceIdentifierTrashedItems;
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  if (v13 == v16 && v15 == v17)
  {

    v30 = v15;
    goto LABEL_14;
  }
  v19 = v17;
  v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);

  swift_bridgeObjectRelease(v15);
  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
  if ((v20 & 1) != 0)
  {
LABEL_15:
    sub_1000E4FD0(a2, a3, a4, 1);
    return 0;
  }
  v22 = objc_msgSend(v10, "identifier", v21);
  v23 = DOCDocumentSourceIdentifierSharedItems;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v26 = v25;
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v29 = v27;
  if (v24 == v28 && v26 == v27)
  {

    v30 = v26;
LABEL_14:
    swift_bridgeObjectRelease_n(v30, 2);
    goto LABEL_15;
  }
  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v28, v27, 0);

  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v29);
  sub_1000E4FD0(a2, a3, a4, 1);
  result = 0;
  if ((v31 & 1) == 0)
  {
    sub_1002000F8(a1, (uint64_t)a2, a3, a4, 1);
    return v32 & 1;
  }
  return result;
}

uint64_t sub_100200D50(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  switch(a4)
  {
    case 0:
      v7 = (void *)objc_opt_self(FPItemManager);
      v8 = a1;
      v9 = objc_msgSend(v7, "defaultManager");
      v10 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v11 = swift_allocObject(v10, 40, 7);
      *(_OWORD *)(v11 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v11 + 32) = v8;
      v36 = v11;
      specialized Array._endMutation()(v11);
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v12 = v8;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v14 = objc_msgSend(v9, "eligibleActionsForItems:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

      type metadata accessor for FPAction(0);
      v16 = v15;
      v17 = sub_1002041DC();
      v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v14, v16, v17);

      v19 = FPActionRename;
      LOBYTE(isa) = sub_100028BE0((uint64_t)v19, v18);
      swift_bridgeObjectRelease(v18);
      sub_1000E4FD0(a1, a2, a3, 0);

      result = isa & 1;
      break;
    case 1:
      v21 = type metadata accessor for DOCFileProviderSource();
      result = swift_dynamicCastClass(a1, v21);
      if (result)
      {
        v22 = (*(uint64_t (**)(void *))((swift_isaMask & *(_QWORD *)result) + 0x128))(a1);
        sub_1000E4FD0(a1, a2, a3, 1);
        result = v22 & 1;
      }
      break;
    case 2:
      result = 1;
      break;
    case 3:
      v23 = (void *)objc_opt_self(FPItemManager);
      v24 = a1;
      v25 = objc_msgSend(v23, "defaultManager");
      v26 = sub_10006922C((uint64_t *)&unk_1006441A0);
      v27 = swift_allocObject(v26, 40, 7);
      *(_OWORD *)(v27 + 16) = xmmword_1004D9B40;
      *(_QWORD *)(v27 + 32) = v24;
      v37 = v27;
      specialized Array._endMutation()(v27);
      sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v28 = v24;
      v29 = Array._bridgeToObjectiveC()().super.isa;
      v30 = objc_msgSend(v25, "eligibleActionsForItems:", v29, swift_bridgeObjectRelease(v37).n128_f64[0]);

      type metadata accessor for FPAction(0);
      v32 = v31;
      v33 = sub_1002041DC();
      v34 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v32, v33);

      v35 = FPActionRename;
      LOBYTE(v29) = sub_100028BE0((uint64_t)v35, v34);

      swift_bridgeObjectRelease(v34);
      result = v29 & 1;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_1002010A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

id sub_1002010E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *inited;
  id v6;

  v3 = type metadata accessor for DOCSourceListInterface_Default();
  v4 = v2;
  inited = (void *)swift_initStaticObject(v3, &unk_100641248);
  v6 = objc_msgSend(inited, "iconForSource:", v4);
  objc_msgSend(inited, "iconForSourceRequireHierarchicalColors:", v4);
  sub_1000E4FD0(v2, v1, v0, 1);
  return v6;
}

void sub_100201260(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

id sub_1002012A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v3 = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
  v4 = v0;
  v5 = (void *)DOCNode.sourceIdentifier.getter(v3);
  v6 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v5, v4);

  objc_msgSend(v6, "setIsFPV2:", 1);
  sub_1000E4FD0(v0, v2, v1, 0);
  return v6;
}

id sub_100201504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  if (v1 | v2 | v0)
    v3 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "sharedItemsLocation");
  else
    v3 = objc_msgSend((id)objc_opt_self(DOCConcreteLocation), "recentDocumentsLocation");
  return v3;
}

void sub_10020157C(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  unsigned __int8 v11;
  void **v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  __n128 v22;
  char v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  unsigned int v29;
  void **v30;
  id v31;
  id v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  id v37;
  char v38;
  _BOOL8 v39;
  uint64_t v40;
  _QWORD *v41;
  void **aBlock;
  uint64_t v43;
  void (*v44)(uint64_t, void *);
  void *v45;
  void (*v46)(uint64_t);
  _QWORD *v47;

  v4 = objc_opt_self(DOCPickerSource);
  v5 = swift_dynamicCastObjCClass(a2, v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a2;
    v8 = objc_msgSend(v6, "pickerExtension");
    v9 = objc_msgSend(v6, "providerDomain");
    v10 = objc_msgSend(v6, "isExtensionOptedIn");
    if ((a1 & 1) != 0)
    {
      objc_msgSend(v6, "setIsExtensionOptedIn:", 0);
      aBlock = 0;
      v11 = objc_msgSend(v8, "attemptOptOut:", &aBlock);
      v12 = aBlock;
      if ((v11 & 1) == 0)
      {
LABEL_4:
        v13 = v12;
        v14 = _convertNSErrorToError(_:)(v12);

        swift_willThrow(v15);
        objc_msgSend(v6, "setIsExtensionOptedIn:", v10);

        swift_errorRelease(v14);
        return;
      }
    }
    else
    {
      objc_msgSend(v6, "setIsExtensionOptedIn:", 1);
      aBlock = 0;
      v29 = objc_msgSend(v8, "attemptOptIn:", &aBlock);
      v12 = aBlock;
      if (!v29)
        goto LABEL_4;
    }
    v30 = v12;
    if (v9)
    {
      v31 = v9;
      v32 = objc_msgSend(v6, "isExtensionOptedIn");
      v33 = (_QWORD *)swift_allocObject(&unk_1005D1F30, 48, 7);
      v33[2] = v31;
      v33[3] = DOCSplitBrowserViewController.didCommitPreview(of:);
      v33[4] = 0;
      v33[5] = v8;
      v46 = sub_100204224;
      v47 = v33;
      aBlock = _NSConcreteStackBlock;
      v43 = 1107296256;
      v44 = sub_10015936C;
      v45 = &unk_1005D1F48;
      v34 = _Block_copy(&aBlock);
      v35 = v47;
      v36 = v31;
      v37 = v8;
      objc_msgSend(v36, "setEnabled:completionHandler:", v32, v34, swift_release(v35).n128_f64[0]);

      _Block_release(v34);
    }
    else
    {
      objc_msgSend(v8, "optedIn");

    }
  }
  else
  {
    v16 = type metadata accessor for DOCFileProviderSource();
    v17 = swift_dynamicCastClass(a2, v16);
    if (v17)
    {
      v18 = v17;
      v19 = *(void **)(v17 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v19)
      {
        v20 = a2;
        v21 = v19;
        if ((FPProviderDomain.shouldUseDSEnumeration.getter(v22) & 1) != 0
          && objc_msgSend(v21, "isiCloudDriveProvider"))
        {
          v23 = *(_BYTE *)(v18 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
          *(_BYTE *)(v18 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (a1 & 1) == 0;
          v24 = swift_allocObject(&unk_1005D1EE0, 56, 7);
          *(_QWORD *)(v24 + 16) = v21;
          *(_QWORD *)(v24 + 24) = v18;
          *(_BYTE *)(v24 + 32) = v23;
          *(_QWORD *)(v24 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
          *(_QWORD *)(v24 + 48) = 0;
          v46 = sub_100203F40;
          v47 = (_QWORD *)v24;
          aBlock = _NSConcreteStackBlock;
          v43 = 1107296256;
          v44 = sub_10015936C;
          v45 = &unk_1005D1EF8;
          v25 = _Block_copy(&aBlock);
          v26 = v47;
          v27 = v20;
          v28 = v21;
          objc_msgSend(v28, "setHiddenByUser:completionHandler:", a1 & 1, v25, swift_release(v26).n128_f64[0]);
        }
        else
        {
          v38 = *(_BYTE *)(v18 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
          v39 = (a1 & 1) == 0;
          *(_BYTE *)(v18 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v39;
          v40 = swift_allocObject(&unk_1005D1E90, 56, 7);
          *(_QWORD *)(v40 + 16) = v21;
          *(_QWORD *)(v40 + 24) = v18;
          *(_BYTE *)(v40 + 32) = v38;
          *(_QWORD *)(v40 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
          *(_QWORD *)(v40 + 48) = 0;
          v46 = sub_100203F20;
          v47 = (_QWORD *)v40;
          aBlock = _NSConcreteStackBlock;
          v43 = 1107296256;
          v44 = sub_10015936C;
          v45 = &unk_1005D1EA8;
          v25 = _Block_copy(&aBlock);
          v41 = v47;
          v27 = v20;
          v28 = v21;
          objc_msgSend(v28, "setEnabled:completionHandler:", v39, v25, swift_release(v41).n128_f64[0]);
        }

        _Block_release(v25);
      }
    }
  }
}

Swift::Int sub_1002019DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  Hasher.init(_seed:)(v9, 0);
  sub_100200624(v1, v2, v3, v4);
  v6 = v5;
  String.hash(into:)(v9, v7, v5);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

double sub_100201A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  sub_100200624(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  v4 = v3;
  String.hash(into:)(a1, v5, v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

Swift::Int sub_100201AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  Hasher.init(_seed:)(v10, a1);
  sub_100200624(v2, v3, v4, v5);
  v7 = v6;
  String.hash(into:)(v10, v8, v6);
  swift_bridgeObjectRelease(v7);
  return Hasher._finalize()();
}

unint64_t sub_100201B18()
{
  uint64_t v0;
  Swift::String v1;
  void *object;

  sub_1002003C4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  return 0xD000000000000011;
}

uint64_t sub_100201B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v2 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_100200624(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v7 = v6;
  v9 = v8;
  sub_100200624(v2, v3, v4, v5);
  if (v7 == v10 && v9 == v11)
  {
    v14 = 1;
    v13 = v9;
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  return v14 & 1;
}

void sub_100201C30(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v6 = swift_allocObject(&unk_1005D1F80, 33, 7);
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  *(_BYTE *)(v6 + 32) = a1;
  v9[4] = sub_100204158;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004A82C;
  v9[3] = &unk_1005D1F98;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain();
  swift_release(v8);
  DOCRunInMainThread(v7);
  _Block_release(v7);
}

void sub_100201CE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  id v14;
  _QWORD v15[5];
  _QWORD *v16;

  v10 = (_QWORD *)swift_allocObject(&unk_1005D1C88, 56, 7);
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = a5;
  v15[4] = sub_100203FA8;
  v16 = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10004A82C;
  v15[3] = &unk_1005D1CA0;
  v11 = _Block_copy(v15);
  v12 = v16;
  swift_errorRetain(a1);
  v13 = a2;
  swift_retain();
  v14 = a5;
  swift_release(v12);
  DOCRunInMainThread(v11);
  _Block_release(v11);
}

uint64_t sub_100201DC4(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = swift_errorRetain(a1);
    v14 = Logger.DocumentManager.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
    swift_errorRetain(a1);
    v15 = a2;
    swift_errorRetain(a1);
    v16 = v15;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc(22, -1);
      v37 = v10;
      v21 = v20;
      v34 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v21 = 138412546;
      v39 = a3;
      v40 = (uint64_t)v16;
      v36 = v17;
      v38 = v9;
      v22 = v16;
      v35 = v19;
      v23 = a5;
      v24 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      v25 = v34;
      *v34 = v16;

      a5 = v23;
      *(_WORD *)(v21 + 12) = 2112;
      swift_errorRetain(a1);
      v26 = _swift_stdlib_bridgeErrorToNSError(a1);
      v40 = v26;
      v9 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      v25[1] = v26;
      a3 = v39;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      v27 = v36;
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v35, "Failed to enable the corresponding provider domain: %@ error: %@", (uint8_t *)v21, 0x16u);
      v28 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v25, 2, v28);
      swift_slowDealloc(v25, -1, -1);
      v29 = v21;
      v10 = v37;
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v30 = objc_msgSend(a5, "optedIn") ^ 1;
  if (a1)
    v31 = 1;
  else
    v31 = v30;
  return a3(v31);
}

uint64_t sub_100202064(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t (*a5)(BOOL))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  os_log_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  _QWORD v43[3];
  char v44[8];
  uint64_t v45;
  uint64_t v46;

  v42 = a4;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = swift_errorRetain(a1);
    v14 = Logger.DocumentManager.unsafeMutableAddressor(v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
    swift_errorRetain(a1);
    v15 = a2;
    swift_errorRetain(a1);
    v16 = v15;
    v41 = v12;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc(22, -1);
      v40 = v10;
      v21 = v20;
      v34 = (_QWORD *)swift_slowAlloc(8, -1);
      v38 = swift_slowAlloc(32, -1);
      v45 = (uint64_t)v16;
      v46 = v38;
      *(_DWORD *)v21 = 138412546;
      v37 = v19;
      v36 = v17;
      v35 = &v46;
      v22 = v16;
      v39 = v9;
      v23 = a3;
      v24 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      v25 = v34;
      *v34 = v16;

      a3 = v23;
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue(a1, v44, v43);
      v26 = Error.localizedDescription.getter(v43[1], v43[2]);
      v28 = v27;
      v45 = sub_1000544FC(v26, v27, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v35);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      v29 = v36;
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v37, "Failed to set the provider: %@ hiddenByUserFlag Error: %s", (uint8_t *)v21, 0x16u);
      v30 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v25, 1, v30);
      swift_slowDealloc(v25, -1, -1);
      v31 = v38;
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_errorRelease(a1);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
    }
    *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v42;
  }
  return a5(a1 != 0);
}

void sub_10020236C(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD v21[5];
  uint64_t v22;

  v16 = swift_allocObject(a7, 64, 7);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_BYTE *)(v16 + 40) = a4;
  *(_QWORD *)(v16 + 48) = a5;
  *(_QWORD *)(v16 + 56) = a6;
  v21[4] = a8;
  v22 = v16;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_10004A82C;
  v21[3] = a9;
  v17 = _Block_copy(v21);
  v18 = v22;
  swift_errorRetain(a1);
  v19 = a2;
  v20 = a3;
  swift_retain();
  swift_release(v18);
  DOCRunInMainThread(v17);
  _Block_release(v17);
}

uint64_t sub_10020244C(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a4;
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = swift_errorRetain(a1);
    v16 = Logger.DocumentManager.unsafeMutableAddressor(v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
    swift_errorRetain(a1);
    v17 = a2;
    swift_errorRetain(a1);
    v18 = v17;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v38 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v34 = v11;
      v22 = v21;
      v23 = swift_slowAlloc(16, -1);
      v32 = v14;
      v24 = (_QWORD *)v23;
      *(_DWORD *)v22 = 138412546;
      v36 = a6;
      v37 = a5;
      v40 = (uint64_t)v18;
      v35 = a3;
      v25 = v18;
      v33 = v19;
      v26 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      *v24 = v18;

      *(_WORD *)(v22 + 12) = 2112;
      swift_errorRetain(a1);
      v27 = _swift_stdlib_bridgeErrorToNSError(a1);
      v40 = v27;
      a3 = v35;
      a5 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      v14 = v32;
      v24[1] = v27;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      v28 = v33;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v38, "Failed to set the provider %@ error: %@", (uint8_t *)v22, 0x16u);
      v29 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v24, 2, v29);
      swift_slowDealloc(v24, -1, -1);
      v30 = v22;
      v11 = v34;
      swift_slowDealloc(v30, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_BYTE *)(a3 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v39;
  }
  return a5(a1 != 0);
}

void sub_1002026EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  void *object;
  uint64_t v35;
  NSString v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  void *v46;
  _QWORD *v47;
  id v48;
  NSString v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  Class isa;
  _QWORD **v58;
  _QWORD *v59;
  void (*v60)(void *, _QWORD, uint64_t, _QWORD, _QWORD);
  _QWORD *v61;
  id v62;
  void **aBlock;
  uint64_t v64;
  void (*v65)(uint64_t, void *);
  void *v66;
  void *v67;
  _QWORD *v68;
  _BYTE v69[24];
  Swift::String v70;
  Swift::String v71;

  v10 = a3 + 16;
  swift_beginAccess(a3 + 16, v69, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v52 = a2;
      else
        v52 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v13 = _CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease(a2);
      if (v13 >= 1)
      {
LABEL_4:
        v62 = a6;
        v14._countAndFlagsBits = 0xD000000000000020;
        v15._object = (void *)0x80000001005193A0;
        v14._object = (void *)0x80000001005193E0;
        v15._countAndFlagsBits = 0x100000000000003BLL;
        v16 = DOCLocalizedDictionaryString(_:comment:)(v15, v14);
        v17 = sub_10006922C((uint64_t *)&unk_100644560);
        v18 = swift_allocObject(v17, 112, 7);
        *(_OWORD *)(v18 + 16) = xmmword_1004D4CE0;
        v19 = objc_msgSend(v12, "displayName");
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

        *(_QWORD *)(v18 + 56) = &type metadata for String;
        v23 = sub_10006A638();
        *(_QWORD *)(v18 + 32) = v20;
        *(_QWORD *)(v18 + 40) = v22;
        *(_QWORD *)(v18 + 96) = &type metadata for Int;
        *(_QWORD *)(v18 + 104) = &protocol witness table for Int;
        *(_QWORD *)(v18 + 64) = v23;
        *(_QWORD *)(v18 + 72) = v13;
        static String.localizedStringWithFormat(_:_:)(v16._countAndFlagsBits, v16._object, v18);
        v25 = v24;
        swift_bridgeObjectRelease(v16._object);
        swift_bridgeObjectRelease(v18);
        v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v25);
        v27 = objc_msgSend((id)objc_opt_self(DOCAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v26, 1);

        v29 = (id)_DocumentManagerBundle(v28);
        if (v29)
        {
          v30 = v29;
          v70._object = (void *)0x8000000100519410;
          v31._countAndFlagsBits = 0x6C65636E6143;
          v31._object = (void *)0xE600000000000000;
          v32.value._countAndFlagsBits = 0x617A696C61636F4CLL;
          v32.value._object = (void *)0xEB00000000656C62;
          v33._countAndFlagsBits = 0;
          v33._object = (void *)0xE000000000000000;
          v70._countAndFlagsBits = 0xD00000000000001BLL;
          object = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v70)._object;

          v35 = swift_allocObject(&unk_1005D1FD0, 32, 7);
          *(_QWORD *)(v35 + 16) = a4;
          *(_QWORD *)(v35 + 24) = a5;
          swift_retain();
          v36 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          v67 = sub_1001D098C;
          v68 = (_QWORD *)v35;
          aBlock = _NSConcreteStackBlock;
          v64 = 1107296256;
          v65 = sub_1000602CC;
          v66 = &unk_1005D1FE8;
          v37 = _Block_copy(&aBlock);
          swift_release(v68);
          v38 = (void *)objc_opt_self(UIAlertAction);
          v39 = objc_msgSend(v38, "actionWithTitle:style:handler:", v36, 1, v37);
          _Block_release(v37);

          objc_msgSend(v27, "addAction:", v39);
          v41 = (id)_DocumentManagerBundle(v40);
          if (v41)
          {
            v42 = v41;
            v71._countAndFlagsBits = 0xD000000000000025;
            v71._object = (void *)0x8000000100519430;
            v43._countAndFlagsBits = 0x54206574656C6544;
            v43._object = (void *)0xEA00000000006761;
            v44.value._countAndFlagsBits = 0x617A696C61636F4CLL;
            v44.value._object = (void *)0xEB00000000656C62;
            v45._countAndFlagsBits = 0;
            v45._object = (void *)0xE000000000000000;
            v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v71)._object;

            v47 = (_QWORD *)swift_allocObject(&unk_1005D2020, 40, 7);
            v47[2] = v12;
            v47[3] = a4;
            v47[4] = a5;
            swift_retain();
            v48 = v12;
            v49 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v46);
            v67 = sub_1002041D0;
            v68 = v47;
            aBlock = _NSConcreteStackBlock;
            v64 = 1107296256;
            v65 = sub_1000602CC;
            v66 = &unk_1005D2038;
            v50 = _Block_copy(&aBlock);
            swift_release(v68);
            v51 = objc_msgSend(v38, "actionWithTitle:style:handler:", v49, 2, v50);
            _Block_release(v50);

            objc_msgSend(v27, "addAction:", v51);
            objc_msgSend(v62, "presentViewController:animated:completion:", v27, 1, 0);

LABEL_12:
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
    }
    else
    {
      v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= 1)
        goto LABEL_4;
    }
    v53 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
    v54 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v55 = swift_allocObject(v54, 40, 7);
    *(_OWORD *)(v55 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v55 + 32) = v12;
    aBlock = (void **)v55;
    specialized Array._endMutation()(v55);
    sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
    v56 = v12;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v53, "removeTags:", isa, swift_bridgeObjectRelease(aBlock).n128_f64[0]);

    v58 = (_QWORD **)DOCTagManager.shared.unsafeMutableAddressor();
    v59 = *v58;
    v60 = *(void (**)(void *, _QWORD, uint64_t, _QWORD, _QWORD))((swift_isaMask & **v58) + 0x60);
    v27 = v56;
    v61 = v59;
    v60(v12, 0, 1, 0, 0);

    a4(1);
    goto LABEL_12;
  }
}

uint64_t sub_100202CD8(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id *v10;
  void (*v11)(id, _QWORD, uint64_t, _QWORD, _QWORD);
  id v12;
  uint64_t v14;

  v5 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
  v6 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v7 + 32) = a2;
  v14 = v7;
  specialized Array._endMutation()(v7);
  sub_10004F2F0(0, (unint64_t *)&unk_1006565A0, DOCTag_ptr);
  v8 = a2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "removeTags:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v10 = (id *)DOCTagManager.shared.unsafeMutableAddressor();
  v11 = *(void (**)(id, _QWORD, uint64_t, _QWORD, _QWORD))((swift_isaMask & *(_QWORD *)*v10) + 0x60);
  v12 = *v10;
  v11(v8, 0, 1, 0, 0);

  return a3(1);
}

void sub_100202E18()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  byte_100647AF0 = v2;
}

void destroy for DOCSidebarItem(uint64_t a1)
{
  sub_1000E4FD0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1000E4F7C(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1000E4F7C(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1000E4FD0(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000E4FD0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_100203070(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 4u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_100203088(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 5;
  if (a2 >= 5)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

unint64_t sub_1002030A8()
{
  unint64_t result;

  result = qword_100647AF8;
  if (!qword_100647AF8)
  {
    result = swift_getWitnessTable(&unk_1004DD538, &type metadata for DOCSidebarItem);
    atomic_store(result, (unint64_t *)&qword_100647AF8);
  }
  return result;
}

void sub_1002030EC(char a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  unsigned __int8 v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __n128 v39;
  char v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  id v44;
  id v45;
  unsigned int v46;
  void **v47;
  id v48;
  id v49;
  _QWORD *v50;
  void *v51;
  _QWORD *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  unsigned int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  char v62;
  _BOOL8 v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  id v67;
  id v68;
  id v69;
  char *v70;
  id v71;
  id v72;
  id v73;
  char v74;
  void **aBlock;
  uint64_t v76;
  void (*v77)(uint64_t, void *);
  void *v78;
  void (*v79)(uint64_t);
  _QWORD *v80;

  v16 = swift_allocObject(&unk_1005D1D78, 57, 7);
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  *(_QWORD *)(v16 + 32) = a5;
  *(_QWORD *)(v16 + 40) = a6;
  *(_QWORD *)(v16 + 48) = a7;
  *(_BYTE *)(v16 + 56) = a8;
  v17 = objc_opt_self(DOCPickerSource);
  v18 = swift_dynamicCastObjCClass(a2, v17);
  if (!v18)
  {
    v74 = a1;
    v31 = type metadata accessor for DOCFileProviderSource();
    v32 = swift_dynamicCastClass(a2, v31);
    if (!v32
      || (v33 = v32, (v34 = *(void **)(v32 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0))
    {
      v55 = a3;
      v56 = a4;
      sub_1000E4F7C(a5, a6, a7, a8);
      swift_release(v16);
      return;
    }
    v35 = a3;
    v36 = a4;
    sub_1000E4F7C(a5, a6, a7, a8);
    v37 = a2;
    v38 = v34;
    if ((FPProviderDomain.shouldUseDSEnumeration.getter(v39) & 1) != 0
      && objc_msgSend(v38, "isiCloudDriveProvider"))
    {
      v40 = *(_BYTE *)(v33 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
      *(_BYTE *)(v33 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v74 & 1) == 0;
      v41 = swift_allocObject(&unk_1005D1DF0, 56, 7);
      *(_QWORD *)(v41 + 16) = v38;
      *(_QWORD *)(v41 + 24) = v33;
      *(_BYTE *)(v41 + 32) = v40;
      *(_QWORD *)(v41 + 40) = sub_100204068;
      *(_QWORD *)(v41 + 48) = v16;
      v79 = sub_100203F40;
      v80 = (_QWORD *)v41;
      aBlock = _NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_10015936C;
      v78 = &unk_1005D1E08;
      v42 = _Block_copy(&aBlock);
      v43 = v80;
      v44 = v37;
      swift_retain();
      v45 = v38;
      swift_release(v43);
      objc_msgSend(v45, "setHiddenByUser:completionHandler:", v74 & 1, v42);

      _Block_release(v42);
    }
    else
    {
      v62 = *(_BYTE *)(v33 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
      v63 = (v74 & 1) == 0;
      *(_BYTE *)(v33 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v63;
      v64 = swift_allocObject(&unk_1005D1DA0, 56, 7);
      *(_QWORD *)(v64 + 16) = v38;
      *(_QWORD *)(v64 + 24) = v33;
      *(_BYTE *)(v64 + 32) = v62;
      *(_QWORD *)(v64 + 40) = sub_100204068;
      *(_QWORD *)(v64 + 48) = v16;
      v79 = sub_100203F20;
      v80 = (_QWORD *)v64;
      aBlock = _NSConcreteStackBlock;
      v76 = 1107296256;
      v77 = sub_10015936C;
      v78 = &unk_1005D1DB8;
      v65 = _Block_copy(&aBlock);
      v66 = v80;
      v67 = v37;
      swift_retain();
      v68 = v38;
      swift_release(v66);
      objc_msgSend(v68, "setEnabled:completionHandler:", v63, v65);

      _Block_release(v65);
    }
    goto LABEL_22;
  }
  v19 = (void *)v18;
  v70 = a3;
  v69 = a4;
  sub_1000E4F7C(a5, a6, a7, a8);
  v71 = a2;
  v20 = objc_msgSend(v19, "pickerExtension");
  v72 = objc_msgSend(v19, "providerDomain");
  v21 = objc_msgSend(v19, "isExtensionOptedIn");
  v73 = v20;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v19, "setIsExtensionOptedIn:", 0);
    aBlock = 0;
    v22 = objc_msgSend(v20, "attemptOptOut:", &aBlock);
    v23 = aBlock;
    if ((v22 & 1) == 0)
    {
LABEL_4:
      v24 = v23;
      v25 = _convertNSErrorToError(_:)(v23);

      swift_willThrow(v26);
      objc_msgSend(v19, "setIsExtensionOptedIn:", v21);
      sub_1003DBB08(v69);
      Strong = swift_unknownObjectWeakLoadStrong(&v70[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
      if (Strong)
      {
        v28 = (void *)Strong;
        sub_100201260((uint64_t)a5, a6, a7, a8);
        v30 = v29;
        objc_msgSend(v28, "sidebarViewController:didSelect:", v70, v29);

        swift_unknownObjectRelease(v28);
      }
      else
      {

      }
      swift_errorRelease(v25);
      goto LABEL_22;
    }
  }
  else
  {
    objc_msgSend(v19, "setIsExtensionOptedIn:", 1);
    aBlock = 0;
    v46 = objc_msgSend(v20, "attemptOptIn:", &aBlock);
    v23 = aBlock;
    if (!v46)
      goto LABEL_4;
  }
  v47 = v23;
  if (v72)
  {
    v48 = v72;
    v49 = objc_msgSend(v19, "isExtensionOptedIn");
    v50 = (_QWORD *)swift_allocObject(&unk_1005D1E40, 48, 7);
    v50[2] = v48;
    v50[3] = sub_100204068;
    v50[4] = v16;
    v50[5] = v73;
    v79 = sub_100204224;
    v80 = v50;
    aBlock = _NSConcreteStackBlock;
    v76 = 1107296256;
    v77 = sub_10015936C;
    v78 = &unk_1005D1E58;
    v51 = _Block_copy(&aBlock);
    v52 = v80;
    v53 = v48;
    swift_retain();
    v54 = v73;
    swift_release(v52);
    objc_msgSend(v53, "setEnabled:completionHandler:", v49, v51);

    _Block_release(v51);
    swift_release(v16);

    return;
  }
  v57 = objc_msgSend(v73, "optedIn");
  sub_1003DBB08(v69);
  if (v57)
  {
    v58 = swift_unknownObjectWeakLoadStrong(&v70[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate]);
    if (v58)
    {
      v59 = (void *)v58;
      sub_100201260((uint64_t)a5, a6, a7, a8);
      v61 = v60;
      objc_msgSend(v59, "sidebarViewController:didSelect:", v70, v60);
      swift_release(v16);

      swift_unknownObjectRelease(v59);
      return;
    }
  }

LABEL_22:
  swift_release(v16);
}

void sub_1002037B8(char a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  unsigned __int8 v22;
  void **v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  __n128 v41;
  char v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  id v46;
  id v47;
  unsigned int v48;
  void **v49;
  id v50;
  id v51;
  _QWORD *v52;
  void *v53;
  _QWORD *v54;
  id v55;
  char *v56;
  id v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  id v72;
  char *v73;
  id v74;
  char v75;
  void **aBlock;
  uint64_t v77;
  void (*v78)(uint64_t, void *);
  void *v79;
  void (*v80)(uint64_t);
  _QWORD *v81;

  v16 = swift_allocObject(&unk_1005D1B70, 64, 7);
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  *(_QWORD *)(v16 + 32) = a5;
  *(_QWORD *)(v16 + 40) = a6;
  *(_BYTE *)(v16 + 48) = a7;
  *(_QWORD *)(v16 + 56) = a8;
  v17 = objc_opt_self(DOCPickerSource);
  v18 = swift_dynamicCastObjCClass(a2, v17);
  if (v18)
  {
    v19 = (void *)v18;
    swift_retain();
    sub_1000E4F7C(a4, a5, a6, a7);
    a8;
    v72 = a2;
    v20 = (char *)objc_msgSend(v19, "pickerExtension");
    v74 = objc_msgSend(v19, "providerDomain");
    v21 = objc_msgSend(v19, "isExtensionOptedIn");
    v73 = v20;
    if ((a1 & 1) != 0)
    {
      objc_msgSend(v19, "setIsExtensionOptedIn:", 0);
      aBlock = 0;
      v22 = objc_msgSend(v20, "attemptOptOut:", &aBlock);
      v23 = aBlock;
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v24 = v23;
        v25 = _convertNSErrorToError(_:)(v23);

        v26 = v25;
        swift_willThrow(v27);
        objc_msgSend(v19, "setIsExtensionOptedIn:", v21);
        v28 = a3 + 16;
        swift_beginAccess(v28, &aBlock, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v28, v29);
        if (Strong)
        {
          v31 = (void *)Strong;
          if (a7 == 1)
          {
            v32 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController);
            sub_1000E4F7C(a4, a5, a6, 1);
            swift_retain();
            sub_1003DBB08(a4);
            swift_release(v32);
            sub_1000E4FD0(a4, a5, a6, 1);
          }

          v33 = v74;
        }
        else
        {
          v33 = v73;
          v31 = v74;
        }

        swift_errorRelease(v26);
        goto LABEL_29;
      }
    }
    else
    {
      objc_msgSend(v19, "setIsExtensionOptedIn:", 1);
      aBlock = 0;
      v48 = objc_msgSend(v20, "attemptOptIn:", &aBlock);
      v23 = aBlock;
      if (!v48)
        goto LABEL_4;
    }
    v49 = v23;
    if (v74)
    {
      v50 = v74;
      v51 = objc_msgSend(v19, "isExtensionOptedIn");
      v52 = (_QWORD *)swift_allocObject(&unk_1005D1C38, 48, 7);
      v52[2] = v50;
      v52[3] = sub_100203F08;
      v52[4] = v16;
      v52[5] = v20;
      v80 = sub_100203F60;
      v81 = v52;
      aBlock = _NSConcreteStackBlock;
      v77 = 1107296256;
      v78 = sub_10015936C;
      v79 = &unk_1005D1C50;
      v53 = _Block_copy(&aBlock);
      v54 = v81;
      v55 = v50;
      swift_retain();
      v56 = v73;
      swift_release(v54);
      objc_msgSend(v55, "setEnabled:completionHandler:", v51, v53);

      _Block_release(v53);
      swift_release(v16);

      return;
    }
    v58 = objc_msgSend(v20, "optedIn");
    v59 = a3 + 16;
    swift_beginAccess(v59, &aBlock, 0, 0);
    v61 = swift_unknownObjectWeakLoadStrong(v59, v60);
    if (v61)
    {
      v62 = (char *)v61;
      if (a7 == 1)
      {
        v63 = *(_QWORD *)(v61 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController);
        sub_1000E4F7C(a4, a5, a6, 1);
        swift_retain();
        sub_1003DBB08(a4);
        swift_release(v63);
        sub_1000E4FD0(a4, a5, a6, 1);
      }
      if ((v58 & 1) == 0)
      {
        v64 = *(_QWORD *)&v62[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController];
        swift_retain();
        sub_1002000F8(v65, (uint64_t)a4, a5, a6, a7);
        v67 = v66;
        swift_release(v64);
        sub_100392FB8(v67);
      }

      v68 = v73;
    }
    else
    {
      v62 = v73;
      v68 = v72;
    }

    goto LABEL_29;
  }
  v34 = type metadata accessor for DOCFileProviderSource();
  v35 = swift_dynamicCastClass(a2, v34);
  if (!v35
    || (v36 = v35,
        v75 = a1,
        (v37 = *(void **)(v35 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0))
  {
    swift_retain();
    sub_1000E4F7C(a4, a5, a6, a7);
    v57 = a8;
    swift_release(v16);
    return;
  }
  swift_retain();
  sub_1000E4F7C(a4, a5, a6, a7);
  v38 = a8;
  v39 = a2;
  v40 = v37;
  if ((FPProviderDomain.shouldUseDSEnumeration.getter(v41) & 1) != 0
    && objc_msgSend(v40, "isiCloudDriveProvider"))
  {
    v42 = *(_BYTE *)(v36 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
    *(_BYTE *)(v36 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v75 & 1) == 0;
    v43 = swift_allocObject(&unk_1005D1BE8, 56, 7);
    *(_QWORD *)(v43 + 16) = v40;
    *(_QWORD *)(v43 + 24) = v36;
    *(_BYTE *)(v43 + 32) = v42;
    *(_QWORD *)(v43 + 40) = sub_100203F08;
    *(_QWORD *)(v43 + 48) = v16;
    v80 = sub_100203F40;
    v81 = (_QWORD *)v43;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_10015936C;
    v79 = &unk_1005D1C00;
    v44 = _Block_copy(&aBlock);
    v45 = v81;
    v46 = v39;
    swift_retain();
    v47 = v40;
    swift_release(v45);
    objc_msgSend(v47, "setHiddenByUser:completionHandler:", v75 & 1, v44);
  }
  else
  {
    v69 = *(_BYTE *)(v36 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
    *(_BYTE *)(v36 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v75 & 1) == 0;
    v70 = swift_allocObject(&unk_1005D1B98, 56, 7);
    *(_QWORD *)(v70 + 16) = v40;
    *(_QWORD *)(v70 + 24) = v36;
    *(_BYTE *)(v70 + 32) = v69;
    *(_QWORD *)(v70 + 40) = sub_100203F08;
    *(_QWORD *)(v70 + 48) = v16;
    v80 = sub_100203F20;
    v81 = (_QWORD *)v70;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_10015936C;
    v79 = &unk_1005D1BB0;
    v44 = _Block_copy(&aBlock);
    v71 = v81;
    v46 = v39;
    swift_retain();
    v47 = v40;
    swift_release(v71);
    objc_msgSend(v47, "setEnabled:completionHandler:", (v75 & 1) == 0, v44);
  }

  _Block_release(v44);
LABEL_29:
  swift_release(v16);
}

uint64_t sub_100203ECC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_1000E4FD0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

void sub_100203F08(char a1)
{
  uint64_t v1;

  sub_10023B3E4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_100203F20(uint64_t a1)
{
  sub_1002040C4(a1, (uint64_t)&unk_1005D1D28, (uint64_t)sub_100204008, (uint64_t)&unk_1005D1D40);
}

void sub_100203F40(uint64_t a1)
{
  sub_1002040C4(a1, (uint64_t)&unk_1005D1CD8, (uint64_t)sub_100203FBC, (uint64_t)&unk_1005D1CF0);
}

void sub_100203F60(uint64_t a1)
{
  uint64_t v1;

  sub_100201CE8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100203F6C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100203FA8()
{
  uint64_t v0;

  return sub_100201DC4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100203FBC()
{
  return sub_100204014((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100202064);
}

uint64_t sub_100203FCC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100204008()
{
  return sub_100204014((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10020244C);
}

uint64_t sub_100204014(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10020402C()
{
  uint64_t v0;

  sub_1000E4FD0(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject(v0, 57, 7);
}

double sub_100204068(char a1)
{
  uint64_t v1;

  return sub_10023A91C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
}

uint64_t sub_100204090()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1002040C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_10020236C(a1, *(void **)(v4 + 16), *(void **)(v4 + 24), *(_BYTE *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a2, a3, a4);
}

uint64_t sub_100204100()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100204134()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100204158()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100204180()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002041A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002041D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100202CD8(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

unint64_t sub_1002041DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006418B0;
  if (!qword_1006418B0)
  {
    type metadata accessor for FPAction(255);
    result = swift_getWitnessTable(&unk_1004D69D0, v1);
    atomic_store(result, (unint64_t *)&qword_1006418B0);
  }
  return result;
}

uint64_t sub_100204288(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _BYTE v20[40];
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v8 = 0;
  v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_22;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v6)
      goto LABEL_30;
    v13 = *(_QWORD *)(v27 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_30;
      v13 = *(_QWORD *)(v27 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_30;
        v13 = *(_QWORD *)(v27 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_30;
          v13 = *(_QWORD *)(v27 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_21:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_22:
    sub_10006777C(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v25);
    v23[0] = v25[0];
    v23[1] = v25[1];
    v24 = v26;
    sub_10006777C((uint64_t)v23, (uint64_t)v20);
    if ((swift_dynamicCast(&v21, v20, &type metadata for AnyHashable, &type metadata for String, 6) & 1) == 0)
    {
      v21 = 0;
      v22 = 0;
    }
    result = sub_100067748((uint64_t)v23);
    v15 = v22;
    if (v22)
    {
      v16 = v21;
      result = swift_isUniquelyReferenced_nonNull_native(v9);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_100081A50(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v18 = v9[2];
      v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_100081A50((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v9[2] = v18 + 1;
      v19 = &v9[2 * v18];
      v19[4] = v16;
      v19[5] = v15;
    }
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_30:
    swift_release(a1);
    return (uint64_t)v9;
  }
  v13 = *(_QWORD *)(v27 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_30;
    v13 = *(_QWORD *)(v27 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_100204514(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  double v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  char v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  char *v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  _QWORD v81[2];
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  id v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v81 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v81 - v12;
  v15 = Logger.Application.unsafeMutableAddressor(v14);
  v89 = v5;
  v16 = (char *)v5[2];
  v87 = (void (*)(char *, uint64_t))v15;
  ((void (*)(char *))v16)(v13);
  v17 = a1;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter(v18);
  v20 = os_log_type_enabled(v18, v19);
  v83 = v7;
  v84 = v10;
  v88 = v16;
  v86 = v17;
  if (v20)
  {
    v21 = swift_slowAlloc(22, -1);
    v82 = swift_slowAlloc(64, -1);
    v91 = v82;
    *(_DWORD *)v21 = 136315394;
    v90 = sub_1000544FC(0xD000000000000016, 0x8000000100519B90, &v91);
    v85 = v4;
    *(_QWORD *)&v22 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91).n128_u64[0];
    *(_WORD *)(v21 + 12) = 2080;
    v81[1] = v21 + 14;
    v23 = v2;
    v24 = objc_msgSend(v17, "session", v22);
    v25 = objc_msgSend(v24, "persistentIdentifier");

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v29 = v26;
    v2 = v23;
    v90 = sub_1000544FC(v29, v28, &v91);
    v4 = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);

    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: identifier: %s freeing resources", (uint8_t *)v21, 0x16u);
    v30 = v82;
    swift_arrayDestroy(v82, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  v31 = (void (*)(char *, uint64_t))v89[1];
  v31(v13, v4);
  v32 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController;
  v33 = *(void **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (v33)
  {
    v89 = objc_msgSend(v33, "configuration");
    v34 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v35 = objc_msgSend(v34, "openSessions");

    v36 = sub_10004F2F0(0, &qword_100647C90, UISceneSession_ptr);
    v37 = sub_1000835B4(&qword_100647C98, &qword_100647C90, UISceneSession_ptr);
    v38 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v35, v36, v37);

    v39 = v86;
    v40 = objc_msgSend(v86, "session");
    v41 = sub_100477AA0(v40, v38);

    v42 = swift_bridgeObjectRelease(v38);
    if ((v41 & 1) != 0)
    {
      v43 = v84;
      ((void (*)(char *, void (*)(char *, uint64_t), uint64_t, __n128))v88)(v84, v87, v4, v42);
      v44 = v4;
      v45 = v39;
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.debug.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc(22, -1);
        v88 = v2;
        v49 = v48;
        v86 = (id)swift_slowAlloc(64, -1);
        v91 = (uint64_t)v86;
        *(_DWORD *)v49 = 136315394;
        v90 = sub_1000544FC(0xD000000000000016, 0x8000000100519B90, &v91);
        v85 = v44;
        *(_QWORD *)&v50 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91).n128_u64[0];
        *(_WORD *)(v49 + 12) = 2080;
        v51 = objc_msgSend(v45, "session", v50);
        v52 = objc_msgSend(v51, "persistentIdentifier");

        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
        v87 = v31;
        v55 = v54;

        v90 = sub_1000544FC(v53, v55, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);

        swift_bridgeObjectRelease(v55);
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s: identifier: %s was disconnected but session still exists. Keeping state.", (uint8_t *)v49, 0x16u);
        v56 = v86;
        swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        v57 = v49;
        v2 = v88;
        swift_slowDealloc(v57, -1, -1);

        v87(v84, v85);
      }
      else
      {

        v31(v43, v44);
      }
    }
    else
    {
      v58 = v83;
      ((void (*)(char *, void (*)(char *, uint64_t), uint64_t, __n128))v88)(v83, v87, v4, v42);
      v59 = v39;
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.debug.getter(v60);
      if (os_log_type_enabled(v60, v61))
      {
        v62 = swift_slowAlloc(22, -1);
        v88 = v2;
        v63 = v62;
        v86 = (id)swift_slowAlloc(64, -1);
        v91 = (uint64_t)v86;
        *(_DWORD *)v63 = 136315394;
        v90 = sub_1000544FC(0xD000000000000016, 0x8000000100519B90, &v91);
        v85 = v4;
        *(_QWORD *)&v64 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91).n128_u64[0];
        *(_WORD *)(v63 + 12) = 2080;
        v65 = objc_msgSend(v59, "session", v64);
        v66 = objc_msgSend(v65, "persistentIdentifier");
        v87 = v31;
        v67 = v66;

        v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        v90 = sub_1000544FC(v68, v70, &v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);

        swift_bridgeObjectRelease(v70);
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s: identifier: %s was disconnected and session is gone. Clearing state.", (uint8_t *)v63, 0x16u);
        v71 = v86;
        swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v71, -1, -1);
        v72 = v63;
        v2 = v88;
        swift_slowDealloc(v72, -1, -1);

        v87(v83, v85);
      }
      else
      {

        v31(v58, v4);
      }
      v73 = objc_msgSend((id)objc_opt_self(DOCUserInterfaceStateStore), "sharedStore");
      v74 = v89;
      objc_msgSend(v73, "purgeStateForConfiguration:", v89);

    }
  }
  v75 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window;
  v76 = *(void **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window];
  if (v76 && (objc_msgSend(v76, "setHidden:", 1), (v77 = *(void **)&v2[v75]) != 0))
  {
    objc_msgSend(v77, "setRootViewController:", 0);
    v78 = *(void **)&v2[v75];
  }
  else
  {
    v78 = 0;
  }
  *(_QWORD *)&v2[v75] = 0;

  v79 = *(void **)&v2[v32];
  *(_QWORD *)&v2[v32] = 0;

  v80 = *(void **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController];
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController] = 0;

}

void sub_100204D9C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v7)
  {
    v31 = v7;
    v8 = objc_msgSend(v31, "isAppLaunchOptimizationsActive");
    if ((v8 & 1) == 0)
    {
      v9 = Logger.StateStore.unsafeMutableAddressor(v8);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
      v10 = a1;
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.debug.getter(v11);
      v13 = v12;
      if (os_log_type_enabled(v11, v12))
      {
        v14 = swift_slowAlloc(22, -1);
        v30 = swift_slowAlloc(64, -1);
        v33 = v30;
        *(_DWORD *)v14 = 136315394;
        v29 = v13;
        v32 = sub_1000544FC(0xD000000000000018, 0x8000000100519B70, &v33);
        *(_QWORD *)&v15 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33).n128_u64[0];
        *(_WORD *)(v14 + 12) = 2080;
        v16 = objc_msgSend(v10, "session", v15, v14 + 14);
        v17 = objc_msgSend(v16, "persistentIdentifier");

        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;

        v32 = sub_1000544FC(v18, v20, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);

        swift_bridgeObjectRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v29, "%s: identifier: %s became foreground. Updating to most recent scene state.", (uint8_t *)v14, 0x16u);
        v21 = v30;
        swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v14, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v22 = (void *)objc_opt_self(DOCUserInterfaceStateStore);
      v23 = objc_msgSend(v22, "sharedStore");
      v24 = objc_msgSend(v31, "configuration");
      v25 = objc_msgSend(v23, "interfaceStateForConfiguration:", v24);

      if (v25)
      {
        v26 = objc_msgSend(v22, "sharedStore");
        v27 = objc_msgSend(v31, "configuration");
        objc_msgSend(v26, "updateInterfaceState:forConfiguration:", v25, v27);

      }
    }

  }
}

void sub_100205108(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void **v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  id v59;
  id v60;
  _QWORD *v61;
  uint64_t v62;
  void **v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  void **v72;
  uint64_t v73;
  id v74;
  void *v75;
  void **aBlock;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v74 = a2;
  v75 = a4;
  v73 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v72 = (void **)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v71 = (char *)&v69 - v9;
  v10 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v69 - v18;
  sub_1000271D4(a1, (uint64_t)v12, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v32(v19, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    v33 = *(unsigned __int8 *)(v14 + 80);
    v34 = (v33 + 24) & ~v33;
    v35 = (v15 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject(&unk_1005D2EA0, v35 + 8, v33 | 7);
    *(_QWORD *)(v36 + 16) = a3;
    v32((char *)(v36 + v34), v16, v13);
    v37 = v75;
    *(_QWORD *)(v36 + v35) = v75;
    v80 = sub_10021C740;
    v81 = v36;
    aBlock = _NSConcreteStackBlock;
    v77 = 1107296256;
    v78 = sub_10004A82C;
    v79 = &unk_1005D2EB8;
    v38 = _Block_copy(&aBlock);
    v39 = v81;
    v40 = a3;
    v41 = v37;
    swift_release(v39);
    DOCRunInMainThread(v38);
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    return;
  }
  v20 = a3;
  v21 = v75;
  v22 = sub_10000CB4C((uint64_t)v12, &qword_100643470);
  v23 = v6;
  if (!v74)
    goto LABEL_9;
  v24 = v74;
  v25 = objc_msgSend(v24, "domain");
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSPOSIXErrorDomain);
  v31 = v29;
  if (v26 == v30 && v28 == v29)
  {

    v22 = swift_bridgeObjectRelease_n(v28, 2);
LABEL_9:
    v44 = Logger.Application.unsafeMutableAddressor(v22);
    v45 = v72;
    v46 = v73;
    v47 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v6 + 16))(v72, v44, v73);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = (void **)swift_slowAlloc(32, -1);
      aBlock = v51;
      *(_DWORD *)v50 = 136315138;
      v82 = sub_1000544FC(0xD000000000000011, 0x8000000100519C10, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s: Could not decode FPItem from NSUserActivity.", v50, 0xCu);
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }

    (*(void (**)(void **, uint64_t))(v23 + 8))(v45, v46);
    return;
  }
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v31);
  if ((v42 & 1) != 0)
  {

    goto LABEL_9;
  }
  v52 = Logger.Application.unsafeMutableAddressor(v43);
  v53 = v71;
  v54 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v71, v52, v73);
  v55 = v24;
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc(22, -1);
    v69 = (_QWORD *)swift_slowAlloc(8, -1);
    v72 = (void **)swift_slowAlloc(32, -1);
    aBlock = v72;
    *(_DWORD *)v58 = 136315394;
    v82 = sub_1000544FC(0xD000000000000011, 0x8000000100519C10, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
    *(_WORD *)(v58 + 12) = 2112;
    v82 = (uint64_t)v55;
    v59 = v55;
    v70 = v23;
    v60 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83);
    v61 = v69;
    *v69 = v74;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s: Could not retrieve URL for item: %@", (uint8_t *)v58, 0x16u);
    v62 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v61, 1, v62);
    swift_slowDealloc(v61, -1, -1);
    v63 = v72;
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v73);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v23 + 8))(v53, v54);
  }
  v64 = swift_allocObject(&unk_1005D2E50, 32, 7);
  *(_QWORD *)(v64 + 16) = v21;
  *(_QWORD *)(v64 + 24) = v20;
  v80 = sub_10021C6A4;
  v81 = v64;
  aBlock = _NSConcreteStackBlock;
  v77 = 1107296256;
  v78 = sub_10004A82C;
  v79 = &unk_1005D2E68;
  v65 = _Block_copy(&aBlock);
  v66 = v81;
  v67 = v20;
  v68 = v21;
  swift_release(v66);
  DOCRunInMainThread(v65);
  _Block_release(v65);

}

uint64_t sub_1002057A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_100209DE4(a2, 0, 0, 1, 1);
  if ((result & 1) == 0)
  {
    type metadata accessor for DOCUserActivityController(0);
    v15 = static DOCUserActivityController.alertController(with:)(a3);
    if (v15)
    {
      v16 = (void *)v15;
      v17 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v17)
      {
        v18 = v17;
        objc_msgSend(v18, "presentViewController:animated:completion:", v16, 1, 0);

      }
    }
    v19 = Logger.Application.unsafeMutableAddressor(v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, v10);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(22, -1);
      v32 = swift_slowAlloc(64, -1);
      v35 = v32;
      *(_DWORD *)v23 = 136315394;
      v24 = sub_1000544FC(0xD000000000000011, 0x8000000100519C10, &v35);
      v33 = v10;
      v34 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      *(_WORD *)(v23 + 12) = 2080;
      v31[1] = v23 + 14;
      v25 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v26 = dispatch thunk of CustomStringConvertible.description.getter(v6, v25);
      v28 = v27;
      v34 = sub_1000544FC(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      v29 = swift_bridgeObjectRelease(v28);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v29);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s: URL decoded FPItem could not be opened: %s", (uint8_t *)v23, 0x16u);
      v30 = v32;
      swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  return result;
}

void sub_100205AA8(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  type metadata accessor for DOCUserActivityController(0);
  v4 = (void *)static DOCUserActivityController.alertController(with:)(a1);
  if (v4)
  {
    v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v5)
    {
      v7 = v4;
      v6 = v5;
      objc_msgSend(v6, "presentViewController:animated:completion:", v7, 1, 0);

      v4 = v7;
    }

  }
}

void sub_100205CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.Application.unsafeMutableAddressor(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = swift_bridgeObjectRetain_n(a1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.debug.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(32, -1);
    v18 = v12;
    *(_DWORD *)v11 = 136315394;
    v17 = sub_1000544FC(0xD000000000000019, 0x8000000100519CC0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    *(_WORD *)(v11 + 12) = 2048;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v16 = a1;
      else
        v16 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v13 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v17 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s [App Shortcut] finished creating %ld app shortcuts.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_10004F2F0(0, (unint64_t *)&unk_100647CB0, UIApplicationShortcutItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "setShortcutItems:", isa);

}

double sub_100205F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  void (*v22)(char *, uint64_t);
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  __n128 v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  double result;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = a2;
  v55 = a1;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v51 - v7;
  v9 = swift_allocObject(&unk_1005D2EF0, 24, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyArrayStorage;
  v10 = (_QWORD *)(v9 + 16);
  v11 = Logger.UI.unsafeMutableAddressor(v9);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v52 = v11;
  v53 = v12;
  v13 = ((uint64_t (*)(char *))v12)(v8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v54 = v2;
  if (v16)
  {
    v17 = swift_slowAlloc(12, -1);
    v51 = v5;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v59 = v19;
    *(_DWORD *)v18 = 136315138;
    v61 = sub_1000544FC(0xD000000000000015, 0x8000000100519CE0, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s [App Shortcut] 1. Start", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v20 = v19;
    v2 = v54;
    swift_slowDealloc(v20, -1, -1);
    v21 = v18;
    v5 = v51;
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v8, v2);
  v23 = sub_1002146E8();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
  v25 = *(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v24 = *(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v25 >= v24 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
  v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
  specialized Array._endMutation()(v26);
  v27 = sub_100214888();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = *(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);
  v53(v5, v52, v2);
  v31 = swift_retain_n(v9, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.debug.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v61 = v35;
    *(_DWORD *)v34 = 136315394;
    v59 = sub_1000544FC(0xD000000000000015, 0x8000000100519CE0, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
    *(_WORD *)(v34 + 12) = 2080;
    swift_beginAccess(v10, &v59, 0, 0);
    v36 = *(_QWORD *)(v9 + 16);
    v37 = sub_10004F2F0(0, (unint64_t *)&unk_100647CB0, UIApplicationShortcutItem_ptr);
    v53 = (void (*)(char *, uint64_t, uint64_t))v22;
    v38 = v5;
    v39 = v37;
    v40 = swift_bridgeObjectRetain(v36);
    v41 = Array.description.getter(v40, v39);
    v43 = v42;
    swift_bridgeObjectRelease(v36);
    v58 = sub_1000544FC(v41, v43, &v61);
    v44 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_release_n(v9, 2, v44);
    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s [App Shortcut] 2. Start getting provider locations %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    ((void (*)(char *, uint64_t))v53)(v38, v54);
  }
  else
  {

    swift_release_n(v9, 2, v45);
    v22(v5, v2);
  }
  v46 = (_QWORD *)swift_allocObject(&unk_1005D2F18, 48, 7);
  v47 = v55;
  v48 = v56;
  v46[2] = v9;
  v46[3] = v47;
  v49 = v57;
  v46[4] = v48;
  v46[5] = v49;
  swift_retain();
  swift_retain();
  sub_100214EFC((uint64_t)sub_10021C7D4, (uint64_t)v46, (uint64_t)v49);
  swift_release(v9);
  *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  return result;
}

void sub_1002064CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  id v33;
  unsigned __int8 v34;
  id v35;
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  void *v82;
  uint64_t v83;
  _QWORD v84[2];
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void (*v93)(char *, uint64_t);

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v89 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v86 = (char *)v84 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)v84 - v8;
  v11 = Logger.Application.unsafeMutableAddressor(v10);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v87 = v11;
  v88 = v12;
  ((void (*)(char *))v12)(v9);
  v13 = swift_bridgeObjectRetain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.debug.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v90 = v2;
  if (v16)
  {
    v17 = swift_slowAlloc(22, -1);
    v85 = (void (*)(char *, uint64_t))swift_slowAlloc(64, -1);
    v93 = v85;
    *(_DWORD *)v17 = 136315394;
    v92 = (id)sub_1000544FC(0xD000000000000018, 0x8000000100519AA0, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    *(_WORD *)(v17 + 12) = 2080;
    v84[0] = v17 + 14;
    v18 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v19 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v20 = swift_bridgeObjectRetain(a1);
    v21 = Set.description.getter(v20, v18, v19);
    v23 = v22;
    swift_bridgeObjectRelease(a1);
    v92 = (id)sub_1000544FC(v21, v23, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_bridgeObjectRelease_n(a1, 2);
    v2 = v90;
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: urlContexts: %s", (uint8_t *)v17, 0x16u);
    v24 = v85;
    swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v9, v2);
  v85 = v25;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v26 = (uint64_t)&_swiftEmptySetSingleton;
    v93 = (void (*)(char *, uint64_t))&_swiftEmptySetSingleton;
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v28 = __CocoaSet.makeIterator()(v27);
    v29 = __CocoaSet.Iterator.next()(v28);
    if (v29)
    {
      v30 = v29;
      v31 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
      do
      {
        v91 = v30;
        swift_dynamicCast(&v92, &v91, (char *)&type metadata for Swift.AnyObject + 8, v31, 7);
        v33 = objc_msgSend(v92, "options");
        v34 = objc_msgSend(v33, "_openAsDownload");

        v35 = v92;
        if ((v34 & 1) != 0)
        {
          v36 = v93;
          v37 = *((_QWORD *)v93 + 2);
          if (*((_QWORD *)v93 + 3) <= v37)
          {
            sub_1000CA960(v37 + 1);
            v36 = v93;
          }
          v32 = NSObject._rawHashValue(seed:)(*((_QWORD *)v36 + 5));
          v38 = (char *)v36 + 56;
          v39 = -1 << *((_BYTE *)v36 + 32);
          v40 = v32 & ~v39;
          v41 = v40 >> 6;
          if (((-1 << v40) & ~*((_QWORD *)v36 + (v40 >> 6) + 7)) != 0)
          {
            v42 = __clz(__rbit64((-1 << v40) & ~*((_QWORD *)v36 + (v40 >> 6) + 7))) | v40 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v43 = 0;
            v44 = (unint64_t)(63 - v39) >> 6;
            do
            {
              if (++v41 == v44 && (v43 & 1) != 0)
              {
                __break(1u);
                return;
              }
              v45 = v41 == v44;
              if (v41 == v44)
                v41 = 0;
              v43 |= v45;
              v46 = *(_QWORD *)&v38[8 * v41];
            }
            while (v46 == -1);
            v42 = __clz(__rbit64(~v46)) + (v41 << 6);
          }
          *(_QWORD *)&v38[(v42 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v42;
          *(_QWORD *)(*((_QWORD *)v36 + 6) + 8 * v42) = v35;
          ++*((_QWORD *)v36 + 2);
        }
        else
        {

        }
        v30 = __CocoaSet.Iterator.next()(v32);
      }
      while (v30);
      v26 = (uint64_t)v93;
      v2 = v90;
      v25 = v85;
    }
    v48 = v86;
    swift_release(v28);
  }
  else
  {
    v47 = swift_bridgeObjectRetain(a1);
    v26 = sub_100216260(v47);
    v48 = v86;
  }
  v50 = v87;
  v49 = v88;
  swift_bridgeObjectRetain(a1);
  v51 = (uint64_t)sub_100206E98(v26, a1);
  v49(v48, v50, v2);
  v52 = swift_retain_n(v26, 3);
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.debug.getter(v53);
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc(32, -1);
    v56 = (void (*)(char *, uint64_t))swift_slowAlloc(64, -1);
    v93 = v56;
    *(_DWORD *)v55 = 136315650;
    v92 = (id)sub_1000544FC(0xD000000000000018, 0x8000000100519AA0, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    *(_WORD *)(v55 + 12) = 2048;
    v84[0] = v56;
    if ((v26 & 0xC000000000000001) != 0)
      v57 = (void *)__CocoaSet.count.getter(v26);
    else
      v57 = *(void **)(v26 + 16);
    v92 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_release(v26);
    *(_WORD *)(v55 + 22) = 2080;
    v59 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v60 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    swift_retain();
    v62 = Set.description.getter(v61, v59, v60);
    v64 = v63;
    swift_release(v26);
    v92 = (id)sub_1000544FC(v62, v64, (uint64_t *)&v93);
    v65 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_release_n(v26, 2, v65);
    swift_bridgeObjectRelease(v64);
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s: urls to import directly to Downloads folder (%ld): %s", (uint8_t *)v55, 0x20u);
    v66 = v84[0];
    swift_arrayDestroy(v84[0], 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v55, -1, -1);

    v25 = v85;
    v2 = v90;
    v85(v86, v90);
    v50 = v87;
    v49 = v88;
  }
  else
  {

    swift_release_n(v26, 3, v58);
    v25(v48, v2);
  }
  v67 = v89;
  v49(v89, v50, v2);
  v68 = swift_bridgeObjectRetain_n(v51, 3);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.debug.getter(v69);
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc(32, -1);
    v72 = (void (*)(char *, uint64_t))swift_slowAlloc(64, -1);
    v93 = v72;
    *(_DWORD *)v71 = 136315650;
    v92 = (id)sub_1000544FC(0xD000000000000018, 0x8000000100519AA0, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    *(_WORD *)(v71 + 12) = 2048;
    v88 = (void (*)(char *, uint64_t, uint64_t))v72;
    if ((v51 & 0xC000000000000001) != 0)
    {
      if (v51 < 0)
        v73 = v51;
      else
        v73 = v51 & 0xFFFFFFFFFFFFFF8;
      v74 = (void *)__CocoaSet.count.getter(v73);
    }
    else
    {
      v74 = *(void **)(v51 + 16);
    }
    v92 = v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_bridgeObjectRelease(v51);
    *(_WORD *)(v71 + 22) = 2080;
    v75 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v76 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v77 = swift_bridgeObjectRetain(v51);
    v78 = Set.description.getter(v77, v75, v76);
    v80 = v79;
    swift_bridgeObjectRelease(v51);
    v92 = (id)sub_1000544FC(v78, v80, (uint64_t *)&v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_bridgeObjectRelease_n(v51, 2);
    swift_bridgeObjectRelease(v80);
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s: urls to import via the picker (%ld): %s", (uint8_t *)v71, 0x20u);
    v81 = v88;
    swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v71, -1, -1);

    v85(v89, v90);
  }
  else
  {

    swift_bridgeObjectRelease_n(v51, 3);
    v25(v67, v2);
  }
  v82 = (void *)v84[1];
  if ((v26 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter(v26))
      goto LABEL_47;
    goto LABEL_46;
  }
  if (*(_QWORD *)(v26 + 16))
LABEL_46:
    sub_1002075C0(v26, v82);
LABEL_47:
  swift_release(v26);
  if ((v51 & 0xC000000000000001) != 0)
  {
    if (v51 < 0)
      v83 = v51;
    else
      v83 = v51 & 0xFFFFFFFFFFFFFF8;
    if (!__CocoaSet.count.getter(v83))
      goto LABEL_53;
  }
  else if (!*(_QWORD *)(v51 + 16))
  {
    goto LABEL_53;
  }
  sub_100206F8C(v51, (uint64_t)v82);
LABEL_53:
  swift_bridgeObjectRelease(v51);
}

void *sub_100206E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;

  v2 = a2;
  v3 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if ((a2 & 0xC000000000000001) != 0)
      goto LABEL_5;
LABEL_11:
    if (v4 > *(_QWORD *)(v2 + 16) >> 3)
      return sub_100216880(v3, v2);
    goto LABEL_13;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.count.getter(a1);
  if ((v2 & 0xC000000000000001) == 0)
    goto LABEL_11;
LABEL_5:
  if (v2 < 0)
    v5 = v2;
  else
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v4 > __CocoaSet.count.getter(v5) / 8)
  {
    swift_bridgeObjectRetain(v2);
    v6 = __CocoaSet.count.getter(v5);
    v7 = sub_1004443D8(v5, v6);
    swift_bridgeObjectRelease(v2);
    v2 = v7;
    return sub_100216880(v3, v2);
  }
LABEL_13:
  sub_10021658C(v3);
  return (void *)v2;
}

_QWORD *sub_100206F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  os_log_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  unint64_t v54;
  char *v55;
  uint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[5];

  v4 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.Application.unsafeMutableAddressor(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  v13 = swift_bridgeObjectRetain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v16 = swift_slowAlloc(32, -1);
    v55 = (char *)swift_slowAlloc(64, -1);
    v63[0] = (uint64_t)v55;
    *(_DWORD *)v16 = 136315650;
    v62 = sub_1000544FC(0xD00000000000001CLL, 0x8000000100519AC0, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63);
    *(_WORD *)(v16 + 12) = 2048;
    v57 = v14;
    v58 = v7;
    LODWORD(v56) = v15;
    v54 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v17 = a1;
      else
        v17 = a1 & 0xFFFFFFFFFFFFFF8;
      v18 = __CocoaSet.count.getter(v17);
    }
    else
    {
      v18 = *(_QWORD *)(a1 + 16);
    }
    v62 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63);
    *(_WORD *)(v16 + 22) = 2080;
    v53[1] = v16 + 24;
    v27 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v28 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v29 = swift_bridgeObjectRetain(a1);
    v30 = Set.description.getter(v29, v27, v28);
    v32 = v31;
    swift_bridgeObjectRelease(a1);
    v62 = sub_1000544FC(v30, v32, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v32);
    v33 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "%s: Calling openInputURL: for %ld urlContexts: %s", (uint8_t *)v16, 0x20u);
    v34 = v55;
    swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v58);
    if (!v54)
      goto LABEL_14;
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((a1 & 0xC000000000000001) == 0)
    {
LABEL_14:
      v35 = -1 << *(_BYTE *)(a1 + 32);
      v36 = *(_QWORD *)(a1 + 56);
      v58 = a1 + 56;
      v24 = ~v35;
      v37 = -v35;
      if (v37 < 64)
        v38 = ~(-1 << v37);
      else
        v38 = -1;
      v26 = v38 & v36;
      result = (_QWORD *)swift_bridgeObjectRetain(a1);
      v25 = 0;
      goto LABEL_18;
    }
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v20 = __CocoaSet.makeIterator()(v19);
  v21 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
  v22 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
  result = Set.Iterator.init(_cocoa:)(v63, v20, v21, v22);
  a1 = v63[0];
  v58 = v63[1];
  v24 = v63[2];
  v25 = v63[3];
  v26 = v63[4];
LABEL_18:
  v54 = v24;
  v56 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v57 = (os_log_t)((unint64_t)(v24 + 64) >> 6);
  v55 = (char *)&type metadata for Swift.AnyObject + 8;
  if (a1 < 0)
    goto LABEL_21;
  while (1)
  {
    if (v26)
    {
      v39 = (v26 - 1) & v26;
      v40 = __clz(__rbit64(v26)) | (v25 << 6);
      v41 = v25;
      goto LABEL_38;
    }
    v47 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v47 >= (uint64_t)v57)
      return (_QWORD *)sub_10021C590(a1);
    v48 = *(_QWORD *)(v58 + 8 * v47);
    v41 = v25 + 1;
    if (!v48)
    {
      v41 = v25 + 2;
      if (v25 + 2 >= (uint64_t)v57)
        return (_QWORD *)sub_10021C590(a1);
      v48 = *(_QWORD *)(v58 + 8 * v41);
      if (!v48)
      {
        v41 = v25 + 3;
        if (v25 + 3 >= (uint64_t)v57)
          return (_QWORD *)sub_10021C590(a1);
        v48 = *(_QWORD *)(v58 + 8 * v41);
        if (!v48)
        {
          v41 = v25 + 4;
          if (v25 + 4 >= (uint64_t)v57)
            return (_QWORD *)sub_10021C590(a1);
          v48 = *(_QWORD *)(v58 + 8 * v41);
          if (!v48)
          {
            v49 = (os_log_t)(v25 + 5);
            while (v57 != v49)
            {
              v48 = *(_QWORD *)(v58 + 8 * (_QWORD)v49);
              v49 = (os_log_t)((char *)v49 + 1);
              if (v48)
              {
                v41 = (uint64_t)&v49[-1].isa + 7;
                goto LABEL_37;
              }
            }
            return (_QWORD *)sub_10021C590(a1);
          }
        }
      }
    }
LABEL_37:
    v39 = (v48 - 1) & v48;
    v40 = __clz(__rbit64(v48)) + (v41 << 6);
LABEL_38:
    v45 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v40);
    if (!v45)
      return (_QWORD *)sub_10021C590(a1);
    while (1)
    {
      v50 = objc_msgSend(v45, "URL", v46);
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v50);

      v51 = type metadata accessor for DeepLinkNavigator();
      v52 = swift_allocObject(v51, 40, 7);
      swift_unknownObjectWeakInit(v52 + 16);
      *(_QWORD *)(v52 + 32) = 0;
      swift_unknownObjectWeakInit(v52 + 24);
      swift_unknownObjectWeakAssign(v52 + 16, *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController));
      *(_QWORD *)(v52 + 32) = &off_1005D21D8;
      swift_unknownObjectWeakAssign(v52 + 24, a2);
      sub_10042C9B0((uint64_t)v6, v45);

      swift_release(v52);
      result = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v6, v60);
      v25 = v41;
      v26 = v39;
      if ((a1 & 0x8000000000000000) == 0)
        break;
LABEL_21:
      v42 = __CocoaSet.Iterator.next()(result);
      if (v42)
      {
        v43 = v42;
        v61 = v42;
        v44 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
        swift_unknownObjectRetain(v43);
        swift_dynamicCast(&v62, &v61, v55, v44, 7);
        v45 = (id)v62;
        *(_QWORD *)&v46 = swift_unknownObjectRelease(v43).n128_u64[0];
        v41 = v25;
        v39 = v26;
        if (v45)
          continue;
      }
      return (_QWORD *)sub_10021C590(a1);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002075C0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t aBlock[5];
  uint64_t v49;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = Logger.Application.unsafeMutableAddressor(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  v15 = swift_bridgeObjectRetain(a1);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v41 = a2;
    v42 = v4;
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(32, -1);
    aBlock[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v47 = (_QWORD *)sub_1000544FC(0xD00000000000002ALL, 0x8000000100519AE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, aBlock);
    *(_WORD *)(v18 + 12) = 2048;
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v20 = a1;
      else
        v20 = a1 & 0xFFFFFFFFFFFFFF8;
      v21 = __CocoaSet.count.getter(v20);
    }
    else
    {
      v21 = *(_QWORD *)(a1 + 16);
    }
    v47 = (_QWORD *)v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, aBlock);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: starting to import (%ld) items directly to Downloads folder.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    a2 = v41;
    v4 = v42;
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_14;
  }
  else
  {

    v22 = swift_bridgeObjectRelease(a1);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v22);
    if ((a1 & 0xC000000000000001) == 0)
    {
LABEL_14:
      v24 = *(_QWORD *)(a1 + 16);
      goto LABEL_15;
    }
  }
  if (a1 < 0)
    v23 = a1;
  else
    v23 = a1 & 0xFFFFFFFFFFFFFF8;
  v24 = __CocoaSet.count.getter(v23);
LABEL_15:
  v25 = v24 == 1;
  v26 = dispatch_group_create();
  v27 = swift_allocObject(&unk_1005D2BF8, 24, 7);
  *(_QWORD *)(v27 + 16) = _swiftEmptyArrayStorage;
  v28 = a2;
  sub_100218CEC(a1, v26, v28, v25, v27);

  v29 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  v31 = swift_allocObject(&unk_1005D2C20, 32, 7);
  *(_QWORD *)(v31 + 16) = v27;
  *(_QWORD *)(v31 + 24) = v28;
  aBlock[4] = (uint64_t)sub_10021C5C0;
  v49 = v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005D2C38;
  v32 = _Block_copy(aBlock);
  v33 = v28;
  swift_retain();
  static DispatchQoS.unspecified.getter(v34);
  v47 = _swiftEmptyArrayStorage;
  v35 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_10006922C((uint64_t *)&unk_100647540);
  v37 = sub_1000791AC();
  v38 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v47, v36, v37, v4, v35);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v8, v38, v30, v32);

  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v4);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
  v39 = v49;
  swift_release(v27);
  return swift_release(v39);
}

void sub_100207A18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6, NSObject *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  id v34;
  unint64_t *v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  dispatch_group_t v45;
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;

  v45 = a7;
  v40 = a6;
  v41 = a5;
  v42 = a4;
  v10 = type metadata accessor for Logger(0);
  v44 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v40 - v20;
  sub_1000271D4(a1, (uint64_t)v14, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v22 = sub_10000CB4C((uint64_t)v14, &qword_100643470);
    v23 = Logger.Application.unsafeMutableAddressor(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v23, v10);
    swift_errorRetain(a2);
    v24 = swift_errorRetain(a2);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v46[0] = v28;
      *(_DWORD *)v27 = 136315394;
      v47 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519AE0, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
      *(_WORD *)(v27 + 12) = 2080;
      v47 = a2;
      swift_errorRetain(a2);
      v29 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v30 = String.init<A>(describing:)(&v47, v29);
      v32 = v31;
      v47 = sub_1000544FC(v30, v31, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: could not import to Downloads or it was cancelled: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v10);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v33(v21, v14, v15);
    if ((a3 & 1) != 0)
    {
      v34 = objc_msgSend(v41, "options");
      sub_100209DE4((uint64_t)v21, v34, 1, 1, 1);

    }
    else
    {
      v35 = (unint64_t *)(v40 + 16);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
      swift_beginAccess(v35, v46, 33, 0);
      v36 = *v35;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
      *v35 = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v36 = sub_100153AD4(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
        *v35 = v36;
      }
      v39 = *(_QWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        v36 = sub_100153AD4(v38 > 1, v39 + 1, 1, v36);
        *v35 = v36;
      }
      *(_QWORD *)(v36 + 16) = v39 + 1;
      v33((char *)(v36+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v39), v18, v15);
      swift_endAccess(v46);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  dispatch_group_leave(v45);
}

void sub_100207E70(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  void *v29;
  char *v30;
  char *v31;
  void *v32;
  _QWORD *v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  id v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t aBlock[5];
  _QWORD *v45;
  char v46[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  swift_beginAccess(a1 + 16, v46, 0, 0);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  v13 = Logger.Application.unsafeMutableAddressor(v12);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if (v11)
  {
    v14(v10, v13, v4);
    swift_retain();
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(22, -1);
      v19 = swift_slowAlloc(32, -1);
      v40 = a2;
      v20 = v19;
      aBlock[0] = v19;
      *(_DWORD *)v18 = 136315394;
      v42 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519AE0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
      *(_WORD *)(v18 + 12) = 2048;
      swift_beginAccess(a1 + 16, &v42, 0, 0);
      v41 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
      swift_release(a1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: imported %ld urls. Revealing with selection.", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      v21 = v20;
      a2 = v40;
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_release(a1);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    v27 = *(char **)&a2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v27)
    {
      v28 = (_QWORD *)swift_allocObject(&unk_1005D2C70, 40, 7);
      v28[2] = a2;
      v28[3] = 2;
      v28[4] = a1;
      v29 = *(void **)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
      if (v29)
      {
        *(_QWORD *)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
        swift_retain_n(a1, 2);
        v30 = a2;
        v31 = v27;
        aBlock[4] = (uint64_t)sub_10021C5F4;
        v45 = v28;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_10004A82C;
        aBlock[3] = (uint64_t)&unk_1005D2CD8;
        v32 = _Block_copy(aBlock);
        v33 = v45;
        swift_retain();
        swift_release(v33);
        objc_msgSend(v29, "dismissViewControllerAnimated:completion:", 1, v32);
        _Block_release(v32);

        swift_release(a1);
        swift_release(v28);

      }
      else
      {
        v34 = (_QWORD *)swift_allocObject(&unk_1005D2C98, 40, 7);
        v34[2] = 2;
        v34[3] = a1;
        v34[4] = a2;
        swift_retain_n(a1, 3);
        v35 = a2;
        v36 = v27;
        v37 = objc_msgSend(v36, "namedLocationResolver");
        v38 = (_QWORD *)swift_allocObject(&unk_1005D2CC0, 40, 7);
        v38[2] = v36;
        v38[3] = sub_10021C604;
        v38[4] = v34;
        v39 = v36;
        swift_retain();
        sub_10036EE38(2, (uint64_t)sub_10021C614, (uint64_t)v38);
        swift_release(a1);

        swift_release(v28);
        swift_release(v34);

        swift_release(v38);
      }
    }
  }
  else
  {
    v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v7, v13, v4);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      aBlock[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v42 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519AE0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: imported 0 urls. Nothing to do.", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1002083B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  _QWORD *v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;

  v3 = *(void **)(result + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v3)
  {
    v6 = (void *)result;
    v7 = (_QWORD *)swift_allocObject(&unk_1005D2D10, 40, 7);
    v7[2] = a2;
    v7[3] = a3;
    v7[4] = v6;
    v8 = v3;
    swift_retain();
    v9 = v6;
    v10 = objc_msgSend(v8, "namedLocationResolver");
    v11 = (_QWORD *)swift_allocObject(&unk_1005D2D38, 40, 7);
    v11[2] = v8;
    v11[3] = sub_10021C85C;
    v11[4] = v7;
    v12 = v8;
    swift_retain();
    sub_10036EE38(a2, (uint64_t)sub_10021C860, (uint64_t)v11);

    swift_release(v7);
    return swift_release(v11);
  }
  return result;
}

double sub_1002084BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t v34[3];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)(a3 + 16);
  v13 = Logger.Application.unsafeMutableAddressor(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
  v14 = swift_retain_n(a3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.debug.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(32, -1);
    v30 = a4;
    v18 = v17;
    v29 = swift_slowAlloc(64, -1);
    v34[0] = v29;
    *(_DWORD *)v18 = 136315650;
    v32 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519AE0, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    *(_WORD *)(v18 + 12) = 2080;
    v32 = a2;
    v19 = String.init<A>(describing:)(&v32, &type metadata for DOCNamedLocation);
    v21 = v20;
    v32 = sub_1000544FC(v19, v20, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v18 + 22) = 2048;
    swift_beginAccess(a3 + 16, &v32, 0, 0);
    v22 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
    swift_release(a3);
    v31 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    swift_release(a3);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: revealed %s. Selecting %ld items.", (uint8_t *)v18, 0x20u);
    v23 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_release_n(a3, 2, v24);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess(a3 + 16, v34, 0, 0);
  v25 = *v11;
  v26 = swift_bridgeObjectRetain(*v11);
  sub_10020B24C(v26);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  return result;
}

void sub_10020875C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  char *v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v33 = v2;
    v14 = v13;
    v32 = swift_slowAlloc(64, -1);
    v35 = v32;
    *(_DWORD *)v14 = 136315394;
    v34 = sub_1000544FC(0xD000000000000015, 0x80000001005199B0, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v14 + 12) = 2080;
    v29[1] = v14 + 14;
    v15 = v10;
    v31 = v4;
    v16 = v15;
    v17 = objc_msgSend(v15, "description");
    v30 = v5;
    v18 = v10;
    v19 = v17;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v22 = v21;

    v10 = v18;
    v34 = sub_1000544FC(v20, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);

    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s shortcutItem: %s", (uint8_t *)v14, 0x16u);
    v23 = v32;
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    v24 = v14;
    v2 = v33;
    swift_slowDealloc(v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v25 = *(void **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (v25)
  {
    v26 = v10;
    v27 = v2;
    v28 = v25;
    sub_100322374(1, 0, 0, v28, v27, v26);

  }
}

void sub_100208A08(uint64_t a1, void *a2)
{
  void *v4;
  id v5;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v4)
  {
    v5 = objc_msgSend(v4, "effectiveFullBrowser");
    objc_msgSend(v5, "dismissSearch");

  }
  sub_100208A70(a2, a1);
}

void sub_100208A70(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  char *v45;
  void *v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  char *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  id v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t aBlock[5];
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;

  v85 = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v84 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v81 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v81 - v10;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v81 - v14;
  v16 = objc_msgSend(a1, "type", v13);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  if (v17 == 0xD000000000000026 && v19 == 0x80000001005199D0)
  {
    v20 = 0x80000001005199D0;
    goto LABEL_6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000026, 0x80000001005199D0, v17, v19, 0) & 1) != 0)
  {
    v20 = v19;
LABEL_6:
    swift_bridgeObjectRelease(v20);
    v21 = v4;
    v23 = Logger.Application.unsafeMutableAddressor(v22);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, v23, v3);
    v24 = a1;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      v28 = (_QWORD *)swift_slowAlloc(8, -1);
      v84 = (char *)swift_slowAlloc(32, -1);
      aBlock[0] = (uint64_t)v84;
      *(_DWORD *)v27 = 136315394;
      v88 = sub_1000544FC(0xD000000000000016, 0x8000000100519A60, aBlock);
      v83 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
      *(_WORD *)(v27 + 12) = 2112;
      v82 = v21;
      v88 = (uint64_t)v24;
      v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
      *v28 = v24;

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s scan document %@", (uint8_t *)v27, 0x16u);
      v30 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v28, 1, v30);
      swift_slowDealloc(v28, -1, -1);
      v31 = v84;
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v15, v83);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v3);
    }
    v32 = *(void **)(v85 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v32)
    {
      v33 = v32;
      sub_100321738(1, 0, 0, v33, v33);
LABEL_20:

      return;
    }
    return;
  }
  if (v17 == 0xD000000000000020)
  {
    v34 = 0x8000000100519A00;
    if (v19 == 0x8000000100519A00)
      goto LABEL_15;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x8000000100519A00, v17, v19, 0) & 1) != 0)
  {
    v34 = v19;
LABEL_15:
    swift_bridgeObjectRelease(v34);
    v35 = v4;
    v37 = Logger.Application.unsafeMutableAddressor(v36);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v11, v37, v3);
    v38 = a1;
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      v42 = (_QWORD *)swift_slowAlloc(8, -1);
      v84 = (char *)swift_slowAlloc(32, -1);
      aBlock[0] = (uint64_t)v84;
      *(_DWORD *)v41 = 136315394;
      v82 = v35;
      v88 = sub_1000544FC(0xD000000000000016, 0x8000000100519A60, aBlock);
      v83 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
      *(_WORD *)(v41 + 12) = 2112;
      v88 = (uint64_t)v38;
      v43 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
      *v42 = v38;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s search %@", (uint8_t *)v41, 0x16u);
      v44 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v42, 1, v44);
      swift_slowDealloc(v42, -1, -1);
      v45 = v84;
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v83);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v3);
    }
    v46 = *(void **)(v85 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v46)
    {
      v47 = objc_msgSend(v46, "effectiveFullBrowser");
      v33 = (char *)sub_100083AE8();
      v48 = swift_allocObject(&unk_1005D2B80, 24, 7);
      swift_unknownObjectWeakInit(v48 + 16);
      v49 = (_QWORD *)swift_allocObject(&unk_1005D2BA8, 56, 7);
      v49[2] = v48;
      v49[3] = 0;
      v49[4] = 0;
      v49[5] = 0;
      v49[6] = 0xE000000000000000;
      aBlock[4] = (uint64_t)sub_10021C58C;
      v87 = v49;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D2BC0;
      v50 = _Block_copy(aBlock);
      swift_release(v87);
      objc_msgSend(v33, "performAfterSearchInitialization:", v50);
      _Block_release(v50);

      goto LABEL_20;
    }
    return;
  }
  if (v17 == 0xD000000000000020 && v19 == 0x8000000100519A30)
  {
    swift_bridgeObjectRelease(0x8000000100519A30);
  }
  else
  {
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000020, 0x8000000100519A30, v17, v19, 0);
    swift_bridgeObjectRelease(v19);
    if ((v52 & 1) == 0)
    {
      v67 = Logger.Application.unsafeMutableAddressor(v51);
      v68 = v4;
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v70 = v84;
      v69(v84, v67, v3);
      v71 = a1;
      v72 = v3;
      v73 = Logger.logObject.getter(v71);
      v74 = static os_log_type_t.error.getter(v73);
      if (os_log_type_enabled(v73, v74))
      {
        v75 = swift_slowAlloc(22, -1);
        v83 = v72;
        v76 = v75;
        v77 = (_QWORD *)swift_slowAlloc(8, -1);
        v78 = swift_slowAlloc(32, -1);
        aBlock[0] = v78;
        *(_DWORD *)v76 = 136315394;
        v82 = v68;
        v88 = sub_1000544FC(0xD000000000000016, 0x8000000100519A60, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
        *(_WORD *)(v76 + 12) = 2112;
        v88 = (uint64_t)v71;
        v79 = v71;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
        *v77 = v71;

        _os_log_impl((void *)&_mh_execute_header, v73, v74, "%s Encountered unknown shortcut item type: %@", (uint8_t *)v76, 0x16u);
        v80 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v77, 1, v80);
        swift_slowDealloc(v77, -1, -1);
        swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v78, -1, -1);
        swift_slowDealloc(v76, -1, -1);

        (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v83);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v72);
      }
      return;
    }
  }
  v53 = Logger.Application.unsafeMutableAddressor(v51);
  v54 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v53, v3);
  v55 = a1;
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.error.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc(22, -1);
    v59 = (_QWORD *)swift_slowAlloc(8, -1);
    v84 = (char *)swift_slowAlloc(32, -1);
    aBlock[0] = (uint64_t)v84;
    *(_DWORD *)v58 = 136315394;
    v82 = v54;
    v88 = sub_1000544FC(0xD000000000000016, 0x8000000100519A60, aBlock);
    v83 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
    *(_WORD *)(v58 + 12) = 2112;
    v88 = (uint64_t)v55;
    v60 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89);
    *v59 = v55;

    _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s domain %@", (uint8_t *)v58, 0x16u);
    v61 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v59, 1, v61);
    swift_slowDealloc(v59, -1, -1);
    v62 = v84;
    swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v8, v83);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v3);
  }
  v63 = objc_msgSend(v55, "userInfo");
  if (v63)
  {
    v64 = v63;
    v65 = sub_10006922C((uint64_t *)&unk_100647C60);
    v66 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v64, &type metadata for String, v65, &protocol witness table for String);

    v33 = (char *)sub_10020955C(v66);
    swift_bridgeObjectRelease(v66);
    if (v33)
    {
      sub_100210708(v33, 0, 0);
      goto LABEL_20;
    }
  }
}

id sub_10020955C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  id v33;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  id v60;
  uint64_t v61;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  __chkstk_darwin(v4);
  v6 = (char *)&v53 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - v8;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v53 - v12;
  v14 = DOCUserActivityLocationKey.unsafeMutableAddressor(v11);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
  v16 = *(_QWORD *)v14;
  v15 = *(_QWORD *)(v14 + 8);
  swift_bridgeObjectRetain(v15);
  v17 = sub_10007EF08(v16, v15);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease(v15);
    goto LABEL_6;
  }
  v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v17);
  swift_unknownObjectRetain(v19);
  swift_bridgeObjectRelease(v15);
  v60 = v19;
  v20 = sub_10006922C((uint64_t *)&unk_100647C60);
  v14 = swift_dynamicCast(v59, &v60, v20, &type metadata for Data, 6);
  if ((v14 & 1) == 0)
  {
LABEL_6:
    v27 = Logger.Application.unsafeMutableAddressor(v14);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v27, v2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v59[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v60 = (id)sub_1000544FC(0xD000000000000014, 0x8000000100519A80, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s Location data not found in user info", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  v21 = v2;
  v22 = v59[0];
  v23 = v59[1];
  sub_10004F2F0(0, &qword_100647600, NSKeyedUnarchiver_ptr);
  v24 = sub_10006922C((uint64_t *)&unk_100647C70);
  v25 = swift_allocObject(v24, 40, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1004D9670;
  v26 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr);
  *(_QWORD *)(v25 + 32) = v26;
  v58 = v22;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(v59, v25, v22, v23);
  v57 = v23;
  swift_bridgeObjectRelease(v25);
  if (!v59[3])
  {
    v35 = sub_10000CB4C((uint64_t)v59, &qword_100642730);
LABEL_17:
    v45 = Logger.Application.unsafeMutableAddressor(v35);
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v45, v21);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.error.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      v59[0] = v50;
      *(_DWORD *)v49 = 136315138;
      v60 = (id)sub_1000544FC(0xD000000000000014, 0x8000000100519A80, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s Could not unarchive location", v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
      v52 = v57;
      v51 = v58;
    }
    else
    {
      v51 = v58;
      v52 = v23;
    }
    sub_1000D4C00(v51, v52);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v21);
    return 0;
  }
  v35 = swift_dynamicCast(&v60, v59, (char *)&type metadata for Any + 8, v26, 6);
  if ((v35 & 1) == 0)
  {
    v23 = v57;
    goto LABEL_17;
  }
  v36 = v60;
  v37 = Logger.Application.unsafeMutableAddressor(v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v37, v21);
  v33 = v36;
  v38 = Logger.logObject.getter(v33);
  v39 = static os_log_type_t.error.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc(22, -1);
    v54 = (_QWORD *)swift_slowAlloc(8, -1);
    v55 = swift_slowAlloc(32, -1);
    v59[0] = v55;
    *(_DWORD *)v40 = 136315394;
    v60 = (id)sub_1000544FC(0xD000000000000014, 0x8000000100519A80, v59);
    v56 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    *(_WORD *)(v40 + 12) = 2112;
    v60 = v33;
    v41 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    v42 = v54;
    *v54 = v33;

    _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s Success! Unarchived location: %@. Restoring to it now.", (uint8_t *)v40, 0x16u);
    v43 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v42, 1, v43);
    swift_slowDealloc(v42, -1, -1);
    v44 = v55;
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v40, -1, -1);
    sub_1000D4C00(v58, v57);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v56);
  }
  else
  {

    sub_1000D4C00(v58, v57);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v21);
  }
  return v33;
}

uint64_t sub_100209DE4(uint64_t a1, void *a2, int a3, int a4, int a5)
{
  uint64_t v6;
  void (**v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  _BOOL4 v30;
  NSURL *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  char v81;
  void *v82;
  void *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  int v101;
  id v102;
  char *v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t aBlock[5];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v105 = a5;
  LODWORD(v106) = a4;
  v101 = a3;
  v102 = a2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(void (***)(char *, uint64_t, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  v109 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v100 = (char *)&v98 - v10;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v108 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v99 = (char *)&v98 - v15;
  __chkstk_darwin(v16);
  v103 = (char *)&v98 - v17;
  v18 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v18);
  v98 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10006922C(&qword_100643EC0);
  __chkstk_darwin(v20);
  v22 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UTType(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = URL.isFileURL.getter(v25);
  if ((v28 & 1) == 0)
  {
    v32 = Logger.Application.unsafeMutableAddressor(v28);
    v7[2](v109, v32, v6);
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v108, a1, v11);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter(v34);
    v36 = v11;
    v37 = v12;
    if (os_log_type_enabled(v34, v35))
    {
      v38 = swift_slowAlloc(22, -1);
      v39 = swift_slowAlloc(64, -1);
      aBlock[0] = v39;
      *(_DWORD *)v38 = 136315394;
      v107 = (char *)v6;
      v112 = sub_1000544FC(0xD000000000000056, 0x8000000100519950, aBlock);
      v106 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
      *(_WORD *)(v38 + 12) = 2080;
      v40 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v41 = v108;
      v42 = dispatch thunk of CustomStringConvertible.description.getter(v36, v40);
      v44 = v43;
      v112 = sub_1000544FC(v42, v43, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
      v45 = swift_bridgeObjectRelease(v44);
      (*(void (**)(char *, uint64_t, __n128))(v106 + 8))(v41, v36, v45);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: aborting attempt to open a non-file URL: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      ((void (*)(char *, char *))v7[1])(v109, v107);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v108, v11);

      ((void (*)(char *, uint64_t))v7[1])(v109, v6);
    }
    return 0;
  }
  v104 = a1;
  v29 = *(void **)&v107[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (!v29)
  {
    v46 = Logger.Application.unsafeMutableAddressor(v28);
    v47 = (char *)v7;
    v48 = v100;
    v49 = v6;
    v7[2](v100, v46, v6);
    v50 = v12;
    v51 = v99;
    v52 = v11;
    v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v99, v104, v11);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = v51;
      v57 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      *(_DWORD *)v57 = 136315394;
      v107 = (char *)v49;
      v109 = v47;
      aBlock[0] = v58;
      v112 = sub_1000544FC(0xD000000000000056, 0x8000000100519950, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
      *(_WORD *)(v57 + 12) = 2080;
      v59 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v60 = v56;
      v61 = dispatch thunk of CustomStringConvertible.description.getter(v52, v59);
      v63 = v62;
      v112 = sub_1000544FC(v61, v62, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
      v64 = swift_bridgeObjectRelease(v63);
      (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v60, v52, v64);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s: could not reveal, invalid scene. URL: %s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

      (*((void (**)(char *, char *))v109 + 1))(v100, v107);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v51, v52);

      (*((void (**)(char *, uint64_t))v47 + 1))(v48, v49);
    }
    return 0;
  }
  v109 = v29;
  v30 = URL.startAccessingSecurityScopedResource()();
  URL.promisedContentType.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_10000CB4C((uint64_t)v22, &qword_100643EC0);
  }
  else
  {
    v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v27, v22, v23);
    v66 = UTType.isFolderUTI.getter(v65);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    if ((v66 & 1) != 0)
    {
      v67 = 0;
      v68 = 1;
      goto LABEL_13;
    }
  }
  v68 = 0;
  v105 = 0;
  v67 = 1;
LABEL_13:
  v69 = v11;
  v70 = v104;
  v71 = v106;
  LODWORD(v108) = v30;
  if (!v102)
    goto LABEL_18;
  v72 = objc_msgSend(v102, "sourceApplication");
  if (!v72)
    goto LABEL_18;
  v73 = v72;
  v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
  v76 = v75;

  LOBYTE(v74) = sub_1000DFDD0(v74, v76, &off_1005BEDE8);
  swift_arrayDestroy(&unk_1005BEE08, 2, &type metadata for String);
  v77 = v76;
  v71 = v106;
  swift_bridgeObjectRelease(v77);
  if ((v74 & 1) != 0)
  {
    v78 = v101;
    if ((v68 & 1) != 0)
    {
      v79 = v69;
    }
    else
    {
      v96 = objc_msgSend((id)objc_opt_self(DOCFeature), "quickLookInSeparateProcess");
      v97 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v98, v70, v69);
      v79 = v69;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v97, 0, 1, v69);
      sub_10031D5F4(v97, 0, v96, 0, 0);
      sub_10000CB4C(v97, &qword_100643470);
    }
    v80 = 0;
    v81 = v78;
  }
  else
  {
LABEL_18:
    v79 = v69;
    v80 = v67 & v71;
    v81 = v101;
  }
  URL._bridgeToObjectiveC()(v31);
  v83 = v82;
  v84 = v70;
  v85 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v103, v84, v79);
  v86 = *(unsigned __int8 *)(v12 + 80);
  v87 = (v86 + 40) & ~v86;
  v88 = swift_allocObject(&unk_1005D2B08, v87 + v13, v86 | 7);
  v89 = v109;
  *(_QWORD *)(v88 + 16) = v109;
  *(_BYTE *)(v88 + 24) = v80;
  *(_BYTE *)(v88 + 25) = v81 & 1;
  v90 = v107;
  *(_QWORD *)(v88 + 32) = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v88 + v87, v85, v79);
  aBlock[4] = (uint64_t)sub_10021C52C;
  v111 = v88;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100175118;
  aBlock[3] = (uint64_t)&unk_1005D2B20;
  v91 = _Block_copy(aBlock);
  v92 = v111;
  v93 = v89;
  v94 = v90;
  swift_release(v92);
  objc_msgSend(v93, "revealDocumentAtURL:importIfNeeded:openDocument:revealContents:updateLastUsedDate:completion:", v83, 0, v106 & 1, v105 & 1, 1, v91);
  _Block_release(v91);

  if ((v108 & 1) != 0)
    URL.stopAccessingSecurityScopedResource()();

  return 1;
}

void sub_10020A6A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t inited;
  NSString *v57;
  NSString *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void *v69;
  void *v70;
  char v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char v97[8];
  uint64_t v98;
  uint64_t v99;
  char v100[8];
  uint64_t aBlock[5];
  uint64_t v102;
  char v103[8];
  uint64_t v104;
  char v105[8];

  v89 = a7;
  v92 = a6;
  v85 = a4;
  v86 = a3;
  v88 = type metadata accessor for URLResourceValues(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v95 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v83 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v93 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - v20;
  v22 = type metadata accessor for Logger(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v84 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v94 = (char *)&v78 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v78 - v28;
  if (a2)
  {
    v90 = a1;
    v91 = a5;
    v96 = v21;
    v30 = swift_errorRetain(a2);
    v31 = Logger.Application.unsafeMutableAddressor(v30);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v29, v31, v22);
    swift_errorRetain(a2);
    v32 = swift_errorRetain(a2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(22, -1);
      v80 = v16;
      v36 = v35;
      v79 = swift_slowAlloc(64, -1);
      aBlock[0] = v79;
      *(_DWORD *)v36 = 136315394;
      v104 = sub_1000544FC(0xD000000000000056, 0x8000000100519950, aBlock);
      v81 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105);
      *(_WORD *)(v36 + 12) = 2080;
      v82 = v22;
      swift_getErrorValue(a2, v100, v97);
      v37 = Error.localizedDescription.getter(v98, v99);
      v39 = v38;
      v104 = sub_1000544FC(v37, v38, aBlock);
      v23 = v81;
      v22 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105);
      swift_bridgeObjectRelease(v39);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s: failed to reveal the item. Error: %s", (uint8_t *)v36, 0x16u);
      v40 = v79;
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      v41 = v36;
      v16 = v80;
      swift_slowDealloc(v41, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    v21 = v96;
    LOBYTE(a5) = v91;
    a1 = v90;
  }
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v42 = sub_10000CB4C((uint64_t)v15, &qword_100643470);
    if ((a5 & 1) != 0)
    {
      v43 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
      v44 = v92;
      v45 = *(void **)(v92 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController);
      if (v45)
        goto LABEL_27;
      v46 = Logger.Application.unsafeMutableAddressor(v42);
      v47 = v84;
      v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16))(v84, v46, v22);
      v49 = v23;
      v50 = Logger.logObject.getter(v48);
      v51 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc(12, -1);
        v53 = swift_slowAlloc(32, -1);
        v82 = v22;
        v54 = v53;
        aBlock[0] = v53;
        *(_DWORD *)v52 = 136315138;
        v104 = sub_1000544FC(0xD000000000000056, 0x8000000100519950, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s: fileImportController was nil, creating a new one.", v52, 0xCu);
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v54, -1, -1);
        swift_slowDealloc(v52, -1, -1);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v82);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v22);
      }
      v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCImportFileController()), "init");
      v74 = *(void **)(v44 + v43);
      *(_QWORD *)(v44 + v43) = v73;

      v75 = *(_QWORD *)(v44 + v43);
      if (!v75)
        goto LABEL_29;
      v76 = v75 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate;
      *(_QWORD *)(v76 + 8) = &off_1005D21F8;
      swift_unknownObjectWeakAssign(v76, v44);
      v45 = *(void **)(v44 + v43);
      if (v45)
      {
LABEL_27:
        v77 = v45;
        sub_1004894FC(v89);

      }
      else
      {
LABEL_29:
        __break(1u);
      }
    }
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v16);
  LODWORD(v92) = URL.startAccessingSecurityScopedResource()();
  v55 = sub_10006922C(&qword_100647BF8);
  inited = swift_initStackObject(v55, v103);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(inited + 32) = NSURLIsDirectoryKey;
  *(_QWORD *)(inited + 40) = NSURLIsPackageKey;
  v57 = NSURLIsDirectoryKey;
  v58 = NSURLIsPackageKey;
  sub_1003FCE00(inited);
  v60 = v59;
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 2, v61);
  v62 = v95;
  URL.promisedItemResourceValues(forKeys:)(v60);
  v63 = swift_bridgeObjectRelease(v60);
  v64 = URLResourceValues.isDirectory.getter(v63);
  v65 = URLResourceValues.isPackage.getter();
  if (v65 == 2)
  {
    v66 = v88;
    v67 = v87;
    v68 = v92;
    if ((v64 & 1) == 0)
      goto LABEL_20;
LABEL_18:
    v69 = *(void **)(v86 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController);
    if (v69)
    {
      *(_QWORD *)(v86 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController) = 0;
      aBlock[4] = (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:);
      v102 = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D2B48;
      v70 = _Block_copy(aBlock);
      swift_release(v102);
      objc_msgSend(v69, "dismissViewControllerAnimated:completion:", 1, v70);
      _Block_release(v70);

    }
    goto LABEL_22;
  }
  v66 = v88;
  v67 = v87;
  v68 = v92;
  if ((v64 & 1) != 0 && (v65 & 1) == 0)
    goto LABEL_18;
LABEL_20:
  if ((v85 & 1) != 0)
  {
    v71 = objc_msgSend((id)objc_opt_self(DOCFeature), "quickLookInSeparateProcess");
    v72 = (uint64_t)v83;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v83, v21, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v72, 0, 1, v16);
    sub_10031D5F4(v72, 0, v71, 0, 0);
    sub_10000CB4C(v72, &qword_100643470);
  }
LABEL_22:
  (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v66);
  if ((v68 & 1) != 0)
    URL.stopAccessingSecurityScopedResource()();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
}

uint64_t sub_10020B24C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  dispatch_group_t v23;
  void *v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  dispatch_group_t v46;
  uint64_t v47;
  _QWORD v49[2];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  dispatch_group_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD aBlock[5];
  uint64_t v70;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v50 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v65 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v64 = (char *)v49 - v12;
  v13 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v13);
  v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = swift_allocObject(&unk_1005D2478, 24, 7);
  *(_QWORD *)(v67 + 16) = _swiftEmptyArrayStorage;
  v66 = dispatch_group_create();
  v16 = *(_QWORD *)(a1 + 16);
  v54 = v3;
  v55 = v2;
  v53 = v5;
  v52 = v6;
  v49[0] = a1;
  if (v16)
  {
    v17 = *(unsigned __int8 *)(v9 + 80);
    v18 = a1 + ((v17 + 32) & ~v17);
    v62 = *(_QWORD *)(v9 + 72);
    v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
    v59 = v17 | 7;
    v60 = (v17 + 24) & ~v17;
    v58 = (v10 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v57 = v58 + 8;
    swift_bridgeObjectRetain(a1);
    v63 = v9;
    v61 = v19;
    v20 = v64;
    while (1)
    {
      v19(v15, v18, v8);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v21(v15, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
        break;
      v56 = v21;
      v22 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v22(v20, v15, v8);
      v23 = v66;
      dispatch_group_enter(v66);
      v24 = (void *)objc_opt_self(FPItemManager);
      v25 = objc_msgSend(v24, "defaultManager", v49[0]);
      v26 = v15;
      v27 = v65;
      v19(v65, v20, v8);
      v28 = swift_allocObject(&unk_1005D2AB8, v57, v59);
      *(_QWORD *)(v28 + 16) = v23;
      v29 = v27;
      v15 = v26;
      v22((char *)(v28 + v60), v29, v8);
      *(_QWORD *)(v28 + v58) = v67;
      v30 = v23;
      v9 = v63;
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)(v20, sub_10021C44C, v28);

      v31 = v28;
      v19 = v61;
      swift_release(v31);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v8);
      v18 += v62;
      if (!--v16)
      {
        v56(v26, 1, 1, v8);
        break;
      }
    }
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain(a1);
    v32(v15, 1, 1, v8);
  }
  swift_bridgeObjectRelease(v49[0]);
  v33 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  v35 = swift_allocObject(&unk_1005D2A68, 32, 7);
  v36 = v67;
  v37 = (void *)v49[1];
  *(_QWORD *)(v35 + 16) = v67;
  *(_QWORD *)(v35 + 24) = v37;
  aBlock[4] = sub_10021C3B4;
  v70 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D2A80;
  v38 = _Block_copy(aBlock);
  swift_retain();
  v39 = v37;
  v40 = v50;
  static DispatchQoS.unspecified.getter(v39);
  v68 = _swiftEmptyArrayStorage;
  v41 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_10006922C((uint64_t *)&unk_100647540);
  v43 = sub_1000791AC();
  v44 = v53;
  v45 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v68, v42, v43, v55, v41);
  v46 = v66;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v40, v44, v34, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v52);
  v47 = v70;
  swift_release(v36);
  return swift_release(v47);
}

void sub_10020B73C(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t *v34;
  os_log_type_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  int v40;
  uint64_t *v41;
  uint64_t v42;
  os_log_t v43;
  dispatch_group_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v44 = a3;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess(a5 + 16, v46, 33, 0);
    v18 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((*(_QWORD *)(a5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((*(_QWORD *)(a5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);
    swift_endAccess(v46);
  }
  else
  {
    v22 = Logger.UI.unsafeMutableAddressor(v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
    swift_errorRetain(a2);
    v23 = swift_errorRetain(a2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      v40 = v25;
      v43 = v24;
      v26 = swift_slowAlloc(22, -1);
      v41 = (uint64_t *)swift_slowAlloc(8, -1);
      v42 = swift_slowAlloc(32, -1);
      v46[0] = v42;
      *(_DWORD *)v26 = 136315394;
      v39[1] = v26 + 4;
      v27 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v9, v27);
      v30 = v29;
      v45 = sub_1000544FC(v28, v29, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v31);
      *(_WORD *)(v26 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain(a2);
        v32 = _swift_stdlib_bridgeErrorToNSError(a2);
        v45 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
      }
      else
      {
        v45 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
        v32 = 0;
      }
      v33 = v40;
      v34 = v41;
      *v41 = v32;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v35 = v33;
      v36 = v43;
      _os_log_impl((void *)&_mh_execute_header, v43, v35, "Failed to fetch item to reveal from URL: %s with error: %@", (uint8_t *)v26, 0x16u);
      v37 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v34, 1, v37);
      swift_slowDealloc(v34, -1, -1);
      v38 = v42;
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  dispatch_group_leave(v44);
}

__n128 sub_10020BB08(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __n128 result;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  Class isa;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  _BYTE v17[24];
  _BYTE v18[24];

  v4 = (uint64_t *)(a1 + 16);
  result = swift_beginAccess(a1 + 16, v18, 0, 0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!((unint64_t)v6 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      return result;
    goto LABEL_3;
  }
  if (v6 < 0)
    v14 = v6;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v15 = _CocoaArrayWrapper.endIndex.getter(v14);
  result = swift_bridgeObjectRelease(v6);
  if (v15 >= 1)
  {
LABEL_3:
    v7 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v7)
    {
      v8 = objc_msgSend(v7, "splitBrowserViewController", result.n128_f64[0]);
      v9 = objc_msgSend(v8, "fullDocumentManagerViewController");

      v10 = objc_msgSend(v9, "effectiveBrowserViewController");
      if (v10)
      {
        swift_beginAccess(v4, v17, 0, 0);
        v11 = *v4;
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        swift_bridgeObjectRetain(v11);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v11);
        v16[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
        v16[5] = 0;
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 1107296256;
        v16[2] = sub_10016C02C;
        v16[3] = &unk_1005D2AD0;
        v13 = _Block_copy(v16);
        objc_msgSend(v10, "revealWithItems:selectEvenIfVisible:completionBlock:", isa, 1, v13);
        _Block_release(v13);

      }
    }
  }
  return result;
}

void sub_10020BCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  NSURL *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  _QWORD aBlock[3];
  void *v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  _QWORD v53[2];
  _BYTE v54[24];

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&aBlock[-1] - v14;
  a3 += 16;
  swift_beginAccess(a3, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return;
  v17 = (void *)Strong;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v32 = a1;
    else
      v32 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v32))
      goto LABEL_4;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v18)
    {
LABEL_4:
      if ((a1 & 0xC000000000000001) != 0)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      }
      else
      {
        if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v19 = *(id *)(a1 + 32);
      }
      v20 = v19;
      v21 = objc_msgSend(v19, "fileURL", swift_bridgeObjectRelease(a1).n128_f64[0]);

      static URL._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v22(v8, v12, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        v22(v15, v8, v9);
        v48 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
        URL._bridgeToObjectiveC()(v23);
        v25 = v24;
        v26 = swift_allocObject(&unk_1005D2310, 24, 7);
        swift_unknownObjectWeakInit(v26 + 16);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
        v27 = *(unsigned __int8 *)(v10 + 80);
        v28 = (v27 + 24) & ~v27;
        v29 = swift_allocObject(&unk_1005D2838, v28 + v11, v27 | 7);
        *(_QWORD *)(v29 + 16) = v26;
        v22((char *)(v29 + v28), v12, v9);
        v51 = sub_10021C0DC;
        v52 = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100083540;
        v50 = &unk_1005D2850;
        v30 = _Block_copy(aBlock);
        swift_release(v52);
        v31 = v48;
        objc_msgSend(v48, "fetchItemForURL:completionHandler:", v25, v30);
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        return;
      }
      goto LABEL_14;
    }
  }
  v33 = swift_bridgeObjectRelease(a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v33);
LABEL_14:
  sub_10000CB4C((uint64_t)v8, &qword_100643470);
  sub_1000271D4(a2, (uint64_t)aBlock, &qword_100642730);
  if (v50)
  {
    v34 = type metadata accessor for DOCActionContext();
    if ((swift_dynamicCast(v53, aBlock, (char *)&type metadata for Any + 8, v34, 6) & 1) != 0)
    {
      v35 = (char *)v53[0];
      v36 = OBJC_IVAR____TtC5Files16DOCActionContext_userInfo;
      v37 = *(_QWORD *)(v53[0] + OBJC_IVAR____TtC5Files16DOCActionContext_userInfo);
      if (*(_QWORD *)(v37 + 16)
        && (v38 = sub_10007EF08(0xD000000000000036, 0x8000000100519820), (v39 & 1) != 0)
        && (sub_100069BD8(*(_QWORD *)(v37 + 56) + 32 * v38, (uint64_t)aBlock),
            v40 = sub_10004F2F0(0, (unint64_t *)&unk_1006442E0, DOCConcreteLocation_ptr),
            (swift_dynamicCast(v53, aBlock, (char *)&type metadata for Any + 8, v40, 6) & 1) != 0))
      {
        v41 = (void *)v53[0];
        v42 = *(_QWORD *)&v35[v36];
        if (*(_QWORD *)(v42 + 16) && (v43 = sub_10007EF08(0xD000000000000035, 0x8000000100519860), (v44 & 1) != 0))
        {
          sub_100069BD8(*(_QWORD *)(v42 + 56) + 32 * v43, (uint64_t)aBlock);
          v45 = swift_dynamicCast(v53, aBlock, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          if (v45)
            v46 = v53[0];
          else
            v46 = 0;
          if (v45)
            v47 = v53[1];
          else
            v47 = 0;
        }
        else
        {
          v46 = 0;
          v47 = 0;
        }
        sub_10020CAB4(v41, v46, v47);

        swift_bridgeObjectRelease(v47);
      }
      else
      {

      }
    }
    else
    {

    }
  }
  else
  {

    sub_10000CB4C((uint64_t)aBlock, &qword_100642730);
  }
}

void sub_10020C1BC(void *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t aBlock[5];
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[24];

  v51 = a2;
  v52 = a4;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v46[-v11];
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3 += 16;
  swift_beginAccess(a3, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v18 = (void *)Strong;
    if (a1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v52, v6);
      v19 = *(unsigned __int8 *)(v7 + 80);
      v20 = (v19 + 32) & ~v19;
      v21 = swift_allocObject(&unk_1005D2888, v20 + v8, v19 | 7);
      *(_QWORD *)(v21 + 16) = a1;
      *(_QWORD *)(v21 + 24) = v18;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
      aBlock[4] = (uint64_t)sub_10021C0EC;
      v54 = v21;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D28A0;
      v22 = _Block_copy(aBlock);
      v23 = v54;
      v24 = a1;
      v25 = v18;
      swift_release(v23);
      DOCRunInMainThread(v22);

      _Block_release(v22);
    }
    else
    {
      v26 = Logger.Application.unsafeMutableAddressor(Strong);
      v27 = v14;
      v28 = v13;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, v26, v13);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v12, v52, v6);
      v29 = v51;
      swift_errorRetain(v51);
      v30 = swift_errorRetain(v29);
      v52 = v16;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.error.getter(v31);
      v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = swift_slowAlloc(32, -1);
        v50 = v28;
        v35 = v34;
        v48 = swift_slowAlloc(96, -1);
        aBlock[0] = v48;
        *(_DWORD *)v35 = 136315650;
        v47 = v33;
        v55 = sub_1000544FC(0xD000000000000017, 0x80000001005198A0, aBlock);
        v49 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
        *(_WORD *)(v35 + 12) = 2080;
        v36 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v37 = dispatch thunk of CustomStringConvertible.description.getter(v6, v36);
        v39 = v38;
        v55 = sub_1000544FC(v37, v38, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
        v40 = swift_bridgeObjectRelease(v39);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v12, v6, v40);
        *(_WORD *)(v35 + 22) = 2080;
        v55 = v29;
        swift_errorRetain(v29);
        v41 = sub_10006922C((uint64_t *)&unk_1006434A0);
        v42 = String.init<A>(describing:)(&v55, v41);
        v44 = v43;
        v55 = sub_1000544FC(v42, v43, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
        swift_bridgeObjectRelease(v44);
        swift_errorRelease(v29);
        swift_errorRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v47, "%s item was nil for URL: %s error: %s", (uint8_t *)v35, 0x20u);
        v45 = v48;
        swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v45, -1, -1);
        swift_slowDealloc(v35, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v52, v50);
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
        swift_errorRelease(v29);
        swift_errorRelease(v29);

        (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v52, v28);
      }
    }
  }
}

void sub_10020C624(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  if (objc_msgSend(a1, "isFolder"))
  {
    sub_10020C724(a3);
    return;
  }
  sub_10031F91C(a3);
  if (v6)
  {
    v7 = v6;
    v8 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
    if (v8)
      goto LABEL_8;
    goto LABEL_9;
  }
  v9 = a1;
  sub_1003207BC(v9);
  v7 = v10;

  if (v7)
  {
    v8 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
    if (v8)
    {
LABEL_8:
      v11 = objc_msgSend(v8, "windowScene");
LABEL_10:
      v12 = v11;
      sub_10033AFC8(v7, v11);

      return;
    }
LABEL_9:
    v11 = 0;
    goto LABEL_10;
  }
  sub_10020C914(a3, 0);
}

void sub_10020C724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  NSURL *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions), "init");
  v7 = *(id *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  v8 = v6;
  if (v7)
    v7 = objc_msgSend(v7, "windowScene");
  objc_msgSend(v6, "setRequestingScene:", v7);

  v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  URL._bridgeToObjectiveC()(v10);
  v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = swift_allocObject(&unk_1005D28D8, v14 + v5, v13 | 7);
  *(_QWORD *)(v15 + 16) = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_10021C170;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005D28F0;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  v18 = v6;
  swift_release(v17);
  objc_msgSend(v9, "fetchItemForURL:completionHandler:", v12, v16);
  _Block_release(v16);

}

void sub_10020C914(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[5];
  uint64_t v17;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  URL._bridgeToObjectiveC()(v8);
  v10 = v9;
  v11 = swift_allocObject(&unk_1005D2310, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 25) & ~v12;
  v14 = swift_allocObject(&unk_1005D2338, v13 + v6, v12 | 7);
  *(_QWORD *)(v14 + 16) = v11;
  *(_BYTE *)(v14 + 24) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10021ABC4;
  v17 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100083540;
  aBlock[3] = &unk_1005D2350;
  v15 = _Block_copy(aBlock);
  swift_release(v17);
  objc_msgSend(v7, "fetchItemForURL:completionHandler:", v10, v15);
  _Block_release(v15);

}

uint64_t sub_10020CAB4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  void ***v24;
  void ***v25;
  void **v26;
  void **v27;
  uint64_t v28;
  void ***v29;
  void ***v30;
  void **v31;
  void **v32;
  Swift::Int v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  Class v44;
  _QWORD *v45;
  os_log_t v46;
  void *v47;
  void *v48;
  _QWORD *v49;
  NSObject *v50;
  id v51;
  id v52;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  os_log_t v66;
  void *v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  os_log_t v72;
  void *v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  void *v81;
  void (*v82)();
  _QWORD *v83;
  uint64_t v84;
  char v85[64];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions), "init");
  v12 = *(id *)(v3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  v13 = v11;
  if (v12)
    v12 = objc_msgSend(v12, "windowScene");
  -[NSObject setRequestingScene:](v11, "setRequestingScene:", v12);

  v14 = (void *)objc_opt_self(NSKeyedArchiver);
  v78 = 0;
  v15 = objc_msgSend(v14, "archivedDataWithRootObject:requiringSecureCoding:error:", a1, 1, &v78);
  v16 = v78;
  if (v15)
  {
    v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v70 = v18;
    v71 = v17;

    v19 = objc_allocWithZone((Class)NSUserActivity);
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "initWithActivityType:", v20);

    v22 = sub_10006922C(&qword_100643CC0);
    inited = swift_initStackObject(v22, v85);
    v68 = xmmword_1004D4CE0;
    *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
    v24 = (void ***)DOCUserActivityLocationKey.unsafeMutableAddressor();
    v73 = a1;
    v25 = v24;
    v27 = *v24;
    v26 = v24[1];
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v26;
    v28 = swift_bridgeObjectRetain(v26);
    v29 = (void ***)DOCUserActivityTagNameKey.unsafeMutableAddressor(v28);
    v69 = a2;
    v72 = v11;
    v30 = v29;
    v32 = *v29;
    v31 = v29[1];
    *(_QWORD *)(inited + 48) = v32;
    *(_QWORD *)(inited + 56) = v31;
    swift_bridgeObjectRetain(v31);
    v33 = sub_1003F98B8(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 2, &type metadata for String);
    isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "setRequiredUserInfoKeys:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

    v35 = sub_10006922C((uint64_t *)&unk_100651EC0);
    v36 = swift_initStackObject(v35, &v84);
    *(_OWORD *)(v36 + 16) = v68;
    v37 = (uint64_t)v25[1];
    v78 = *v25;
    v79 = v37;
    swift_bridgeObjectRetain(v37);
    AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v36 + 96) = &type metadata for Data;
    v39 = v70;
    v38 = v71;
    *(_QWORD *)(v36 + 72) = v71;
    *(_QWORD *)(v36 + 80) = v39;
    v40 = (uint64_t)v30[1];
    v78 = *v30;
    v79 = v40;
    swift_bridgeObjectRetain(v40);
    sub_10012F5E0(v38, v39);
    AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v36 + 168) = &type metadata for String;
    v41 = v69;
    if (!a3)
      v41 = 0;
    v42 = 0xE000000000000000;
    if (a3)
      v42 = a3;
    *(_QWORD *)(v36 + 144) = v41;
    *(_QWORD *)(v36 + 152) = v42;
    swift_bridgeObjectRetain(a3);
    v43 = sub_1003F1838(v36);
    v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "addUserInfoEntriesFromDictionary:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

    v45 = (_QWORD *)swift_allocObject(&unk_1005D29C8, 40, 7);
    v46 = v72;
    v47 = v73;
    v45[2] = v21;
    v45[3] = v46;
    v45[4] = v47;
    v82 = sub_10021C378;
    v83 = v45;
    v78 = _NSConcreteStackBlock;
    v79 = 1107296256;
    v80 = sub_10004A82C;
    v81 = &unk_1005D29E0;
    v48 = _Block_copy(&v78);
    v49 = v83;
    v50 = v46;
    v51 = v21;
    v52 = v47;
    swift_release(v49);
    DOCRunInMainThread(v48);

    _Block_release(v48);
    return sub_1000D4C00(v38, v39);
  }
  else
  {
    v54 = v16;
    v55 = _convertNSErrorToError(_:)(v16);

    v57 = swift_willThrow(v56);
    v58 = Logger.Application.unsafeMutableAddressor(v57);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v58, v7);
    swift_errorRetain(v55);
    v59 = swift_errorRetain(v55);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.error.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = swift_slowAlloc(22, -1);
      v73 = (void *)swift_slowAlloc(64, -1);
      v78 = (void **)v73;
      *(_DWORD *)v62 = 136315394;
      v72 = v60;
      v76 = sub_1000544FC(0xD00000000000001BLL, 0x8000000100519910, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      *(_WORD *)(v62 + 12) = 2080;
      v71 = v62 + 14;
      swift_getErrorValue(v55, &v75, v74);
      v63 = Error.localizedDescription.getter(v74[1], v74[2]);
      v65 = v64;
      v76 = sub_1000544FC(v63, v64, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      swift_bridgeObjectRelease(v65);
      swift_errorRelease(v55);
      swift_errorRelease(v55);
      v66 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, v61, "%s: Failed to encode DOCConcrete Location in to data. Error: %s", (uint8_t *)v62, 0x16u);
      v67 = v73;
      swift_arrayDestroy(v73, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v62, -1, -1);

      swift_errorRelease(v55);
    }
    else
    {

      swift_errorRelease(v55);
      swift_errorRelease(v55);
      swift_errorRelease(v55);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10020D0D8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;

  sub_1000271D4(a1, (uint64_t)&v16, &qword_100642730);
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_20;
  v1 = sub_10006922C((uint64_t *)&unk_1006444E0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v1, 6) & 1) == 0)
    return 0;
  v2 = v15;
  if (*(_QWORD *)(v15 + 16) && (v3 = sub_10007EF08(0x7365646F4E636F64, 0xE800000000000000), (v4 & 1) != 0))
  {
    sub_100069BD8(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_20:
    sub_10000CB4C((uint64_t)&v16, &qword_100642730);
    return 0;
  }
  v5 = sub_10006922C((uint64_t *)&unk_100643CB0);
  if ((swift_dynamicCast(&v15, &v16, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
  {
    v6 = v15;
    if (v15 >> 62)
      goto LABEL_24;
    v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
    while (v7)
    {
      v8 = 4;
      while (1)
      {
        v9 = v8 - 4;
        if ((v6 & 0xC000000000000001) == 0)
          break;
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v6);
        v11 = v8 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_23;
LABEL_17:
        v12 = objc_msgSend(v10, "doc_isCollaborationInvitation");
        swift_unknownObjectRelease(v10);
        if ((v12 & 1) == 0)
        {
          swift_bridgeObjectRelease_n(v6, 2);
          return 1;
        }
        ++v8;
        if (v11 == v7)
          goto LABEL_19;
      }
      v10 = *(void **)(v6 + 8 * v8);
      swift_unknownObjectRetain(v10);
      v11 = v8 - 3;
      if (!__OFADD__(v9, 1))
        goto LABEL_17;
LABEL_23:
      __break(1u);
LABEL_24:
      if (v6 < 0)
        v14 = v6;
      else
        v14 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    }
LABEL_19:
    swift_bridgeObjectRelease_n(v6, 2);
  }
  return 0;
}

void sub_10020D2C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[5];
  uint64_t v26;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v15))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a1);
    v17 = Logger.Application.unsafeMutableAddressor(v16);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v24 = sub_1000544FC(0xD000000000000017, 0x8000000100519790, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: items was empty.", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v6)
    goto LABEL_11;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(a1 + 32);
LABEL_6:
    v8 = v7;
    swift_bridgeObjectRelease(a1);
    v9 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
    v10 = swift_allocObject(&unk_1005D2310, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = swift_allocObject(&unk_1005D2720, 32, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v8;
    aBlock[4] = (uint64_t)sub_10021C024;
    v26 = v11;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100175118;
    aBlock[3] = (uint64_t)&unk_1005D2738;
    v12 = _Block_copy(aBlock);
    v13 = v26;
    v14 = v8;
    swift_release(v13);
    objc_msgSend(v9, "fetchURLForItem:completionHandler:", v14, v12);
    _Block_release(v12);

    return;
  }
  __break(1u);
}

uint64_t sub_10020D5CC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char **v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char **v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock[5];
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[24];

  v55 = a4;
  v56 = a2;
  v57 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  a3 += 16;
  swift_beginAccess(a3, v61, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v20 = (void *)result;
    sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      v21 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
      v22 = Logger.Application.unsafeMutableAddressor(v21);
      v23 = v6;
      v24 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v22, v57);
      v25 = v55;
      v26 = v56;
      swift_errorRetain(v56);
      v27 = v25;
      v28 = swift_errorRetain(v26);
      v29 = Logger.logObject.getter(v28);
      v30 = static os_log_type_t.error.getter(v29);
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc(32, -1);
        v55 = v8;
        v32 = v31;
        v51 = (char **)swift_slowAlloc(8, -1);
        v54 = swift_slowAlloc(64, -1);
        aBlock[0] = v54;
        *(_DWORD *)v32 = 136315650;
        v52 = v29;
        v60 = sub_1000544FC(0xD000000000000017, 0x8000000100519790, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61);
        *(_WORD *)(v32 + 12) = 2112;
        v60 = (uint64_t)v27;
        v33 = v27;
        v53 = v23;
        v34 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61);
        v35 = v51;
        *v51 = v27;

        *(_WORD *)(v32 + 22) = 2080;
        v60 = v26;
        swift_errorRetain(v26);
        v36 = sub_10006922C((uint64_t *)&unk_1006434A0);
        v37 = String.init<A>(describing:)(&v60, v36);
        v39 = v38;
        v60 = sub_1000544FC(v37, v38, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, v61);
        swift_bridgeObjectRelease(v39);
        swift_errorRelease(v26);
        swift_errorRelease(v26);
        v40 = v52;
        _os_log_impl((void *)&_mh_execute_header, v52, v30, "%s: Failed to fetch URL for: %@ error: %s", (uint8_t *)v32, 0x20u);
        v41 = sub_10006922C(&qword_100643AB0);
        swift_arrayDestroy(v35, 1, v41);
        swift_slowDealloc(v35, -1, -1);
        v42 = v54;
        swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v32, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v24);
      }
      else
      {

        swift_errorRelease(v26);
        swift_errorRelease(v26);

        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v24);
      }
    }
    else
    {
      v43 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v43(v18, v11, v12);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
      v44 = *(unsigned __int8 *)(v13 + 80);
      v45 = (v44 + 24) & ~v44;
      v46 = swift_allocObject(&unk_1005D2770, v45 + v14, v44 | 7);
      *(_QWORD *)(v46 + 16) = v20;
      v43((char *)(v46 + v45), v15, v12);
      aBlock[4] = (uint64_t)sub_10021C030;
      v59 = v46;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D2788;
      v47 = _Block_copy(aBlock);
      v48 = v59;
      v49 = v20;
      swift_release(v48);
      DOCRunInMainThread(v47);
      _Block_release(v47);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  return result;
}

void sub_10020DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v7)
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, a2, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    v10 = v7;
    sub_10031D5F4((uint64_t)v6, 0, 0, 0, 0);

    sub_10000CB4C((uint64_t)v6, &qword_100643470);
  }
}

void sub_10020DBA4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD, uint64_t, void **);
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, void **);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  void (*v68)(char *, char *, uint64_t, __n128);
  char *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  __n128 v81;
  void (*v82)(char *, uint64_t, __n128);
  void **v83;
  char *v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, _QWORD, uint64_t, void **);
  unint64_t v92;
  uint64_t v93;
  char v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  id v101;
  void (*v102)(uint64_t, _QWORD, uint64_t, void **);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  id v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  void **v123;
  uint64_t v124;
  _QWORD v125[3];
  void **aBlock;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  void *v129;
  uint64_t (*v130)();
  _QWORD *v131;
  __int128 v132;
  __int128 v133;

  v116 = type metadata accessor for Logger(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v3);
  v110 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v113 = (uint64_t)&v102 - v6;
  v7 = type metadata accessor for URL(0);
  v122 = *(_QWORD *)(v7 - 8);
  v123 = (void **)v7;
  __chkstk_darwin(v7);
  v112 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v118 = *(_QWORD *)(v9 - 8);
  v119 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v117 = (char *)&v102 - v13;
  v14 = type metadata accessor for DispatchTimeInterval(0);
  v120 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v111 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v102 - v17;
  __chkstk_darwin(v19);
  v121 = (void (**)(uint64_t, _QWORD, uint64_t, void **))((char *)&v102 - v20);
  v21 = type metadata accessor for DispatchQoS.QoSClass(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v108 = v14;
    v28 = a1;
    v29 = objc_msgSend(v28, "userInfo");
    if (v29)
    {
      v30 = v29;
      v107 = v18;
      v109 = v28;
      v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v32 = *(_QWORD *)(v124 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey + 8);
      v125[0] = *(_QWORD *)(v124 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey);
      v125[1] = v32;
      swift_bridgeObjectRetain(v32);
      AnyHashable.init<A>(_:)(v125, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v31 + 16) && (v33 = sub_100067654((uint64_t)&aBlock), (v34 & 1) != 0))
      {
        sub_100069BD8(*(_QWORD *)(v31 + 56) + 32 * v33, (uint64_t)&v132);
      }
      else
      {
        v132 = 0u;
        v133 = 0u;
      }
      sub_100067748((uint64_t)&aBlock);
      swift_bridgeObjectRelease(v31);
      if (*((_QWORD *)&v133 + 1))
      {
        if ((swift_dynamicCast(&aBlock, &v132, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
        {

          return;
        }
        v36 = (uint64_t)aBlock;
        v35 = v127;
        v37 = swift_allocBox(v3);
        v38 = *(void (**)(uint64_t, _QWORD, uint64_t, void **))(v122 + 56);
        v103 = v39;
        v102 = v38;
        v38(v39, 1, 1, v123);
        v40 = (_QWORD *)swift_allocObject(&unk_1005D26D0, 40, 7);
        v40[2] = v36;
        v40[3] = v35;
        v40[4] = v37;
        v130 = sub_10021C014;
        v131 = v40;
        aBlock = _NSConcreteStackBlock;
        v127 = 1107296256;
        v128 = sub_10004A82C;
        v129 = &unk_1005D26E8;
        v41 = _Block_copy(&aBlock);
        *(_QWORD *)&v132 = _swiftEmptyArrayStorage;
        v105 = v36;
        v106 = v35;
        sub_10012F5E0(v36, v35);
        v42 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v104 = v37;
        swift_retain();
        v43 = sub_10006922C((uint64_t *)&unk_100647540);
        v44 = sub_1000791AC();
        dispatch thunk of SetAlgebra.init<A>(_:)(&v132, v43, v44, v25, v42);
        v45 = type metadata accessor for DispatchWorkItem(0);
        swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
        v46 = DispatchWorkItem.init(flags:block:)(v27, v41);
        swift_release(v131);
        sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
        (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, enum case for DispatchQoS.QoSClass.userInitiated(_:), v21);
        v47 = (void *)static OS_dispatch_queue.global(qos:)(v24);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
        OS_dispatch_queue.async(execute:)(v46);

        v48 = v120;
        v49 = v121;
        *v121 = 2;
        v50 = v108;
        v51 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(v48 + 104))(v49, enum case for DispatchTimeInterval.seconds(_:), v108);
        static DispatchTime.now()(v51);
        v52 = v117;
        + infix(_:_:)(v11, v49);
        v53 = v119;
        v54 = *(void (**)(char *, uint64_t))(v118 + 8);
        v54(v11, v119);
        v55 = dispatch thunk of DispatchWorkItem.wait(timeout:)(v52) & 1;
        v54(v52, v53);
        v56 = static DispatchTimeoutResult.== infix(_:_:)(v55, 0);
        if ((v56 & 1) == 0)
        {
          v124 = v46;
          v63 = Logger.Application.unsafeMutableAddressor(v56);
          v64 = v115;
          v65 = v114;
          v66 = v116;
          (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v114, v63, v116);
          v67 = v49;
          v68 = *(uint64_t (**)(char *, _QWORD *, uint64_t))(v48 + 16);
          v69 = v107;
          v70 = v68(v107, v67, v50);
          v71 = Logger.logObject.getter(v70);
          v72 = static os_log_type_t.error.getter(v71);
          if (os_log_type_enabled(v71, v72))
          {
            v73 = swift_slowAlloc(22, -1);
            v123 = (void **)swift_slowAlloc(64, -1);
            aBlock = v123;
            *(_DWORD *)v73 = 136315394;
            *(_QWORD *)&v132 = sub_1000544FC(0xD000000000000017, 0x8000000100519790, (uint64_t *)&aBlock);
            v74 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 8);
            *(_WORD *)(v73 + 12) = 2080;
            v75 = v111;
            ((void (*)(char *, char *, uint64_t, __n128))v68)(v111, v69, v50, v74);
            v76 = v75;
            v77 = v50;
            v78 = String.init<A>(describing:)(v76, v50);
            v80 = v79;
            *(_QWORD *)&v132 = sub_1000544FC(v78, v79, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, (char *)&v132 + 8);
            v81 = swift_bridgeObjectRelease(v80);
            v82 = *(void (**)(char *, uint64_t, __n128))(v48 + 8);
            v82(v69, v77, v81);
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s: Bookmark data resolution has timed out (max %s", (uint8_t *)v73, 0x16u);
            v83 = v123;
            swift_arrayDestroy(v123, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v83, -1, -1);
            swift_slowDealloc(v73, -1, -1);

            swift_release(v124);
            sub_1000D4C00(v105, v106);
            (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v116);
            ((void (*)(_QWORD *, uint64_t))v82)(v121, v77);
          }
          else
          {

            swift_release(v124);
            v95 = *(void (**)(char *, uint64_t))(v48 + 8);
            v95(v69, v50);
            sub_1000D4C00(v105, v106);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
            v95((char *)v121, v50);
          }
          goto LABEL_23;
        }
        v57 = v102;
        v58 = v103;
        swift_beginAccess(v103, v125, 0, 0);
        v59 = v58;
        v60 = v113;
        sub_1000271D4(v59, v113, &qword_100643470);
        v62 = v122;
        v61 = v123;
        if ((*(unsigned int (**)(uint64_t, uint64_t, void **))(v122 + 48))(v60, 1, v123) == 1)
        {
          (*(void (**)(_QWORD *, uint64_t))(v48 + 8))(v49, v50);

          sub_1000D4C00(v105, v106);
          swift_release(v46);
          sub_10000CB4C(v60, &qword_100643470);
LABEL_23:
          v96 = v104;
LABEL_36:
          swift_release(v96);
          return;
        }
        v84 = v112;
        (*(void (**)(char *, uint64_t, void **))(v62 + 32))(v112, v60, v61);
        v85 = objc_msgSend(v109, "userInfo");
        if (v85)
        {
          v86 = v85;
          v87 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v85, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          v88 = (uint64_t *)DOCUserActivityQuickLookStateRestorationUserInfoKey.unsafeMutableAddressor();
          v90 = *v88;
          v89 = v88[1];
          *(_QWORD *)&v132 = v90;
          *((_QWORD *)&v132 + 1) = v89;
          swift_bridgeObjectRetain(v89);
          AnyHashable.init<A>(_:)(&v132, &type metadata for String, &protocol witness table for String);
          v91 = v57;
          if (*(_QWORD *)(v87 + 16))
          {
            v92 = sub_100067654((uint64_t)&aBlock);
            v93 = v104;
            if ((v94 & 1) != 0)
            {
              sub_100069BD8(*(_QWORD *)(v87 + 56) + 32 * v92, (uint64_t)&v132);
            }
            else
            {
              v132 = 0u;
              v133 = 0u;
            }
          }
          else
          {
            v132 = 0u;
            v133 = 0u;
            v93 = v104;
          }
          sub_100067748((uint64_t)&aBlock);
          swift_bridgeObjectRelease(v87);
          if (*((_QWORD *)&v133 + 1))
          {
            v97 = sub_10006922C((uint64_t *)&unk_100647BC0);
            if (swift_dynamicCast(&aBlock, &v132, (char *)&type metadata for Any + 8, v97, 6))
              v98 = (uint64_t)aBlock;
            else
              v98 = 0;
LABEL_32:
            v99 = *(void **)(v124 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
            if (v99)
            {
              v100 = (uint64_t)v110;
              (*(void (**)(char *, char *, void **))(v62 + 16))(v110, v84, v61);
              v91(v100, 0, 1, v61);
              v101 = v99;
              sub_10031D5F4(v100, 0, 0, 0, v98);

              swift_release(v46);
              swift_bridgeObjectRelease(v98);
              sub_1000D4C00(v105, v106);
              sub_10000CB4C(v100, &qword_100643470);
            }
            else
            {
              swift_release(v46);

              swift_bridgeObjectRelease(v98);
              sub_1000D4C00(v105, v106);
            }
            (*(void (**)(char *, void **))(v62 + 8))(v84, v61);
            (*(void (**)(_QWORD *, uint64_t))(v120 + 8))(v49, v108);
            v96 = v93;
            goto LABEL_36;
          }
        }
        else
        {
          v132 = 0u;
          v133 = 0u;
          v93 = v104;
          v91 = v57;
        }
        sub_10000CB4C((uint64_t)&v132, &qword_100642730);
        v98 = 0;
        goto LABEL_32;
      }

    }
    else
    {
      v132 = 0u;
      v133 = 0u;

    }
    sub_10000CB4C((uint64_t)&v132, &qword_100642730);
  }
}

uint64_t sub_10020E750(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  _QWORD v44[3];
  char v45[8];
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for Logger(0);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  __chkstk_darwin(v6);
  v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_projectBox(a3);
  LOBYTE(v46) = 0;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v19(v13, 1, 1, v14);
  URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)(a1, a2, 0, v13, &v46);
  sub_10000CB4C((uint64_t)v13, &qword_100643470);
  URL.checkResourceIsReachable()();
  if (v20)
  {
    v21 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v22 = Logger.Application.unsafeMutableAddressor(v21);
    v23 = v40;
    v24 = v41;
    v25 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v22, v42);
    sub_10012F5E0(a1, a2);
    swift_errorRetain(v20);
    sub_10012F5E0(a1, a2);
    v26 = swift_errorRetain(v20);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(32, -1);
      v39 = swift_slowAlloc(96, -1);
      v43[0] = v39;
      *(_DWORD *)v29 = 136315650;
      v46 = sub_1000544FC(0xD000000000000017, 0x8000000100519790, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      *(_WORD *)(v29 + 12) = 2080;
      sub_10012F5E0(a1, a2);
      v30 = Data.description.getter(a1, a2);
      v32 = v31;
      sub_1000D4C00(a1, a2);
      v46 = sub_1000544FC(v30, v32, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      swift_bridgeObjectRelease(v32);
      sub_1000D4C00(a1, a2);
      sub_1000D4C00(a1, a2);
      *(_WORD *)(v29 + 22) = 2080;
      swift_getErrorValue(v20, v45, v44);
      v33 = Error.localizedDescription.getter(v44[1], v44[2]);
      v35 = v34;
      v46 = sub_1000544FC(v33, v34, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(v20);
      swift_errorRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: Failed to create document URL from bookmark data or document is unreachable: %s, error: %s", (uint8_t *)v29, 0x20u);
      v36 = v39;
      swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(v20);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v42);
    }
    else
    {
      swift_errorRelease(v20);
      sub_1000D4C00(a1, a2);
      sub_1000D4C00(a1, a2);
      swift_errorRelease(v20);
      swift_errorRelease(v20);

      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v25);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v10, v17, v14);
    v19(v10, 0, 1, v14);
    swift_beginAccess(v18, v43, 1, 0);
    return sub_100118024((uint64_t)v10, v18);
  }
}

id sub_10020EBB0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v27 = v5;
    v14 = v13;
    v26 = swift_slowAlloc(64, -1);
    v29 = v26;
    *(_DWORD *)v14 = 136315394;
    v28 = sub_1000544FC(0xD000000000000022, 0x8000000100519760, &v29);
    *(_QWORD *)&v15 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29).n128_u64[0];
    *(_WORD *)(v14 + 12) = 2080;
    v16 = objc_msgSend(v10, "shortDescription", v15, v14 + 14);
    v25 = v4;
    v17 = v2;
    v18 = v16;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v21 = v20;

    v2 = v17;
    v28 = sub_1000544FC(v19, v21, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);

    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Restore concrete location: %s", (uint8_t *)v14, 0x16u);
    v22 = v26;
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = *(id *)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (result)
    return objc_msgSend(result, "switchToLocation:", v10);
  return result;
}

void sub_10020EE20(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *);
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __n128 v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  unint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v74 - v13;
  v81 = Logger.Application.unsafeMutableAddressor(v15);
  v82 = v9;
  v16 = *(void (**)(char *))(v9 + 16);
  v16(v14);
  v17 = a1;
  swift_bridgeObjectRetain_n(a3, 2);
  v18 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.debug.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v83 = v18;
  v78 = a2;
  if (v21)
  {
    v22 = swift_slowAlloc(32, -1);
    v76 = v16;
    v23 = v22;
    v75 = swift_slowAlloc(96, -1);
    v85 = v75;
    *(_DWORD *)v23 = 136315650;
    v79 = v11;
    v84 = sub_1000544FC(0xD000000000000031, 0x8000000100519720, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    *(_WORD *)(v23 + 12) = 2080;
    v84 = (uint64_t)v18;
    type metadata accessor for DOCIntentLocationType(0);
    v24 = a3;
    v26 = v25;
    v27 = v83;
    v77 = v4;
    v28 = a2;
    v29 = v27;
    v80 = v8;
    v30 = String.init<A>(describing:)(&v84, v26);
    v32 = v31;
    v84 = sub_1000544FC(v30, v31, &v85);
    v11 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);

    v33 = v32;
    a3 = v24;
    v18 = v83;
    swift_bridgeObjectRelease(v33);
    *(_WORD *)(v23 + 22) = 2080;
    swift_bridgeObjectRetain(a3);
    v34 = v28;
    v4 = v77;
    v84 = sub_1000544FC(v34, a3, &v85);
    v8 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Restore semantic location type: %s ID: %s", (uint8_t *)v23, 0x20u);
    v35 = v75;
    swift_arrayDestroy(v75, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v36 = v23;
    v16 = v76;
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v37 = *(void (**)(char *, uint64_t))(v82 + 8);
  v37(v14, v8);
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCIntentLocationTypeRecents);
  v40 = v39;
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v43 = v41;
  if (v38 == v42 && v40 == v41)
  {
    swift_bridgeObjectRelease_n(v40, 2);
    goto LABEL_8;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v43);
  if ((v44 & 1) != 0)
  {
LABEL_8:
    v45 = *(void **)(v4 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v45)
      objc_msgSend(v45, "switchToTab:", 0);
    return;
  }
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCIntentLocationTypeShared);
  v48 = v47;
  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
  v51 = v49;
  if (v46 == v50 && v48 == v49)
  {
    swift_bridgeObjectRelease_n(v48, 2);
    goto LABEL_14;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, v48, v50, v49, 0);
  swift_bridgeObjectRelease(v48);
  v53 = swift_bridgeObjectRelease(v51);
  if ((v52 & 1) != 0)
  {
LABEL_14:
    v54 = *(void **)(v4 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v54)
    {
      v55 = (void *)objc_opt_self(DOCConcreteLocation);
      v56 = v54;
      v57 = objc_msgSend(v55, "sharedItemsLocation");
      objc_msgSend(v56, "switchToLocation:", v57);

    }
    return;
  }
  ((void (*)(char *, uint64_t, uint64_t, __n128))v16)(v11, v81, v8, v53);
  v58 = v83;
  swift_bridgeObjectRetain_n(a3, 2);
  v59 = a3;
  v60 = v58;
  v61 = Logger.logObject.getter(v60);
  v62 = static os_log_type_t.error.getter(v61);
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc(32, -1);
    v79 = v11;
    v64 = v63;
    v65 = swift_slowAlloc(96, -1);
    v85 = v65;
    *(_DWORD *)v64 = 136315650;
    v84 = sub_1000544FC(0xD000000000000031, 0x8000000100519720, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    *(_WORD *)(v64 + 12) = 2080;
    v84 = (uint64_t)v60;
    type metadata accessor for DOCIntentLocationType(0);
    v80 = v8;
    v67 = v66;
    v68 = v60;
    v69 = String.init<A>(describing:)(&v84, v67);
    v71 = v70;
    v84 = sub_1000544FC(v69, v70, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);

    swift_bridgeObjectRelease(v71);
    *(_WORD *)(v64 + 22) = 2080;
    swift_bridgeObjectRetain(v59);
    v84 = sub_1000544FC(v78, v59, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    swift_bridgeObjectRelease_n(v59, 3);
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s: Unexpected location type: %s ID: %s", (uint8_t *)v64, 0x20u);
    swift_arrayDestroy(v65, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v64, -1, -1);

    v72 = v79;
    v73 = v80;
  }
  else
  {

    swift_bridgeObjectRelease_n(v59, 2);
    v72 = v11;
    v73 = v8;
  }
  v37(v72, v73);
}

void sub_10020F490(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  id v25;
  NSString v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  v15 = Logger.Application.unsafeMutableAddressor(v14);
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v53 = (char *)v15;
  v54 = v16;
  ((void (*)(char *))v16)(v13);
  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v52 = v4;
    v22 = v21;
    v56 = v21;
    *(_DWORD *)v20 = 136315394;
    v50 = (uint64_t)v7;
    v55 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100519700, &v56);
    v49 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    v55 = sub_1000544FC(a1, a2, &v56);
    v7 = (char *)v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: Tag ID: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    v23 = v22;
    v4 = v52;
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    v24 = *(void (**)(char *, uint64_t))(v49 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  v24(v13, v4);
  v25 = objc_msgSend((id)objc_opt_self(DOCTagRegistry), "sharedInstance");
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "tagForName:", v26);

  if (v27)
  {
    v54(v10, v53, v4);
    swift_bridgeObjectRetain_n(a2, 2);
    v28 = v27;
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(32, -1);
      v53 = v10;
      v32 = v31;
      v48 = (_QWORD *)swift_slowAlloc(8, -1);
      v50 = swift_slowAlloc(64, -1);
      v56 = v50;
      *(_DWORD *)v32 = 136315650;
      v49 = a1;
      v55 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100519700, &v56);
      v52 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      *(_WORD *)(v32 + 12) = 2112;
      v55 = (uint64_t)v28;
      v33 = v28;
      v54 = (void (*)(char *, char *, uint64_t))v24;
      v34 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      v35 = v48;
      *v48 = v27;

      *(_WORD *)(v32 + 22) = 2080;
      swift_bridgeObjectRetain(a2);
      v55 = sub_1000544FC(v49, a2, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: Found tag: %@ using ID: %s", (uint8_t *)v32, 0x20u);
      v36 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v35, 1, v36);
      swift_slowDealloc(v35, -1, -1);
      v37 = v50;
      swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v32, -1, -1);

      ((void (*)(char *, uint64_t))v54)(v53, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
      v24(v10, v4);
    }
    v44 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithTaggedItemsSourceRepresentedTag:", v28);
    v45 = *(void **)(v51 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v46, "switchToLocation:", v44);

    }
  }
  else
  {
    v54(v7, v53, v4);
    v38 = swift_bridgeObjectRetain_n(a2, 2);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      v42 = a1;
      v43 = swift_slowAlloc(64, -1);
      v56 = v43;
      *(_DWORD *)v41 = 136315394;
      v54 = (void (*)(char *, char *, uint64_t))v24;
      v55 = sub_1000544FC(0xD00000000000001ALL, 0x8000000100519700, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      *(_WORD *)(v41 + 12) = 2080;
      swift_bridgeObjectRetain(a2);
      v55 = sub_1000544FC(v42, a2, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s: Error! Can not find tag by ID: %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      ((void (*)(char *, uint64_t))v54)(v7, v4);
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
      v24(v7, v4);
    }
  }
}

void sub_10020FB84(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t aBlock[5];
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v30 = v2;
    v14 = v13;
    v27 = (_QWORD *)swift_slowAlloc(8, -1);
    v28 = swift_slowAlloc(32, -1);
    aBlock[0] = v28;
    *(_DWORD *)v14 = 136315394;
    v31 = sub_1000544FC(0xD000000000000013, 0x80000001005196E0, aBlock);
    v29 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    *(_WORD *)(v14 + 12) = 2112;
    v31 = (uint64_t)v10;
    v15 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, aBlock);
    v16 = v27;
    *v27 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: location: %@.", (uint8_t *)v14, 0x16u);
    v17 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v16, 1, v17);
    swift_slowDealloc(v16, -1, -1);
    v18 = v28;
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v19 = v14;
    v2 = v30;
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v20 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  v21 = swift_allocObject(&unk_1005D25E0, 32, 7);
  *(_QWORD *)(v21 + 16) = v10;
  *(_QWORD *)(v21 + 24) = v2;
  aBlock[4] = (uint64_t)sub_10021BFC8;
  v33 = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100175118;
  aBlock[3] = (uint64_t)&unk_1005D25F8;
  v22 = _Block_copy(aBlock);
  v23 = v33;
  v24 = v10;
  v25 = v2;
  swift_release(v23);
  objc_msgSend(v20, "fetchURLForItem:completionHandler:", v24, v22);
  _Block_release(v22);

}

uint64_t sub_10020FE90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t aBlock[5];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a4;
  v7 = type metadata accessor for Logger(0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  __chkstk_darwin(v7);
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - v17;
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v19 = sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v20 = Logger.Application.unsafeMutableAddressor(v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v20, v50);
    v21 = a3;
    swift_errorRetain(a2);
    v22 = v21;
    v23 = swift_errorRetain(a2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(32, -1);
      v27 = (_QWORD *)swift_slowAlloc(8, -1);
      v47 = swift_slowAlloc(64, -1);
      aBlock[0] = v47;
      *(_DWORD *)v26 = 136315650;
      v53 = sub_1000544FC(0xD000000000000013, 0x80000001005196E0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *(_WORD *)(v26 + 12) = 2112;
      v53 = (uint64_t)v22;
      v28 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      *v27 = v22;

      *(_WORD *)(v26 + 22) = 2080;
      v53 = a2;
      swift_errorRetain(a2);
      v29 = sub_10006922C((uint64_t *)&unk_1006434A0);
      v30 = String.init<A>(describing:)(&v53, v29);
      v32 = v31;
      v53 = sub_1000544FC(v30, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: got nil URL for item: %@. Error: %s", (uint8_t *)v26, 0x20u);
      v33 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v27, 1, v33);
      swift_slowDealloc(v27, -1, -1);
      v34 = v47;
      swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v48, v50);
  }
  else
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v35(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v36 = *(unsigned __int8 *)(v13 + 80);
    v37 = (v36 + 24) & ~v36;
    v38 = (v14 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject(&unk_1005D2630, v38 + 8, v36 | 7);
    v40 = (void *)v47;
    *(_QWORD *)(v39 + 16) = v47;
    v35((char *)(v39 + v37), v15, v12);
    *(_QWORD *)(v39 + v38) = a3;
    aBlock[4] = (uint64_t)sub_10021BFD4;
    v52 = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10004A82C;
    aBlock[3] = (uint64_t)&unk_1005D2648;
    v41 = _Block_copy(aBlock);
    v42 = v52;
    v43 = a3;
    v44 = v40;
    swift_release(v42);
    DOCRunInMainThread(v41);
    _Block_release(v41);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

void sub_10021031C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v5;
  NSURL *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v3)
  {
    v5 = v3;
    URL._bridgeToObjectiveC()(v6);
    v8 = v7;
    v9 = swift_allocObject(&unk_1005D2680, 24, 7);
    *(_QWORD *)(v9 + 16) = a3;
    v13[4] = sub_10021BFE0;
    v14 = v9;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100175118;
    v13[3] = &unk_1005D2698;
    v10 = _Block_copy(v13);
    v11 = v14;
    v12 = a3;
    swift_release(v11);
    objc_msgSend(v5, "revealDocumentAtURL:importIfNeeded:openDocument:revealContents:updateLastUsedDate:completion:", v8, 0, 0, 1, 1, v10);
    _Block_release(v10);

  }
}

void sub_100210418(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  os_log_t v28;
  uint64_t v29;
  _QWORD v30[3];
  _BYTE v31[8];
  uint64_t v32;
  uint64_t v33;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = swift_errorRetain(a2);
    v10 = Logger.Application.unsafeMutableAddressor(v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
    swift_errorRetain(a2);
    v11 = a3;
    swift_errorRetain(a2);
    v12 = v11;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc(32, -1);
      v26 = (_QWORD *)swift_slowAlloc(8, -1);
      v29 = swift_slowAlloc(64, -1);
      v33 = v29;
      *(_DWORD *)v16 = 136315650;
      v28 = v13;
      v32 = sub_1000544FC(0xD000000000000013, 0x80000001005196E0, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      *(_WORD *)(v16 + 12) = 2112;
      v32 = (uint64_t)v12;
      v17 = v12;
      v27 = v15;
      v18 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      v19 = v26;
      *v26 = v12;

      *(_WORD *)(v16 + 22) = 2080;
      swift_getErrorValue(a2, v31, v30);
      v20 = Error.localizedDescription.getter(v30[1], v30[2]);
      v22 = v21;
      v32 = sub_1000544FC(v20, v21, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
      swift_bridgeObjectRelease(v22);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v23 = v28;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v27, "%s: Failed to reveal folder for item: %@. Error: %s", (uint8_t *)v16, 0x20u);
      v24 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v19, 1, v24);
      swift_slowDealloc(v19, -1, -1);
      v25 = v29;
      swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);

      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_100210708(void *a1, uint64_t a2, unint64_t a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  char v30;

  v6 = objc_msgSend(a1, "sourceIdentifier");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierRecentDocuments);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_15;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_15:

    v29 = (void **)&DOCIntentLocationTypeRecents;
LABEL_16:
    sub_10020EE20(*v29, 0, 0xE000000000000000);
    return;
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierSharedItems);
  v17 = v16;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    goto LABEL_18;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) != 0)
  {
LABEL_18:

    v29 = (void **)&DOCIntentLocationTypeShared;
    goto LABEL_16;
  }
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCDocumentSourceIdentifierTaggedItems);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {

    swift_bridgeObjectRelease_n(v25, 2);
  }
  else
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);

    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v28);
    if ((v30 & 1) == 0)
    {
      sub_10020EBB0(a1);
      return;
    }
  }
  if (a3)
    sub_10020F490(a2, a3);
}

uint64_t sub_100210930(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  void (*v24)(double);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t result;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  id v43;
  NSURL *v44;
  void (**v45)(_QWORD, _QWORD, uint64_t);
  char *v46;
  void *v47;
  void *v48;
  NSURL *v49;
  void *v50;
  void *v51;
  unsigned int v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (*v80)(double);
  char *v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  __n128 v91;
  char *v92;
  void (*v93)(char *, uint64_t, __n128);
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  __n128 v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  NSObject *v101;
  void *v102;
  void (*v103)(char *, uint64_t);
  void (*v104)(char *, uint64_t, __n128);
  uint64_t v105;
  void (*v106)(double);
  char *v107;
  char *v108;
  char *v109;
  id v110;
  void *v111;
  NSObject *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[3];
  char v118[8];
  _QWORD v119[3];
  char v120[8];
  uint64_t v121;
  uint64_t v122;
  id v123;

  v115 = a1;
  v116 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v109 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v112 = ((char *)&v104 - v8);
  v9 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v9);
  v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v104 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v108 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v107 = (char *)&v104 - v19;
  __chkstk_darwin(v20);
  v113 = (char *)&v104 - v21;
  v23 = __chkstk_darwin(v22);
  v24 = *(void (**)(double))(v16 + 16);
  v114 = (char *)&v104 - v25;
  v106 = v24;
  v24(v23);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v26(a2, 1, 1, v15);
  v110 = (id)objc_opt_self(NSFileManager);
  v27 = objc_msgSend(v110, "defaultManager");
  v111 = a3;
  URL._bridgeToObjectiveC()(v28);
  v30 = v29;
  v123 = 0;
  v31 = objc_msgSend(v27, "URLForDirectory:inDomain:appropriateForURL:create:error:", 99, 1, v29, 1, &v123);

  v32 = v123;
  if (!v31)
  {
    v110 = (id)v16;
    v113 = (char *)v15;
    v57 = v123;
    v58 = _convertNSErrorToError(_:)(v32);

    v60 = swift_willThrow(v59);
    v61 = Logger.Application.unsafeMutableAddressor(v60);
    v62 = v116;
    (*(void (**)(NSObject *, uint64_t, uint64_t))(v5 + 16))(v112, v61, v116);
    swift_errorRetain(v58);
    v63 = swift_errorRetain(v58);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc(22, -1);
      v67 = (void *)swift_slowAlloc(64, -1);
      v123 = v67;
      *(_DWORD *)v66 = 136315394;
      v121 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519B50, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      *(_WORD *)(v66 + 12) = 2080;
      swift_getErrorValue(v58, v120, v119);
      v68 = Error.localizedDescription.getter(v119[1], v119[2]);
      v70 = v69;
      v121 = sub_1000544FC(v68, v69, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      swift_bridgeObjectRelease(v70);
      swift_errorRelease(v58);
      swift_errorRelease(v58);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s: could create temporary directory. Error: %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy(v67, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v66, -1, -1);

      swift_errorRelease(v58);
    }
    else
    {
      swift_errorRelease(v58);
      swift_errorRelease(v58);
      swift_errorRelease(v58);

    }
    (*(void (**)(NSObject *, uint64_t))(v5 + 8))(v112, v62);
    v56 = v115;
    v15 = (uint64_t)v113;
    goto LABEL_13;
  }
  v105 = v5;
  v33 = v116;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v32;

  sub_10000CB4C(a2, &qword_100643470);
  v26((uint64_t)v14, 0, 1, v15);
  sub_100070EDC((uint64_t)v14, a2, &qword_100643470);
  sub_1000271D4(a2, (uint64_t)v11, &qword_100643470);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15);
  if ((_DWORD)result != 1)
  {
    v36 = v111;
    v37 = URL.lastPathComponent.getter(result);
    v39 = v38;
    v40 = v113;
    URL.appendingPathComponent(_:)(v37, v38);
    v41 = swift_bridgeObjectRelease(v39);
    v42 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
    v42(v11, v15, v41);
    v43 = objc_msgSend(v110, "defaultManager");
    URL._bridgeToObjectiveC()(v44);
    v45 = (void (**)(_QWORD, _QWORD, uint64_t))v16;
    v46 = v40;
    v48 = v47;
    URL._bridgeToObjectiveC()(v49);
    v51 = v50;
    v123 = 0;
    v52 = objc_msgSend(v43, "moveItemAtURL:toURL:error:", v48, v50, &v123);

    v53 = v123;
    if (v52)
    {
      v54 = v123;
      v55 = v114;
      ((void (*)(char *, uint64_t))v42)(v114, v15);
      ((void (**)(char *, char *, uint64_t))v45)[4](v55, v46, v15);
      v56 = v115;
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v45[4])(v56, v55, v15);
    }
    v104 = v42;
    v110 = v45;
    v71 = v33;
    v72 = v123;
    v73 = _convertNSErrorToError(_:)(v53);

    v75 = swift_willThrow(v74);
    v76 = Logger.Application.unsafeMutableAddressor(v75);
    v77 = v105;
    v78 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v109, v76, v71);
    v79 = v107;
    v80 = v106;
    ((void (*)(char *, void *, uint64_t))v106)(v107, v36, v15);
    v81 = v108;
    ((void (*)(char *, char *, uint64_t))v80)(v108, v46, v15);
    swift_errorRetain(v73);
    v82 = swift_errorRetain(v73);
    v83 = Logger.logObject.getter(v82);
    v84 = v15;
    v85 = static os_log_type_t.error.getter(v83);
    v112 = v83;
    if (os_log_type_enabled(v83, v85))
    {
      v86 = swift_slowAlloc(42, -1);
      v111 = (void *)swift_slowAlloc(128, -1);
      v123 = v111;
      *(_DWORD *)v86 = 136315906;
      v121 = sub_1000544FC(0xD00000000000001FLL, 0x8000000100519B50, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      *(_WORD *)(v86 + 12) = 2080;
      v87 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v88 = dispatch thunk of CustomStringConvertible.description.getter(v84, v87);
      v90 = v89;
      v121 = sub_1000544FC(v88, v89, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      v91 = swift_bridgeObjectRelease(v90);
      v92 = v79;
      v93 = v104;
      v104(v92, v84, v91);
      *(_WORD *)(v86 + 22) = 2080;
      v94 = dispatch thunk of CustomStringConvertible.description.getter(v84, v87);
      v96 = v95;
      v121 = sub_1000544FC(v94, v95, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      v97 = swift_bridgeObjectRelease(v96);
      v93(v81, v84, v97);
      *(_WORD *)(v86 + 32) = 2080;
      swift_getErrorValue(v73, v118, v117);
      v98 = Error.localizedDescription.getter(v117[1], v117[2]);
      v100 = v99;
      v121 = sub_1000544FC(v98, v99, (uint64_t *)&v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      swift_bridgeObjectRelease(v100);
      swift_errorRelease(v73);
      swift_errorRelease(v73);
      v101 = v112;
      _os_log_impl((void *)&_mh_execute_header, v112, v85, "%s: could not move file in at: %s to: %s. Error: %s", (uint8_t *)v86, 0x2Au);
      v102 = v111;
      swift_arrayDestroy(v111, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v102, -1, -1);
      swift_slowDealloc(v86, -1, -1);

      swift_errorRelease(v73);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v109, v116);
      ((void (*)(char *, uint64_t))v93)(v113, v84);
    }
    else
    {

      swift_errorRelease(v73);
      swift_errorRelease(v73);
      v103 = (void (*)(char *, uint64_t))v104;
      ((void (*)(char *, uint64_t))v104)(v81, v15);
      v103(v79, v15);
      swift_errorRelease(v73);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v116);
      v103(v46, v15);
    }
    v56 = v115;
    v15 = v84;
LABEL_13:
    v45 = (void (**)(_QWORD, _QWORD, uint64_t))v110;
    v55 = v114;
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v45[4])(v56, v55, v15);
  }
  __break(1u);
  return result;
}

id sub_100211278()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BrowserSceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t initializeWithCopy for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  v8 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v8;
  return a1;
}

__n128 initializeWithTake for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCWindowSceneSpecification(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCWindowSceneSpecification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCWindowSceneSpecification()
{
  return &type metadata for DOCWindowSceneSpecification;
}

__n128 initializeWithCopy for DOCWindowSceneSpecification.Restrictions(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCWindowSceneSpecification.Restrictions(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DOCWindowSceneSpecification.Restrictions(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCWindowSceneSpecification.Restrictions()
{
  return &type metadata for DOCWindowSceneSpecification.Restrictions;
}

void *sub_100211574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  char *v12;
  void *v13;
  void **v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  _BYTE v25[24];
  char v26[24];

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(char **)(v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v8)
    return 0;
  v9 = (uint64_t)&v8[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  swift_beginAccess(&v8[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL], v26, 0, 0);
  sub_1000271D4(v9, (uint64_t)v7, &qword_100643470);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
    v22 = v8;
    v23 = sub_10000CB4C((uint64_t)v7, &qword_100643470);
    v13 = (void *)URL.absoluteString.getter(v23);

    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    return v13;
  }
  v10 = v8;
  sub_10000CB4C((uint64_t)v7, &qword_100643470);
  v11 = objc_msgSend(v10, "effectiveFullBrowser");
  v12 = (char *)objc_msgSend(v11, "effectiveBrowserViewController");
  v13 = v12;
  if (!v12)
  {

    return v13;
  }
  v14 = (void **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], v25, 0, 0);
  v15 = *v14;
  if (!v15)
  {

    return 0;
  }
  v16 = type metadata accessor for DOCItemCollectionViewController(0);
  if (!swift_dynamicCastClass(v15, v16))
  {

    return 0;
  }
  v17 = v15;

  DOCItemCollectionViewController.getCurrentLocation()();
  v19 = v18;

  if (!v19
    || (v20 = objc_msgSend(v19, "fileProviderItem"), v19, !v20))
  {

    return 0;
  }
  v21 = objc_msgSend(v20, "itemID");
  v13 = (void *)FPItemID.identifierString.getter();

  return v13;
}

void sub_100211834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  id v31;
  __n128 v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v1 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v1);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - v5;
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - v8;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v14)
  {
    v49 = v14;
    v15 = objc_msgSend(v49, "viewIfLoaded");
    if (!v15
      || (v16 = v15, v17 = objc_msgSend(v15, "window"), v16, !v17)
      || (v18 = objc_msgSend(v17, "windowScene"), v17, !v18))
    {

      return;
    }
    v19 = objc_msgSend(v49, "presentedViewController");

    if (v19)
    {
      v20 = objc_msgSend(v49, "presentedViewController");
      v21 = *(void **)&v49[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
      if (v20)
      {
        if (v21)
        {
          v48 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
          sub_10004F2F0(0, (unint64_t *)&qword_1006434D0, UIViewController_ptr);
          v22 = v21;
          v23 = v20;
          v47 = v18;
          v24 = v23;
          v25 = static NSObject.== infix(_:_:)(v23, v22);

          v18 = v47;
          if ((v25 & 1) != 0)
          {
            v26 = *(void **)&v49[v48];
            if (v26)
            {
              v27 = objc_msgSend(v26, "currentPreviewItem");
              if (v27)
              {
                v28 = v27;
                v29 = objc_msgSend(v27, "previewItemURL");
                swift_unknownObjectRelease(v28);
                if (v29)
                {
                  static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

                  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
                  v30(v6, 0, 1, v10);
                }
                else
                {
                  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
                  v30(v6, 1, 1, v10);
                }
                sub_100070EDC((uint64_t)v6, (uint64_t)v9, &qword_100643470);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
                {
                  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
                  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v3, v13, v10);
                  v30(v3, 0, 1, v10);
                  sub_100211D78((uint64_t)v3, (uint64_t)v49, v18);

                  sub_10000CB4C((uint64_t)v3, &qword_100643470);
                  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
                  return;
                }
                goto LABEL_17;
              }
            }
LABEL_16:
            v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
            v30(v9, 1, 1, v10);
LABEL_17:
            sub_10000CB4C((uint64_t)v9, &qword_100643470);
            v33 = *(void **)&v49[v48];
            if (v33)
            {
              v34 = objc_msgSend(v33, "currentPreviewItem");
              if (v34)
              {
                v35 = v34;
                v36 = objc_opt_self(QLItem);
                v37 = (void *)swift_dynamicCastObjCClass(v35, v36);
                if (v37)
                {
                  v38 = objc_msgSend(v37, "fpItem");
                  if (v38)
                  {
                    v39 = v38;
                    v40 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
                    v41 = swift_allocObject(&unk_1005D2220, 32, 7);
                    *(_QWORD *)(v41 + 16) = v49;
                    *(_QWORD *)(v41 + 24) = v18;
                    aBlock[4] = sub_100217C5C;
                    v51 = v41;
                    aBlock[0] = _NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    aBlock[2] = sub_100175118;
                    aBlock[3] = &unk_1005D2238;
                    v42 = _Block_copy(aBlock);
                    v43 = v51;
                    v44 = v49;
                    v45 = v18;
                    objc_msgSend(v40, "fetchURLForItem:completionHandler:", v39, v42, swift_release(v43).n128_f64[0]);

                    _Block_release(v42);
                    swift_unknownObjectRelease(v35);

                    return;
                  }
                }
                v32 = swift_unknownObjectRelease(v35);
              }
            }
            ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v30)(v3, 1, 1, v10, v32);
            goto LABEL_24;
          }
        }
        else
        {

        }
      }
      else if (!v21)
      {
        v48 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
        v31 = 0;
        goto LABEL_16;
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v3, 1, 1, v10);
LABEL_24:
    sub_100211D78((uint64_t)v3, (uint64_t)v49, v18);

    sub_10000CB4C((uint64_t)v3, &qword_100643470);
  }
}

void sub_100211D78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _BYTE v26[24];

  v6 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v6);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v26[-v10 - 8];
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000271D4(a1, (uint64_t)v11, &qword_100643470);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000CB4C((uint64_t)v11, &qword_100643470);
    v16 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
    v17 = a2 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL;
    swift_beginAccess(v17, v26, 33, 0);
    sub_100118024((uint64_t)v8, v17);
    swift_endAccess(v26);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_10004F2F0(0, (unint64_t *)&unk_100647BD0, NSPredicate_ptr);
    v18 = sub_10006922C((uint64_t *)&unk_100644560);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_1004D9670;
    v20 = URL.absoluteString.getter(v19);
    v22 = v21;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_10006A638();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v16 = (id)NSPredicate.init(format:_:)(0x203D3D20666C6573, 0xEA00000000004025, v19);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v8, v15, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    v23 = a2 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL;
    swift_beginAccess(v23, v26, 33, 0);
    sub_100118024((uint64_t)v8, v23);
    swift_endAccess(v26);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  }
  v24 = objc_msgSend(a3, "activationConditions");
  objc_msgSend(v24, "setPrefersToActivateForTargetContentIdentifierPredicate:", v16);

}

uint64_t sub_10021205C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v32 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10006922C(&qword_100643470);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v33 = static OS_dispatch_queue.main.getter(v16);
  sub_1000271D4(a1, (uint64_t)v15, &qword_100643470);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(&unk_1005D2270, v18 + v14, v17 | 7);
  v20 = v32;
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = v20;
  sub_100070EDC((uint64_t)v15, v19 + v18, &qword_100643470);
  aBlock[4] = sub_100217D0C;
  v38 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D2288;
  v21 = _Block_copy(aBlock);
  v22 = v38;
  v23 = a3;
  v24 = v20;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_10006922C((uint64_t *)&unk_100647540);
  v28 = sub_1000791AC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v26);
  v29 = (void *)v33;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v35);
}

void *sub_1002122D0()
{
  return sub_100211574();
}

void sub_1002122F0()
{
  sub_100211834();
}

void sub_100212310()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  if (v1)
  {
    v2 = objc_msgSend(v1, "windowScene");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "session");
      v5 = sub_1002172B8();
      objc_msgSend(v4, "setStateRestorationActivity:", v5);

    }
  }
}

uint64_t sub_1002123BC(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void **v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t inited;
  void ***v25;
  void **v26;
  void **v27;
  Swift::Int v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Class v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  uint64_t v75;
  uint64_t v76;
  char v77[48];

  v65 = a4;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = (_QWORD *)type metadata accessor for URL(0);
  v10 = *(v64 - 1);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v64);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(NSKeyedArchiver);
  v70 = a1;
  v14 = sub_10006922C(&qword_100647560);
  v15 = Optional._bridgeToObjectiveC()(v14);
  v70 = 0;
  v16 = objc_msgSend(v13, "archivedDataWithRootObject:requiringSecureCoding:error:", v15, 1, &v70);
  swift_unknownObjectRelease(v15);
  v17 = v70;
  if (v16)
  {
    v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v61 = v19;
    v62 = v18;

    v20 = objc_allocWithZone((Class)NSUserActivity);
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "initWithActivityType:", v21);

    v23 = sub_10006922C(&qword_100643CC0);
    inited = swift_initStackObject(v23, v77);
    v60 = xmmword_1004D9670;
    *(_OWORD *)(inited + 16) = xmmword_1004D9670;
    v25 = (void ***)DOCUserActivityFPItemKey.unsafeMutableAddressor();
    v27 = *v25;
    v26 = v25[1];
    v63 = a3;
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v26;
    swift_bridgeObjectRetain(v26);
    v28 = sub_1003F98B8(inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, &type metadata for String);
    isa = Set._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "setRequiredUserInfoKeys:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

    v30 = sub_10006922C((uint64_t *)&unk_100651EC0);
    v31 = swift_initStackObject(v30, &v76);
    *(_OWORD *)(v31 + 16) = v60;
    v32 = (uint64_t)v25[1];
    v70 = *v25;
    v71 = v32;
    swift_bridgeObjectRetain(v32);
    AnyHashable.init<A>(_:)(&v70, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(v31 + 96) = &type metadata for Data;
    v34 = v61;
    v33 = v62;
    *(_QWORD *)(v31 + 72) = v62;
    *(_QWORD *)(v31 + 80) = v34;
    sub_10012F5E0(v33, v34);
    v35 = sub_1003F1838(v31);
    v36 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "addUserInfoEntriesFromDictionary:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

    v37 = v64;
    (*(void (**)(char *, uint64_t, _QWORD *))(v10 + 16))((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v65, v64);
    v38 = *(unsigned __int8 *)(v10 + 80);
    v39 = (v38 + 32) & ~v38;
    v40 = swift_allocObject(&unk_1005D2928, v39 + v11, v38 | 7);
    v41 = v63;
    *(_QWORD *)(v40 + 16) = v22;
    *(_QWORD *)(v40 + 24) = v41;
    (*(void (**)(uint64_t, char *, _QWORD *))(v10 + 32))(v40 + v39, v12, v37);
    v74 = sub_10021C25C;
    v75 = v40;
    v70 = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_10004A82C;
    v73 = &unk_1005D2940;
    v42 = _Block_copy(&v70);
    v43 = v75;
    v44 = v22;
    v45 = v41;
    swift_release(v43);
    DOCRunInMainThread(v42);
    _Block_release(v42);

    return sub_1000D4C00(v33, v34);
  }
  else
  {
    v47 = v17;
    v48 = _convertNSErrorToError(_:)(v17);

    v50 = swift_willThrow(v49);
    v51 = Logger.Application.unsafeMutableAddressor(v50);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v51, v6);
    swift_errorRetain(v48);
    v52 = swift_errorRetain(v48);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.error.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc(22, -1);
      v64 = (_QWORD *)swift_slowAlloc(64, -1);
      v70 = (void **)v64;
      *(_DWORD *)v55 = 136315394;
      v68 = sub_1000544FC(0xD000000000000013, 0x80000001005198C0, (uint64_t *)&v70);
      v65 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
      *(_WORD *)(v55 + 12) = 2080;
      swift_getErrorValue(v48, &v67, v66);
      v56 = Error.localizedDescription.getter(v66[1], v66[2]);
      v58 = v57;
      v68 = sub_1000544FC(v56, v57, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
      swift_bridgeObjectRelease(v58);
      swift_errorRelease(v48);
      swift_errorRelease(v48);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v55, 0x16u);
      v59 = v64;
      swift_arrayDestroy(v64, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v55, -1, -1);

      swift_errorRelease(v48);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v65);
    }
    else
    {
      swift_errorRelease(v48);
      swift_errorRelease(v48);
      swift_errorRelease(v48);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void sub_100212994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[5];
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_1005D2978, v11 + v8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10021C308;
  v15 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000602CC;
  aBlock[3] = &unk_1005D2990;
  v13 = _Block_copy(aBlock);
  swift_release(v15);
  objc_msgSend(v9, "requestSceneSessionActivation:userActivity:options:errorHandler:", 0, a1, a2, v13);
  _Block_release(v13);

}

uint64_t sub_100212B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  _BYTE v36[8];
  uint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = Logger.Application.unsafeMutableAddressor(v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_errorRetain(a1);
  v14 = swift_errorRetain(a1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc(32, -1);
    v34 = v8;
    v19 = v18;
    v33 = swift_slowAlloc(96, -1);
    v38 = v33;
    *(_DWORD *)v19 = 136315650;
    v31 = v17;
    v37 = sub_1000544FC(0xD000000000000013, 0x80000001005198C0, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *(_WORD *)(v19 + 12) = 2080;
    v32 = v9;
    v20 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v4, v20);
    v23 = v22;
    v37 = sub_1000544FC(v21, v22, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v7, v4, v24);
    *(_WORD *)(v19 + 22) = 2080;
    swift_getErrorValue(a1, v36, v35);
    v25 = Error.localizedDescription.getter(v35[1], v35[2]);
    v27 = v26;
    v37 = sub_1000544FC(v25, v26, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v27);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v31, "%s: Failed to create new scene for URL: %s Error: %s", (uint8_t *)v19, 0x20u);
    v28 = v33;
    swift_arrayDestroy(v33, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v32 + 8))(v11, v34);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_100212E1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = swift_allocObject(&unk_1005D2A18, 24, 7);
  *(_QWORD *)(v7 + 16) = a3;
  v11[4] = sub_10021C3A8;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000602CC;
  v11[3] = &unk_1005D2A30;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = a3;
  swift_release(v9);
  objc_msgSend(v6, "requestSceneSessionActivation:userActivity:options:errorHandler:", 0, a1, a2, v8);
  _Block_release(v8);

}

uint64_t sub_100212F14(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  _BYTE v31[8];
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  swift_errorRetain(a1);
  v11 = v10;
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(32, -1);
    v29 = v5;
    v16 = v15;
    v26 = (_QWORD *)swift_slowAlloc(8, -1);
    v28 = swift_slowAlloc(64, -1);
    v33 = v28;
    *(_DWORD *)v16 = 136315650;
    v32 = sub_1000544FC(0xD00000000000001BLL, 0x8000000100519910, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    *(_WORD *)(v16 + 12) = 2112;
    v32 = (uint64_t)v11;
    v17 = v11;
    v27 = v4;
    v18 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    v19 = v26;
    *v26 = v11;

    *(_WORD *)(v16 + 22) = 2080;
    swift_getErrorValue(a1, v31, v30);
    v20 = Error.localizedDescription.getter(v30[1], v30[2]);
    v22 = v21;
    v32 = sub_1000544FC(v20, v21, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: Failed to create new scene for Location: %@ Error: %s", (uint8_t *)v16, 0x20u);
    v23 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v19, 1, v23);
    swift_slowDealloc(v19, -1, -1);
    v24 = v28;
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v7, v27);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1002131F4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[5];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v49 = a2;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v53, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v18 = (void *)Strong;
    if (a1)
    {
      v19 = swift_allocObject(&unk_1005D2388, 33, 7);
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 24) = a1;
      *(_BYTE *)(v19 + 32) = a4 & 1;
      aBlock[4] = (uint64_t)sub_10021AC44;
      v51 = v19;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D23A0;
      v20 = _Block_copy(aBlock);
      v21 = v51;
      v22 = a1;
      v23 = v18;
      swift_release(v21);
      DOCRunInMainThread(v20);

      _Block_release(v20);
    }
    else
    {
      v24 = Logger.Application.unsafeMutableAddressor(Strong);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v24, v13);
      v25 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
      v26 = v49;
      swift_errorRetain(v49);
      v27 = swift_errorRetain(v26);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter(v28);
      v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = swift_slowAlloc(32, -1);
        v48 = v13;
        v32 = v31;
        v47 = swift_slowAlloc(96, -1);
        aBlock[0] = v47;
        *(_DWORD *)v32 = 136315650;
        v46 = v28;
        v52 = sub_1000544FC(0xD000000000000027, 0x80000001005195D0, aBlock);
        v45 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
        *(_WORD *)(v32 + 12) = 2080;
        v44 = v32 + 14;
        v33 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v34 = dispatch thunk of CustomStringConvertible.description.getter(v9, v33);
        v36 = v35;
        v52 = sub_1000544FC(v34, v35, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
        v37 = swift_bridgeObjectRelease(v36);
        (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v12, v9, v37);
        *(_WORD *)(v32 + 22) = 2080;
        v52 = v26;
        swift_errorRetain(v26);
        v38 = sub_10006922C((uint64_t *)&unk_1006434A0);
        v39 = String.init<A>(describing:)(&v52, v38);
        v41 = v40;
        v52 = sub_1000544FC(v39, v40, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
        swift_bridgeObjectRelease(v41);
        swift_errorRelease(v26);
        swift_errorRelease(v26);
        v42 = v46;
        _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v45, "%s item was nil for URL: %s error: %s", (uint8_t *)v32, 0x20u);
        v43 = v47;
        swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
        swift_errorRelease(v26);
        swift_errorRelease(v26);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
    }
  }
}

void sub_100213614(char *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  void *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  char v23;
  id v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t aBlock[5];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[40];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&a1[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (!v11)
  {
    v34 = Logger.Application.unsafeMutableAddressor(v8);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v34, v6);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      aBlock[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v61 = sub_1000544FC(0xD000000000000027, 0x80000001005195D0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s: Unable to continue activity since main view controller not set, of search query string not is nil", v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return;
  }
  v12 = v11;
  v13 = objc_msgSend(v12, "effectiveFullBrowser");
  v14 = (char *)objc_msgSend(v13, "effectiveBrowserViewController");
  if (!v14)
  {

    goto LABEL_22;
  }
  v15 = v14;
  v16 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess(&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController], &v61, 0, 0);
  v17 = *v16;
  if (!*v16
    || (v18 = type metadata accessor for DOCItemCollectionViewController(0),
        (v19 = swift_dynamicCastClass(v17, v18)) == 0))
  {

LABEL_22:
    v40 = sub_10006922C((uint64_t *)&unk_1006441A0);
    inited = swift_initStackObject(v40, v63);
    *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
    *(_QWORD *)(inited + 32) = a2;
    aBlock[0] = inited;
    specialized Array._endMutation()(inited);
    v42 = aBlock[0];
    v43 = a2;
    sub_10021AC50(v42, a2, a3 & 1);
    swift_bridgeObjectRelease(v42);
LABEL_23:

    return;
  }
  v20 = (char *)v19;
  v21 = v17;

  v22 = swift_allocObject(&unk_1005D23D8, 24, 7);
  *(_QWORD *)(v22 + 16) = 0;
  v23 = *(_BYTE *)(*(_QWORD *)&v20[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                 + 8);
  v24 = objc_msgSend((id)objc_opt_self(DOCFeature), "quickLookEntireFolderInWindow");
  v25 = objc_msgSend(v24, "isEnabled");

  if (!v25 || (v23 & 1) != 0)
  {
    v44 = swift_allocObject(&unk_1005D2400, 49, 7);
    *(_QWORD *)(v44 + 16) = v22;
    *(_QWORD *)(v44 + 24) = v20;
    *(_QWORD *)(v44 + 32) = a1;
    *(_QWORD *)(v44 + 40) = a2;
    *(_BYTE *)(v44 + 48) = a3 & 1;
    aBlock[4] = (uint64_t)sub_10021B8A8;
    v60 = v44;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10015936C;
    aBlock[3] = (uint64_t)&unk_1005D2418;
    v45 = _Block_copy(aBlock);
    v46 = v60;
    v47 = a2;
    v48 = v21;
    v49 = a1;
    swift_retain();
    swift_release(v46);
    objc_msgSend(v20, "getCellFor::", v47, v45);

    _Block_release(v45);
    swift_release(v22);
    return;
  }
  v58 = v21;
  v26 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController + 8];
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v51 = v26;
    else
      v51 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v26, 2);
    v27 = _CocoaArrayWrapper.endIndex.getter(v51);
    if (v27)
      goto LABEL_9;
LABEL_30:
    swift_bridgeObjectRelease(v26);
    v50 = _swiftEmptyArrayStorage;
LABEL_31:
    swift_bridgeObjectRelease(v26);
    v52 = swift_allocObject(&unk_1005D2450, 41, 7);
    *(_QWORD *)(v52 + 16) = a2;
    *(_QWORD *)(v52 + 24) = a1;
    *(_QWORD *)(v52 + 32) = v22;
    *(_BYTE *)(v52 + 40) = a3 & 1;
    v53 = a2;
    v54 = a1;
    swift_retain();
    sub_10021B8FC((uint64_t)v50, (uint64_t)sub_10021B8EC, v52);
    swift_release(v22);
    swift_bridgeObjectRelease(v50);
    swift_release(v52);

    goto LABEL_23;
  }
  v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v26, 2);
  if (!v27)
    goto LABEL_30;
LABEL_9:
  v56 = v22;
  v57 = v12;
  if (v27 >= 1)
  {
    for (i = 0; i != v27; ++i)
    {
      v29 = *(_QWORD *)(v26 + 8 * i + 32);
      v30 = objc_msgSend((id)swift_unknownObjectRetain(v29), "isFolder");
      if ((_DWORD)v30)
      {
        swift_unknownObjectRelease(v29);
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
        v32 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v31 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v32 >= v31 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
        v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
        specialized Array._endMutation()(v33);
      }
    }
    swift_bridgeObjectRelease(v26);
    v50 = (_QWORD *)aBlock[0];
    v22 = v56;
    v12 = v57;
    goto LABEL_31;
  }
  __break(1u);
}

void sub_100213BA4(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  v9 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
    if (v11 >= 1)
      goto LABEL_3;
LABEL_8:
    v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1004D9B40;
    *(_QWORD *)(v13 + 32) = a2;
    v20[0] = v13;
    specialized Array._endMutation()(v13);
    v9 = v20[0];
    v14 = a2;
    goto LABEL_9;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_8;
LABEL_3:
  swift_bridgeObjectRetain(v9);
LABEL_9:
  v15 = swift_allocObject(&unk_1005D2540, 49, 7);
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = v9;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a4;
  *(_BYTE *)(v15 + 48) = a5 & 1;
  v20[4] = sub_10021BFB0;
  v21 = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10004A82C;
  v20[3] = &unk_1005D2558;
  v16 = _Block_copy(v20);
  v17 = v21;
  v18 = a2;
  v19 = a3;
  swift_retain();
  swift_release(v17);
  DOCRunInMainThread(v16);
  _Block_release(v16);
}

void sub_100213D0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  id v9;
  _BYTE v10[24];

  swift_beginAccess(a4 + 16, v10, 0, 0);
  v9 = *(id *)(a4 + 16);
  sub_10021AC50(a2, a3, a5);

}

void sub_100213D88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  id *v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  id v16;
  _BYTE v17[24];
  uint64_t v18[3];
  _BYTE v19[40];

  v8 = (id *)(a2 + 16);
  if (a1)
  {
    v9 = a1;
    v10 = DOCItemCollectionViewController.targetPreview(for:)(v9);

    swift_beginAccess(v8, v17, 1, 0);
    v11 = *v8;
    *v8 = v10;

  }
  v12 = sub_10006922C((uint64_t *)&unk_1006441A0);
  inited = swift_initStackObject(v12, v19);
  *(_OWORD *)(inited + 16) = xmmword_1004D9B40;
  *(_QWORD *)(inited + 32) = a5;
  v18[0] = inited;
  specialized Array._endMutation()(inited);
  v14 = v18[0];
  swift_beginAccess(v8, v18, 0, 0);
  v15 = *v8;
  v16 = a5;
  sub_10021AC50(v14, a5, a6 & 1);
  swift_bridgeObjectRelease(v14);

}

void sub_100213E7C(void *a1, NSObject *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess(a4 + 16, v29, 33, 0);
    v13 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v15 = *(_QWORD *)((*(_QWORD *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((*(_QWORD *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v15 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
    v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    specialized Array._endMutation()(v16);
    swift_endAccess(v29);
  }
  else
  {
    v17 = Logger.Application.unsafeMutableAddressor(v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v17, v8);
    v18 = swift_unknownObjectRetain_n(a3, 2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v29[0] = v28;
      *(_DWORD *)v21 = 136315394;
      v30 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519600, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
      *(_WORD *)(v21 + 12) = 2080;
      v30 = a3;
      swift_unknownObjectRetain(a3);
      v22 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v23 = String.init<A>(describing:)(&v30, v22);
      v25 = v24;
      v30 = sub_1000544FC(v23, v24, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
      swift_unknownObjectRelease_n(a3, 2);
      swift_bridgeObjectRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s failed to fetch item from node: %s", (uint8_t *)v21, 0x16u);
      v26 = v28;
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n(a3, 2);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  dispatch_group_leave(a2);
}

void sub_100214120(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  double Current;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  void (*v28)(_QWORD);
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(a1 + 16);
  Current = CFAbsoluteTimeGetCurrent();
  v15 = Logger.Application.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  swift_retain();
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v27[1] = a3;
    v28 = a2;
    v19 = Current - a4;
    v20 = swift_slowAlloc(32, -1);
    v27[0] = swift_slowAlloc(32, -1);
    v32[0] = v27[0];
    *(_DWORD *)v20 = 136315650;
    v30 = sub_1000544FC(0xD00000000000002ALL, 0x8000000100519600, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    *(_WORD *)(v20 + 12) = 2048;
    swift_beginAccess(a1 + 16, &v30, 0, 0);
    v21 = *v12;
    if ((unint64_t)*v12 >> 62)
    {
      if (v21 < 0)
        v26 = *v12;
      else
        v26 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v12);
      v22 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v29 = *(double *)&v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    swift_release(a1);
    *(_WORD *)(v20 + 22) = 2048;
    v29 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s finished preparing: %ld items. Took: %f", (uint8_t *)v20, 0x20u);
    v23 = v27[0];
    swift_arrayDestroy(v27[0], 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a2 = v28;
  }
  else
  {

    swift_release(a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess(a1 + 16, v32, 0, 0);
  v24 = *v12;
  v25 = swift_bridgeObjectRetain(*v12);
  a2(v25);
  swift_bridgeObjectRelease(v24);
}

uint64_t sub_1002143E0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  swift_errorRetain(a1);
  v11 = v10;
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    v28 = v14;
    v30 = v5;
    v31 = v4;
    v15 = swift_slowAlloc(32, -1);
    v16 = (_QWORD *)swift_slowAlloc(8, -1);
    v29 = swift_slowAlloc(64, -1);
    v36 = v29;
    *(_DWORD *)v15 = 136315650;
    v34 = sub_1000544FC(0xD00000000000003BLL, 0x8000000100519630, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *(_WORD *)(v15 + 12) = 2112;
    v34 = (uint64_t)v11;
    v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    *v16 = v11;

    *(_WORD *)(v15 + 22) = 2080;
    if (a1)
    {
      swift_getErrorValue(a1, v33, v32);
      v18 = Error.localizedDescription.getter(v32[1], v32[2]);
    }
    else
    {
      v18 = 0;
      v19 = 0;
    }
    v34 = v18;
    v35 = v19;
    v21 = sub_10006922C(&qword_100648C80);
    v22 = String.init<A>(describing:)(&v34, v21);
    v24 = v23;
    v34 = sub_1000544FC(v22, v23, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v28, "%s: Failed to create new scene for item: %@ Error: %s", (uint8_t *)v15, 0x20u);
    v25 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v16, 1, v25);
    swift_slowDealloc(v16, -1, -1);
    v26 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v7, v31);
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_1002146E8()
{
  id result;
  void *v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  Swift::String v12;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v1 = result;
    v12._countAndFlagsBits = 0xD00000000000004FLL;
    v12._object = (void *)0x8000000100519E10;
    v2._object = (void *)0x8000000100519DE0;
    v2._countAndFlagsBits = 0xD000000000000023;
    v3.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3.value._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x636F44206E616353;
    v4._object = (void *)0xEE0073746E656D75;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v12)._object;

    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v6);

    v8 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v11 = objc_msgSend(v8, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v9, v10, 0, v7, 0);

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100214888()
{
  id result;
  void *v1;
  Swift::String v2;
  Swift::String_optional v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  Swift::String v12;

  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v1 = result;
    v2._countAndFlagsBits = 0xD000000000000025;
    v12._countAndFlagsBits = 0xD000000000000045;
    v12._object = (void *)0x8000000100519D90;
    v2._object = (void *)0x8000000100519D60;
    v3.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3.value._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x686372616553;
    v4._object = (void *)0xE600000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v12)._object;

    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithSystemImageName:", v6);

    v8 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v11 = objc_msgSend(v8, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v9, v10, 0, v7, 0);

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100214A1C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  _QWORD *v37;
  os_log_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  Class isa;
  id v48;
  os_log_t v50;
  int v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCFileProviderSource.appMenuIconPreferingSymbolImages.getter();
  v7 = v6;
  v8 = objc_msgSend((id)objc_opt_self(UIApplicationShortcutIcon), "iconWithCustomImage:isTemplate:", v6, 0);
  v9 = (id)sub_1003F1EEC((uint64_t)_swiftEmptyArrayStorage);
  v10 = objc_msgSend(a1, "identifier");
  v11 = objc_msgSend(objc_allocWithZone((Class)DOCConcreteLocation), "initWithSourceIdentifier:node:", v10, 0);

  v12 = (void *)objc_opt_self(NSKeyedArchiver);
  v60 = 0;
  v13 = objc_msgSend(v12, "archivedDataWithRootObject:requiringSecureCoding:error:", v11, 1, &v60);
  v14 = v60;
  if (v13)
  {
    v15 = v13;
    v16 = v60;
    v18 = (uint64_t *)DOCUserActivityLocationKey.unsafeMutableAddressor(v17);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain(v20);
    v21 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    v60 = v9;
    sub_10021715C((uint64_t)v21, v19, v20, isUniquelyReferenced_nonNull_native, &v60);
    v9 = v60;

    swift_bridgeObjectRelease(v20);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
  }
  else
  {
    v24 = v60;
    v25 = _convertNSErrorToError(_:)(v14);

    v56 = v25;
    swift_willThrow(v26);

    v28 = Logger.Application.unsafeMutableAddressor(v27);
    v57 = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v28, v2);
    v29 = a1;
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc(22, -1);
      v52 = (_QWORD *)swift_slowAlloc(8, -1);
      v53 = (void *)swift_slowAlloc(32, -1);
      v60 = v53;
      *(_DWORD *)v33 = 136315394;
      v55 = v8;
      v58 = sub_1000544FC(0xD000000000000020, 0x8000000100519D30, (uint64_t *)&v60);
      v54 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      *(_WORD *)(v33 + 12) = 2112;
      v51 = v32;
      v58 = (uint64_t)v29;
      v34 = v29;
      v50 = v30;
      v35 = v7;
      v36 = v34;
      v8 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      v37 = v52;
      *v52 = v29;

      v7 = v35;
      v38 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "%s [App Shortcut] Failed to encode DOCConcreteLocation: %@", (uint8_t *)v33, 0x16u);
      v39 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v37, 1, v39);
      swift_slowDealloc(v37, -1, -1);
      v40 = v53;
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v33, -1, -1);
      swift_errorRelease(v56);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v54);
    }
    else
    {

      swift_errorRelease(v56);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v2);
    }
  }
  v41 = objc_msgSend(a1, "displayName", v23);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v43 = v42;

  v44 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  sub_10006922C((uint64_t *)&unk_100647C60);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v48 = objc_msgSend(v44, "initWithType:localizedTitle:localizedSubtitle:icon:userInfo:", v45, v46, 0, v8, isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v48;
}

double sub_100214EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  char *v23;
  void *v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005D2EF0, 24, 7);
  v11 = v10;
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  v12 = *(void **)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v12)
  {
    v29 = a2;
    v28 = v12;
    v13 = Logger.UI.unsafeMutableAddressor(v28);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v26 = a1;
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v31 = v18;
      v27 = a3;
      *(_DWORD *)v17 = 136315138;
      v30 = sub_1000544FC(0xD000000000000028, 0x8000000100519D00, &v31);
      a1 = v26;
      a3 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s [App Shortcut] 3.1 Creating source observer", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = v28;
    v20 = objc_msgSend(v28, "configuration");
    v21 = objc_msgSend(v19, "sourceObserver");
    v22 = (_QWORD *)swift_allocObject(&unk_1005D2F40, 40, 7);
    v22[2] = v11;
    v22[3] = a1;
    v22[4] = v29;
    objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    swift_retain();
    swift_retain();
    v23 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v20, v21, (uint64_t)sub_10021C80C, (uint64_t)v22);
    v24 = *(void **)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver);
    *(_QWORD *)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver) = v23;
    swift_release(v11);

  }
  else
  {
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void sub_1002151CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t i;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t j;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t aBlock[5];
  _QWORD *v68;

  v64 = a3;
  v65 = a2;
  v6 = (_QWORD *)type metadata accessor for Logger(0);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Application.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, _QWORD *))(v7 + 16))(v9, v11, v6);
  v12 = swift_bridgeObjectRetain_n(a1, 4);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  if (!os_log_type_enabled(v13, (os_log_type_t)v14))
  {

    swift_bridgeObjectRelease_n(a1, 4);
    (*(void (**)(char *, _QWORD *))(v7 + 8))(v9, v6);
LABEL_8:
    if (*(_QWORD *)(a1 + 16))
    {
      v31 = sub_10001CCD0(0);
      if ((v32 & 1) != 0)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v31);
        v6 = _swiftEmptyArrayStorage;
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        if (!((unint64_t)v14 >> 62))
        {
          v33 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v14, 2);
          if (v33)
          {
LABEL_12:
            if (v33 < 1)
            {
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            for (i = 0; i != v33; ++i)
            {
              if ((v14 & 0xC000000000000001) != 0)
                v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
              else
                v35 = *(id *)(v14 + 8 * i + 32);
              v36 = v35;
              v37 = type metadata accessor for DOCFileProviderSource();
              v38 = swift_dynamicCastClass(v36, v37);
              if (v38)
              {
                v39 = v38;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
                v41 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
                v40 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v41 >= v40 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
                v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
                specialized Array._endMutation()(v42);
              }
              else
              {

              }
            }
            swift_bridgeObjectRelease(v14);
            v43 = aBlock[0];
LABEL_31:
            swift_bridgeObjectRelease(v14);
            aBlock[0] = (uint64_t)v6;
            if ((unint64_t)v43 >> 62)
            {
              if (v43 < 0)
                v53 = v43;
              else
                v53 = v43 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v43);
              v45 = _CocoaArrayWrapper.endIndex.getter(v53);
              swift_bridgeObjectRelease(v43);
              if (v45)
              {
LABEL_33:
                if (v45 >= 1)
                {
                  for (j = 0; j != v45; ++j)
                  {
                    if ((v43 & 0xC000000000000001) != 0)
                      v47 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v43);
                    else
                      v47 = (char *)*(id *)(v43 + 8 * j + 32);
                    v48 = v47;
                    v49 = (unint64_t)objc_msgSend(v47, "status");
                    if ((v49 | 2) == 2 && *(_QWORD *)&v48[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain])
                    {
                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v49);
                      v50 = *(_QWORD *)(aBlock[0] + 16);
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v50);
                      v51 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
                      specialized ContiguousArray._endMutation()(v51);
                    }
                    else
                    {

                    }
                  }
                  swift_bridgeObjectRelease(v43);
                  v52 = (_QWORD *)aBlock[0];
                  goto LABEL_49;
                }
                goto LABEL_51;
              }
            }
            else
            {
              v45 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v45)
                goto LABEL_33;
            }
            swift_bridgeObjectRelease(v43);
            v52 = _swiftEmptyArrayStorage;
LABEL_49:
            v54 = (_QWORD *)swift_allocObject(&unk_1005D2F68, 48, 7);
            v55 = v64;
            v56 = v65;
            v54[2] = v52;
            v54[3] = v56;
            v54[4] = v55;
            v54[5] = a4;
            aBlock[4] = (uint64_t)sub_10021C84C;
            v68 = v54;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_10004A82C;
            aBlock[3] = (uint64_t)&unk_1005D2F80;
            v57 = _Block_copy(aBlock);
            v58 = v68;
            swift_retain();
            swift_retain();
            swift_release(v58);
            DOCRunInMainThread(v57);
            _Block_release(v57);
            return;
          }
LABEL_30:
          swift_bridgeObjectRelease(v14);
          v43 = (uint64_t)_swiftEmptyArrayStorage;
          goto LABEL_31;
        }
LABEL_26:
        if (v14 < 0)
          v44 = v14;
        else
          v44 = v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v14, 2);
        v33 = _CocoaArrayWrapper.endIndex.getter(v44);
        if (v33)
          goto LABEL_12;
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  v15 = swift_slowAlloc(32, -1);
  v16 = swift_slowAlloc(96, -1);
  aBlock[0] = v16;
  *(_DWORD *)v15 = 136315650;
  v66 = sub_1000544FC(0xD000000000000028, 0x8000000100519D00, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, aBlock);
  *(_WORD *)(v15 + 12) = 2080;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v62 = v16;
  v17 = sub_10001CCD0(0);
  if ((v18 & 1) == 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v60 = v14;
  v61 = v6;
  v63 = a4;
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v17);
  v20 = sub_10004F2F0(0, &qword_100643AC0, DOCDocumentSource_ptr);
  v21 = swift_bridgeObjectRetain(v19);
  v22 = Array.description.getter(v21, v20);
  v24 = v23;
  swift_bridgeObjectRelease(v19);
  v66 = sub_1000544FC(v22, v24, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, aBlock);
  swift_bridgeObjectRelease_n(a1, 2);
  swift_bridgeObjectRelease(v24);
  *(_WORD *)(v15 + 22) = 2080;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v25 = sub_10001CCD0(1);
  a4 = v63;
  if ((v26 & 1) != 0)
  {
    v6 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * v25);
    v27 = swift_bridgeObjectRetain(v6);
    v28 = Array.description.getter(v27, v20);
    v14 = v29;
    swift_bridgeObjectRelease(v6);
    v66 = sub_1000544FC(v28, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v60, "%s [App Shortcut] 3.2. Ordered sources regularSources: %s sharedSources: %s", (uint8_t *)v15, 0x20u);
    v30 = v62;
    swift_arrayDestroy(v62, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    (*(void (**)(char *, _QWORD *))(v7 + 8))(v9, v61);
    goto LABEL_8;
  }
LABEL_55:
  __break(1u);
}

void sub_1002157E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  void (**v39)(char *, char *);
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[4];
  uint64_t v46;
  uint64_t v47;

  v41 = a4;
  v42 = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(char **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = _swiftEmptyArrayStorage;
    if (!v10)
      break;
    v45[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v10);
    if (v10 < 0)
    {
      __break(1u);
      swift_release(v45[0]);
      __break(1u);
      return;
    }
    v39 = (void (**)(char *, char *))a2;
    v40 = v9;
    v9 = v7;
    v7 = (char *)v6;
    v12 = 0;
    v6 = a1 & 0xC000000000000001;
    while (v10 != v12)
    {
      if (v6)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      v46 = (uint64_t)v13;
      sub_100215BD4((void **)&v46, &v43);

      ++v12;
      a2 = v43;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = *(_QWORD *)(v45[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, a2);
      specialized ContiguousArray._endMutation()(v17);
      if (v10 == v12)
      {
        v11 = (_QWORD *)v45[0];
        v6 = (unint64_t)v7;
        v7 = v9;
        a2 = (uint64_t)v39;
        v9 = v40;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(a1);
  }
LABEL_12:
  v18 = (_QWORD *)(a2 + 16);
  swift_beginAccess(a2 + 16, v45, 33, 0);
  sub_1001305F0((uint64_t)v11);
  v19 = swift_endAccess(v45);
  v20 = Logger.Application.unsafeMutableAddressor(v19);
  (*((void (**)(char *, uint64_t, unint64_t))v7 + 2))(v9, v20, v6);
  v21 = swift_retain_n(a2, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v45[0] = v25;
    *(_DWORD *)v24 = 136315394;
    v43 = sub_1000544FC(0xD000000000000028, 0x8000000100519D00, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    *(_WORD *)(v24 + 12) = 2080;
    v38[1] = v24 + 14;
    swift_beginAccess(a2 + 16, &v43, 0, 0);
    v26 = *(_QWORD *)(a2 + 16);
    v27 = sub_10004F2F0(0, (unint64_t *)&unk_100647CB0, UIApplicationShortcutItem_ptr);
    v40 = (char *)v6;
    v28 = v27;
    v29 = swift_bridgeObjectRetain(v26);
    v30 = Array.description.getter(v29, v28);
    v39 = (void (**)(char *, char *))v7;
    v32 = v31;
    swift_bridgeObjectRelease(v26);
    v46 = sub_1000544FC(v30, v32, v45);
    v33 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_release_n(a2, 2, v33);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s [App Shortcut] 3.4 Calling completion with %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    v39[1](v9, v40);
  }
  else
  {

    swift_release_n(a2, 2, v34);
    (*((void (**)(char *, unint64_t))v7 + 1))(v9, v6);
  }
  swift_beginAccess(v18, v45, 0, 0);
  v35 = *v18;
  v36 = swift_bridgeObjectRetain(*v18);
  v42(v36);
  swift_bridgeObjectRelease(v35);
}

id sub_100215BD4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id result;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v11 = Logger.Application.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
  v12 = v9;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc(42, -1);
    v40 = v5;
    v17 = v16;
    v39 = swift_slowAlloc(128, -1);
    v45 = v39;
    *(_DWORD *)v17 = 136315906;
    v42 = v2;
    v43 = (id)sub_1000544FC(0xD000000000000028, 0x8000000100519D00, &v45);
    v37 = v15;
    *(_QWORD *)&v18 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44).n128_u64[0];
    *(_WORD *)(v17 + 12) = 2080;
    v19 = objc_msgSend(v12, "displayName", v18);
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v38 = v6;
    v21 = v20;
    v41 = a2;
    v23 = v22;

    v43 = (id)sub_1000544FC(v21, v23, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);

    *(_QWORD *)&v24 = swift_bridgeObjectRelease(v23).n128_u64[0];
    *(_WORD *)(v17 + 22) = 2080;
    v25 = objc_msgSend(v12, "providerName", v24);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v43 = (id)sub_1000544FC(v26, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);

    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v17 + 32) = 2080;
    v43 = *(id *)&v12[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    v29 = v43;
    v30 = sub_10006922C((uint64_t *)&unk_100647CC0);
    v31 = String.init<A>(describing:)(&v43, v30);
    v33 = v32;
    v43 = (id)sub_1000544FC(v31, v32, &v45);
    a2 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);

    swift_bridgeObjectRelease(v33);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v37, "%s [App Shortcut] 3.3 Source %s providerName: %s providerDomain: %s", (uint8_t *)v17, 0x2Au);
    v34 = v39;
    swift_arrayDestroy(v39, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  result = sub_100214A1C(v12);
  *a2 = result;
  return result;
}

void sub_100215F48(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[3];

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)(a2 + 16);
  swift_beginAccess(a2 + 16, v48, 33, 0);
  v14 = swift_bridgeObjectRetain(a1);
  sub_1001305F0(v14);
  v15 = swift_endAccess(v48);
  v16 = Logger.UI.unsafeMutableAddressor(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  v17 = swift_retain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.debug.getter(v18);
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(22, -1);
    v43 = v10;
    v22 = v21;
    v42 = swift_slowAlloc(64, -1);
    v48[0] = v42;
    *(_DWORD *)v22 = 136315394;
    v44 = a3;
    v46 = sub_1000544FC(0xD000000000000015, 0x8000000100519CE0, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    *(_WORD *)(v22 + 12) = 2080;
    v40 = v22 + 14;
    swift_beginAccess(a2 + 16, &v46, 0, 0);
    v41 = v9;
    v23 = *(_QWORD *)(a2 + 16);
    v24 = sub_10004F2F0(0, (unint64_t *)&unk_100647CB0, UIApplicationShortcutItem_ptr);
    v25 = swift_bridgeObjectRetain(v23);
    v26 = Array.description.getter(v25, v24);
    v39 = v20;
    v27 = a5;
    v29 = v28;
    swift_bridgeObjectRelease(v23);
    v30 = v26;
    a3 = v44;
    v45 = sub_1000544FC(v30, v29, v48);
    v31 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    swift_release_n(a2, 2, v31);
    v32 = v29;
    a5 = v27;
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v39, "%s [App Shortcut] 4. Calling completion with %s", (uint8_t *)v22, 0x16u);
    v33 = v42;
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v41);
  }
  else
  {

    swift_release_n(a2, 2, v34);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  swift_beginAccess(a2 + 16, v48, 0, 0);
  v35 = *v13;
  v36 = swift_bridgeObjectRetain(*v13);
  a3(v36);
  swift_bridgeObjectRelease(v35);
  v37 = *(void **)(a5 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver);
  *(_QWORD *)(a5 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver) = 0;

}

uint64_t sub_100216260(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1002163BC((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = v8;
    v10 = swift_release(v2);
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_1002163BC((unint64_t *)v11, v6, v2);
    v9 = v12;
    swift_release(v2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

void sub_1002163BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  unsigned int v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v21;

  v21 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_24;
      v16 = *(_QWORD *)(v5 + 8 * v4);
      if (!v16)
      {
        v4 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_24;
        v16 = *(_QWORD *)(v5 + 8 * v4);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    v12 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v13 = objc_msgSend(v12, "options");
    v14 = objc_msgSend(v13, "_openAsDownload");

    if (v14)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1004AC51C(a1, a2, v21, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v9)
    goto LABEL_24;
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_10021658C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[5];

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)(v3 + 16))
      return;
LABEL_8:
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v5 = a1;
      else
        v5 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v6 = __CocoaSet.makeIterator()(v5);
      v7 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
      v8 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
      v9 = Set.Iterator.init(_cocoa:)(v31, v6, v7, v8);
      a1 = v31[0];
      v28 = v31[1];
      v10 = v31[2];
      v11 = v31[3];
      v12 = v31[4];
    }
    else
    {
      v13 = -1 << *(_BYTE *)(a1 + 32);
      v28 = a1 + 56;
      v10 = ~v13;
      v14 = -v13;
      if (v14 < 64)
        v15 = ~(-1 << v14);
      else
        v15 = -1;
      v12 = v15 & *(_QWORD *)(a1 + 56);
      v9 = (_QWORD *)swift_bridgeObjectRetain(a1);
      v11 = 0;
    }
    v16 = (unint64_t)(v10 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_20;
    while (1)
    {
      if (v12)
      {
        v17 = (v12 - 1) & v12;
        v18 = __clz(__rbit64(v12)) | (v11 << 6);
        v19 = v11;
      }
      else
      {
        v24 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          return;
        }
        if (v24 >= v16)
          goto LABEL_42;
        v25 = *(_QWORD *)(v28 + 8 * v24);
        v19 = v11 + 1;
        if (!v25)
        {
          v19 = v11 + 2;
          if (v11 + 2 >= v16)
            goto LABEL_42;
          v25 = *(_QWORD *)(v28 + 8 * v19);
          if (!v25)
          {
            v19 = v11 + 3;
            if (v11 + 3 >= v16)
              goto LABEL_42;
            v25 = *(_QWORD *)(v28 + 8 * v19);
            if (!v25)
            {
              v19 = v11 + 4;
              if (v11 + 4 >= v16)
                goto LABEL_42;
              v25 = *(_QWORD *)(v28 + 8 * v19);
              if (!v25)
              {
                v19 = v11 + 5;
                if (v11 + 5 >= v16)
                  goto LABEL_42;
                v25 = *(_QWORD *)(v28 + 8 * v19);
                if (!v25)
                {
                  v26 = v11 + 6;
                  while (v16 != v26)
                  {
                    v25 = *(_QWORD *)(v28 + 8 * v26++);
                    if (v25)
                    {
                      v19 = v26 - 1;
                      goto LABEL_38;
                    }
                  }
LABEL_42:
                  sub_10021C590(a1);
                  return;
                }
              }
            }
          }
        }
LABEL_38:
        v17 = (v25 - 1) & v25;
        v18 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v23 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v18);
      if (!v23)
        goto LABEL_42;
      while (1)
      {
        v27 = (void *)sub_1004446C4(v23);

        v11 = v19;
        v12 = v17;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_20:
        v20 = __CocoaSet.Iterator.next()(v9);
        if (v20)
        {
          v21 = v20;
          v29 = v20;
          v22 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
          swift_unknownObjectRetain(v21);
          swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v22, 7);
          v23 = v30;
          swift_unknownObjectRelease(v21);
          v19 = v11;
          v17 = v12;
          if (v23)
            continue;
        }
        goto LABEL_42;
      }
    }
  }
  if (v3 < 0)
    v4 = *v1;
  else
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v4))
    goto LABEL_8;
}

void *sub_100216880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t isStackAllocationSafe;
  char v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  _QWORD v55[5];

  v2 = a2;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v7 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v8 = Set.Iterator.init(_cocoa:)(v55, v5, v6, v7);
    v3 = v55[0];
    v9 = v55[1];
    v11 = v55[2];
    v10 = v55[3];
    v12 = v55[4];
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v9 = a1 + 56;
    v11 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v50 = v3;
  v51 = v9;
  v52 = v11;
  v53 = v10;
  v54 = v12;
  v16 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v12)
      {
        v17 = (v12 - 1) & v12;
        v18 = __clz(__rbit64(v12)) | (v10 << 6);
LABEL_17:
        v19 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v18);
        v20 = v19;
        goto LABEL_18;
      }
      v32 = v10 + 1;
      if (__OFADD__(v10, 1))
        __break(1u);
      v33 = (unint64_t)(v11 + 64) >> 6;
      if (v32 >= v33)
      {
        v19 = 0;
        v17 = 0;
        goto LABEL_18;
      }
      v34 = *(_QWORD *)(v51 + 8 * v32);
      if (v34)
      {
LABEL_31:
        v17 = (v34 - 1) & v34;
        v18 = __clz(__rbit64(v34)) + (v32 << 6);
        v10 = v32;
        goto LABEL_17;
      }
      v35 = v10 + 2;
      if (v10 + 2 >= v33)
        goto LABEL_47;
      v34 = *(_QWORD *)(v51 + 8 * v35);
      if (v34)
      {
LABEL_35:
        v32 = v35;
        goto LABEL_31;
      }
      if (v10 + 3 < v33)
      {
        v34 = *(_QWORD *)(v51 + 8 * (v10 + 3));
        if (v34)
        {
          v32 = v10 + 3;
          goto LABEL_31;
        }
        v35 = v10 + 4;
        if (v10 + 4 >= v33)
        {
          v19 = 0;
          v17 = 0;
          v10 += 3;
LABEL_18:
          v53 = v10;
          v54 = v17;
          if (!v19)
            goto LABEL_56;
          goto LABEL_22;
        }
        v34 = *(_QWORD *)(v51 + 8 * v35);
        if (v34)
          goto LABEL_35;
        v32 = v10 + 5;
        if (v10 + 5 < v33)
        {
          v34 = *(_QWORD *)(v51 + 8 * v32);
          if (v34)
            goto LABEL_31;
          v32 = v33 - 1;
          v36 = v10 + 6;
          while (v33 != v36)
          {
            v34 = *(_QWORD *)(v51 + 8 * v36++);
            if (v34)
            {
              v32 = v36 - 1;
              goto LABEL_31;
            }
          }
LABEL_47:
          v19 = 0;
          v17 = 0;
          v10 = v32;
          goto LABEL_18;
        }
      }
      v19 = 0;
      v17 = 0;
      v10 = v35;
      goto LABEL_18;
    }
    v21 = __CocoaSet.Iterator.next()(v8);
    if (!v21)
      goto LABEL_57;
    v22 = v21;
    v48 = v21;
    v23 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v49, &v48, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v19 = v49;
    swift_unknownObjectRelease(v22);
    if (!v19)
    {
LABEL_56:
      v3 = v50;
LABEL_57:
      sub_10021C590(v3);
      return (void *)v2;
    }
LABEL_22:
    v24 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
    v25 = -1 << *(_BYTE *)(v2 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)(v16 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      goto LABEL_13;
    sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v27 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v26);
    v28 = static NSObject.== infix(_:_:)(v27, v19);

    if ((v28 & 1) != 0)
      break;
    v29 = ~v25;
    while (1)
    {
      v26 = (v26 + 1) & v29;
      if (((*(_QWORD *)(v16 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        break;
      v30 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v26);
      v31 = static NSObject.== infix(_:_:)(v30, v19);

      if ((v31 & 1) != 0)
        goto LABEL_50;
    }
LABEL_13:

    v3 = v50;
    v11 = v52;
    v10 = v53;
    v12 = v54;
  }
LABEL_50:

  v38 = *(_BYTE *)(v2 + 32);
  v39 = v38 & 0x3F;
  v40 = (1 << v38) + 63;
  v41 = v40 >> 6;
  v42 = 8 * (v40 >> 6);
  if (v39 < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v40 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v48 - ((v42 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v42);
    sub_100216DD0((unint64_t *)((char *)&v48 - ((v42 + 15) & 0x3FFFFFFFFFFFFFF0)), v41, v2, v26, &v50);
    v44 = v43;
    swift_release(v2);
    sub_10021C590(v50);
  }
  else
  {
    v45 = (void *)swift_slowAlloc(v42, -1);
    memcpy(v45, (const void *)(v2 + 56), v42);
    sub_100216DD0((unint64_t *)v45, v41, v2, v26, &v50);
    v44 = v46;
    swift_release(v2);
    sub_10021C590(v50);
    swift_slowDealloc(v45, -1, -1);
  }
  return (void *)v44;
}

void sub_100216DD0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  id v27;
  char v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v37;
  uint64_t v39;
  uint64_t v41;
  void *v42;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          v9 = a5[3];
          v8 = a5[4];
          if (v8)
          {
            v10 = (v8 - 1) & v8;
            v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            v12 = *(void **)(*(_QWORD *)(*a5 + 48) + 8 * v11);
            v13 = v12;
            goto LABEL_8;
          }
          v29 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v30 = (unint64_t)(a5[2] + 64) >> 6;
          if (v29 >= v30)
          {
            v12 = 0;
            v10 = 0;
            goto LABEL_8;
          }
          v31 = a5[1];
          v32 = *(_QWORD *)(v31 + 8 * v29);
          if (v32)
          {
LABEL_22:
            v10 = (v32 - 1) & v32;
            v11 = __clz(__rbit64(v32)) + (v29 << 6);
            v9 = v29;
            goto LABEL_7;
          }
          v34 = v9 + 2;
          if (v9 + 2 >= v30)
            goto LABEL_41;
          v32 = *(_QWORD *)(v31 + 8 * v34);
          if (v32)
          {
LABEL_29:
            v29 = v34;
            goto LABEL_22;
          }
          if (v9 + 3 < v30)
          {
            v32 = *(_QWORD *)(v31 + 8 * (v9 + 3));
            if (v32)
            {
              v29 = v9 + 3;
              goto LABEL_22;
            }
            v34 = v9 + 4;
            if (v9 + 4 >= v30)
            {
              v12 = 0;
              v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12)
                goto LABEL_47;
              goto LABEL_12;
            }
            v32 = *(_QWORD *)(v31 + 8 * v34);
            if (v32)
              goto LABEL_29;
            v29 = v9 + 5;
            if (v9 + 5 < v30)
            {
              v32 = *(_QWORD *)(v31 + 8 * v29);
              if (v32)
                goto LABEL_22;
              v29 = v30 - 1;
              v35 = v9 + 6;
              while (v30 != v35)
              {
                v32 = *(_QWORD *)(v31 + 8 * v35++);
                if (v32)
                {
                  v29 = v35 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              v12 = 0;
              v10 = 0;
              v9 = v29;
              goto LABEL_8;
            }
          }
          v12 = 0;
          v10 = 0;
          v9 = v34;
          goto LABEL_8;
        }
        v14 = __CocoaSet.Iterator.next()(a1);
        if (!v14
          || (v15 = v14,
              v41 = v14,
              v16 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr),
              swift_unknownObjectRetain(v15),
              swift_dynamicCast(&v42, &v41, (char *)&type metadata for Swift.AnyObject + 8, v16, 7),
              v12 = v42,
              swift_unknownObjectRelease(v15),
              !v12))
        {
LABEL_47:
          swift_retain();
          sub_1004AC51C(a1, a2, v37, a3);
          return;
        }
LABEL_12:
        v17 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a3 + 40));
        v18 = -1 << *(_BYTE *)(a3 + 32);
        v19 = v17 & ~v18;
        v20 = v19 >> 6;
        v21 = 1 << v19;
        if (((1 << v19) & *(_QWORD *)(v39 + 8 * (v19 >> 6))) == 0)
          goto LABEL_3;
        sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
        v22 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v19);
        v23 = static NSObject.== infix(_:_:)(v22, v12);

        if ((v23 & 1) != 0)
          break;
        v24 = ~v18;
        for (i = v19 + 1; ; i = v26 + 1)
        {
          v26 = i & v24;
          if (((*(_QWORD *)(v39 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
            break;
          v27 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v26);
          v28 = static NSObject.== infix(_:_:)(v27, v12);

          if ((v28 & 1) != 0)
          {

            v20 = v26 >> 6;
            v21 = 1 << v26;
            goto LABEL_25;
          }
        }
LABEL_3:

      }
LABEL_25:
      v33 = a1[v20];
      a1[v20] = v33 & ~v21;
    }
    while ((v21 & v33) == 0);
    v7 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v37 != 1)
      continue;
    break;
  }
}

void sub_10021715C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v10 = (_QWORD *)*a5;
  v12 = sub_10007EF08(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1002E8E54();
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_unknownObjectRelease(*(_QWORD *)(v19 + 8 * v12));
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1002E0754(v15, a4 & 1);
  v20 = sub_10007EF08(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

id sub_1002172B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  Class isa;
  uint64_t v34;
  unint64_t v35;
  Class v36;
  void *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE *v56;
  NSSet v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  Class v63;
  _BYTE v64[24];
  uint64_t v65;
  unint64_t v66;
  _BOOL4 v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77[48];
  uint64_t v78;
  char v79[32];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  __chkstk_darwin(v2);
  *(_QWORD *)&v70 = &v64[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = &v64[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v64[-v8];
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  __chkstk_darwin(v12);
  v15 = *(char **)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v15)
    return 0;
  v71 = &v64[-v14];
  v72 = v13;
  v16 = &v15[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  swift_beginAccess(&v15[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL], v79, 0, 0);
  v17 = (uint64_t)v16;
  v18 = v72;
  sub_1000271D4(v17, (uint64_t)v9, &qword_100643470);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v18) == 1)
  {
    sub_10000CB4C((uint64_t)v9, &qword_100643470);
    return 0;
  }
  v66 = v2;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v71, v9, v18);
  v69 = v15;
  v67 = URL.startAccessingSecurityScopedResource()();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, 1, 1, v18);
  v21 = URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)(0, 0, v6);
  v68 = v11;
  v66 = 0;
  v23 = v22;
  v24 = v21;
  sub_10000CB4C((uint64_t)v6, &qword_100643470);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationActivityIdentifier + 8);
  v26 = objc_allocWithZone((Class)NSUserActivity);
  swift_bridgeObjectRetain(v25);
  v27 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v26, "initWithActivityType:", v27, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v28 = sub_10006922C(&qword_100643CC0);
  inited = swift_initStackObject(v28, v77);
  v70 = xmmword_1004D9670;
  *(_OWORD *)(inited + 16) = xmmword_1004D9670;
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey);
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey + 8);
  *(_QWORD *)(inited + 32) = v31;
  *(_QWORD *)(inited + 40) = v30;
  swift_bridgeObjectRetain(v30);
  v32 = sub_1003F98B8(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, &type metadata for String);
  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setRequiredUserInfoKeys:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v65 = sub_10006922C((uint64_t *)&unk_100651EC0);
  v34 = swift_initStackObject(v65, &v76);
  *(_OWORD *)(v34 + 16) = v70;
  v74 = v31;
  v75 = v30;
  swift_bridgeObjectRetain(v30);
  AnyHashable.init<A>(_:)(&v74, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v34 + 96) = &type metadata for Data;
  *(_QWORD *)(v34 + 72) = v24;
  *(_QWORD *)(v34 + 80) = v23;
  sub_10012F5E0(v24, v23);
  v35 = sub_1003F1838(v34);
  v36 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setUserInfo:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v37 = *(void **)&v69[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  v38 = v69;
  v39 = v23;
  if (v37)
  {
    v40 = v24;
    v41 = objc_msgSend(v37, "userActivity");
    v42 = v72;
    if (v41
      && (v43 = v41, v44 = objc_msgSend(v41, "userInfo"), v43, v44))
    {
      v45 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v44, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v46 = swift_bridgeObjectRetain(v45);
      v47 = sub_100204288(v46);
      v48 = objc_msgSend(v19, "requiredUserInfoKeys", swift_bridgeObjectRelease(v45).n128_f64[0]);
      if (v48)
      {
        v49 = v48;
        v50 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v48, &type metadata for String, &protocol witness table for String);

        v78 = v50;
        v51 = *(_QWORD *)(v47 + 16);
        if (v51)
        {
          v66 = v39;
          v52 = (uint64_t *)(v47 + 40);
          do
          {
            v53 = *(v52 - 1);
            v54 = *v52;
            swift_bridgeObjectRetain(*v52);
            sub_10007AB00(&v74, v53, v54);
            swift_bridgeObjectRelease(v75);
            v52 += 2;
            --v51;
          }
          while (v51);
          v55 = swift_bridgeObjectRelease(v47).n128_u64[0];
          v50 = v78;
          v38 = v69;
          v39 = v66;
        }
        else
        {
          v55 = swift_bridgeObjectRelease(v47).n128_u64[0];
        }
        if (v50)
        {
          v57.super.isa = Set._bridgeToObjectiveC()().super.isa;
          v55 = swift_bridgeObjectRelease(v50).n128_u64[0];
        }
        else
        {
          v57.super.isa = 0;
        }
        objc_msgSend(v19, "setRequiredUserInfoKeys:", v57.super.isa, *(double *)&v55);

      }
      else
      {
        objc_msgSend(v19, "setRequiredUserInfoKeys:", 0, swift_bridgeObjectRelease(v47).n128_f64[0]);
      }
      v58 = swift_initStackObject(v65, &v73);
      *(_OWORD *)(v58 + 16) = v70;
      v59 = (uint64_t *)DOCUserActivityQuickLookStateRestorationUserInfoKey.unsafeMutableAddressor();
      v61 = *v59;
      v60 = v59[1];
      v74 = v61;
      v75 = v60;
      swift_bridgeObjectRetain(v60);
      AnyHashable.init<A>(_:)(&v74, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(v58 + 96) = sub_10006922C((uint64_t *)&unk_100647BC0);
      *(_QWORD *)(v58 + 72) = v45;
      v62 = sub_1003F1838(v58);
      v63 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v19, "addUserInfoEntriesFromDictionary:", v63, swift_bridgeObjectRelease(v62).n128_f64[0]);
      sub_1000D4C00(v40, v39);

      v42 = v72;
    }
    else
    {
      sub_1000D4C00(v24, v39);
    }
  }
  else
  {
    sub_1000D4C00(v24, v23);
    v42 = v72;
  }
  if (v67)
  {
    v56 = v71;
    URL.stopAccessingSecurityScopedResource()();

    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v56, v42);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v71, v42);

  }
  return v19;
}

uint64_t sub_100217C30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100217C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021205C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100217C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10006922C(&qword_100643470) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100217D0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10006922C(&qword_100643470) - 8) + 80);
  sub_100211D78(v0 + ((v1 + 32) & ~v1), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100217D40(void *a1, char *a2, int a3, void *a4, void *a5, uint64_t a6, NSObject *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  NSURL *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  BOOL v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  __n128 v84;
  void (*v85)(char *, uint64_t);
  os_log_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  char *v114;
  id v115;
  NSURL *v116;
  void *v117;
  void *v118;
  void (*v119)(char *, uint64_t);
  unsigned __int8 v120;
  id v121;
  id v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void *v127;
  char *v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  void *v133;
  char *v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  id v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  char *v156;
  os_log_t v157;
  int v158;
  void *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  id v164;
  char *v165;
  char *v166;
  char *v167;
  _BOOL4 v168;
  char *v169;
  int v170;
  NSObject *v171;
  uint64_t v172;
  void *v173;
  id v174;
  uint64_t v175;
  char *v176;
  char *v177;
  void (*v178)(char *, uint64_t);
  uint64_t v179;
  _BOOL4 v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  _QWORD v188[3];
  char v189[8];
  _QWORD v190[3];
  char v191[8];
  uint64_t v192;
  char v193[8];
  id v194;

  v171 = a7;
  v172 = a6;
  v173 = a5;
  v174 = a4;
  v170 = a3;
  v165 = a2;
  v8 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v8);
  v169 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for Logger(0);
  v187 = *(_QWORD *)(v185 - 8);
  __chkstk_darwin(v185);
  v161 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v160 = (char *)&v155 - v12;
  __chkstk_darwin(v13);
  v177 = (char *)&v155 - v14;
  __chkstk_darwin(v15);
  v184 = (char *)&v155 - v16;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v166 = (char *)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v182 = (char *)&v155 - v21;
  __chkstk_darwin(v22);
  v176 = (char *)&v155 - v23;
  v24 = sub_10006922C(&qword_100647C88);
  __chkstk_darwin(v24);
  v167 = (char *)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v163 = (char *)&v155 - v27;
  __chkstk_darwin(v28);
  v181 = (uint64_t)&v155 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v155 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v155 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v155 - v37;
  v180 = URL.startAccessingSecurityScopedResource()();
  v39 = (uint64_t)&v38[*(int *)(v24 + 48)];
  v179 = (uint64_t)a1;
  sub_100210930((uint64_t)v38, v39, a1);
  v168 = URL.startAccessingSecurityScopedResource()();
  v164 = (id)objc_opt_self(NSFileManager);
  v40 = objc_msgSend(v164, "defaultManager");
  v183 = v24;
  v41 = (uint64_t)&v35[*(int *)(v24 + 48)];
  v186 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v186(v35, v38, v17);
  sub_1000271D4(v39, v41, &qword_100643470);
  URL._bridgeToObjectiveC()(v42);
  v44 = v43;
  v45 = v17;
  sub_10000CB4C(v41, &qword_100643470);
  v175 = v18;
  v178 = *(void (**)(char *, uint64_t))(v18 + 8);
  v178(v35, v17);
  v194 = 0;
  v46 = objc_msgSend(v40, "_doc_importItemAtURL:toDestination:error:", v44, 1, &v194);

  v47 = v194;
  if (v46)
  {
    v48 = v176;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v46);

    v50 = Logger.Application.unsafeMutableAddressor(v49);
    v51 = *(char **)(v187 + 16);
    v161 = (char *)v50;
    v52 = v185;
    v165 = v51;
    ((void (*)(char *))v51)(v184);
    v53 = (uint64_t)&v32[*(int *)(v183 + 48)];
    v177 = v38;
    v54 = v38;
    v55 = (uint64_t (*)(char *, char *, uint64_t))v186;
    v186(v32, v54, v17);
    sub_1000271D4(v39, v53, &qword_100643470);
    sub_100070EDC((uint64_t)v32, v181, &qword_100647C88);
    v56 = v55(v182, v48, v17);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.debug.getter();
    v59 = v58;
    v60 = os_log_type_enabled(v57, v58);
    v162 = v39;
    if (v60)
    {
      v61 = swift_slowAlloc(32, -1);
      v159 = (void *)swift_slowAlloc(96, -1);
      v194 = v159;
      *(_DWORD *)v61 = 136315650;
      v158 = v59;
      v192 = sub_1000544FC(0xD000000000000031, 0x8000000100519B10, (uint64_t *)&v194);
      v156 = v193;
      v62 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
      *(_WORD *)(v61 + 12) = 2080;
      v155 = v61 + 14;
      v63 = v183;
      v64 = *(int *)(v183 + 48);
      v157 = v57;
      v65 = v48;
      v66 = (uint64_t)&v35[v64];
      v67 = v181;
      v68 = v181 + v64;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v186)(v35, v181, v45, v62);
      sub_1000271D4(v68, v66, &qword_100643470);
      v69 = v163;
      v70 = (uint64_t)&v163[*(int *)(v63 + 48)];
      v71 = v175;
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v163, v35, v45);
      v72 = v66;
      v48 = v65;
      sub_100070EDC(v72, v70, &qword_100643470);
      v73 = v69;
      v74 = v63;
      v75 = String.init<A>(describing:)(v73, v63);
      v77 = v76;
      v192 = sub_1000544FC(v75, v76, (uint64_t *)&v194);
      v78 = v156;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v156);
      swift_bridgeObjectRelease(v77);
      sub_10000CB4C(v67, &qword_100647C88);
      *(_WORD *)(v61 + 22) = 2080;
      v79 = sub_10005A360((unint64_t *)&qword_100646B20, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v80 = v182;
      v81 = dispatch thunk of CustomStringConvertible.description.getter(v45, v79);
      v83 = v82;
      v192 = sub_1000544FC(v81, v82, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v78);
      v84 = swift_bridgeObjectRelease(v83);
      v85 = v178;
      ((void (*)(char *, uint64_t, __n128))v178)(v80, v45, v84);
      v86 = v157;
      _os_log_impl((void *)&_mh_execute_header, v157, (os_log_type_t)v158, "%s: imported URL: %s to downloads at URL: %s", (uint8_t *)v61, 0x20u);
      v87 = v159;
      swift_arrayDestroy(v159, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      v88 = v185;
      v187 = *(_QWORD *)(v187 + 8);
      ((void (*)(char *))v187)(v184);
      v89 = v167;
      v90 = v45;
      v91 = v74;
    }
    else
    {
      sub_10000CB4C(v181, &qword_100647C88);
      v85 = v178;
      v178(v182, v17);

      v88 = v52;
      v187 = *(_QWORD *)(v187 + 8);
      ((void (*)(char *, uint64_t))v187)(v184, v52);
      v71 = v175;
      v89 = v167;
      v90 = v45;
      v91 = v183;
    }
    v109 = (uint64_t)&v89[*(int *)(v91 + 48)];
    v110 = (uint64_t)v177;
    v111 = v186;
    v186(v89, v177, v90);
    sub_1000271D4(v162, v109, &qword_100643470);
    v112 = v71;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v109, 1, v90) == 1)
    {
      sub_10000CB4C(v109, &qword_100643470);
      v85(v89, v90);
    }
    else
    {
      v113 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
      v114 = v166;
      v113(v166, v109, v90);
      v85(v89, v90);
      v115 = objc_msgSend(v164, "defaultManager");
      URL._bridgeToObjectiveC()(v116);
      v118 = v117;
      v194 = 0;
      v119 = v85;
      v120 = objc_msgSend(v115, "removeItemAtURL:error:", v117, &v194);

      v121 = v194;
      if ((v120 & 1) != 0)
      {
        v122 = v194;
        v119(v114, v90);
        v85 = v119;
      }
      else
      {
        v136 = v194;
        v137 = _convertNSErrorToError(_:)(v121);

        swift_willThrow(v138);
        v139 = v160;
        v140 = v88;
        ((void (*)(char *, char *, uint64_t))v165)(v160, v161, v88);
        swift_errorRetain(v137);
        v141 = swift_errorRetain(v137);
        v142 = Logger.logObject.getter(v141);
        v143 = static os_log_type_t.error.getter(v142);
        if (os_log_type_enabled(v142, v143))
        {
          v144 = swift_slowAlloc(22, -1);
          v184 = (char *)swift_slowAlloc(64, -1);
          v194 = v184;
          *(_DWORD *)v144 = 136315394;
          v192 = sub_1000544FC(0xD000000000000031, 0x8000000100519B10, (uint64_t *)&v194);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
          *(_WORD *)(v144 + 12) = 2080;
          swift_getErrorValue(v137, v189, v188);
          v145 = Error.localizedDescription.getter(v188[1], v188[2]);
          v147 = v146;
          v192 = sub_1000544FC(v145, v146, (uint64_t *)&v194);
          v48 = v176;
          v112 = v175;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
          swift_bridgeObjectRelease(v147);
          swift_errorRelease(v137);
          swift_errorRelease(v137);
          _os_log_impl((void *)&_mh_execute_header, v142, v143, "%s: Failed to delete temporary directory. Error: %s", (uint8_t *)v144, 0x16u);
          v148 = v184;
          swift_arrayDestroy(v184, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v148, -1, -1);
          swift_slowDealloc(v144, -1, -1);

        }
        else
        {

          swift_errorRelease(v137);
          swift_errorRelease(v137);
        }
        swift_errorRelease(v137);
        ((void (*)(char *, uint64_t))v187)(v139, v140);
        v85 = v178;
        v178(v166, v90);
        v110 = (uint64_t)v177;
      }
      v111 = v186;
    }
    v149 = (uint64_t)v169;
    v111(v169, v48, v90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v112 + 56))(v149, 0, 1, v90);
    sub_100207A18(v149, 0, v170 & 1, (uint64_t)v174, v173, v172, v171);
    sub_10000CB4C(v149, &qword_100643470);
    if (v168)
      URL.stopAccessingSecurityScopedResource()();
    v85(v48, v90);
    sub_10000CB4C(v110, &qword_100647C88);
    if (v180)
LABEL_23:
      URL.stopAccessingSecurityScopedResource()();
  }
  else
  {
    v92 = v47;
    v93 = _convertNSErrorToError(_:)(v47);

    swift_willThrow(v94);
    v95 = sub_10000CB4C((uint64_t)v38, &qword_100647C88);
    v96 = Logger.Application.unsafeMutableAddressor(v95);
    v97 = *(void (**)(char *, uint64_t, uint64_t))(v187 + 16);
    v98 = v185;
    v97(v177, v96, v185);
    swift_errorRetain(v93);
    v99 = swift_errorRetain(v93);
    v100 = Logger.logObject.getter(v99);
    v101 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = swift_slowAlloc(22, -1);
      v186 = (void (*)(char *, char *, uint64_t))v97;
      v103 = v102;
      v104 = (void *)swift_slowAlloc(64, -1);
      v194 = v104;
      *(_DWORD *)v103 = 136315394;
      v192 = sub_1000544FC(0xD000000000000031, 0x8000000100519B10, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
      *(_WORD *)(v103 + 12) = 2080;
      swift_getErrorValue(v93, v191, v190);
      v105 = Error.localizedDescription.getter(v190[1], v190[2]);
      v107 = v106;
      v192 = sub_1000544FC(v105, v106, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
      swift_bridgeObjectRelease(v107);
      swift_errorRelease(v93);
      swift_errorRelease(v93);
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "%s: import to Downloads failed. Error: %s", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy(v104, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v104, -1, -1);
      v108 = v103;
      v97 = (void (*)(char *, uint64_t, uint64_t))v186;
      swift_slowDealloc(v108, -1, -1);
    }
    else
    {
      swift_errorRelease(v93);
      swift_errorRelease(v93);
    }

    v123 = *(void (**)(char *, uint64_t))(v187 + 8);
    v124 = v98;
    v123(v177, v98);
    v125 = v165;
    v126 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
    v127 = *(void **)&v165[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController];
    if (!v127)
    {
      v128 = v161;
      v129 = ((uint64_t (*)(void))v97)();
      v130 = Logger.logObject.getter(v129);
      v131 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v130, v131))
      {
        v132 = (uint8_t *)swift_slowAlloc(12, -1);
        v133 = (void *)swift_slowAlloc(32, -1);
        v194 = v133;
        *(_DWORD *)v132 = 136315138;
        v192 = sub_1000544FC(0xD000000000000031, 0x8000000100519B10, (uint64_t *)&v194);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193);
        _os_log_impl((void *)&_mh_execute_header, v130, v131, "%s: fileImportController was nil, creating a new one.", v132, 0xCu);
        swift_arrayDestroy(v133, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v133, -1, -1);
        swift_slowDealloc(v132, -1, -1);

        v134 = v161;
        v135 = v185;
      }
      else
      {

        v134 = v128;
        v135 = v124;
      }
      v123(v134, v135);
      v150 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCImportFileController()), "init");
      v151 = *(void **)&v125[v126];
      *(_QWORD *)&v125[v126] = v150;

      v152 = *(_QWORD *)&v125[v126];
      if (!v152
        || (v153 = v152 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate,
            *(_QWORD *)(v153 + 8) = &off_1005D21F8,
            swift_unknownObjectWeakAssign(v153, v125),
            (v127 = *(void **)&v125[v126]) == 0))
      {

        swift_release(v172);
        __break(1u);
        return;
      }
    }
    v154 = v127;
    sub_1004894FC(v179);

    swift_errorRelease(v93);
    if (v180)
      goto LABEL_23;
  }
}

void sub_100218CEC(uint64_t a1, NSObject *a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  dispatch_group_t v34;
  id v35;
  char *v36;
  id v37;
  NSObject *v38;
  _QWORD v39[2];
  char *v40;
  int64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  dispatch_group_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[5];
  void *v51;

  v46 = a2;
  v47 = a3;
  v8 = type metadata accessor for URL(0);
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v14 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v15 = Set.Iterator.init(_cocoa:)(v50, v12, v13, v14);
    a1 = v50[0];
    v42 = v50[1];
    v16 = v50[2];
    v17 = v50[3];
    v18 = v50[4];
  }
  else
  {
    v19 = -1 << *(_BYTE *)(a1 + 32);
    v20 = *(_QWORD *)(a1 + 56);
    v42 = a1 + 56;
    v21 = ~v19;
    v22 = -v19;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    else
      v23 = -1;
    v18 = v23 & v20;
    v15 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v16 = v21;
    v17 = 0;
  }
  v39[1] = v16;
  v41 = (unint64_t)(v16 + 64) >> 6;
  v43 = a4 & 1;
  v40 = (char *)&type metadata for Swift.AnyObject + 8;
  v48 = a1;
  if (a1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v18)
    {
      v24 = (v18 - 1) & v18;
      v25 = __clz(__rbit64(v18)) | (v17 << 6);
      v26 = v17;
      goto LABEL_32;
    }
    v31 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v31 >= v41)
      goto LABEL_35;
    v32 = *(_QWORD *)(v42 + 8 * v31);
    v26 = v17 + 1;
    if (!v32)
    {
      v26 = v17 + 2;
      if (v17 + 2 >= v41)
        goto LABEL_35;
      v32 = *(_QWORD *)(v42 + 8 * v26);
      if (!v32)
      {
        v26 = v17 + 3;
        if (v17 + 3 >= v41)
          goto LABEL_35;
        v32 = *(_QWORD *)(v42 + 8 * v26);
        if (!v32)
        {
          v26 = v17 + 4;
          if (v17 + 4 >= v41)
            goto LABEL_35;
          v32 = *(_QWORD *)(v42 + 8 * v26);
          if (!v32)
          {
            v26 = v17 + 5;
            if (v17 + 5 >= v41)
              goto LABEL_35;
            v32 = *(_QWORD *)(v42 + 8 * v26);
            if (!v32)
            {
              v33 = v17 + 6;
              while (v41 != v33)
              {
                v32 = *(_QWORD *)(v42 + 8 * v33++);
                if (v32)
                {
                  v26 = v33 - 1;
                  a1 = v48;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_10021C590(v48);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v24 = (v32 - 1) & v32;
    v25 = __clz(__rbit64(v32)) + (v26 << 6);
LABEL_32:
    v30 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v25);
    if (!v30)
      goto LABEL_35;
    while (1)
    {
      v34 = v46;
      dispatch_group_enter(v46);
      v35 = objc_msgSend(v30, "URL");
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

      v36 = (char *)v47;
      v37 = v30;
      swift_retain();
      v38 = v34;
      sub_100217D40(v10, v36, v43, v36, v37, a5, v38);

      swift_release(a5);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);

      v17 = v26;
      v18 = v24;
      a1 = v48;
      if ((v48 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v27 = __CocoaSet.Iterator.next()(v15);
      if (v27)
      {
        v28 = v27;
        v49 = v27;
        v29 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
        swift_unknownObjectRetain(v28);
        swift_dynamicCast(&v51, &v49, v40, v29, 7);
        v30 = v51;
        swift_unknownObjectRelease(v28);
        v26 = v17;
        v24 = v18;
        if (v30)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_1002190B8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char **v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void **v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  id v48;
  void *v49;
  void **v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  void **v55;
  void **v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void **v62;
  void **v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void (*)(void *, uint64_t, unint64_t), uint64_t);
  char *v75;
  uint64_t v76;
  void (*v77)(void (*)(void *), uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD, uint64_t);
  char *v81;
  uint64_t v82;
  char v83;
  char *v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  double v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void **v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  id v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  void **v118;
  uint64_t v119;
  char *v120;
  void *v121;
  id v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;
  void **v130;
  id v131;
  id v132;
  uint64_t v133;
  _QWORD *v134;
  void *v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  void **v142;
  uint64_t v143;
  uint64_t v144;
  void **v145;
  char *v146;
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  uint64_t v149;
  char *v150;
  void **v151;
  void **v152;
  void **aBlock;
  uint64_t v154;
  uint64_t (*v155)(uint64_t);
  void *v156;
  uint64_t (*v157)();
  _QWORD *v158;
  _QWORD v159[2];
  __int128 v160;
  __int128 v161;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v146 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v143 - v8;
  __chkstk_darwin(v10);
  v150 = (char *)&v143 - v11;
  __chkstk_darwin(v12);
  v151 = (void **)((char *)&v143 - v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v143 - v15;
  v18 = Logger.Application.unsafeMutableAddressor(v17);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v16, v18, v4);
  v20 = a1;
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter(v21);
  LODWORD(v152) = v22;
  v23 = os_log_type_enabled(v21, v22);
  v24 = &selRef_showTips;
  v148 = v9;
  if (v23)
  {
    v25 = swift_slowAlloc(22, -1);
    v149 = v18;
    v26 = v25;
    v145 = (void **)swift_slowAlloc(64, -1);
    aBlock = v145;
    *(_DWORD *)v26 = 136315394;
    v147 = v19;
    *(_QWORD *)&v160 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, (uint64_t *)&aBlock);
    *(_QWORD *)&v27 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8).n128_u64[0];
    *(_WORD *)(v26 + 12) = 2080;
    v28 = v2;
    v29 = objc_msgSend(v20, "activityType", v27, v26 + 14);
    v30 = v4;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v144 = v5;
    v33 = v32;

    v2 = v28;
    v19 = v147;
    v34 = v31;
    v4 = v30;
    v24 = &selRef_showTips;
    *(_QWORD *)&v160 = sub_1000544FC(v34, v33, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8);

    swift_bridgeObjectRelease(v33);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v152, "%s: continue activity: %s", (uint8_t *)v26, 0x16u);
    v35 = v145;
    swift_arrayDestroy(v145, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v36 = v26;
    v18 = v149;
    swift_slowDealloc(v36, -1, -1);

    v37 = *(void (**)(char *, uint64_t))(v144 + 8);
  }
  else
  {

    v37 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  v37(v16, v4);
  v38 = objc_msgSend(v20, v24[225]);
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  if (v39 == 0xD000000000000020)
  {
    v42 = 0x8000000100519670;
    if (v41 == 0x8000000100519670)
      goto LABEL_6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, 0xD000000000000020, 0x8000000100519670, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v41);
    goto LABEL_12;
  }
  if (v39 == 0xD00000000000001DLL)
  {
    v42 = 0x8000000100519BD0;
    if (v41 == 0x8000000100519BD0)
    {
LABEL_6:
      swift_bridgeObjectRelease(v42);
LABEL_12:
      type metadata accessor for DOCUserActivityController(0);
      v44 = swift_allocObject(&unk_1005D2E28, 32, 7);
      *(_QWORD *)(v44 + 16) = v2;
      *(_QWORD *)(v44 + 24) = v20;
      v45 = v20;
      v46 = v2;
      static DOCUserActivityController.fetchURLFrom(activity:completion:)(v45, sub_10021C69C, v44);
      v47 = v44;
LABEL_13:
      swift_release(v47);
      return;
    }
  }
  v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, 0xD00000000000001DLL, 0x8000000100519BD0, 0);
  swift_bridgeObjectRelease(v41);
  if ((v43 & 1) != 0)
    goto LABEL_12;
  v48 = objc_msgSend((id)objc_opt_self(DOCOpenLocationIntent), "intentFromActivity:", v20);
  if (v48)
  {
    v49 = v48;
    v50 = v151;
    v19((char *)v151, v18, v4);
    v51 = v20;
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.debug.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc(22, -1);
      v55 = (void **)swift_slowAlloc(64, -1);
      v150 = v2;
      v56 = v55;
      aBlock = v55;
      *(_DWORD *)v54 = 136315394;
      *(_QWORD *)&v160 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, (uint64_t *)&aBlock);
      *(_QWORD *)&v57 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8).n128_u64[0];
      *(_WORD *)(v54 + 12) = 2080;
      *(_QWORD *)&v160 = objc_msgSend(v51, "interaction", v57);
      v58 = sub_10006922C(&qword_100647CA8);
      v152 = (void **)v4;
      v59 = String.init<A>(describing:)(&v160, v58);
      v61 = v60;
      *(_QWORD *)&v160 = sub_1000544FC(v59, v60, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8);

      swift_bridgeObjectRelease(v61);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s: Handle Shortcuts open folder action: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v56, 2, (char *)&type metadata for Any + 8);
      v62 = v56;
      v2 = v150;
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      v63 = v151;
      v64 = (uint64_t)v152;
    }
    else
    {

      v63 = v50;
      v64 = v4;
    }
    v37((char *)v63, v64);
    v70 = type metadata accessor for DOCOpenLocationIntentActionResolver(0);
    swift_allocObject(v70, 96, 7);
    v71 = v49;
    v72 = DOCOpenLocationIntentActionResolver.init(with:)();
    v73 = swift_allocObject(&unk_1005D2DB0, 24, 7);
    *(_QWORD *)(v73 + 16) = v2;
    v74 = *(void (**)(void (*)(void *, uint64_t, unint64_t), uint64_t))(*(_QWORD *)v72 + 184);
    v75 = v2;
    v74(sub_10021C63C, v73);
    v76 = swift_allocObject(&unk_1005D2DD8, 24, 7);
    *(_QWORD *)(v76 + 16) = v75;
    v77 = *(void (**)(void (*)(void *), uint64_t))(*(_QWORD *)v72 + 232);
    v78 = v75;
    v77(sub_10021C65C, v76);
    v79 = swift_allocObject(&unk_1005D2E00, 24, 7);
    *(_QWORD *)(v79 + 16) = v78;
    v80 = *(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)v72 + 208);
    v81 = v78;
    v82 = v80(sub_10021C67C, v79);
    (*(void (**)(uint64_t))(*(_QWORD *)v72 + 256))(v82);

    v47 = v72;
    goto LABEL_13;
  }
  v65 = objc_msgSend(v20, "activityType");
  v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v68 = v67;

  if (v66 == 0xD000000000000024 && v68 == 0x80000001005198E0)
  {
    v69 = swift_bridgeObjectRelease(0x80000001005198E0);
LABEL_24:
    v84 = v150;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v19)(v150, v18, v4, v69);
    v85 = v20;
    v86 = Logger.logObject.getter(v85);
    v87 = static os_log_type_t.debug.getter(v86);
    if (os_log_type_enabled(v86, v87))
    {
      v88 = swift_slowAlloc(22, -1);
      v151 = (void **)swift_slowAlloc(64, -1);
      aBlock = v151;
      *(_DWORD *)v88 = 136315394;
      *(_QWORD *)&v160 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, (uint64_t *)&aBlock);
      *(_QWORD *)&v89 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8).n128_u64[0];
      *(_WORD *)(v88 + 12) = 2080;
      v90 = objc_msgSend(v85, "activityType", v89);
      v152 = (void **)v4;
      v91 = v90;
      v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
      v94 = v93;

      *(_QWORD *)&v160 = sub_1000544FC(v92, v94, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8);

      swift_bridgeObjectRelease(v94);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "%s: Continue folder drop activity: %s", (uint8_t *)v88, 0x16u);
      v95 = v151;
      swift_arrayDestroy(v151, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v88, -1, -1);

      v96 = v150;
      v97 = (uint64_t)v152;
LABEL_51:
      v37(v96, v97);
      return;
    }

    v96 = v84;
LABEL_50:
    v97 = v4;
    goto LABEL_51;
  }
  v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, 0xD000000000000024, 0x80000001005198E0, 0);
  v69 = swift_bridgeObjectRelease(v68);
  if ((v83 & 1) != 0)
    goto LABEL_24;
  v149 = v18;
  v98 = objc_msgSend(v20, "activityType", v69.n128_f64[0]);
  v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v101 = v100;

  v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSQueryContinuationActionType);
  v104 = v102;
  if (v99 == v103 && v101 == v102)
  {
    swift_bridgeObjectRelease_n(v101, 2);
    goto LABEL_31;
  }
  v105 = _stringCompareWithSmolCheck(_:_:expecting:)(v99, v101, v103, v102, 0);
  swift_bridgeObjectRelease(v101);
  swift_bridgeObjectRelease(v104);
  if ((v105 & 1) != 0)
  {
LABEL_31:
    v150 = v2;
    v106 = v148;
    v107 = v149;
    v19(v148, v149, v4);
    v108 = v20;
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.debug.getter(v109);
    if (os_log_type_enabled(v109, v110))
    {
      v111 = swift_slowAlloc(22, -1);
      v152 = (void **)swift_slowAlloc(64, -1);
      aBlock = v152;
      *(_DWORD *)v111 = 136315394;
      *(_QWORD *)&v160 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, (uint64_t *)&aBlock);
      v147 = v19;
      *(_QWORD *)&v112 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8).n128_u64[0];
      *(_WORD *)(v111 + 12) = 2080;
      v151 = (void **)(v111 + 14);
      v113 = v4;
      v114 = objc_msgSend(v108, "activityType", v112);
      v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
      v117 = v116;

      v4 = v113;
      *(_QWORD *)&v160 = sub_1000544FC(v115, v117, (uint64_t *)&aBlock);
      v19 = v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8);

      swift_bridgeObjectRelease(v117);
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "%s: Continue Spotlight search activity: %s", (uint8_t *)v111, 0x16u);
      v118 = v152;
      swift_arrayDestroy(v152, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v118, -1, -1);
      v119 = v111;
      v107 = v149;
      swift_slowDealloc(v119, -1, -1);

      v120 = v148;
    }
    else
    {

      v120 = v106;
    }
    v37(v120, v4);
    v121 = *(void **)&v150[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v121)
    {
      v122 = v121;
      v123 = objc_msgSend(v108, "userInfo");
      if (v123)
      {
        v124 = v123;
        v125 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v123, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v159[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchQueryString);
        v159[1] = v126;
        AnyHashable.init<A>(_:)(v159, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v125 + 16))
        {
          v127 = sub_100067654((uint64_t)&aBlock);
          v107 = v149;
          if ((v128 & 1) != 0)
          {
            sub_100069BD8(*(_QWORD *)(v125 + 56) + 32 * v127, (uint64_t)&v160);
          }
          else
          {
            v160 = 0u;
            v161 = 0u;
          }
        }
        else
        {
          v160 = 0u;
          v161 = 0u;
          v107 = v149;
        }
        sub_100067748((uint64_t)&aBlock);
        swift_bridgeObjectRelease(v125);
        if (*((_QWORD *)&v161 + 1))
        {
          if ((swift_dynamicCast(&aBlock, &v160, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v130 = aBlock;
            v129 = v154;
            v131 = objc_msgSend(v122, "effectiveFullBrowser");
            v132 = sub_100083AE8();
            v133 = swift_allocObject(&unk_1005D2B80, 24, 7);
            swift_unknownObjectWeakInit(v133 + 16);
            v134 = (_QWORD *)swift_allocObject(&unk_1005D2D60, 56, 7);
            v134[2] = v133;
            v134[3] = 0;
            v134[4] = 0;
            v134[5] = v130;
            v134[6] = v129;
            v157 = sub_10021C58C;
            v158 = v134;
            aBlock = _NSConcreteStackBlock;
            v154 = 1107296256;
            v155 = sub_10004A82C;
            v156 = &unk_1005D2D78;
            v135 = _Block_copy(&aBlock);
            v136 = v158;
            swift_bridgeObjectRetain(v129);
            swift_release(v136);
            objc_msgSend(v132, "performAfterSearchInitialization:", v135);
            _Block_release(v135);

            swift_bridgeObjectRelease(v129);
            return;
          }

          goto LABEL_47;
        }
      }
      else
      {
        v160 = 0u;
        v161 = 0u;
        v107 = v149;
      }

      sub_10000CB4C((uint64_t)&v160, &qword_100642730);
    }
LABEL_47:
    v137 = v146;
    v138 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v146, v107, v4);
    v139 = Logger.logObject.getter(v138);
    v140 = static os_log_type_t.error.getter(v139);
    if (os_log_type_enabled(v139, v140))
    {
      v141 = (uint8_t *)swift_slowAlloc(12, -1);
      v142 = (void **)swift_slowAlloc(32, -1);
      aBlock = v142;
      *(_DWORD *)v141 = 136315138;
      *(_QWORD *)&v160 = sub_1000544FC(0xD000000000000012, 0x8000000100519BF0, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, (char *)&v160 + 8);
      _os_log_impl((void *)&_mh_execute_header, v139, v140, "%s: Unable to continue activity since main view controller not set, of search query string not is nil", v141, 0xCu);
      swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v142, -1, -1);
      swift_slowDealloc(v141, -1, -1);
    }

    v96 = v137;
    goto LABEL_50;
  }
}

void sub_100219F84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Logger.Application.unsafeMutableAddressor(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v24 = v4;
    v14 = v13;
    v23 = swift_slowAlloc(64, -1);
    v27 = v23;
    *(_DWORD *)v14 = 136315394;
    v26 = sub_1000544FC(0xD000000000000019, 0x8000000100519EA0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    *(_WORD *)(v14 + 12) = 2080;
    v22 = v14 + 14;
    v25 = v2;
    v15 = sub_10004F2F0(0, &qword_100651EE0, UIOpenURLContext_ptr);
    v16 = sub_1000835B4(&qword_100647C80, &qword_100651EE0, UIOpenURLContext_ptr);
    v17 = swift_bridgeObjectRetain(a1);
    v18 = Set.description.getter(v17, v15, v16);
    v20 = v19;
    swift_bridgeObjectRelease(a1);
    v26 = sub_1000544FC(v18, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s URLContexts: %s", (uint8_t *)v14, 0x16u);
    v21 = v23;
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1002064CC(a1);
}

uint64_t sub_10021A214(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Logger.Application.unsafeMutableAddressor(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = a1;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v30 = v6;
    v16 = v15;
    v29 = swift_slowAlloc(64, -1);
    v34 = v29;
    *(_DWORD *)v16 = 136315394;
    v33 = sub_1000544FC(0xD000000000000032, 0x8000000100519E60, &v34);
    v31 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    *(_WORD *)(v16 + 12) = 2080;
    v27 = v16 + 14;
    v17 = v12;
    v32 = a3;
    v18 = v17;
    v19 = objc_msgSend(v17, "description");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v28 = v7;
    v21 = v12;
    v23 = v22;

    v33 = sub_1000544FC(v20, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);

    a3 = v32;
    v24 = v23;
    v12 = v21;
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s shortcutItem: %s", (uint8_t *)v16, 0x16u);
    v25 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_10020875C(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
}

double sub_10021A49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Logger.Application.unsafeMutableAddressor(v4);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v13 = v10;
    *(_DWORD *)v9 = 136315138;
    v12 = sub_1000544FC(0xD000000000000019, 0x8000000100519CC0, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s [App Shortcut] begin creating app shortcuts", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100205F54((uint64_t)sub_100205CC8, 0);
}

void sub_10021A64C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[5];
  uint64_t v57;

  v2 = v1;
  v4 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - v12;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = Logger.Application.unsafeMutableAddressor(v18);
  v54 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v19, v14);
  v20 = swift_bridgeObjectRetain_n(a1, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.debug.getter(v21);
  v53 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v51 = v2;
    v24 = v23;
    v48 = swift_slowAlloc(64, -1);
    aBlock[0] = v48;
    *(_DWORD *)v24 = 136315394;
    v49 = v6;
    v55 = sub_1000544FC(0xD00000000000002FLL, 0x80000001005195A0, aBlock);
    v50 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, aBlock);
    *(_WORD *)(v24 + 12) = 2080;
    v46 = v24 + 14;
    swift_bridgeObjectRetain(a1);
    v26 = v10;
    v27 = v13;
    v28 = v7;
    v29 = Array.description.getter(v25, v7);
    v47 = v14;
    v31 = v30;
    swift_bridgeObjectRelease(a1);
    v32 = v29;
    v7 = v28;
    v13 = v27;
    v10 = v26;
    v6 = v49;
    v55 = sub_1000544FC(v32, v31, aBlock);
    v8 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v53, "%s: URLs: %s", (uint8_t *)v24, 0x16u);
    v33 = v48;
    swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v34 = v24;
    v2 = v51;
    swift_slowDealloc(v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v47);
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v14);
  }
  v35 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
  v36 = *(char **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController];
  if (v36)
  {
    v37 = &v36[OBJC_IVAR____TtC5Files23DOCImportFileController_delegate];
    *((_QWORD *)v37 + 1) = 0;
    swift_unknownObjectWeakAssign(v37, 0);
    v36 = *(char **)&v2[v35];
  }
  *(_QWORD *)&v2[v35] = 0;

  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v38 = *(unsigned __int8 *)(v8 + 80);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v39(v6, a1 + ((v38 + 32) & ~v38), v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10000CB4C((uint64_t)v6, &qword_100643470);
    }
    else
    {
      v40 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v40(v13, v6, v7);
      v39(v10, (uint64_t)v13, v7);
      v41 = (v38 + 24) & ~v38;
      v42 = swift_allocObject(&unk_1005D22C0, v41 + v52, v38 | 7);
      *(_QWORD *)(v42 + 16) = v2;
      v40((char *)(v42 + v41), v10, v7);
      aBlock[4] = (uint64_t)sub_10021AADC;
      v57 = v42;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10004A82C;
      aBlock[3] = (uint64_t)&unk_1005D22D8;
      v43 = _Block_copy(aBlock);
      v44 = v57;
      v45 = v2;
      swift_release(v44);
      DOCRunInMainThread(v43);
      _Block_release(v43);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
}

uint64_t sub_10021AADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_100209DE4(v0 + ((v1 + 24) & ~v1), 0, 0, 1, 1);
}

uint64_t sub_10021AB2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021AB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10021ABC4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_1002131F4(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), v2 + ((v5 + 25) & ~v5));
}

uint64_t sub_10021AC18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_10021AC44()
{
  uint64_t v0;

  sub_100213614(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_10021AC50(uint64_t a1, void *a2, int a3)
{
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void **v23;
  unint64_t v24;
  void *v25;
  id v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void **v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t inited;
  void ***v41;
  void **v42;
  Swift::Int v43;
  Class isa;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  Class v53;
  id v54;
  id v55;
  id v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  _BYTE *v63;
  os_log_type_t v64;
  uint64_t v65;
  void **v66;
  void **v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t (*v72)(_BYTE *, uint64_t);
  _BYTE *v73;
  uint64_t v74;
  id v75;
  UIWindowSceneActivationConfiguration v76;
  uint64_t v77;
  id v78;
  id v79;
  NSObject *v80;
  NSObject *v81;
  os_log_type_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  NSObject *v87;
  NSObject *v88;
  NSObject *v89;
  id v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  objc_class *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint8_t *v110;
  uint64_t v111;
  void **v112;
  _BYTE v113[4];
  int v114;
  uint64_t v115;
  id v116;
  objc_class *v117;
  _BYTE *v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  _BYTE *v123;
  id v124;
  id v125;
  uint64_t v126;
  _QWORD v127[3];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void **p_isa;
  _QWORD v132[2];
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137[64];
  UIWindowSceneActivationRequestOptions_optional v138;
  UITargetedPreview_optional v139;

  LODWORD(v124) = a3;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v113[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v113[-v11];
  __chkstk_darwin(v13);
  v15 = &v113[-v14];
  if (!((unint64_t)a1 >> 62))
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v16)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease(a1);
    v105 = Logger.Application.unsafeMutableAddressor(v104);
    v106 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v12, v105, v6);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.error.getter(v107);
    if (os_log_type_enabled(v107, v108))
    {
      v109 = v7;
      v110 = (uint8_t *)swift_slowAlloc(12, -1);
      v111 = v6;
      v112 = (void **)swift_slowAlloc(32, -1);
      p_isa = v112;
      *(_DWORD *)v110 = 136315138;
      v129 = sub_1000544FC(0xD00000000000003BLL, 0x8000000100519630, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130);
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "%s: items was empty.", v110, 0xCu);
      swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v112, -1, -1);
      swift_slowDealloc(v110, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v109 + 8))(v12, v111);
    }

    v72 = *(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8);
    v73 = v12;
    return v72(v73, v6);
  }
  if (a1 < 0)
    v103 = a1;
  else
    v103 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v103))
    goto LABEL_28;
LABEL_3:
  v123 = v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v17 = *(id *)(a1 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease(a1);
  v19 = a2;
  if (!a2)
    v19 = v18;
  v125 = v18;
  v20 = (void *)objc_opt_self(NSKeyedArchiver);
  p_isa = 0;
  v21 = a2;
  v22 = objc_msgSend(v20, "archivedDataWithRootObject:requiringSecureCoding:error:", v19, 1, &p_isa);
  v23 = p_isa;
  v126 = v7;
  if (!v22)
  {
    v27 = v23;
    v28 = _convertNSErrorToError(_:)(v23);

    v30 = swift_willThrow(v29);
LABEL_17:
    v59 = Logger.Application.unsafeMutableAddressor(v30);
    v60 = v126;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v126 + 16))(v9, v59, v6);
    swift_errorRetain(v28);
    v61 = swift_errorRetain(v28);
    v62 = Logger.logObject.getter(v61);
    v63 = v9;
    v64 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v64))
    {
      v65 = swift_slowAlloc(22, -1);
      v66 = (void **)swift_slowAlloc(64, -1);
      v119 = v19;
      v67 = v66;
      p_isa = v66;
      *(_DWORD *)v65 = 136315394;
      v129 = sub_1000544FC(0xD00000000000003BLL, 0x8000000100519630, (uint64_t *)&p_isa);
      v120 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130);
      *(_WORD *)(v65 + 12) = 2080;
      swift_getErrorValue(v28, &v128, v127);
      v68 = Error.localizedDescription.getter(v127[1], v127[2]);
      v70 = v69;
      v129 = sub_1000544FC(v68, v69, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130);
      swift_bridgeObjectRelease(v70);
      swift_errorRelease(v28);
      swift_errorRelease(v28);
      _os_log_impl((void *)&_mh_execute_header, v62, v64, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy(v67, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v65, -1, -1);

      swift_errorRelease(v28);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v126 + 8))(v63, v120);
    }

    swift_errorRelease(v28);
    swift_errorRelease(v28);
    swift_errorRelease(v28);

    v72 = *(uint64_t (**)(_BYTE *, uint64_t))(v60 + 8);
    v73 = v63;
    return v72(v73, v6);
  }
  v121 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v122 = v24;

  v25 = *(void **)((char *)v3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  v117 = v3;
  v118 = v9;
  if (v25)
    v26 = objc_msgSend(v25, "configuration");
  else
    v26 = objc_msgSend((id)objc_opt_self(DOCConfiguration), "configurationForImportingDocumentContentTypes:mode:", 0, 1);
  v31 = v26;
  p_isa = 0;
  v32 = objc_msgSend(v20, "archivedDataWithRootObject:requiringSecureCoding:error:", v31, 1, &p_isa);
  v33 = p_isa;
  if (!v32)
  {
    v57 = v33;
    v28 = _convertNSErrorToError(_:)(v33);

    swift_willThrow(v58);
    v30 = sub_1000D4C00(v121, v122);
    v9 = v118;
    goto LABEL_17;
  }
  v116 = v31;
  v119 = v19;
  v120 = v6;
  v34 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v118 = (_BYTE *)v35;

  v36 = objc_allocWithZone((Class)NSUserActivity);
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v36, "initWithActivityType:", v37);

  v39 = sub_10006922C(&qword_100643CC0);
  inited = swift_initStackObject(v39, v137);
  *(_OWORD *)(inited + 16) = xmmword_1004D4CE0;
  v41 = (void ***)DOCUserActivityFPItemKey.unsafeMutableAddressor();
  v42 = v41[1];
  *(_QWORD *)(inited + 32) = *v41;
  *(_QWORD *)(inited + 40) = v42;
  *(_QWORD *)(inited + 48) = 0xD00000000000001ELL;
  *(_QWORD *)(inited + 56) = 0x80000001005196A0;
  swift_bridgeObjectRetain(v42);
  v43 = sub_1003F98B8(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 2, &type metadata for String);
  isa = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "setRequiredUserInfoKeys:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v45 = sub_10006922C((uint64_t *)&unk_100651EC0);
  v46 = swift_initStackObject(v45, &v136);
  *(_OWORD *)(v46 + 16) = xmmword_1004D9880;
  v47 = v41[1];
  p_isa = *v41;
  v132[0] = v47;
  swift_bridgeObjectRetain(v47);
  AnyHashable.init<A>(_:)(&p_isa, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v46 + 96) = &type metadata for Data;
  v48 = v121;
  v49 = v122;
  *(_QWORD *)(v46 + 72) = v121;
  *(_QWORD *)(v46 + 80) = v49;
  p_isa = (void **)0xD00000000000001ELL;
  v132[0] = 0x80000001005196A0;
  v50 = v38;
  sub_10012F5E0(v48, v49);
  AnyHashable.init<A>(_:)(&p_isa, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v46 + 168) = &type metadata for Data;
  v51 = (unint64_t)v118;
  *(_QWORD *)(v46 + 144) = v34;
  *(_QWORD *)(v46 + 152) = v51;
  p_isa = (void **)0xD000000000000019;
  v132[0] = 0x80000001005196C0;
  v115 = v34;
  sub_10012F5E0(v34, v51);
  AnyHashable.init<A>(_:)(&p_isa, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v46 + 240) = &type metadata for Bool;
  *(_BYTE *)(v46 + 216) = v124 & 1;
  v52 = sub_1003F1838(v46);
  v53 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v38, "addUserInfoEntriesFromDictionary:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

  v54 = objc_msgSend(objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions), "init");
  v133 = (void *)type metadata accessor for UIWindowSceneProminentPlacement(0);
  v134 = sub_10005A360(&qword_100647BE0, (uint64_t (*)(uint64_t))&type metadata accessor for UIWindowSceneProminentPlacement, (uint64_t)&protocol conformance descriptor for UIWindowSceneProminentPlacement);
  sub_10006CBAC(&p_isa);
  static UIWindowScenePlacement<>._largeProminentPlacement()();
  UIWindowSceneActivationRequestOptions.placement.setter(&p_isa);
  v55 = *(id *)((char *)v117 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  v56 = v54;
  if (v55)
    v55 = objc_msgSend(v55, "windowScene");
  v74 = v120;
  objc_msgSend(v54, "setRequestingScene:", v55);

  sub_10004F2F0(0, (unint64_t *)&unk_100647BE8, UIWindowSceneActivationConfiguration_ptr);
  v75 = v50;
  v138.value.super.super.isa = 0;
  v138.is_nil = 0;
  v76.super.isa = UIWindowSceneActivationConfiguration.init(userActivity:options:preview:)((NSUserActivity)v75, v138, v139).super.isa;
  v77 = Logger.Application.unsafeMutableAddressor(-[objc_class setOptions:](v76.super.isa, "setOptions:", v54));
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v126 + 16))(v123, v77, v74);
  v78 = v125;
  v79 = v75;
  v80 = v78;
  v125 = v79;
  v81 = Logger.logObject.getter(v125);
  v82 = static os_log_type_t.debug.getter();
  v83 = v82;
  if (os_log_type_enabled(v81, v82))
  {
    v84 = swift_slowAlloc(22, -1);
    v85 = swift_slowAlloc(16, -1);
    v117 = v76.super.isa;
    v86 = (_QWORD *)v85;
    *(_DWORD *)v84 = 138412546;
    v114 = v83;
    p_isa = (void **)&v80->isa;
    v87 = v80;
    v124 = v54;
    v88 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&p_isa, v132);
    *v86 = v80;

    *(_WORD *)(v84 + 12) = 2112;
    v89 = v80;
    v90 = v125;
    p_isa = (void **)v125;
    v91 = v125;
    v74 = v120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&p_isa, v132);
    v86[1] = v90;
    v80 = v89;

    v54 = v124;
    _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v114, "Requesting new Quick Look scene creation for item: %@ with activation activity: %@", (uint8_t *)v84, 0x16u);
    v92 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v86, 2, v92);
    v93 = v86;
    v76.super.isa = v117;
    swift_slowDealloc(v93, -1, -1);
    swift_slowDealloc(v84, -1, -1);
  }
  else
  {

    v94 = v125;
    v81 = v80;
  }
  v95 = v119;
  v96 = v116;

  (*(void (**)(_BYTE *, uint64_t))(v126 + 8))(v123, v74);
  v97 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v98 = swift_allocObject(&unk_1005D2590, 24, 7);
  *(_QWORD *)(v98 + 16) = v95;
  v134 = (uint64_t)sub_10021BFC0;
  v135 = v98;
  p_isa = _NSConcreteStackBlock;
  v132[0] = 1107296256;
  v132[1] = sub_10015936C;
  v133 = &unk_1005D25A8;
  v99 = _Block_copy(&p_isa);
  v100 = v135;
  v101 = v76.super.isa;
  v102 = v95;
  swift_release(v100);
  objc_msgSend(v97, "_requestSceneSessionActivationWithConfiguration:errorHandler:", v101, v99);

  _Block_release(v99);
  sub_1000D4C00(v115, (unint64_t)v118);

  return sub_1000D4C00(v121, v122);
}

uint64_t sub_10021B86C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 49, 7);
}

void sub_10021B8A8(void *a1)
{
  uint64_t v1;

  sub_100213D88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_10021B8B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 41, 7);
}

void sub_10021B8EC(uint64_t a1)
{
  uint64_t v1;

  sub_100213BA4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_10021B8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  CFAbsoluteTime Current;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _QWORD *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  CFAbsoluteTime *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  CFAbsoluteTime *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t aBlock[5];
  CFAbsoluteTime *v62;

  v52 = a2;
  v53 = a3;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  __chkstk_darwin(v4);
  v57 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  __chkstk_darwin(v6);
  v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_1005D2478, 24, 7);
  *(_QWORD *)(v12 + 16) = _swiftEmptyArrayStorage;
  Current = CFAbsoluteTimeGetCurrent();
  v14 = dispatch_group_create();
  v15 = Logger.Application.unsafeMutableAddressor(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  v16 = swift_bridgeObjectRetain_n(a1, 2);
  v17 = Logger.logObject.getter(v16);
  LOBYTE(v18) = static os_log_type_t.debug.getter();
  v19 = (unint64_t)a1 >> 62;
  if (!os_log_type_enabled(v17, (os_log_type_t)v18))
  {

    swift_bridgeObjectRelease_n(a1, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    goto LABEL_6;
  }
  v50 = v8;
  v8 = swift_slowAlloc(22, -1);
  v49 = swift_slowAlloc(32, -1);
  aBlock[0] = v49;
  *(_DWORD *)v8 = 136315394;
  v60 = (_QWORD *)sub_1000544FC(0xD00000000000002ALL, 0x8000000100519600, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, aBlock);
  *(_WORD *)(v8 + 12) = 2048;
  v51 = (unint64_t)a1 >> 62;
  if (v19)
    goto LABEL_22;
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(a1);
    v60 = (_QWORD *)v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, aBlock);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "%s start preparing items from: %ld nodes", (uint8_t *)v8, 0x16u);
    v18 = v49;
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v50);
    v19 = v51;
LABEL_6:
    if (v19)
    {
      if (a1 < 0)
        v18 = a1;
      else
        v18 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v21 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v21)
        goto LABEL_15;
    }
    else
    {
      v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (!v21)
        goto LABEL_15;
    }
    if (v21 >= 1)
      break;
    __break(1u);
LABEL_22:
    if (a1 < 0)
      v47 = a1;
    else
      v47 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v20 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(a1);
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v22 = 0;
    do
    {
      v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22++, a1);
      dispatch_group_enter(v14);
      ObjectType = swift_getObjectType(v23);
      v25 = (_QWORD *)swift_allocObject(&unk_1005D24A0, 40, 7);
      v25[2] = v14;
      v25[3] = v23;
      v25[4] = v12;
      swift_retain();
      v26 = v14;
      swift_unknownObjectRetain(v23);
      DOCNode.fpfs_fetchFPItem(completion:)(sub_10021BEF4, v25, ObjectType);
      swift_unknownObjectRelease(v23);
      swift_release(v25);
    }
    while (v21 != v22);
  }
  else
  {
    v27 = 0;
    do
    {
      v28 = *(_QWORD *)(a1 + 8 * v27++ + 32);
      swift_unknownObjectRetain(v28);
      dispatch_group_enter(v14);
      v29 = swift_getObjectType(v28);
      v30 = (_QWORD *)swift_allocObject(&unk_1005D2518, 40, 7);
      v30[2] = v14;
      v30[3] = v28;
      v30[4] = v12;
      swift_retain();
      v31 = v14;
      swift_unknownObjectRetain(v28);
      DOCNode.fpfs_fetchFPItem(completion:)(sub_10021C858, v30, v29);
      swift_unknownObjectRelease(v28);
      swift_release(v30);
    }
    while (v21 != v27);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  v32 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
  v33 = (void *)static OS_dispatch_queue.main.getter(v32);
  v34 = (CFAbsoluteTime *)swift_allocObject(&unk_1005D24C8, 48, 7);
  v34[2] = Current;
  v35 = v52;
  v36 = v53;
  *((_QWORD *)v34 + 3) = v12;
  *((_QWORD *)v34 + 4) = v35;
  *((_QWORD *)v34 + 5) = v36;
  aBlock[4] = (uint64_t)sub_10021BF2C;
  v62 = v34;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10004A82C;
  aBlock[3] = (uint64_t)&unk_1005D24E0;
  v37 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v38 = v54;
  static DispatchQoS.unspecified.getter(v39);
  v60 = _swiftEmptyArrayStorage;
  v40 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_10006922C((uint64_t *)&unk_100647540);
  v42 = sub_1000791AC();
  v43 = v57;
  v44 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v41, v42, v59, v40);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v38, v43, v33, v37);

  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v56);
  v45 = v62;
  swift_release(v12);
  return swift_release(v45);
}

void sub_10021BEF4(void *a1)
{
  uint64_t v1;

  sub_100213E7C(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10021BF00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10021BF2C()
{
  uint64_t v0;

  sub_100214120(*(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(double *)(v0 + 16));
}

uint64_t sub_10021BF40()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021BF74()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

void sub_10021BFB0()
{
  uint64_t v0;

  sub_100213D0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_10021BFC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002143E0(a1, *(void **)(v1 + 16));
}

uint64_t sub_10021BFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10020FE90(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10021BFD4()
{
  return sub_10021C74C((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_10021031C);
}

void sub_10021BFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100210418(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10021BFE8()
{
  _QWORD *v0;

  sub_1000D4C00(v0[2], v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021C014()
{
  uint64_t v0;

  return sub_10020E750(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10021C024(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10020D5CC(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24));
}

void sub_10021C030()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_10020DAB8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

void sub_10021C060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10020BCC8(a1, a2, v2);
}

uint64_t sub_10021C068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021C0DC(uint64_t a1, uint64_t a2)
{
  return sub_10021C17C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_10020C1BC);
}

uint64_t sub_10021C0EC()
{
  return sub_10021C268((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_10020C624);
}

uint64_t sub_10021C0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021C170(uint64_t a1, uint64_t a2)
{
  return sub_10021C17C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1002123BC);
}

uint64_t sub_10021C17C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), v3 + ((v6 + 24) & ~v6));
}

uint64_t sub_10021C1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021C25C()
{
  return sub_10021C268((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_100212994);
}

uint64_t sub_10021C268(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

uint64_t sub_10021C2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021C308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_100212B00(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10021C344()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_10021C378()
{
  uint64_t v0;

  sub_100212E1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10021C384()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021C3A8(uint64_t a1)
{
  uint64_t v1;

  return sub_100212F14(a1, *(void **)(v1 + 16));
}

double sub_10021C3B4()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = sub_10020BB08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_10021C3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10021C44C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10020B73C(a1, a2, *(NSObject **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10021C4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10021C52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_10020A6A4(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unsigned __int8 *)(v2 + 25), *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_10021C590(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10021C598()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10021C5C0()
{
  uint64_t v0;

  sub_100207E70(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10021C5C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021C5F4()
{
  uint64_t *v0;

  return sub_1002083B4(v0[2], v0[3], v0[4]);
}

double sub_10021C604(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002084BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10021C614(uint64_t a1)
{
  uint64_t v1;

  return sub_10029997C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_10021C62C()
{
  uint64_t v0;

  sub_10042A9E4(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_10021C63C(void *a1, uint64_t a2, unint64_t a3)
{
  sub_10020EE20(a1, a2, a3);
}

void sub_10021C65C(void *a1)
{
  sub_10020FB84(a1);
}

void sub_10021C67C(uint64_t a1, unint64_t a2)
{
  sub_10020F490(a1, a2);
}

void sub_10021C69C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100205108(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void sub_10021C6A4()
{
  uint64_t v0;

  sub_100205AA8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10021C6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10021C740()
{
  return sub_10021C74C((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_1002057A4);
}

uint64_t sub_10021C74C(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10021C7A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10021C7D4(uint64_t a1)
{
  uint64_t v1;

  sub_100215F48(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_10021C7E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10021C80C(uint64_t a1)
{
  uint64_t *v1;

  sub_1002151CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10021C818()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10021C84C()
{
  uint64_t v0;

  sub_1002157E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

id sub_10021C944(char a1)
{
  id result;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  const char *v5;
  unint64_t v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  unint64_t v10;

  if (!a1)
  {
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v2 = result;
      v3 = 0xD00000000000001DLL;
      v4 = 0xD00000000000004ELL;
      v10 = 0x8000000100519FB0;
      v5 = "Could not infer parent folder";
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    result = (id)_DocumentManagerBundle();
    if (result)
    {
      v2 = result;
      v3 = 0xD00000000000001BLL;
      v4 = 0xD000000000000036;
      v10 = 0x8000000100519F50;
      v5 = "Folder could not be created";
LABEL_7:
      v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
LABEL_10:
      v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v7.value._object = (void *)0xEB00000000656C62;
      v8._countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v7, (NSBundle)v2, v8, *(Swift::String *)&v4)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = (id)_DocumentManagerBundle();
  if (result)
  {
    v2 = result;
    v4 = 0xD00000000000004CLL;
    v10 = 0x8000000100519EE0;
    v6 = 0x8000000100519EC0;
    v3 = 0xD000000000000014;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_10021CAAC()
{
  char *v0;

  return sub_10021C944(*v0);
}

unint64_t sub_10021CAC4()
{
  unint64_t result;

  result = qword_100647D30;
  if (!qword_100647D30)
  {
    result = swift_getWitnessTable(&unk_1004DD66C, &type metadata for DOCLinkDeferredLocalizedError);
    atomic_store(result, (unint64_t *)&qword_100647D30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DOCLinkDeferredLocalizedError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10021CB54 + 4 * byte_1004DD665[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10021CB88 + 4 * byte_1004DD660[v4]))();
}

uint64_t sub_10021CB88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021CB90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10021CB98);
  return result;
}

uint64_t sub_10021CBA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10021CBACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10021CBB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021CBB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DOCLinkDeferredLocalizedError()
{
  return &type metadata for DOCLinkDeferredLocalizedError;
}

unint64_t sub_10021CBD8()
{
  unint64_t result;

  result = qword_100647D38;
  if (!qword_100647D38)
  {
    result = swift_getWitnessTable(&unk_1004DD760, &type metadata for DOCLinkDeferredLocalizedError);
    atomic_store(result, (unint64_t *)&qword_100647D38);
  }
  return result;
}

id DOCBarButtonItem.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBarButtonItem();
  return objc_msgSendSuper2(&v2, "init");
}

id DOCBarButtonItem.__deallocating_deinit()
{
  return sub_1000DB3A0(type metadata accessor for DOCBarButtonItem);
}

id sub_10021D02C(char a1)
{
  unsigned __int8 *v1;
  int v2;
  id result;
  unsigned __int8 v4;
  uint64_t v5;
  objc_class *v6;
  uint64_t v7;
  objc_super v8;
  objc_super v9;

  v2 = a1 & 1;
  result = objc_msgSend(v1, "isHidden");
  if ((_DWORD)result != v2)
  {
    v4 = objc_msgSend(v1, "isHidden");
    v5 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting;
    v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting] = v4;
    v6 = (objc_class *)type metadata accessor for DOCBarButtonItemGroup();
    v9.receiver = v1;
    v9.super_class = v6;
    result = objc_msgSendSuper2(&v9, "isHidden");
    if (v1[v5] == 1)
    {
      if ((result & 1) != 0)
        return result;
      v7 = 1;
    }
    else if (v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems] == 1)
    {
      if ((result & 1) == 0)
        return result;
      v7 = 0;
    }
    else
    {
      v7 = v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_autoHideIfItemsHidden];
      if ((_DWORD)result == (_DWORD)v7)
        return result;
    }
    v8.receiver = v1;
    v8.super_class = v6;
    return objc_msgSendSuper2(&v8, "setHidden:", v7);
  }
  return result;
}

id sub_10021D100()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t KeyPath;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances];
    else
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v3, 2);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v9);
    v4 = (uint64_t)result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n(*(_QWORD *)&v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances], 2);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
    else
      v7 = *(id *)(v3 + 8 * i + 32);
    v8 = v7;
    dispatch thunk of NSKeyValueObservation.invalidate()();

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v3, 2);
  v10 = objc_msgSend(v1, "barButtonItems");
  v11 = sub_10021D764();
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
    goto LABEL_25;
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = v1;
  swift_bridgeObjectRetain(v12);
  for (; v13; v13 = _CocoaArrayWrapper.endIndex.getter(v26))
  {
    v29 = v2;
    v15 = 4;
    while (1)
    {
      v16 = (v12 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v12)
          : *(id *)(v12 + 8 * v15);
      v17 = v16;
      v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      KeyPath = swift_getKeyPath(&unk_1004DD818);
      v2 = swift_allocObject(&unk_1005D3150, 24, 7);
      v20 = v1;
      swift_unknownObjectWeakInit(v2 + 16);
      v21 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_10021D814, v2, &protocol witness table for NSObject);

      swift_release(v2);
      swift_release(KeyPath);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v23 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
      v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
      specialized Array._endMutation()(v25);
      ++v15;
      v1 = v20;
      if (v18 == v13)
      {
        swift_bridgeObjectRelease(v12);
        v2 = v29;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_25:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    v27 = v1;
    swift_bridgeObjectRetain(v12);
  }
  swift_bridgeObjectRelease(v12);
LABEL_30:
  swift_bridgeObjectRelease(v12);

  v28 = *(_QWORD *)&v1[v2];
  *(_QWORD *)&v1[v2] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v28);
  return sub_10021D430();
}

void sub_10021D3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10021D430();

  }
}

id sub_10021D430()
{
  unsigned __int8 *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  id result;
  uint64_t v15;
  objc_super v16;
  objc_super v17;

  v1 = objc_msgSend(v0, "barButtonItems");
  v2 = sub_10021D764();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
         : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, "isHidden");
      if (!v9)
        goto LABEL_11;

      ++v5;
      if (v8 == v4)
      {
        v7 = 0;
LABEL_11:
        v10 = v9 ^ 1;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_13:
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  v10 = 0;
  v7 = 0;
LABEL_18:
  swift_bridgeObjectRelease_n(v3, 2);

  v12 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems;
  v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems] = v10;
  v13 = (objc_class *)type metadata accessor for DOCBarButtonItemGroup();
  v17.receiver = v0;
  v17.super_class = v13;
  result = objc_msgSendSuper2(&v17, "isHidden");
  if (v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting] == 1)
  {
    if ((result & 1) != 0)
      return result;
    v15 = 1;
  }
  else if (v0[v12] == 1)
  {
    if ((result & 1) == 0)
      return result;
    v15 = 0;
  }
  else
  {
    v15 = v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_autoHideIfItemsHidden];
    if ((_DWORD)result == (_DWORD)v15)
      return result;
  }
  v16.receiver = v0;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, "setHidden:", v15);
}

id sub_10021D5F4()
{
  return sub_1000DB3A0(type metadata accessor for DOCBarButtonItemGroup);
}

uint64_t type metadata accessor for DOCBarButtonItemGroup()
{
  return objc_opt_self(_TtC5Files21DOCBarButtonItemGroup);
}

uint64_t type metadata accessor for DOCBarButtonItemStorage()
{
  return objc_opt_self(_TtC5Files23DOCBarButtonItemStorage);
}

uint64_t sub_10021D650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_10021D658(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t sub_10021D6AC(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_10021D708(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t type metadata accessor for DOCBarButtonItemStorage.ItemStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007E804(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DOCBarButtonItemStorage.ItemStorage);
}

unint64_t sub_10021D764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1006475F0;
  if (!qword_1006475F0)
  {
    v1 = objc_opt_self(UIBarButtonItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1006475F0);
  }
  return result;
}

const char *sub_10021D7A0()
{
  return "isHidden";
}

id sub_10021D7AC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isHidden");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10021D7DC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setHidden:", *a1);
}

uint64_t sub_10021D7F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10021D814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10021D3E0(a1, a2, v2);
}

unint64_t sub_10021D820()
{
  unint64_t result;

  result = qword_100647ED0;
  if (!qword_100647ED0)
  {
    result = swift_getWitnessTable(&unk_1004DD8DC, &type metadata for DuplicateFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100647ED0);
  }
  return result;
}

unint64_t sub_10021D868()
{
  unint64_t result;

  result = qword_100647ED8;
  if (!qword_100647ED8)
  {
    result = swift_getWitnessTable(&unk_1004DD904, &type metadata for DuplicateFilesIntent);
    atomic_store(result, (unint64_t *)&qword_100647ED8);
  }
  return result;
}

uint64_t sub_10021D8AC(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_100567540, 1) + 8);
}

uint64_t sub_10021D8D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100567518, 1);
}

uint64_t sub_10021D8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v13;
  _BYTE v14[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10007E874(v10, qword_100672A08);
  sub_10007E788(v10, (uint64_t)qword_100672A08);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x746163696C707544, 0xEF736D6574492065);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  v13 = 2;
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("DUPLICATE_FILES_INTENT_TITLE", 28, 2, v9, 0x6E65746E49707041, 0xEA00000000007374, v6, v3, "Title for the Duplicate Items action", 36, v13);
}

uint64_t sub_10021DA8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10006922C(&qword_100647F38);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10006922C(&qword_100647F40);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10021F4A0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 1, &type metadata for DuplicateFilesIntent, v6);
  v7._object = (void *)0x800000010051A2A0;
  v7._countAndFlagsBits = 0xD000000000000025;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004DD940);
  v9 = sub_10006922C(&qword_100647F48);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for DuplicateFilesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for DuplicateFilesIntent, v6);
}

uint64_t sub_10021DC04()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for IntentAuthenticationPolicy(0);
  sub_10007E874(v0, qword_100672A20);
  v1 = sub_10007E788(v0, (uint64_t)qword_100672A20);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for IntentAuthenticationPolicy.requiresAuthentication(_:), v0);
}

_QWORD *sub_10021DC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;

  v0 = type metadata accessor for DOCFileEntity(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IntentParameter.wrappedValue.getter(&v16);
  v4 = v16;
  v5 = _swiftEmptyArrayStorage;
  v16 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v8 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain(v4);
    do
    {
      sub_1000EACB4(v7, (uint64_t)v3);
      v9 = *(id *)&v3[*(int *)(v0 + 28)];
      v10 = sub_1000EACF8((uint64_t)v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
      specialized Array._endMutation()(v13);
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v4);
    v5 = (_QWORD *)v16;
  }
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10021DDA4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[6] = a1;
  v2[7] = a2;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_10006922C((uint64_t *)&unk_100643900) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v3);
  v2[9] = swift_task_alloc(v3);
  v2[10] = swift_task_alloc(v3);
  v4 = type metadata accessor for DOCFileEntity(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v6);
  v2[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for Logger(0);
  v2[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[17] = swift_task_alloc(v9);
  v2[18] = swift_task_alloc(v9);
  v2[19] = swift_task_alloc(v9);
  v2[20] = swift_task_alloc(v9);
  v2[21] = swift_task_alloc(v9);
  v2[22] = swift_task_alloc(v9);
  return swift_task_switch(sub_10021DEBC, 0, 0);
}

uint64_t sub_10021DEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = *(_QWORD *)(v1 + 128);
  v5 = Logger.AppIntents.unsafeMutableAddressor(a1);
  *(_QWORD *)(v1 + 184) = v5;
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v1 + 192) = v6;
  v7 = v6(v2, v5, v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[DuplicateFiles] Performing DuplicateFiles intent", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v12 = *(_QWORD *)(v1 + 168);
  v11 = *(_QWORD *)(v1 + 176);
  v13 = *(_QWORD *)(v1 + 120);
  v14 = *(_QWORD *)(v1 + 128);

  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  *(_QWORD *)(v1 + 200) = v15;
  v15(v11, v13);
  v16 = v6(v12, v5, v13);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[DuplicateFiles] Fetching items", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }
  v20 = *(_QWORD *)(v1 + 168);
  v21 = *(_QWORD *)(v1 + 120);

  v15(v20, v21);
  v22 = (uint64_t)sub_10021DC5C();
  v23 = v22;
  *(_QWORD *)(v1 + 208) = v22;
  v24 = (unint64_t)v22 >> 62;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v71 = v22;
    else
      v71 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v72 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v23);
    if (v72)
      goto LABEL_7;
LABEL_41:
    v73 = *(_QWORD *)(v1 + 136);
    v74 = *(_QWORD *)(v1 + 120);
    v75 = swift_bridgeObjectRelease(v23);
    v76 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v6)(v73, v5, v74, v75);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.error.getter(v77);
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[DuplicateFiles] Error while fetching items", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }
    v80 = *(_QWORD *)(v1 + 136);
    v81 = *(_QWORD *)(v1 + 120);

    v15(v80, v81);
    v82 = sub_10021F4E4();
    v46 = swift_allocError(&type metadata for DuplicateFilesIntent.DuplicateFilesIntentError, v82, 0, 0);
    *v83 = 0;
    goto LABEL_44;
  }
  if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_41;
LABEL_7:
  v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  if (v24)
  {
    if (v23 < 0)
      v28 = v23;
    else
      v28 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v29 = sub_10006922C((uint64_t *)&unk_1006424B0);
    v27 = _bridgeCocoaArray<A>(_:)(v28, v29);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v26 = swift_bridgeObjectRetain(v23);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    v27 = v23;
  }
  v30 = sub_10035A920(v27, 0);
  swift_bridgeObjectRelease(v27);

  v31 = *(_QWORD *)(v1 + 120);
  if ((v30 & 1) == 0)
  {
    v37 = *(_QWORD *)(v1 + 144);
    v38 = swift_bridgeObjectRelease(v23);
    v39 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v6)(v37, v5, v31, v38);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[DuplicateFiles] Error: canDuplicate returned NO", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
    v43 = *(_QWORD *)(v1 + 144);
    v44 = *(_QWORD *)(v1 + 120);

    v15(v43, v44);
    v45 = sub_10021F4E4();
    v46 = swift_allocError(&type metadata for DuplicateFilesIntent.DuplicateFilesIntentError, v45, 0, 0);
    *v47 = 1;
LABEL_44:
    swift_willThrow(v46);
    goto LABEL_45;
  }
  v6(*(_QWORD *)(v1 + 160), v5, *(_QWORD *)(v1 + 120));
  v32 = swift_bridgeObjectRetain_n(v23, 2);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v35 = 134217984;
    if (v24)
    {
      if (v23 < 0)
        v48 = v23;
      else
        v48 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v36 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v36 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v1 + 40) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48);
    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[DuplicateFiles] Duplicating %ld items", v35, 0xCu);
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v23, 2);
  }

  v15(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 120));
  v49 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
  *(_QWORD *)(v1 + 216) = v49;
  if (v24)
  {
    if (v23 < 0)
      v54 = v23;
    else
      v54 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v55 = _CocoaArrayWrapper.endIndex.getter(v54);
    swift_bridgeObjectRelease(v23);
    if (v55)
      goto LABEL_28;
  }
  else if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    v50 = (_QWORD *)swift_task_alloc(48);
    *(_QWORD *)(v1 + 224) = v50;
    v50[2] = v23;
    v50[3] = _swiftEmptyArrayStorage;
    v50[4] = v49;
    v51 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v1 + 232) = v51;
    v52 = sub_10006922C(&qword_100644580);
    *v51 = v1;
    v51[1] = sub_10021E718;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 16, 0, 0, 0xD000000000000023, 0x800000010051A270, sub_10021F528, v50, v52);
  }
  sub_10021F574();
  v56 = static NSError.noSuchFileError.getter();
  swift_willThrow(v56);

  v57 = swift_bridgeObjectRelease(v23);
  (*(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v1 + 192))(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 120), v57);
  swift_errorRetain(v56);
  v58 = swift_errorRetain(v56);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.error.getter(v59);
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc(12, -1);
    v62 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v61 = 138412290;
    swift_errorRetain(v56);
    v63 = _swift_stdlib_bridgeErrorToNSError(v56);
    *(_QWORD *)(v1 + 24) = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32);
    *v62 = v63;
    swift_errorRelease(v56);
    swift_errorRelease(v56);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "[DuplicateFiles] Error: Generic error: %@", v61, 0xCu);
    v64 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v62, 1, v64);
    swift_slowDealloc(v62, -1, -1);
    swift_slowDealloc(v61, -1, -1);
  }
  else
  {
    swift_errorRelease(v56);
    swift_errorRelease(v56);
  }
  v65 = *(void (**)(uint64_t, uint64_t))(v1 + 200);
  v66 = *(_QWORD *)(v1 + 152);
  v67 = *(_QWORD *)(v1 + 120);

  v65(v66, v67);
  v68 = sub_10021F4E4();
  v69 = swift_allocError(&type metadata for DuplicateFilesIntent.DuplicateFilesIntentError, v68, 0, 0);
  *v70 = 1;
  swift_willThrow(v69);
  swift_errorRelease(v56);
LABEL_45:
  v84 = *(_QWORD *)(v1 + 168);
  v86 = *(_QWORD *)(v1 + 152);
  v85 = *(_QWORD *)(v1 + 160);
  v88 = *(_QWORD *)(v1 + 136);
  v87 = *(_QWORD *)(v1 + 144);
  v90 = *(_QWORD *)(v1 + 104);
  v89 = *(_QWORD *)(v1 + 112);
  v91 = *(_QWORD *)(v1 + 72);
  v92 = *(_QWORD *)(v1 + 80);
  v93 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 176));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v91);
  swift_task_dealloc(v93);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10021E718()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10021EBA4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 224));
    v4 = sub_10021E784;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10021E784()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));

  v2 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease(v2);
LABEL_25:
    v33 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 144);
    v39 = *(_QWORD *)(v0 + 136);
    v41 = *(_QWORD *)(v0 + 112);
    v43 = *(_QWORD *)(v0 + 104);
    v45 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 72);
    v49 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 32) = _swiftEmptyArrayStorage;
    v37 = sub_10006922C(&qword_10064C3B0);
    v38 = sub_100111590();
    static IntentResult.result<A>(value:)(v0 + 32, v37, v38);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v2 < 0)
    v31 = *(_QWORD *)(v0 + 16);
  else
    v31 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  v3 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v2);
  if (!v3)
    goto LABEL_24;
LABEL_3:
  result = sub_1001550AC(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v42 = *(int **)(v0 + 88);
    v44 = *(_QWORD *)(v0 + 96);
    v40 = v2 & 0xC000000000000001;
    sub_10006922C((uint64_t *)&unk_100643910);
    v5 = 0;
    v46 = v2;
    v48 = v3;
    do
    {
      if (v40)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      v8 = *(_QWORD *)(v0 + 104);
      v9 = v42[5];
      *(_QWORD *)(v8 + v9) = EntityProperty<>.init()();
      v10 = v42[6];
      *(_QWORD *)(v8 + v10) = EntityProperty<>.init()();
      FileEntityIdentifier.init(fileProviderItemID:)(objc_msgSend(v7, "itemID"));
      *(_QWORD *)(v8 + v42[7]) = v7;
      v11 = v7;
      v12 = objc_msgSend(v11, "creationDate");
      v13 = *(_QWORD *)(v0 + 80);
      if (v12)
      {
        v14 = v12;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v12);

        v15 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
      }
      else
      {
        v16 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
      }
      v17 = *(_QWORD *)(v0 + 72);
      v18 = *(_QWORD *)(v0 + 80);
      sub_1001114C4(v18, v17);
      EntityProperty.wrappedValue.setter(v17);
      sub_10011150C(v18);
      v19 = objc_msgSend(v11, "contentModificationDate");
      v20 = *(_QWORD *)(v0 + 64);
      if (v19)
      {
        v21 = v19;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v19);

        v22 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 0, 1, v22);
      }
      else
      {
        v23 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
      }
      v25 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 112);
      v26 = *(_QWORD *)(v0 + 64);
      v27 = *(_QWORD *)(v0 + 72);
      sub_1001114C4(v26, v27);
      EntityProperty.wrappedValue.setter(v27);
      sub_10011150C(v26);

      sub_10011154C(v25, v24);
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_1001550AC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v29 = _swiftEmptyArrayStorage[2];
      v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1)
        sub_1001550AC(v28 > 1, v29 + 1, 1);
      v30 = *(_QWORD *)(v0 + 112);
      ++v5;
      _swiftEmptyArrayStorage[2] = v29 + 1;
      sub_10011154C(v30, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v29);
      v2 = v46;
    }
    while (v48 != v5);
    swift_bridgeObjectRelease(v46);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_10021EBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);

  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  v3 = *(_QWORD *)(v0 + 240);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 192))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 120));
  swift_errorRetain(v3);
  v4 = swift_errorRetain(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v3);
    v9 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 24) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    *v8 = v9;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[DuplicateFiles] Error: Generic error: %@", v7, 0xCu);
    v10 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 120);

  v11(v12, v13);
  v14 = sub_10021F4E4();
  v15 = swift_allocError(&type metadata for DuplicateFilesIntent.DuplicateFilesIntentError, v14, 0, 0);
  *v16 = 1;
  swift_willThrow(v15);
  swift_errorRelease(v3);
  v17 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 160);
  v21 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10021EE00@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100640EA0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100672A08, (uint64_t)sub_10021D8E0, a1);
}

uint64_t sub_10021EE24@<X0>(uint64_t a1@<X8>)
{
  return sub_100110348(&qword_100640EA8, (uint64_t (*)(_QWORD))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100672A20, (uint64_t)sub_10021DC04, a1);
}

uint64_t sub_10021EE4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_100647F24);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1000EA854;
  return sub_10021DDA4(a1, v4);
}

uint64_t sub_10021EEA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10021F0BC();
  *a1 = result;
  return result;
}

uint64_t sub_10021EEC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10021F4A0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for DuplicateFilesIntent()
{
  return &type metadata for DuplicateFilesIntent;
}

uint64_t sub_10021EF00()
{
  return sub_100062698(&qword_100647EE8, (uint64_t *)&unk_100647EF0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10021EF2C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v13 = 0x800000010051A320;
    v12 = 0xD000000000000027;
  }
  else
  {
    v12 = 0xD00000000000002ALL;
    v13 = 0x800000010051A350;
  }
  v14 = String.LocalizationValue.init(stringLiteral:)(v12, v13);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E65746E49707041, 0xEA00000000007374, v8, v5, 0, 0, 256);
}

uint64_t sub_10021F0B4()
{
  char *v0;

  return sub_10021EF2C(*v0);
}

uint64_t sub_10021F0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __int16 v34;
  int v35;
  _QWORD v36[2];
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v41 = *(_QWORD *)(v0 - 8);
  v42 = v0;
  __chkstk_darwin(v0);
  v40 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10006922C(&qword_100643360);
  __chkstk_darwin(v2);
  v39 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)v36 - v5;
  v6 = sub_10006922C(&qword_100647F10);
  __chkstk_darwin(v6);
  v37 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[1] = sub_10006922C(&qword_100643368);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x736D657449, 0xE500000000000000);
  static Locale.current.getter(v22);
  v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v24(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v34 = 2;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FILES_PARAMETER_DUPLICATE_FILES_INTENT", 38, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Name of the file entities parameter for the Duplicate Items intent", 66, v34);
  v25 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x800000010051A1F0);
  static Locale.current.getter(v25);
  v24(v11, v23, v8);
  LOWORD(v35) = 2;
  v26 = v37;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)("FILES_PARAMETER_DESCRIPTION_DUPLICATE_FILES_INTENT", 50, 2, v17, 0x6E65746E49707041, 0xEA00000000007374, v14, v11, "Description of the file entities parameter for the Duplicate Files Intent", 73, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
  v43 = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v38;
  v28(v38, 1, 1, v27);
  v30 = v39;
  v28(v39, 1, 1, v27);
  v31 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  v32 = sub_10021F534((unint64_t *)&qword_100643D40, (uint64_t)&unk_1004DAF80);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v21, v26, &v43, v29, v30, v31, v32);
}

unint64_t sub_10021F4A0()
{
  unint64_t result;

  result = qword_100647F18;
  if (!qword_100647F18)
  {
    result = swift_getWitnessTable(&unk_1004DD84C, &type metadata for DuplicateFilesIntent);
    atomic_store(result, &qword_100647F18);
  }
  return result;
}

unint64_t sub_10021F4E4()
{
  unint64_t result;

  result = qword_100647F28;
  if (!qword_100647F28)
  {
    result = swift_getWitnessTable(&unk_1004DDA1C, &type metadata for DuplicateFilesIntent.DuplicateFilesIntentError);
    atomic_store(result, (unint64_t *)&qword_100647F28);
  }
  return result;
}

double sub_10021F528(uint64_t a1)
{
  uint64_t v1;

  return sub_100480870(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10021F534(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DOCFileEntity(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10021F574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100644570;
  if (!qword_100644570)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100644570);
  }
  return result;
}

uint64_t sub_10021F5B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for DuplicateFilesIntent.DuplicateFilesIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10021F624 + 4 * byte_1004DD845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10021F658 + 4 * byte_1004DD840[v4]))();
}

uint64_t sub_10021F658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021F660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10021F668);
  return result;
}

uint64_t sub_10021F674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10021F67CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10021F680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021F688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateFilesIntent.DuplicateFilesIntentError()
{
  return &type metadata for DuplicateFilesIntent.DuplicateFilesIntentError;
}

unint64_t sub_10021F6A8()
{
  unint64_t result;

  result = qword_100647F50;
  if (!qword_100647F50)
  {
    result = swift_getWitnessTable(&unk_1004DD9F4, &type metadata for DuplicateFilesIntent.DuplicateFilesIntentError);
    atomic_store(result, (unint64_t *)&qword_100647F50);
  }
  return result;
}

Files::DOCPreviewRouter::InAppContext __swiftcall DOCPreviewRouter.InAppContext.init(animated:presentingVC:)(Swift::Bool animated, UIViewController presentingVC)
{
  Swift::Bool v2;
  Files::DOCPreviewRouter::InAppContext result;

  v2 = animated;
  result.presentingVC = presentingVC;
  result.animated = v2;
  return result;
}

uint64_t *DOCPreviewRouter.shared.unsafeMutableAddressor()
{
  if (qword_100640EB0 != -1)
    swift_once(&qword_100640EB0, sub_10021F734);
  return &static DOCPreviewRouter.shared;
}

uint64_t sub_10021F734()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for DOCPreviewRouter();
  result = swift_allocObject(v0, 17, 7);
  *(_BYTE *)(result + 16) = 0;
  static DOCPreviewRouter.shared = result;
  return result;
}

double static DOCPreviewRouter.shared.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_100640EB0 != -1)
    swift_once(&qword_100640EB0, sub_10021F734);
  swift_beginAccess(&static DOCPreviewRouter.shared, v1, 0, 0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double static DOCPreviewRouter.shared.setter(uint64_t a1)
{
  uint64_t v2;
  double result;
  _BYTE v4[24];

  if (qword_100640EB0 != -1)
    swift_once(&qword_100640EB0, sub_10021F734);
  swift_beginAccess(&static DOCPreviewRouter.shared, v4, 1, 0);
  v2 = static DOCPreviewRouter.shared;
  static DOCPreviewRouter.shared = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t (*static DOCPreviewRouter.shared.modify(uint64_t a1))(_QWORD)
{
  if (qword_100640EB0 != -1)
    swift_once(&qword_100640EB0, sub_10021F734);
  swift_beginAccess(&static DOCPreviewRouter.shared, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_10021F8B0(void *a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  void **v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject **v24;
  NSObject *v25;
  NSObject *v26;
  void **v27;
  NSObject *v28;
  void **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  void **aBlock;
  _QWORD v42[4];
  uint64_t v43;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a3;
  v15 = Logger.Preview.unsafeMutableAddressor();
  v40 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v10);
  v16 = v14;
  v17 = a1;
  v18 = v16;
  v19 = (void **)v17;
  v39 = v13;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(22, -1);
    v35 = v10;
    v23 = v22;
    v24 = (NSObject **)swift_slowAlloc(16, -1);
    *(_DWORD *)v23 = 138412546;
    v38 = a2;
    v36 = a4;
    v37 = a5;
    aBlock = (void **)&v18->isa;
    v25 = v18;
    v26 = v18;
    v27 = v19;
    v28 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v42);
    *v24 = v26;

    *(_WORD *)(v23 + 12) = 2112;
    aBlock = v27;
    v29 = v27;
    LOBYTE(a2) = v38;
    a4 = v36;
    a5 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v42);
    v24[1] = v27;

    v19 = v27;
    v18 = v26;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received request to present (on %@): %@", (uint8_t *)v23, 0x16u);
    v30 = sub_10006922C(&qword_100643AB0);
    swift_arrayDestroy(v24, 2, v30);
    swift_slowDealloc(v24, -1, -1);
    v31 = v23;
    v10 = v35;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {

    v20 = v18;
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v10);
  v32 = swift_allocObject(&unk_1005D33C0, 32, 7);
  *(_QWORD *)(v32 + 16) = a4;
  *(_QWORD *)(v32 + 24) = a5;
  v42[3] = sub_100146054;
  v43 = v32;
  aBlock = _NSConcreteStackBlock;
  v42[0] = 1107296256;
  v42[1] = sub_10004A82C;
  v42[2] = &unk_1005D33D8;
  v33 = _Block_copy(&aBlock);
  v34 = v43;
  sub_10008BA00(a4, a5);
  swift_release(v34);
  -[NSObject presentViewController:animated:completion:](v18, "presentViewController:animated:completion:", v19, a2 & 1, v33);
  _Block_release(v33);

}

uint64_t type metadata accessor for DOCPreviewRouter()
{
  return objc_opt_self(_TtC5Files16DOCPreviewRouter);
}

uint64_t initializeBufferWithCopyOfBuffer for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for DOCPreviewRouter.InAppContext()
{
  return &type metadata for DOCPreviewRouter.InAppContext;
}

uint64_t sub_10021FC74()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_10021FCA4(uint64_t a1)
{
  _QWORD *result;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  _BOOL8 v7;
  objc_class *v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  objc_super v35;
  Swift::String v36;

  result = (id)_DocumentManagerBundle(a1);
  if (result)
  {
    v2 = result;
    v36._object = (void *)0x800000010051A460;
    v3._countAndFlagsBits = 0x73746E65636552;
    v3._object = (void *)0xE700000000000000;
    v4.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4.value._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0xD000000000000043;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v36);

    v7 = sub_10021FF20();
    v8 = (objc_class *)type metadata accessor for DOCEverywhereSearchScope();
    v9 = (char *)objc_allocWithZone(v8);
    v10 = OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership] = 1;
    *(Swift::String *)&v9[OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_displayName] = v6;
    *(_QWORD *)&v9[v10] = v7;
    v35.receiver = v9;
    v35.super_class = v8;
    v11 = objc_msgSendSuper2(&v35, "init");
    v12 = sub_1001530D0(0, 1, 1, _swiftEmptyArrayStorage);
    v14 = v12[2];
    v13 = v12[3];
    if (v14 >= v13 >> 1)
      v12 = sub_1001530D0((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12[2] = v14 + 1;
    v15 = &v12[2 * v14];
    v15[4] = v11;
    v15[5] = &off_1005EDE68;
    v16 = sub_10021FFFC();
    if (v16)
    {
      v17 = v12[2];
      v18 = v12[3];
      v19 = v16;
      if (v17 >= v18 >> 1)
        v12 = sub_1001530D0((_QWORD *)(v18 > 1), v17 + 1, 1, v12);
      v12[2] = v17 + 1;
      v20 = &v12[2 * v17];
      v20[4] = v19;
      v20[5] = &off_1005EDE28;

    }
    sub_100220250();
    if (v21)
    {
      v23 = v21;
      v24 = v22;
      v25 = v12[2];
      v26 = v12[3];
      swift_unknownObjectRetain(v21);
      if (v25 >= v26 >> 1)
        v12 = sub_1001530D0((_QWORD *)(v26 > 1), v25 + 1, 1, v12);
      v12[2] = v25 + 1;
      v27 = &v12[2 * v25];
      v27[4] = v23;
      v27[5] = v24;
      swift_unknownObjectRelease(v23);
    }
    sub_100220538();
    if (v28)
    {
      v30 = v28;
      v31 = v29;
      v32 = v12[2];
      v33 = v12[3];
      swift_unknownObjectRetain(v28);
      if (v32 >= v33 >> 1)
        v12 = sub_1001530D0((_QWORD *)(v33 > 1), v32 + 1, 1, v12);
      v12[2] = v32 + 1;
      v34 = &v12[2 * v32];
      v34[4] = v30;
      v34[5] = v31;
      swift_unknownObjectRelease(v30);
    }
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10021FF20()
{
  uint64_t v0;
  id *v1;
  void *v2;
  _BOOL8 v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 64);
  if (v2 && (objc_msgSend(v2, "isTrashed") & 1) != 0)
    return 0;
  v4 = objc_msgSend(*v1, "identifier");
  v5 = DOCDocumentSourceIdentifierTrashedItems;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v11 = v10;
  v3 = (v6 != v9 || v8 != v10) && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0) & 1) == 0;

  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v11);
  return v3;
}

id sub_10021FFFC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  id result;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  double v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  _BOOL8 v21;
  objc_class *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  objc_super v27;

  sub_100220858();
  if ((v1 & 1) == 0)
    return 0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v4 = (void *)v3[1];
    swift_unknownObjectRetain(v4);
    if (v4)
      goto LABEL_7;
LABEL_15:
    result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x800000010051A4B0, "Files/DOCItemCollectionViewController+Searching.swift", 53, 2, 139, 0);
    __break(1u);
    return result;
  }
  v4 = *(void **)(*v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
  swift_unknownObjectRetain(v4);
LABEL_7:
  v6 = objc_msgSend(v4, "providerDomainID");
  swift_unknownObjectRelease(v4);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v12 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "displayName", v10);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  if (((*(_BYTE *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
     || (v16 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
         v17 = objc_opt_self(FPQueryCollection),
         v18 = swift_dynamicCastObjCClass(v16, v17),
         v16,
         !v18))
    && (v19 = objc_msgSend(*(id *)(v0 + v11), "supportedSearchFilters")) != 0)
  {

    v20 = 1;
  }
  else
  {
    v20 = 0;
  }
  v21 = sub_10021FF20();
  v22 = (objc_class *)type metadata accessor for DOCFileProviderSearchScope();
  v23 = objc_allocWithZone(v22);
  v24 = OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch;
  v23[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch] = 0;
  v25 = OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership;
  *(_QWORD *)&v23[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership] = 1;
  v26 = (uint64_t *)&v23[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_displayName];
  *v26 = v13;
  v26[1] = v15;
  *(_QWORD *)&v23[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_providerDomainIdentifier] = v9;
  v23[v24] = v20;
  *(_QWORD *)&v23[v25] = v21;
  v27.receiver = v23;
  v27.super_class = v22;
  return objc_msgSendSuper2(&v27, "init");
}

void sub_100220250()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  _BOOL8 v26;
  objc_class *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  objc_super *v33;
  void *v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  _BOOL8 v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  _BYTE *v47;
  objc_super v48;

  v1 = v0;
  sub_100220960();
  if ((v2 & 1) == 0)
    return;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v3)
  {
    __break(1u);
    return;
  }
  v4 = v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  v5 = *(char **)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v10 = v5;
    v15 = sub_100220B18();
    v17 = v16;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    {
      v18 = v10;
    }
    else
    {
      v19 = *(void **)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      v20 = v10;
      v21 = v19;
      v22 = objc_opt_self(FPQueryCollection);
      v23 = swift_dynamicCastObjCClass(v21, v22);

      if (v23)
        goto LABEL_13;
    }
    v24 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "supportedSearchFilters");
    if (v24)
    {

      v25 = 1;
LABEL_14:
      v26 = sub_10021FF20();
      v27 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      v28 = objc_allocWithZone(v27);
      v29 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v28[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      v30 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(_QWORD *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      v31 = (uint64_t *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
      *v31 = v15;
      v31[1] = v17;
      v32 = &v28[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
      *(_QWORD *)v32 = v5;
      v32[8] = 1;
      v28[v29] = v25;
      *(_QWORD *)&v28[v30] = v26;
      v47 = v28;
      v33 = (objc_super *)&v47;
LABEL_20:
      v33->super_class = v27;
      -[objc_super init](v33, "init", v47);

      return;
    }
LABEL_13:
    v25 = 0;
    goto LABEL_14;
  }
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode];
  v7 = swift_unknownObjectRetain(v6);
  ObjectType = swift_getObjectType(v7, v8);
  v10 = (char *)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  swift_unknownObjectRelease(v6);
  if (v10)
  {
    v11 = sub_100220B18();
    v13 = v12;
    if ((*(_BYTE *)(v4 + 16) & 1) != 0)
    {
      v14 = v10;
    }
    else
    {
      v34 = *(void **)v4;
      v35 = v10;
      v36 = v34;
      v37 = objc_opt_self(FPQueryCollection);
      v38 = swift_dynamicCastObjCClass(v36, v37);

      if (v38)
        goto LABEL_18;
    }
    v39 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "supportedSearchFilters");
    if (v39)
    {

      v40 = 1;
LABEL_19:
      v41 = sub_10021FF20();
      v27 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      v42 = objc_allocWithZone(v27);
      v43 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v42[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      v44 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(_QWORD *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      v45 = (uint64_t *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
      *v45 = v11;
      v45[1] = v13;
      v46 = &v42[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
      *(_QWORD *)v46 = v10;
      v46[8] = 0;
      v42[v43] = v40;
      *(_QWORD *)&v42[v44] = v41;
      v48.receiver = v42;
      v33 = &v48;
      goto LABEL_20;
    }
LABEL_18:
    v40 = 0;
    goto LABEL_19;
  }
}

void sub_100220538()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  objc_super v24;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
  v2 = DOCDocumentSourceIdentifierTrashedItems;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {

    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);

    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      return;
  }
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v11)
  {
    v12 = v11 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v12 + 16) & 1) == 0)
    {
      v13 = *(id *)v12;
      v14 = *(id *)v12;
      v15 = sub_100220B18();
      v17 = v16;
      v18 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      v19 = objc_allocWithZone(v18);
      v20 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v19[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      v21 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(_QWORD *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      v22 = (uint64_t *)&v19[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
      *v22 = v15;
      v22[1] = v17;
      v23 = &v19[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
      *(_QWORD *)v23 = v13;
      v23[8] = 1;
      v19[v20] = 0;
      *(_QWORD *)&v19[v21] = 2;
      v24.receiver = v19;
      v24.super_class = v18;
      objc_msgSendSuper2(&v24, "init");
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002206D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(_BYTE *)(v2 + 16) & 1) != 0
      || (v3 = *(id *)v2,
          v4 = objc_opt_self(FPQueryCollection),
          v5 = swift_dynamicCastObjCClass(v3, v4),
          v3,
          !v5))
    {
      v16 = 0;
      return v16 & 1;
    }
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
       + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type;
    if ((*(_BYTE *)(v6 + 8) & 1) != 0)
    {
      v7 = *(void **)v6;
      v8 = DOCSpotlightEnumeratedItemIdentifierRecentDocuments;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)v6);
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v14 = v13;
      if (v9 == v12 && v11 == v13)
        v16 = 1;
      else
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
      v17 = v7;
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v14);

      return v16 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ELL, 0x800000010051A570, "Files/DOCFileProviderSource.swift", 33, 2, 386, 0);
  __break(1u);
  return result;
}

void sub_100220858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v2 = swift_unknownObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8));
    if (!v2)
      return;
    swift_unknownObjectRelease(v2);
  }
  v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "supportedSearchFilters");
  if (v4)
  {

    v5 = objc_msgSend(*(id *)(v0 + v3), "supportedSearchFilters");
    if (v5)
    {
      v6 = v5;
      type metadata accessor for NSFileProviderSearchFilter(0);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

      v9 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRelease(v8);
      if (!v9)
        return;
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
    return;
  }
LABEL_8:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v10 = swift_unknownObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8));
    if (v10)
      swift_unknownObjectRelease(v10);
  }
}

void sub_100220960()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
    goto LABEL_5;
  v3 = swift_unknownObjectRetain(v2[1]);
  if (!v3)
    goto LABEL_7;
  swift_unknownObjectRelease(v3);
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
  {
LABEL_5:
    v4 = *(void **)(*v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain(v4);
  }
  else
  {
    v4 = (void *)v2[1];
    swift_unknownObjectRetain(v4);
    if (!v4)
      goto LABEL_12;
  }
  v5 = objc_msgSend(v4, "isRootItem");
  *(_QWORD *)&v6 = swift_unknownObjectRelease(v4).n128_u64[0];
  if ((v5 & 1) == 0)
  {
LABEL_12:
    v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    v11 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "supportedSearchFilters", v6);
    if (!v11)
      return;

    v12 = objc_msgSend(*(id *)(v0 + v10), "supportedSearchFilters");
    if (v12)
    {
      v13 = v12;
      type metadata accessor for NSFileProviderSearchFilter(0);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      v16 = NSFileProviderSearchFilterScopedToDirectory;
      sub_1000DFACC((uint64_t)v16, v15);
      swift_bridgeObjectRelease(v15);

      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_7:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    v7 = *(id *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    v8 = objc_opt_self(FPQueryCollection);
    v9 = swift_dynamicCastObjCClass(v7, v8);

    if (v9)
      sub_1002206D0();
  }
}

uint64_t sub_100220B18()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_25;
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
    || (v2 = *(id *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
        v3 = objc_opt_self(FPQueryCollection),
        v4 = swift_dynamicCastObjCClass(v2, v3),
        v2,
        !v4))
  {
    v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration), "identifier");
    v6 = DOCDocumentSourceIdentifierTrashedItems;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    if (v7 == v10 && v9 == v11)
    {

      swift_bridgeObjectRelease_n(v9, 2);
    }
    else
    {
      v13 = v11;
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v13);
      if ((v14 & 1) == 0)
      {
        v15 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0)
        {
LABEL_12:
          v17 = *(void **)(*(_QWORD *)v15 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
          swift_unknownObjectRetain(v17);
LABEL_23:
          v29 = objc_msgSend(v17, "displayName");
          swift_unknownObjectRelease(v17);
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          v32 = v31;

          v33 = String.doc_localizedQuotedString.getter(v30, v32);
          swift_bridgeObjectRelease(v32);
          return v33;
        }
        v16 = swift_unknownObjectRetain(*(_QWORD *)(v15 + 8));
        if (v16)
        {
          swift_unknownObjectRelease(v16);
          if ((*(_BYTE *)(v15 + 16) & 1) != 0)
            goto LABEL_12;
          v17 = *(void **)(v15 + 8);
          swift_unknownObjectRetain(v17);
          if (v17)
            goto LABEL_23;
          result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x800000010051A4B0, "Files/DOCItemCollectionViewController+Searching.swift", 53, 2, 139, 0);
          goto LABEL_27;
        }
LABEL_25:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000006ALL, 0x800000010051A4D0, "Files/DOCItemCollectionViewController+Searching.swift", 53, 2, 216, 0);
LABEL_27:
        __break(1u);
        return result;
      }
    }
  }
  v18 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v19 = *(void **)(v18 + 24);
  if (!v19)
  {
LABEL_20:
    v27 = objc_msgSend(*(id *)v18, "displayName");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);

    return v28;
  }
  v20 = v19;
  v21 = objc_msgSend(v20, "displayName");
  if (!v21)
  {

    goto LABEL_20;
  }
  v22 = v21;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v25 = v24;

  if ((objc_msgSend(v20, "isTaggedItemsSource") & 1) != 0)
  {
    v23 = String.doc_localizedQuotedString.getter(v23, v25);

    swift_bridgeObjectRelease(v25);
  }
  else
  {

  }
  return v23;
}

id sub_100220E54(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t ObjectType;
  id v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  Class isa;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  objc_super v27;
  uint64_t v28;

  ObjectType = swift_getObjectType(v4);
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_label] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity] = v13;
  v14 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v15 + 32) = v13;
  *(_QWORD *)(v15 + 40) = v12;
  v28 = v15;
  specialized Array._endMutation()(v15);
  v16 = objc_allocWithZone((Class)UIStackView);
  sub_100221578();
  v17 = v13;
  v18 = v12;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v16, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v28).n128_f64[0]);

  *(_QWORD *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView] = v20;
  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for DOCItemCollectionLoadingView();
  v21 = objc_msgSendSuper2(&v27, "initWithFrame:", a1, a2, a3, a4);
  sub_100221118();
  v22 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004D9670;
  *(_QWORD *)(v23 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v23 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v24 = v21;
  v25 = UIView.registerForTraitChanges<A>(_:handler:)(v23, sub_1002215B4, 0, ObjectType);
  swift_unknownObjectRelease(v25);
  swift_bridgeObjectRelease(v23);

  return v24;
}

void sub_100221118()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *object;
  NSString v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_label];
  v4 = objc_msgSend(v1, "secondaryLabelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  v5 = (id)_DocumentManagerBundle();
  if (v5)
  {
    v6 = v5;
    v24._object = (void *)0x800000010051A600;
    v7._countAndFlagsBits = 0x474E4944414F4CLL;
    v7._object = (void *)0xE700000000000000;
    v8.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v8.value._object = (void *)0xEB00000000656C62;
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0xD000000000000046;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v24)._object;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v3, "setText:", v11);

    v12 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    objc_msgSend(v3, "setFont:", v12);

    objc_msgSend(v3, "setAdjustsFontForContentSizeCategory:", 1);
    v13 = objc_msgSend(v0, "traitCollection");
    v14 = objc_msgSend(v13, "preferredContentSizeCategory");

    LOBYTE(v13) = UIContentSizeCategory.isAccessibilityCategory.getter(v14);
    v15 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity];
    if ((v13 & 1) != 0)
      v16 = 101;
    else
      v16 = 100;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity], "setActivityIndicatorViewStyle:", v16);
    objc_msgSend(v15, "startAnimating");
    v17 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView];
    objc_msgSend(v17, "setAlignment:", 3);
    objc_msgSend(v17, "setAxis:", 1);
    objc_msgSend(v17, "setSpacing:", 10.0);
    objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v0, "addSubview:", v17);
    v18 = objc_msgSend(v17, "centerXAnchor");
    v19 = objc_msgSend(v0, "centerXAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    objc_msgSend(v20, "setActive:", 1);
    v21 = objc_msgSend(v17, "centerYAnchor");
    v22 = objc_msgSend(v0, "centerYAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    objc_msgSend(v23, "setActive:", 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002214A4()
{
  uint64_t v0;

}

id sub_1002214E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionLoadingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DOCItemCollectionLoadingView()
{
  return objc_opt_self(_TtC5Files28DOCItemCollectionLoadingView);
}

unint64_t sub_100221578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100645B80;
  if (!qword_100645B80)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100645B80);
  }
  return result;
}

id sub_1002215B4(char *a1)
{
  id v2;
  id v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v2 & 1) != 0)
    v4 = 101;
  else
    v4 = 100;
  return objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity], "setActivityIndicatorViewStyle:", v4);
}

void sub_100221734(char *a1, void (*a2)(double, double, double, double))
{
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void (*v18)(double, double, double, double);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unint64_t v23;
  void (*v24)(double, double, double, double);
  void *v25;
  id v26;
  id v27;
  id v28;
  char v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(double, double, double, double);
  uint64_t v43;
  uint64_t v44;
  id v46;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_fullViewController]);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "dataSource");

    v6 = sub_10005F27C();
    if ((unint64_t)v6 >> 62)
      goto LABEL_23;
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
      while (1)
      {
        v8 = v7 - 1;
        if (__OFSUB__(v7, 1))
          break;
        if ((v6 & 0xC000000000000001) != 0)
          goto LABEL_29;
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v8 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_31;
        v9 = *(id *)(v6 + 8 * v8 + 32);
LABEL_9:
        v10 = v9;
        v11 = objc_msgSend(v9, "toolbarItems", swift_bridgeObjectRelease(v6).n128_f64[0]);

        if (!v11)
          goto LABEL_38;
        v12 = sub_10004F2F0(0, (unint64_t *)&qword_1006475F0, UIBarButtonItem_ptr);
        v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

        v42 = a2;
        if (!((unint64_t)v6 >> 62))
        {
          a2 = *(void (**)(double, double, double, double))((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
          v13 = a1;
          swift_bridgeObjectRetain(v6);
          if (!a2)
            goto LABEL_36;
          goto LABEL_12;
        }
LABEL_32:
        if (v6 < 0)
          v40 = v6;
        else
          v40 = v6 & 0xFFFFFFFFFFFFFF8;
        v41 = a1;
        swift_bridgeObjectRetain(v6);
        a2 = (void (*)(double, double, double, double))_CocoaArrayWrapper.endIndex.getter(v40);
        if (!a2)
        {
LABEL_36:

          swift_bridgeObjectRelease(v6);
          a2 = v42;
          goto LABEL_37;
        }
LABEL_12:
        v14 = v6 & 0xC000000000000001;
        v43 = OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_action;
        v44 = v6;
        v15 = 4;
        while (1)
        {
          v16 = v14
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v6)
              : *(id *)(v6 + 8 * v15);
          v17 = v16;
          v18 = (void (*)(double, double, double, double))(v15 - 3);
          if (__OFADD__(v15 - 4, 1))
            break;
          v19 = type metadata accessor for DOCActionToolBarItem();
          v20 = swift_dynamicCastClass(v17, v19);
          if (v20)
          {
            v21 = (void *)v20;
            v22 = *(void **)(v20 + OBJC_IVAR____TtC5Files20DOCActionToolBarItem_docAction);
            if (v22)
            {
              v23 = v14;
              v24 = a2;
              v25 = *(void **)&a1[v43];
              sub_10004F2F0(0, (unint64_t *)&unk_1006475D0, UIDocumentBrowserAction_ptr);
              v26 = v17;
              v27 = v25;
              v28 = v22;
              v29 = static NSObject.== infix(_:_:)(v28, v27);

              a2 = v24;
              v14 = v23;
              v6 = v44;

              if ((v29 & 1) != 0)
              {

                swift_bridgeObjectRelease_n(v44, 2);
                v46 = v26;
                v30 = objc_msgSend(v21, "_doc_ipi_viewForPresenting");
                objc_msgSend(v21, "_doc_ipi_rectForPresenting");
                objc_msgSend(v30, "convertRect:toView:", 0);
                v32 = v31;
                v34 = v33;
                v36 = v35;
                v38 = v37;

                v42(v32, v34, v36, v38);
                return;
              }
            }
          }

          ++v15;
          if (v18 == a2)
            goto LABEL_36;
        }
        __break(1u);
LABEL_23:
        if (v6 < 0)
          v39 = v6;
        else
          v39 = v6 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v6);
        v7 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(v6);
        if (!v7)
          goto LABEL_37;
      }
      __break(1u);
LABEL_29:
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      goto LABEL_9;
    }
LABEL_37:
    swift_bridgeObjectRelease(v6);
  }
LABEL_38:
  a2(0.0, 0.0, 0.0, 0.0);
}

id sub_100221C18()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceActionPopoverTrackerController);
}

uint64_t type metadata accessor for DOCServiceActionPopoverTrackerController()
{
  return objc_opt_self(_TtC5Files40DOCServiceActionPopoverTrackerController);
}

double sub_100221CF4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  double result;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v9 = swift_allocObject(&unk_1005D35B0, 17, 7);
  *(_BYTE *)(v9 + 16) = 0;
  v10 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_configuration], "hostIdentifier");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = objc_msgSend(v14, "bundleIdentifier");

  if (v15)
  {
    v29 = a4;
    v16 = a3;
    v17 = a1;
    v18 = a2;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v21 = v20;

    if (v11 == v19 && v13 == v21)
    {
      swift_bridgeObjectRelease_n(v13, 2);
      a2 = v18;
      a1 = v17;
      a3 = v16;
      a4 = v29;
      goto LABEL_11;
    }
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v19, v21, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v21);
    a2 = v18;
    a1 = v17;
    a3 = v16;
    a4 = v29;
    if ((v23 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease(v13);
  }
  *(_BYTE *)(v9 + 16) = 1;
LABEL_11:
  v24 = swift_allocObject(&unk_1005D35D8, 64, 7);
  *(_QWORD *)(v24 + 16) = v4;
  *(_QWORD *)(v24 + 24) = a3;
  *(_QWORD *)(v24 + 32) = a4;
  *(_QWORD *)(v24 + 40) = a1;
  *(_BYTE *)(v24 + 48) = a2 & 1;
  *(_QWORD *)(v24 + 56) = v9;
  aBlock[4] = sub_100222F94;
  v31 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A82C;
  aBlock[3] = &unk_1005D35F0;
  v25 = _Block_copy(aBlock);
  v26 = v31;
  v27 = v4;
  swift_retain();
  swift_retain();
  swift_release(v26);
  DOCRunInMainThread(v25);
  _Block_release(v25);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_100221F20(char *a1, uint64_t (*a2)(double, double, double, double), uint64_t a3, void **a4, char a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t Strong;
  void *v19;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  void **v25;

  v25 = a4;
  v11 = sub_10006922C((uint64_t *)&unk_100642710);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IndexPath(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (void (*)(char *, uint64_t))((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_itemCollection]);
  if (!Strong)
    return ((uint64_t (*)(uint64_t, double, double, double, double))a2)(Strong, 0.0, 0.0, 0.0, 0.0);
  v19 = (void *)Strong;
  sub_10017A9F4(*(void **)&a1[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node], (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {

    Strong = sub_1000E9F38((uint64_t)v13);
    return ((uint64_t (*)(uint64_t, double, double, double, double))a2)(Strong, 0.0, 0.0, 0.0, 0.0);
  }
  (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v15 + 32))(v17, v13, v14);
  v21 = v19;
  v22 = a1;
  swift_retain();
  swift_retain();
  sub_1001C816C(v17, v21, v21, v22, v25, a5 & 1, a6, a2, a3);

  swift_release(a6);
  v23 = swift_release(a3);
  return (*(uint64_t (**)(void (*)(char *, uint64_t), uint64_t, __n128))(v15 + 8))(v17, v14, v23);
}

double sub_1002220E4(char *a1, uint64_t a2, void **a3, int a4, uint64_t a5, uint64_t (*a6)(double, double, double, double), uint64_t a7)
{
  uint64_t v9;
  NSObject *v13;
  double result;
  _BYTE v15[24];

  v9 = a5;
  v13 = *(NSObject **)(a2 + OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node);
  swift_beginAccess(a5 + 16, v15, 0, 0);
  LOBYTE(v9) = *(_BYTE *)(v9 + 16);
  swift_retain();
  sub_1001C4D94(v13, a3, a4, v9, a1, a6, a7);
  *(_QWORD *)&result = swift_release(a7).n128_u64[0];
  return result;
}

uint64_t sub_100222188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

id sub_10022225C()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceItemPopoverTrackerController);
}

uint64_t type metadata accessor for DOCServiceItemPopoverTrackerController()
{
  return objc_opt_self(_TtC5Files38DOCServiceItemPopoverTrackerController);
}

void sub_1002222D0(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  char **v24;
  double v25;
  _BYTE *v26;
  void *v27;
  char *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_itemCollection);
  if (Strong)
  {
    v9 = Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress;
    v10 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress);
    v33 = (id)Strong;
    if ((a2 & 1) == 0)
    {
      v17 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
      sub_1001D0614(v10, v17);
      v18 = sub_100195350(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node));
      if (!v18)
        goto LABEL_23;
      v19 = v18;
      v20 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v18) + 0x1F8))();

      if (!v20)
        goto LABEL_23;
      v21 = *(void **)&v20[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
      *(_QWORD *)&v20[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = 0;
      sub_1000628EC(v21);

      v22 = v33;
      v33 = v21;
LABEL_22:

LABEL_23:
      return;
    }
    if (!v10)
      goto LABEL_11;
    v11 = *(_QWORD *)(v9 + 8);
    sub_1001D1598(v10, v11);
    swift_unknownObjectRetain(v11);
    sub_1001D0614(v10, v11);
    ObjectType = swift_getObjectType(v11);
    v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
    v14 = DOCNode.isEqualTo(node:)(v13, ObjectType);
    swift_unknownObjectRelease(v11);
    if ((v14 & 1) != 0)
    {
      if (!*(_QWORD *)v9)
      {
LABEL_27:
        __break(1u);
        return;
      }
      v15 = *(_QWORD *)(v9 + 8);
      v16 = *(id *)v9;
    }
    else
    {
LABEL_11:
      v16 = objc_msgSend(objc_allocWithZone((Class)NSProgress), "init");
      v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
      v13 = v15;
    }
    swift_unknownObjectRetain(v15);
    if ((a3 & 1) != 0)
    {
      v23 = -1;
      v24 = &selRef_setTotalUnitCount_;
LABEL_18:
      objc_msgSend(v16, *v24, v23);
      v26 = sub_100195350(v13);
      if (v26)
      {
        v27 = v26;
        v28 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v26) + 0x1F8))();

        if (v28)
        {
          v29 = *(void **)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
          *(_QWORD *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = v16;
          v30 = v16;
          sub_1000628EC(v29);

        }
      }
      v31 = *(id *)v9;
      v32 = *(_QWORD *)(v9 + 8);
      *(_QWORD *)v9 = v16;
      *(_QWORD *)(v9 + 8) = v15;
      v22 = v16;
      swift_unknownObjectRetain(v15);
      sub_1001D0614(v31, v32);
      swift_unknownObjectRelease(v15);
      goto LABEL_22;
    }
    objc_msgSend(v16, "setTotalUnitCount:", 1000);
    v25 = a4 * 1000.0;
    if ((~COERCE__INT64(a4 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v25 > -9.22337204e18)
      {
        if (v25 < 9.22337204e18)
        {
          v23 = (uint64_t)v25;
          v24 = &selRef_setCompletedUnitCount_;
          goto LABEL_18;
        }
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

void sub_1002226A0(uint64_t a1, void (*a2)(id, NSObject *, double, double, double, double), uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_itemCollection);
  if (Strong)
  {
    v13 = (char *)Strong;
    v14 = *(NSObject **)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
    swift_retain();
    sub_1001C77DC(v14, 0, a4 & 1, 0, v13, a2, a3);

    swift_release(a3);
  }
  else
  {
    v15 = Logger.UI.unsafeMutableAddressor(0);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v23 = v20;
      *(_DWORD *)v19 = 136315138;
      v21[1] = v19 + 4;
      v22 = sub_1000544FC(0xD00000000000002DLL, 0x800000010051A7C0, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s itemCollection is nil. Can not get display imformation.", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a2(0, 0, 0.0, 0.0, 0.0, 0.0);
  }
}

void sub_1002229E0(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  id v9;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_itemCollection);
  if (Strong)
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
    v4 = (_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility);
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility + 8);
    *v4 = 0;
    v4[1] = v3;
    v9 = (id)Strong;
    swift_unknownObjectRetain(v3);
    swift_unknownObjectRelease(v5);
    v6 = sub_100195350(v3);
    if (v6)
    {
      v7 = v6;
      v8 = *(id *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];

      objc_msgSend(v8, "setHidden:", 1);
    }

  }
}

uint64_t sub_100222AC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id v12;
  char *v13;
  uint64_t v14;
  NSString v15;
  char *v16;
  void **v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  __n128 v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v26[24];
  char v27[24];

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_itemCollection);
  if (result)
  {
    v7 = (char *)result;
    v8 = (_QWORD *)(result + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility);
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility + 8);
    *v8 = 0;
    v8[1] = 0;
    swift_unknownObjectRelease(v9);
    v10 = sub_100195350(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node));
    if (v10)
    {
      v11 = v10;
      v12 = *(id *)&v10[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];

      objc_msgSend(v12, "setHidden:", 0);
    }
    v13 = &v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v27, 0, 0);
    sub_10009A978(*(_QWORD *)v13 == 2, (uint64_t)_swiftEmptyArrayStorage);
    v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_sceneIdentifier + 8);
    if (v14)
    {
      swift_bridgeObjectRetain(v14);
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v15);

    v17 = (void **)&v16[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&v16[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], v26, 1, 0);
    v18 = *v17;
    *v17 = 0;
    sub_1000AE638(v18);

    v20 = Logger.UI.unsafeMutableAddressor(v19);
    v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
    v22 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.info.getter(v23);
    if (os_log_type_enabled(v22, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      swift_slowDealloc(v25, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_100222D48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v8 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v8 + 16) = a1;
  v12[4] = a4;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10004A82C;
  v12[3] = a5;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = a1;
  swift_release(v10);
  DOCRunInMainThread(v9);
  _Block_release(v9);

}

id sub_100222E1C()
{
  return sub_1000DB3A0(type metadata accessor for DOCServiceTransitionController);
}

uint64_t type metadata accessor for DOCServiceTransitionController()
{
  return objc_opt_self(_TtC5Files30DOCServiceTransitionController);
}

uint64_t sub_100222E94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100222EB8()
{
  uint64_t v0;

  return sub_100222AC8(*(_QWORD *)(v0 + 16));
}

void sub_100222EC0()
{
  uint64_t v0;

  sub_1002229E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100222EC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100222EEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100222F00()
{
  return sub_100222FD0(41);
}

void sub_100222F08()
{
  uint64_t v0;

  sub_1002226A0(*(_QWORD *)(v0 + 16), *(void (**)(id, NSObject *, double, double, double, double))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_100222F18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100222F3C()
{
  uint64_t v0;

  sub_1002222D0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25), *(double *)(v0 + 32));
}

uint64_t sub_100222F50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100222F60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100222F94()
{
  uint64_t v0;

  return sub_100221F20(*(char **)(v0 + 16), *(uint64_t (**)(double, double, double, double))(v0 + 24), *(_QWORD *)(v0 + 32), *(void ***)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100222FA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100222FB4()
{
  return sub_100222FD0(40);
}

void sub_100222FBC()
{
  uint64_t v0;

  sub_100221734(*(char **)(v0 + 16), *(void (**)(double, double, double, double))(v0 + 24));
}

uint64_t sub_100222FC8()
{
  return sub_100222FD0(40);
}

uint64_t sub_100222FD0(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

double sub_100223050(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = (_QWORD *)UIViewController.associatedObjectStorage.getter(a1);
  KeyPath = swift_getKeyPath(&unk_1004DDCC8);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v3) + 0x78))(&v18);
  swift_release(KeyPath);

  v5 = v18;
  swift_release(v18);
  if (!v5)
  {
    v6 = swift_dynamicCastObjCProtocolConditional(v2, 1);
    if (v6)
    {
      v7 = v6;
      v8 = v2;
      v9 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v8);
      v10 = swift_getKeyPath(&unk_1004DDCC8);
      v11 = type metadata accessor for DOCPresentationPreheatController();
      v12 = swift_allocObject(v11, 41, 7);
      *(_QWORD *)(v12 + 16) = 0x3FE0000000000000;
      v13 = swift_unknownObjectWeakInit(v12 + 24);
      *(_QWORD *)(v12 + 32) = _swiftEmptyArrayStorage;
      *(_BYTE *)(v12 + 40) = 0;
      swift_unknownObjectWeakAssign(v13, v7);
      v18 = v12;
      (*(void (**)(uint64_t *, uint64_t))((swift_isaMask & *v9) + 0x80))(&v18, v10);

    }
  }
  v14 = (_QWORD *)UIViewController.associatedObjectStorage.getter(v6);
  v15 = swift_getKeyPath(&unk_1004DDCC8);
  (*(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v14) + 0x78))(&v18);
  swift_release(v15);

  v17 = v18;
  if (v18)
  {
    sub_1000E600C(2);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002231EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  double v13;
  uint64_t v15;

  v0 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100641150 != -1)
    swift_once(&qword_100641150, sub_1000B20A8);
  v8 = objc_msgSend((id)qword_100672DD8, "ellipsisMenuItemImageName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v11);

  v13 = sub_100299C94(v12);
  (*(void (**)(char *, char *, uint64_t, double))(v5 + 16))(v2, v7, v4, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  UIButton.configuration.setter(v2);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100223594(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  id v5;
  _BYTE *v6;
  void *v7;
  int v8;
  int v9;

  v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton) = a1;
  if (v3 != (a1 & 1))
  {
    v4 = v1;
    v5 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
    objc_msgSend(v5, "setHidden:", (*(_BYTE *)(v4 + v2) & 1) == 0);

    v6 = sub_100223654();
    if (v6)
    {
      v7 = v6;
      v8 = *(unsigned __int8 *)(v4 + v2);
      v9 = v6[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown];
      v6[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] = v8;
      if (v8 != v9)
        sub_10029A0E4();

    }
    sub_1002236C0();
  }
}

_BYTE *sub_100223654()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  _BYTE *v3;
  void *v4;
  _BYTE *v5;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView;
  v2 = *(_BYTE **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView);
  v3 = v2;
  if (v2 == (_BYTE *)1)
  {
    v3 = sub_100225184(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_10008D9C4(v4);
  }
  sub_1000B0268(v2);
  return v3;
}

void sub_1002236C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unsigned __int8 v21;
  double v22;
  uint64_t v23;
  char *v24;
  double v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  double v30;
  char *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  char *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  id v48;
  void *v49;
  void *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  int v55;
  double v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  double v61;
  char *v62;
  id v63;
  void *v64;
  void *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  double v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;

  v1 = v0;
  if (!objc_msgSend(v0, "isViewLoaded"))
    return;
  v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    else
      v10 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes]);
    v4 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 != 1)
    goto LABEL_22;
  v5 = *(_QWORD *)&v1[v2];
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v2]);
    if (v6)
      goto LABEL_7;
LABEL_21:
    swift_bridgeObjectRelease(v5);
LABEL_22:
    v9 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 16];
    goto LABEL_23;
  }
  if (v5 < 0)
    v11 = *(_QWORD *)&v1[v2];
  else
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v2]);
  if (!_CocoaArrayWrapper.endIndex.getter(v11))
    goto LABEL_21;
LABEL_7:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(void **)(v5 + 32);
    swift_unknownObjectRetain(v7);
  }
  v8 = objc_msgSend(v7, "isShared", swift_bridgeObjectRelease(v5).n128_f64[0]);
  swift_unknownObjectRelease(v7);
  v9 = 4.0;
  if ((v8 & 1) == 0)
    goto LABEL_22;
LABEL_23:
  v12 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100225C3C);
  v13 = objc_msgSend(v12, "arrangedSubviews");

  v14 = sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if ((unint64_t)v15 >> 62)
    goto LABEL_64;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v15);
  for (; v16; v16 = _CocoaArrayWrapper.endIndex.getter(v74))
  {
    v17 = 4;
    while (1)
    {
      v18 = (v15 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v15)
          : *(id *)(v15 + 8 * v17);
      v19 = v18;
      v20 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
        break;
      v21 = objc_msgSend(v18, "isHidden");

      if ((v21 & 1) == 0)
      {
        swift_bridgeObjectRelease(v15);
        v22 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 24];
        goto LABEL_34;
      }
      ++v17;
      if (v20 == v16)
        goto LABEL_32;
    }
    __break(1u);
LABEL_64:
    if (v15 < 0)
      v74 = v15;
    else
      v74 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
  }
LABEL_32:
  swift_bridgeObjectRelease(v15);
  v22 = 4.0;
LABEL_34:
  swift_bridgeObjectRelease(v15);
  v23 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  v24 = &v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  v25 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  v26 = (char *)*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView];
  v27 = (char *)sub_100223EE0();
  v28 = (char *)sub_100226840(v27);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(*(id *)&v26[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v28, v25);

    v26 = v27;
    v27 = v29;
  }

  v30 = *((double *)v24 + 1);
  v31 = (char *)*(id *)&v1[v23];
  v32 = sub_100223F9C();
  v33 = sub_100226840(v32);
  if (v33)
  {
    v34 = v33;
    objc_msgSend(*(id *)&v31[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v33, v30);

    v31 = v32;
    v32 = v34;
  }

  v35 = (char *)*(id *)&v1[v23];
  v36 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
  v37 = sub_100226840(v36);
  if (v37)
  {
    v38 = v37;
    objc_msgSend(*(id *)&v35[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v37, v9);

    v35 = v36;
    v36 = v38;
  }

  v39 = (char *)*(id *)&v1[v23];
  v40 = (char *)sub_1002241F0();
  v41 = (char *)sub_100226840(v40);
  if (v41)
  {
    v42 = v41;
    objc_msgSend(*(id *)&v39[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v41, 16.0);

    v39 = v40;
    v40 = v42;
  }

  v43 = (char *)*(id *)&v1[v23];
  v44 = (char *)sub_100225990();
  v45 = (char *)sub_100226840(v44);
  if (v45)
  {
    v46 = v45;
    objc_msgSend(*(id *)&v43[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v45, 16.0);

    v43 = v44;
    v44 = v46;
  }

  v47 = (char *)*(id *)&v1[v23];
  v48 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100225C3C);
  v49 = sub_100226840(v48);
  if (!v49)
  {

    if (v24[56] == 1)
      goto LABEL_46;
LABEL_50:
    v55 = 0;
    goto LABEL_51;
  }
  v50 = v49;
  objc_msgSend(*(id *)&v47[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v49, v22);

  if ((v24[56] & 1) == 0)
    goto LABEL_50;
LABEL_46:
  v51 = (char *)*(id *)&v1[v23];
  v52 = (char *)sub_100224734(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator);
  v53 = (char *)sub_100226840(v52);
  if (v53)
  {
    v54 = v53;
    objc_msgSend(*(id *)&v51[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v53, 18.0);

    v51 = v52;
    v52 = v54;
  }

  v55 = 1;
LABEL_51:
  v56 = *((double *)v24 + 4);
  v57 = (char *)*(id *)&v1[v23];
  v58 = (char *)sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_100224344, (uint64_t (*)(void))sub_100224530);
  v59 = (char *)sub_100226840(v58);
  if (v59)
  {
    v60 = v59;
    objc_msgSend(*(id *)&v57[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v59, v56);

    v57 = v58;
    v58 = v60;
  }

  v61 = *((double *)v24 + 5);
  v62 = (char *)*(id *)&v1[v23];
  v63 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
  v64 = sub_100226840(v63);
  if (v64)
  {
    v65 = v64;
    objc_msgSend(*(id *)&v62[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v64, v61);

    if ((v55 & 1) == 0)
      goto LABEL_60;
LABEL_57:
    v66 = (char *)*(id *)&v1[v23];
    v67 = (char *)sub_100224734(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    v68 = (char *)sub_100226840(v67);
    if (v68)
    {
      v69 = v68;
      objc_msgSend(*(id *)&v66[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v68, 21.0);

      v66 = v67;
      v67 = v69;
    }

    goto LABEL_60;
  }

  if (v55)
    goto LABEL_57;
LABEL_60:
  v70 = *((double *)v24 + 6);
  v71 = (char *)*(id *)&v1[v23];
  v75 = (char *)sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_1002248D8, (uint64_t (*)(void))sub_1002248EC);
  v72 = (char *)sub_100226840(v75);
  if (v72)
  {
    v73 = v72;
    objc_msgSend(*(id *)&v71[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "setCustomSpacing:afterView:", v72, v70);

    v71 = v75;
    v75 = v73;
  }

}

id sub_100223ECC()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
}

id sub_100223EE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView);
  }
  else
  {
    v4 = type metadata accessor for DOCImageContainerFittingView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "documentPreviewTappedWithSender:");
    objc_msgSend(v5, "addGestureRecognizer:", v6);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

_BYTE *sub_100223F9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  _BYTE *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel);
  if (v2)
  {
    v3 = *(_BYTE **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel);
  }
  else
  {
    v4 = sub_100231190();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_BYTE *sub_100223FF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _BYTE *v4;
  _BYTE *v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(_BYTE **)(v1 + *a1);
  }
  else
  {
    v5 = sub_100224054(v1);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

_BYTE *sub_100224054(uint64_t a1)
{
  objc_class *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  char *v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  objc_super v19;

  v2 = (objc_class *)type metadata accessor for DOCCopyableLabel();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v4 = v3;
  v5 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  v6 = v3[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v3[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 1;
  if ((v6 & 1) == 0)
  {
    objc_msgSend(v3, "setUserInteractionEnabled:", 1);
    v7 = sub_1001D2E04();
    v8 = v7[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v7[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v4[v5];
    sub_10042BB1C(v8, v9);

  }
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "secondaryLabelColor");
  v12 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  v13 = *(void **)&v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText];
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText] = v11;
  v14 = v11;

  if (v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] == 1)
  {
    v16 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter(v15);
    v17 = objc_msgSend(v10, "_doc_safeTintColor:", v16);

  }
  else
  {
    v17 = *(id *)&v4[v12];
  }
  v19.receiver = v4;
  v19.super_class = v2;
  objc_msgSendSuper2(&v19, "setTextColor:", v17);

  objc_msgSend(v4, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 64));
  return v4;
}

id sub_1002241F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v4, "setTextColor:", v5);

    objc_msgSend(v4, "setFont:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 64));
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1002242C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)DOCItemInfoOpenButton), "init");
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100224344()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel, (uint64_t (*)(uint64_t))sub_100224358);
}

id sub_100224358(uint64_t a1)
{
  id v2;
  double v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v11;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 72));
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v3) = 1148829696;
  result = (id)_DocumentManagerBundle(objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 1, v3));
  if (result)
  {
    v5 = result;
    v11._object = (void *)0x800000010051B580;
    v6._countAndFlagsBits = 0x74616D726F666E49;
    v6._object = (void *)0xEB000000006E6F69;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v11._countAndFlagsBits = 0xD000000000000037;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v11)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setText:", v10);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002244D4(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = sub_1002247A0(v3, a2, a3);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

char *sub_100224530()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton);
  }
  else
  {
    v4 = v0;
    v5 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
    v6 = objc_allocWithZone((Class)type metadata accessor for DOCLevelOfDetailButton(0));
    v7 = sub_1003CB974(v5);
    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

char *sub_1002245D8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  char *v5;
  char *v6;
  char v7;
  void *v8;
  char *v9;
  id v10;
  char *v11;

  if (qword_100641120 != -1)
    swift_once(&qword_100641120, sub_1003CE2F0);
  v2 = qword_100672D80;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
  objc_allocWithZone((Class)type metadata accessor for DOCMetadataView());
  swift_bridgeObjectRetain(v2);
  v4 = v3;
  v5 = sub_1003D12DC(v2, v3);
  v6 = v5;
  v7 = v5[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment];
  v5[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment] = 1;
  if ((v7 & 1) == 0)
    objc_msgSend(v5, "setNeedsLayout");
  sub_1003D0CCC(1);
  objc_msgSend(v6, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v6;
  v10 = objc_msgSend(v8, "clearColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = &v9[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate];
  *((_QWORD *)v11 + 1) = &off_1005D38A8;
  swift_unknownObjectWeakAssign(v11, a1);
  return v9;
}

id sub_100224734(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)DOCSeparatorView), "init");
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

id sub_1002247A0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  double v11;

  v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004DA350;
  *(_QWORD *)(v6 + 32) = a2();
  v7 = a3();
  *(_QWORD *)(v6 + 40) = v7;
  specialized Array._endMutation()(v7);
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  LODWORD(v11) = 1148829696;
  objc_msgSend(v10, "setContentHuggingPriority:forAxis:", 1, v11);
  objc_msgSend(v10, "setDistribution:", 0);
  objc_msgSend(v10, "setSpacing:", 15.0);
  objc_msgSend(v10, "setAlignment:", 2);
  return v10;
}

id sub_1002248D8()
{
  return sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel, (uint64_t (*)(uint64_t))sub_100224BD4);
}

objc_class *sub_1002248EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  objc_class *v7;
  uint64_t v8;
  __n128 v9;
  Class isa;
  double v11;
  double v12;
  void *v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  void *v25;
  id v26;
  _QWORD aBlock[5];
  uint64_t v29;
  UIAction_optional v30;

  v1 = v0;
  v2 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton);
  if (v6)
  {
    v7 = *(objc_class **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton);
  }
  else
  {
    type metadata accessor for DOCButton();
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v8 = swift_allocObject(&unk_1005D3768, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    v30.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v9, 0, 0, 0, sub_1002325DC, v8);
    isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v30).super.super.super.super.isa;
    -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    LODWORD(v11) = 1148846080;
    -[objc_class setContentHuggingPriority:forAxis:](isa, "setContentHuggingPriority:forAxis:", 0, v11);
    LODWORD(v12) = 1148846080;
    -[objc_class setContentHuggingPriority:forAxis:](isa, "setContentHuggingPriority:forAxis:", 1, v12);
    v13 = (void *)objc_opt_self(UIDevice);
    v14 = isa;

    static UIButton.Configuration.borderless()(v15);
    v17 = type metadata accessor for UIButton.Configuration(0, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 0, 1, v17);
    UIButton.configuration.setter(v4);

    v18 = sub_100224530();
    v19 = swift_allocObject(&unk_1005D3768, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = swift_allocObject(&unk_1005D3F78, 32, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v18;
    aBlock[4] = sub_1002325F0;
    v29 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000602CC;
    aBlock[3] = &unk_1005D3F90;
    v21 = _Block_copy(aBlock);
    v22 = v29;
    v23 = v14;
    v24 = v18;
    -[objc_class setConfigurationUpdateHandler:](v23, "setConfigurationUpdateHandler:", v21, swift_release(v22).n128_f64[0]);
    _Block_release(v21);

    v25 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v23;
    v7 = v23;

    v6 = 0;
  }
  v26 = v6;
  return v7;
}

id sub_100224BD4(uint64_t a1)
{
  id v2;
  double v3;
  id result;
  void *v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v11;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 72));
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v3) = 1148829696;
  result = (id)_DocumentManagerBundle(objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 1, v3));
  if (result)
  {
    v5 = result;
    v11._countAndFlagsBits = 0xD00000000000001FLL;
    v11._object = (void *)0x800000010051B560;
    v6._object = (void *)0x800000010051B540;
    v6._countAndFlagsBits = 0xD000000000000013;
    v7.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7.value._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 1936154964;
    v8._object = (void *)0xE400000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v11)._object;

    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setText:", v10);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100224D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100224DA4();

  }
}

void sub_100224DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Class isa;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagsWorkflowDelegate);
  if (!Strong)
  {
    isa = (Class)sub_1002248EC();
    _s5Files32DOCItemInfoContentViewControllerC014tagsCollectionE0_21didSelectAddTagButtonySo07DOCTagshE0C_So6UIViewCtF_0(isa);
LABEL_21:

    return;
  }
  v3 = (void *)Strong;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v4, 2);
    if (v5)
      goto LABEL_4;
LABEL_20:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
    sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "beginAddTagsWithItems:controller:", isa, v1, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);
    swift_unknownObjectRelease(v3);
    goto LABEL_21;
  }
  if (v4 < 0)
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  else
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v4, 2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v5)
    goto LABEL_20;
LABEL_4:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * i + 32);
        swift_unknownObjectRetain(v8);
      }
      ObjectType = swift_getObjectType(v8);
      v10 = DOCNode.fpfs_syncFetchFPItem()(ObjectType);
      swift_unknownObjectRelease(v8);
      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
        specialized Array._endMutation()(v7);
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_100224FA8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  void *v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  _BYTE v13[24];
  Swift::String v14;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (id)_DocumentManagerBundle(Strong);
    if (v6)
    {
      v7 = v6;
      v14._countAndFlagsBits = 0xD000000000000023;
      v14._object = (void *)0x800000010051B510;
      v8._object = (void *)0x800000010051B4F0;
      v8._countAndFlagsBits = 0xD000000000000017;
      v9.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v9.value._object = (void *)0xEB00000000656C62;
      v10._countAndFlagsBits = 0x7367615420646441;
      v10._object = (void *)0xE800000000000000;
      v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v14);

      v12 = objc_msgSend(v5, "viewIfLoaded");
      sub_1003CB55C(v11._countAndFlagsBits, (uint64_t)v11._object, a1, v12);

      swift_bridgeObjectRelease(v11._object);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1002250EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)DOCTagsCollectionView), "init");
    objc_msgSend(v4, "setShowsAddTagButton:", 0);
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_BYTE *sub_100225184(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  _BYTE *v5;
  char v6;
  char v7;
  uint64_t Strong;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView) != 1)
    return 0;
  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
  objc_allocWithZone((Class)type metadata accessor for DOCInfoActionsView());
  v4 = v2;
  v5 = sub_100299D74(v2, v3);
  v6 = v5[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown];
  v5[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown] = 1;
  if ((v6 & 1) == 0)
    sub_10029A0E4();
  v7 = v5[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown];
  v5[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] = 1;
  if ((v7 & 1) == 0)
    sub_10029A0E4();
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionDelegate);
  swift_unknownObjectWeakAssign(&v5[OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionDelegate], Strong);
  swift_unknownObjectRelease(Strong);
  return v5;
}

id sub_10022527C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  double v20;
  __n128 v21;
  double v22;
  double v23;
  objc_super v25;

  v0 = sub_10006922C((uint64_t *)&unk_10064A080);
  __chkstk_darwin(v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject(&unk_1005D3768, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  v9 = (objc_class *)type metadata accessor for DOCShareButton();
  v25.receiver = objc_allocWithZone(v9);
  v25.super_class = v9;
  swift_retain();
  v10 = objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
  v11 = swift_allocObject(&unk_1005D3988, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_100232004;
  *(_QWORD *)(v11 + 24) = v8;
  v12 = v10;
  v13 = swift_retain();
  v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, v13, 0, 0, 0, sub_100066584, v11);
  objc_msgSend(v12, "setDoc_primaryAction:", v14);

  if (qword_100641150 != -1)
    swift_once(&qword_100641150, sub_1000B20A8);
  v15 = objc_msgSend((id)qword_100672DD8, "ellipsisMenuItemImageName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

  v20 = sub_100299C94(v19);
  (*(void (**)(char *, char *, uint64_t, double))(v5 + 16))(v2, v7, v4, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  UIButton.configuration.setter(v2);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release_n(v8, 2, v21);
  LODWORD(v22) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 1, v22);
  LODWORD(v23) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 0, v23);
  return v12;
}

void sub_100225590(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1002255E0();

  }
}

void sub_1002255E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_group_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *__ptr32 *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void **aBlock;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  _QWORD *v44;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = dispatch_group_create();
  v8 = swift_allocObject(&unk_1005D39B0, 24, 7);
  *(_QWORD *)(v8 + 16) = _swiftEmptyArrayStorage;
  v34 = v0;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    v11 = &off_1004D4000;
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v9);
LABEL_15:
    v20 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    v22 = swift_allocObject(&unk_1005D3A28, 32, 7);
    v23 = v34;
    *(_QWORD *)(v22 + 16) = v8;
    *(_QWORD *)(v22 + 24) = v23;
    v43 = sub_10023207C;
    v44 = (_QWORD *)v22;
    aBlock = _NSConcreteStackBlock;
    v40 = 1107296256;
    v41 = sub_10004A82C;
    v42 = &unk_1005D3A40;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    v25 = v23;
    v26 = v35;
    static DispatchQoS.unspecified.getter(v25);
    v38 = _swiftEmptyArrayStorage;
    v27 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v28 = sub_10006922C((uint64_t *)&unk_100647540);
    v29 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v28, v29, v1, v27);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v26, v4, v21, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v37);
    v30 = v44;
    swift_release(v8);
    swift_release(v30);
    return;
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v19);
  v11 = &off_1004D4000;
  if (!v10)
    goto LABEL_14;
LABEL_3:
  if (v10 >= 1)
  {
    v31 = v4;
    v32 = v2;
    v33 = v1;
    v12 = 0;
    v13 = *((_QWORD *)v11 + 409);
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
      }
      else
      {
        v14 = *(void **)(v9 + 8 * v12 + 32);
        swift_unknownObjectRetain(v14);
      }
      ++v12;
      dispatch_group_enter(v7);
      v15 = (_QWORD *)swift_allocObject(&unk_1005D39D8, 40, 7);
      v15[2] = v7;
      v15[3] = v14;
      v15[4] = v8;
      v43 = sub_100232064;
      v44 = v15;
      aBlock = _NSConcreteStackBlock;
      v40 = v13;
      v41 = sub_100175118;
      v42 = &unk_1005D39F0;
      v16 = _Block_copy(&aBlock);
      v17 = v44;
      v18 = v7;
      swift_unknownObjectRetain(v14);
      swift_retain();
      objc_msgSend(v14, "fetchURL:", v16, swift_release(v17).n128_f64[0]);
      _Block_release(v16);
      swift_unknownObjectRelease(v14);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease(v9);
    v2 = v32;
    v1 = v33;
    v4 = v31;
    goto LABEL_15;
  }
  __break(1u);
}

id sub_100225990()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  Class isa;
  id v11;
  void *v12;
  id v13;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView);
  }
  else
  {
    v4 = v0;
    v5 = sub_10006922C((uint64_t *)&unk_1006441A0);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1004D9B40;
    v7 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    *(_QWORD *)(v6 + 32) = v7;
    specialized Array._endMutation()(v7);
    v8 = v6;
    v9 = objc_allocWithZone((Class)UIStackView);
    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v9, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    objc_msgSend(v11, "setAxis:", 1);
    v12 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v13 = v2;
  return v3;
}

uint64_t sub_100225AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance);
  if ((_DWORD)v2 != 10)
    return v2;
  v3 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v4);
    if (v10 != 1)
      goto LABEL_24;
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_24;
  }
  v5 = *(_QWORD *)(v0 + v3);
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + v3));
    if (v6)
      goto LABEL_6;
LABEL_23:
    swift_bridgeObjectRelease(v5);
    goto LABEL_24;
  }
  if (v5 < 0)
    v11 = *(_QWORD *)(v0 + v3);
  else
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + v3));
  result = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!result)
    goto LABEL_23;
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
LABEL_9:
    swift_bridgeObjectRelease(v5);
    if (objc_msgSend(v8, "isCloudItem")
      && (objc_msgSend(v8, "isItemPinned") & 1) != 0
      && !objc_msgSend(v8, "isExternalDownloadPlaceholder"))
    {
      v2 = 9;
      *(_BYTE *)(v0 + v1) = 9;
      swift_unknownObjectRelease(v8);
      return v2;
    }
    swift_unknownObjectRelease(v8);
LABEL_24:
    v2 = 2;
    *(_BYTE *)(v0 + v1) = 2;
    return v2;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(void **)(v5 + 32);
    swift_unknownObjectRetain(v8);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_100225C3C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t ObjCClassMetadata;
  NSString v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  _BYTE *v19;
  void *v20;
  id v21;
  id v22;
  int v24;
  int v25;
  uint64_t v26;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v2, "setDistribution:", 0);
  objc_msgSend(v2, "setAlignment:", 3);
  v3 = (void *)objc_opt_self(DOCAXIdentifier);
  v4 = v2;
  ObjCClassMetadata = swift_getObjCClassMetadata(objc_msgSend(v3, "itemInfoView"));
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "actionsContainer");
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  objc_msgSend(v4, "setAccessibilityIdentifier:", v6, v7);

  v10 = sub_100223654();
  if (v10)
  {
    v11 = v10;
    type metadata accessor for UILayoutPriority(0);
    v13 = v12;
    v24 = 1065353216;
    v25 = 1148846080;
    v14 = sub_10005A360((unint64_t *)&unk_10064A060, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v26, &v25, &v24, v13, v14);
    LODWORD(v15) = v26;
    objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 0, v15);

  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_allowOpenButton) == 1)
  {
    v16 = sub_1002242C0();
    objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    v17 = sub_1002242C0();
    objc_msgSend(v4, "addArrangedSubview:", v17);

    sub_10004F2F0(0, (unint64_t *)&qword_100645B80, UIView_ptr);
    v18 = (void *)static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter();
    objc_msgSend(v4, "addArrangedSubview:", v18);

  }
  v19 = sub_100223654();
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "addArrangedSubview:", v20);

  }
  v21 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v22 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_10022527C);
  objc_msgSend(v4, "addArrangedSubview:", v22);

  return v4;
}

char *sub_100225ED0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v1 = OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView;
  v2 = objc_allocWithZone((Class)UIStackView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews] = _swiftEmptyArrayStorage;

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack();
  v4 = (char *)objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView;
  v6 = *(void **)&v4[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView];
  v7 = (void *)objc_opt_self(UIColor);
  v8 = v4;
  v9 = v6;
  v10 = objc_msgSend(v7, "clearColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = *(void **)&v4[v5];
  objc_msgSend(v11, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setAxis:", 1);
  objc_msgSend(v11, "setSpacing:", 15.0);
  objc_msgSend(v8, "addSubview:", v11);
  isa = (Class)(id)DOCConstraintsToResizeWithSuperview(v11, NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  if (!isa)
  {
    v13 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v13);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "activateConstraints:", isa);

  return v8;
}

void sub_1002261F4(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  char *v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE v12[24];

  v2 = v1;
  v4 = objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView());
  v5 = sub_10022630C(a1, 0);
  v6 = &v2[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews];
  swift_beginAccess(&v2[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews], v12, 33, 0);
  v7 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized Array._endMutation()(v10);
  swift_endAccess(v12);
  v11 = v7;
  objc_msgSend(v2, "layoutMargins");
  objc_msgSend(v11, "setLayoutMargins:", 0.0);

  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView], "addArrangedSubview:", v11);
}

char *sub_10022630C(void *a1, void *a2)
{
  char *v2;
  id v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  void *v26;
  uint64_t KeyPath;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v33;
  void *v34;
  objc_super v35;

  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_trailingButton] = a2;
  v35.receiver = v2;
  v35.super_class = (Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView();
  v5 = a1;
  v33 = a2;
  v6 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, "addSubview:", v5);
  objc_msgSend(v6, "setPreservesSuperviewLayoutMargins:", 0);
  objc_msgSend(v6, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1004DAC10;
  v10 = objc_msgSend(v5, "leadingAnchor");
  v11 = objc_msgSend(v6, "layoutMarginsGuide");
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v9 + 32) = v13;
  v14 = objc_msgSend(v5, "trailingAnchor");
  v15 = objc_msgSend(v6, "layoutMarginsGuide");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v9 + 40) = v17;
  v18 = objc_msgSend(v5, "topAnchor");
  v19 = objc_msgSend(v6, "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v9 + 48) = v20;
  v21 = objc_msgSend(v5, "bottomAnchor");
  v22 = objc_msgSend(v6, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v9 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v26 = *(void **)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView];
  objc_msgSend(v6, "setHidden:", objc_msgSend(v26, "isHidden"));
  v34 = v26;
  KeyPath = swift_getKeyPath(&unk_1004DDCF8);
  v28 = swift_allocObject(&unk_1005D3C58, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16);
  v29 = v26;
  v30 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_1002321D8, v28, &protocol witness table for NSObject);
  swift_release(KeyPath);
  swift_release(v28);

  v31 = *(void **)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver];
  *(_QWORD *)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver] = v30;

  return v6;
}

void sub_100226724(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  id v7;
  _BYTE v8[24];

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4, v5);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(v7, "setHidden:", objc_msgSend(v3, "isHidden"));

  }
}

void sub_1002267B0()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_trailingButton));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver));
}

id sub_1002267EC()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView);
}

void *sub_100226840(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;
  NSObject **v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v23;
  NSObject **v24;
  uint8_t *v25;
  NSObject *v26;
  uint64_t v27;
  char v28[24];

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews);
  swift_beginAccess(v7, v28, 0, 0);
  v8 = *v7;
  v9 = a1;
  v10 = swift_bridgeObjectRetain(v8);
  v11 = sub_100230D20(v10, (uint64_t)v9);
  swift_bridgeObjectRelease(v8);

  if (!v11)
  {
    v13 = Logger.UI.unsafeMutableAddressor(v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
    v14 = v9;
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (NSObject **)swift_slowAlloc(8, -1);
      v25 = v17;
      v26 = v14;
      *(_DWORD *)v17 = 138412290;
      v23 = v17 + 4;
      v18 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      v19 = v24;
      *v24 = v14;

      v20 = v25;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "ERROR: stackElement(forClientView:) unable to locate stack element for view %@", v25, 0xCu);
      v21 = sub_10006922C(&qword_100643AB0);
      swift_arrayDestroy(v19, 1, v21);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {

      v15 = v14;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11;
}

uint64_t sub_100226A58(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  uint64_t i;
  id v12;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  if (a1)
  {
    v3 = a1;
  }
  else
  {
    v4 = (uint64_t *)&v1[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews], v15, 0, 0);
    v3 = *v4;
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRetain(a1);
  objc_msgSend(v1, "layoutMargins");
  v6 = v5;
  v8 = v7;
  if (!((unint64_t)v3 >> 62))
  {
    v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v3);
    if (v9)
      goto LABEL_6;
    return swift_bridgeObjectRelease_n(v3, 2);
  }
  if (v3 < 0)
    v14 = v3;
  else
    v14 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v9 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v3, 2);
LABEL_6:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v12 = *(id *)(v3 + 8 * i + 32);
      v13 = v12;
      objc_msgSend(v12, "setLayoutMargins:", 0.0, v6, 0.0, v8);

    }
    return swift_bridgeObjectRelease_n(v3, 2);
  }
  __break(1u);
  return result;
}

void sub_100226BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100226BD8()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews));
}

id sub_100226C04()
{
  return sub_1000D8CEC((uint64_t (*)(_QWORD))type metadata accessor for DOCItemInfoContentViewController.RootHStack);
}

void sub_100226C48()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _BYTE *v3;
  _BYTE *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  int v22;
  id v23;

  v1 = v0;
  v23 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView);
  v2 = sub_100223EE0();
  sub_1002261F4(v2);

  v3 = sub_100223F9C();
  sub_1002261F4(v3);

  v4 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
  sub_1002261F4(v4);

  v5 = sub_1002241F0();
  sub_1002261F4(v5);

  v6 = sub_100225990();
  sub_1002261F4(v6);

  v7 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100225C3C);
  sub_1002261F4(v7);

  v22 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 56);
  if (v22 == 1)
  {
    v8 = sub_100224734(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator);
    sub_1002261F4(v8);

  }
  v9 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_100224344, (uint64_t (*)(void))sub_100224530);
  sub_1002261F4(v9);

  v10 = sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
  sub_1002261F4(v10);

  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v11 >> 62)
  {
LABEL_21:
    if (v11 < 0)
      v21 = v11;
    else
      v21 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v11, 2);
    v12 = _CocoaArrayWrapper.endIndex.getter(v21);
    if (v12)
      goto LABEL_5;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes), 2);
    if (v12)
    {
LABEL_5:
      v13 = 4;
      do
      {
        v14 = v13 - 4;
        if ((v11 & 0xC000000000000001) != 0)
        {
          v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, v11);
          v16 = v13 - 3;
          if (__OFADD__(v14, 1))
            goto LABEL_20;
        }
        else
        {
          v15 = *(void **)(v11 + 8 * v13);
          swift_unknownObjectRetain(v15);
          v16 = v13 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        if ((objc_msgSend(v15, "isRootItem") & 1) != 0)
        {
          swift_bridgeObjectRelease_n(v11, 2);
          swift_unknownObjectRelease(v15);
          goto LABEL_19;
        }
        v17 = objc_msgSend(v15, "doc_isCollaborationInvitation");
        swift_unknownObjectRelease(v15);
        if ((v17 & 1) != 0)
        {
          swift_bridgeObjectRelease_n(v11, 2);
          goto LABEL_19;
        }
        ++v13;
      }
      while (v16 != v12);
    }
  }
  swift_bridgeObjectRelease_n(v11, 2);
  if ((v22 & 1) != 0)
  {
    v18 = sub_100224734(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    sub_1002261F4(v18);

  }
  v19 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_1002248D8, (uint64_t (*)(void))sub_1002248EC);
  sub_1002261F4(v19);

  v20 = sub_1002250EC();
  sub_1002261F4(v20);

LABEL_19:
}

id sub_100226F8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", 0.0, 0.0, 500.0, 500.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100227048(void *a1, uint64_t a2, char a3, void *a4, id a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  objc_class *ObjectType;
  objc_super v35;
  _OWORD v36[5];

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  v11 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager;
  *(_QWORD *)&v6[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager] = 0;
  v12 = &v6[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  v13 = v6;
  sub_10023103C((uint64_t)v36);
  v14 = v36[3];
  *((_OWORD *)v12 + 2) = v36[2];
  *((_OWORD *)v12 + 3) = v14;
  *((_OWORD *)v12 + 4) = v36[4];
  v15 = v36[1];
  *(_OWORD *)v12 = v36[0];
  *((_OWORD *)v12 + 1) = v15;
  v16 = &v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins];
  v17 = &v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionDelegate];
  *(_OWORD *)v16 = xmmword_1004DDBA0;
  *((_OWORD *)v16 + 1) = xmmword_1004DDBA0;
  swift_unknownObjectWeakInit(v17);
  v18 = &v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18);
  swift_unknownObjectWeakInit(&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionReporting]);
  swift_unknownObjectWeakInit(&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagsWorkflowDelegate]);
  v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView] = 0;
  v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance] = 10;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow] = 0;
  v19 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  *(_QWORD *)&v13[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack()), "init");
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView] = 0;
  swift_unknownObjectWeakInit(&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagViewController]);
  v20 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
  *(_QWORD *)&v13[v20] = sub_1003F1F0C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver] = 0;
  v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat] = 0;
  v21 = &v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes] = a2;
  *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration] = a1;
  swift_unknownObjectWeakAssign(v17, a6);
  v22 = *(void **)&v7[v11];
  *(_QWORD *)&v7[v11] = a4;
  v23 = a1;
  v24 = a4;

  v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_allowOpenButton] = a3;
  if (a5)
  {
    v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView] = 1;
    *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager] = a5;
    a5 = a5;
  }
  else
  {
    v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView] = 0;
    *(_QWORD *)&v13[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DOCActionManager()), "init");
  }

  v35.receiver = v13;
  v35.super_class = ObjectType;
  v25 = objc_msgSendSuper2(&v35, "initWithNibName:bundle:", 0, 0);
  sub_10022747C();
  v26 = sub_10006922C((uint64_t *)&unk_1006444C0);
  v27 = swift_allocObject(v26, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1004D4CE0;
  *(_QWORD *)(v27 + 32) = type metadata accessor for UITraitDisplayScale(0);
  *(_QWORD *)(v27 + 40) = &protocol witness table for UITraitDisplayScale;
  *(_QWORD *)(v27 + 48) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v27 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  v28 = v25;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v27, sub_100230CFC, 0, ObjectType);
  swift_unknownObjectRelease(v29);
  swift_bridgeObjectRelease(v27);

  swift_unknownObjectRelease(a6);
  return v28;
}

void sub_10022747C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t ObjectType;
  NSObject *v23;
  id v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  id v31;
  double v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  __int128 v65;
  _QWORD *v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void **aBlock;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  _QWORD *v84;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  __chkstk_darwin(v5);
  v68 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject(&unk_1005D3AC8, 24, 7);
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  v8 = (_QWORD *)(v7 + 16);
  v9 = dispatch_group_create();
  v67 = v0;
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v64 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    else
      v64 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v64);
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
  }
  v72 = v2;
  v73 = v1;
  v71 = v4;
  if (v11)
  {
    v77 = v11 - 1;
    if (v11 >= 1)
    {
      v12 = 0;
      v76 = v10 & 0xC000000000000001;
      v65 = xmmword_1004D9670;
      v75 = v10;
      while (1)
      {
        if (v76)
        {
          v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
        }
        else
        {
          v20 = *(void **)(v10 + 8 * v12 + 32);
          swift_unknownObjectRetain(v20);
        }
        dispatch_group_enter(v9);
        v21 = swift_allocObject(&unk_1005D3AF0, 32, 7);
        *(_QWORD *)(v21 + 16) = v7;
        *(_QWORD *)(v21 + 24) = v9;
        ObjectType = swift_getObjectType(v20);
        swift_retain_n(v7, 2);
        v23 = v9;
        v24 = objc_msgSend(v20, "cachedDomain");
        if (!v24)
          break;
        v25 = v24;
        if ((DOCNode.isFPItem.getter(ObjectType) & 1) == 0
          || (FPProviderDomain.shouldUseDSEnumeration.getter(v26) & 1) == 0)
        {
          swift_beginAccess(v8, &aBlock, 33, 0);
          v33 = swift_unknownObjectRetain(v20);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
          v35 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v34 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v35 >= v34 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
          v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v20);
          specialized Array._endMutation()(v36);
          swift_endAccess(&aBlock);
          dispatch_group_leave(v23);
          swift_release(v7);
          swift_release(v21);
LABEL_11:

          v10 = v75;
LABEL_12:
          swift_unknownObjectRelease(v20);

          if (v77 == v12)
            goto LABEL_35;
          goto LABEL_13;
        }
        v27 = objc_opt_self(FPItem);
        v28 = (void *)swift_dynamicCastObjCClassUnconditional(v20, v27, 0, 0, 0);
        swift_unknownObjectRetain(v20);
        if (objc_msgSend(v28, "isRootItem"))
        {
          type metadata accessor for DOCRootNode(0);
          v13 = static DOCRootNode.rootNode(for:)(v25);
          if (v13)
          {
            v14 = (void *)v13;
            swift_beginAccess(v8, &aBlock, 33, 0);
            v74 = v14;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
            v16 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v15 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v16 >= v15 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
            v17 = v16;
            v18 = v74;
            v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v74);
            specialized Array._endMutation()(v19);
            swift_endAccess(&aBlock);
            dispatch_group_leave(v23);
            swift_release(v7);
            swift_release(v21);

          }
          else
          {
            v74 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
            LODWORD(v66) = static os_log_type_t.error.getter(v74);
            v44 = sub_10006922C((uint64_t *)&unk_100644560);
            v45 = swift_allocObject(v44, 72, 7);
            *(_OWORD *)(v45 + 16) = v65;
            *(_QWORD *)(v45 + 56) = sub_10004F2F0(0, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
            *(_QWORD *)(v45 + 64) = sub_100083450(&qword_100657300, (unint64_t *)&unk_100643460, FPProviderDomain_ptr);
            *(_QWORD *)(v45 + 32) = v25;
            v25 = v25;
            v46 = v74;
            os_log(_:dso:log:type:_:)("Could not fetch root node for domain: (%{public}@)", 50, 2, &_mh_execute_header, v74, v66, v45);

            swift_bridgeObjectRelease(v45);
            swift_beginAccess(v8, &aBlock, 33, 0);
            v47 = swift_unknownObjectRetain(v20);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
            v49 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v48 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v49 >= v48 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
            v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v20);
            specialized Array._endMutation()(v50);
            swift_endAccess(&aBlock);
            dispatch_group_leave(v23);
            swift_release(v7);
            swift_release(v21);
          }
          swift_unknownObjectRelease(v20);
          goto LABEL_11;
        }
        if ((FPProviderDomain.shouldResolveDSNodeAsFPv2.getter() & 1) != 0)
        {
          v74 = (id)objc_opt_self(FINode);
          v29 = (_QWORD *)swift_allocObject(&unk_1005D3BB8, 48, 7);
          v29[2] = v28;
          v29[3] = sub_10023210C;
          v29[4] = v21;
          v29[5] = v20;
          v83 = sub_100232170;
          v84 = v29;
          aBlock = _NSConcreteStackBlock;
          v80 = 1107296256;
          v81 = sub_100083540;
          v82 = &unk_1005D3BD0;
          v30 = _Block_copy(&aBlock);
          v66 = v84;
          swift_unknownObjectRetain_n(v20, 2);
          v31 = v25;
          swift_retain();
          *(_QWORD *)&v32 = swift_release(v66).n128_u64[0];
          objc_msgSend(v74, "fiNodeFromItem:inFPv2Domain:completion:", v28, v31, v30, v32);
          _Block_release(v30);

          swift_release(v7);
          swift_release(v21);
          swift_unknownObjectRelease_n(v20, 2);

        }
        else
        {
          v74 = objc_msgSend((id)objc_opt_self(FPItemManager), "defaultManager");
          v41 = (_QWORD *)swift_allocObject(&unk_1005D3B68, 48, 7);
          v41[2] = v28;
          v41[3] = sub_10023210C;
          v41[4] = v21;
          v41[5] = v20;
          v83 = sub_10023212C;
          v84 = v41;
          aBlock = _NSConcreteStackBlock;
          v80 = 1107296256;
          v81 = sub_100175118;
          v82 = &unk_1005D3B80;
          v42 = _Block_copy(&aBlock);
          v66 = v84;
          swift_unknownObjectRetain_n(v20, 2);
          swift_retain();
          *(_QWORD *)&v43 = swift_release(v66).n128_u64[0];
          objc_msgSend(v74, "fetchURLForItem:completionHandler:", v28, v42, v43);
          _Block_release(v42);

          swift_release(v7);
          swift_release(v21);

          swift_unknownObjectRelease_n(v20, 2);
        }
        v10 = v75;
        if (v77 == v12)
          goto LABEL_35;
LABEL_13:
        ++v12;
      }
      swift_beginAccess(v8, &aBlock, 33, 0);
      v37 = swift_unknownObjectRetain(v20);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v39 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v38 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v39 >= v38 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
      v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v20);
      specialized Array._endMutation()(v40);
      swift_endAccess(&aBlock);
      dispatch_group_leave(v23);
      swift_release(v7);
      swift_release(v21);
      goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_35:
    swift_bridgeObjectRelease(v10);
    v51 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v52 = (void *)static OS_dispatch_queue.main.getter(v51);
    v53 = swift_allocObject(&unk_1005D3B18, 32, 7);
    v54 = v67;
    *(_QWORD *)(v53 + 16) = v7;
    *(_QWORD *)(v53 + 24) = v54;
    v83 = sub_100232120;
    v84 = (_QWORD *)v53;
    aBlock = _NSConcreteStackBlock;
    v80 = 1107296256;
    v81 = sub_10004A82C;
    v82 = &unk_1005D3B30;
    v55 = _Block_copy(&aBlock);
    swift_retain();
    v56 = v54;
    v57 = v68;
    static DispatchQoS.unspecified.getter(v56);
    v78 = _swiftEmptyArrayStorage;
    v58 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v59 = sub_10006922C((uint64_t *)&unk_100647540);
    v60 = sub_1000791AC();
    v61 = v71;
    v62 = v73;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v78, v59, v60, v73, v58);
    OS_dispatch_group.notify(qos:flags:queue:execute:)(v57, v61, v52, v55);
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v70);
    v63 = v84;
    swift_release(v7);
    swift_release(v63);
  }
}

void sub_100227DA0(char a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char *v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  double *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22[24];

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = sub_10023B9F4(&off_1005C0020);
  v7 = v6;
  swift_arrayDestroy(&unk_1005C0040, 2, &_s6TraitsVN);
  v8 = sub_10007B5C0(v5);
  swift_bridgeObjectRelease(v7);

  if (v8)
  {
    v9 = (char *)sub_100223EE0();
    v10 = &v9[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
    *(_QWORD *)&v11 = swift_beginAccess(&v9[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v22, 0, 0).n128_u64[0];
    if (!*(_QWORD *)(*(_QWORD *)v10 + 16))
    {
LABEL_11:

      return;
    }
    objc_msgSend(*(id *)(*(_QWORD *)v10 + 32), "fittingSize", v11);
    v13 = v12;
    v15 = v14;

    if (v13 != 0.0 || v15 != 0.0)
    {
      if ((a1 & 1) != 0
        || (*(double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize] == v13
          ? (v16 = *(double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize + 8] == v15)
          : (v16 = 0),
            !v16))
      {
        v17 = (double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
        *v17 = v13;
        v17[1] = v15;
        v9 = (char *)sub_100223EE0();
        v18 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
        v19 = &v9[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes];
        swift_beginAccess(&v9[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes], &v21, 1, 0);
        v20 = *(_QWORD *)v19;
        *(_QWORD *)v19 = v18;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRelease(v20);
        sub_1001F9A0C();
        goto LABEL_11;
      }
    }
  }
}

Swift::Void __swiftcall DOCItemInfoContentViewController.loadView()()
{
  void *v0;
  id v1;

  v1 = sub_100226F8C();
  objc_msgSend(v0, "setView:", v1);

}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t ObjCClassMetadata;
  NSString v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  Class isa;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD aBlock[5];
  uint64_t v80;
  uint64_t v81;
  objc_super v82;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82.receiver = v1;
  v82.super_class = ObjectType;
  objc_msgSendSuper2(&v82, "viewDidLoad", v9);
  v12 = objc_msgSend(v1, "view");
  if (v12)
  {
    v13 = v12;
    v77 = v8;
    v78 = v4;
    v14 = objc_msgSend((id)objc_opt_self(DOCAXIdentifier), "itemInfoView");
    ObjCClassMetadata = swift_getObjCClassMetadata(v14);
    v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(ObjCClassMetadata), "infoContainer");
    if (!v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v19 = v18;
      v16 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v17 = swift_bridgeObjectRelease(v19).n128_u64[0];
    }
    objc_msgSend(v13, "setAccessibilityIdentifier:", v16, v17);

    v20 = sub_100223F9C();
    objc_msgSend(v20, "setNumberOfLines:", 2);

    v21 = sub_100223F9C();
    objc_msgSend(v21, "setLineBreakMode:", 5);

    v22 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v22, "setNumberOfLines:", 0);

    v23 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v23, "setAdjustsFontForContentSizeCategory:", 1);

    v24 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v24, "setTextAlignment:", 4);

    v25 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    objc_msgSend(v25, "setNumberOfLines:", 0);

    v26 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    objc_msgSend(v26, "setAdjustsFontForContentSizeCategory:", 1);

    v27 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    objc_msgSend(v27, "setTextAlignment:", 4);

    v28 = sub_1002241F0();
    objc_msgSend(v28, "setNumberOfLines:", 0);

    v29 = sub_1002241F0();
    objc_msgSend(v29, "setAdjustsFontForContentSizeCategory:", 1);

    v30 = sub_1002241F0();
    objc_msgSend(v30, "setTextAlignment:", 4);

    v31 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v1[v31], "setLayoutMargins:", *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 8], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 16], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 24]);
    sub_100226C48();
    sub_1002236C0();
    v32 = sub_100226F8C();
    objc_msgSend(v32, "addSubview:", *(_QWORD *)&v1[v31]);

    v33 = sub_100226F8C();
    objc_msgSend(v33, "setContentInsetAdjustmentBehavior:", 3);

    v34 = sub_100226F8C();
    objc_msgSend(v34, "setAlwaysBounceVertical:", 1);

    v35 = sub_100226F8C();
    objc_msgSend(v35, "setDelegate:", v1);

    v36 = sub_100226F8C();
    objc_msgSend(v36, "setClipsToBounds:", 0);

    v37 = (id)DOCConstraintsToResizeWithSuperview(*(_QWORD *)&v1[v31], NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    v38 = sub_10004F2F0(0, (unint64_t *)&unk_100642440, NSLayoutConstraint_ptr);
    v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

    v81 = v39;
    v40 = objc_msgSend(*(id *)&v1[v31], "widthAnchor");
    v41 = sub_100226F8C();
    v42 = objc_msgSend(v41, "widthAnchor");

    v43 = objc_msgSend(v40, "constraintEqualToAnchor:multiplier:", v42, 1.0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
    v46 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v45 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v46 >= v45 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
    v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
    specialized Array._endMutation()(v47);
    v48 = sub_100223EE0();
    v49 = objc_msgSend(v48, "heightAnchor");

    v50 = sub_100226F8C();
    v51 = objc_msgSend(v50, "frameLayoutGuide");

    v52 = objc_msgSend(v51, "heightAnchor");
    v53 = objc_msgSend(v49, "constraintLessThanOrEqualToAnchor:multiplier:", v52, 0.333333333);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
    v56 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v55 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v56 >= v55 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
    v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v53);
    specialized Array._endMutation()(v57);
    v58 = (void *)objc_opt_self(NSLayoutConstraint);
    v59 = v81;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v58, "activateConstraints:", isa, swift_bridgeObjectRelease(v59).n128_f64[0]);

    sub_1002288B0();
    v61 = sub_10004F2F0(0, (unint64_t *)&qword_1006456D0, OS_dispatch_queue_ptr);
    v62 = (void *)static OS_dispatch_queue.main.getter(v61);
    v63 = swift_allocObject(&unk_1005D3768, 24, 7);
    swift_unknownObjectWeakInit(v63 + 16);
    aBlock[4] = sub_10022EFF0;
    v80 = v63;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004A82C;
    aBlock[3] = &unk_1005D3780;
    v64 = _Block_copy(aBlock);
    swift_release(v80);
    static DispatchQoS.unspecified.getter(v65);
    aBlock[0] = _swiftEmptyArrayStorage;
    v66 = sub_10005A360((unint64_t *)&qword_100641260, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v67 = sub_10006922C((uint64_t *)&unk_100647540);
    v68 = sub_1000791AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v67, v68, v3, v66);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v6, v64);
    _Block_release(v64);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v11, v7);
    v69 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    if ((unint64_t)v69 >> 62)
    {
      if (v69 < 0)
        v75 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
      else
        v75 = v69 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes]);
      if (_CocoaArrayWrapper.endIndex.getter(v75))
        goto LABEL_10;
    }
    else
    {
      v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes]);
      if (v70)
      {
LABEL_10:
        if ((v69 & 0xC000000000000001) != 0)
        {
          v71 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v69);
          goto LABEL_13;
        }
        if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v71 = *(_QWORD *)(v69 + 32);
          swift_unknownObjectRetain(v71);
LABEL_13:
          swift_bridgeObjectRelease(v69);
          v72 = swift_getObjectType(v71);
          v73 = swift_allocObject(&unk_1005D3768, 24, 7);
          swift_unknownObjectWeakInit(v73 + 16);
          swift_retain();
          DOCNode.fpfs_fetchFPItem(completion:)(sub_10022EFF8, v73, v72);
          v74 = swift_unknownObjectRelease(v71);
          swift_release_n(v73, 2, v74);
          return;
        }
        __break(1u);
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease(v69);
    return;
  }
LABEL_21:
  __break(1u);
}

void sub_1002288B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char **v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  os_log_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint8_t *v53;
  os_log_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  NSArray v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  Swift::OpaquePointer v70;
  __n128 v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  NSString v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t ObjectType;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint8_t *v109;
  os_log_t v110;
  uint8_t *v111;
  uint64_t v112;
  int v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v1 = v0;
  v2 = type metadata accessor for UTType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v109 - v12;
  if (!objc_msgSend(v1, "isViewLoaded", v11))
    return;
  v114 = v5;
  v14 = (char *)sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
  v15 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
  *(_QWORD *)&v14[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  sub_1003D26E8();

  v18 = (void *)FPActionTag;
  v19 = *(_QWORD *)&v1[v15];
  swift_bridgeObjectRetain(v19);
  LOBYTE(v18) = sub_1003598CC(v18, v19);
  swift_bridgeObjectRelease(v19);
  v21 = Logger.UI.unsafeMutableAddressor(v20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v23 = &selRef_objectForKey_ofClass_;
  v115 = v3;
  v116 = v2;
  if ((v18 & 1) != 0)
  {
    v22(v13, v21, v6);
    v24 = v1;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter(v25);
    v113 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v112 = swift_slowAlloc(32, -1);
      v118 = v112;
      v111 = v27;
      *(_DWORD *)v27 = 136315138;
      v109 = v27 + 4;
      v28 = *(_QWORD *)&v1[v15];
      swift_bridgeObjectRetain(v28);
      v29 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v30 = Array.description.getter(v28, v29);
      v110 = v25;
      v31 = v24;
      v32 = v15;
      v33 = v30;
      v35 = v34;
      swift_bridgeObjectRelease(v28);
      v36 = v33;
      v15 = v32;
      v117 = sub_1000544FC(v36, v35, &v118);
      v23 = &selRef_objectForKey_ofClass_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118);

      swift_bridgeObjectRelease(v35);
      v38 = v110;
      v37 = v111;
      _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v113, "[Info View]: Nodes can be tagged: %s - showing Tag section", v111, 0xCu);
      v39 = v112;
      swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v56 = sub_1002250EC();
    v57 = *(_QWORD *)&v1[v15];
    swift_bridgeObjectRetain(v57);
    sub_10006922C((uint64_t *)&unk_1006424B0);
    v58.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v56, "setNodes:", v58.super.isa, swift_bridgeObjectRelease(v57).n128_f64[0]);

  }
  else
  {
    v22(v9, v21, v6);
    v40 = v1;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.debug.getter(v41);
    v113 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v112 = swift_slowAlloc(32, -1);
      v118 = v112;
      v111 = v43;
      *(_DWORD *)v43 = 136315138;
      v109 = v43 + 4;
      v44 = *(_QWORD *)&v1[v15];
      swift_bridgeObjectRetain(v44);
      v45 = sub_10006922C((uint64_t *)&unk_1006424B0);
      v46 = Array.description.getter(v44, v45);
      v110 = v41;
      v47 = v15;
      v48 = v46;
      v50 = v49;
      swift_bridgeObjectRelease(v44);
      v51 = v48;
      v15 = v47;
      v117 = sub_1000544FC(v51, v50, &v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118);

      v52 = v50;
      v23 = &selRef_objectForKey_ofClass_;
      swift_bridgeObjectRelease(v52);
      v54 = v110;
      v53 = v111;
      _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v113, "[Info View]: Nodes CANNOT be tagged: %s - hidding Tag section", v111, 0xCu);
      v55 = v112;
      swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v59 = sub_100224734(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    objc_msgSend(v59, v23[168], 1);

    v60 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_1002248D8, (uint64_t (*)(void))sub_1002248EC);
    objc_msgSend(v60, v23[168], 1);

    v58.super.isa = (Class)sub_1002250EC();
    objc_msgSend(v58.super.isa, v23[168], 1);
  }

  v61 = *(_QWORD *)&v1[v15];
  if ((unint64_t)v61 >> 62)
  {
    if (v61 < 0)
      v77 = *(_QWORD *)&v1[v15];
    else
      v77 = v61 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
    v78 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease(v61);
    if (v78 != 1)
      goto LABEL_33;
  }
  else if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_33:
    v76 = sub_1002242C0();
    objc_msgSend(v76, v23[168], 1);
    goto LABEL_34;
  }
  v62 = *(_QWORD *)&v1[v15];
  if ((unint64_t)v62 >> 62)
  {
    if (v62 < 0)
      v79 = *(_QWORD *)&v1[v15];
    else
      v79 = v62 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
    if (_CocoaArrayWrapper.endIndex.getter(v79))
      goto LABEL_15;
    goto LABEL_32;
  }
  v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
  if (!v63)
  {
LABEL_32:
    swift_bridgeObjectRelease(v62);
    goto LABEL_33;
  }
LABEL_15:
  if ((v62 & 0xC000000000000001) != 0)
  {
    v64 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v62);
  }
  else
  {
    if (!*(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_67;
    }
    v64 = *(void **)(v62 + 32);
    swift_unknownObjectRetain(v64);
  }
  v65 = objc_msgSend(v64, "contentType", swift_bridgeObjectRelease(v62).n128_f64[0]);
  v66 = v114;
  static UTType._unconditionallyBridgeFromObjectiveC(_:)(v65);

  v67 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  v68 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration], "documentContentTypes");
  v69 = v116;
  v70._rawValue = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v68, v116);

  LOBYTE(v68) = UTType.doc_conformsToAny(inContentTypes:)(v70);
  v71 = swift_bridgeObjectRelease(v70._rawValue);
  (*(void (**)(char *, uint64_t, __n128))(v115 + 8))(v66, v69, v71);
  if ((v68 & 1) != 0 || (objc_msgSend(v64, "isFolder") & 1) != 0)
    v72 = 1;
  else
    v72 = (uint64_t)objc_msgSend(*(id *)&v1[v67], "isFilesApp");
  v73 = sub_1002242C0();
  objc_msgSend(v73, "setNode:", v64);

  v74 = sub_1002242C0();
  objc_msgSend(v74, "setNodeCanBeOpened:", v72);

  v75 = sub_1002242C0();
  objc_msgSend(v75, "updateDownloadState");

  v76 = sub_1002242C0();
  objc_msgSend(v76, v23[168], 0);
  swift_unknownObjectRelease(v64);
LABEL_34:

  v80 = sub_10022AE1C();
  v82 = v81;
  sub_10022B098(v80, v81);
  swift_bridgeObjectRelease(v82);
  sub_10022B2A0();
  if (v83)
  {
    v84 = v83;
    v85 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    v86 = String._bridgeToObjectiveC()();
    objc_msgSend(v85, "setText:", v86, swift_bridgeObjectRelease(v84).n128_f64[0]);

    v87 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    objc_msgSend(v87, v23[168], 0);
  }
  else
  {
    v87 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    objc_msgSend(v87, v23[168], 1);
  }

  v88 = *(_QWORD *)&v1[v15];
  if ((unint64_t)v88 >> 62)
  {
    if (v88 < 0)
      v97 = *(_QWORD *)&v1[v15];
    else
      v97 = v88 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
    v98 = _CocoaArrayWrapper.endIndex.getter(v97);
    swift_bridgeObjectRelease(v88);
    if (v98 != 1)
      goto LABEL_57;
  }
  else if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_57:
    v96 = sub_1002241F0();
    objc_msgSend(v96, v23[168], 1);
    goto LABEL_58;
  }
  v62 = *(_QWORD *)&v1[v15];
  if (!((unint64_t)v62 >> 62))
  {
    v89 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
    if (v89)
      goto LABEL_41;
LABEL_56:
    swift_bridgeObjectRelease(v62);
    goto LABEL_57;
  }
  if (v62 < 0)
    v99 = *(_QWORD *)&v1[v15];
  else
    v99 = v62 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v15]);
  if (!_CocoaArrayWrapper.endIndex.getter(v99))
    goto LABEL_56;
LABEL_41:
  if ((v62 & 0xC000000000000001) != 0)
  {
LABEL_67:
    v90 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v62);
    goto LABEL_44;
  }
  if (!*(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  v90 = *(_QWORD *)(v62 + 32);
  swift_unknownObjectRetain(v90);
LABEL_44:
  swift_bridgeObjectRelease(v62);
  ObjectType = swift_getObjectType(v90);
  DOCNode.syncErrorDescription.getter(ObjectType);
  if (!v92)
  {
    swift_unknownObjectRelease(v90);
    goto LABEL_57;
  }
  v93 = v92;
  v94 = sub_1002241F0();
  objc_msgSend(v94, v23[168], 0);

  v95 = sub_1002241F0();
  v96 = String._bridgeToObjectiveC()();
  objc_msgSend(v95, "setText:", v96, swift_bridgeObjectRelease(v93).n128_f64[0]);
  swift_unknownObjectRelease(v90);

LABEL_58:
  v100 = sub_100223654();
  if (v100)
  {
    v101 = v100;
    v102 = *(_QWORD *)&v1[v15];
    v103 = OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes;
    v104 = *(_QWORD *)&v100[OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes];
    *(_QWORD *)&v100[OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes] = v102;
    swift_bridgeObjectRetain_n(v102, 2);
    v105 = == infix(_:_:)(v102, v104);
    swift_bridgeObjectRelease(v102);
    if ((v105 & 1) != 0)
    {

    }
    else
    {
      v106 = *(_QWORD *)&v101[v103];
      v107 = swift_bridgeObjectRetain(v106);
      sub_10029A78C(v107);

      swift_bridgeObjectRelease(v104);
      v104 = v106;
    }
    swift_bridgeObjectRelease(v104);
  }
  sub_100227DA0(1);
  sub_10022B60C(v108);
  sub_10022A208();
  sub_1002236C0();
}

void sub_100229320(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  id v10;
  _QWORD v11[4];
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType(v5);
      v11[3] = type metadata accessor for DOCItemInfoContentViewController();
      v11[0] = v3;
      v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 8);
      v10 = v3;
      v9(v11, 1, 1, 0, ObjectType, v7);

      swift_unknownObjectRelease(v6);
      sub_100068588(v11);
    }
    else
    {

    }
  }
}

void sub_1002293F0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v25[24];

  v4 = sub_10006922C(&qword_1006438A0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for DOCFileEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v25[-v12 - 8];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    if (a1)
    {
      v16 = a1;
      sub_10012BCCC(v16, (uint64_t)v13);
      v17 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
      sub_1000EACB4((uint64_t)v13, (uint64_t)v10);
      type metadata accessor for MainActor(0);
      v18 = v15;
      v19 = static MainActor.shared.getter(v18);
      v20 = *(unsigned __int8 *)(v8 + 80);
      v21 = (v20 + 40) & ~v20;
      v22 = (_QWORD *)swift_allocObject(&unk_1005D3FC8, v21 + v9, v20 | 7);
      v22[2] = v19;
      v22[3] = &protocol witness table for MainActor;
      v22[4] = v18;
      sub_10011154C((uint64_t)v10, (uint64_t)v22 + v21);
      v23 = sub_100174E78((uint64_t)v6, (uint64_t)&unk_100648488, (uint64_t)v22);

      swift_release(v23);
      sub_1000EACF8((uint64_t)v13);
    }
    else
    {

    }
  }
}

uint64_t sub_1002295BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DOCFileEntity(0);
  v5[4] = v6;
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10006922C((uint64_t *)&unk_100648490);
  v5[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100229670, v9, v10);
}

id sub_100229670()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(v0 + 16), "view", swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  if (result)
  {
    v2 = result;
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 32);
    sub_1000EACB4(*(_QWORD *)(v0 + 24), v4);
    v6 = sub_10005A360((unint64_t *)&qword_100643D40, type metadata accessor for DOCFileEntity, (uint64_t)&unk_1004DAF80);
    EntityIdentifier.init<A>(for:)(v4, v5, v6);
    v7 = type metadata accessor for EntityIdentifier(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 0, 1, v7);
    UIView.appEntityIdentifier.setter(v3);

    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100229784(void *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  id v20;
  uint64_t v21;

  if (a1)
  {
    v20 = a1;
    a4();

  }
  else
  {
    v10 = *(id *)DOCLog.UI.unsafeMutableAddressor(0);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = sub_10006922C((uint64_t *)&unk_100644560);
    v13 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v13 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v13 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v13 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v13 + 32) = a3;
    v21 = a2;
    v14 = a3;
    swift_errorRetain(a2);
    v15 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v16 = String.init<A>(describing:)(&v21, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 96) = &type metadata for String;
    *(_QWORD *)(v13 + 104) = sub_10006A638();
    *(_QWORD *)(v13 + 72) = v16;
    *(_QWORD *)(v13 + 80) = v18;
    os_log(_:dso:log:type:_:)("Could not fetch FINode for item %@: %@", 38, 2, &_mh_execute_header, v10, v11, v13);

    v19 = swift_bridgeObjectRelease(v13);
    ((void (*)(uint64_t, __n128))a4)(a6, v19);
  }
}

uint64_t sub_100229910(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v33)(void);
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a5;
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002320B8(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v21 = sub_100157D6C((uint64_t)v16);
    v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v21);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v24, 112, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v25 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v25 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v25 + 32) = a3;
    v37 = a2;
    v26 = a3;
    swift_errorRetain(a2);
    v27 = sub_10006922C((uint64_t *)&unk_1006434A0);
    v28 = String.init<A>(describing:)(&v37, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 96) = &type metadata for String;
    *(_QWORD *)(v25 + 104) = sub_10006A638();
    *(_QWORD *)(v25 + 72) = v28;
    *(_QWORD *)(v25 + 80) = v30;
    os_log(_:dso:log:type:_:)("Could not fetch URL for item %@: %@", 35, 2, &_mh_execute_header, v22, v23, v25);

    v31 = swift_bridgeObjectRelease(v25);
    return ((uint64_t (*)(uint64_t, __n128))a4)(a6, v31);
  }
  else
  {
    v33 = a4;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    sub_10004F2F0(0, (unint64_t *)&unk_100641970, FINode_ptr);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v20, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    v34 = (void *)static FINode.docNode(from:)(v13);
    sub_100157D6C((uint64_t)v13);
    if (v34)
    {
      v35 = v34;
      v33();

    }
    else
    {
      ((void (*)(uint64_t))a4)(a6);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

void sub_100229BE4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  swift_beginAccess(a2 + 16, v11, 33, 0);
  v6 = swift_unknownObjectRetain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v7 = *(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v7 + 0x10);
  v8 = *(_QWORD *)(v7 + 24);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, a1);
  specialized Array._endMutation()(v10);
  swift_endAccess(v11);
  dispatch_group_leave(a3);
}

double sub_100229C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  double result;
  _BYTE v17[24];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 16, v17, 0, 0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = type metadata accessor for DOCMultiNodeObserver();
  swift_allocObject(v9, 72, 7);
  v10 = swift_bridgeObjectRetain(v8);
  v11 = sub_100451C64(v10, 1, 0.25);
  v12 = swift_allocObject(&unk_1005D3768, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  swift_retain();
  sub_1004524F8((uint64_t)sub_10023217C, v12, (uint64_t)v7);
  v13 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  swift_release(v12);
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes) == 1)
    sub_100452690();
  sub_100229E44(v11);
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver) = v11;
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

void sub_100229DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100229E44(a1);

  }
}

double sub_100229E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes) = v3;
  swift_bridgeObjectRetain_n(v3, 2);
  swift_bridgeObjectRelease(v4);
  if (!((unint64_t)v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v3);
    v4 = 0;
    goto LABEL_18;
  }
  if (v3 < 0)
    v10 = v3;
  else
    v10 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v11 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v3);
  if (v11 != 1)
    goto LABEL_17;
  swift_bridgeObjectRetain(v3);
  v4 = (void *)_CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(v3);
  if (!v4)
  {
    swift_bridgeObjectRelease(v3);
    goto LABEL_18;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    v4 = *(void **)(v3 + 32);
    swift_unknownObjectRetain(v4);
  }
  swift_bridgeObjectRelease(v3);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance) = 10;
  swift_unknownObjectRetain(v4);
  v5 = sub_100223EE0();
  v6 = objc_msgSend(v5, "interactions");

  v7 = sub_10006922C((uint64_t *)&unk_100648450);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if (!((unint64_t)v3 >> 62))
  {
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
LABEL_21:
  if (v3 < 0)
    v13 = v3;
  else
    v13 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v8 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v3);
LABEL_8:
  swift_bridgeObjectRelease(v3);
  if (!v8)
  {
    v9 = sub_100223EE0();
    sub_10022A028(v4);

  }
  swift_unknownObjectRelease(v4);
LABEL_18:
  sub_1002288B0();
  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10022A028(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  double v14;
  objc_class *v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Class isa;
  id v22;
  uint64_t v23;
  objc_super v24;

  v2 = v1;
  ObjectType = swift_getObjectType(a1);
  v22 = (id)DOCNode.fpfs_syncFetchFPItem()(ObjectType);
  if (!v22)
    return;
  v5 = objc_msgSend(a1, "providerDomainID");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(DOCLocalStorageFileProviderIdentifier);
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
LABEL_9:
    if ((objc_msgSend(v22, "doc_isAppContainerRoot", v14, v22) & 1) != 0)
    {
LABEL_11:

      return;
    }
    goto LABEL_10;
  }
  v12 = v10;
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v12).n128_u64[0];
  if ((v13 & 1) != 0)
    goto LABEL_9;
LABEL_10:
  if ((DOCNode.areDiskPropertiesSupported.getter(ObjectType) & 1) != 0)
    goto LABEL_11;
  v15 = (objc_class *)type metadata accessor for DOCDragInteraction();
  v16 = (char *)objc_allocWithZone(v15);
  *(_QWORD *)&v16[OBJC_IVAR____TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction_node] = a1;
  v24.receiver = v16;
  v24.super_class = v15;
  swift_unknownObjectRetain(a1);
  v17 = objc_msgSendSuper2(&v24, "initWithDelegate:", v2);
  v18 = sub_10006922C((uint64_t *)&unk_1006441A0);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1004D9B40;
  *(_QWORD *)(v19 + 32) = v17;
  v23 = v19;
  specialized Array._endMutation()(v19);
  v20 = v17;
  sub_10006922C((uint64_t *)&unk_100648450);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setInteractions:", isa, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

void sub_10022A208()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  int v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  UIMenuElementSize preferredElementSize;
  unsigned int v43;
  id v44;
  void *v45;
  void *v46;
  _BYTE *v47;
  _BYTE *v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  _BYTE *v58;
  uint64_t v59;
  id v60;
  Swift::String v61;
  UIMenu v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  objc_class *v67;
  uint64_t v68;
  id v69;
  id v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  id v74;
  void *v75;
  Swift::OpaquePointer v76;
  uint64_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  void *v85;
  UIMenuElementSize v86;
  UIImage_optional v87;

  v4 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if ((unint64_t)v5 >> 62)
    goto LABEL_37;
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_47:
    v56 = sub_100225990();
    objc_msgSend(v56, "setHidden:", 1);

    v57 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v57)
      objc_msgSend(v57, "setHidden:", 1);
    v58 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v58, "setHidden:", 1);

    v85 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v85, "setText:", 0);
    goto LABEL_50;
  }
  while (1)
  {
    v6 = *(_QWORD *)&v0[v4];
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v55 = *(_QWORD *)&v0[v4];
      else
        v55 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v0[v4]);
      if (!_CocoaArrayWrapper.endIndex.getter(v55))
      {
LABEL_46:
        swift_bridgeObjectRelease(v6);
        goto LABEL_47;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)&v0[v4]);
      if (!v7)
        goto LABEL_46;
    }
    if ((v6 & 0xC000000000000001) != 0)
    {
      v2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    }
    else
    {
      if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_53;
      }
      v2 = *(void **)(v6 + 32);
      swift_unknownObjectRetain(v2);
    }
    v84 = v0;
    swift_bridgeObjectRelease(v6);
    ObjectType = swift_getObjectType(v2);
    v9 = DOCNode.collaborationType.getter(ObjectType);
    if (v9 != 2)
      break;
    v17 = DOCNode.documentAttributes.getter(ObjectType);
    if (!v17)
      goto LABEL_26;
    v3 = v17;
    v18 = type metadata accessor for DOCAttributionPillView();
    v19 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
    v20 = objc_msgSend((id)v3, "sender");
    v79 = v19;
    sub_10028ADAC(v20);

    v6 = (uint64_t)v84;
    v21 = *(_QWORD *)&v84[v4];
    v22 = UIDocumentBrowserActionAvailabilityAttributionView;
    v23 = *(id *)&v84[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager];
    v24 = swift_bridgeObjectRetain(v21);
    v1 = (uint64_t)sub_100360954(v24, (uint64_t)v84, v22);

    swift_bridgeObjectRelease(v21);
    v86 = (UIMenuElementSize)_swiftEmptyArrayStorage;
    if (!((unint64_t)v1 >> 62))
    {
      v25 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v26 = v84;
      swift_bridgeObjectRetain(v1);
      if (!v25)
        goto LABEL_57;
      goto LABEL_16;
    }
LABEL_53:
    if (v1 < 0)
      v59 = v1;
    else
      v59 = v1 & 0xFFFFFFFFFFFFFF8;
    v60 = (id)v6;
    swift_bridgeObjectRetain(v1);
    v25 = _CocoaArrayWrapper.endIndex.getter(v59);
    if (!v25)
    {
LABEL_57:
      swift_bridgeObjectRelease(v1);
      preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
LABEL_58:
      swift_bridgeObjectRelease(v1);

      if ((unint64_t)preferredElementSize >> 62)
      {
        if (preferredElementSize < UIMenuElementSizeSmall)
          v63 = preferredElementSize;
        else
          v63 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(preferredElementSize);
        v64 = _CocoaArrayWrapper.endIndex.getter(v63);
        swift_bridgeObjectRelease(preferredElementSize);
        if (v64 < 1)
          goto LABEL_65;
LABEL_60:
        sub_10004F2F0(0, (unint64_t *)&qword_1006448A0, UIMenu_ptr);
        v61._countAndFlagsBits = 0;
        v61._object = (void *)0xE000000000000000;
        v87.value.super.isa = 0;
        v87.is_nil = 0;
        v62.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v61, (Swift::String_optional)0, v87, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v76).super.super.isa;
      }
      else
      {
        if (*(uint64_t *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
          goto LABEL_60;
LABEL_65:
        swift_bridgeObjectRelease(preferredElementSize);
        v62.super.super.isa = 0;
      }
      v65 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu;
      v66 = *(void **)&v79[OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu];
      *(UIMenu *)&v79[OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu] = v62;
      v67 = v62.super.super.isa;

      v68 = *(_QWORD *)&v79[v65];
      v14 = v79;
      objc_msgSend(v79, "setContextMenuInteractionEnabled:", v68 != 0);

      v16 = v84;
      objc_msgSend(v79, "addTarget:action:forControlEvents:", v84, "didTapAttributionView", 64);
LABEL_67:

      v69 = v14;
      v70 = sub_100225990();
      objc_msgSend(v70, "setHidden:", 0);

      v71 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
      objc_msgSend(v71, "setText:", 0);

      v72 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
      objc_msgSend(v72, "setHidden:", 1);

      v73 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView;
      objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView], "removeFromSuperview");
      v74 = sub_100225990();
      objc_msgSend(v74, "addArrangedSubview:", v69);
      swift_unknownObjectRelease(v2);

      v75 = *(void **)&v16[v73];
      *(_QWORD *)&v16[v73] = v69;

      return;
    }
LABEL_16:
    v77 = v3;
    v78 = v2;
    v83 = v1 & 0xC000000000000001;
    sub_10004F2F0(0, (unint64_t *)&qword_1006424C0, UIAction_ptr);
    v80 = v25;
    v3 = 4;
    v81 = v1;
    v82 = v4;
    v5 = (uint64_t)v84;
    while (1)
    {
      v27 = v83
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, v1)
          : (char *)*(id *)(v1 + 8 * v3);
      v0 = v27;
      v28 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v29 = *(_QWORD *)&v84[v4];
      swift_bridgeObjectRetain(v29);
      v30 = objc_msgSend(v0, "localizedTitle");
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      v34 = objc_msgSend(v0, "image");
      v2 = (void *)(2 * (objc_msgSend(v0, "actionStyle") == (id)1));
      v35 = swift_allocObject(&unk_1005D3768, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16);
      v36 = (_QWORD *)swift_allocObject(&unk_1005D3FF0, 40, 7);
      v36[2] = v35;
      v36[3] = v0;
      v36[4] = v29;
      v38 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v31, v33, 0, 0, v34, 0, 0, 0, v37, 0, v2, 0, sub_100232770, v36);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v40 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v39 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v40 >= v39 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
      v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
      specialized Array._endMutation()(v41);
      ++v3;
      v1 = v81;
      v4 = v82;
      if (v28 == v80)
      {
        swift_bridgeObjectRelease(v81);
        preferredElementSize = v86;
        v3 = v77;
        v2 = v78;
        goto LABEL_58;
      }
    }
    __break(1u);
LABEL_37:
    if (v5 < 0)
      v53 = v5;
    else
      v53 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v54 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease(v5);
    if (v54 != 1)
      goto LABEL_47;
  }
  if (v9 != 3)
  {
    v10 = objc_msgSend(v2, "fpfs_fpItem");
    if (v10)
    {
      v3 = (uint64_t)v10;
      v12 = FPItem.collaborationHighlight.getter(v11);
      if (v12)
      {
        v13 = (void *)v12;
        v14 = objc_msgSend(objc_allocWithZone((Class)SWAttributionView), "init");
        v15 = v13;
        objc_msgSend(v14, "setHighlight:", v15);

        v16 = v84;
        goto LABEL_67;
      }

    }
  }
LABEL_26:
  v43 = objc_msgSend(v2, "isShared");
  v44 = sub_100225990();
  v45 = v44;
  if (v43)
  {
    objc_msgSend(v44, "setHidden:", 0);

    v46 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v46)
      objc_msgSend(v46, "setHidden:", 1);
    v47 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v47, "setHidden:", 0);

    v48 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    DOCNode.localizedSharingStatusDescription(type:options:)(1, 0, ObjectType);
    if (v49)
      v50 = v49;
    else
      v50 = 0xE000000000000000;
    v85 = String._bridgeToObjectiveC()();
    objc_msgSend(v48, "setText:", v85, swift_bridgeObjectRelease(v50).n128_f64[0]);
    swift_unknownObjectRelease(v2);

  }
  else
  {
    objc_msgSend(v44, "setHidden:", 1);

    v51 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v51)
      objc_msgSend(v51, "setHidden:", 1);
    v52 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v52, "setHidden:", 1);

    v85 = sub_100223FF8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    objc_msgSend(v85, "setText:", 0);
    swift_unknownObjectRelease(v2);
  }
LABEL_50:

}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewWillLayoutSubviews()()
{
  void *v0;
  id v1;
  id v2;
  char v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v4 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_100224344, (uint64_t (*)(void))sub_100224530);
  v5 = v4;
  if ((v3 & 1) != 0)
    v6 = 1;
  else
    v6 = 2;
  objc_msgSend(v4, "setAlignment:", v6);

  v7 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_100224344, (uint64_t (*)(void))sub_100224530);
  v8 = v3 & 1;
  objc_msgSend(v7, "setAxis:", v8);

  v9 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_1002248D8, (uint64_t (*)(void))sub_1002248EC);
  objc_msgSend(v9, "setAlignment:", v6);

  v10 = sub_1002244D4(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_1002248D8, (uint64_t (*)(void))sub_1002248EC);
  objc_msgSend(v10, "setAxis:", v8);

}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidLayoutSubviews()()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char *v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23[24];
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v24, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    return;
  }
  v2 = v1;
  objc_msgSend(v1, "frame");
  v4 = v3;

  v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView], "layoutMargins");
  v7 = v4 - v6;
  objc_msgSend(*(id *)&v0[v5], "layoutMargins");
  v9 = v7 - v8;
  v10 = (char *)sub_100223EE0();
  v11 = &v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  *(_QWORD *)&v12 = swift_beginAccess(&v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], v23, 0, 0).n128_u64[0];
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    objc_msgSend(*(id *)(*(_QWORD *)v11 + 32), "fittingSize", v12);
    v14 = v13;

    if (v9 <= 0.0 || v9 == v14)
      return;
  }
  else
  {

    if (v9 <= 0.0)
      return;
  }
  v16 = (char *)sub_100223EE0();
  v17 = &v16[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  v18 = swift_beginAccess(&v16[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs], &v22, 0, 0).n128_u64[0];
  v19 = *(_QWORD *)v17;
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain(v19);
    v21 = 32;
    do
    {
      objc_msgSend(*(id *)(v19 + v21), "setFittingSize:", v9, v9);
      v21 += 16;
      --v20;
    }
    while (v20);
    v18 = swift_bridgeObjectRelease(v19).n128_u64[0];
  }
  objc_msgSend(v16, "invalidateIntrinsicContentSize", *(double *)&v18);

  sub_100227DA0(0);
}

uint64_t sub_10022AE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    else
      v11 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v2);
    if (v12 >= 2)
    {
LABEL_3:
      v3._object = (void *)0x800000010051B620;
      v4._countAndFlagsBits = 0x6D65744920756C25;
      v4._object = (void *)0xE900000000000073;
      v3._countAndFlagsBits = 0xD00000000000003ELL;
      v5 = DOCLocalizedDictionaryString(_:comment:)(v4, v3);
      v6 = sub_10006922C((uint64_t *)&unk_100644560);
      v7 = swift_allocObject(v6, 72, 7);
      *(_OWORD *)(v7 + 16) = xmmword_1004D9670;
      v8 = *(_QWORD *)(v0 + v1);
      if ((unint64_t)v8 >> 62)
      {
        if (v8 < 0)
          v19 = v8;
        else
          v19 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        v9 = _CocoaArrayWrapper.endIndex.getter(v19);
        swift_bridgeObjectRelease(v8);
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      *(_QWORD *)(v7 + 56) = &type metadata for Int;
      *(_QWORD *)(v7 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v7 + 32) = v9;
      countAndFlagsBits = static String.localizedStringWithFormat(_:_:)(v5._countAndFlagsBits, v5._object, v7);
      swift_bridgeObjectRelease(v5._object);
      swift_bridgeObjectRelease(v7);
      return countAndFlagsBits;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    goto LABEL_3;
  }
  v13 = *(_QWORD *)(v0 + v1);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v13);
    if (v14)
      goto LABEL_12;
LABEL_29:
    swift_bridgeObjectRelease(v13);
    return 0;
  }
  if (v13 < 0)
    v20 = *(_QWORD *)(v0 + v1);
  else
    v20 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  result = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!result)
    goto LABEL_29;
LABEL_12:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(void **)(v13 + 32);
    swift_unknownObjectRetain(v16);
LABEL_15:
    swift_bridgeObjectRelease(v13);
    swift_getObjectType(v16);
    if (!objc_msgSend(v16, "isRootItem"))
    {
      countAndFlagsBits = DOCNode.displayName(withHiddenPathExtension:)(0)._countAndFlagsBits;
      goto LABEL_19;
    }
    v17 = objc_msgSend(v16, "domainDisplayName");
    if (v17)
    {
      v18 = v17;
      countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);

LABEL_19:
      swift_unknownObjectRelease(v16);
      return countAndFlagsBits;
    }
    swift_unknownObjectRelease(v16);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10022B098(uint64_t a1, uint64_t a2)
{
  char v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  _BYTE *v15;
  id v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  if (!a2)
  {
    v15 = sub_100223F9C();
    v17 = 0;
LABEL_6:
    v18 = v17;
    objc_msgSend(v15, "setText:");
    goto LABEL_7;
  }
  v4 = sub_100225AB4();
  v5 = sub_100230E5C();
  sub_10039A274((uint64_t)v5, v4);
  v7 = v6;

  if (!v7)
  {
    v15 = sub_100223F9C();
    v17 = String._bridgeToObjectiveC()();
    goto LABEL_6;
  }
  String.wrappedInDirectionalIsolation(_:)(0, a1, a2);
  v9 = v8;
  v19 = v8;
  swift_bridgeObjectRetain(v8);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11 = objc_allocWithZone((Class)NSMutableAttributedString);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "initWithString:", v12, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v14 = objc_msgSend(v13, "length");
  v15 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v7);
  objc_msgSend(v13, "appendAttributedString:", v15);
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v13, "addAttribute:value:range:", NSForegroundColorAttributeName, v16, v14, 1);

  v18 = sub_100223F9C();
  objc_msgSend(v18, "setAttributedText:", v13);

LABEL_7:
}

id sub_10022B2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *object;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  Swift::String v35;
  Swift::String v36;

  v1 = type metadata accessor for UTType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v31 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    else
      v31 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v6);
    if (v32 != 1)
      return 0;
  }
  else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 0;
  }
  v7 = *(_QWORD *)(v0 + v5);
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_5;
    goto LABEL_25;
  }
  if (v7 < 0)
    v33 = v7;
  else
    v33 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v33);
  if (!result)
  {
LABEL_25:
    swift_bridgeObjectRelease(v7);
    return 0;
  }
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    v10 = *(void **)(v7 + 32);
    swift_unknownObjectRetain(v10);
  }
  v11 = swift_bridgeObjectRelease(v7);
  result = (id)_DocumentManagerBundle(v11);
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v12 = result;
  v35._countAndFlagsBits = 0xD000000000000058;
  v35._object = (void *)0x800000010051B5C0;
  v13._countAndFlagsBits = 0x656D756C6F56;
  v13._object = (void *)0xE600000000000000;
  v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v14.value._object = (void *)0xEB00000000656C62;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v35)._object;

  v17 = String.lowercased()();
  countAndFlagsBits = v17._countAndFlagsBits;
  v19 = v17._object;
  swift_bridgeObjectRelease(object);
  swift_getObjectType(v10, v20);
  if ((DOCNode.areDiskPropertiesSupported.getter() & 1) != 0)
    goto LABEL_13;
  swift_bridgeObjectRelease(v17._object);
  v21 = objc_msgSend(v10, "contentType");
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  countAndFlagsBits = UTType.localizedDescription.getter();
  v19 = v22;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v19)
    goto LABEL_13;
  result = (id)_DocumentManagerBundle(v23);
  if (result)
  {
    v24 = result;
    v36._object = (void *)0x80000001005105C0;
    v25._countAndFlagsBits = 0x746E656D75636F44;
    v25._object = (void *)0xE800000000000000;
    v26.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v26.value._object = (void *)0xEB00000000656C62;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v36._countAndFlagsBits = 0xD000000000000012;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v36);
    countAndFlagsBits = v28._countAndFlagsBits;
    v19 = v28._object;

LABEL_13:
    if ((objc_msgSend(v10, "isFolder") & 1) != 0)
    {
      swift_unknownObjectRelease(v10);
    }
    else
    {
      v29 = DOCNode.localizedSizeDescription()();
      v34[0] = countAndFlagsBits;
      v34[1] = v19;
      v30._countAndFlagsBits = 2108704;
      v30._object = (void *)0xE300000000000000;
      String.append(_:)(v30);
      String.append(_:)(v29);
      swift_unknownObjectRelease(v10);
      swift_bridgeObjectRelease(v29._object);
      return (id)v34[0];
    }
    return (id)countAndFlagsBits;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_10022B60C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  __n128 v10;
  unsigned int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    else
      v13 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes));
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    a1 = swift_bridgeObjectRelease(v3);
    if (v14 != 1)
      goto LABEL_28;
  }
  else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_28:
    v16 = (id)sub_100224530(a1);
    objc_msgSend(v16, "setHidden:", 1);

    return;
  }
  v4 = *(_QWORD *)(v1 + v2);
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + v2));
    if (v5)
      goto LABEL_5;
    goto LABEL_27;
  }
  if (v4 < 0)
    v15 = *(_QWORD *)(v1 + v2);
  else
    v15 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + v2));
  if (!_CocoaArrayWrapper.endIndex.getter(v15))
  {
LABEL_27:
    a1 = swift_bridgeObjectRelease(v4);
    goto LABEL_28;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v6 = *(void **)(v4 + 32);
    swift_unknownObjectRetain(v6);
  }
  if (objc_msgSend(v6, "isCloudItem", swift_bridgeObjectRelease(v4).n128_f64[0]))
    LODWORD(v7) = objc_msgSend(v6, "isDownloaded") ^ 1;
  else
    LODWORD(v7) = 0;
  v8 = (unsigned __int8 *)sub_100090C80(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_1002245D8);
  v9 = v8[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues];

  if ((v9 & 1) != 0)
    v11 = v7;
  else
    v11 = 1;
  if (v9 == 2)
    v7 = v7;
  else
    v7 = v11;
  v12 = (void *)sub_100224530(v10);
  objc_msgSend(v12, "setHidden:", v7);

  swift_unknownObjectRelease(v6);
}

Swift::Void __swiftcall DOCItemInfoContentViewController.doc_startPreheatIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) == 1)
    sub_100223050(v0);
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  void *v2;
  Swift::Bool is_nil;
  Class isa;
  objc_super v5;

  is_nil = to.is_nil;
  isa = to.value.super.super.super.isa;
  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v5, "viewDidMoveToWindow:shouldAppearOrDisappear:", isa, is_nil);
  if (isa)
    sub_100227DA0(0);
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  void **aBlock;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  void *v25;
  uint64_t v26;
  char v27[24];
  objc_super v28;

  v2 = v1;
  v28.receiver = v2;
  v28.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v28, "viewWillAppear:", a1);
  v4 = objc_msgSend(v2, "presentedViewController");
  if (v4)
  {
    v5 = v4;
    v6 = type metadata accessor for DOCPreviewController(0);
    v7 = (void *)swift_dynamicCastClass(v5, v6);
    if (v7)
    {
      v8 = objc_msgSend(v7, "transitionCoordinator");
      if (v8)
      {
        v9 = v8;
        v10 = (char *)sub_100223EE0();
        v11 = &v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
        swift_beginAccess(&v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden], v27, 1, 0);
        *v11 = 1;
        _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();

        if ((objc_msgSend(v9, "isAnimated") & 1) != 0)
        {
          if (objc_msgSend(v9, "isInteractive"))
          {
            v12 = swift_allocObject(&unk_1005D3808, 24, 7);
            *(_QWORD *)(v12 + 16) = v2;
            v25 = sub_10022F008;
            v26 = v12;
            aBlock = _NSConcreteStackBlock;
            v22 = 1107296256;
            v23 = sub_100018CC0;
            v24 = &unk_1005D3820;
            v13 = _Block_copy(&aBlock);
            v14 = v26;
            v15 = v2;
            objc_msgSend(v9, "notifyWhenInteractionChangesUsingBlock:", v13, swift_release(v14).n128_f64[0]);
          }
          else
          {
            v18 = swift_allocObject(&unk_1005D37B8, 24, 7);
            *(_QWORD *)(v18 + 16) = v2;
            v25 = sub_10022F000;
            v26 = v18;
            aBlock = _NSConcreteStackBlock;
            v22 = 1107296256;
            v23 = sub_100018CC0;
            v24 = &unk_1005D37D0;
            v13 = _Block_copy(&aBlock);
            v19 = v26;
            v20 = v2;
            objc_msgSend(v9, "animateAlongsideTransition:completion:", v13, 0, swift_release(v19).n128_f64[0]);
          }

          _Block_release(v13);
          swift_unknownObjectRelease(v9);
          goto LABEL_9;
        }
        swift_unknownObjectRelease(v9);
      }
    }

  }
LABEL_9:
  v16 = v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes];
  v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 1;
  if (v16 != 1)
  {
    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver];
    if (v17)
    {
      swift_retain();
      sub_100452690();
      swift_release(v17);
    }
  }
}

void sub_10022BBAC(void *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[5];
  uint64_t v9;

  if ((objc_msgSend(a1, "isCancelled") & 1) == 0)
  {
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_1005D3F28, 24, 7);
    *(_QWORD *)(v4 + 16) = a2;
    v8[4] = sub_1002325D4;
    v9 = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_10004A82C;
    v8[3] = &unk_1005D3F40;
    v5 = _Block_copy(v8);
    v6 = v9;
    v7 = a2;
    swift_release(v6);
    objc_msgSend(v3, "animateWithDuration:animations:", v5, 0.2);
    _Block_release(v5);
  }
}

void sub_10022BC88()
{
  char *v0;
  char *v1;
  char v2[24];

  v0 = (char *)sub_100223EE0();
  v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden], v2, 1, 0);
  *v1 = 0;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();

}

void sub_10022BCE4()
{
  char *v0;
  char *v1;
  char v2[24];

  v0 = (char *)sub_100223EE0();
  v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
  swift_beginAccess(&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden], v2, 1, 0);
  *v1 = 0;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();

}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  _BOOL8 v3;
  void *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType(v1);
  v3 = a1;
  objc_msgSendSuper2(&v8, "viewDidDisappear:", v3);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_tagViewController]);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", v3, 0);

  }
  v6 = v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes];
  v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver];
    if (v7)
    {
      swift_retain();
      sub_10045273C();
      swift_release(v7);
    }
  }
}

void sub_10022BEC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  void **v27;
  void *v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32[3];
  char v33[24];

  if (a1)
  {
    v5 = a2 + 16;
    swift_beginAccess(a2 + 16, v33, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (char *)Strong;
      v8 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
      v9 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
      v10 = a1;
      if (objc_msgSend(v9, "useSharedQuickLook")
        && (objc_msgSend(v10, "isFolder") & 1) == 0)
      {
        v11 = sub_10006922C((uint64_t *)&unk_1006441A0);
        v12 = swift_allocObject(v11, 40, 7);
        *(_OWORD *)(v12 + 16) = xmmword_1004D9B40;
        *(_QWORD *)(v12 + 32) = v10;
        v32[0] = v12;
        specialized Array._endMutation()(v12);
        v13 = v32[0];
        v14 = *(void **)&v7[v8];
        v15 = v10;
        v16 = objc_msgSend(v14, "sceneIdentifier");
        if (v16)
        {
          v17 = qword_1006411A8;
          v18 = v16;
          if (v17 != -1)
            swift_once(&qword_1006411A8, sub_100470A10);
          v19 = (void *)qword_100656EE0;
          v20 = objc_msgSend((id)qword_100656EE0, "objectForKey:", v18, v32[0]);
          if (!v20)
          {
            v21 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController(0));
            v20 = DOCPreviewController.init()();
            objc_msgSend(v19, "setObject:forKey:", v20, v18);
          }

          swift_bridgeObjectRetain(v13);
          v22 = sub_1001743BC((uint64_t)v15, v13);
          v24 = v23;
          swift_bridgeObjectRelease(v13);
          DOCPreviewController.set(_:defaultIndex:)(v13, 0, 0, v22, v24 & 1);

          swift_bridgeObjectRelease(v13);
        }
        else
        {
          v25 = *(id *)DOCLog.Source.unsafeMutableAddressor();
          v26 = static os_log_type_t.debug.getter(v25);
          os_log(_:dso:log:type:_:)("Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", 98, 2, &_mh_execute_header, v25, v26, _swiftEmptyArrayStorage);
          swift_bridgeObjectRelease(v32[0]);

        }
      }
      v27 = (void **)(a3 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
      swift_beginAccess(a3 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem, v32, 0, 0);
      v28 = *v27;
      if (*v27)
      {
        sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
        v29 = v28;
        v30 = (char *)v10;
        v31 = v29;
        static NSObject.== infix(_:_:)(v31, v30);

        v7 = v30;
      }

    }
  }
}

void sub_10022C174(uint64_t a1, uint64_t a2, void *a3, char *a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void **v30;
  void *v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void **v40;
  void *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  char *v63;
  void *v64;
  uint64_t v65;
  void *v66;
  char *v67;
  _QWORD aBlock[5];
  uint64_t v69;

  v67 = a4;
  v11 = sub_10006922C(&qword_100643470);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  if (a2)
  {
    v20 = swift_errorRetain(a2);
    v21 = a3;
    v22 = *(id *)DOCLog.UI.unsafeMutableAddressor(v20);
    v23 = static os_log_type_t.error.getter(v22);
    v24 = sub_10006922C((uint64_t *)&unk_100644560);
    v25 = swift_allocObject(v24, 112, 7);
    *(_OWORD *)(v25 + 16) = xmmword_1004D4CE0;
    *(_QWORD *)(v25 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v25 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
    *(_QWORD *)(v25 + 32) = v21;
    v26 = v21;
    v27 = _convertErrorToNSError(_:)(a2);
    v28 = v67;
    v29 = v27;
    *(_QWORD *)(v25 + 96) = sub_10004F2F0(0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v25 + 104) = sub_100083450((unint64_t *)&qword_1006448B0, (unint64_t *)&qword_100644570, NSError_ptr);
    *(_QWORD *)(v25 + 72) = v29;
    os_log(_:dso:log:type:_:)("[Interaction] Clearing lastOpenedItem: Got a nil url from fetchURL for item %@. error %@.", 89, 2, &_mh_execute_header, v22, v23, v25);

    swift_bridgeObjectRelease(v25);
    v30 = (void **)&v28[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess(&v28[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
    v31 = *v30;
    *v30 = 0;
    sub_1000AE638(v31);

    swift_errorRelease(a2);
  }
  else
  {
    v32 = (char *)&v62 - v19;
    v64 = a5;
    v65 = a6;
    v66 = a3;
    sub_1002320B8(a1, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      v33 = sub_100157D6C((uint64_t)v13);
      v34 = *(id *)DOCLog.UI.unsafeMutableAddressor(v33);
      v35 = static os_log_type_t.error.getter(v34);
      v36 = sub_10006922C((uint64_t *)&unk_100644560);
      v37 = swift_allocObject(v36, 72, 7);
      *(_OWORD *)(v37 + 16) = xmmword_1004D9670;
      *(_QWORD *)(v37 + 56) = sub_10004F2F0(0, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      *(_QWORD *)(v37 + 64) = sub_100083450((unint64_t *)&qword_100653000, (unint64_t *)&qword_1006419B0, FPItem_ptr);
      v38 = v66;
      *(_QWORD *)(v37 + 32) = v66;
      v39 = v38;

      swift_bridgeObjectRelease(v37);
      v40 = (void **)&v67[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess(&v67[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem], aBlock, 1, 0);
      v41 = *v40;
      *v40 = 0;
      sub_1000AE638(v41);

    }
    else
    {
      v42 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v63 = v32;
      v42(v32, v13, v14);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v32, v14);
      v43 = *(unsigned __int8 *)(v15 + 80);
      v44 = (v43 + 16) & ~v43;
      v45 = (v16 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
      v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
      v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
      v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      v49 = swift_allocObject(&unk_1005D3CF8, v48 + 72, v43 | 7);
      v42((char *)(v49 + v44), v17, v14);
      v50 = v66;
      *(_QWORD *)(v49 + v45) = v66;
      v51 = v64;
      *(_QWORD *)(v49 + v46) = v64;
      v52 = v67;
      *(_QWORD *)(v49 + v47) = v67;
      v53 = v49 + v48;
      v54 = v65;
      v55 = *(_OWORD *)(v65 + 48);
      *(_OWORD *)(v53 + 32) = *(_OWORD *)(v65 + 32);
      *(_OWORD *)(v53 + 48) = v55;
      *(_QWORD *)(v53 + 64) = *(_QWORD *)(v54 + 64);
      v56 = *(_OWORD *)(v54 + 16);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 16) = v56;
      aBlock[4] = sub_1002322E8;
      v69 = v49;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10004A82C;
      aBlock[3] = &unk_1005D3D10;
      v57 = _Block_copy(aBlock);
      v58 = v69;
      v59 = v50;
      v60 = v51;
      v61 = v52;
      sub_1001CF3C8((_QWORD *)v54);
      swift_release(v58);
      DOCRunInMainThread(v57);
      _Block_release(v57);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v63, v14);
    }
  }
}

